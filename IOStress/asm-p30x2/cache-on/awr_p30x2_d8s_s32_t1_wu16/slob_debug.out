
































PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.




PL/SQL procedure successfully completed.

PL/SQL procedure successfully completed.

PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


SQL*Plus: Release 19.0.0.0.0 - Production on Sat Feb 8 10:37:53 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.


SQL*Plus: Release 19.0.0.0.0 - Production on Sat Feb 8 10:37:53 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.

Last Successful login time: Sat Feb 08 2020 10:37:48 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5    6  Last Successful login time: Sat Feb 08 2020 10:37:48 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5    6  
   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		1 p30db1

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> 
   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		1 p30db1

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> 
Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report


Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report






Type Specified: html

Type Specified: text


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex

Using 3393773525 for database Id
Using	       1 for instance number
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex

Using 3393773525 for database Id
Using	       1 for instance number


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent

(n) days of snapshots being listed.  Pressing <return> without

specifying a number lists all completed snapshots.

Specify the number of days of snapshots to choose from

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.



Listing the last day's Completed Snapshots

Listing the last day's Completed Snapshots
Instance     DB Name	  Snap Id	Snap Started	Snap Level
------------ ------------ ---------- ------------------ ----------

p30db1	     P30DB		 48  08 Feb 2020 07:54	  1
				 49  08 Feb 2020 08:04	  1
				 50  08 Feb 2020 08:13	  1
				 51  08 Feb 2020 08:23	  1
				 52  08 Feb 2020 08:25	  1
				 53  08 Feb 2020 08:35	  1
				 54  08 Feb 2020 08:38	  1
				 55  08 Feb 2020 08:48	  1
				 56  08 Feb 2020 08:50	  1
				 57  08 Feb 2020 09:00	  1
				 58  08 Feb 2020 09:03	  1
				 59  08 Feb 2020 09:13	  1
Instance     DB Name	  Snap Id	Snap Started	Snap Level
------------ ------------ ---------- ------------------ ----------

p30db1	     P30DB		 48  08 Feb 2020 07:54	  1
				 49  08 Feb 2020 08:04	  1
				 50  08 Feb 2020 08:13	  1
				 51  08 Feb 2020 08:23	  1
				 52  08 Feb 2020 08:25	  1
				 53  08 Feb 2020 08:35	  1
				 54  08 Feb 2020 08:38	  1
				 55  08 Feb 2020 08:48	  1
				 56  08 Feb 2020 08:50	  1
				 57  08 Feb 2020 09:00	  1
				 58  08 Feb 2020 09:03	  1
				 59  08 Feb 2020 09:13	  1
				 60  08 Feb 2020 09:17	  1
				 61  08 Feb 2020 09:27	  1
				 62  08 Feb 2020 09:33	  1
				 63  08 Feb 2020 09:43	  1
				 64  08 Feb 2020 09:53	  1
				 65  08 Feb 2020 10:03	  1
				 66  08 Feb 2020 10:08	  1
				 67  08 Feb 2020 10:18	  1
				 68  08 Feb 2020 10:27	  1
				 69  08 Feb 2020 10:37	  1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 68

End   Snapshot Id specified: 69

				 60  08 Feb 2020 09:17	  1
				 61  08 Feb 2020 09:27	  1
				 62  08 Feb 2020 09:33	  1
				 63  08 Feb 2020 09:43	  1
				 64  08 Feb 2020 09:53	  1
				 65  08 Feb 2020 10:03	  1
				 66  08 Feb 2020 10:08	  1
				 67  08 Feb 2020 10:18	  1
				 68  08 Feb 2020 10:27	  1
				 69  08 Feb 2020 10:37	  1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 68

End   Snapshot Id specified: 69




Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_1_68_69.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.


Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_1_68_69.html.  To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr.txt

Using the report name awr.html

<html lang="en"><head><title>AWR Report for DB: P30DB, Inst: p30db1, Snaps: 68-69</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY report for

</h1>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">DB Name</th><th class="awrbg" scope="col">DB Id</th><th class="awrbg" scope="col">Unique Name</th><th class="awrbg" scope="col">Role</th><th class="awrbg" scope="col">Edition</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">RAC</th><th class="awrbg" scope="col">CDB</th></tr>
<tr><td scope="row" class='awrnc'>P30DB</td><td align="right" class='awrnc'>3393773525</td><td class='awrnc'>p30db</td><td class='awrnc'>PRIMARY</td><td class='awrnc'>EE</td><td class='awrnc'>19.0.0.0.0</td><td class='awrnc'>YES</td><td class='awrnc'>NO</td></tr>
</table>
<p />
<p />
<table border="0" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Inst Num</th><th class="awrbg" scope="col">Startup Time</th></tr>
<tr><td scope="row" class='awrnc'>p30db1</td><td align="right" class='awrnc'>1</td><td class='awrnc'>08-Feb-20 07:52</td></tr>
</table>
<p />
<p />
<table border="0" width="600" class="tdiff" summary="This table displays host information">
<tr><th class="awrbg" scope="col">Host Name</th><th class="awrbg" scope="col">Platform</th><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Memory (GB)</th></tr>
<tr><td scope="row" class='awrnc'>mcracpoc1.example.com</td><td class='awrnc'>Linux x86 64-bit</td><td align="right" class='awrnc'>   8</td><td align="right" class='awrnc'>   4</td><td align="right" class='awrnc'>	1</td><td align="right" class='awrnc'>	 31.40</td></tr>
</table>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays snapshot information">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Snap Id</th><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Sessions</th><th class="awrbg" scope="col">Cursors/Session</th><th class="awrbg" scope="col">Instances</th></tr>
<tr><td scope="row" class='awrnc'>Begin Snap:</td><td align="right" class='awrnc'>68</td><td align="center" class='awrnc'>08-Feb-20 10:27:31</td><td align="right" class='awrnc'>108</td><td align="right" class='awrnc'>      2.1</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>End Snap:</td><td align="right" class='awrc'>69</td><td align="center" class='awrc'>08-Feb-20 10:37:48</td><td align="right" class='awrc'>90</td><td align="right" class='awrc'>      1.4</td><td align="right" class='awrc'>2</td></tr>
<tr><td scope="row" class='awrnc'>Elapsed:</td><td class='awrnc'>&#160;</td><td align="center" class='awrnc'>		   10.29 (mins)</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB Time:</td><td class='awrc'>&#160;</td><td align="center" class='awrc'>	       180.13 (mins)</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>17.52</td><td align="right" class='awrc'>99.64</td><td scope="row" class='awrc'>ADDM:3393773525_1_69</td><td class='awrc'>08-Feb-20 10:27</td><td class='awrc'>08-Feb-20 10:37</td></tr>
<tr><td class='awrnc'>&quot;User I/O&quot; wait Class</td><td align="right" class='awrnc'>17.52</td><td align="right" class='awrnc'>75.41</td><td scope="row" class='awrnc'>ADDM:3393773525_1_69</td><td class='awrnc'>08-Feb-20 10:27</td><td class='awrnc'>08-Feb-20 10:37</td></tr>
<tr><td class='awrc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrc'>17.52</td><td align="right" class='awrc'>23.13</td><td scope="row" class='awrc'>ADDM:3393773525_1_69</td><td class='awrc'>08-Feb-20 10:27</td><td class='awrc'>08-Feb-20 10:37</td></tr>
<tr><td class='awrnc'>Buffer Busy - Hot Objects</td><td align="right" class='awrnc'>17.52</td><td align="right" class='awrnc'>7.11</td><td scope="row" class='awrnc'>ADDM:3393773525_1_69</td><td class='awrnc'>08-Feb-20 10:27</td><td class='awrnc'>08-Feb-20 10:37</td></tr>
<tr><td class='awrc'>Global Cache Messaging</td><td align="right" class='awrc'>17.52</td><td align="right" class='awrc'>5.10</td><td scope="row" class='awrc'>ADDM:3393773525_1_69</td><td class='awrc'>08-Feb-20 10:27</td><td class='awrc'>08-Feb-20 10:37</td></tr>
</table><p />
<p />Load Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays load profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th><th class="awrbg" scope="col">Per Exec</th><th class="awrbg" scope="col">Per Call</th></tr>
<tr><td scope="row" class='awrc'>DB Time(s):</td><td align="right" class='awrc'>	      17.5</td><td align="right" class='awrc'>		     0.2</td><td align="right" class='awrc'>	  0.03</td><td align="right" class='awrc'>     65.11</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU(s):</td><td align="right" class='awrnc'>		1.5</td><td align="right" class='awrnc'>	       0.0</td><td align="right" class='awrnc'>      0.00</td><td align="right" class='awrnc'>	    5.41</td></tr>
<tr><td scope="row" class='awrc'>Background CPU(s):</td><td align="right" class='awrc'> 	      0.8</td><td align="right" class='awrc'>		    0.0</td><td align="right" class='awrc'>	 0.00</td><td align="right" class='awrc'>      0.00</td></tr>
<tr><td scope="row" class='awrnc'>Redo size (bytes):</td><td align="right" class='awrnc'>	  992,138.7</td><td align="right" class='awrnc'>	  13,320.8</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logical read (blocks):</td><td align="right" class='awrc'>	     11,717.2</td><td align="right" class='awrc'>	      157.3</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Block changes:</td><td align="right" class='awrnc'>		2,917.2</td><td align="right" class='awrnc'>		  39.2</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Physical read (blocks):</td><td align="right" class='awrc'>	       6,889.4</td><td align="right" class='awrc'>		92.5</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Physical write (blocks):</td><td align="right" class='awrnc'> 	  1,148.9</td><td align="right" class='awrnc'>		    15.4</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO requests:</td><td align="right" class='awrc'>		 6,889.1</td><td align="right" class='awrc'>		  92.5</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO requests:</td><td align="right" class='awrnc'>	    1,091.6</td><td align="right" class='awrnc'>	      14.7</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO (MB):</td><td align="right" class='awrc'>		53.8</td><td align="right" class='awrc'>	       0.7</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO (MB):</td><td align="right" class='awrnc'>		    9.0</td><td align="right" class='awrnc'>		   0.1</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM scan rows:</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Session Logical Read IM:</td><td align="right" class='awrnc'> 	      0.0</td><td align="right" class='awrnc'>		     0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Global Cache blocks received:</td><td align="right" class='awrc'>	       207.0</td><td align="right" class='awrc'>	       2.8</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Global Cache blocks served:</td><td align="right" class='awrnc'>		29.3</td><td align="right" class='awrnc'>		0.4</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>User calls:</td><td align="right" class='awrc'>	       0.3</td><td align="right" class='awrc'>		     0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parses (SQL):</td><td align="right" class='awrnc'>		  38.8</td><td align="right" class='awrnc'>		  0.5</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Hard parses (SQL):</td><td align="right" class='awrc'> 	      0.3</td><td align="right" class='awrc'>		    0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL Work Area (MB):</td><td align="right" class='awrnc'>		 0.2</td><td align="right" class='awrnc'>		0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logons:</td><td align="right" class='awrc'>		   0.0</td><td align="right" class='awrc'>		 0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>User logons:</td><td align="right" class='awrnc'>		  0.0</td><td align="right" class='awrnc'>		 0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Executes (SQL):</td><td align="right" class='awrc'>		 537.5</td><td align="right" class='awrc'>		 7.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Rollbacks:</td><td align="right" class='awrnc'>		0.0</td><td align="right" class='awrnc'>	       0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Transactions:</td><td align="right" class='awrc'>		74.5</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
Instance Efficiency Percentages (Target 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays instance efficiency percentages">
<tr><td scope="row" class='awrc'>Buffer Nowait %:</td><td align="right" class='awrc'>		 99.50</td><td class='awrc'>Redo NoWait %:</td><td align="right" class='awrc'>		 100.00</td></tr>
<tr><td scope="row" class='awrnc'>Buffer  Hit	%:</td><td align="right" class='awrnc'> 	   41.20</td><td class='awrnc'>In-memory Sort %:</td><td align="right" class='awrnc'>		100.00</td></tr>
<tr><td scope="row" class='awrc'>Library Hit   %:</td><td align="right" class='awrc'>		 99.86</td><td class='awrc'>Soft Parse %:</td><td align="right" class='awrc'>		 99.30</td></tr>
<tr><td scope="row" class='awrnc'>Execute to Parse %:</td><td align="right" class='awrnc'>	      92.78</td><td class='awrnc'>Latch Hit %:</td><td align="right" class='awrnc'>	       99.87</td></tr>
<tr><td scope="row" class='awrc'>Parse CPU to Parse Elapsd %:</td><td align="right" class='awrc'>	     41.12</td><td class='awrc'>% Non-Parse CPU:</td><td align="right" class='awrc'>		99.94</td></tr>
<tr><td scope="row" class='awrnc'>Flash Cache Hit %:</td><td align="right" class='awrnc'>	      0.00</td></tr>
</table>

<p />Top 10 Foreground Events by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top 10 wait events by total wait time"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Wait Class</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>1,134,921</td><td align="right" class='awrc'>5214.4</td><td align="right" class='awrc'>4.59ms</td><td align="right" class='awrc'>48.2</td><td class='awrc'>User I/O</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>253,304</td><td align="right" class='awrnc'>2932.1</td><td align="right" class='awrnc'>11.58ms</td><td align="right" class='awrnc'>27.1</td><td class='awrnc'>User I/O</td></tr>
<tr><td scope="row" class='awrc'>DB CPU</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>898.1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>8.3</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>29,009</td><td align="right" class='awrnc'>747.4</td><td align="right" class='awrnc'>25.77ms</td><td align="right" class='awrnc'>6.9</td><td class='awrnc'>Concurrency</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>54,512</td><td align="right" class='awrc'>276.1</td><td align="right" class='awrc'>5.07ms</td><td align="right" class='awrc'>2.6</td><td class='awrc'>Other</td></tr>
<tr><td scope="row" class='awrnc'>enq: US - contention</td><td align="right" class='awrnc'>23,061</td><td align="right" class='awrnc'>218.1</td><td align="right" class='awrnc'>9.46ms</td><td align="right" class='awrnc'>2.0</td><td class='awrnc'>Other</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>258,460</td><td align="right" class='awrc'>169.6</td><td align="right" class='awrc'>656.32us</td><td align="right" class='awrc'>1.6</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block grant</td><td align="right" class='awrnc'>117,945</td><td align="right" class='awrnc'>157.8</td><td align="right" class='awrnc'>1.34ms</td><td align="right" class='awrnc'>1.5</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>193,594</td><td align="right" class='awrc'>129.5</td><td align="right" class='awrc'>669.06us</td><td align="right" class='awrc'>1.2</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>73,122</td><td align="right" class='awrnc'>92.8</td><td align="right" class='awrnc'>1.27ms</td><td align="right" class='awrnc'>.9</td><td class='awrnc'>Cluster</td></tr>
</table><p />
<p />Wait Classes by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays wait class statistics ordered by total wait time"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait Time</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>1,457,348</td><td align="right" class='awrc'>8,156</td><td align="right" class='awrc'>5.60ms</td><td align="right" class='awrc'>75.5</td><td align="right" class='awrc'>13.2</td></tr>
<tr><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>110,523</td><td align="right" class='awrnc'>1,197</td><td align="right" class='awrnc'>10.83ms</td><td align="right" class='awrnc'>11.1</td><td align="right" class='awrnc'>1.9</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>249,634</td><td align="right" class='awrc'>1,136</td><td align="right" class='awrc'>4.55ms</td><td align="right" class='awrc'>10.5</td><td align="right" class='awrc'>1.8</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>898</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>8.3</td><td align="right" class='awrnc'>1.5</td></tr>
<tr><td scope="row" class='awrc'>Concurrency</td><td align="right" class='awrc'>30,494</td><td align="right" class='awrc'>750</td><td align="right" class='awrc'>24.60ms</td><td align="right" class='awrc'>6.9</td><td align="right" class='awrc'>1.2</td></tr>
<tr><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>727,044</td><td align="right" class='awrnc'>649</td><td align="right" class='awrnc'>892.72us</td><td align="right" class='awrnc'>6.0</td><td align="right" class='awrnc'>1.1</td></tr>
<tr><td scope="row" class='awrc'>Configuration</td><td align="right" class='awrc'>601</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>18.75ms</td><td align="right" class='awrc'>.1</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Commit</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>36.62ms</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
<tr><td scope="row" class='awrc'>Application</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.98ms</td><td align="right" class='awrc'>.0</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Network</td><td align="right" class='awrnc'>526</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>69.64us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
</table><p />

Host CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays system load statistics">
<tr><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Load Average Begin</th><th class="awrbg" scope="col">Load Average End</th><th class="awrbg" scope="col">%User</th><th class="awrbg" scope="col">%System</th><th class="awrbg" scope="col">%WIO</th><th class="awrbg" scope="col">%Idle</th></tr>
<tr><td align="right" class='awrc'>    8</td><td align="right" class='awrc'>	4</td><td align="right" class='awrc'>	 1</td><td align="right" class='awrc'>	 7.32</td><td align="right" class='awrc'>   5.22</td><td align="right" class='awrc'>  10.9</td><td align="right" class='awrc'>	18.6</td><td align="right" class='awrc'>  38.1</td><td align="right" class='awrc'>  61.7</td></tr>
</table>
<p />
Instance CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays CPU usage and wait statistics">
<tr><th class="awrbg" scope="col">%Total CPU</th><th class="awrbg" scope="col">%Busy CPU</th><th class="awrbg" scope="col">%DB time waiting for CPU (Resource Manager)</th></tr>
<tr><td align="right" class='awrc'>	 29.9</td><td align="right" class='awrc'>      78.0</td><td align="right" class='awrc'>       0.0</td></tr>
</table>
<p />IO Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays IO profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Read+Write Per Second</th><th class="awrbg" scope="col">Read per Second</th><th class="awrbg" scope="col">Write Per Second</th></tr>
<tr><td scope="row" class='awrc'>Total Requests:</td><td align="right" class='awrc'>	       8,131.3</td><td align="right" class='awrc'>	     6,897.4</td><td align="right" class='awrc'>	   1,233.9</td></tr>
<tr><td scope="row" class='awrnc'>Database Requests:</td><td align="right" class='awrnc'>	    7,980.7</td><td align="right" class='awrnc'>	   6,889.1</td><td align="right" class='awrnc'> 	  1,091.6</td></tr>
<tr><td scope="row" class='awrc'>Optimized Requests:</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td><td align="right" class='awrc'>		   0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo Requests:</td><td align="right" class='awrnc'>		  140.7</td><td align="right" class='awrnc'>		   1.3</td><td align="right" class='awrnc'>		139.4</td></tr>
<tr><td scope="row" class='awrc'>Total (MB):</td><td align="right" class='awrc'>	      66.3</td><td align="right" class='awrc'>		    55.0</td><td align="right" class='awrc'>		  11.3</td></tr>
<tr><td scope="row" class='awrnc'>Database (MB):</td><td align="right" class='awrnc'>		   62.8</td><td align="right" class='awrnc'>		  53.8</td><td align="right" class='awrnc'>		  9.0</td></tr>
<tr><td scope="row" class='awrc'>Optimized Total (MB):</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo (MB):</td><td align="right" class='awrnc'>		3.0</td><td align="right" class='awrnc'>	       1.1</td><td align="right" class='awrnc'> 	      2.0</td></tr>
<tr><td scope="row" class='awrc'>Database (blocks):</td><td align="right" class='awrc'> 	  8,038.3</td><td align="right" class='awrc'>		6,889.4</td><td align="right" class='awrc'>	      1,148.9</td></tr>
<tr><td scope="row" class='awrnc'>Via Buffer Cache (blocks):</td><td align="right" class='awrnc'>	    8,038.0</td><td align="right" class='awrnc'>	   6,889.4</td><td align="right" class='awrnc'> 	  1,148.6</td></tr>
<tr><td scope="row" class='awrc'>Direct (blocks):</td><td align="right" class='awrc'>		    0.4</td><td align="right" class='awrc'>		  0.0</td><td align="right" class='awrc'>		0.4</td></tr>
</table>
<p />
Memory Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays memory statistics">
<tr><th class="awrbg" scope="col"> </th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Host Mem (MB):</td><td align="right" class='awrc'>    32,156.0</td><td align="right" class='awrc'>    32,156.0</td></tr>
<tr><td scope="row" class='awrnc'>SGA use (MB):</td><td align="right" class='awrnc'>	 9,664.0</td><td align="right" class='awrnc'>	  9,664.0</td></tr>
<tr><td scope="row" class='awrc'>PGA use (MB):</td><td align="right" class='awrc'>     1,503.1</td><td align="right" class='awrc'>     1,326.4</td></tr>
<tr><td scope="row" class='awrc'>% Host Mem used for SGA+PGA:</td><td align="right" class='awrc'>   34.73</td><td align="right" class='awrc'>	34.18</td></tr>
</table>
<p />
Cache Sizes
<p />
<table border="0" width="600" class="tdiff" summary="This table displays cache sizes and other statistics for
		    different types of cache">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th><th class="awrnobg" scope="col"></th></tr>
<tr><td scope="row" class='awrnc'>Buffer Cache:</td><td align="right" class='awrnc'>	 8,000M</td><td align="right" class='awrnc'>	 8,000M</td><td class='awrnc'>Std Block Size:</td><td align="right" class='awrnc'>	   8K</td></tr>
<tr><td scope="row" class='awrc'>Shared Pool Size:</td><td align="right" class='awrc'>	   1,105M</td><td align="right" class='awrc'>	  1,106M</td><td class='awrc'>Log Buffer:</td><td align="right" class='awrc'>	 20,612K</td></tr>
<tr><td scope="row" class='awrnc'>In-Memory Area:</td><td align="right" class='awrnc'>	       0M</td><td align="right" class='awrnc'>	       0M</td></tr>
</table>
<p />
Shared Pool Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays shared pool statistics">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Memory Usage %:</td><td align="right" class='awrc'>		84.34</td><td align="right" class='awrc'>	     83.19</td></tr>
<tr><td scope="row" class='awrnc'>% SQL with executions&gt;1:</td><td align="right" class='awrnc'>	      83.80</td><td align="right" class='awrnc'>	    83.56</td></tr>
<tr><td scope="row" class='awrc'>% Memory for SQL w/exec&gt;1:</td><td align="right" class='awrc'>	      84.76</td><td align="right" class='awrc'> 	   83.02</td></tr>
</table>
<p />
<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#21">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#22">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#23">Instance Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#24">IO Stats</a></li>
<li class="awr"><a class="awr" href="#25">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#26">Advisory Statistics</a></li>
<li class="awr"><a class="awr" href="#27">Wait Statistics</a></li>
<li class="awr"><a class="awr" href="#28">Undo Statistics</a></li>
<li class="awr"><a class="awr" href="#29">Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#30">Segment Statistics</a></li>
<li class="awr"><a class="awr" href="#31">Dictionary Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#32">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#33">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#39">Replication Statistics (GoldenGate, XStream)</a></li>
<li class="awr"><a class="awr" href="#34">Advanced Queuing</a></li>
<li class="awr"><a class="awr" href="#6700">Resource Limit Statistics</a></li>
<li class="awr"><a class="awr" href="#37">Shared Server Statistics</a></li>
<li class="awr"><a class="awr" href="#36">Initialization Parameters</a></li>
<li class="awr"><a class="awr" href="#42">Active Session History (ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99995">ADDM Reports</a></li>
</ul>
<h2 class="awr">
RAC Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<p />
<a class="awr" name="21"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1500">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#1600">Operating System Statistics</a></li>
<li class="awr"><a class="awr" href="#1610">Operating System Statistics - Detail</a></li>
<li class="awr"><a class="awr" href="#210">Foreground Wait Class</a></li>
<li class="awr"><a class="awr" href="#100">Foreground Wait Events</a></li>
<li class="awr"><a class="awr" href="#300">Background Wait Events</a></li>
<li class="awr"><a class="awr" href="#7400">Wait Event Histogram</a></li>
<li class="awr"><a class="awr" href="#7405">Wait Event Histogram (up to 64 us)</a></li>
<li class="awr"><a class="awr" href="#7410">Wait Event Histogram (up to 32 ms)</a></li>
<li class="awr"><a class="awr" href="#7420">Wait Event Histogram (up to 2 sec)</a></li>
<li class="awr"><a class="awr" href="#7430">Wait Event Histogram (up to 2 min)</a></li>
<li class="awr"><a class="awr" href="#7440">Wait Event Histogram (up to 1 hr)</a></li>
<li class="awr"><a class="awr" href="#5800">Service Statistics</a></li>
<li class="awr"><a class="awr" href="#5820">Service Wait Class Stats</a></li>
<li class="awr"><a class="awr" href="#5840">Top 10 Channel Waits</a></li>
<li class="awr"><a class="awr" href="#2310">Top Process Types by Wait Class</a></li>
<li class="awr"><a class="awr" href="#2320">Top Process Types by CPU Used</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1500"></a>
<h3 class="awr">Time Model Statistics</h3>
<ul>
<li class="awr">DB Time represents total time in user calls</li>
<li class="awr">DB CPU represents CPU time of foreground processes</li>
<li class="awr">Total CPU Time represents foreground and background processes</li>
<li class="awr">Statistics including the word "background" measure background process
   time, therefore do not contribute to the DB time statistic</li>
<li class="awr">Ordered by % of DB time in descending order, followed by Statistic Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays different time model statistics. For each statistic, time and % of DB time are displayed"><tr><th class="awrbg" scope="col">Statistic Name</th><th class="awrbg" scope="col">Time (s)</th><th class="awrbg" scope="col">% of  DB Time</th><th class="awrbg" scope="col">% of Total CPU Time</th></tr>
<tr><td scope="row" class='awrc'>sql execute elapsed time</td><td align="right" class='awrc'>10,807.43</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>898.09</td><td align="right" class='awrnc'>8.31</td><td align="right" class='awrnc'>66.07</td></tr>
<tr><td scope="row" class='awrc'>PL/SQL execution elapsed time</td><td align="right" class='awrc'>16.05</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>1.83</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>connection management call elapsed time</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>repeated bind elapsed time</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB time</td><td align="right" class='awrc'>10,807.83</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>background elapsed time</td><td align="right" class='awrnc'>2,067.43</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>background cpu time</td><td align="right" class='awrc'>461.27</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>33.93</td></tr>
<tr><td scope="row" class='awrnc'>total CPU time</td><td align="right" class='awrnc'>1,359.36</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1600"></a>
<h3 class="awr">Operating System Statistics</h3>
<ul>
<li class="awr"> *TIME statistic values are diffed.	 All others display actual values.  End Value is displayed if different </li>
<li class="awr"> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays operating systems statistics. For each statistic, actual value is displayed. If the end value is different, it is also displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>FREE_MEMORY_BYTES</td><td align="right" class='awrc'>5,510,602,752</td><td align="right" class='awrc'>5,875,994,624</td></tr>
<tr><td scope="row" class='awrnc'>INACTIVE_MEMORY_BYTES</td><td align="right" class='awrnc'>1,330,835,456</td><td align="right" class='awrnc'>1,330,499,584</td></tr>
<tr><td scope="row" class='awrc'>BUSY_TIME</td><td align="right" class='awrc'>174,172</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IDLE_TIME</td><td align="right" class='awrnc'>280,309</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IOWAIT_TIME</td><td align="right" class='awrc'>173,319</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SYS_TIME</td><td align="right" class='awrnc'>84,496</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>USER_TIME</td><td align="right" class='awrc'>49,466</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LOAD</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>5</td></tr>
<tr><td scope="row" class='awrc'>RSRC_MGR_CPU_WAIT_TIME</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PHYSICAL_MEMORY_BYTES</td><td align="right" class='awrnc'>33,717,977,088</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>NUM_CPUS</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>NUM_CPU_CORES</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>NUM_CPU_SOCKETS</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GLOBAL_RECEIVE_SIZE_MAX</td><td align="right" class='awrnc'>4,194,304</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GLOBAL_SEND_SIZE_MAX</td><td align="right" class='awrc'>1,048,576</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_RECEIVE_SIZE_DEFAULT</td><td align="right" class='awrnc'>87,380</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_RECEIVE_SIZE_MAX</td><td align="right" class='awrc'>6,291,456</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_RECEIVE_SIZE_MIN</td><td align="right" class='awrnc'>4,096</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_SEND_SIZE_DEFAULT</td><td align="right" class='awrc'>16,384</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_SEND_SIZE_MAX</td><td align="right" class='awrnc'>4,194,304</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_SEND_SIZE_MIN</td><td align="right" class='awrc'>4,096</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1610"></a>
<h3 class="awr">Operating System Statistics - Detail</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays some detailed operating systems statistics. load, % busy , % user, % sys, % idle, % iowait are displayed for begin and end snap time"><tr><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Load</th><th class="awrbg" scope="col">%busy</th><th class="awrbg" scope="col">%user</th><th class="awrbg" scope="col">%sys</th><th class="awrbg" scope="col">%idle</th><th class="awrbg" scope="col">%iowait</th></tr>
<tr><td scope="row" class='awrc'>08-Feb 10:27:31</td><td align="right" class='awrc'>7.32</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>08-Feb 10:37:48</td><td align="right" class='awrnc'>5.22</td><td align="right" class='awrnc'>38.32</td><td align="right" class='awrnc'>10.88</td><td align="right" class='awrnc'>18.59</td><td align="right" class='awrnc'>61.68</td><td align="right" class='awrnc'>38.14</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="210"></a>
<h3 class="awr">Foreground Wait Class</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> ordered by wait time desc, waits desc </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
<li class="awr">Captured Time accounts for	  102.2%  of Total DB time	10,807.83 (s)</li>
<li class="awr">Total FG Wait Time:	       10,150.07 (s)  DB CPU time:	   898.09 (s)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait class statistics"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">%DB time</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>1,388,801</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8,151</td><td align="right" class='awrc'>5.87ms</td><td align="right" class='awrc'>75.41</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>898</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>8.31</td></tr>
<tr><td scope="row" class='awrc'>Concurrency</td><td align="right" class='awrc'>29,343</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>749</td><td align="right" class='awrc'>25.52ms</td><td align="right" class='awrc'>6.93</td></tr>
<tr><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>724,071</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>644</td><td align="right" class='awrnc'>889.82us</td><td align="right" class='awrnc'>5.96</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>131,776</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>593</td><td align="right" class='awrc'>4.50ms</td><td align="right" class='awrc'>5.48</td></tr>
<tr><td scope="row" class='awrnc'>Configuration</td><td align="right" class='awrnc'>585</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>19.24ms</td><td align="right" class='awrnc'>0.10</td></tr>
<tr><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>1,126</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>2.08ms</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>Commit</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>36.62ms</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Network</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>13.69us</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Application</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="100"></a>
<h3 class="awr">Foreground Wait Events</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Foreground Wait Events and their wait statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% DB time</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>1,134,921</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5,214</td><td align="right" class='awrc'>4.59ms</td><td align="right" class='awrc'>24.68</td><td align="right" class='awrc'>48.25</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>253,304</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>2,932</td><td align="right" class='awrnc'>11.58ms</td><td align="right" class='awrnc'>5.51</td><td align="right" class='awrnc'>27.13</td></tr>
<tr><td scope="row" class='awrc'>buffer busy waits</td><td align="right" class='awrc'>29,009</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>747</td><td align="right" class='awrc'>25.77ms</td><td align="right" class='awrc'>0.63</td><td align="right" class='awrc'>6.92</td></tr>
<tr><td scope="row" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrnc'>54,512</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>276</td><td align="right" class='awrnc'>5.07ms</td><td align="right" class='awrnc'>1.19</td><td align="right" class='awrnc'>2.56</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>23,061</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>218</td><td align="right" class='awrc'>9.46ms</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>2.02</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>258,460</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>170</td><td align="right" class='awrnc'>656.32us</td><td align="right" class='awrnc'>5.62</td><td align="right" class='awrnc'>1.57</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block grant</td><td align="right" class='awrc'>117,945</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>158</td><td align="right" class='awrc'>1.34ms</td><td align="right" class='awrc'>2.56</td><td align="right" class='awrc'>1.46</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>193,594</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>130</td><td align="right" class='awrnc'>669.06us</td><td align="right" class='awrnc'>4.21</td><td align="right" class='awrnc'>1.20</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>73,122</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>93</td><td align="right" class='awrc'>1.27ms</td><td align="right" class='awrc'>1.59</td><td align="right" class='awrc'>0.86</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>21,648</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>85</td><td align="right" class='awrnc'>3.91ms</td><td align="right" class='awrnc'>0.47</td><td align="right" class='awrnc'>0.78</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>36,218</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>888.55us</td><td align="right" class='awrc'>0.79</td><td align="right" class='awrc'>0.30</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>15,537</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>1.96ms</td><td align="right" class='awrnc'>0.34</td><td align="right" class='awrnc'>0.28</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>14,662</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>732.18us</td><td align="right" class='awrc'>0.32</td><td align="right" class='awrc'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>enq: HW - contention</td><td align="right" class='awrnc'>396</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>22.00ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.08</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>5,269</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>1.05ms</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>12,902</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>406.98us</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>3,544</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>1.20ms</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>4,518</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>941.55us</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>516</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>5.32ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>Data file init write</td><td align="right" class='awrnc'>86</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>31.37ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>undo segment extension</td><td align="right" class='awrc'>189</td><td align="right" class='awrc'>99</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>13.47ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gcs drm freeze in enter server mode</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>100.67ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>580</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3.34ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gc current block lost</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>573.58ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>129</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>12.76ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>473</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3.30ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc cr block lost</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>661.19ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>row cache mutex</td><td align="right" class='awrnc'>278</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.57ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>db file single write</td><td align="right" class='awrc'>86</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>13.99ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>24.20ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>1,223</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>516.84us</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>1,841</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>313.08us</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc current block congested</td><td align="right" class='awrc'>133</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3.60ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: ges resource hash list</td><td align="right" class='awrnc'>1,278</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>364.28us</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>kfk: async disk IO</td><td align="right" class='awrc'>86</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.09ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>911</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>289.09us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>310</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>714.67us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>36.62ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CSS initialization</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.34ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges enter server mode</td><td align="right" class='awrnc'>12,713</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9.06us</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>150</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>586.01us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.37ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: undo global data</td><td align="right" class='awrc'>153</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>366.67us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>87</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>579.31us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.26ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>51</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>905.45us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>114</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>357.66us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>273</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>142.40us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>108</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>288.98us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>690.51us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>107</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>269.09us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>46</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>516.09us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>256</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>82.90us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>datafile move cleanup during resize</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>369.58us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>347.42us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>cursor: pin S</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.23ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>258</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>32.72us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>wait list latch free</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.26ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>820.33us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>direct path sync</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>109.49us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>547.63us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.21ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges ipc enter server mode</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8.87us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>name-service call wait</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>640.00us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>watchdog main loop</td><td align="right" class='awrc'>824</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>2,472</td><td align="right" class='awrc'>3000.02ms</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execution Msg</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.74ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Msg Fragment</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>462.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message from client</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>644.82us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="300"></a>
<h3 class="awr">Background Wait Events</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait events statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% bg time</th></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>31,033</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>984</td><td align="right" class='awrc'>31.70ms</td><td align="right" class='awrc'>0.67</td><td align="right" class='awrc'>47.58</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>26,602</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>434</td><td align="right" class='awrnc'>16.30ms</td><td align="right" class='awrnc'>0.58</td><td align="right" class='awrnc'>20.98</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>59,584</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>3.39ms</td><td align="right" class='awrc'>1.30</td><td align="right" class='awrc'>9.76</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>7,452</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>7.14ms</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>2.57</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>1,283</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>29.71ms</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>1.84</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>324</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>20.59ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.32</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>3,126</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>1.33ms</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.20</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>2,787</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>788.32us</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.11</td></tr>
<tr><td scope="row" class='awrc'>ASM IO for non-blocking poll</td><td align="right" class='awrc'>66,623</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>31.23us</td><td align="right" class='awrc'>1.45</td><td align="right" class='awrc'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>625</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2.87ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>409</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>4.32ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>44,266</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>32.40us</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>buffer busy waits</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>45.64ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>1,092</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1.24ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>gcs remastering wait for read latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>123.59ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>21.61ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>3,358</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>327.55us</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>39</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>27.27ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>1,404</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>616.22us</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>81.96ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>1,851</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>358.89us</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>312</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1.92ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>849</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>700.31us</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>1,147</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>516.60us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>262</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>2.23ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>69</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>15.62ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>35.48ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>165</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>3.21ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>792</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>648.19us</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>10,734</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>27.75us</td><td align="right" class='awrnc'>0.23</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>485</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>463.72us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>624</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>358.28us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>44</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.75ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>73</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.66ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>266</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>692.32us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>AQ: RAC AQ Network</td><td align="right" class='awrnc'>6,157</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>29.53us</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>6,702</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>26.33us</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>direct path write</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20.40ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>27.20ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>14,782</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9.64us</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>301</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>439.46us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>291</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>438.17us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>direct path write temp</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3.92ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>129</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>834.73us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>240</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>403.55us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>138</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>592.22us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>117</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>649.47us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: RO - fast object reuse</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.48ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>327</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>220.95us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>188</td><td align="right" class='awrnc'>80</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>381.70us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.03ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.28ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>LGWR wait for redo copy</td><td align="right" class='awrc'>82</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>506.87us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>468</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>76.90us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>row cache lock</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.33ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.07ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>421.93us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr disk read</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>738.36us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.31ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>623</td><td align="right" class='awrnc'>99</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>34.36us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>394.20us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>19.96ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data update</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>.96ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current multi block request</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.36ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block grant</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.08ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.46ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>.98ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5.88ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>145</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>74.72us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>880.00us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges inquiry response</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>948.40us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.56ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>.97ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>29</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>279.93us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>libcache interrupt action by LCK</td><td align="right" class='awrc'>1,074</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.96us</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5.98ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: WT - contention</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>843.43us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>direct path sync</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>128.14us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.10ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>177.03us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>463.18us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: TO - contention</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.64ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.19ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>library cache pin</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>836.60us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block congested</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.03ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>637.20us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>364.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: TT - contention</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>942.67us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>106.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>186.46us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>174.67us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.04ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>158.62us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: SM -  contention</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>820.00us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: TD - KTF dump entries</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>648.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges enter server mode</td><td align="right" class='awrnc'>88</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>13.59us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>rdbms ipc message</td><td align="right" class='awrc'>169,020</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>13,348</td><td align="right" class='awrc'>78.98ms</td><td align="right" class='awrc'>3.68</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Idle Wait</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10,214</td><td align="right" class='awrnc'>1134.92 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Space Manager: slave idle wait</td><td align="right" class='awrc'>3,641</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>9,832</td><td align="right" class='awrc'>2700.22ms</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>class slave wait</td><td align="right" class='awrnc'>8,120</td><td align="right" class='awrnc'>76</td><td align="right" class='awrnc'>5,150</td><td align="right" class='awrnc'>634.18ms</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>wait for unread message on broadcast channel</td><td align="right" class='awrc'>944</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>1,851</td><td align="right" class='awrc'>1960.34ms</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pmon timer</td><td align="right" class='awrnc'>412</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>1,236</td><td align="right" class='awrnc'>2999.91ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR sleep</td><td align="right" class='awrc'>4,108</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,233</td><td align="right" class='awrc'>300.10ms</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DIAG idle wait</td><td align="right" class='awrnc'>7,710</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>1,231</td><td align="right" class='awrnc'>159.72ms</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs yield cpu</td><td align="right" class='awrc'>42,597</td><td align="right" class='awrc'>99</td><td align="right" class='awrc'>1,226</td><td align="right" class='awrc'>28.79ms</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges remote message</td><td align="right" class='awrnc'>195,276</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,218</td><td align="right" class='awrnc'>6.24ms</td><td align="right" class='awrnc'>4.25</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remote message</td><td align="right" class='awrc'>1,115,508</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,081</td><td align="right" class='awrc'>.97ms</td><td align="right" class='awrc'>24.26</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>smon timer</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>671</td><td align="right" class='awrnc'>30.51 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PING</td><td align="right" class='awrc'>564</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>620</td><td align="right" class='awrc'>1099.83ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM cluster membership changes</td><td align="right" class='awrnc'>354</td><td align="right" class='awrnc'>82</td><td align="right" class='awrnc'>620</td><td align="right" class='awrnc'>1750.34ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM background timer</td><td align="right" class='awrc'>2,118</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>618</td><td align="right" class='awrc'>291.85ms</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>OFS idle</td><td align="right" class='awrnc'>206</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>618</td><td align="right" class='awrnc'>3000.02ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pman timer</td><td align="right" class='awrc'>206</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>618</td><td align="right" class='awrc'>2999.68ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat redo informer</td><td align="right" class='awrnc'>617</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>617</td><td align="right" class='awrnc'>1000.15ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>617</td><td align="right" class='awrc'>61.68 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>616</td><td align="right" class='awrnc'>13.69 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>616</td><td align="right" class='awrc'>26.78 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SCM slave idle</td><td align="right" class='awrnc'>6,176</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>616</td><td align="right" class='awrnc'>99.69ms</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lreg timer</td><td align="right" class='awrc'>205</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>616</td><td align="right" class='awrc'>3002.53ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher timer</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>60.01 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQPC idle</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>30.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Gap Manager</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>60.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Data Guard: Timer</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>600.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group idle</td><td align="right" class='awrnc'>14,499</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>189</td><td align="right" class='awrnc'>13.05ms</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq Credit: send blkd</td><td align="right" class='awrc'>65</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>663.29us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execute Reply</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.86ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Parse Reply</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.92ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>RMA: IPC0 completion sync</td><td align="right" class='awrnc'>670</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>25.24us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message from client</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>526.47us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7400"></a>
<h3 class="awr">Wait Event Histogram</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (idle events last)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Total Waits</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&lt;128us">&lt;128us</th><th class="awrbg" scope="col" id="&lt;256us">&lt;256us</th><th class="awrbg" scope="col" id="&lt;512us">&lt;512us</th><th class="awrbg" scope="col" id="&gt;=512us">&gt;=512us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>6141</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>83.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>66.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>63.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>22.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.6</td></tr>
<tr><td scope="row" class='awrc'>ASM background starting</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>3326</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>11.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>39.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>17.9</td></tr>
<tr><td scope="row" class='awrc'>AWR Flush</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>6684</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>76.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>CSS initialization</td><td align="right" class='awrc'>32</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>40.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>86</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>76.7</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>27.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>72.2</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>96</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>67.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>16.7</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>266</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>45.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>54.1</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>64</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>65.6</td></tr>
<tr><td scope="row" class='awrnc'>Data file init write</td><td align="right" class='awrnc'>82</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>889</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>39.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>17.3</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>579</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>2.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>13.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>32.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>3.6</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>27.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>77.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>1845</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>12.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>19.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>24.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>13.7</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>469</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>37.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>38.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.4</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>628</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>82.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>1.0</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>1408</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>24.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>40.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>8.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>11.8</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>1578</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>16.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>22.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>37.6</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>1288</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>26.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>98.6</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>81</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>4.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>14.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>18.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>30.9</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>7419</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>94.8</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>391</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>41.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>24.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>6.1</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>92.3</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>53.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>30.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>7.7</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>42.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>14.3</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>10.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>80.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.2</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>57</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>75.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>21.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>54</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>44.4</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>90.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>28.9K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>91.9</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>446</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>4209</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>33.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>30.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>13.3</td></tr>
<tr><td scope="row" class='awrc'>cursor: pin S</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>datafile move cleanup during resize</td><td align="right" class='awrnc'>41</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>19.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>65.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>14.6</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>14.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>93.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>252.3K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>98.0</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>59.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>9.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>55.2</td></tr>
<tr><td scope="row" class='awrnc'>db file scattered read</td><td align="right" class='awrnc'>44</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>22.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>52.3</td></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>1.1M</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>37.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>61.4</td></tr>
<tr><td scope="row" class='awrnc'>db file single write</td><td align="right" class='awrnc'>82</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>direct path sync</td><td align="right" class='awrc'>82</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>79.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>17.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path write</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>direct path write temp</td><td align="right" class='awrc'>30</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>121</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>89.3</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>54.8K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>17.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>82.5</td></tr>
<tr><td scope="row" class='awrnc'>enq: DW - contention</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: FB - contention</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>66.7</td></tr>
<tr><td scope="row" class='awrnc'>enq: HW - contention</td><td align="right" class='awrnc'>392</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>6.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>83.2</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>75.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: PW - flush prewarm buffers</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>30</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>66.7</td></tr>
<tr><td scope="row" class='awrnc'>enq: SM -  contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TA - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TK - Auto Task Serialization</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TO - contention</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: TT - contention</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>66.7</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>22.9K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>9.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>63.9</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>14</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>92.9</td></tr>
<tr><td scope="row" class='awrc'>enq: WT - contention</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>85.7</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>5868</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>29.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>69.6</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>36</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block lost</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr disk read</td><td align="right" class='awrc'>33</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>54.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>39.4</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>192.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>45.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>49.4</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>3543</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>13.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>86.2</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>471</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block grant</td><td align="right" class='awrc'>117.3K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>97.2</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>15.4K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>99.2</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>36.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>82.7</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>14.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>34.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>64.0</td></tr>
<tr><td scope="row" class='awrc'>gc current block congested</td><td align="right" class='awrc'>133</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current block lost</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>256.8K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>47.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>47.8</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>5367</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>83.0</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>578</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>99.8</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>72.9K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>96.6</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gcs drm freeze in enter server mode</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>1652</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>16.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>14.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>17.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>40.3</td></tr>
<tr><td scope="row" class='awrnc'>gcs remastering wait for read latch</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>80.0</td></tr>
<tr><td scope="row" class='awrc'>ges enter server mode</td><td align="right" class='awrc'>12.8K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>94.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>51</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>23.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>74.5</td></tr>
<tr><td scope="row" class='awrc'>ges ipc enter server mode</td><td align="right" class='awrc'>288</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>83.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrnc'>35</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>94.3</td></tr>
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>26.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>23.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>3.3</td></tr>
<tr><td scope="row" class='awrc'>kfk: async disk IO</td><td align="right" class='awrc'>82</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>23.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>58.5</td></tr>
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>291</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>14.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>17.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>38.8</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>44.2K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>86.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.3</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>2966</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>18.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>18.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>22.1</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA shared context root latch</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>54</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>25.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>33.3</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>590</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>17.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>19.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>26.4</td></tr>
<tr><td scope="row" class='awrnc'>latch: call allocation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>36.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>9.1</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>13.3K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>22.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>22.0</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>360</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>19.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>19.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>37.2</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>450</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>14.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>17.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>23.8</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>1507</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>19.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>21.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>18.1</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>29</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>24.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>13.8</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>92</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>22.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>40.2</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>174</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>17.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>23.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>22.4</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>27.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>36.4</td></tr>
<tr><td scope="row" class='awrnc'>latch: shared pool</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: undo global data</td><td align="right" class='awrc'>146</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>25.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>17.1</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>1075</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>95.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache lock</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>library cache pin</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>lock deadlock retry</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>31K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>312</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>15.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>61.9</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>name-service call wait</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>oracle thread bootstrap</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>os thread creation</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>21.8K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>row cache lock</td><td align="right" class='awrc'>23</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>91.3</td></tr>
<tr><td scope="row" class='awrnc'>row cache mutex</td><td align="right" class='awrnc'>276</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>52.5</td></tr>
<tr><td scope="row" class='awrc'>undo segment extension</td><td align="right" class='awrc'>189</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>18.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>66.7</td></tr>
<tr><td scope="row" class='awrnc'>undo_retention publish retry</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>wait list latch free</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>AQPC idle</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>ASM background timer</td><td align="right" class='awrc'>2088</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>82.7</td></tr>
<tr><td scope="row" class='awrnc'>ASM cluster membership changes</td><td align="right" class='awrnc'>352</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>DIAG idle wait</td><td align="right" class='awrc'>7695</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>97.5</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Gap Manager</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>Data Guard: Timer</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>GCR sleep</td><td align="right" class='awrnc'>4098</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group idle</td><td align="right" class='awrc'>14.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>13.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>19.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>33.8</td></tr>
<tr><td scope="row" class='awrnc'>OFS idle</td><td align="right" class='awrnc'>205</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>PING</td><td align="right" class='awrc'>564</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>21.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>34.9</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq Credit: send blkd</td><td align="right" class='awrnc'>65</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>75.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>23.1</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Execute Reply</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>84.6</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execution Msg</td><td align="right" class='awrnc'>24</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>87.5</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Msg Fragment</td><td align="right" class='awrc'>60</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>6.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>11.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>28.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>46.7</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Parse Reply</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>76.9</td></tr>
<tr><td scope="row" class='awrc'>PX Idle Wait</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>RMA: IPC0 completion sync</td><td align="right" class='awrc'>670</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>32.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>56.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.3</td></tr>
<tr><td scope="row" class='awrnc'>SCM slave idle</td><td align="right" class='awrnc'>6160</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message from client</td><td align="right" class='awrc'>57</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>33.3</td></tr>
<tr><td scope="row" class='awrnc'>Space Manager: slave idle wait</td><td align="right" class='awrnc'>3601</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>86.5</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrc'>45</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>2.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>31.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>13.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>53.3</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrnc'>23</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>4.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>95.7</td></tr>
<tr><td scope="row" class='awrc'>class slave wait</td><td align="right" class='awrc'>8082</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>89.6</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher timer</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gcs remote message</td><td align="right" class='awrc'>1.1M</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>14.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>21.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>37.2</td></tr>
<tr><td scope="row" class='awrnc'>gcs yield cpu</td><td align="right" class='awrnc'>42.4K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>96.6</td></tr>
<tr><td scope="row" class='awrc'>ges remote message</td><td align="right" class='awrc'>194.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>67.9</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat monitor sleep</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>33.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat redo informer</td><td align="right" class='awrc'>615</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>lreg timer</td><td align="right" class='awrnc'>205</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>pman timer</td><td align="right" class='awrc'>205</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>pmon timer</td><td align="right" class='awrnc'>410</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>rdbms ipc message</td><td align="right" class='awrc'>168.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>10.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>73.5</td></tr>
<tr><td scope="row" class='awrnc'>smon timer</td><td align="right" class='awrnc'>22</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>90.9</td></tr>
<tr><td scope="row" class='awrc'>wait for unread message on broadcast channel</td><td align="right" class='awrc'>943</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>watchdog main loop</td><td align="right" class='awrnc'>820</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7405"></a>
<h3 class="awr">Wait Event Histogram (up to 64 us)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds  </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1us  - 64us</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&gt;=64us">&gt;=64us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>5844</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>83.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>4.8</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>61.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>63.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>22.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>7.1</td></tr>
<tr><td scope="row" class='awrc'>ASM background starting</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>2119</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>39.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>36.3</td></tr>
<tr><td scope="row" class='awrc'>AWR Flush</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>6432</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>76.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>3.8</td></tr>
<tr><td scope="row" class='awrc'>CSS initialization</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>40.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>53.1</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>77.9</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>80</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>67.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>16.7</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>15</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>76.6</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>184</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>13.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>68.2</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group query</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>27.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group update</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>77.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>519</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>12.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>71.9</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>242</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>37.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>48.4</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>589</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>82.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>6.2</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>387</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>24.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>72.5</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>426</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>73.0</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>33</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>84.0</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>92</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>98.8</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>348</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>41.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>24.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>11.0</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>53.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>46.2</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>66.7</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>10.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>80.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>4.0</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message to client</td><td align="right" class='awrnc'>56</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>75.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>21.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>1.8</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>23</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>57.4</td></tr>
<tr><td scope="row" class='awrnc'>asynch descriptor resize</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>90.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>4.8</td></tr>
<tr><td scope="row" class='awrc'>buffer busy waits</td><td align="right" class='awrc'>381</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>98.7</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>852</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>79.8</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>14.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>92.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>1.6</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>5884</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>90.1</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>70</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
<tr><td scope="row" class='awrnc'>enq: HW - contention</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>98.7</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>1316</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>94.2</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.8</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>670</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.7</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.9</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block grant</td><td align="right" class='awrc'>34</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>33</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>24</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.8</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>1007</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.6</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.8</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>38</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>184</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>88.9</td></tr>
<tr><td scope="row" class='awrc'>gcs remastering wait for read latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>90.0</td></tr>
<tr><td scope="row" class='awrnc'>ges enter server mode</td><td align="right" class='awrnc'>12.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>94.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>.7</td></tr>
<tr><td scope="row" class='awrc'>ges inquiry response</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>98.0</td></tr>
<tr><td scope="row" class='awrnc'>ges ipc enter server mode</td><td align="right" class='awrnc'>285</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>1.0</td></tr>
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" class='awrnc'>11</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>26.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>63.3</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>112</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>14.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>61.5</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>41.1K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>86.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>6.8</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>607</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>79.5</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>85.2</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>105</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>82.2</td></tr>
<tr><td scope="row" class='awrnc'>latch: checkpoint queue latch</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>36.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>63.6</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>2312</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>82.6</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>46</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>87.2</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>116</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>11.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>74.2</td></tr>
<tr><td scope="row" class='awrnc'>latch: ges resource hash list</td><td align="right" class='awrnc'>324</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>78.5</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>20.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>13.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>62.1</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>92.4</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>37</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>78.7</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo writing</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>90.9</td></tr>
<tr><td scope="row" class='awrc'>latch: undo global data</td><td align="right" class='awrc'>28</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>80.8</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>1070</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>86.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>.5</td></tr>
<tr><td scope="row" class='awrc'>lock deadlock retry</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>57</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>15.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>81.7</td></tr>
<tr><td scope="row" class='awrc'>row cache mutex</td><td align="right" class='awrc'>97</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>64.9</td></tr>
<tr><td scope="row" class='awrnc'>undo segment extension</td><td align="right" class='awrnc'>57</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>18.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>69.8</td></tr>
<tr><td scope="row" class='awrc'>undo_retention publish retry</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7410"></a>
<h3 class="awr">Wait Event Histogram (up to 32 ms)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds,	ms is 1024 microseconds (approximately 1 millisecond) </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1ms  to 32ms</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms">&lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms">&lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&gt;=32ms">&gt;=32ms</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>389</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>577</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>82.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.6</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS initialization</td><td align="right" class='awrc'>16</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>66</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>23.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>55.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>27.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>65.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>35.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>16</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>83.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>144</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>45.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>37.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>35</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>34.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>48.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>10.9</td></tr>
<tr><td scope="row" class='awrnc'>Data file init write</td><td align="right" class='awrnc'>44</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>25.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>28.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>46.3</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>154</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>82.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>12.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>96.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>253</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>86.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>165</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>88.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>575</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>62.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>14.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>10.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>1.1</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>855</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>28.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>24.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>33.6</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>21.9K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>1.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>24.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>19.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>16.1</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>25</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>69.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>19.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>6783</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>5.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>43.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>25.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>3.4</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>24</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>93.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>7.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>38.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>92.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>85.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>55.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>7.4</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>18.5</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>21.4K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>8.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>19.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>20.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>22.6</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>17.9</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>370</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>37.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>14.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>16.6</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>17.0</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>559</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>86.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>cursor: pin S</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>datafile move cleanup during resize</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>85.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>20</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>217.1K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>2.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>32.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>12.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>12.0</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>32.1K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>44.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>6.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>1.1</td></tr>
<tr><td scope="row" class='awrnc'>db file scattered read</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>47.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>6.8</td></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>656.2K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>38.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>17.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>5.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>3.4</td></tr>
<tr><td scope="row" class='awrnc'>db file single write</td><td align="right" class='awrnc'>76</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>22.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>28.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>26.8</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>7.3</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>25.0</td></tr>
<tr><td scope="row" class='awrnc'>direct path write temp</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>53.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>46.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>107</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>10.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>70.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>14.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.8</td></tr>
<tr><td scope="row" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrnc'>43.9K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>17.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>46.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>2.4</td></tr>
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>281</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>16.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>9.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>16.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>18.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>15.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>11.5</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: PW - flush prewarm buffers</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: RO - fast object reuse</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>26.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>3.3</td></tr>
<tr><td scope="row" class='awrc'>enq: SM -  contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TK - Auto Task Serialization</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TO - contention</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TT - contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>13.5K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>36.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>19.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>5.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>7.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: WT - contention</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>14.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>57.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>25.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>4082</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>30.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>48.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>14.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>22</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>30.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>38.9</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>53.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr disk read</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>60.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>21.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>95.1K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>36.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>3052</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>13.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>55.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>22.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant congested</td><td align="right" class='awrc'>471</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>29.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>49.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block grant</td><td align="right" class='awrnc'>114K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>2.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>43.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>42.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>9.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>15.3K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>53.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>21.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>30.2K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>17.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>60.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>9433</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>36.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>49.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>133</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>55.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>21.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>122.7K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>52.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>35.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>4453</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>17.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>54.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>577</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>29.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>50.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>14.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>70.4K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>3.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>44.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>41.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>666</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>59.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remastering wait for read latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>70.0</td></tr>
<tr><td scope="row" class='awrnc'>ges enter server mode</td><td align="right" class='awrnc'>15</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges inquiry response</td><td align="right" class='awrc'>38</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>25.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrnc'>31</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>5.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>25.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>5.7</td></tr>
<tr><td scope="row" class='awrc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>96.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kfk: async disk IO</td><td align="right" class='awrnc'>46</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>41.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>19.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>14.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>7.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>2.4</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>113</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>61.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>28.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>115</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>655</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>77.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>12.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>66.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>20.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>156</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>73.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>17.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: checkpoint queue latch</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>90.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>2928</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>78.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>134</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>62.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>107</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>76.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>14.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: ges resource hash list</td><td align="right" class='awrnc'>273</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>81.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>86.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>37</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>59.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>27.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>39</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>77.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>17.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo writing</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>63.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: undo global data</td><td align="right" class='awrc'>25</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>82.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>80.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>18.5K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>9.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>19.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>29.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>40.3</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>192</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>38.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>23.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>15.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>14.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.3</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>name-service call wait</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>oracle thread bootstrap</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>33.3</td></tr>
<tr><td scope="row" class='awrc'>os thread creation</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>21.7K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>69.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>26.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.2</td></tr>
<tr><td scope="row" class='awrc'>row cache lock</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>8.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>43.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>30.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>row cache mutex</td><td align="right" class='awrnc'>145</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>47.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>42.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo segment extension</td><td align="right" class='awrc'>107</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>33.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>21.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>10.1</td></tr>
<tr><td scope="row" class='awrnc'>wait list latch free</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7420"></a>
<h3 class="awr">Wait Event Histogram (up to 2 sec)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 ms is milliseconds    s is 1024 milliseconds (approximately 1 second) </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 64ms  to 2s</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms">&lt;64ms</th><th class="awrbg" scope="col" id="&lt;1/8s">&lt;1/8s</th><th class="awrbg" scope="col" id="&lt;1/4s">&lt;1/4s</th><th class="awrbg" scope="col" id="&lt;1/2s">&lt;1/2s</th><th class="awrbg" scope="col" id="&lt;1s">  &lt;1s</th><th class="awrbg" scope="col" id="&lt;2s">  &lt;2s</th><th class="awrbg" scope="col" id="&gt;=2s">&gt;=2s</th></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>20</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>89.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Data file init write</td><td align="right" class='awrc'>38</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>53.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>45.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>98.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>433</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>66.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>25.2</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>4269</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>83.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>253</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>96.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>81.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>5194</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>82.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>76</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>83.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>12.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file parallel read</td><td align="right" class='awrc'>30.2K</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>88.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>669</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>98.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>93.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>38.9K</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>96.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file single write</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>92.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path write</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>75.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrnc'>1305</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>97.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>45</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>88.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: RO - fast object reuse</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>96.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>1137</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>95.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>75.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>61.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>30.6</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block lost</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block grant</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block lost</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs drm freeze in enter server mode</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>90.5</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remastering wait for read latch</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>30.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>94.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kfk: async disk IO</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>97.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>12.5K</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>59.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>32.6</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>66.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>45</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo segment extension</td><td align="right" class='awrc'>19</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>89.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7430"></a>
<h3 class="awr">Wait Event Histogram (up to 2 min)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7440"></a>
<h3 class="awr">Wait Event Histogram (up to 1 hr)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5800"></a>
<h3 class="awr">Service Statistics</h3>
<ul>
<li class="awr"> ordered by DB Time</li>
</ul>
<table border="0" class="tdiff" summary="This table displays service statistics. It displays service names and corresponding DB time, DB CPU, Physical reads, logical reads."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">DB Time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">Physical Reads (K)</th><th class="awrbg" scope="col">Logical Reads (K)</th></tr>
<tr><td scope="row" class='awrc'>p30db.example.com</td><td align="right" class='awrc'>10,779</td><td align="right" class='awrc'>895</td><td align="right" class='awrc'>4,230</td><td align="right" class='awrc'>7,101</td></tr>
<tr><td scope="row" class='awrnc'>SYS$BACKGROUND</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>95</td></tr>
<tr><td scope="row" class='awrc'>SYS$USERS</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>p30dbXDB</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5820"></a>
<h3 class="awr">Service Wait Class Stats</h3>
<ul>
<li class="awr"> Wait Class info for services in the Service Statistics section.  </li>
<li class="awr"> Total Waits and Time Waited displayed for the following wait	  classes:  User I/O, Concurrency, Administrative, Network </li>
<li class="awr"> Time Waited (Wt Time) in seconds</li>
</ul>
<table border="0" class="tdiff" summary="This table displays service wait class statistics. It displays user I/O total wait, user I/O wait time, concurrency total wait, concurrency wait time, etc."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">User I/O Total Wts</th><th class="awrbg" scope="col">User I/O Wt Time</th><th class="awrbg" scope="col">Concurcy Total Wts</th><th class="awrbg" scope="col">Concurcy Wt Time</th><th class="awrbg" scope="col">Admin Total Wts</th><th class="awrbg" scope="col">Admin Wt Time</th><th class="awrbg" scope="col">Network Total Wts</th><th class="awrbg" scope="col">Network Wt Time</th></tr>
<tr><td scope="row" class='awrc'>p30db.example.com</td>
<td align="right" class='awrc'>1380966</td><td align="right" class='awrc'>8118</td><td align="right" class='awrc'>29229</td><td align="right" class='awrc'>741</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SYS$BACKGROUND</td>
<td align="right" class='awrnc'>68319</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>1145</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>467</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SYS$USERS</td>
<td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5840"></a>
<h3 class="awr">Top 10 Channel Waits</h3>
<ul>
<li class="awr"> Top 10 Channel Waits by wait time </li>
</ul>
<table border="0" class="tdiff" summary="This table displays top 10 Channel Watis by wait time."><tr><th class="awrbg" scope="col">Channel</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Wait</th></tr>
<tr><td scope="row" class='awrc'>kxfp control signal channel</td>
<td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>903.29us</td></tr>
<tr><td scope="row" class='awrnc'>GEN0 ksbxic channel</td>
<td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.66ms</td></tr>
<tr><td scope="row" class='awrc'>obj broadcast channel</td>
<td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.77ms</td></tr>
<tr><td scope="row" class='awrnc'>RBR channel</td>
<td align="right" class='awrnc'>21,733</td><td align="right" class='awrnc'>85</td><td align="right" class='awrnc'>3.90ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2310"></a>
<h3 class="awr">Top Process Types by Wait Class</h3>
<ul>
<li class="awr"> This table displays top process types ordered by wait class</li>
</ul>
<table border="0" class="tdiff" summary="Top Process Types by Wait Class. . This table displays top process types ordered by wait class"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">Wait Class Type</th><th class="awrbg" scope="col">Wait Time (sec)</th></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>8,145.41</td></tr>
<tr><td scope="row" class='awrnc'>LG</td><td scope="row" class='awrnc'>Log Writer Slave</td><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>982.15</td></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>Concurrency</td><td align="right" class='awrc'>744.15</td></tr>
<tr><td scope="row" class='awrnc'>&#160;</td><td scope="row" class='awrnc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>642.09</td></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>590.28</td></tr>
<tr><td scope="row" class='awrnc'>LGWR</td><td scope="row" class='awrnc'>Redo etc.</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>471.01</td></tr>
<tr><td scope="row" class='awrc'>DBW0</td><td scope="row" class='awrc'>db writer process 0</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>201.93</td></tr>
<tr><td scope="row" class='awrnc'>LG</td><td scope="row" class='awrnc'>Log Writer Slave</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>53.14</td></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>Configuration</td><td align="right" class='awrc'>10.98</td></tr>
<tr><td scope="row" class='awrnc'>CKPT</td><td scope="row" class='awrnc'>checkpoint</td><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>6.18</td></tr>
<tr><td scope="row" class='awrc'>O</td><td scope="row" class='awrc'>ASM Connection Pool</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>3.91</td></tr>
<tr><td scope="row" class='awrnc'>LM</td><td scope="row" class='awrnc'>global cache service process</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>2.34</td></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>2.27</td></tr>
<tr><td scope="row" class='awrnc'>SMON</td><td scope="row" class='awrnc'>System Monitor Process</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>2.24</td></tr>
<tr><td scope="row" class='awrc'>M</td><td scope="row" class='awrc'>MMON slave class 1</td><td scope="row" class='awrc'>Cluster</td><td align="right" class='awrc'>2.22</td></tr>
<tr><td scope="row" class='awrnc'>DBW0</td><td scope="row" class='awrnc'>db writer process 0</td><td scope="row" class='awrnc'>User I/O</td><td align="right" class='awrnc'>2.08</td></tr>
<tr><td scope="row" class='awrc'>M</td><td scope="row" class='awrc'>MMON slave class 1</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>1.80</td></tr>
<tr><td scope="row" class='awrnc'>MMON</td><td scope="row" class='awrnc'>Manageability Monitor Process</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>1.71</td></tr>
<tr><td scope="row" class='awrc'>LCK0</td><td scope="row" class='awrc'>Lock Process 0</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>1.43</td></tr>
<tr><td scope="row" class='awrnc'>LMON</td><td scope="row" class='awrnc'>global enqueue service monitor</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>1.39</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2320"></a>
<h3 class="awr">Top Process Types by CPU Used</h3>
<ul>
<li class="awr"> This table displays top process types ordered by CPU time</li>
</ul>
<table border="0" class="tdiff" summary="Top Process Types by CPU Used. . This table displays top process types ordered by CPU time"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">CPU Time (sec)</th></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td align="right" class='awrc'>897.41</td></tr>
<tr><td scope="row" class='awrnc'>LM</td><td scope="row" class='awrnc'>global cache service process</td><td align="right" class='awrnc'>285.22</td></tr>
<tr><td scope="row" class='awrc'>DBW0</td><td scope="row" class='awrc'>db writer process 0</td><td align="right" class='awrc'>49.71</td></tr>
<tr><td scope="row" class='awrnc'>VKTM</td><td scope="row" class='awrnc'>Virtual Keeper of TiMe process</td><td align="right" class='awrnc'>33.24</td></tr>
<tr><td scope="row" class='awrc'>LG</td><td scope="row" class='awrc'>Log Writer Slave</td><td align="right" class='awrc'>19.40</td></tr>
<tr><td scope="row" class='awrnc'>LMD0</td><td scope="row" class='awrnc'>global enqueue service daemon 0</td><td align="right" class='awrnc'>19.13</td></tr>
<tr><td scope="row" class='awrc'>LMD1</td><td scope="row" class='awrc'>global enqueue service daemon 1</td><td align="right" class='awrc'>16.83</td></tr>
<tr><td scope="row" class='awrnc'>LCK0</td><td scope="row" class='awrnc'>Lock Process 0</td><td align="right" class='awrnc'>15.20</td></tr>
<tr><td scope="row" class='awrc'>CKPT</td><td scope="row" class='awrc'>checkpoint</td><td align="right" class='awrc'>10.43</td></tr>
<tr><td scope="row" class='awrnc'>M</td><td scope="row" class='awrnc'>MMON slave class 1</td><td align="right" class='awrnc'>9.51</td></tr>
<tr><td scope="row" class='awrc'>RS*</td><td scope="row" class='awrc'>GCS RM Slave</td><td align="right" class='awrc'>8.07</td></tr>
<tr><td scope="row" class='awrnc'>LGWR</td><td scope="row" class='awrnc'>Redo etc.</td><td align="right" class='awrnc'>7.73</td></tr>
<tr><td scope="row" class='awrc'>GCR</td><td scope="row" class='awrc'>GCR Slaves (LMHB)</td><td align="right" class='awrc'>3.83</td></tr>
<tr><td scope="row" class='awrnc'>VKRM</td><td scope="row" class='awrnc'>Virtual sKeduler for Resource Manager</td><td align="right" class='awrnc'>3.34</td></tr>
<tr><td scope="row" class='awrc'>IPC0</td><td scope="row" class='awrc'>IPC Service 0</td><td align="right" class='awrc'>2.93</td></tr>
<tr><td scope="row" class='awrnc'>DIA0</td><td scope="row" class='awrnc'>diagnosibility process 0</td><td align="right" class='awrnc'>2.23</td></tr>
<tr><td scope="row" class='awrc'>O</td><td scope="row" class='awrc'>ASM Connection Pool</td><td align="right" class='awrc'>2.06</td></tr>
<tr><td scope="row" class='awrnc'>P</td><td scope="row" class='awrnc'>Parallel query slave</td><td align="right" class='awrnc'>1.39</td></tr>
<tr><td scope="row" class='awrc'>SCM</td><td scope="row" class='awrc'>DLM Statistics Collection and Management Slave</td><td align="right" class='awrc'>1.38</td></tr>
<tr><td scope="row" class='awrnc'>LMON</td><td scope="row" class='awrnc'>global enqueue service monitor</td><td align="right" class='awrnc'>1.35</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="22"></a>
<h2 class="awr">
SQL Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#400">SQL ordered by Elapsed Time</a></li>
<li class="awr"><a class="awr" href="#500">SQL ordered by CPU Time</a></li>
<li class="awr"><a class="awr" href="#550">SQL ordered by User I/O Wait Time</a></li>
<li class="awr"><a class="awr" href="#600">SQL ordered by Gets</a></li>
<li class="awr"><a class="awr" href="#700">SQL ordered by Reads</a></li>
<li class="awr"><a class="awr" href="#740">SQL ordered by Physical Reads (UnOptimized)</a></li>
<li class="awr"><a class="awr" href="#800">SQL ordered by Executions</a></li>
<li class="awr"><a class="awr" href="#900">SQL ordered by Parse Calls</a></li>
<li class="awr"><a class="awr" href="#1000">SQL ordered by Sharable Memory</a></li>
<li class="awr"><a class="awr" href="#1100">SQL ordered by Version Count</a></li>
<li class="awr"><a class="awr" href="#1150">SQL ordered by Cluster Wait Time</a></li>
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="400"></a>
<h3 class="awr">SQL ordered by Elapsed Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> % Total DB Time is the Elapsed Time of the SQL statement divided     into the Total Database Time multiplied by 100 </li>
<li class="awr"> %Total - Elapsed Time	as a percentage of Total DB time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   98.8% of Total DB Time (s):		10,808</li>
<li class="awr">Captured PL/SQL account for   99.6% of Total DB Time (s):	   10,808</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by elapsed time"><tr><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Elapsed Time per Exec (s) </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">	SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>5,922.08</td><td align="right" class='awrc'>258,079</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>54.79</td><td align="right" class='awrc'>6.68</td><td align="right" class='awrc'>90.40</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>4,741.23</td><td align="right" class='awrnc'>45,533</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>43.87</td><td align="right" class='awrnc'>9.15</td><td align="right" class='awrnc'>57.89</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>568.68</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.68</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>5.93</td><td align="right" class='awrc'>82.34</td><td scope="row" class='awrc'><a class="awr" href="#dpnvk07hr10yx">dpnvk07hr10yx</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>566.63</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>566.63</td><td align="right" class='awrnc'>5.24</td><td align="right" class='awrnc'>6.51</td><td align="right" class='awrnc'>81.44</td><td scope="row" class='awrnc'><a class="awr" href="#8thj2ffrw6hnr">8thj2ffrw6hnr</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>566.62</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>566.62</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>14.60</td><td align="right" class='awrc'>56.65</td><td scope="row" class='awrc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>566.60</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>566.60</td><td align="right" class='awrnc'>5.24</td><td align="right" class='awrnc'>13.39</td><td align="right" class='awrnc'>57.86</td><td scope="row" class='awrnc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>566.59</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>566.59</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>13.08</td><td align="right" class='awrc'>65.04</td><td scope="row" class='awrc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>566.59</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>566.59</td><td align="right" class='awrnc'>5.24</td><td align="right" class='awrnc'>6.00</td><td align="right" class='awrnc'>82.90</td><td scope="row" class='awrnc'><a class="awr" href="#ajx8j2hvgamh9">ajx8j2hvgamh9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>566.53</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>566.53</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>14.67</td><td align="right" class='awrc'>49.60</td><td scope="row" class='awrc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>566.51</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>566.51</td><td align="right" class='awrnc'>5.24</td><td align="right" class='awrnc'>5.13</td><td align="right" class='awrnc'>85.11</td><td scope="row" class='awrnc'><a class="awr" href="#1svba844x4jw9">1svba844x4jw9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>566.41</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>566.41</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>11.69</td><td align="right" class='awrc'>65.39</td><td scope="row" class='awrc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>566.41</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>566.41</td><td align="right" class='awrnc'>5.24</td><td align="right" class='awrnc'>10.08</td><td align="right" class='awrnc'>69.40</td><td scope="row" class='awrnc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>566.40</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>566.40</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>5.20</td><td align="right" class='awrc'>85.69</td><td scope="row" class='awrc'><a class="awr" href="#axfzdxtanvh74">axfzdxtanvh74</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>566.31</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>566.31</td><td align="right" class='awrnc'>5.24</td><td align="right" class='awrnc'>5.09</td><td align="right" class='awrnc'>84.96</td><td scope="row" class='awrnc'><a class="awr" href="#9m8b40kyd8ksd">9m8b40kyd8ksd</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>566.29</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>566.29</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>6.33</td><td align="right" class='awrc'>80.92</td><td scope="row" class='awrc'><a class="awr" href="#fxtw8kpwrmyrh">fxtw8kpwrmyrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>566.12</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>566.12</td><td align="right" class='awrnc'>5.24</td><td align="right" class='awrnc'>11.51</td><td align="right" class='awrnc'>67.43</td><td scope="row" class='awrnc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>565.68</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>565.68</td><td align="right" class='awrc'>5.23</td><td align="right" class='awrc'>5.12</td><td align="right" class='awrc'>85.46</td><td scope="row" class='awrc'><a class="awr" href="#98t98dbg02qny">98t98dbg02qny</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>565.58</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>565.58</td><td align="right" class='awrnc'>5.23</td><td align="right" class='awrnc'>6.34</td><td align="right" class='awrnc'>81.22</td><td scope="row" class='awrnc'><a class="awr" href="#ayb2zjspaq24n">ayb2zjspaq24n</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>565.38</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>565.38</td><td align="right" class='awrc'>5.23</td><td align="right" class='awrc'>6.02</td><td align="right" class='awrc'>82.72</td><td scope="row" class='awrc'><a class="awr" href="#d1j2yjcpr4vg8">d1j2yjcpr4vg8</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>565.38</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>565.38</td><td align="right" class='awrnc'>5.23</td><td align="right" class='awrnc'>6.02</td><td align="right" class='awrnc'>83.66</td><td scope="row" class='awrnc'><a class="awr" href="#2sggy6afm410z">2sggy6afm410z</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>565.20</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>565.20</td><td align="right" class='awrc'>5.23</td><td align="right" class='awrc'>5.05</td><td align="right" class='awrc'>85.72</td><td scope="row" class='awrc'><a class="awr" href="#4y8pwam7nhcwj">4y8pwam7nhcwj</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="500"></a>
<h3 class="awr">SQL ordered by CPU Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - CPU Time	as a percentage of Total DB CPU </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   93.1% of Total CPU Time (s): 	    898</li>
<li class="awr">Captured PL/SQL account for  100.0% of Total CPU Time (s):	       898</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by CPU time"><tr><th class="awrbg" scope="col">CPU    Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">CPU per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>433.64</td><td align="right" class='awrc'>45,533</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>48.28</td><td align="right" class='awrc'>4,741.23</td><td align="right" class='awrc'>9.15</td><td align="right" class='awrc'>57.89</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>395.81</td><td align="right" class='awrnc'>258,079</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>44.07</td><td align="right" class='awrnc'>5,922.08</td><td align="right" class='awrnc'>6.68</td><td align="right" class='awrnc'>90.40</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrc'>83.09</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>83.09</td><td align="right" class='awrc'>9.25</td><td align="right" class='awrc'>566.53</td><td align="right" class='awrc'>14.67</td><td align="right" class='awrc'>49.60</td><td scope="row" class='awrc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>82.74</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>82.74</td><td align="right" class='awrnc'>9.21</td><td align="right" class='awrnc'>566.62</td><td align="right" class='awrnc'>14.60</td><td align="right" class='awrnc'>56.65</td><td scope="row" class='awrnc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>75.86</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>75.86</td><td align="right" class='awrc'>8.45</td><td align="right" class='awrc'>566.60</td><td align="right" class='awrc'>13.39</td><td align="right" class='awrc'>57.86</td><td scope="row" class='awrc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>74.09</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>74.09</td><td align="right" class='awrnc'>8.25</td><td align="right" class='awrnc'>566.59</td><td align="right" class='awrnc'>13.08</td><td align="right" class='awrnc'>65.04</td><td scope="row" class='awrnc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>66.22</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>66.22</td><td align="right" class='awrc'>7.37</td><td align="right" class='awrc'>566.41</td><td align="right" class='awrc'>11.69</td><td align="right" class='awrc'>65.39</td><td scope="row" class='awrc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>65.19</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>65.19</td><td align="right" class='awrnc'>7.26</td><td align="right" class='awrnc'>566.12</td><td align="right" class='awrnc'>11.51</td><td align="right" class='awrnc'>67.43</td><td scope="row" class='awrnc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>57.12</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>57.12</td><td align="right" class='awrc'>6.36</td><td align="right" class='awrc'>566.41</td><td align="right" class='awrc'>10.08</td><td align="right" class='awrc'>69.40</td><td scope="row" class='awrc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>36.88</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>36.88</td><td align="right" class='awrnc'>4.11</td><td align="right" class='awrnc'>566.63</td><td align="right" class='awrnc'>6.51</td><td align="right" class='awrnc'>81.44</td><td scope="row" class='awrnc'><a class="awr" href="#8thj2ffrw6hnr">8thj2ffrw6hnr</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>35.87</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>35.87</td><td align="right" class='awrc'>3.99</td><td align="right" class='awrc'>565.58</td><td align="right" class='awrc'>6.34</td><td align="right" class='awrc'>81.22</td><td scope="row" class='awrc'><a class="awr" href="#ayb2zjspaq24n">ayb2zjspaq24n</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>35.84</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>35.84</td><td align="right" class='awrnc'>3.99</td><td align="right" class='awrnc'>566.29</td><td align="right" class='awrnc'>6.33</td><td align="right" class='awrnc'>80.92</td><td scope="row" class='awrnc'><a class="awr" href="#fxtw8kpwrmyrh">fxtw8kpwrmyrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>34.06</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>34.06</td><td align="right" class='awrc'>3.79</td><td align="right" class='awrc'>565.38</td><td align="right" class='awrc'>6.02</td><td align="right" class='awrc'>82.72</td><td scope="row" class='awrc'><a class="awr" href="#d1j2yjcpr4vg8">d1j2yjcpr4vg8</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>34.04</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>34.04</td><td align="right" class='awrnc'>3.79</td><td align="right" class='awrnc'>565.38</td><td align="right" class='awrnc'>6.02</td><td align="right" class='awrnc'>83.66</td><td scope="row" class='awrnc'><a class="awr" href="#2sggy6afm410z">2sggy6afm410z</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>34.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>34.00</td><td align="right" class='awrc'>3.79</td><td align="right" class='awrc'>566.59</td><td align="right" class='awrc'>6.00</td><td align="right" class='awrc'>82.90</td><td scope="row" class='awrc'><a class="awr" href="#ajx8j2hvgamh9">ajx8j2hvgamh9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>33.70</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>33.70</td><td align="right" class='awrnc'>3.75</td><td align="right" class='awrnc'>568.68</td><td align="right" class='awrnc'>5.93</td><td align="right" class='awrnc'>82.34</td><td scope="row" class='awrnc'><a class="awr" href="#dpnvk07hr10yx">dpnvk07hr10yx</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>29.43</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>29.43</td><td align="right" class='awrc'>3.28</td><td align="right" class='awrc'>566.40</td><td align="right" class='awrc'>5.20</td><td align="right" class='awrc'>85.69</td><td scope="row" class='awrc'><a class="awr" href="#axfzdxtanvh74">axfzdxtanvh74</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>29.08</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>29.08</td><td align="right" class='awrnc'>3.24</td><td align="right" class='awrnc'>566.51</td><td align="right" class='awrnc'>5.13</td><td align="right" class='awrnc'>85.11</td><td scope="row" class='awrnc'><a class="awr" href="#1svba844x4jw9">1svba844x4jw9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>28.97</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>28.97</td><td align="right" class='awrc'>3.23</td><td align="right" class='awrc'>565.68</td><td align="right" class='awrc'>5.12</td><td align="right" class='awrc'>85.46</td><td scope="row" class='awrc'><a class="awr" href="#98t98dbg02qny">98t98dbg02qny</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>28.84</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>28.84</td><td align="right" class='awrnc'>3.21</td><td align="right" class='awrnc'>566.31</td><td align="right" class='awrnc'>5.09</td><td align="right" class='awrnc'>84.96</td><td scope="row" class='awrnc'><a class="awr" href="#9m8b40kyd8ksd">9m8b40kyd8ksd</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>28.57</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>28.57</td><td align="right" class='awrc'>3.18</td><td align="right" class='awrc'>565.20</td><td align="right" class='awrc'>5.05</td><td align="right" class='awrc'>85.72</td><td scope="row" class='awrc'><a class="awr" href="#4y8pwam7nhcwj">4y8pwam7nhcwj</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="550"></a>
<h3 class="awr">SQL ordered by User I/O Wait Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - User I/O Time as a percentage of Total User I/O Wait time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   99.3% of Total User I/O Wait Time (s):	    8,156</li>
<li class="awr">Captured PL/SQL account for   99.6% of Total User I/O Wait Time (s):	       8,156</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by user I/O time"><tr><th class="awrbg" scope="col">User I/O Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">UIO per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>5,353.47</td><td align="right" class='awrc'>258,079</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>65.64</td><td align="right" class='awrc'>5,922.08</td><td align="right" class='awrc'>6.68</td><td align="right" class='awrc'>90.40</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>2,744.65</td><td align="right" class='awrnc'>45,533</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>33.65</td><td align="right" class='awrnc'>4,741.23</td><td align="right" class='awrnc'>9.15</td><td align="right" class='awrnc'>57.89</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>485.34</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>485.34</td><td align="right" class='awrc'>5.95</td><td align="right" class='awrc'>566.40</td><td align="right" class='awrc'>5.20</td><td align="right" class='awrc'>85.69</td><td scope="row" class='awrc'><a class="awr" href="#axfzdxtanvh74">axfzdxtanvh74</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>484.49</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>484.49</td><td align="right" class='awrnc'>5.94</td><td align="right" class='awrnc'>565.20</td><td align="right" class='awrnc'>5.05</td><td align="right" class='awrnc'>85.72</td><td scope="row" class='awrnc'><a class="awr" href="#4y8pwam7nhcwj">4y8pwam7nhcwj</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>483.43</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>483.43</td><td align="right" class='awrc'>5.93</td><td align="right" class='awrc'>565.68</td><td align="right" class='awrc'>5.12</td><td align="right" class='awrc'>85.46</td><td scope="row" class='awrc'><a class="awr" href="#98t98dbg02qny">98t98dbg02qny</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>482.15</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>482.15</td><td align="right" class='awrnc'>5.91</td><td align="right" class='awrnc'>566.51</td><td align="right" class='awrnc'>5.13</td><td align="right" class='awrnc'>85.11</td><td scope="row" class='awrnc'><a class="awr" href="#1svba844x4jw9">1svba844x4jw9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>481.15</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>481.15</td><td align="right" class='awrc'>5.90</td><td align="right" class='awrc'>566.31</td><td align="right" class='awrc'>5.09</td><td align="right" class='awrc'>84.96</td><td scope="row" class='awrc'><a class="awr" href="#9m8b40kyd8ksd">9m8b40kyd8ksd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>472.99</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>472.99</td><td align="right" class='awrnc'>5.80</td><td align="right" class='awrnc'>565.38</td><td align="right" class='awrnc'>6.02</td><td align="right" class='awrnc'>83.66</td><td scope="row" class='awrnc'><a class="awr" href="#2sggy6afm410z">2sggy6afm410z</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>469.69</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>469.69</td><td align="right" class='awrc'>5.76</td><td align="right" class='awrc'>566.59</td><td align="right" class='awrc'>6.00</td><td align="right" class='awrc'>82.90</td><td scope="row" class='awrc'><a class="awr" href="#ajx8j2hvgamh9">ajx8j2hvgamh9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>468.23</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>468.23</td><td align="right" class='awrnc'>5.74</td><td align="right" class='awrnc'>568.68</td><td align="right" class='awrnc'>5.93</td><td align="right" class='awrnc'>82.34</td><td scope="row" class='awrnc'><a class="awr" href="#dpnvk07hr10yx">dpnvk07hr10yx</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>467.67</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>467.67</td><td align="right" class='awrc'>5.73</td><td align="right" class='awrc'>565.38</td><td align="right" class='awrc'>6.02</td><td align="right" class='awrc'>82.72</td><td scope="row" class='awrc'><a class="awr" href="#d1j2yjcpr4vg8">d1j2yjcpr4vg8</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>461.46</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>461.46</td><td align="right" class='awrnc'>5.66</td><td align="right" class='awrnc'>566.63</td><td align="right" class='awrnc'>6.51</td><td align="right" class='awrnc'>81.44</td><td scope="row" class='awrnc'><a class="awr" href="#8thj2ffrw6hnr">8thj2ffrw6hnr</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>459.35</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>459.35</td><td align="right" class='awrc'>5.63</td><td align="right" class='awrc'>565.58</td><td align="right" class='awrc'>6.34</td><td align="right" class='awrc'>81.22</td><td scope="row" class='awrc'><a class="awr" href="#ayb2zjspaq24n">ayb2zjspaq24n</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>458.24</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>458.24</td><td align="right" class='awrnc'>5.62</td><td align="right" class='awrnc'>566.29</td><td align="right" class='awrnc'>6.33</td><td align="right" class='awrnc'>80.92</td><td scope="row" class='awrnc'><a class="awr" href="#fxtw8kpwrmyrh">fxtw8kpwrmyrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>393.09</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>393.09</td><td align="right" class='awrc'>4.82</td><td align="right" class='awrc'>566.41</td><td align="right" class='awrc'>10.08</td><td align="right" class='awrc'>69.40</td><td scope="row" class='awrc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>381.73</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>381.73</td><td align="right" class='awrnc'>4.68</td><td align="right" class='awrnc'>566.12</td><td align="right" class='awrnc'>11.51</td><td align="right" class='awrnc'>67.43</td><td scope="row" class='awrnc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>370.38</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>370.38</td><td align="right" class='awrc'>4.54</td><td align="right" class='awrc'>566.41</td><td align="right" class='awrc'>11.69</td><td align="right" class='awrc'>65.39</td><td scope="row" class='awrc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>368.53</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>368.53</td><td align="right" class='awrnc'>4.52</td><td align="right" class='awrnc'>566.59</td><td align="right" class='awrnc'>13.08</td><td align="right" class='awrnc'>65.04</td><td scope="row" class='awrnc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>327.81</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>327.81</td><td align="right" class='awrc'>4.02</td><td align="right" class='awrc'>566.60</td><td align="right" class='awrc'>13.39</td><td align="right" class='awrc'>57.86</td><td scope="row" class='awrc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>320.97</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>320.97</td><td align="right" class='awrnc'>3.94</td><td align="right" class='awrnc'>566.62</td><td align="right" class='awrnc'>14.60</td><td align="right" class='awrnc'>56.65</td><td scope="row" class='awrnc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>280.97</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>280.97</td><td align="right" class='awrc'>3.45</td><td align="right" class='awrc'>566.53</td><td align="right" class='awrc'>14.67</td><td align="right" class='awrc'>49.60</td><td scope="row" class='awrc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="600"></a>
<h3 class="awr">SQL ordered by Gets</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - Buffer Gets	as a percentage of Total Buffer Gets </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Buffer Gets:	 7,234,630</li>
<li class="awr">Captured SQL account for   98.5% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by buffer gets"><tr><th class="awrbg" scope="col">Buffer Gets </th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Gets     per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">	%IO</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>4,653,749</td><td align="right" class='awrc'>258,079</td><td align="right" class='awrc'>18.03</td><td align="right" class='awrc'>64.33</td><td align="right" class='awrc'>5,922.08</td><td class='awrc'>6.7</td><td class='awrc'>90.4</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>2,374,934</td><td align="right" class='awrnc'>45,533</td><td align="right" class='awrnc'>52.16</td><td align="right" class='awrnc'>32.83</td><td align="right" class='awrnc'>4,741.23</td><td class='awrnc'>9.1</td><td class='awrnc'>57.9</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>773,064</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>773,064.00</td><td align="right" class='awrc'>10.69</td><td align="right" class='awrc'>566.59</td><td class='awrc'>13.1</td><td class='awrc'>65</td><td scope="row" class='awrc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>764,908</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>764,908.00</td><td align="right" class='awrnc'>10.57</td><td align="right" class='awrnc'>566.53</td><td class='awrnc'>14.7</td><td class='awrnc'>49.6</td><td scope="row" class='awrnc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>664,344</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>664,344.00</td><td align="right" class='awrc'>9.18</td><td align="right" class='awrc'>566.12</td><td class='awrc'>11.5</td><td class='awrc'>67.4</td><td scope="row" class='awrc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>556,141</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>556,141.00</td><td align="right" class='awrnc'>7.69</td><td align="right" class='awrnc'>566.62</td><td class='awrnc'>14.6</td><td class='awrnc'>56.6</td><td scope="row" class='awrnc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>553,622</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>553,622.00</td><td align="right" class='awrc'>7.65</td><td align="right" class='awrc'>566.41</td><td class='awrc'>11.7</td><td class='awrc'>65.4</td><td scope="row" class='awrc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>501,156</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>501,156.00</td><td align="right" class='awrnc'>6.93</td><td align="right" class='awrnc'>566.60</td><td class='awrnc'>13.4</td><td class='awrnc'>57.9</td><td scope="row" class='awrnc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>358,419</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>358,419.00</td><td align="right" class='awrc'>4.95</td><td align="right" class='awrc'>566.41</td><td class='awrc'>10.1</td><td class='awrc'>69.4</td><td scope="row" class='awrc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>284,276</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>284,276.00</td><td align="right" class='awrnc'>3.93</td><td align="right" class='awrnc'>566.40</td><td class='awrnc'>5.2</td><td class='awrnc'>85.7</td><td scope="row" class='awrnc'><a class="awr" href="#axfzdxtanvh74">axfzdxtanvh74</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>280,598</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>280,598.00</td><td align="right" class='awrc'>3.88</td><td align="right" class='awrc'>565.68</td><td class='awrc'>5.1</td><td class='awrc'>85.5</td><td scope="row" class='awrc'><a class="awr" href="#98t98dbg02qny">98t98dbg02qny</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>280,403</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>280,403.00</td><td align="right" class='awrnc'>3.88</td><td align="right" class='awrnc'>566.51</td><td class='awrnc'>5.1</td><td class='awrnc'>85.1</td><td scope="row" class='awrnc'><a class="awr" href="#1svba844x4jw9">1svba844x4jw9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>279,346</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>279,346.00</td><td align="right" class='awrc'>3.86</td><td align="right" class='awrc'>566.31</td><td class='awrc'>5.1</td><td class='awrc'>85</td><td scope="row" class='awrc'><a class="awr" href="#9m8b40kyd8ksd">9m8b40kyd8ksd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>274,500</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>274,500.00</td><td align="right" class='awrnc'>3.79</td><td align="right" class='awrnc'>565.20</td><td class='awrnc'>5.1</td><td class='awrnc'>85.7</td><td scope="row" class='awrnc'><a class="awr" href="#4y8pwam7nhcwj">4y8pwam7nhcwj</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>227,277</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>227,277.00</td><td align="right" class='awrc'>3.14</td><td align="right" class='awrc'>565.38</td><td class='awrc'>6</td><td class='awrc'>82.7</td><td scope="row" class='awrc'><a class="awr" href="#d1j2yjcpr4vg8">d1j2yjcpr4vg8</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>227,048</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>227,048.00</td><td align="right" class='awrnc'>3.14</td><td align="right" class='awrnc'>566.59</td><td class='awrnc'>6</td><td class='awrnc'>82.9</td><td scope="row" class='awrnc'><a class="awr" href="#ajx8j2hvgamh9">ajx8j2hvgamh9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>224,388</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>224,388.00</td><td align="right" class='awrc'>3.10</td><td align="right" class='awrc'>565.38</td><td class='awrc'>6</td><td class='awrc'>83.7</td><td scope="row" class='awrc'><a class="awr" href="#2sggy6afm410z">2sggy6afm410z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>222,245</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>222,245.00</td><td align="right" class='awrnc'>3.07</td><td align="right" class='awrnc'>568.68</td><td class='awrnc'>5.9</td><td class='awrnc'>82.3</td><td scope="row" class='awrnc'><a class="awr" href="#dpnvk07hr10yx">dpnvk07hr10yx</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>213,730</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>213,730.00</td><td align="right" class='awrc'>2.95</td><td align="right" class='awrc'>566.63</td><td class='awrc'>6.5</td><td class='awrc'>81.4</td><td scope="row" class='awrc'><a class="awr" href="#8thj2ffrw6hnr">8thj2ffrw6hnr</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>209,464</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>209,464.00</td><td align="right" class='awrnc'>2.90</td><td align="right" class='awrnc'>566.29</td><td class='awrnc'>6.3</td><td class='awrnc'>80.9</td><td scope="row" class='awrnc'><a class="awr" href="#fxtw8kpwrmyrh">fxtw8kpwrmyrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>206,356</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>206,356.00</td><td align="right" class='awrc'>2.85</td><td align="right" class='awrc'>565.58</td><td class='awrc'>6.3</td><td class='awrc'>81.2</td><td scope="row" class='awrc'><a class="awr" href="#ayb2zjspaq24n">ayb2zjspaq24n</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="700"></a>
<h3 class="awr">SQL ordered by Reads</h3>
<ul>
<li class="awr"> %Total - Physical Reads as a percentage of Total Disk Reads </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Disk Reads:	4,253,774</li>
<li class="awr">Captured SQL account for   99.1% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by physical reads"><tr><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Reads	  per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>3,581,309</td><td align="right" class='awrc'>258,079</td><td align="right" class='awrc'>13.88</td><td align="right" class='awrc'>84.19</td><td align="right" class='awrc'>5,922.08</td><td align="right" class='awrc'>6.68</td><td align="right" class='awrc'>90.40</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>632,614</td><td align="right" class='awrnc'>45,533</td><td align="right" class='awrnc'>13.89</td><td align="right" class='awrnc'>14.87</td><td align="right" class='awrnc'>4,741.23</td><td align="right" class='awrnc'>9.15</td><td align="right" class='awrnc'>57.89</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>467,187</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>467,187.00</td><td align="right" class='awrc'>10.98</td><td align="right" class='awrc'>566.59</td><td align="right" class='awrc'>13.08</td><td align="right" class='awrc'>65.04</td><td scope="row" class='awrc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>459,376</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>459,376.00</td><td align="right" class='awrnc'>10.80</td><td align="right" class='awrnc'>566.53</td><td align="right" class='awrnc'>14.67</td><td align="right" class='awrnc'>49.60</td><td scope="row" class='awrnc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>405,065</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>405,065.00</td><td align="right" class='awrc'>9.52</td><td align="right" class='awrc'>566.12</td><td align="right" class='awrc'>11.51</td><td align="right" class='awrc'>67.43</td><td scope="row" class='awrc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>332,907</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>332,907.00</td><td align="right" class='awrnc'>7.83</td><td align="right" class='awrnc'>566.62</td><td align="right" class='awrnc'>14.60</td><td align="right" class='awrnc'>56.65</td><td scope="row" class='awrnc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>269,669</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>269,669.00</td><td align="right" class='awrc'>6.34</td><td align="right" class='awrc'>566.41</td><td align="right" class='awrc'>11.69</td><td align="right" class='awrc'>65.39</td><td scope="row" class='awrc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>243,245</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>243,245.00</td><td align="right" class='awrnc'>5.72</td><td align="right" class='awrnc'>566.60</td><td align="right" class='awrnc'>13.39</td><td align="right" class='awrnc'>57.86</td><td scope="row" class='awrnc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>216,711</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>216,711.00</td><td align="right" class='awrc'>5.09</td><td align="right" class='awrc'>566.41</td><td align="right" class='awrc'>10.08</td><td align="right" class='awrc'>69.40</td><td scope="row" class='awrc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>175,457</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>175,457.00</td><td align="right" class='awrnc'>4.12</td><td align="right" class='awrnc'>565.68</td><td align="right" class='awrnc'>5.12</td><td align="right" class='awrnc'>85.46</td><td scope="row" class='awrnc'><a class="awr" href="#98t98dbg02qny">98t98dbg02qny</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>174,780</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>174,780.00</td><td align="right" class='awrc'>4.11</td><td align="right" class='awrc'>566.40</td><td align="right" class='awrc'>5.20</td><td align="right" class='awrc'>85.69</td><td scope="row" class='awrc'><a class="awr" href="#axfzdxtanvh74">axfzdxtanvh74</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>174,426</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>174,426.00</td><td align="right" class='awrnc'>4.10</td><td align="right" class='awrnc'>566.31</td><td align="right" class='awrnc'>5.09</td><td align="right" class='awrnc'>84.96</td><td scope="row" class='awrnc'><a class="awr" href="#9m8b40kyd8ksd">9m8b40kyd8ksd</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>174,318</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>174,318.00</td><td align="right" class='awrc'>4.10</td><td align="right" class='awrc'>566.51</td><td align="right" class='awrc'>5.13</td><td align="right" class='awrc'>85.11</td><td scope="row" class='awrc'><a class="awr" href="#1svba844x4jw9">1svba844x4jw9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>170,971</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>170,971.00</td><td align="right" class='awrnc'>4.02</td><td align="right" class='awrnc'>565.20</td><td align="right" class='awrnc'>5.05</td><td align="right" class='awrnc'>85.72</td><td scope="row" class='awrnc'><a class="awr" href="#4y8pwam7nhcwj">4y8pwam7nhcwj</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>144,374</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>144,374.00</td><td align="right" class='awrc'>3.39</td><td align="right" class='awrc'>566.59</td><td align="right" class='awrc'>6.00</td><td align="right" class='awrc'>82.90</td><td scope="row" class='awrc'><a class="awr" href="#ajx8j2hvgamh9">ajx8j2hvgamh9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>142,419</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>142,419.00</td><td align="right" class='awrnc'>3.35</td><td align="right" class='awrnc'>565.38</td><td align="right" class='awrnc'>6.02</td><td align="right" class='awrnc'>82.72</td><td scope="row" class='awrnc'><a class="awr" href="#d1j2yjcpr4vg8">d1j2yjcpr4vg8</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>141,568</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>141,568.00</td><td align="right" class='awrc'>3.33</td><td align="right" class='awrc'>565.38</td><td align="right" class='awrc'>6.02</td><td align="right" class='awrc'>83.66</td><td scope="row" class='awrc'><a class="awr" href="#2sggy6afm410z">2sggy6afm410z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>139,897</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>139,897.00</td><td align="right" class='awrnc'>3.29</td><td align="right" class='awrnc'>568.68</td><td align="right" class='awrnc'>5.93</td><td align="right" class='awrnc'>82.34</td><td scope="row" class='awrnc'><a class="awr" href="#dpnvk07hr10yx">dpnvk07hr10yx</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>133,688</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>133,688.00</td><td align="right" class='awrc'>3.14</td><td align="right" class='awrc'>566.63</td><td align="right" class='awrc'>6.51</td><td align="right" class='awrc'>81.44</td><td scope="row" class='awrc'><a class="awr" href="#8thj2ffrw6hnr">8thj2ffrw6hnr</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>133,058</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>133,058.00</td><td align="right" class='awrnc'>3.13</td><td align="right" class='awrnc'>565.58</td><td align="right" class='awrnc'>6.34</td><td align="right" class='awrnc'>81.22</td><td scope="row" class='awrnc'><a class="awr" href="#ayb2zjspaq24n">ayb2zjspaq24n</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>130,902</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>130,902.00</td><td align="right" class='awrc'>3.08</td><td align="right" class='awrc'>566.29</td><td align="right" class='awrc'>6.33</td><td align="right" class='awrc'>80.92</td><td scope="row" class='awrc'><a class="awr" href="#fxtw8kpwrmyrh">fxtw8kpwrmyrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="740"></a>
<h3 class="awr">SQL ordered by Physical Reads (UnOptimized)</h3>
<ul>
<li class="awr"> UnOptimized Read Reqs = Physical Read Reqs -	    (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile) </li>
<li class="awr"> %Opt	- Optimized Reads as percentage of SQL Read Requests </li>
<li class="awr"> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs</li>
<li class="awr">Total Physical Read Requests:	    4,253,575</li>
<li class="awr">Captured SQL account for    0.5% of Total</li>
<li class="awr">Total UnOptimized Read Requests:       4,253,575</li>
<li class="awr">Captured SQL account for    0.5% of Total</li>
<li class="awr">Total Optimized Read Requests:		     1</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by unoptimized read requests"><tr><th class="awrbg" scope="col">UnOptimized Read Reqs</th><th class="awrbg" scope="col">Physical  Read Reqs</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">UnOptimized Reqs per Exec</th><th class="awrbg" scope="col">%Opt</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>467,210</td><td align="right" class='awrc'>467,210</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>467,210.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>10.98</td><td scope="row" class='awrc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>459,445</td><td align="right" class='awrnc'>459,445</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>459,445.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>10.80</td><td scope="row" class='awrnc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>405,134</td><td align="right" class='awrc'>405,134</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>405,134.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>9.52</td><td scope="row" class='awrc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>332,930</td><td align="right" class='awrnc'>332,930</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>332,930.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>7.83</td><td scope="row" class='awrnc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>269,738</td><td align="right" class='awrc'>269,738</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>269,738.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6.34</td><td scope="row" class='awrc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>243,314</td><td align="right" class='awrnc'>243,314</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>243,314.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.72</td><td scope="row" class='awrnc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>216,734</td><td align="right" class='awrc'>216,734</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>216,734.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.10</td><td scope="row" class='awrc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>175,503</td><td align="right" class='awrnc'>175,503</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>175,503.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.13</td><td scope="row" class='awrnc'><a class="awr" href="#98t98dbg02qny">98t98dbg02qny</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>174,826</td><td align="right" class='awrc'>174,826</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>174,826.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.11</td><td scope="row" class='awrc'><a class="awr" href="#axfzdxtanvh74">axfzdxtanvh74</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>174,449</td><td align="right" class='awrnc'>174,449</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>174,449.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.10</td><td scope="row" class='awrnc'><a class="awr" href="#9m8b40kyd8ksd">9m8b40kyd8ksd</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>174,433</td><td align="right" class='awrc'>174,433</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>174,433.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.10</td><td scope="row" class='awrc'><a class="awr" href="#1svba844x4jw9">1svba844x4jw9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>170,994</td><td align="right" class='awrnc'>170,994</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>170,994.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.02</td><td scope="row" class='awrnc'><a class="awr" href="#4y8pwam7nhcwj">4y8pwam7nhcwj</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>144,397</td><td align="right" class='awrc'>144,397</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>144,397.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.39</td><td scope="row" class='awrc'><a class="awr" href="#ajx8j2hvgamh9">ajx8j2hvgamh9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>142,465</td><td align="right" class='awrnc'>142,465</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>142,465.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>3.35</td><td scope="row" class='awrnc'><a class="awr" href="#d1j2yjcpr4vg8">d1j2yjcpr4vg8</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>141,614</td><td align="right" class='awrc'>141,614</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>141,614.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.33</td><td scope="row" class='awrc'><a class="awr" href="#2sggy6afm410z">2sggy6afm410z</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>140,012</td><td align="right" class='awrnc'>140,012</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>140,012.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>3.29</td><td scope="row" class='awrnc'><a class="awr" href="#dpnvk07hr10yx">dpnvk07hr10yx</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>133,734</td><td align="right" class='awrc'>133,734</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>133,734.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.14</td><td scope="row" class='awrc'><a class="awr" href="#8thj2ffrw6hnr">8thj2ffrw6hnr</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>133,104</td><td align="right" class='awrnc'>133,104</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>133,104.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>3.13</td><td scope="row" class='awrnc'><a class="awr" href="#ayb2zjspaq24n">ayb2zjspaq24n</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>130,925</td><td align="right" class='awrc'>130,925</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>130,925.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.08</td><td scope="row" class='awrc'><a class="awr" href="#fxtw8kpwrmyrh">fxtw8kpwrmyrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="800"></a>
<h3 class="awr">SQL ordered by Executions</h3>
<ul>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Executions:	  331,888</li>
<li class="awr">Captured SQL account for   98.5% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by number of executions"><tr><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Rows Processed</th><th class="awrbg" scope="col">Rows per Exec</th><th class="awrbg" scope="col">Elapsed	Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">  %IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>258,079</td><td align="right" class='awrc'>258,086</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>5,922.08</td><td class='awrc'>6.7</td><td class='awrc'>90.4</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>45,533</td><td align="right" class='awrnc'>682,995</td><td align="right" class='awrnc'>15.00</td><td align="right" class='awrnc'>4,741.23</td><td class='awrnc'>9.1</td><td class='awrnc'>57.9</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>21,568</td><td align="right" class='awrc'>21,575</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>4.18</td><td class='awrc'>87.3</td><td class='awrc'>0</td><td scope="row" class='awrc'><a class="awr" href="#86708bvah4akq">86708bvah4akq</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select name from undo$ where f...</td></tr>
<tr><td align="right" class='awrnc'>834</td><td align="right" class='awrnc'>816</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>0.10</td><td class='awrnc'>79.7</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>update svcobj_access$ set acce...</td></tr>
<tr><td align="right" class='awrc'>89</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.44</td><td class='awrc'>5.1</td><td class='awrc'>1.7</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.23</td><td align="right" class='awrnc'>0.00</td><td class='awrnc'>92.8</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#87gaftwrm2h68">87gaftwrm2h68</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select o.owner#, o.name, o.nam...</td></tr>
<tr><td align="right" class='awrc'>60</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.06</td><td class='awrc'>33.4</td><td class='awrc'>26.1</td><td scope="row" class='awrc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td align="right" class='awrnc'>48</td><td align="right" class='awrnc'>48</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.03</td><td class='awrnc'>43.1</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
<tr><td align="right" class='awrc'>45</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.01</td><td class='awrc'>98</td><td class='awrc'>0</td><td scope="row" class='awrc'><a class="awr" href="#6xvp6nxs4a9n4">6xvp6nxs4a9n4</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select nvl(sum(space), 0) from...</td></tr>
<tr><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td><td class='awrnc'>92.3</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#csnp95dz2r8ss">csnp95dz2r8ss</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select file#, block# from recy...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="900"></a>
<h3 class="awr">SQL ordered by Parse Calls</h3>
<ul>
<li class="awr">Total Parse Calls:	    23,955</li>
<li class="awr">Captured SQL account for   96.1% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by number of parse calls"><tr><th class="awrbg" scope="col">Parse Calls</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total Parses</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>21,548</td><td align="right" class='awrc'>21,568</td><td align="right" class='awrc'>89.95</td><td scope="row" class='awrc'><a class="awr" href="#86708bvah4akq">86708bvah4akq</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select name from undo$ where f...</td></tr>
<tr><td align="right" class='awrnc'>834</td><td align="right" class='awrnc'>834</td><td align="right" class='awrnc'>3.48</td><td scope="row" class='awrnc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>update svcobj_access$ set acce...</td></tr>
<tr><td align="right" class='awrc'>89</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>0.37</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>0.25</td><td scope="row" class='awrnc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td align="right" class='awrc'>48</td><td align="right" class='awrc'>48</td><td align="right" class='awrc'>0.20</td><td scope="row" class='awrc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
<tr><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>0.19</td><td scope="row" class='awrnc'><a class="awr" href="#6xvp6nxs4a9n4">6xvp6nxs4a9n4</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select nvl(sum(space), 0) from...</td></tr>
<tr><td align="right" class='awrc'>45</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>0.19</td><td scope="row" class='awrc'><a class="awr" href="#csnp95dz2r8ss">csnp95dz2r8ss</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select file#, block# from recy...</td></tr>
<tr><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.09</td><td scope="row" class='awrnc'><a class="awr" href="#6n2qqv1brfhpp">6n2qqv1brfhpp</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select ind.type#, ind.property...</td></tr>
<tr><td align="right" class='awrc'>20</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.08</td><td scope="row" class='awrc'><a class="awr" href="#bxpcry2tpc217">bxpcry2tpc217</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select /*+ opt_param('parallel...</td></tr>
<tr><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.08</td><td scope="row" class='awrnc'><a class="awr" href="#gjaap3w3qbf8c">gjaap3w3qbf8c</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select count(*) from ilmobj$ w...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1000"></a>
<h3 class="awr">SQL ordered by Sharable Memory</h3>
<ul>
<li class="awr">Only Statements with Sharable Memory greater than 1048576 are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by amount of shared memory used"><tr><th class="awrbg" scope="col">Sharable Mem (b)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>13,234,945</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>1.14</td><td scope="row" class='awrc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
<tr><td align="right" class='awrnc'>2,095,492</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.18</td><td scope="row" class='awrnc'><a class="awr" href="#atwuyuvqkf27w">atwuyuvqkf27w</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT /*+ OPT_PARAM('_fix_con...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1100"></a>
<h3 class="awr">SQL ordered by Version Count</h3>
<ul>
<li class="awr">Only Statements with Version Count greater than 20 are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by version counts"><tr><th class="awrbg" scope="col">Version Count </th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>26</td><td align="right" class='awrc'>258,079</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>45,533</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1150"></a>
<h3 class="awr">SQL ordered by Cluster Wait Time</h3>
<ul>
<li class="awr"> %Total - Cluster Time	as a percentage of Total Cluster Wait Time </li>
<li class="awr"> %Clu	- Cluster Time	as a percentage of Elapsed Time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time </li>
<li class="awr"> Only SQL with Cluster Wait Time &gt; .005 seconds is reported</li>
<li class="awr">Total Cluster Wait Time (s):		 649</li>
<li class="awr">Captured SQL account for   97.9% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by cluster wait time"><tr><th class="awrbg" scope="col">Cluster Wait Time (s)</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed Time(s)</th><th class="awrbg" scope="col">%Clu</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>351.62</td><td align="right" class='awrc'>258,079</td><td align="right" class='awrc'>54.17</td><td align="right" class='awrc'>5,922.08</td><td align="right" class='awrc'>5.94</td><td align="right" class='awrc'>6.68</td><td align="right" class='awrc'>90.40</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>282.56</td><td align="right" class='awrnc'>45,533</td><td align="right" class='awrnc'>43.53</td><td align="right" class='awrnc'>4,741.23</td><td align="right" class='awrnc'>5.96</td><td align="right" class='awrnc'>9.15</td><td align="right" class='awrnc'>57.89</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>93.97</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>14.48</td><td align="right" class='awrc'>566.53</td><td align="right" class='awrc'>16.59</td><td align="right" class='awrc'>14.67</td><td align="right" class='awrc'>49.60</td><td scope="row" class='awrc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>90.09</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>13.88</td><td align="right" class='awrnc'>566.62</td><td align="right" class='awrnc'>15.90</td><td align="right" class='awrnc'>14.60</td><td align="right" class='awrnc'>56.65</td><td scope="row" class='awrnc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>87.84</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>13.53</td><td align="right" class='awrc'>566.60</td><td align="right" class='awrc'>15.50</td><td align="right" class='awrc'>13.39</td><td align="right" class='awrc'>57.86</td><td scope="row" class='awrc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>62.01</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>9.55</td><td align="right" class='awrnc'>566.41</td><td align="right" class='awrnc'>10.95</td><td align="right" class='awrnc'>10.08</td><td align="right" class='awrnc'>69.40</td><td scope="row" class='awrnc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>49.45</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>7.62</td><td align="right" class='awrc'>566.41</td><td align="right" class='awrc'>8.73</td><td align="right" class='awrc'>11.69</td><td align="right" class='awrc'>65.39</td><td scope="row" class='awrc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>39.70</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>6.12</td><td align="right" class='awrnc'>565.58</td><td align="right" class='awrnc'>7.02</td><td align="right" class='awrnc'>6.34</td><td align="right" class='awrnc'>81.22</td><td scope="row" class='awrnc'><a class="awr" href="#ayb2zjspaq24n">ayb2zjspaq24n</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>39.65</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>6.11</td><td align="right" class='awrc'>566.63</td><td align="right" class='awrc'>7.00</td><td align="right" class='awrc'>6.51</td><td align="right" class='awrc'>81.44</td><td scope="row" class='awrc'><a class="awr" href="#8thj2ffrw6hnr">8thj2ffrw6hnr</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>38.54</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>5.94</td><td align="right" class='awrnc'>566.29</td><td align="right" class='awrnc'>6.81</td><td align="right" class='awrnc'>6.33</td><td align="right" class='awrnc'>80.92</td><td scope="row" class='awrnc'><a class="awr" href="#fxtw8kpwrmyrh">fxtw8kpwrmyrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>28.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.31</td><td align="right" class='awrc'>568.68</td><td align="right" class='awrc'>4.92</td><td align="right" class='awrc'>5.93</td><td align="right" class='awrc'>82.34</td><td scope="row" class='awrc'><a class="awr" href="#dpnvk07hr10yx">dpnvk07hr10yx</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>27.69</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.27</td><td align="right" class='awrnc'>566.59</td><td align="right" class='awrnc'>4.89</td><td align="right" class='awrnc'>6.00</td><td align="right" class='awrnc'>82.90</td><td scope="row" class='awrnc'><a class="awr" href="#ajx8j2hvgamh9">ajx8j2hvgamh9</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>27.58</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.25</td><td align="right" class='awrc'>565.38</td><td align="right" class='awrc'>4.88</td><td align="right" class='awrc'>6.02</td><td align="right" class='awrc'>82.72</td><td scope="row" class='awrc'><a class="awr" href="#d1j2yjcpr4vg8">d1j2yjcpr4vg8</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>26.84</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.14</td><td align="right" class='awrnc'>565.38</td><td align="right" class='awrnc'>4.75</td><td align="right" class='awrnc'>6.02</td><td align="right" class='awrnc'>83.66</td><td scope="row" class='awrnc'><a class="awr" href="#2sggy6afm410z">2sggy6afm410z</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>13.76</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>2.12</td><td align="right" class='awrc'>566.59</td><td align="right" class='awrc'>2.43</td><td align="right" class='awrc'>13.08</td><td align="right" class='awrc'>65.04</td><td scope="row" class='awrc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>12.90</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1.99</td><td align="right" class='awrnc'>566.12</td><td align="right" class='awrnc'>2.28</td><td align="right" class='awrnc'>11.51</td><td align="right" class='awrnc'>67.43</td><td scope="row" class='awrnc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>0.53</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.71</td><td align="right" class='awrc'>74.39</td><td align="right" class='awrc'>2.76</td><td align="right" class='awrc'>23.61</td><td scope="row" class='awrc'><a class="awr" href="#9x2prazfz86dz">9x2prazfz86dz</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'> select s.file#, s.block#, s.t...</td></tr>
<tr><td align="right" class='awrnc'>0.37</td><td align="right" class='awrnc'>89</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.44</td><td align="right" class='awrnc'>83.22</td><td align="right" class='awrnc'>5.09</td><td align="right" class='awrnc'>1.67</td><td scope="row" class='awrnc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>3.23</td><td align="right" class='awrc'>5.34</td><td align="right" class='awrc'>47.78</td><td align="right" class='awrc'>18.61</td><td scope="row" class='awrc'><a class="awr" href="#a95n8p4vpxmps">a95n8p4vpxmps</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>begin prvt_hdm.execute_slave_a...</td></tr>
<tr><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>3.22</td><td align="right" class='awrnc'>5.35</td><td align="right" class='awrnc'>47.74</td><td align="right" class='awrnc'>18.64</td><td scope="row" class='awrnc'><a class="awr" href="#drktaf71uygnb">drktaf71uygnb</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.prvt_hdm.auto_execut...</td></tr>
<tr><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>36.41</td><td align="right" class='awrc'>33.43</td><td align="right" class='awrc'>26.10</td><td scope="row" class='awrc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>566.31</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.09</td><td align="right" class='awrnc'>84.96</td><td scope="row" class='awrnc'><a class="awr" href="#9m8b40kyd8ksd">9m8b40kyd8ksd</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>55.05</td><td align="right" class='awrc'>50.79</td><td align="right" class='awrc'>6.12</td><td scope="row" class='awrc'><a class="awr" href="#a2kfmf3xv45kg">a2kfmf3xv45kg</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into WRH$_SERVICE_STAT ...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>8.94</td><td align="right" class='awrnc'>7.22</td><td align="right" class='awrnc'>85.49</td><td scope="row" class='awrnc'><a class="awr" href="#fsprw99ahsvyn">fsprw99ahsvyn</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select typeid, roottoid from t...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>13.81</td><td align="right" class='awrc'>8.55</td><td align="right" class='awrc'>72.91</td><td scope="row" class='awrc'><a class="awr" href="#8swypbbr0m372">8swypbbr0m372</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select order#, columns, types ...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>12.72</td><td align="right" class='awrnc'>14.84</td><td align="right" class='awrnc'>66.32</td><td scope="row" class='awrnc'><a class="awr" href="#3un99a0zwp4vd">3un99a0zwp4vd</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select owner#, name, namespace...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>565.68</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.12</td><td align="right" class='awrc'>85.46</td><td scope="row" class='awrc'><a class="awr" href="#98t98dbg02qny">98t98dbg02qny</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.48</td><td align="right" class='awrnc'>0.42</td><td align="right" class='awrnc'>79.04</td><td align="right" class='awrnc'>11.53</td><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>565.20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.05</td><td align="right" class='awrc'>85.72</td><td scope="row" class='awrc'><a class="awr" href="#4y8pwam7nhcwj">4y8pwam7nhcwj</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>51.16</td><td align="right" class='awrnc'>43.08</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#cgtc5gb7c4g07">cgtc5gb7c4g07</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select dbid, status_flag from ...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>566.51</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.13</td><td align="right" class='awrc'>85.11</td><td scope="row" class='awrc'><a class="awr" href="#1svba844x4jw9">1svba844x4jw9</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="0hk2wm946s76n"></a>0hk2wm946s76n</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '16';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="14g8z0zv8sq36"></a>14g8z0zv8sq36</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '12';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="1svba844x4jw9"></a>1svba844x4jw9</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '18';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="24djtk7r8fz33"></a>24djtk7r8fz33</td><td class='awrnc'><pre_sqltext class="awr">update svcobj_access$ set accesses = :5,  inc_no = :6 where name = :1 AND pdb = :2 AND tsn = :3 AND objid = :4</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="2sggy6afm410z"></a>2sggy6afm410z</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '31';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="30nj40b6j5jjg"></a>30nj40b6j5jjg</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '3';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,	C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="3un99a0zwp4vd"></a>3un99a0zwp4vd</td><td class='awrnc'><pre_sqltext class="awr">select owner#, name, namespace, remoteowner, linkname, p_timestamp, p_obj#,  nvl(property, 0), subname, type#, flags, d_attrs from dependency$ d,  obj$ o where d_obj#=:1 and p_obj#=obj#(+) order by order#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="4y8pwam7nhcwj"></a>4y8pwam7nhcwj</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '27';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5pj15z95yy8bw"></a>5pj15z95yy8bw</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '2';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6c0z4993ppn5s"></a>6c0z4993ppn5s</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '15';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6n2qqv1brfhpp"></a>6n2qqv1brfhpp</td><td class='awrnc'><pre_sqltext class="awr">select ind.type#,  ind.property,    base_obj.obj#,  base_owner.name,   base_obj.name  from sys.ind$ ind,  sys.user$ base_owner,	sys.obj$  base_obj  where ind.obj#	    = :oid    and ind.dataobj#	    = :doid    and ind.bo#	   = base_obj.obj#    and base_obj.owner# = base_owner.user#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6xvp6nxs4a9n4"></a>6xvp6nxs4a9n4</td><td class='awrc'><pre_sqltext class="awr">select nvl(sum(space), 0) from recyclebin$ where ts# = :1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="86708bvah4akq"></a>86708bvah4akq</td><td class='awrnc'><pre_sqltext class="awr">select name from undo$ where file#=:1 and block#=:2 and ts#=:3 and	status$ != 1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="87gaftwrm2h68"></a>87gaftwrm2h68</td><td class='awrc'><pre_sqltext class="awr">select o.owner#, o.name, o.namespace, o.remoteowner, o.linkname, o.subname from obj$ o where o.obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="8swypbbr0m372"></a>8swypbbr0m372</td><td class='awrnc'><pre_sqltext class="awr">select order#, columns, types from access$ where d_obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="8thj2ffrw6hnr"></a>8thj2ffrw6hnr</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '10';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="98t98dbg02qny"></a>98t98dbg02qny</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '21';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9m8b40kyd8ksd"></a>9m8b40kyd8ksd</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '26';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="9x2prazfz86dz"></a>9x2prazfz86dz</td><td class='awrnc'><pre_sqltext class="awr"> select s.file#,  s.block#,  s.ts#,  t.obj#,  s.hwmincr,  t.obj# from tab$ t,  seg$ s where bitand(s.spare1,  4503599627370496) = 4503599627370496 and bitand(s.spare1,	65536) &lt;&gt; 65536  and s.file# = t.file# and s.ts# = t.ts# and s.block# = t.block# UNION  select s.file#,  s.block#,  s.ts#,  t.obj#,  s.hwmincr,  tab.obj# from tabpart$ t,  tab$ tab,  seg$ s  where bitand(s.spare1,  4503599627370496) = 4503599627370496 and bitand(s.spare1,	65536) &lt;&gt; 65536  and s.file# = t.file# and s.ts# = t.ts# and s.block# = t.block# and tab.obj# = t.bo# UNION  select s.file#,  s.block#,  s.ts#,  t.obj#,	s.hwmincr,   tab.obj# from tabsubpart$ t,  tab$ tab,  tabcompart$ tcp,	 seg$ s  where bitand(s.spare1,  4503599627370496) = 4503599627370496 and bitand(s.spare1,  65536) &lt;&gt; 65536  and s.file# = t.file# and s.ts# = t.ts# and s.block# = t.block# and t.pobj# = tcp.obj# and tab.obj# = tcp.bo#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9yv5dwv8k0awg"></a>9yv5dwv8k0awg</td><td class='awrc'><pre_sqltext class="awr">WITH MONITOR_DATA AS (SELECT INST_ID,  KEY,  NVL2(PX_QCSID,  NULL,  STATUS) STATUS,  FIRST_REFRESH_TIME,  LAST_REFRESH_TIME,  REFRESH_COUNT,  PROCESS_NAME,  SID,	SQL_ID,  SQL_EXEC_START,  SQL_EXEC_ID,	DBOP_NAME,  DBOP_EXEC_ID,  SQL_PLAN_HASH_VALUE,  SQL_FULL_PLAN_HASH_VALUE,  SESSION_SERIAL#,  SQL_TEXT,  PX_SERVER#,  PX_SERVER_GROUP,	PX_SERVER_SET,	PX_QCINST_ID,  PX_QCSID,  CASE WHEN ELAPSED_TIME &lt; (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) THEN (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) ELSE ELAPSED_TIME END ELAPSED_TIME,  QUEUING_TIME,  CPU_TIME,  APPLICATION_WAIT_TIME,  CONCURRENCY_WAIT_TIME,  CLUSTER_WAIT_TIME,	USER_IO_WAIT_TIME,  CASE WHEN ELAPSED_TIME &lt; (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) THEN 0 ELSE ELAPSED_TIME - (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) END OTHER_WAIT_TIME,  PLSQL_EXEC_TIME,  JAVA_EXEC_TIME,  FETCHES,	BUFFER_GETS,  IO_INTERCONNECT_BYTES IO_INTER_BYTES,  PHYSICAL_READ_REQUESTS READ_REQS,	PHYSICAL_READ_BYTES READ_BYTES,  PHYSICAL_WRITE_REQUESTS WRITE_REQS,  PHYSICAL_WRITE_BYTES WRITE_BYTES,  NVL(PHYSICAL_READ_BYTES,  0) + NVL(PHYSICAL_WRITE_BYTES,  0) IO_BYTES,  NVL(PHYSICAL_READ_REQUESTS,  0) + NVL(PHYSICAL_WRITE_REQUESTS,  0) IO_REQS,  IO_CELL_UNCOMPRESSED_BYTES IO_UNC_BYTES,	IO_CELL_OFFLOAD_ELIGIBLE_BYTES IO_ELIG_BYTES,  IO_CELL_OFFLOAD_RETURNED_BYTES IO_RET_BYTES,  USER# USERID,  USERNAME,  MODULE,	ACTION,  SERVICE_NAME,	CLIENT_IDENTIFIER,  CLIENT_INFO,  PROGRAM,  PLSQL_OBJECT_ID PL_OID,  PLSQL_SUBPROGRAM_ID PL_PROGID,  PLSQL_ENTRY_OBJECT_ID PL_ENTRY_OID,  PLSQL_ENTRY_SUBPROGRAM_ID PL_ENTRY_PROGID,  PX_MAXDOP MAX_DOP,  PX_IS_CROSS_INSTANCE,  PX_MAXDOP_INSTANCES MAX_DOP_INSTANCES,  PX_SERVERS_REQUESTED SERVERS_REQUESTED,  PX_SERVERS_ALLOCATED SERVERS_ALLOCATED,  ERROR_NUMBER,  ERROR_FACILITY,  ERROR_MESSAGE,  NVL2(OTHER_XML,  'Y',  NULL) HAS_OTHER_XML,	NVL2(BINDS_XML,  'Y',  NULL) HAS_BINDS_XML,  NVL2(RM_CONSUMER_GROUP,  NVL2(RM_LAST_ACTION_TIME,  TO_CHAR(RM_LAST_ACTION_TIME,  :B12 ),	'00/00/0000 00:00:01') || XMLELEMENT( &quot;rminfo&quot;,  XMLATTRIBUTES( RM_LAST_ACTION AS &quot;rmlastact&quot;,  RM_LAST_ACTION_REASON AS &quot;rmlastreason&quot;,	TO_CHAR(RM_LAST_ACTION_TIME,  :B12 ) AS &quot;rmlasttime&quot;,  RM_CONSUMER_GROUP AS &quot;rmcg&quot;)).GETSTRINGVAL(),  '00/00/0000 00:00:00') RM_INFO,  CON_NAME,  CON_ID FROM GV$ALL_SQL_MONITOR MO1 WHERE MO1.INST_ID BETWEEN :B11 AND :B10 AND MO1.SQL_ID = NVL(:B9 ,  MO1.SQL_ID) AND MO1.SQL_EXEC_START = NVL(:B8 ,  MO1.SQL_EXEC_START) AND MO1.SQL_EXEC_ID = NVL(:B7 ,  MO1.SQL_EXEC_ID) OR (MO1.DBOP_NAME = NVL(:B6 ,  MO1.DBOP_NAME) AND MO1.DBOP_EXEC_ID = NVL(:B5 ,  MO1.DBOP_EXEC_ID)) AND ((:B4 = 1 AND MO1.PX_QCSID IS NULL) OR (MO1.PX_SERVER_GROUP = NVL(:B3 ,  MO1.PX_SERVER_GROUP) AND MO1.PX_SERVER_SET = NVL(:B2 ,  MO1.PX_SERVER_SET) AND MO1.PX_SERVER# = NVL(:B1 ,  MO1.PX_SERVER#)))),  MONITOR_AGG AS (SELECT MAX_PX_QCSID,  MAX_KEY,  MAX_INST_ID,  MAX_SESSION_ID,  MAX_SESSION_SERIAL,  MAX_PX_DOP,  MAX_PX_DOP_INSTANCES,  MAX_PX_IS_CROSS_INSTANCE,  SUM_SERVERS_REQUESTED,  SUM_SERVERS_ALLOCATED,  DIST_INST_COUNT,	DIST_PX_GROUP_COUNT,  DIST_PX_SET_COUNT,  MAX_PLAN_HASH_VALUE,	MAX_FULL_PLAN_HASH_VALUE,  MAX_USERID,	MAX_PROGRAM,  MAX_USERNAME,  MAX_MODULE,  MAX_ACTION,  MAX_SERVICE_NAME,  MAX_CLIENT_ID,  MAX_CLIENT_INFO,  MAX_ERROR_NUMBER,  MAX_ERROR_FACILITY,  MAX_ERROR_MESSAGE,	QC_HAS_OTHER_XML,  QC_HAS_BINDS_XML,  MAX_PL_OID,  MAX_PL_PROGID,  MAX_PL_ENTRY_OID,  MAX_PL_ENTRY_PROGID,  MAX_SQL_ID,  MAX_SQL_EXEC_START,  MAX_SQL_EXEC_ID,	MAX_LAST_REFRESH_TIME,	MAX_DBOP_NAME,	MAX_DBOP_EXEC_ID,  CASE WHEN MAX_PL_OID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,  NULL,  '',  '.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = MAX_PL_OID AND P.SUBPROGRAM_ID = MAX_PL_PROGID AND ROWNUM = 1),  'Unavailable') END MAX_PL_NAME,  CASE WHEN MAX_PL_ENTRY_OID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,	NULL,  '',  '.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = MAX_PL_ENTRY_OID AND P.SUBPROGRAM_ID = MAX_PL_ENTRY_PROGID AND ROWNUM = 1),  'Unavailable') END MAX_PL_ENTRY_NAME,  MAX_STATUS,	SUM_REFRESH_COUNT,  MIN_FIRST_REFRESH_TIME,  SQLMON_TEXT,  SUM_ELAPSED_TIME,  MAX_ELAPSED_TIME,  MAX_QUEUING_TIME,  SUM_CPU_TIME,  SUM_USER_IO_WAIT_TIME,  SUM_APPLICATION_WAIT_TIME,  SUM_CONCURRENCY_WAIT_TIME,  SUM_CLUSTER_WAIT_TIME,  SUM_PLSQL_EXEC_TIME,  SUM_JAVA_EXEC_TIME,  SUM_OTHER_WAIT_TIME,  SUM_FETCHES,  SUM_BUFFER_GETS,  SUM_READ_REQS,  SUM_READ_BYTES,  SUM_WRITE_REQS,  SUM_WRITE_BYTES,	SUM_IO_BYTES,  SUM_IO_INTER_BYTES,  SUM_IO_UNC_BYTES,  SUM_IO_ELIG_BYTES,  SUM_IO_RET_BYTES,  DECODE(:B14 ,  1,  'db_name',  SYS_CONTEXT('userenv',  'db_unique_name')) DB_UNIQUE_NAME,  DECODE(:B14 ,	1,  'platform_name',  SYS.DBMS_UTILITY.PORT_STRING) PLATFORM_NAME,  DECODE(:B14 ,  1,  'host_name',  SYS_CONTEXT('userenv',  'server_host')) HOST_NAME,  AGG_RM_INFO MAX_RM_INFO,  MAX_CON_NAME,  DECODE(MAX_CON_ID,  0,  NULL,  MAX_CON_ID) MAX_CON_ID FROM (SELECT MAX(PX_QCSID) MAX_PX_QCSID,  MAX(CASE WHEN PX_QCSID IS NULL THEN KEY ELSE NULL END) MAX_KEY,  MAX(CASE WHEN PX_QCSID IS NULL THEN INST_ID ELSE NULL END) MAX_INST_ID,  MAX(CASE WHEN PX_QCSID IS NULL THEN SID ELSE NULL END) MAX_SESSION_ID,  MAX(CASE WHEN PX_QCSID IS NULL THEN SESSION_SERIAL# ELSE NULL END) MAX_SESSION_SERIAL,  MAX(MAX_DOP) MAX_PX_DOP,  MAX(MAX_DOP_INSTANCES) MAX_PX_DOP_INSTANCES,  MAX(PX_IS_CROSS_INSTANCE) MAX_PX_IS_CROSS_INSTANCE,  SUM(SERVERS_REQUESTED) SUM_SERVERS_REQUESTED,	SUM(SERVERS_ALLOCATED) SUM_SERVERS_ALLOCATED,  COUNT(DISTINCT INST_ID) DIST_INST_COUNT,  COUNT(DISTINCT PX_SERVER_GROUP) DIST_PX_GROUP_COUNT,  COUNT(DISTINCT PX_SERVER_SET) DIST_PX_SET_COUNT,  MAX(SQL_PLAN_HASH_VALUE) MAX_PLAN_HASH_VALUE,	MAX(SQL_FULL_PLAN_HASH_VALUE) MAX_FULL_PLAN_HASH_VALUE,  MAX(USERID) MAX_USERID,  MAX(PROGRAM) MAX_PROGRAM,  MAX(USERNAME) MAX_USERNAME,  MAX(MODULE) MAX_MODULE,  MAX(ACTION) MAX_ACTION,  MAX(SERVICE_NAME) MAX_SERVICE_NAME,  MAX(CLIENT_IDENTIFIER) MAX_CLIENT_ID,	MAX(CLIENT_INFO) MAX_CLIENT_INFO,  MAX(ERROR_NUMBER) MAX_ERROR_NUMBER,	MAX(ERROR_FACILITY) MAX_ERROR_FACILITY,  MAX(ERROR_MESSAGE) MAX_ERROR_MESSAGE,	MAX(NVL2(PX_QCSID,  HAS_OTHER_XML,  NULL)) QC_HAS_OTHER_XML,  MAX(HAS_BINDS_XML) QC_HAS_BINDS_XML,  MAX(PL_OID) MAX_PL_OID,  MAX(PL_PROGID) MAX_PL_PROGID,  MAX(PL_ENTRY_OID) MAX_PL_ENTRY_OID,  MAX(PL_ENTRY_PROGID) MAX_PL_ENTRY_PROGID,  MAX(SQL_ID) MAX_SQL_ID,  MAX(SQL_EXEC_START) MAX_SQL_EXEC_START,  MAX(SQL_EXEC_ID) MAX_SQL_EXEC_ID,  MAX(LAST_REFRESH_TIME) MAX_LAST_REFRESH_TIME,	MAX(STATUS) MAX_STATUS,  SUM(REFRESH_COUNT) SUM_REFRESH_COUNT,	MIN(FIRST_REFRESH_TIME) MIN_FIRST_REFRESH_TIME,  MAX(DBOP_NAME) MAX_DBOP_NAME,	MAX(DBOP_EXEC_ID) MAX_DBOP_EXEC_ID,  CASE WHEN :B13 = 0 THEN NULL ELSE MAX(SQL_TEXT) END SQLMON_TEXT,  SUM(ELAPSED_TIME) SUM_ELAPSED_TIME,  MAX(ELAPSED_TIME) MAX_ELAPSED_TIME,  MAX(QUEUING_TIME) MAX_QUEUING_TIME,  SUM(CPU_TIME) SUM_CPU_TIME,  SUM(USER_IO_WAIT_TIME) SUM_USER_IO_WAIT_TIME,  SUM(APPLICATION_WAIT_TIME) SUM_APPLICATION_WAIT_TIME,  SUM(CONCURRENCY_WAIT_TIME) SUM_CONCURRENCY_WAIT_TIME,	SUM(CLUSTER_WAIT_TIME) SUM_CLUSTER_WAIT_TIME,  SUM(PLSQL_EXEC_TIME) SUM_PLSQL_EXEC_TIME,  SUM(JAVA_EXEC_TIME) SUM_JAVA_EXEC_TIME,  SUM(OTHER_WAIT_TIME) SUM_OTHER_WAIT_TIME,  SUM(FETCHES) SUM_FETCHES,  SUM(BUFFER_GETS) SUM_BUFFER_GETS,  SUM(READ_REQS) SUM_READ_REQS,  SUM(READ_BYTES) SUM_READ_BYTES,  SUM(WRITE_REQS) SUM_WRITE_REQS,  SUM(WRITE_BYTES) SUM_WRITE_BYTES,	NVL(SUM(READ_BYTES),  0) + NVL(SUM(WRITE_BYTES),  0) SUM_IO_BYTES,  SUM(IO_INTER_BYTES) SUM_IO_INTER_BYTES,  SUM(IO_UNC_BYTES) S
UM_IO_UNC_BYTES,  SUM(IO_ELIG_BYTES) SUM_IO_ELIG_BYTES,  SUM(IO_RET_BYTES) SUM_IO_RET_BYTES,  MAX(RM_INFO) AGG_RM_INFO,  MAX(CON_NAME) MAX_CON_NAME,  MAX(CON_ID) MAX_CON_ID FROM MONITOR_DATA) MD),  ASH_DATA AS (SELECT AD0.INST_ID,	AD0.SESSION_ID,  AD0.PLAN_LINE_ID,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  AD0.ACTIVITY_BUCKET_NUM,  AD0.PLAN_ACTIVITY_BUCKET_NUM,  AD0.SQL,  AD0.TOP_LEVEL_SQL_ID,  AD0.DBOP_NAME,  AD0.IS_MONITORED_SQL,  AD0.IS_PX_SLAVE,  AD0.BUCKET_ACTIVITY_START,  AD0.ACTIVITY_START,	AD0.BUCKET_ACTIVITY_END,  AD0.ACTIVITY_END,  AD0.ACTIVITY_COUNT,  AD0.ACTIVITY_TYPE,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.IMQ_COUNT,  AD0.WAIT_COUNT,  AD0.CPU_COUNT,  AD0.OTHER_SQL_COUNT,  AD0.PX_SERVER_SET,	AD0.PX_DFO_ACTIVITY_COUNT,  AD0.DFO_MOST_ACTIVE_IID,  AD0.DFO_MOST_ACTIVE_SID,	(CASE WHEN AD0.DFO_MOST_ACTIVE_IID = AD0.INST_ID AND AD0.DFO_MOST_ACTIVE_SID = AD0.SESSION_ID AND (((AD0.PX_DFO_ACTIVITY_COUNT / AD0.DFO_MOST_ACTIVE_COUNT) &gt;= AD0.PX_DOP * 1.05) OR ((AD0.PX_DFO_ACTIVITY_COUNT / AD0.DFO_MOST_ACTIVE_COUNT) &lt;= AD0.PX_DOP *0.95)) AND (AD0.DFO_DURATION * 100) &gt; :B32 THEN AD0.ACTIVITY_COUNT ELSE NULL END) DFO_MOST_ACTIVE_COUNT,	AD0.BUCKET_DISTINCT_SAMPLES,  AD0.SQL_BUCKET_DISTINCT_SAMPLES,	CASE WHEN AD0.PX_SERVER_GROUP IS NULL AND AD0.IS_PX_SLAVE = 1 THEN 1 ELSE AD0.PX_SERVER_GROUP END PX_SERVER_GROUP,  AD0.PX_STEP_ID,  AD0.PX_DFO_PAIR_TYPE,  AD0.PX_DFO_PAIR_ID,  AD0.PX_STEP_ARG,  AD0.PX_DOP,	CASE WHEN AD0.PX_DOP IS NOT NULL AND AD0.PX_DOP &lt;&gt; AD0.PX_MIN_DOP AND AD0.PX_MIN_DOP != 0 THEN PX_MIN_DOP ELSE NULL END PX_MIN_DOP FROM (SELECT /*+ use_hash(ash) leading(mo) */ ASH.INST_ID,  ASH.IS_PX_SLAVE,  ASH.SESSION_ID,	ASH.PLAN_LINE_ID,  ASH.PLSQL_OBJECT_ID,  ASH.PLSQL_SUBPROGRAM_ID,  ASH.ACTIVITY_BUCKET_NUM,  ASH.PLAN_ACTIVITY_BUCKET_NUM,  ASH.SQL,  ASH.TOP_LEVEL_SQL_ID,  ASH.DBOP_NAME,  ASH.IS_MONITORED_SQL,  ASH.BUCKET_ACTIVITY_START,	ASH.ACTIVITY_START,  ASH.BUCKET_ACTIVITY_END,  ASH.ACTIVITY_END,  ASH.ACTIVITY_COUNT,  ASH.ACTIVITY_TYPE,  ASH.OTHER_SQL_ACTIVITY_TYPE,  ASH.EVENT_NAME,  ASH.IMQ_COUNT,  ASH.WAIT_COUNT,  ASH.CPU_COUNT,  ASH.OTHER_SQL_COUNT,  MO.PX_SERVER_SET,  ASH.PX_DFO_ACTIVITY_COUNT,	TRUNC(ASH.MOST_ACTIVE_IN_DFO / 10000000000) DFO_MOST_ACTIVE_COUNT,  MOD(TRUNC(ASH.MOST_ACTIVE_IN_DFO / 1000000),  10000) DFO_MOST_ACTIVE_IID,  MOD(ASH.MOST_ACTIVE_IN_DFO,  1000000) DFO_MOST_ACTIVE_SID,  ASH.DFO_DURATION,  ASH.BUCKET_DISTINCT_SAMPLES,  ASH.SQL_BUCKET_DISTINCT_SAMPLES,  MO.PX_SERVER_GROUP,  ASH.PX_STEP_ID,  ASH.PX_DFO_PAIR_TYPE,  ASH.PX_DFO_PAIR_ID,	ASH.PX_STEP_ARG,  ASH.PX_DOP,  ASH.PX_MIN_DOP FROM (SELECT /*+ no_merge */ MD.INST_ID,	MD.SID,  MD.SESSION_SERIAL#,  MD.PX_SERVER_SET,  MD.PX_SERVER_GROUP FROM MONITOR_DATA MD WHERE MD.SID IS NOT NULL OR :B31 = 1) MO,  (SELECT /*+ no_merge */ GVTF.INST_ID,  GVTF.GLOBAL_SAMPLE_ID,  GVTF.IS_PX_SLAVE,  GVTF.SESSION_ID,	GVTF.PLAN_LINE_ID,  GVTF.PLSQL_OBJECT_ID,  GVTF.PLSQL_SUBPROGRAM_ID,  GVTF.ACTIVITY_BUCKET_NUM,  GVTF.PLAN_ACTIVITY_BUCKET_NUM,  GVTF.SQL,  GVTF.TOP_LEVEL_SQL_ID,  GVTF.DBOP_NAME,  GVTF.IS_MONITORED_SQL,  GVTF.BUCKET_ACTIVITY_START,  GVTF.ACTIVITY_START,	GVTF.BUCKET_ACTIVITY_END,  GVTF.ACTIVITY_END,  GVTF.ACTIVITY_COUNT,  GVTF.ACTIVITY_TYPE,  GVTF.OTHER_SQL_ACTIVITY_TYPE,  GVTF.EVENT_NAME,  GVTF.IMQ_COUNT,  GVTF.WAIT_COUNT,  GVTF.CPU_COUNT,  GVTF.OTHER_SQL_COUNT,  MAX(GVTF.PER_SERVER_DFO_COUNT * 10000000000 + GVTF.INST_ID * 1000000 + GVTF.SESSION_ID) OVER(PARTITION BY GVTF.PX_DFO_PAIR_TYPE,	GVTF.PX_DFO_PAIR_ID) MOST_ACTIVE_IN_DFO,  SUM(GVTF.ACTIVITY_COUNT) OVER(PARTITION BY GVTF.PX_DFO_PAIR_TYPE,  GVTF.PX_DFO_PAIR_ID) PX_DFO_ACTIVITY_COUNT,  GVTF.DFO_DURATION,  GVTF.PX_STEP_ID,	GVTF.PX_DFO_PAIR_TYPE,	GVTF.PX_DFO_PAIR_ID,  GVTF.PX_STEP_ARG,  GVTF.PX_DOP,  GVTF.PX_MIN_DOP,  COUNT(DISTINCT GVTF.GLOBAL_SAMPLE_ID) OVER(PARTITION BY GVTF.ACTIVITY_BUCKET_NUM) BUCKET_DISTINCT_SAMPLES,  COUNT(DISTINCT GVTF.GLOBAL_SAMPLE_ID) OVER(PARTITION BY GVTF.SQL,	GVTF.ACTIVITY_BUCKET_NUM) SQL_BUCKET_DISTINCT_SAMPLES FROM TABLE(SYS.GV$(CURSOR( (SELECT USERENV('INSTANCE') INST_ID,  ASH2.GLOBAL_SAMPLE_ID,  CASE WHEN :B30 = 1 AND :B27 &gt; 1 THEN BUCKET_NUM ELSE NULL END ACTIVITY_BUCKET_NUM,  CASE WHEN :B29 = 1 AND :B27 &gt; 1 THEN BUCKET_NUM ELSE NULL END PLAN_ACTIVITY_BUCKET_NUM,  ASH2.SQL,  ASH2.TOP_LEVEL_SQL_ID,  ASH2.DBOP_NAME,  ASH2.IS_MONITORED_SQL,  ASH2.PLAN_LINE_ID,  ASH2.PLSQL_OBJECT_ID,  ASH2.PLSQL_SUBPROGRAM_ID,  ASH2.ACTIVITY_TYPE,  ASH2.OTHER_SQL_ACTIVITY_TYPE,	ASH2.EVENT_NAME,  ASH2.IS_PX_SLAVE,  ASH2.SESSION_ID,  ASH2.PX_STEP_ID,  ASH2.PX_DFO_PAIR_TYPE,  ASH2.PX_DFO_PAIR_ID,  ASH2.PX_STEP_ARG,  CASE WHEN ASH2.PX_DFO_PAIR_ID IS NOT NULL THEN DECODE(ASH2.PX_DOP,  0,  :B28 ,  ASH2.PX_DOP) ELSE NULL END PX_DOP,  ASH2.PX_MIN_DOP,	:B20 + NUMTODSINTERVAL(:B26 * (ASH2.BUCKET_NUM-1),  'SECOND') BUCKET_ACTIVITY_START,  :B20 + NUMTODSINTERVAL( :B26 * ASH2.BUCKET_NUM - 1,  'SECOND') BUCKET_ACTIVITY_END,  ASH2.ACTIVITY_START,  ASH2.ACTIVITY_END,  ASH2.ACTIVITY_COUNT,  ASH2.IMQ_COUNT,  ASH2.WAIT_COUNT,  ASH2.CPU_COUNT,  ASH2.OTHER_SQL_COUNT,  SUM(ASH2.ACTIVITY_COUNT) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE,  DECODE(ASH2.PX_DFO_PAIR_ID,  NULL,  NULL,  ASH2.SESSION_ID)) PER_SERVER_DFO_COUNT,  CEIL((MAX(ASH2.MAX_SAMPLE_DATE) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE) - MIN(ASH2.MIN_SAMPLE_DATE) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE)) * 3600 * 24) DFO_DURATION FROM (SELECT ASH1.BUCKET_NUM,  ASH1.GLOBAL_SAMPLE_ID,  ASH1.PLAN_LINE_ID,  ASH1.PLSQL_OBJECT_ID,  ASH1.PLSQL_SUBPROGRAM_ID,  ASH1.ACTIVITY_TYPE,  ASH1.OTHER_SQL_ACTIVITY_TYPE,  ASH1.EVENT_NAME,  ASH1.SESSION_ID,  ASH1.PX_STEP_ID,  ASH1.PX_STEP_ARG,  MAX(ASH1.SQL) SQL,  MAX(ASH1.IS_MONITORED_SQL) IS_MONITORED_SQL,  MAX(ASH1.PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  MAX(ASH1.PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  MIN(SAMPLE_DATE) MIN_SAMPLE_DATE,  MAX(SAMPLE_DATE) MAX_SAMPLE_DATE,  MAX(ASH1.IS_PX_SLAVE) IS_PX_SLAVE,  MAX(ASH1.PX_DOP) PX_DOP,	MIN(ASH1.PX_DOP) PX_MIN_DOP,  MIN(ASH1.SAMPLE_DATE) ACTIVITY_START,  MAX(ASH1.SAMPLE_DATE) ACTIVITY_END,  COUNT(ASH1.SQL) ACTIVITY_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Cpu' AND ASH1.EVENT_NAME = 'in memory' THEN 1 ELSE NULL END) IMQ_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE != 'Other SQL Execution' AND ASH1.ACTIVITY_TYPE != 'Non SQL' AND ASH1.ACTIVITY_TYPE != 'Cpu' THEN 1 ELSE NULL END) WAIT_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Cpu' AND ASH1.EVENT_NAME IS NULL THEN 1 ELSE NULL END) CPU_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Other SQL Execution' AND ASH1.ACTIVITY_TYPE != 'Non SQL' THEN 1 ELSE NULL END) OTHER_SQL_COUNT,  MAX(ASH1.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  MAX(ASH1.DBOP_NAME) DBOP_NAME FROM ( SELECT (CASE WHEN :B27 &gt; 1 THEN (TRUNC(DELTA_TIME_SECONDS/ :B26 ) + 1) ELSE 1 END) BUCKET_NUM,  ASH00.SQL,  ASH00.SAMPLE_DATE,  NVL2(DUP.C2,  TRUNC(DELTA_TIME_SECONDS/ (:B25 )) + 1,  NULL) GLOBAL_SAMPLE_ID,  NVL2(DUP.C2,  NULL,	ASH00.IS_MONITORED_SQL) IS_MONITORED_SQL,  NVL2(DUP.C2,  NULL,	ASH00.IN_INMEMORY_QUERY) IN_INMEMORY_QUERY,  NVL2(DUP.C2,  NULL,  ASH00.WAIT_CLASS) WAIT_CLASS,  NVL2(DUP.C2,  NULL,  ASH00.ACTIVITY_TYPE) ACTIVITY_TYPE,  NVL2(DUP.C2,  NULL,	ASH00.OTHER_SQL_ACTIVITY_TYPE) OTHER_SQL_ACTIVITY_TYPE,  NVL2(DUP.C2,  NULL,  ASH00.EVENT_NAME) EVENT_NAME,  NVL2(DUP.C2,  NULL,  ASH00.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  NVL2(DUP.C2,  NULL,  ASH00.DBOP_NAME) DBOP_NAME,  NVL2(DUP.C2,  NULL,  ASH00.IS_PX_SLAVE) IS_PX_SLAVE,  NVL2(DUP.C2,  NULL,  ASH00.SESSION_ID) SESSION_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLSQL_OBJECT_ID) PLSQL_OBJECT_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLSQL_SUBPROGRAM_ID) PLSQL_SUBPROGRAM_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLAN_LINE_ID) PLAN_LINE_ID,  NVL2(DUP.C2,  NULL,  ASH00.PX_STEP_ID) PX_STEP_ID,  NVL2(DUP.C2,  NULL,  ASH00.PX_STEP_ARG) PX_STEP_ARG,  NVL2(DUP.C2,  NULL,  ASH00.PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  NVL2(DUP.C2,  NULL,	ASH00.PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  NVL2(DUP.C2,  NULL,	ASH00.PX_DOP) PX_DOP FROM (SELECT 1 C1,  NULL C2 FROM V$DUAL UNI
ON ALL SELECT 1 C1,  1 C2 FROM V$DUAL) DUP,  (SELECT /*+ no_merge */ 1 C1,  ASH000.SAMPLE_DATE,  ASH000.IS_MONITORED_SQL,  ((EXTRACT(SECOND FROM(DELTA_TIME)) + EXTRACT(MINUTE FROM(DELTA_TIME)) * 60 + EXTRACT(HOUR FROM(DELTA_TIME)) * 3600 + EXTRACT(DAY FROM(DELTA_TIME)) * 86400)) DELTA_TIME_SECONDS,  ASH000.IN_INMEMORY_QUERY,	ASH000.WAIT_CLASS,  DECODE(ASH000.IS_MONITORED_SQL,  1,  NVL(ASH000.WAIT_CLASS,  'Cpu'),  DECODE(SQL_ID,  NULL,  'Non SQL',  'Other SQL Execution')) ACTIVITY_TYPE,  NVL(ASH000.WAIT_CLASS,  'Cpu') OTHER_SQL_ACTIVITY_TYPE,  DECODE(:B24 ,  1,  CASE WHEN ASH000.IS_MONITORED_SQL = 1 THEN NVL(ASH000.EVENT,  DECODE(ASH000.IN_INMEMORY_QUERY,  'Y',  'in memory',  ASH000.EVENT)) WHEN ASH000.SQL_ID IS NOT NULL THEN 'sql_id: ' || ASH000.SQL_ID WHEN ASH000.CALL_NAME IS NOT NULL THEN 'call: ' || ASH000.CALL_NAME ELSE 'anonymous: '|| ASH000.EVENT END,	NULL) EVENT_NAME,  CASE WHEN ASH000.IS_MONITORED_SQL = 1 AND (NVL(ASH000.SQL_ID,  :B9 ) = :B9 OR NVL(ASH000.DBOP_NAME,	:B6 ) = :B6 ) THEN 'this' WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.SQL_ID IS NOT NULL AND ASH000.TOP_LEVEL_SQL_ID != ASH000.SQL_ID THEN ASH000.TOP_LEVEL_SQL_ID WHEN ASH000.SQL_ID IS NOT NULL THEN ASH000.SQL_ID ELSE NVL(CALL_NAME,  'anonymous') END SQL,  CASE WHEN ASH000.IS_PX_SLAVE = 0 AND (ASH000.SQL_ID IS NULL OR ASH000.TOP_LEVEL_SQL_ID != ASH000.SQL_ID) THEN ASH000.TOP_LEVEL_SQL_ID END TOP_LEVEL_SQL_ID,  ASH000.DBOP_NAME,  ASH000.IS_PX_SLAVE,  CASE WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.IS_MONITORED_SQL != 1 THEN 65536 ELSE ASH000.SESSION_ID END SESSION_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PLSQL_OBJECT_ID,  NULL) PLSQL_OBJECT_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PLSQL_SUBPROGRAM_ID,  NULL) PLSQL_SUBPROGRAM_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.SQL_PLAN_LINE_ID,  NULL) PLAN_LINE_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_STEP_ID,  NULL) PX_STEP_ID,  CASE WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.IS_MONITORED_SQL = 1 AND ASH000.PX_STEP_ID IN (1,  2,  3) THEN ASH000.PX_STEP_ARG ELSE NULL END PX_DFO_PAIR_ID,  CASE WHEN ASH000.IS_PX_SLAVE = 0 OR ASH000.IS_MONITORED_SQL != 1 THEN NULL WHEN ASH000.PX_STEP_ID = 1 THEN 1 WHEN ASH000.PX_STEP_ID IN (2,  3) THEN 0 ELSE NULL END PX_DFO_PAIR_TYPE,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_STEP_ARG,	NULL) PX_STEP_ARG,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_DOP,  NULL) PX_DOP FROM (SELECT ASH0.*,  CASE WHEN ASH0.IS_TARGET_SQL = 1 OR (ASH0.IS_PX_SLAVE = 1 AND ((NVL(ASH0.TOP_LEVEL_SQL_ID,	ASH0.SQL_ID) IS NOT NULL AND NVL(ASH0.TOP_LEVEL_SQL_ID,  ASH0.SQL_ID) = :B9 ) OR (SQL_ID IS NULL AND :B23 = 'Y'))) THEN 1 ELSE 0 END IS_MONITORED_SQL FROM (SELECT (CASE WHEN (ASH.SQL_ID = :B9 AND ASH.SQL_EXEC_ID = :B7 AND ASH.SQL_EXEC_START = :B8 ) THEN 1 ELSE 0 END) IS_TARGET_SQL,  ASH.SQL_ID,  ASH.SQL_PLAN_LINE_ID,	ASH.PLSQL_OBJECT_ID,  ASH.PLSQL_SUBPROGRAM_ID,	ASH.TOP_LEVEL_SQL_ID,  DECODE(ASH.SQL_ID,  NULL,  ASH.TOP_LEVEL_CALL_NAME,  NULL) CALL_NAME,  ASH.EVENT,  ASH.IN_INMEMORY_QUERY,  ASH.WAIT_CLASS,  ASH.SQL_EXEC_ID,  ASH.SQL_EXEC_START,  ASH.DBOP_NAME,  ASH.DBOP_EXEC_ID,  ASH.SESSION_ID,  ASH.SESSION_SERIAL#,  CASE WHEN QC_INSTANCE_ID IS NOT NULL AND (ASH.SESSION_ID != ASH.QC_SESSION_ID OR ASH.SESSION_SERIAL# != ASH.QC_SESSION_SERIAL# OR USERENV('instance') != ASH.QC_INSTANCE_ID) THEN 1 ELSE 0 END IS_PX_SLAVE,  SAMPLE_TIME - CAST(:B20 AS TIMESTAMP) DELTA_TIME,  CAST(FROM_TZ(ASH.SAMPLE_TIME,  DBTIMEZONE) AS DATE) SAMPLE_DATE,  TRUNC(MOD(PX_FLAGS/65536,  32)) PX_STEP_ID,  MOD(PX_FLAGS,  65536) PX_STEP_ARG,  TRUNC(PX_FLAGS/2097152) PX_DOP FROM V$ALL_ACTIVE_SESSION_HISTORY ASH WHERE ((ASH.SESSION_ID = :B19 AND ASH.SESSION_SERIAL# = :B18 AND USERENV('INSTANCE') = :B17 ) OR (ASH.QC_SESSION_ID IS NOT NULL AND ASH.QC_SESSION_ID = :B19 AND ASH.QC_SESSION_SERIAL# = :B18 AND ASH.QC_INSTANCE_ID = :B17 )) AND SAMPLE_TIME BETWEEN :B16 AND :B15 ) ASH0 WHERE (ASH0.SAMPLE_DATE BETWEEN :B20 + 1/24/3600 AND :B22 - 1/24/3600 OR (ASH0.SQL_ID = :B9 AND ASH0.SQL_EXEC_START = :B8 AND ASH0.SQL_EXEC_ID = :B7 ) OR (ASH0.DBOP_NAME = :B6 AND ASH0.DBOP_EXEC_ID = :B5 )) AND (:B21 IS NULL OR ASH0.SQL_PLAN_LINE_ID = :B21 ) AND (ASH0.IS_PX_SLAVE = 0 OR ASH0.SQL_ID IS NOT NULL)) ASH000 ) ASH00 WHERE ASH00.C1 = DUP.C1) ASH1 WHERE ASH1.BUCKET_NUM &gt; 0 AND ASH1.BUCKET_NUM &lt;= :B27 GROUP BY USERENV('INSTANCE'),  ASH1.GLOBAL_SAMPLE_ID,  ASH1.BUCKET_NUM,  ASH1.SESSION_ID,  ASH1.PLAN_LINE_ID,  ASH1.PLSQL_OBJECT_ID,  ASH1.PLSQL_SUBPROGRAM_ID,  ASH1.ACTIVITY_TYPE,  ASH1.EVENT_NAME,  ASH1.OTHER_SQL_ACTIVITY_TYPE,  ASH1.PX_STEP_ID,  ASH1.PX_STEP_ARG) ASH2)))) GVTF WHERE GVTF.INST_ID BETWEEN :B11 AND :B10 ) ASH WHERE ASH.GLOBAL_SAMPLE_ID IS NULL AND ASH.SESSION_ID = MO.SID(+) AND ASH.INST_ID = MO.INST_ID(+)) AD0),  RESPONSE_TIME_DATA AS (SELECT ADH.BUCKET_NUM,  ADH.SQL_ROWNUM,  ADH.SQL,	ADH.TOP_LEVEL_SQL_ID,  ADH.DBOP_NAME,  ADH.PX_ID,  DECODE( ADH.PX_STEP_ID,  NULL,  NULL,  0,  NULL,  1,  'PX Server(s) - Executing Parent DFO',  2,  'PX Server(s) - Executing Child DFO',  3,	'PX Server(s) - Sampling Child DFO',  4,  'PX Server(s) - Joining Group',  5,  'QC - Scheduling Child DFO',  6,  'QC - Scheduling Parent DFO',	7,  'QC - Initializing Objects',  8,  'QC - Flushing Objects',	9,  'QC - Allocating Slaves',  10,  'QC - Initializing Granules',  11,	'PX Server(s) - Parsing Cursor',  12,  'PX Server(s) - Executing Cursor',  13,	'PX Server(s) - Preparing Transaction',  14,  'PX Server(s) - Joining Transaction',  15,  'PX Server(s) - Load Commit',  16,  'PX Server(s) - Aborting Transaction',  17,  'QC - Executing Child DFO',	18,  'QC - Executing Parent DFO',  'PX Step - ' || PX_STEP_ID) PX_STEP_ID,  ADH.PX_STEP_ARG,  ADH.PX_DFO_PAIR_ID,  ADH.PX_DOP,	ADH.PX_MIN_DOP,  ADH.DFO_MOST_ACTIVE_IID,  ADH.DFO_MOST_ACTIVE_SID,  ADH.DFO_MOST_ACTIVE_COUNT,  ADH.ACTIVITY_START,  ADH.ACTIVITY_END,  ADH.ACTIVITY_TYPE,  ADH.OTHER_SQL_ACTIVITY_TYPE,  ADH.EVENT_NAME,  ADH.PLAN_LINE_ID,  ADH.PLSQL_OBJECT_ID,  ADH.PLSQL_SUBPROGRAM_ID,  CASE WHEN PLSQL_ROWNUM = 1 AND ADH.PLSQL_OBJECT_ID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,  NULL,  '',	'.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = ADH.PLSQL_OBJECT_ID AND P.SUBPROGRAM_ID = ADH.PLSQL_SUBPROGRAM_ID),	'Unavailable') ELSE NULL END PLSQL_NAME,  ADH.ACTIVITY_COUNT,  ADH.BUCKET_ACTIVE_SECONDS,  ADH.BUCKET_IDLE_SECONDS,  (CASE WHEN ADH.IS_MONITORED_SQL = 0 THEN ADH.ACTIVE_SECONDS WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_CPU_HEIGHT &gt;= :B34 THEN DECODE(ADH.ACTIVITY_TYPE,  'Cpu',  (ADH.DFO_PAIR_ACTIVITY_HEIGHT / ADH.DFO_PAIR_CPU_HEIGHT) * ADH.DFO_PAIR_TOTAL_SECONDS,  0) WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.PX_DOP &gt; :B34 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * DECODE(ADH.ACTIVITY_TYPE,  'Cpu',  ADH.DFO_PAIR_ACTIVITY_HEIGHT,  (ADH.DFO_PAIR_ACTIVITY_HEIGHT * (:B34 - ADH.DFO_PAIR_CPU_HEIGHT)) / (ADH.DFO_PAIR_TOTAL_HEIGHT_ADJ - ADH.DFO_PAIR_CPU_HEIGHT))) / :B34 WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL THEN (ADH.DFO_PAIR_TOTAL_SECONDS * ADH.DFO_PAIR_ACTIVITY_HEIGHT) / ADH.PX_DOP ELSE ADH.ACTIVE_SECONDS END) RESP_TIME,  (CASE WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_IDLE_HEIGHT &gt; 0 AND ADH.PX_DOP &gt; :B34 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * (ADH.DFO_PAIR_IDLE_HEIGHT * (:B34 - ADH.DFO_PAIR_CPU_HEIGHT)) / (ADH.DFO_PAIR_TOTAL_HEIGHT_ADJ - ADH.DFO_PAIR_CPU_HEIGHT)) / :B34 WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_IDLE_HEIGHT &gt; 0 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * ADH.DFO_PAIR_IDLE_HEIGHT) / ADH.PX_DOP ELSE 0 END) DFO_PAIR_IDLE_RESP_TIME,  ADH.DFO_PAIR_ACTIVITY_HEIGHT,  ADH.DFO_PAIR_CPU_HEIGHT,	ADH.DFO_PAIR_IDLE_HEIGHT,  ADH.DFO_PAIR_TOTAL_HEIGHT,  ADH.DFO_PAIR_CPU_ACTIVITY,  ADH.DFO_PAIR_TOTAL_SECONDS FROM (SELECT ADH_1.*,  (ROW_NUMBER() OVER(PARTITION BY ADH_1.PLSQL_OBJECT_ID,  ADH_1.PLSQL_SUBPROGRAM_ID ORDER BY ADH_1.BUCKET_NUM,  ADH_1.ACTIVITY_TYPE,  ADH_1.EVENT_NAME)) PLSQL_ROWNUM,  (ROW_NUMBER() OVER(PARTITION BY ADH_1.SQL ORDER BY ADH_1.BUCKET_NUM,  ADH_1.ACTIVITY_TYPE,  ADH_1.EVENT_NAME)) SQL_ROWNUM,  (
CASE WHEN ADH_1.PX_DFO_PAIR_ID IS NOT NULL AND (ADH_1.DFO_PAIR_TOTAL_HEIGHT &lt; ADH_1.PX_DOP) AND (ADH_1.DFO_PAIR_CPU_HEIGHT &lt; :B34 ) THEN ADH_1.PX_DOP - ADH_1.DFO_PAIR_TOTAL_HEIGHT ELSE 0 END) DFO_PAIR_IDLE_HEIGHT,  (CASE WHEN ADH_1.PX_DFO_PAIR_ID IS NOT NULL AND (ADH_1.DFO_PAIR_TOTAL_HEIGHT &lt; ADH_1.PX_DOP) AND (ADH_1.DFO_PAIR_CPU_HEIGHT &lt; :B34 ) THEN ADH_1.PX_DOP ELSE ADH_1.DFO_PAIR_TOTAL_HEIGHT END) DFO_PAIR_TOTAL_HEIGHT_ADJ FROM (SELECT ADH_0.*,  (CASE WHEN ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.DFO_PAIR_TOTAL_ACTIVITY * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_TOTAL_HEIGHT,	(CASE WHEN ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.DFO_PAIR_CPU_ACTIVITY * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_CPU_HEIGHT,  (CASE WHEN ADH_0.PX_DFO_PAIR_ID IS NOT NULL AND ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.ACTIVITY_COUNT * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_ACTIVITY_HEIGHT FROM (SELECT AD3.*,  (SUM(DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  0,	AD3.ACTIVE_SECONDS)) OVER(PARTITION BY DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  NULL,  AD3.BUCKET_NUM),  DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  NULL,  AD3.PX_STEP_ARG))) DFO_PAIR_TOTAL_SECONDS FROM (SELECT AD2.*,  CASE WHEN AD2.IS_MONITORED_SQL = 0 THEN SQL_BUCKET_DISTINCT_SAMPLES * :B25 WHEN AD2.PX_ID IS NULL THEN AD2.ACTIVITY_COUNT * :B25 WHEN AD2.BUCKET_PARALLEL_MON_ACTIVITY &gt; 0 THEN (AD2.ACTIVITY_COUNT * AD2.BUCKET_PARALLEL_MON_SECONDS) / AD2.BUCKET_PARALLEL_MON_ACTIVITY ELSE 0 END ACTIVE_SECONDS,  CASE WHEN AD2.BUCKET_INTERVAL &gt; BUCKET_ACTIVE_SECONDS THEN AD2.BUCKET_INTERVAL - BUCKET_ACTIVE_SECONDS ELSE 0 END BUCKET_IDLE_SECONDS FROM (SELECT AD1.*,  (AD1.BUCKET_SERIAL_MON_ACTIVITY * :B25 ) BUCKET_SERIAL_MON_SECONDS,	(AD1.BUCKET_TOTAL_MON_ACTIVITY - AD1.BUCKET_SERIAL_MON_ACTIVITY) BUCKET_PARALLEL_MON_ACTIVITY,	(AD1.BUCKET_ACTIVE_SECONDS - (AD1.BUCKET_OTHER_ACTIVITY + AD1.BUCKET_SERIAL_MON_ACTIVITY) * :B25 ) BUCKET_PARALLEL_MON_SECONDS,  (AD1.BUCKET_OTHER_ACTIVITY * :B25 ) BUCKET_OTHER_SECONDS,  DECODE(AD1.PX_DFO_PAIR_ID,	NULL,  NULL,  SUM(AD1.ACTIVITY_COUNT) OVER(PARTITION BY DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  AD1.BUCKET_NUM),  AD1.PX_DFO_PAIR_ID)) DFO_PAIR_TOTAL_ACTIVITY,  DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  SUM(DECODE(AD1.ACTIVITY_TYPE,  'Cpu',  AD1.ACTIVITY_COUNT,  0)) OVER(PARTITION BY DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  AD1.BUCKET_NUM),  AD1.PX_DFO_PAIR_ID)) DFO_PAIR_CPU_ACTIVITY FROM (SELECT AD01.*,  NVL((SUM(DECODE(AD01.IS_MONITORED_SQL,  1,	AD01.ACTIVITY_COUNT,  NULL)) OVER(PARTITION BY AD01.BUCKET_NUM)),  0) BUCKET_TOTAL_MON_ACTIVITY,  (NVL(SUM(CASE WHEN AD01.IS_MONITORED_SQL = 1 AND AD01.PX_ID IS NULL THEN AD01.ACTIVITY_COUNT ELSE NULL END) OVER(PARTITION BY AD01.BUCKET_NUM),  0)) BUCKET_SERIAL_MON_ACTIVITY,  (NVL((SUM(DECODE(AD01.IS_MONITORED_SQL,  0,  AD01.SQL_BUCKET_DISTINCT_SAMPLES,  NULL)) OVER(PARTITION BY AD01.BUCKET_NUM)),  0)) BUCKET_OTHER_ACTIVITY,  (NVL(AD01.BUCKET_DISTINCT_SAMPLES,  0) * :B25 ) BUCKET_ACTIVE_SECONDS,  DECODE(AD01.BUCKET_NUM,  :B27 ,  MOD(:B32 ,  :B26 ),  :B26 ) BUCKET_INTERVAL FROM (SELECT AD0.ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.PX_ID,	AD0.ACTIVITY_TYPE,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.PLAN_LINE_ID,  AD0.PX_STEP_ID,  AD0.PX_STEP_ARG,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,	MAX(AD0.IS_MONITORED_SQL) IS_MONITORED_SQL,  MAX(AD0.SQL) SQL,	MAX(AD0.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  MAX(AD0.DBOP_NAME) DBOP_NAME,  MAX(DECODE(AD0.DFO_MOST_ACTIVE_COUNT,  NULL,  NULL,  AD0.DFO_MOST_ACTIVE_IID)) DFO_MOST_ACTIVE_IID,  MAX(DECODE(AD0.DFO_MOST_ACTIVE_COUNT,	NULL,  NULL,  AD0.DFO_MOST_ACTIVE_SID)) DFO_MOST_ACTIVE_SID,  SUM(AD0.DFO_MOST_ACTIVE_COUNT) DFO_MOST_ACTIVE_COUNT,  MAX(PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  MAX(PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  MAX(AD0.PX_DOP) PX_DOP,  MIN(AD0.PX_MIN_DOP) PX_MIN_DOP,  MAX(AD0.BUCKET_DISTINCT_SAMPLES) BUCKET_DISTINCT_SAMPLES,	MAX(AD0.SQL_BUCKET_DISTINCT_SAMPLES) SQL_BUCKET_DISTINCT_SAMPLES FROM (SELECT AD00.*,  (CASE WHEN AD00.IS_MONITORED_SQL = 1 AND (AD00.SESSION_ID != :B19 OR AD00.INST_ID != :B17 ) THEN AD00.PX_SERVER_GROUP END) PX_ID FROM ASH_DATA AD00 WHERE :B33 = 1 ) AD0 GROUP BY AD0.ACTIVITY_BUCKET_NUM,  AD0.PX_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.PLAN_LINE_ID,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  AD0.PX_STEP_ID,  AD0.PX_STEP_ARG ) AD01) AD1) AD2) AD3) ADH_0) ADH_1) ADH) SELECT /*+ no_monitor no_xml_query_rewrite
		 opt_param('_gby_hash_aggregation_enabled',  'false') */ XMLELEMENT( &quot;sql_monitor_report&quot;,  XMLATTRIBUTES(:B59 AS &quot;version&quot;,  TO_CHAR(:B58 ,  :B12 ) AS &quot;sysdate&quot;),  XMLELEMENT( &quot;report_parameters&quot;,  NULL,  CASE WHEN :B57 IS NOT NULL THEN XMLFOREST( :B57 AS &quot;dbop_name&quot;,  :B56 AS &quot;dbop_exec_id&quot;) ELSE XMLFOREST( :B55 AS
&quot;sql_id&quot;,  :B54 AS &quot;sql_exec_id&quot;) END,  XMLFOREST( :B53 AS &quot;session_id&quot;,	:B52 AS &quot;session_serial&quot;,  TO_CHAR(:B51 ,  :B12 ) AS &quot;sql_exec_start&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR(:B50 ,  :B12 ) AS &quot;interval_start&quot;,  TO_CHAR(:B22 ,  :B12 ) AS &quot;interval_end&quot;,  DECODE(:B49 ,  'Y',	:B48 ,	NULL) AS &quot;auto_refresh&quot;,  :B47 AS &quot;base_path&quot;),  CASE WHEN :B23 = 'Y' AND :B46 IS NOT NULL AND NOT (:B4 = 1 AND :B3 IS NULL AND :B2 IS NULL AND :B1 IS NULL) THEN XMLELEMENT( &quot;parallel_filter&quot;,	NULL,  XMLFOREST( DECODE(:B4 ,	1,  'yes',  'no') AS &quot;qc&quot;,  :B3 AS &quot;server_group&quot;,	:B2 AS &quot;server_set&quot;,	:B1 AS &quot;server_number&quot;)) ELSE NULL END),  CASE WHEN :B14 = 1 THEN XMLELEMENT( &quot;derived_parameters_testing&quot;,  NULL,	XMLFOREST(:B11 AS &quot;instance_id_low&quot;,	:B10 AS &quot;instance_id_high&quot;,  :B26 AS &quot;bucket_interval_sec&quot;,  :B32 AS &quot;interval_second&quot;,  :B27 AS &quot;bucket_calc_count&quot;,  :B45 AS &quot;bucket_calc_max_count&quot;,  :B13 AS &quot;sel_sqltext&quot;)) ELSE NULL END,  (SELECT XMLCONCAT( CASE WHEN :B46 IS NULL AND :B67 IS NULL THEN XMLELEMENT( &quot;target&quot;,  XMLATTRIBUTES(:B17 AS &quot;instance_id&quot;,  :B19 AS &quot;session_id&quot;,  :B18 AS &quot;session_serial&quot;,  NVL2(:B6 ,	NULL,  :B9 ) AS &quot;sql_id&quot;,  NVL2(:B6 ,  NULL,	TO_CHAR(:B8 ,  :B12 )) AS &quot;sql_exec_start&quot;,  NVL2(:B6 ,  NULL,  :B7 ) AS &quot;sql_exec_id&quot;,  NVL2(:B6 ,  :B6 ,	NULL) AS &quot;dbop_name&quot;,  NVL2(:B6 ,  :B5 ,  NULL) AS &quot;dbop_exec_id&quot;,	NVL2(:B6 ,  TO_CHAR(:B8 ,  :B12 ),  NULL) AS &quot;dbop_exec_start&quot;,  NVL2(:B6 ,  NULL,  MAX_PLAN_HASH_VALUE) AS &quot;sql_plan_hash&quot;,  NVL2(:B6 ,  NULL,  MAX_FULL_PLAN_HASH_VALUE) AS &quot;sql_full_plan_hash&quot;,  MAGG.DB_UNIQUE_NAME AS &quot;db_unique_name&quot;,  MAGG.PLATFORM_NAME AS &quot;db_platform_name&quot;,  MAGG.HOST_NAME AS &quot;report_host_name&quot;),  NVL2(SUM_SERVERS_REQUESTED,  XMLELEMENT( &quot;servers_requested&quot;,  NULL,  SUM_SERVERS_REQUESTED),  NULL),  NVL2(SUM_SERVERS_ALLOCATED,  XMLELEMENT( &quot;servers_allocated&quot;,	NULL,  SUM_SERVERS_ALLOCATED),	NULL),	NVL2(MAX_USERID,  XMLELEMENT( &quot;user_id&quot;,  NULL,  MAX_USERID),  NULL),  NVL2(MAX_USERNAME,  XMLELEMENT( &quot;user&quot;,  NULL,  MAX_USERNAME),  NULL),  NVL2(MAX_CON_ID,  XMLELEMENT( &quot;con_id&quot;,  NULL,  MAX_CON_ID),  NULL),  NVL2(MAX_CON_NAME,  XMLELEMENT( &quot;con_name&quot;,  NULL,  MAX_CON_NAME),  NULL),  NVL2(MAX_PROGRAM,  XMLELEMENT( &quot;program&quot;,  NULL,  MAX_PROGRAM),  NULL),  NVL2(MAX_MODULE,  XMLELEMENT( &quot;module&quot;,  NULL,  MAX_MODULE),  NULL),  NVL2(MAX_ACTION,  XMLELEMENT( &quot;action&quot;,  NULL,  MAX_ACTION),  NULL),  NVL2(MAX_SERVICE_NAME,  XMLELEMENT( &quot;service&quot;,  NULL,  MAX_SERVICE_NAME),  NULL),  NVL2(MAX_CLIENT_ID,  XMLELEMENT( &quot;client_id&quot;,  NULL,  MAX_CLIENT_ID),  NULL),  NVL2(MAX_CLIENT_INFO,  XMLELEMENT( &quot;client_info&quot;,  NULL,  MAX_CLIENT_INFO),  NULL),  NVL2(MAX_PL_ENTRY_OID,  XMLELEMENT( &quot;plsql_entry_object_id&quot;,  NULL,	MAX_PL_ENTRY_OID),  NULL),  NVL2(MAX_PL_ENTRY_PROGID,  XMLELEMENT( &quot;plsql_entry_subprogram_id&quot;,  NULL,  MAX_PL_ENTRY_PROGID),  NULL),  NVL2(MAX_PL_ENTRY_NAME,  XMLELEMENT( &quot;plsql_entry_name&quot;,  NULL,  MAX_PL_ENTRY_NAME),  NULL),  NVL2(MAX_PL_OID,  XMLELEMENT( &quot;plsql_object_id&quot;,  NULL,  MAX_PL_OID),  NULL),  NVL2(MAX_PL_PROGID,  XMLELEMENT( &quot;plsql_subprogram_id&quot;,  NULL,  MAX_PL_PROGID),  NULL),  NVL2(MAX_PL_NAME,	XMLELEMENT( &quot;plsql_name&quot;,  NULL,  MAX_PL_NAME),  NULL),  CASE WHEN (:B13 = 0 OR :B6 IS NOT NULL) THEN NULL ELSE XMLELEMENT( &quot;sql_fulltext&quot;,  XMLATTRIBUTES( NVL2(:B65 ,  'Y',  :B66 ) AS &quot;is_full&quot;),  NVL2(:B65 ,  :B65 ,  SQLMON_TEXT)) END,  XMLELEMENT( &quot;status&quot;,  NULL,  MAX_STATUS),  XMLELEMENT( &quot;refresh_count&quot;,  NULL,  SUM_REFRESH_COUNT),  XMLELEMENT( &quot;first_refresh_time&quot;,  NULL,  TO_CHAR(MIN_FIRST_REFRESH_TIME,  :B12 )),  XMLELEMENT( &quot;last_refresh_time&quot;,  NULL,  TO_CHAR(:B58 ,  :B12 )),  XMLELEMENT( &quot;duration&quot;,  NULL,  GREATEST(:B64 ,  LEAST(MAX_ELAPSED_TIME/1000000,  1),  CEIL(MAX_QUEUING_TIME/1000000))),  DECODE(MAX_RM_INFO,  '00/00/0000 00:00:00',  NULL,  XMLTYPE(SUBSTR(MAX_RM_INFO,	20))),	CASE WHEN (:B62 = 'Y') THEN XMLELEMENT( &quot;adaptive_plan&quot;,  XMLATTRIBUTES(:B63 AS &quot;is_final&quot;),  :B62 ) ELSE NULL END ) END,  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  DECODE(NVL(SUM_ELAPSED_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  SUM_ELAPSED_TIME)),  DECODE(NVL(MAX_QUEUING_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX_QUEUING_TIME)),  DECODE(NVL(SUM_CPU_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  SUM_CPU_TIME)),  DECODE(NVL(SUM_USER_IO_WAIT_TIME,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  SUM_USER_IO_WAIT_TIME)),  DECODE(NVL(SUM_APPLICATION_WAIT_TIME,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  SUM_APPLICATION_WAIT_TIME)),  DECODE(NVL(SUM_CONCURRENCY_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  SUM_CONCURRENCY_WAIT_TIME)),  DECODE(NVL(SUM_CLUSTER_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  SUM_CLUSTER_WAIT_TIME)),	DECODE(NVL(SUM_PLSQL_EXEC_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  SUM_PLSQL_EXEC_TIME)),  DECODE(NVL(SUM_JAVA_EXEC_TIME,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  SUM_JAVA_EXEC_TIME)),  DECODE(NVL(SUM_OTHER_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  SUM_OTHER_WAIT_TIME)),  DECODE(NVL(SUM_FETCHES,  0),	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  SUM_FETCHES)),  DECODE(NVL(SUM_BUFFER_GETS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  SUM_BUFFER_GETS)),  DECODE(NVL(SUM_READ_REQS,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),  SUM_READ_REQS)),  DECODE(NVL(SUM_WRITE_REQS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  SUM_WRITE_REQS)),  DECODE(NVL(SUM_READ_REQS,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  SUM_READ_REQS)),  DECODE(NVL(SUM_READ_BYTES,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),	SUM_READ_BYTES)),  DECODE(NVL(SUM_WRITE_REQS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),	SUM_WRITE_REQS)),  DECODE(NVL(SUM_WRITE_BYTES,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  SUM_WRITE_BYTES)),  DECODE(NVL(SUM_IO_UNC_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  SUM_IO_UNC_BYTES)),  DECODE(NVL(SUM_IO_ELIG_BYTES,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  SUM_IO_ELIG_BYTES)),  DECODE(NVL(SUM_IO_RET_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  SUM_IO_RET_BYTES)),  CASE WHEN SUM_IO_INTER_BYTES IS NULL OR SUM_IO_BYTES = 0 OR SUM_IO_INTER_BYTES = SUM_IO_BYTES OR NVL(SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE
 XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(SUM_IO_BYTES / DECODE(SUM_IO_INTER_BYTES,	0,  1,	SUM_IO_INTER_BYTES),  2)) END,	CASE WHEN NVL(SUM_IO_ELIG_BYTES,  0) = 0 OR SUM_IO_BYTES = 0 OR SUM_IO_UNC_BYTES = SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100* (GREATEST(SUM_IO_UNC_BYTES,  SUM_IO_ELIG_BYTES) - SUM_IO_RET_BYTES) / SUM_IO_ELIG_BYTES,  2))) END),	CASE WHEN :B33 = 1 THEN (SELECT CASE WHEN SUM(ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLAGG( XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME)) ELSE NULL END FROM (SELECT AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1) ELSE NULL END,  NVL2(MAX_ERROR_NUMBER,  XMLELEMENT( &quot;error&quot;,  XMLATTRIBUTES(MAX_ERROR_NUMBER AS &quot;number&quot;,  MAX_ERROR_FACILITY AS &quot;facility&quot;),  MAX_ERROR_MESSAGE),  NULL),  CASE WHEN :B61 = 1 AND MAGG.QC_HAS_BINDS_XML = 'Y' THEN (SELECT XMLTYPE(BINDS_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = :B17 AND MON.KEY = MAGG.MAX_KEY AND MON.SID = MAGG.MAX_SESSION_ID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END,  CASE WHEN :B60 = 1 AND MAGG.QC_HAS_OTHER_XML = 'Y' THEN (SELECT XMLTYPE(OTHER_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = MAGG.MAX_INST_ID AND MON.KEY = MAGG.MAX_KEY AND MON.SID = MAGG.MAX_SESSION_ID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END) FROM MONITOR_AGG MAGG),  CASE WHEN :B44 = 1 THEN (SELECT CASE WHEN AT.ACTIVITY_COUNT &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( :B41 AS
&quot;ash_missing_seconds&quot;,  TO_CHAR(AT.ACTIVITY_START,  :B12 ) AS &quot;first_sample_time&quot;,	TO_CHAR(AT.ACTIVITY_END,  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((AT.ACTIVITY_END - AT.ACTIVITY_START) * 3600 * 24) + 1 AS &quot;duration&quot;,  AT.ACTIVITY_COUNT AS &quot;count&quot;,  AT.IMQ_COUNT AS &quot;imq_count&quot;,  AT.WAIT_COUNT AS &quot;wait_count&quot;,  AT.CPU_COUNT AS &quot;cpu_count&quot;,  DECODE(AT.OTHER_SQL_COUNT,  0,  NULL,  AT.OTHER_SQL_COUNT) AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  AT.ACTIVITY_TOTAL,	AH.GLOB_ACTIVITY_HISTO) WHEN :B41 IS NOT NULL THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( DECODE( :B41 ,  -1,  'all',  TO_CHAR( :B41 )) AS &quot;ash_missing_seconds&quot;)) ELSE NULL END FROM (SELECT MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) IMQ_COUNT,  SUM(AD1.WAIT_COUNT) WAIT_COUNT,  SUM(AD1.CPU_COUNT) CPU_COUNT,  SUM(AD1.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG( XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME) ACTIVITY_TOTAL FROM (SELECT AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME,  MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,	SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,	SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1) AT,  (SELECT CASE WHEN :B30 = 1 AND :B27 &gt; 1 THEN XMLELEMENT( &quot;activity_histogram&quot;,  XMLATTRIBUTES( :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR( :B20 ,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR( :B22 ,  :B12 ) AS &quot;end_time&quot;,  ROUND(( :B22 - :B20 ) *3600*24) + 1 AS &quot;duration&quot;),  XMLAGG( XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),  ACTIVITY_BUCKET) ORDER BY AD2.BUCKET_NUM)) ELSE NULL END GLOB_ACTIVITY_HISTO FROM (SELECT AD1.BUCKET_NUM,  SUM(ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(IMQ_COUNT) IMQ_COUNT,  SUM(WAIT_COUNT) WAIT_COUNT,  SUM(CPU_COUNT) CPU_COUNT,  SUM(OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  MIN(AD1.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD1.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG( XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,  AD1.EVENT_NAME AS &quot;event&quot;),	AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,  AD1.EVENT_NAME) ACTIVITY_BUCKET FROM (SELECT AD0.ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,	MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(AD0.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,	MAX(AD0.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1 GROUP BY AD1.BUCKET_NUM) AD2) AH) ELSE NULL END,	CASE WHEN :B33 = 1 THEN (SELECT CASE WHEN AH.ACTIVITY_COUNT &gt; 0 THEN XMLELEMENT( &quot;activity_detail&quot;,  XMLATTRIBUTES( TO_CHAR( :B20 ,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR( :B22 ,  :B12 ) AS &quot;end_time&quot;,  :B41 AS &quot;ash_missing_seconds&quot;,  TO_CHAR(AH.ACTIVITY_START,  :B12 ) AS &quot;first_sample_time&quot;,  TO_CHAR(AH.ACTIVITY_END,  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((AH.ACTIVITY_END - AH.ACTIVITY_START) * 3600 * 24) + 1 AS &quot;duration&quot;,  :B25 AS &quot;sample_interval&quot;,  :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,	ROUND((:B22 - :B20 ) *3600*24) + 1 AS &quot;bucket_duration&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B34 AS &quot;total_cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  AH.GLOB_ACTIVITY_HISTO) WHEN :B41 IS NOT NULL THEN XMLELEMENT( &quot;activity_detail&quot;,  XMLATTRIBUTES( DECODE( :B41 ,  -1,  'all',  TO_CHAR( :B41 )) AS &quot;ash_missing_seconds&quot;)) ELSE NULL END FROM (SELECT MIN(AD2.ACTIVITY_START) ACTIVITY_START,	MAX(AD2.ACTIVITY_END) ACTIVITY_END,  SUM(AD2.ACTIVITY_COUNT) ACTIVITY_COUNT,  XMLAGG( XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),  ACTIVITY_BUCKET_XML) ORDER BY AD2.BUCKET_NUM) GLOB_ACTIVITY_HISTO FROM (SELECT AD1.BUCKET_NUM,  MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  MAX(AD1.BUCKET_IDLE_SECONDS) BUCKET_IDLE_SECONDS,	XMLAGG( XMLCONCAT( CASE WHEN AD1.DFO_PAIR_IDLE_RESP_TIME != 0 AND DFO_PAIR_ROWNUM = 1 THEN XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( 'Parallel Skew' AS &quot;class&quot;,  AD1.PX_STEP_ARG AS &quot;line&quot;,  AD1.PX_ID AS &quot;px&quot;,	ROUND(AD1.DFO_PAIR_IDLE_RESP_TIME,  2) AS &quot;rt&quot;),  0) ELSE NULL END,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( NVL(AD1.OTHER_SQL,  AD1.RPI) AS &quot;sql&quot;,  AD1.NON_SQL AS &quot;non_sql&quot;,	AD1.CLASS AS &quot;class&quot;,  AD1.OTHER_SQL_CLASS AS &quot;other_sql_class&quot;,  AD1.EVENT AS &quot;event&quot;,  AD1.PLAN_LINE_ID AS &quot;line&quot;,  NVL2(AD1.PLSQL_OBJECT_ID,  AD1.PLSQL_OBJECT_ID||'.'|| AD1.PLSQL_SUBPROGRAM_ID,  NULL) AS &quot;plsql_id&quot;,  AD1.PLSQL_NAME AS &quot;plsql_name&quot;,  CASE WHEN AD1.SQL_ROWNUM = 1 THEN AD1.TOP_LEVEL_SQL_ID END AS &quot;top_sql_id&quot;,	CASE WHEN AD1.DBOP_NAME IS NOT NULL THEN AD1.DBOP_NAME END AS &quot;dbop_name&quot;,  CASE WHEN AD1.DFO_MOST_ACTIVE_IID IS NOT NULL AND :B68 = 'Y' THEN AD1.DFO_MOST_ACTIVE_IID END AS &quot;skew_iid&quot;,  DECODE(AD1.DFO_MOST_ACTIVE_COUNT,  NULL, NULL,  AD1.DFO_MOST_ACTIVE_SID) AS &quot;skew_sid&quot;,  AD1.DFO_MOST_ACTIVE_COUNT AS &quot;skew_count&quot;,  DECODE(AD1.PX_DOP,  :B28 ,  NULL,  AD1.PX_DOP) AS &quot;dop&quot;,  DECODE(AD1.PX_DOP,  AD1.PX_MIN_DOP,	NULL,  AD1.PX_MIN_DOP) AS &quot;min_dop&quot;,	AD1.PX_ID AS &quot;px&quot;,  AD1.PX_STEP_ID AS &quot;step&quot;,  AD1.PX_STEP_ARG AS &quot;arg&quot;,	DECODE(AD1.ACTIVITY_COUNT,  AD1.RESP_TIME,  NULL,  ROUND(AD1.RESP_TIME,  2)) AS &quot;rt&quot;),  AD1.ACTIVITY_COUNT)) ORDER BY AD1.PX_STEP_ID,  AD1.PX_STEP_ARG,  AD1.DFO_PAIR_ROWNUM) ACTIVITY_BUCKET_XML FROM (SELECT AD01.*,  CASE WHEN AD01.ACTIVITY_TYPE != 'Other SQL Execution' AND AD01.ACTIVITY_TYPE != 'Non SQL' THEN AD01.ACTIVITY_TYPE END CLASS,	CASE WHEN (AD01.ACTIVITY_TYPE = 'Other SQL Execution' OR AD01.ACTIVITY_TYPE = 'Non SQL') THEN AD01.OTHER_SQL_ACTIVITY_TYPE END OTHER_SQL_CLASS,  CASE WHEN AD01.ACTIVITY_TYPE != 'Other SQL Execution' AND AD01.ACTIVITY_TYPE != 'Non SQL' THEN AD01.EVENT_NAME END EVENT,  CASE WHEN AD01.SQL IN ('this',  'anonymous') THEN NULL ELSE AD01.SQL END RPI,  DECODE(AD01.ACTIVITY_TYPE,  'Other SQL Execution',  SUBSTR(AD01.EVENT_NAME,	9),  NULL) OTHER_SQL,  DECODE(AD01.ACTIVITY_TYPE,  'Non SQL',  AD01.EVENT_NAME,  NULL) NON_SQL,  ROW_NUMBER() OVER(PARTITION BY AD01.BUCKET_NUM,  AD01.PX_DFO_PAIR_ID ORDER BY AD01.ACTIVITY_TYPE,  AD01.EVENT_NAME,  AD01.PLAN_LINE_ID) DFO_PAIR_ROWNUM FROM RESPONSE_TIME_DATA AD01) AD1 GROUP BY AD1.BUCKET_NUM) AD2) AH) ELSE NULL END,  CASE WHEN :B23 = 'Y' THEN (SELECT XMLELEMENT( &quot;parallel_info&quot;,  XMLATTRIBUTES( :B17 AS &quot;qc_instance_id&quot;,  MAX_PX_QCSID AS &quot;qc_session_id&quot;,  MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,  MAX_PX_DOP AS &quot;dop&quot;,  MAX_PX_DOP_INSTANCES AS &quot;max_dop_instances&quot;,  DIST_INST_COUNT AS &quot;inst_count&quot;,  DIST_PX_GROUP_COUNT AS &quot;serv
er_group_count&quot;,  DIST_PX_SET_COUNT AS &quot;server_set_count&quot;),  CASE WHEN :B70 = 1 THEN PX_SESSIONS ELSE NULL END,	CASE WHEN :B68 = 'Y' THEN DECODE(:B69 ,  1,  PX_INSTANCES,  NULL) ELSE NULL END) FROM (SELECT MAX_PX_QCSID,  MAX_PX_DOP,  MAX_PX_DOP_INSTANCES,  MAX_PX_IS_CROSS_INSTANCE,  SUM_SERVERS_REQUESTED,  SUM_SERVERS_ALLOCATED,  DIST_INST_COUNT,  DIST_PX_GROUP_COUNT,  DIST_PX_SET_COUNT,	(SELECT XMLELEMENT( &quot;sessions&quot;,  XMLATTRIBUTES(MAX(PX_SESSION.ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PX_SESSION.IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PX_SESSION.CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PX_SESSION.WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PX_SESSION.OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;,  MAX(PX_SESSION.MAX_IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PX_SESSION.MAX_IO_BYTES) AS &quot;max_io_bytes&quot;,  MAX(PX_SESSION.MAX_BUFFER_GETS) AS &quot;max_buffer_gets&quot;,  MAX(PX_SESSION.MAX_ELAPSED_TIME) AS &quot;max_elapsed_time&quot;),  XMLAGG(PX_SESSION.PX_SESSION_XML ORDER BY PX_SERVER_GROUP NULLS FIRST,  PX_SERVER_SET,  PX_SERVER#)) FROM (SELECT PX_SERVER_GROUP,  PX_SERVER_SET,  PX_SERVER#,	MAX(PI.MAX_ELAPSED_TIME) MAX_ELAPSED_TIME,  MAX(PI.MAX_IO_REQS) MAX_IO_REQS,  MAX(PI.MAX_IO_BYTES) MAX_IO_BYTES,  MAX(PI.MAX_BUFFER_GETS) MAX_BUFFER_GETS,  SUM(PI.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(PI.IMQ_COUNT) IMQ_COUNT,  SUM(PI.WAIT_COUNT) WAIT_COUNT,  SUM(PI.CPU_COUNT) CPU_COUNT,	SUM(PI.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  XMLELEMENT( &quot;session&quot;,  XMLATTRIBUTES( INST_ID AS &quot;inst_id&quot;,  PROCESS_NAME AS &quot;process_name&quot;,  SID AS &quot;session_id&quot;,  SESSION_SERIAL# AS &quot;session_serial&quot;,  PX_SERVER_GROUP AS &quot;server_group&quot;,  PX_SERVER_SET AS &quot;server_set&quot;,  PX_SERVER# AS &quot;server_num&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES( 'monitor' AS &quot;type&quot;),  NVL2(MAX(ELAPSED_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MAX(ELAPSED_TIME)),	NULL),	NVL2(MAX(QUEUING_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX(QUEUING_TIME)),  NULL),  NVL2(MAX(CPU_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MAX(CPU_TIME)),  NULL),  NVL2(MAX(USER_IO_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MAX(USER_IO_WAIT_TIME)),  NULL),  NVL2(MAX(APPLICATION_WAIT_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MAX(APPLICATION_WAIT_TIME)),  NULL),  NVL2(MAX(CONCURRENCY_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),	MAX(CONCURRENCY_WAIT_TIME)),  NULL),  NVL2(MAX(CLUSTER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MAX(CLUSTER_WAIT_TIME)),  NULL),  NVL2(MAX(PLSQL_EXEC_TIME),  XMLELEMENT(
&quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MAX(PLSQL_EXEC_TIME)),  NULL),  NVL2(MAX(JAVA_EXEC_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MAX(JAVA_EXEC_TIME)),  NULL),  NVL2(MAX(OTHER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'other_wait_time' AS &quot;name&quot;),  MAX(OTHER_WAIT_TIME)),  NULL),  NVL2(MAX(FETCHES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MAX(FETCHES)),  NULL),  NVL2(MAX(BUFFER_GETS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MAX(BUFFER_GETS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),  MAX(READ_REQS)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MAX(READ_REQS)),  NULL),  NVL2(MAX(READ_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MAX(READ_BYTES)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(WRITE_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MAX(WRITE_BYTES)),	NULL),	NVL2(MAX(IO_UNC_BYTES),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MAX(IO_UNC_BYTES)),  NULL),  NVL2(MAX(IO_ELIG_BYTES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MAX(IO_ELIG_BYTES)),  NULL),  NVL2(MAX(IO_RET_BYTES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),	MAX(IO_RET_BYTES)),  NULL),  CASE WHEN MAX(IO_INTER_BYTES) IS NULL OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_INTER_BYTES) = MAX(IO_BYTES) OR NVL(MAX(IO_ELIG_BYTES),  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),	ROUND(MAX(IO_BYTES) / DECODE(MAX(IO_INTER_BYTES),  0,  1,  MAX(IO_INTER_BYTES)),  2)) END,  CASE WHEN NVL(MAX(IO_ELIG_BYTES),  0) = 0 OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_UNC_BYTES) = MAX(IO_RET_BYTES) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,	ROUND(100* (GREATEST( NVL(MAX(IO_UNC_BYTES), 0),  NVL(MAX(IO_ELIG_BYTES), 0)) - MAX(IO_RET_BYTES)) / MAX(IO_ELIG_BYTES),  2))) END),  CASE WHEN SUM(PI.ACTIVITY_COUNT) &gt; 0 AND :B33 = 1 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( TO_CHAR(MIN(PI.ACTIVITY_START),  :B12 ) AS &quot;first_sample_time&quot;,  TO_CHAR(MAX(PI.ACTIVITY_END),  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((MAX(PI.ACTIVITY_END) - MIN(PI.ACTIVITY_START)) * 3600 * 24) + 1 AS &quot;duration&quot;,  SUM(PI.ACTIVITY_COUNT) AS &quot;count&quot;,  SUM(PI.IMQ_COUNT) AS &quot;imq_count&quot;,  SUM(PI.CPU_COUNT) AS &quot;cpu_count&quot;,  SUM(PI.WAIT_COUNT) AS &quot;wait_count&quot;,  SUM(PI.OTHER_SQL_COUNT)AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),	XMLAGG( NVL2(ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( PI.ACTIVITY_TYPE AS &quot;class&quot;,  PI.EVENT_NAME AS &quot;event&quot;),  ACTIVITY_COUNT),  NULL) ORDER BY PI.ACTIVITY_TYPE,  PI.EVENT_NAME)) ELSE NULL END,  CASE WHEN :B60 = 1 AND PI.HAS_OTHER_XML = 'Y' THEN (SELECT XMLTYPE(OTHER_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = PI.INST_ID AND MON.KEY = PI.KEY AND MON.SID = PI.SID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END) PX_SESSION_XML FROM (SELECT MO.HAS_OTHER_XML,  MO.KEY,  MO.INST_ID,  DECODE(MO.PROCESS_NAME,  'ora',  'PX Coordinator',	MO.PROCESS_NAME) PROCESS_NAME,	MO.SID,  MO.SESSION_SERIAL#,  MO.PX_SERVER_GROUP,  MO.PX_SERVER_SET,  MO.PX_SERVER#,  ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME,  MAX(MO.IO_REQS) MAX_IO_REQS,  MAX(MO.IO_BYTES) MAX_IO_BYTES,  MAX(MO.BUFFER_GETS) MAX_BUFFER_GETS,  MAX(MO.ELAPSED_TIME) MAX_ELAPSED_TIME,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.ACTIVITY_COUNT)) ACTIVITY_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,  NULL,  ASH0.IMQ_COUNT)) IMQ_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.WAIT_COUNT)) WAIT_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,  NULL,  ASH0.CPU_COUNT)) CPU_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.OTHER_SQL_COUNT)) OTHER_SQL_COUNT,	MIN(ASH0.ACTIVITY_START) ACTIVITY_START,  MAX(ASH0.ACTIVITY_END) ACTIVITY_END,	MAX(DECODE(MO.ELAPSED_TIME,  0,  NULL,	MO.ELAPSED_TIME)) ELAPSED_TIME,  MAX(DECODE(MO.QUEUING_TIME,  0,  NULL,  MO.QUEUING_TIME)) QUEUING_TIME,  MAX(DECODE(MO.CPU_TIME,  0,  NULL,  CPU_TIME)) CPU_TIME,  MAX(DECODE(MO.FETCHES,  0,	NULL,  FETCHES)) FETCHES,  MAX(DECODE(MO.BUFFER_GETS,  0,  NULL,  MO.BUFFER_GETS)) BUFFER_GETS,  MAX(DECODE(MO.IO_INTER_BYTES,	0,  NULL,  MO.IO_INTER_BYTES)) IO_INTER_BYTES,	MAX(DECODE(MO.READ_REQS,  0,  NULL,  MO.READ_REQS)) READ_REQS,	MAX(DECODE(MO.READ_BYTES,  0,  NULL,  MO.READ_BYTES)) READ_BYTES,  MAX(DECODE(MO.WRITE_REQS,  0,  NULL,  MO.WRITE_REQS)) WRITE_REQS,  MAX(DECODE(MO.WRITE_BYTES,  0,  NULL,  MO.WRITE_BYTES)) WRITE_BYTES,  MAX(DECODE(MO.IO_BYTES,  0,  NULL,	MO.IO_BYTES)) IO_BYTES,  MAX(DECODE(MO.IO_UNC_BYTES,  0,  NULL,  MO.IO_UNC_BYTES)) IO_UNC_BYTES,  MAX(DECODE(MO.IO_ELIG_BYTES,	0,  NULL,  MO.IO_ELIG_BYTES)) IO_ELIG_BYTES,  MAX(DECODE(MO.IO_RET_BYTES,  0,  NULL,  MO.IO_RET_BYTES)) IO_RET_BYTES,  MAX(DECODE(MO.APPLICATION_WAIT_TIME,  0,  NULL,	MO.APPLICATION_WAIT_TIME)) APPLICATION_WAIT_TIME,  MAX(DECODE(MO.CONCURRENCY_WAIT_TIME,  0,  NULL,  MO.CONCURRENCY_WAIT_TIME)) CONCURRENCY_WAIT_TIME,  MAX(DECODE(MO.CLUSTER_WAIT_TIME,  0,  NULL,  MO.CLUSTER_WAIT_TIME)) CLUSTER_WAIT_TIME,  MAX(DECODE(MO.USER_IO_WAIT_TIME,  0,  NULL,  MO.USER_IO_WAIT_TIME)) USER_IO_WAIT_TIME,  MAX(DECODE(PLSQL_EXEC_TIME,  0,	NULL,  PLSQL_EXEC_TIME)) PLSQL_EXEC_TIME,  MAX(DECODE(MO.JAVA_EXEC_TIME,  0,  NULL,  MO.JAVA_EXEC_TIME)) JAVA_EXEC_TIME,  MAX(DECODE(MO.OTHER_WAIT_TIME,  0,  NULL,  MO.OTHER_WAIT_TIME)) OTHER_WAIT_TIME FROM MONITOR_DATA MO,  (SELECT ASH1.INST_ID,	ASH1.SESSION_ID,  ASH1.ACTIVITY_TYPE,  ASH1.EVENT_NAME,  SUM(ASH1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(ASH1.IMQ_COUNT) IMQ_COUNT,  SUM(ASH1.WAIT_COUNT) WAIT_COUNT,  SUM(ASH1.CPU_COUNT) CPU_COUNT,  SUM(ASH1.OTHER_SQL_COUNT)OTHER_SQL_COUNT,	MIN(ASH1.ACTIVITY_START) ACTIVITY_START,  MAX(ASH1.ACTIVITY_END) ACTIVITY_END FROM ASH_DATA ASH1 GROUP BY ASH1.INST_ID,  ASH1.SESSION_ID,  ASH1.ACTIVITY_TYPE,	ASH1.EVENT_NAME) ASH0 WHERE MO.INST_ID = ASH0.INST_ID(+) AND MO.SID = ASH0.SESSION_ID(+) AND (:B70 = 1 OR :B69 = 1) GROUP BY MO.INST_ID,  MO.KEY,  MO.HAS_OTHER_XML,  MO.PROCESS_NAME,	MO.SID,  MO.SESSION_SERIAL#,  MO.PX_SERVER_GROUP,  MO.PX_SERVER_SET,  MO.PX_SERVER#,  ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME) PI WHERE (:B70 = 1) GROUP BY PI.INST_ID,  PI.KEY,  PI.HAS_OTHER_XML,  PI.SID,  PI.PROCESS_NAME,  PI.SESSION_SERIAL#,  PI.PX_SERVER_GROUP,  PI.PX_SERVER_SET,  PI.PX_SERVER#) PX_SESSION) PX_SESSIONS,  (SELECT XMLELEMENT( &quot;instances&quot;,  XMLATTRIBUTES( MAX(PX_INSTANCE.ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PX_INSTANCE.IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PX_INSTANCE.CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PX_INSTANCE.WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PX_INSTANCE.OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;,	MAX(PX_INSTANCE.ELAPSED_TIME) AS &quot;max_elapsed_time&quot;,	MAX(PX_INSTANCE.BUFFER_GETS) AS &quot;max_buffer_gets&quot;,  MAX(PX_INSTANCE.IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PX_INSTANCE.IO_BYTES) AS &quot;max_io_bytes&quot;),  XMLAGG(PX_INSTANCE.PX_INSTANCES_XML ORDER BY INST_ID)) FROM (SELECT PI.INST_ID,  MAX(PI.ELAPSED_TIME) ELAPSED_TIME,  MAX(PI.IO_REQS) IO_REQS,  MAX(PI.IO_BYTES) IO_BYTES,	MAX(PI.BUFFER_GETS) BUFFER_GETS,  SUM(PI
.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(PI.IMQ_COUNT) IMQ_COUNT,	SUM(PI.WAIT_COUNT) WAIT_COUNT,	SUM(PI.CPU_COUNT) CPU_COUNT,  SUM(PI.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	XMLELEMENT( &quot;instance&quot;,  XMLATTRIBUTES( INST_ID AS &quot;inst_id&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES( 'monitor' AS &quot;type&quot;),  NVL2(MAX(ELAPSED_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),	MAX(ELAPSED_TIME)),  NULL),  NVL2(MAX(QUEUING_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX(QUEUING_TIME)),  NULL),  NVL2(MAX(CPU_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MAX(CPU_TIME)),  NULL),  NVL2(MAX(USER_IO_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MAX(USER_IO_WAIT_TIME)),  NULL),  NVL2(MAX(APPLICATION_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name
&quot;),  MAX(APPLICATION_WAIT_TIME)),	NULL),	NVL2(MAX(CONCURRENCY_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MAX(CONCURRENCY_WAIT_TIME)),  NULL),  NVL2(MAX(CLUSTER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MAX(CLUSTER_WAIT_TIME)),  NULL),  NVL2(MAX(PLSQL_EXEC_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MAX(PLSQL_EXEC_TIME)),  NULL),  NVL2(MAX(JAVA_EXEC_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MAX(JAVA_EXEC_TIME)),  NULL),  NVL2(MAX(OTHER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'other_wait_time' AS &quot;name&quot;),	MAX(OTHER_WAIT_TIME)),	NULL),	NVL2(MAX(FETCHES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MAX(FETCHES)),  NULL),  NVL2(MAX(BUFFER_GETS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MAX(BUFFER_GETS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),	MAX(READ_REQS)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  MAX(WRITE_REQS)),	NULL),	NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MAX(READ_REQS)),	NULL),	NVL2(MAX(READ_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),	MAX(READ_BYTES)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(WRITE_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),	MAX(WRITE_BYTES)),  NULL),  NVL2(MAX(IO_UNC_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MAX(IO_UNC_BYTES)),  NULL),  NVL2(MAX(IO_ELIG_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MAX(IO_ELIG_BYTES)),  NULL),  NVL2(MAX(IO_RET_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  MAX(IO_RET_BYTES)),  NULL),  CASE WHEN MAX(IO_INTER_BYTES) IS NULL OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_INTER_BYTES) = MAX(IO_BYTES) OR NVL(MAX(IO_ELIG_BYTES),	0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MAX(IO_BYTES)/ DECODE(MAX(IO_INTER_BYTES),  0,  1,  MAX(IO_INTER_BYTES)),  2)) END,  CASE WHEN NVL(MAX(IO_ELIG_BYTES),  0) = 0 OR NVL(MAX(IO_BYTES),	0) = 0 OR MAX(IO_UNC_BYTES) = MAX(IO_RET_BYTES) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100* (GREATEST( NVL(MAX(IO_UNC_BYTES),  0),  NVL(MAX(IO_ELIG_BYTES),  0)) - MAX(IO_RET_BYTES)) / MAX(IO_ELIG_BYTES),  2))) END),  CASE WHEN :B33 = 1 AND SUM(PI.ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,	XMLATTRIBUTES( TO_CHAR(MIN(PI.ACTIVITY_START),	:B12 ) AS &quot;start_time&quot;,  TO_CHAR(MAX(PI.ACTIVITY_END),  :B12 ) AS &quot;end_time&quot;,  ROUND((MAX(PI.ACTIVITY_END) - MIN(PI.ACTIVITY_START)) * 3600 * 24) + 1 AS &quot;duration&quot;,  SUM(PI.ACTIVITY_COUNT) AS &quot;count&quot;,  SUM(PI.IMQ_COUNT) AS &quot;imq_count&quot;,  SUM(PI.WAIT_COUNT) AS &quot;wait_count&quot;,  SUM(PI.CPU_COUNT) AS &quot;cpu_count&quot;,  SUM(PI.OTHER_SQL_COUNT) AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  XMLAGG( NVL2(ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( PI.ACTIVITY_TYPE AS &quot;class&quot;,  PI.EVENT_NAME AS &quot;event&quot;),  ACTIVITY_COUNT),  NULL) ORDER BY PI.ACTIVITY_TYPE,	PI.EVENT_NAME)) ELSE NULL END) PX_INSTANCES_XML FROM (SELECT MO.INST_ID,  ASH.ACTIVITY_TYPE,  ASH.EVENT_NAME,  ASH.ACTIVITY_COUNT,  ASH.IMQ_COUNT,  ASH.WAIT_COUNT,  ASH.CPU_COUNT,  ASH.OTHER_SQL_COUNT,  ASH.ACTIVITY_START,	ASH.ACTIVITY_END,  MO.ELAPSED_TIME,  MO.QUEUING_TIME,  MO.CPU_TIME,  MO.APPLICATION_WAIT_TIME,	MO.CONCURRENCY_WAIT_TIME,  MO.CLUSTER_WAIT_TIME,  MO.USER_IO_WAIT_TIME,  MO.PLSQL_EXEC_TIME,  MO.JAVA_EXEC_TIME,  MO.OTHER_WAIT_TIME,  MO.FETCHES,  MO.BUFFER_GETS,  MO.IO_INTER_BYTES,  MO.IO_BYTES,  MO.READ_REQS,  MO.READ_BYTES,  MO.WRITE_REQS,  MO.WRITE_BYTES,  MO.IO_REQS,  MO.IO_UNC_BYTES,  MO.IO_ELIG_BYTES,  MO.IO_RET_BYTES FROM (SELECT MO0.INST_ID,  SUM(MO0.ELAPSED_TIME) ELAPSED_TIME,  SUM(MO0.QUEUING_TIME) QUEUING_TIME,  SUM(MO0.CPU_TIME) CPU_TIME,  SUM(MO0.FETCHES) FETCHES,  SUM(MO0.BUFFER_GETS) BUFFER_GETS,  SUM(MO0.IO_INTER_BYTES) IO_INTER_BYTES,  SUM(MO0.IO_BYTES) IO_BYTES,  SUM(MO0.READ_REQS) READ_REQS,  SUM(MO0.READ_BYTES) READ_BYTES,  SUM(MO0.WRITE_REQS) WRITE_REQS,	SUM(MO0.WRITE_BYTES) WRITE_BYTES,  SUM(MO0.IO_REQS) IO_REQS,  SUM(MO0.IO_UNC_BYTES) IO_UNC_BYTES,  SUM(MO0.IO_ELIG_BYTES) IO_ELIG_BYTES,  SUM(MO0.IO_RET_BYTES) IO_RET_BYTES,  SUM(MO0.APPLICATION_WAIT_TIME) APPLICATION_WAIT_TIME,  SUM(MO0.CONCURRENCY_WAIT_TIME) CONCURRENCY_WAIT_TIME,  SUM(MO0.CLUSTER_WAIT_TIME) CLUSTER_WAIT_TIME,  SUM(MO0.USER_IO_WAIT_TIME) USER_IO_WAIT_TIME,  SUM(MO0.PLSQL_EXEC_TIME) PLSQL_EXEC_TIME,  SUM(MO0.JAVA_EXEC_TIME) JAVA_EXEC_TIME,  SUM(MO0.OTHER_WAIT_TIME) OTHER_WAIT_TIME FROM MONITOR_DATA MO0 GROUP BY MO0.INST_ID) MO,  (SELECT ASH0.INST_ID,	ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME,  SUM(ASH0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(ASH0.IMQ_COUNT) IMQ_COUNT,  SUM(ASH0.WAIT_COUNT) WAIT_COUNT,  SUM(ASH0.CPU_COUNT) CPU_COUNT,  SUM(ASH0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(ASH0.ACTIVITY_START) ACTIVITY_START,  MAX(ASH0.ACTIVITY_END) ACTIVITY_END FROM ASH_DATA ASH0 GROUP BY ASH0.INST_ID,	ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME) ASH,  MONITOR_AGG WHERE MO.INST_ID = ASH.INST_ID(+) AND MONITOR_AGG.DIST_INST_COUNT &gt; 0 ) PI GROUP BY PI.INST_ID)PX_INSTANCE) PX_INSTANCES FROM MONITOR_AGG)) ELSE NULL END,  XPLAN_XML,  CASE WHEN :B43 = 1 THEN (SELECT XMLELEMENT( &quot;plan_monitor&quot;,  XMLATTRIBUTES(MAX(PLI.MAX_LINE_ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PLI.OVERALL_MAX_IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PLI.OVERALL_MAX_IO_BYTES) AS &quot;max_io_bytes&quot;,  MAX(PLI.MAX_LINE_IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PLI.MAX_LINE_CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PLI.MAX_LINE_WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PLI.MAX_LINE_OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;),  XMLAGG( XMLELEMENT( &quot;operation&quot;,  XMLATTRIBUTES( PLI.PLAN_LINE_ID AS &quot;id&quot;,  PLI.PARENT_ID AS &quot;parent_id&quot;,  PLI.OPERATION AS &quot;name&quot;,  PLI.OPTIONS AS &quot;options&quot;,	PLI.DEPTH AS &quot;depth&quot;,  PLI.POSITION AS &quot;position&quot;,	PLI.INACTIVE AS &quot;skp&quot;,  PLI.PX_TYPE AS &quot;px_type&quot;),	NVL2(PLI.OBJECT_NAME,  XMLELEMENT( &quot;object&quot;,	XMLATTRIBUTES(PLI.OBJECT_TYPE AS &quot;type&quot;),  XMLFOREST(PLI.OBJECT_OWNER AS &quot;owner&quot;),	XMLFOREST(PLI.OBJECT_NAME AS &quot;name&quot;)),  NULL),  XMLFOREST(PLI.PARTITION_START AS &quot;partition_start&quot;,  PLI.PARTITION_STOP AS &quot;partition_stop&quot;),  CASE WHEN PLI.CARDINALITY IS NULL AND PLI.BYTES IS NULL AND PLI.COST IS NULL AND PLI.TEMP_SPACE IS NULL AND PLI.TIME IS NULL THEN NULL ELSE XMLELEMENT( &quot;optimizer&quot;,  NULL,  NVL2(PLI.CARDINALITY,  XMLFOREST(PLI.CARDINALITY AS &quot;cardinality&quot;),  NULL),  NVL2(PLI.BYTES,  XMLFOREST(PLI.BYTES AS &quot;bytes&quot;),	NULL),	NVL2(PLI.COST,	XMLFOREST(PLI.COST AS &quot;cost&quot;),  NULL),  NVL2(PLI.CPU_COST,  XMLFOREST(PLI.CPU_COST AS &quot;cpu_cost&quot;),	NULL),	NVL2(PLI.IO_COST,  XMLFOREST(PLI.IO_COST AS &quot;io_cost&quot;),  NULL),  NVL2(PLI.TEMP_SPACE,  XMLFOREST(PLI.TEMP_SPACE AS &quot;temp&quot;),  NULL),  NVL2(PLI.TIME,  XMLFOREST(PLI.TIME AS &quot;time&quot;),  NULL)) END,	XMLELEMENT( &quot;stats&quot;,	XMLATTRIBUTES('plan_monitor' AS &quot;type&quot;),  NVL2(PLI.FIR
ST_MOVE_TIME,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('first_active' AS &quot;name&quot;),  TO_CHAR(FIRST_MOVE_TIME,  :B12 )),  NULL),  CASE WHEN PLI.FIRST_MOVE_TIME != PLI.FIRST_CHANGE_TIME THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('first_row' AS &quot;name&quot;),  TO_CHAR(FIRST_CHANGE_TIME,  :B12 )) ELSE NULL END,  NVL2(PLI.LAST_MOVE_TIME,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('last_active' AS &quot;name&quot;),  TO_CHAR(LAST_MOVE_TIME,  :B12 )),  NULL),  CASE WHEN (PLI.FIRST_MOVE_TIME IS NULL OR PLI.LAST_MOVE_TIME IS NULL) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('duration' AS &quot;name&quot;),  ROUND((LAST_MOVE_TIME - FIRST_MOVE_TIME) * 3600 * 24)+1) END,	CASE WHEN (PLI.OVERALL_LAST_MOVE_TIME IS NULL OR PLI.LAST_MOVE_TIME IS NULL) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('from_most_recent' AS &quot;name&quot;),  ROUND((PLI.OVERALL_LAST_MOVE_TIME - PLI.LAST_MOVE_TIME) * 3600 * 24)) END,  NVL2(PLI.LAST_MOVE_TIME,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'from_sql_exec_start' AS &quot;name&quot;),  ROUND( (FIRST_MOVE_TIME - :B8 ) * 3600*24)),  NULL),  NVL2(PLI.PERCENT_COMPLETE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('percent_complete' AS &quot;name&quot;),  PLI.PERCENT_COMPLETE),  NULL),  NVL2(PLI.TIME_REMAINING,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('time_left' AS &quot;name&quot;),  PLI.TIME_REMAINING),  NULL),  CASE WHEN PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('starts' AS &quot;name&quot;),  PLI.STARTS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'max_starts' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_STARTS/1000000),  10000),	NULL) AS &quot;iid&quot;,  MOD(MAX_STARTS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_STARTS/10000000000)) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('dop' AS
&quot;name&quot;),  PLI.DOP) ELSE NULL END,  CASE WHEN NEED_ROWS IS NOT NULL AND PLI.FIRST_MOVE_TIME IS NOT NULL THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cardinality' AS &quot;name&quot;),	PLI.OUTPUT_ROWS) ELSE NULL END,  CASE WHEN PLI.NEED_ROWS IS NOT NULL AND PLI.DOP &gt; 0 AND PLI.MAX_OUTPUT_ROWS IS NOT NULL AND (PLI.FIRST_MOVE_TIME IS NOT NULL) THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_card' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_OUTPUT_ROWS/1000000),	10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_OUTPUT_ROWS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_OUTPUT_ROWS/10000000000)) ELSE NULL END,  CASE WHEN PLI.MEM &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('memory' AS &quot;name&quot;),  PLI.MEM) ELSE NULL END,  CASE WHEN PLI.MAX_MEM &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('max_memory' AS &quot;name&quot;),	PLI.MAX_MEM) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MIN_MAX_MEM IS NOT NULL AND PLI.MAX_MEM
&gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'min_max_mem' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MIN_MAX_MEM/1000000),  10000),  NULL) AS &quot;iid&quot;,	MOD(MIN_MAX_MEM,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MIN_MAX_MEM/10000000000)) ELSE NULL END,  CASE WHEN PLI.TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('temp' AS &quot;name&quot;),  PLI.TEMP) ELSE NULL END,  CASE WHEN PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('max_temp' AS &quot;name&quot;),  PLI.MAX_TEMP) ELSE NULL END,  CASE WHEN PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('spill_count' AS &quot;name&quot;),  PLI.SPILL_COUNT) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_MAX_TEMP IS NOT NULL AND PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_max_temp' AS &quot;name&quot;,  DECODE(:B68 ,	'Y',  MOD(TRUNC(MAX_MAX_TEMP/1000000),	10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_MAX_TEMP,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_MAX_TEMP/10000000000)) ELSE NULL END,  CASE WHEN PLI.READ_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  PLI.READ_REQS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_READ_REQS IS NOT NULL AND PLI.READ_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_read_reqs' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',	MOD(TRUNC(PLI.MAX_READ_REQS/1000000),  10000),	NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_READ_REQS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_READ_REQS/10000000000)) ELSE NULL END,	CASE WHEN PLI.READ_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  PLI.READ_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_READ_BYTES IS NOT NULL AND PLI.READ_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'max_read_bytes' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_READ_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_READ_BYTES,	1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_READ_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.WRITE_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  PLI.WRITE_REQS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_WRITE_REQS IS NOT NULL AND PLI.WRITE_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_write_reqs' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_WRITE_REQS/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_WRITE_REQS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_WRITE_REQS/10000000000)) ELSE NULL END,  CASE WHEN PLI.WRITE_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  PLI.WRITE_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_WRITE_BYTES IS NOT NULL AND PLI.WRITE_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_write_bytes' AS &quot;name&quot;,	DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_WRITE_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_WRITE_BYTES,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_WRITE_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('io_inter_bytes' AS &quot;name&quot;),  PLI.IO_INTER_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_io_inter_bytes' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_IO_INTER_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_IO_INTER_BYTES, 1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_IO_INTER_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(PLI.IO_BYTES / DECODE(PLI.IO_INTER_BYTES,  0,  1,  PLI.IO_INTER_BYTES),  2)) ELSE NULL END),	NVL2(STAT_GID,	XMLELEMENT( &quot;rwsstats&quot;,  XMLATTRIBUTES( PLI.STAT_GID AS &quot;group_id&quot;),  DECODE(GID_ROWNUM,  1,  (SELECT XMLELEMENT( &quot;metadata&quot;,  NULL,  XMLAGG( XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( ROWNUM AS &quot;id&quot;,  NAME AS &quot;name&quot;,	DESCRIPTION AS &quot;desc&quot;,  TYPE AS &quot;type&quot;,  DECODE(FLAGS,  0,	NULL,  FLAGS) AS &quot;flags&quot;),  NULL) ORDER BY ID)) FROM V$SQL_MONITOR_STATNAME WHERE GROUP_ID = PLI.STAT_GID),  NULL),  NVL2(STAT1_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(1 AS &quot;id&quot;),  STAT1_VALUE),  NULL),  NVL2(STAT2_VALUE,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(2 AS &quot;id&quot;),  STAT2_VALUE),  NULL),  NVL2(STAT3_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(3 AS &quot;id&quot;),  STAT3_VALUE),  NULL),  NVL2(STAT4_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(4 AS &quot;id&quot;),	STAT4_VALUE),  NULL),  NVL2(STAT5_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(5 AS &quot;id&quot;),  STAT5_VALUE),  NULL),  NVL2(STAT6_VALUE,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(6 AS &quot;id&quot;),  STAT6_VALUE),  NULL),  NVL2(STAT7_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(7 AS &quot;id&quot;),  STAT7_VALUE),  NULL),  NVL2(STAT8_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(8 AS &quot;id&quot;),	STAT8_VALUE),  NULL),  NVL2(STAT9_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(9 AS &quot;id&quot;),  STAT9_VALUE),  NULL),  NVL2(STAT10_VALUE,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES(10 AS &quot;id&quot;),  STAT10_VALUE),  NULL)),  NULL),  CASE WHEN PLI.LINE_ACTIVITY_COUNT &gt; 0 AND :B33 = 1 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( TO_CHAR(PLI.LINE_ACTIVITY_START,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR(PLI.LINE_ACTIVITY_END,  :B12 ) AS &quot;end_time&quot;,  ROUND((PLI.LINE_ACTIVITY_END - PLI.LINE_ACTIVITY_START) * 3600*24) + 1 AS &quot;duration&quot;,  PLI.LINE_ACTIVITY_COUNT AS &quot;count&quot;,  PLI.LINE_IMQ_COUNT AS &quot;imq_count&quot;,	PLI.LINE_WAIT_COUNT AS &quot;wait_count&quot;,	PLI.LINE_CPU_COUNT AS &quot;cpu_count&quot;,  PLI.LINE_OTHER_SQL_COUNT AS &quot;other_sql_count&quot;,	:B40 AS &quot;cpu_cores&quot;,	:B39 AS &quot;hyperthread&quot;),  PLI.ACTIVITY_TOTAL,	PLI.PLAN_ACTIVITY_HISTO) ELSE NULL END) ORDER BY PLI.PLAN_LINE_ID) ) FROM (SELECT AT.MAX_LINE_ACTIVITY_COUNT,  PM.OVERALL_MAX_IO_REQS,	PM.OVERALL_MAX_IO_BYTES,  AT.MAX_LINE_IMQ_COUNT,  AT.MAX_LINE_CPU_COUNT,  AT.MAX_LINE_WAIT_COUNT,  AT.LINE_OTHER_SQL_COUNT,  AT.MAX_LINE_OTHER_SQL_COUNT,  PM.PLAN_LINE_ID,  PM.PARENT_ID,  PM.OPERATION,  PM.OPTIONS,	PM.DEPTH,  PM.POSITION,  PM.INACTIVE,  CASE WHEN PM.OPERATION = 'PX COORDINATOR' AND :B23 = 'Y' AND (PM.PX_SERVER_SET IS NOT NULL OR AH.PX_SERVER_SET IS NOT NULL) THEN 'QC' WHEN PM.PX_SERVER_SET IS NOT NULL THEN TO_CHAR(PM.PX_SERVER_SET) WHEN AH.PX_SERVER_SET IS NOT NULL THEN TO_CHAR(AH.PX_SERVER_SET) WHEN (:B23 = 'N' OR (PM.LAST_CHANGE_TIME IS NULL AND AT.LINE_ACTIVITY_END IS NULL)) THEN NULL ELSE 'QC' END PX_TYPE,  PM.FIRST_CHANGE_TIME,  AT.LINE_ACTIVITY_START,  PM.LAST_CHANGE_TIME,  PM.OVERALL_LAST_CHANGE_TIME,  AT.LINE_ACTIVITY_END,	AT.OVERALL_LINE_ACTIVITY_END,  LEAST(NVL(AT.LINE_ACTIVITY_START,  PM.FIRST_CHANGE_TIME),  NVL(PM.FIRST_CHANGE_TIME,  AT.LINE_ACTIVITY_START)) FIRST_MOVE_TIME,	GREATEST(NVL(AT.LINE_ACTIVITY_END,  PM.LAST_CHANGE_TIME),  NVL(PM.LAST_CHANGE_TIME,  AT.LINE_ACTIVITY_END)) LAST_MOVE_TIME,  GREATEST(NVL(AT.OVERALL_LINE_ACTIVITY_END,  PM.OVERALL_LAST_CHANGE_TIME),	NVL(PM.OVERALL_LAST_CHANGE_TIME,  AT.OVERALL_LINE_ACTIVITY_END)) OVERALL_LAST_MOVE_TIME,  CASE WHEN PM.STARTS IS NOT NULL AND PM.STARTS &gt; 0 THEN 1 ELSE 0 END HAS_EXECUTED,	PM.OBJECT_NAME,  PM.OBJECT_TYPE,  PM.OBJECT_OWNER,  PM.PARTITION_START,  PM.PARTITION_STOP,  PM.CARDINAL
ITY,  PM.BYTES,  PM.COST,  PM.TEMP_SPACE,  PM.TIME,  PM.CPU_COST,  PM.IO_COST,	LO.PERCENT_COMPLETE,  LO.TIME_REMAINING,  PM.STARTS,  PM.DOP,  PM.MAX_STARTS,  PM.OUTPUT_ROWS,	PM.NEED_ROWS,  PM.MAX_OUTPUT_ROWS,  PM.MEM,  PM.MAX_MEM,  PM.MIN_MAX_MEM,  PM.TEMP,  PM.MAX_TEMP,  PM.SPILL_COUNT,  PM.MAX_MAX_TEMP,  PM.READ_REQS,  PM.MAX_READ_REQS,	PM.READ_BYTES,	PM.MAX_READ_BYTES,  PM.WRITE_REQS,  PM.MAX_WRITE_REQS,	PM.WRITE_BYTES,  PM.MAX_WRITE_BYTES,  PM.IO_INTER_BYTES,  PM.IO_BYTES,	PM.MAX_IO_INTER_BYTES,	AT.LINE_ACTIVITY_COUNT,  AT.LINE_IMQ_COUNT,  AT.LINE_WAIT_COUNT,  AT.LINE_CPU_COUNT,  AT.ACTIVITY_TOTAL,  AH.PLAN_ACTIVITY_HISTO,  PM.STAT_GID,  PM.GID_ROWNUM,  PM.STAT1_VALUE,  PM.STAT2_VALUE,  PM.STAT3_VALUE,  PM.STAT4_VALUE,  PM.STAT5_VALUE,  PM.STAT6_VALUE,  PM.STAT7_VALUE,	PM.STAT8_VALUE,  PM.STAT9_VALUE,  PM.STAT10_VALUE FROM (SELECT AT0.*,  MAX(LINE_ACTIVITY_END) OVER() OVERALL_LINE_ACTIVITY_END,  MAX(LINE_ACTIVITY_COUNT) OVER() MAX_LINE_ACTIVITY_COUNT,  MAX(LINE_IMQ_COUNT) OVER() MAX_LINE_IMQ_COUNT,  MAX(LINE_CPU_COUNT) OVER() MAX_LINE_CPU_COUNT,  MAX(LINE_WAIT_COUNT) OVER() MAX_LINE_WAIT_COUNT,  MAX(LINE_OTHER_SQL_COUNT) OVER() MAX_LINE_OTHER_SQL_COUNT FROM (SELECT AD1.PLAN_LINE_ID,  MIN(AD1.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD1.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) LINE_ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) LINE_IMQ_COUNT,  SUM(AD1.WAIT_COUNT) LINE_WAIT_COUNT,  SUM(AD1.OTHER_SQL_COUNT) LINE_OTHER_SQL_COUNT,  SUM(AD1.CPU_COUNT) LINE_CPU_COUNT,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG(XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME) ACTIVITY_TOTAL FROM (SELECT AD0.PLAN_LINE_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  MIN(AD0.ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD0.ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MAX(AD0.DFO_MOST_ACTIVE_IID) DFO_MOST_ACTIVE_IID,  MAX(AD0.DFO_MOST_ACTIVE_SID) DFO_MOST_ACTIVE_SID,  SUM(AD0.DFO_MOST_ACTIVE_COUNT) DFO_MOST_ACTIVE_COUNT FROM ASH_DATA AD0 WHERE AD0.PLAN_LINE_ID IS NOT NULL GROUP BY AD0.PLAN_LINE_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1 GROUP BY AD1.PLAN_LINE_ID) AT0) AT,	(SELECT AD2.PLAN_LINE_ID,  MIN(AD2.PX_SERVER_SET) PX_SERVER_SET,  MIN(AD2.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD2.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD2.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD2.IMQ_COUNT) IMQ_COUNT,  SUM(AD2.WAIT_COUNT) WAIT_COUNT,  SUM(AD2.CPU_COUNT) CPU_COUNT,  SUM(AD2.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  CASE WHEN :B29 = 1 AND SUM(AD2.ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_histogram&quot;,  XMLATTRIBUTES( :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR( :B20 ,	:B12 ) AS &quot;start_time&quot;,  TO_CHAR(:B22 ,  :B12 ) AS &quot;end_time&quot;,  ROUND((:B22 -:B20 ) *3600*24) + 1 AS &quot;duration&quot;),  XMLAGG(XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),	AD2.ACTIVITY_BUCKET) ORDER BY AD2.BUCKET_NUM)) ELSE NULL END PLAN_ACTIVITY_HISTO FROM (SELECT AD1.PLAN_LINE_ID,  AD1.BUCKET_NUM,  MIN(AD1.PX_SERVER_SET) PX_SERVER_SET,  MIN(AD1.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD1.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  MIN(AD1.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD1.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) IMQ_COUNT,  SUM(AD1.WAIT_COUNT) WAIT_COUNT,  SUM(AD1.CPU_COUNT) CPU_COUNT,  SUM(AD1.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG(NVL2(AD1.ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,  AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT),  NULL) ORDER BY AD1.ACTIVITY_TYPE,  AD1.EVENT_NAME) ACTIVITY_BUCKET FROM (SELECT AD0.PLAN_LINE_ID,  AD0.PLAN_ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  MIN(NVL2(AD0.ACTIVITY_START,  AD0.PX_SERVER_SET,  NULL)) PX_SERVER_SET,  MIN(AD0.ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD0.ACTIVITY_END) LINE_ACTIVITY_END,  MIN(AD0.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD0.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT FROM ASH_DATA AD0 GROUP BY AD0.PLAN_LINE_ID,  AD0.PLAN_ACTIVITY_BUCKET_NUM,  AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME) AD1 GROUP BY AD1.PLAN_LINE_ID,	AD1.BUCKET_NUM) AD2 GROUP BY AD2.PLAN_LINE_ID) AH,  (SELECT LO.SQL_PLAN_LINE_ID PLAN_LINE_ID,  DECODE(SUM(LO.TOTALWORK),  0,  NULL,  ROUND(SUM(LO.SOFAR)*100/SUM(LO.TOTALWORK))) PERCENT_COMPLETE,  MAX(LO.TIME_REMAINING) TIME_REMAINING FROM GV$SESSION_LONGOPS LO,  MONITOR_DATA MO WHERE (:B49 = 'Y' OR :B71 = 'DONE (ERROR)') AND LO.SQL_ID = :B9 AND LO.SQL_EXEC_START = :B8 AND LO.SQL_EXEC_ID = :B7 AND LO.INST_ID = MO.INST_ID AND LO.SID = MO.SID GROUP BY LO.SQL_PLAN_LINE_ID) LO,  (SELECT PM0.*,  CASE WHEN PM0.STARTS IS NULL OR PM0.STARTS = 0 OR PM0.OUTPUT_ROWS IS NULL THEN NULL ELSE 1 END NEED_ROWS,  ROW_NUMBER() OVER(PARTITION BY PM0.STAT_GID ORDER BY PM0.PLAN_LINE_ID ) GID_ROWNUM,  MAX(LAST_CHANGE_TIME) OVER() OVERALL_LAST_CHANGE_TIME,  MAX(MAX_IO_REQS) OVER() OVERALL_MAX_IO_REQS,  MAX(MAX_IO_BYTES) OVER() OVERALL_MAX_IO_BYTES FROM (SELECT /*+ leading(mo) use_hash(plm) */ PLM.PLAN_LINE_ID PLAN_LINE_ID,  PLM.PLAN_OPERATION OPERATION,	PLM.PLAN_OPTIONS OPTIONS,  MAX(PLM.PLAN_PARENT_ID) PARENT_ID,  MAX(PLM.PLAN_DEPTH) DEPTH,  MAX(PLM.PLAN_POSITION) POSITION,  MAX(PLM.PLAN_OPERATION_INACTIVE) INACTIVE,  MAX(PLM.PLAN_OBJECT_OWNER) OBJECT_OWNER,  MAX(PLM.PLAN_OBJECT_NAME) OBJECT_NAME,  MAX(PLM.PLAN_OBJECT_TYPE) OBJECT_TYPE,  MAX(PLM.PLAN_COST) COST,  MAX(PLM.PLAN_CARDINALITY) CARDINALITY,  MAX(PLM.PLAN_BYTES) BYTES,  MAX(PLM.PLAN_CPU_COST) CPU_COST,  MAX(PLM.PLAN_IO_COST) IO_COST,  MAX(PLM.PLAN_TEMP_SPACE) TEMP_SPACE,  MAX(PLM.PLAN_TIME) TIME,  MAX(PLM.PLAN_PARTITION_START) PARTITION_START,  MAX(PLM.PLAN_PARTITION_STOP) PARTITION_STOP,  MIN(PLM.FIRST_CHANGE_TIME) FIRST_CHANGE_TIME,	MAX(PLM.LAST_CHANGE_TIME) LAST_CHANGE_TIME,  MIN(PLM.LAST_CHANGE_TIME) MIN_LAST_CHANGE_TIME,  MIN(NVL2(PLM.FIRST_CHANGE_TIME,  MO.PX_SERVER_SET,  NULL)) PX_SERVER_SET,  COUNT(CASE WHEN PLM.PAR IS NOT NULL AND PLM.STARTS IS NOT NULL AND PLM.STARTS &gt; 0 AND PLM.PLAN_LINE_ID != 0 AND PLM.PLAN_OPERATION != 'PX COORDINATOR' THEN 1 ELSE NULL END) DOP,  SUM(PLM.STARTS) STARTS,	MAX(NVL2(PAR,  PLM.STARTS * 10000000000 + PLM.ES,  NULL)) MAX_STARTS,  SUM(PLM.OUTPUT_ROWS) OUTPUT_ROWS,  MAX(NVL2(PAR,  PLM.OUTPUT_ROWS * 10000000000 +PLM.ES,  NULL)) MAX_OUTPUT_ROWS,  SUM(PLM.WORKAREA_MEM) MEM,  SUM(PLM.WORKAREA_MAX_MEM) MAX_MEM,  MIN(NVL2(PAR,  PLM.WORKAREA_MAX_MEM * 10000000000 + PLM.ES,  NULL)) MIN_MAX_MEM,  SUM(PLM.WORKAREA_TEMPSEG) TEMP,  SUM(PLM.WORKAREA_MAX_TEMPSEG) MAX_TEMP,  MAX(NVL2(PAR,  PLM.WORKAREA_MAX_TEMPSEG * 10000000000 + PLM.ES,  NULL)) MAX_MAX_TEMP,  COUNT(PLM.WORKAREA_MAX_TEMPSEG) SPILL_COUNT,  SUM(PLM.PHYSICAL_READ_REQUESTS) READ_REQS,  MAX(NVL2(PAR,  PLM.PHYSICAL_READ_REQUESTS * 10000000000 + PLM.ES,  NULL)) MAX_READ_REQS,  SUM(PLM.PHYSICAL_READ_BYTES) READ_BYTES,  MAX(NVL2(PAR,  PLM.PHYSICAL_READ_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_READ_BYTES,  SUM(PLM.PHYSICAL_WRITE_REQUESTS) WRITE_REQS,  MAX(NVL2(PAR,	PLM.PHYSICAL_WRITE_REQUESTS * 10000000000 + PLM.ES,  NULL)) MAX_WRITE_REQS,  SUM(PLM.PHYSICAL_WRITE_BYTES) WRITE_BYTES,  MAX(NVL2(PAR,	PLM.PHYSICAL_WRITE_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_WRITE_BYTES,  NVL(SUM(PLM.PHYSICAL_READ_BYTES),  0) + NVL(SUM(PLM.PHYSICAL_WRITE_BYTES),  0) IO_BYTES,  SUM(NVL(PLM.PHYSICA
L_READ_REQUESTS,  0) + NVL(PLM.PHYSICAL_WRITE_REQUESTS,  0)) MAX_IO_REQS,  SUM(NVL(PLM.PHYSICAL_READ_BYTES,  0) + NVL(PLM.PHYSICAL_WRITE_BYTES,  0)) MAX_IO_BYTES,  SUM(PLM.IO_INTERCONNECT_BYTES) IO_INTER_BYTES,  MAX(NVL2(PAR,  PLM.IO_INTERCONNECT_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_IO_INTER_BYTES,  MAX(OTHERSTAT_GROUP_ID) STAT_GID,  NVL(DECODE(MAX(OTHERSTAT_1_TYPE),	3,  MAX(OTHERSTAT_1_VALUE),  4,  MAX(OTHERSTAT_1_VALUE),  6,  MIN(OTHERSTAT_1_VALUE),  7,  MIN(OTHERSTAT_1_VALUE),  NULL),  SUM(DECODE(OTHERSTAT_1_TYPE,  1,  OTHERSTAT_1_VALUE,  2,  OTHERSTAT_1_VALUE,  NULL))) STAT1_VALUE,	NVL(MOD((DECODE(MAX(OTHERSTAT_2_TYPE),	3,  MAX(OTHERSTAT_2_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),	4,  MAX(RMAX1 + OTHERSTAT_2_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_2_VALUE),  NULL),  6,  MIN(OTHERSTAT_2_VALUE),  NULL)),	10000000000000000),  SUM(DECODE(OTHERSTAT_2_TYPE,  1,  OTHERSTAT_2_VALUE,  2,  OTHERSTAT_2_VALUE,  NULL))) STAT2_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_3_TYPE),  3,  MAX(OTHERSTAT_3_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_3_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_3_VALUE),  NULL),  6,  MIN(OTHERSTAT_3_VALUE),	NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_3_TYPE,  1,	OTHERSTAT_3_VALUE,  2,	OTHERSTAT_3_VALUE,  NULL))) STAT3_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_4_TYPE),  3,  MAX(OTHERSTAT_4_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_4_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_4_VALUE),  NULL),  6,	MIN(OTHERSTAT_4_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_4_TYPE,  1,  OTHERSTAT_4_VALUE,  2,  OTHERSTAT_4_VALUE,  NULL))) STAT4_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_5_TYPE),  3,  MAX(OTHERSTAT_5_VALUE),	5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_5_VALUE),	7,  MIN(RMAX1 + OTHERSTAT_5_VALUE),  NULL),  6,  MIN(OTHERSTAT_5_VALUE),  NULL)),  10000000000000000),	SUM(DECODE(OTHERSTAT_5_TYPE,  1,  OTHERSTAT_5_VALUE,  2,  OTHERSTAT_5_VALUE,  NULL))) STAT5_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_6_TYPE),  3,	MAX(OTHERSTAT_6_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,	MAX(RMAX1 + OTHERSTAT_6_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_6_VALUE),  NULL),  6,  MIN(OTHERSTAT_6_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_6_TYPE,  1,  OTHERSTAT_6_VALUE,  2,  OTHERSTAT_6_VALUE,  NULL))) STAT6_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_7_TYPE),  3,  MAX(OTHERSTAT_7_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_7_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_7_VALUE),  NULL),  6,  MIN(OTHERSTAT_7_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_7_TYPE,	1,  OTHERSTAT_7_VALUE,	2,  OTHERSTAT_7_VALUE,	NULL))) STAT7_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_8_TYPE),  3,  MAX(OTHERSTAT_8_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_8_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_8_VALUE),	NULL),	6,  MIN(OTHERSTAT_8_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_8_TYPE,  1,  OTHERSTAT_8_VALUE,  2,  OTHERSTAT_8_VALUE,  NULL))) STAT8_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_9_TYPE),  3,  MAX(OTHERSTAT_9_VALUE),  5,	DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_9_VALUE),  7,	MIN(RMAX1 + OTHERSTAT_9_VALUE),  NULL),  6,  MIN(OTHERSTAT_9_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_9_TYPE,  1,  OTHERSTAT_9_VALUE,  2,  OTHERSTAT_9_VALUE,  NULL))) STAT9_VALUE,	NVL(MOD((DECODE(MAX(OTHERSTAT_10_TYPE),  3,  MAX(OTHERSTAT_10_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_10_VALUE),	7,  MIN(RMAX1 + OTHERSTAT_10_VALUE),  NULL),  6,  MIN(OTHERSTAT_10_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_10_TYPE,  1,  OTHERSTAT_10_VALUE,  2,  OTHERSTAT_10_VALUE,  NULL))) STAT10_VALUE FROM (SELECT A.*,  OTHERSTAT_1_VALUE * 10000000000000000 RMAX1,  A.INST_ID * 1000000 + A.SID ES,  DECODE(A.PROCESS_NAME,  'ora',  NULL,  1) PAR FROM GV$ALL_SQL_PLAN_MONITOR A) PLM,  MONITOR_DATA MO WHERE PLM.SQL_ID = :B9 AND PLM.SQL_EXEC_START = :B8 AND PLM.SQL_EXEC_ID = :B7 AND PLM.INST_ID = MO.INST_ID AND PLM.INST_ID BETWEEN :B11 AND :B10 AND PLM.KEY = MO.KEY GROUP BY PLM.PLAN_LINE_ID,	PLM.PLAN_OPERATION,  PLM.PLAN_OPTIONS) PM0) PM WHERE AH.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND AT.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND LO.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND (:B21 IS NULL OR PM.PLAN_LINE_ID = :B21 )) PLI) ELSE NULL END,	CASE WHEN :B42 = 1 THEN DBMS_SQLTUNE.BUILD_STASH_XML( SESSION_ID=&gt;:B19 ,  SESSION_SERIAL=&gt;:B18 ,	SESSION_INST_ID=&gt;:B17 ,  PX_MODE=&gt;'yes',	START_TIME=&gt;:B20 ,  END_TIME=&gt;:B22 ,  MISSING_SECONDS=&gt; :B41 ,  INSTANCE_LOW_FILTER=&gt;:B11 ,  INSTANCE_HIGH_FILTER=&gt;:B10 ,  BUCKET_MAX_COUNT=&gt;NULL,  BUCKET_INTERVAL=&gt;:B26 ,  REPORT_LEVEL=&gt;'typical',  CPU_CORES=&gt;:B40 ,  IS_HYPER=&gt;:B39 ) ELSE NULL END),  (CASE WHEN :B38 = 1 THEN (SELECT XMLELEMENT( &quot;skewed_sessions&quot;,  XMLATTRIBUTES( DECODE(MIN(INST_ID),  NULL,  :B17 ,  MIN(INST_ID)) AS &quot;min_iid&quot;,	DECODE(MAX(INST_ID),  NULL,  :B17 ,  MAX(INST_ID)) AS
&quot;max_iid&quot;),  XMLAGG( XMLELEMENT( &quot;s&quot;,  XMLATTRIBUTES( INST_ID AS &quot;i&quot;),  SESSION_ID) ORDER BY INST_ID,  SESSION_ID)) FROM (SELECT SESS.* FROM (SELECT DECODE(AD.DFO_MOST_ACTIVE_IID,  :B17 ,  NULL,  AD.DFO_MOST_ACTIVE_IID) INST_ID,  AD.DFO_MOST_ACTIVE_SID SESSION_ID FROM ASH_DATA AD WHERE AD.DFO_MOST_ACTIVE_COUNT IS NOT NULL GROUP BY AD.DFO_MOST_ACTIVE_IID,  AD.DFO_MOST_ACTIVE_SID ORDER BY MAX(AD.DFO_MOST_ACTIVE_COUNT) DESC) SESS WHERE ROWNUM &lt;= 100)) ELSE NULL END),  (CASE WHEN :B37 = 1 THEN (SELECT XMLELEMENT( &quot;report_repository_summary&quot;,  CASE WHEN MA.MAX_DBOP_NAME IS NOT NULL THEN XMLELEMENT( &quot;dbop&quot;,  XMLATTRIBUTES('F' AS &quot;detail&quot;,  MA.MAX_DBOP_NAME AS &quot;dbop_name&quot;,  TO_CHAR(MA.MIN_FIRST_REFRESH_TIME,  :B12 ) AS &quot;dbop_exec_start&quot;,  MA.MAX_DBOP_EXEC_ID AS &quot;dbop_exec_id&quot;),  XMLFOREST( MA.MAX_STATUS AS &quot;status&quot;,  TO_CHAR(NVL(MA.MAX_SQL_EXEC_START,  MA.MIN_FIRST_REFRESH_TIME),  :B12 )AS
&quot;first_refresh_time&quot;,  TO_CHAR(MA.MAX_LAST_REFRESH_TIME,  :B12 )AS &quot;last_refresh_time&quot;,  MA.SUM_REFRESH_COUNT AS &quot;refresh_count&quot;,  MA.MAX_INST_ID AS &quot;inst_id&quot;,  MA.MAX_SESSION_ID AS &quot;session_id&quot;,  MA.MAX_SESSION_SERIAL AS &quot;session_serial&quot;,  MA.MAX_USERID AS &quot;user_id&quot;,  MA.MAX_USERNAME AS &quot;user&quot;,  MA.MAX_CON_ID AS &quot;con_id&quot;,	MA.MAX_CON_NAME AS &quot;con_name&quot;,  MA.MAX_MODULE AS &quot;module&quot;,	MA.MAX_ACTION AS &quot;action&quot;,  MA.MAX_SERVICE_NAME AS &quot;service&quot;,  MA.MAX_CLIENT_ID AS &quot;client_id&quot;,  MA.MAX_CLIENT_INFO AS &quot;client_info&quot;,  MA.MAX_PROGRAM AS &quot;program&quot;,  MA.MAX_PL_ENTRY_OID AS &quot;plsql_entry_object_id&quot;,  MA.MAX_PL_ENTRY_PROGID AS &quot;plsql_entry_subprogram_id&quot;,  MA.MAX_PL_OID AS &quot;plsql_object_id&quot;,  MA.MAX_PL_PROGID AS &quot;plsql_subprogram_id&quot;,  MA.MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,	MA.MAX_PX_DOP AS &quot;dop&quot;,  MA.MAX_PX_DOP_INSTANCES AS &quot;instances&quot;),  CASE WHEN MA.MAX_ERROR_NUMBER IS NULL THEN NULL ELSE XMLELEMENT( &quot;error&quot;,  XMLATTRIBUTES(MA.MAX_ERROR_NUMBER AS &quot;number&quot;,  MA.MAX_ERROR_FACILITY AS &quot;facility&quot;),  MA.MAX_ERROR_MESSAGE) END,  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('duration' AS &quot;name&quot;),  GREATEST(ROUND((MA.MAX_LAST_REFRESH_TIME- NVL(MA.MAX_SQL_EXEC_START,  MA.MIN_FIRST_REFRESH_TIME))*86400),  LEAST(MA.SUM_ELAPSED_TIME/1000000,	1),  CEIL(MA.MAX_QUEUING_TIME/1000000))),  DECODE(MA.SUM_ELAPSED_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MA.SUM_ELAPSED_TIME)),  DECODE(MA.MAX_QUEUING_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MA.MAX_QUEUING_TIME)),  DECODE(MA.SUM_CPU_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MA.SUM_CPU_TIME)),	DECODE(MA.SUM_USER_IO_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MA.SUM_USER_IO_WAIT_TIME)),  DECODE(MA.SUM_APPLICATION_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MA.SUM_APPLICATION_WAIT_TIME)),	DECODE(MA.SUM_CONCURRENCY_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MA.SUM_CONCURRENCY_WAIT_TIME)),  DECODE(MA.SUM_CLUSTER_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MA.SUM_CLUSTER_WAIT_TIME)),	DECODE(MA.SUM_PLSQL_EXEC_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MA.SUM_PLSQL_EXEC_TIME)),  DECODE(MA.SUM_JAVA_EXEC_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MA.SUM_JAVA_EXEC_TIME)),  DECODE(MA.SUM_OTHER_WAIT_TIME,  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  MA.SUM_OTHER_WAIT_TIME)),  DECODE(MA.SUM_FETCHES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MA.SUM_FETCHES)),  DECODE(MA.SUM_BUFFER_GETS,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MA.SUM_BUFFER_GETS)),  DECODE(MA.SUM_READ_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MA.SUM_READ_REQS)),	DECODE(MA.SUM_READ_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MA.SUM_READ_BYTES)),  DECODE(MA.SUM_WRITE_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MA.SUM_WRITE_REQS)),  DECODE(MA.SUM_WRITE_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MA.SUM_WRITE_BYTES)),  CASE WHEN MA.SUM_IO_INTER_BYTES IS NULL OR MA.SUM_IO_INTER_BYTES = MA.SUM_IO_BYTES OR MA.SUM_IO_BYTES = 0 OR NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MA.SUM_IO_BYTES / DECODE(MA.SUM_IO_INTER_BYTES,  0,  1,  MA.SUM_IO_INTER_BYTES),  2)) END,	CASE WHEN NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 OR MA.SUM_IO_BYTES = 0 OR MA.SUM_IO_UNC_BYTES = MA.SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100 * (GREATEST(MA.SUM_IO_UNC_BYTES,  MA.SUM_IO_ELIG_BYTES) - MA.SUM_IO_RET_BYTES) / MA.SUM_IO_ELIG_BYTES,  2))) END) ) ELSE XMLELEMENT( &quot;sql&quot;,  XMLATTRIBUTES( MA.MAX_SQL_ID AS &quot;sql_id&quot;,  TO_CHAR(MA.MAX_SQL_EXEC_START,  :B12 ) AS &quot;sql_exec_start&quot;,	MA.MAX_SQL_EXEC_ID AS &quot;sql_exec_id&quot;),  XMLFOREST(MA.MAX_STATUS AS &quot;status&quot;,  SUBSTR(MA.SQLMON_TEXT,  1,  100) AS &quot;sql_text&quot;,  TO_CHAR(MA.MIN_FIRST_REFRESH_TIME,	:B12 ) AS &quot;first_refresh_time&quot;,  TO_CHAR(MA.MAX_LAST_REFRESH_TIME,  :B12 ) AS &quot;last_refresh_time&quot;,	MA.SUM_REFRESH_COUNT AS &quot;refresh_count&quot;,  MA.MAX_INST_ID AS &quot;inst_id&quot;,  MA.MAX_SESSION_ID AS &quot;session_id&quot;,  MA.MAX_SESSION_SERIAL AS &quot;session_serial&quot;,	MA.MAX_USERID AS &quot;user_id&quot;,  MA.MAX_USERNAME AS &quot;user&quot;,  MA.MAX_CON_ID AS &quot;con_id&quot;,  MA.MAX_CON_NAME AS &quot;con_name&quot;,  MA.MAX_MODULE AS &quot;module&quot;,  MA.MAX_ACTION AS &quot;action&quot;,  MA.MAX_SERVICE_NAME AS &quot;service&quot;,  MA.MAX_CLIENT_ID AS &quot;client_id&quot;,  MA.MAX_CLIENT_INFO AS &quot;client_info&quot;,  MA.MAX_PROGRAM AS &quot;program&quot;,  MA.MAX_PLAN_HASH_VALUE AS &quot;plan_hash&quot;,  MA.MAX_PL_ENTRY_OID AS &quot;plsql_entry_object_id&quot;,  MA.MAX_PL_ENTRY_PROGID AS &quot;plsql_entry_subprogram_id&quot;,  MA.MAX_PL_OID AS &quot;plsql_object_id&quot;,	MA.MAX_PL_PROGID AS &quot;plsql_subprogram_id&quot;,  MA.MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,  MA.MAX_PX_DOP AS &quot;dop&quot;,	MA.MAX_PX_DOP_INSTANCES AS &quot;instances&quot;,  MA.SUM_SERVERS_REQUESTED AS &quot;px_servers_requested&quot;,  MA.SUM_SERVERS_ALLOCATED AS &quot;px_servers_allocated&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('duration' AS &quot;name&quot;),	GREATEST(ROUND((MA.MAX_LAST_REFRESH_TIME- MA.MAX_SQL_EXEC_START) * 86400),  LEAST(MA.SUM_ELAPSED_TIME/1000000,	1),  CEIL(MA.MAX_QUEUING_TIME/1000000))),  DECODE(MA.SUM_ELAPSED_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MA.SUM_ELAPSED_TIME)),  DECODE(MA.MAX_QUEUING_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MA.MAX_QUEUING_TIME)),  DECODE(MA.SUM_CPU_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MA.SUM_CPU_TIME)),	DECODE(MA.SUM_USER_IO_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MA.SUM_USER_IO_WAIT_TIME)),  DECODE(MA.SUM_APPLICATION_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MA.SUM_APPLICATION_WAIT_TIME)),	DECODE(MA.SUM_CONCURRENCY_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MA.SUM_CONCURRENCY_WAIT_TIME)),  DECODE(MA.SUM_CLUSTER_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MA.SUM_CLUSTER_WAIT_TIME)),	DECODE(MA.SUM_PLSQL_EXEC_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MA.SUM_PLSQL_EXEC_TIME)),  DECODE(MA.SUM_JAVA_EXEC_TIME
,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MA.SUM_JAVA_EXEC_TIME)),  DECODE(MA.SUM_OTHER_WAIT_TIME,  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  MA.SUM_OTHER_WAIT_TIME)),  DECODE(MA.SUM_FETCHES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MA.SUM_FETCHES)),  DECODE(MA.SUM_BUFFER_GETS,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MA.SUM_BUFFER_GETS)),  DECODE(MA.SUM_READ_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MA.SUM_READ_REQS)),	DECODE(MA.SUM_READ_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MA.SUM_READ_BYTES)),  DECODE(MA.SUM_WRITE_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MA.SUM_WRITE_REQS)),  DECODE(MA.SUM_WRITE_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MA.SUM_WRITE_BYTES)),  DECODE(MA.SUM_IO_UNC_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MA.SUM_IO_UNC_BYTES)),  DECODE(MA.SUM_IO_ELIG_BYTES,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MA.SUM_IO_ELIG_BYTES)),  DECODE(MA.SUM_IO_RET_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  MA.SUM_IO_RET_BYTES)),  CASE WHEN MA.SUM_IO_INTER_BYTES IS NULL OR MA.SUM_IO_INTER_BYTES = MA.SUM_IO_BYTES OR MA.SUM_IO_BYTES = 0 OR NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MA.SUM_IO_BYTES / DECODE(MA.SUM_IO_INTER_BYTES,	0,  1,	MA.SUM_IO_INTER_BYTES),  2)) END,  CASE WHEN NVL(MA.SUM_IO_ELIG_BYTES,	0) = 0 OR MA.SUM_IO_BYTES = 0 OR MA.SUM_IO_UNC_BYTES = MA.SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100 * (GREATEST(MA.SUM_IO_UNC_BYTES,  MA.SUM_IO_ELIG_BYTES) - MA.SUM_IO_RET_BYTES) / MA.SUM_IO_ELIG_BYTES,	2))) END) ) END) FROM MONITOR_AGG MA) ELSE NULL END) FROM (SELECT CASE WHEN V1.XPLAN_XML IS NULL OR V1.XPLAN_XML.EXISTSNODE('/error') &gt; 0 THEN NULL ELSE V1.XPLAN_XML END XPLAN_XML FROM (SELECT CASE WHEN :B36 = 1 THEN DBMS_XPLAN.BUILD_PLAN_XML( TABLE_NAME=&gt;'gv$all_sql_plan',  PLAN_TAG=&gt;'plan',	FILTER_PREDS=&gt;:B35 ,  FORMAT=&gt;'-PROJECTION +ALIAS +ADAPTIVE') ELSE NULL END XPLAN_XML FROM DUAL) V1) CONST_VIEW</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="a2kfmf3xv45kg"></a>a2kfmf3xv45kg</td><td class='awrnc'><pre_sqltext class="awr">insert into  WRH$_SERVICE_STAT  (dbid,  per_pdb,  con_dbid,  snap_id,  instance_number,	 service_name_hash,  stat_id,  value) select /*+ opt_param('_optimizer_mjc_enabled', 'false')		    no_query_transformation */	:dbid,	0 per_pdb,   :srcdbid  con_dbid,   :snap_id,  :instance_number,   stat.service_name_hash,  stat.stat_id,  stat.value  FROM   v$active_services	  asvc,   v$service_stats    stat  WHERE (1 = 1)  and  asvc.name_hash = stat.service_name_hash</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="a95n8p4vpxmps"></a>a95n8p4vpxmps</td><td class='awrc'><pre_sqltext class="awr">begin prvt_hdm.execute_slave_actions; end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="ajx8j2hvgamh9"></a>ajx8j2hvgamh9</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '6';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="atwuyuvqkf27w"></a>atwuyuvqkf27w</td><td class='awrc'><pre_sqltext class="awr">SELECT /*+ OPT_PARAM('_fix_control' '16391176:1') */ GROUP_TYPE,  BUCKET_START,  BUCKET_END,  TM_GROUP_TYPE,  TM_BUCKET_START,  TM_BUCKET_END,  SUM(TM_CPU_FIRST_BUCKET_VALUE) TM_CPU_FIRST_BUCKET_VALUE,	SUM(TM_CPU_MIDDLE_BUCKETS_VALUE) TM_CPU_MIDDLE_BUCKETS_VALUE,  SUM(TM_CPU_LAST_BUCKET_VALUE) TM_CPU_LAST_BUCKET_VALUE,	SUM(TM_DB_FIRST_BUCKET_VALUE) TM_DB_FIRST_BUCKET_VALUE,  SUM(TM_DB_MIDDLE_BUCKETS_VALUE) TM_DB_MIDDLE_BUCKETS_VALUE,  SUM(TM_DB_LAST_BUCKET_VALUE) TM_DB_LAST_BUCKET_VALUE,  SUM(RREQS_FIRST_BUCKET_VALUE) RREQS_FIRST_BUCKET_VALUE,  SUM(RREQS_MIDDLE_BUCKETS_VALUE) RREQS_MIDDLE_BUCKETS_VALUE,  SUM(RREQS_LAST_BUCKET_VALUE) RREQS_LAST_BUCKET_VALUE,  SUM(WREQS_FIRST_BUCKET_VALUE) WREQS_FIRST_BUCKET_VALUE,  SUM(WREQS_MIDDLE_BUCKETS_VALUE) WREQS_MIDDLE_BUCKETS_VALUE,	SUM(WREQS_LAST_BUCKET_VALUE) WREQS_LAST_BUCKET_VALUE,  SUM(RBYTES_FIRST_BUCKET_VALUE) RBYTES_FIRST_BUCKET_VALUE,  SUM(RBYTES_MIDDLE_BUCKETS_VALUE) RBYTES_MIDDLE_BUCKETS_VALUE,  SUM(RBYTES_LAST_BUCKET_VALUE) RBYTES_LAST_BUCKET_VALUE,  SUM(WBYTES_FIRST_BUCKET_VALUE) WBYTES_FIRST_BUCKET_VALUE,  SUM(WBYTES_MIDDLE_BUCKETS_VALUE) WBYTES_MIDDLE_BUCKETS_VALUE,  SUM(WBYTES_LAST_BUCKET_VALUE) WBYTES_LAST_BUCKET_VALUE,  SUM(IBYTES_FIRST_BUCKET_VALUE) IBYTES_FIRST_BUCKET_VALUE,	SUM(IBYTES_MIDDLE_BUCKETS_VALUE) IBYTES_MIDDLE_BUCKETS_VALUE,  SUM(IBYTES_LAST_BUCKET_VALUE) IBYTES_LAST_BUCKET_VALUE,	SUM(CRBYTES_FIRST_BUCKET_VALUE) CRBYTES_FIRST_BUCKET_VALUE,  SUM(CRBYTES_MIDDLE_BUCKETS_VALUE) CRBYTES_MIDDLE_BUCKETS_VALUE,  SUM(CRBYTES_LAST_BUCKET_VALUE) CRBYTES_LAST_BUCKET_VALUE,  SUM(PGA_ALLOC_FIRST_BUCKET_VALUE) PGA_ALLOC_FIRST_BUCKET_VALUE,  SUM(PGA_ALLOC_MIDDLE_BUCKETS_VALUE) PGA_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(PGA_ALLOC_LAST_BUCKET_VALUE) PGA_ALLOC_LAST_BUCKET_VALUE,  SUM(TMP_ALLOC_FIRST_BUCKET_VALUE) TMP_ALLOC_FIRST_BUCKET_VALUE,  SUM(TMP_ALLOC_MIDDLE_BUCKETS_VALUE) TMP_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(TMP_ALLOC_LAST_BUCKET_VALUE) TMP_ALLOC_LAST_BUCKET_VALUE FROM ( SELECT GROUP_TYPE,  BUCKET_START,  TM_BUCKET_START,  TM_BUCKET_END,  BUCKET_END,  TM_GROUP_TYPE,  SUM(GVTF.TM_CPU_FIRST_BUCKET_VALUE) TM_CPU_FIRST_BUCKET_VALUE,  SUM(GVTF.TM_CPU_MIDDLE_BUCKETS_VALUE) TM_CPU_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.TM_CPU_LAST_BUCKET_VALUE) TM_CPU_LAST_BUCKET_VALUE,  SUM(GVTF.TM_DB_FIRST_BUCKET_VALUE) TM_DB_FIRST_BUCKET_VALUE,  SUM(GVTF.TM_DB_MIDDLE_BUCKETS_VALUE) TM_DB_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.TM_DB_LAST_BUCKET_VALUE) TM_DB_LAST_BUCKET_VALUE,	SUM(GVTF.RREQS_FIRST_BUCKET_VALUE) RREQS_FIRST_BUCKET_VALUE,  SUM(GVTF.RREQS_MIDDLE_BUCKETS_VALUE) RREQS_MIDDLE_BUCKETS_VALUE,	SUM(GVTF.RREQS_LAST_BUCKET_VALUE) RREQS_LAST_BUCKET_VALUE,  SUM(GVTF.WREQS_FIRST_BUCKET_VALUE) WREQS_FIRST_BUCKET_VALUE,  SUM(GVTF.WREQS_MIDDLE_BUCKETS_VALUE) WREQS_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.WREQS_LAST_BUCKET_VALUE) WREQS_LAST_BUCKET_VALUE,	SUM(GVTF.RBYTES_FIRST_BUCKET_VALUE) RBYTES_FIRST_BUCKET_VALUE,	SUM(GVTF.RBYTES_MIDDLE_BUCKETS_VALUE) RBYTES_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.RBYTES_LAST_BUCKET_VALUE) RBYTES_LAST_BUCKET_VALUE,  SUM(GVTF.WBYTES_FIRST_BUCKET_VALUE) WBYTES_FIRST_BUCKET_VALUE,  SUM(GVTF.WBYTES_MIDDLE_BUCKETS_VALUE) WBYTES_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.WBYTES_LAST_BUCKET_VALUE) WBYTES_LAST_BUCKET_VALUE,  SUM(GVTF.IBYTES_FIRST_BUCKET_VALUE) IBYTES_FIRST_BUCKET_VALUE,  SUM(GVTF.IBYTES_MIDDLE_BUCKETS_VALUE) IBYTES_MIDDLE_BUCKETS_VALUE,	SUM(GVTF.IBYTES_LAST_BUCKET_VALUE) IBYTES_LAST_BUCKET_VALUE,  SUM(GVTF.CRBYTES_FIRST_BUCKET_VALUE) CRBYTES_FIRST_BUCKET_VALUE,	SUM(GVTF.CRBYTES_MIDDLE_BUCKETS_VALUE) CRBYTES_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.CRBYTES_LAST_BUCKET_VALUE) CRBYTES_LAST_BUCKET_VALUE,  SUM(GVTF.PGA_ALLOC_FIRST_BUCKET_VALUE) PGA_ALLOC_FIRST_BUCKET_VALUE,  SUM(GVTF.PGA_ALLOC_MIDDLE_BUCKETS_VALUE) PGA_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.PGA_ALLOC_LAST_BUCKET_VALUE) PGA_ALLOC_LAST_BUCKET_VALUE,  SUM(GVTF.TMP_ALLOC_FIRST_BUCKET_VALUE) TMP_ALLOC_FIRST_BUCKET_VALUE,	SUM(GVTF.TMP_ALLOC_MIDDLE_BUCKETS_VALUE) TMP_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(GVTF.TMP_ALLOC_LAST_BUCKET_VALUE) TMP_ALLOC_LAST_BUCKET_VALUE FROM TABLE(SYS.GV$(CURSOR( SELECT INST_ID,	GROUP_TYPE,  BUCKET_START,  TM_BUCKET_START,  TM_BUCKET_END,  BUCKET_END,  TM_GROUP_TYPE,  SUM(TM_DELTA_CPU_TIME * TM_FIRST_BUCKET_RATIO) TM_CPU_FIRST_BUCKET_VALUE,  SUM(TM_DELTA_CPU_TIME * TM_MIDDLE_BUCKETS_RATIO) TM_CPU_MIDDLE_BUCKETS_VALUE,  SUM(TM_DELTA_CPU_TIME * TM_LAST_BUCKET_RATIO) TM_CPU_LAST_BUCKET_VALUE,  SUM(TM_DELTA_DB_TIME * TM_FIRST_BUCKET_RATIO) TM_DB_FIRST_BUCKET_VALUE,  SUM(TM_DELTA_DB_TIME * TM_MIDDLE_BUCKETS_RATIO) TM_DB_MIDDLE_BUCKETS_VALUE,  SUM(TM_DELTA_DB_TIME * TM_LAST_BUCKET_RATIO) TM_DB_LAST_BUCKET_VALUE,  SUM(DELTA_READ_REQUESTS * FIRST_BUCKET_RATIO) RREQS_FIRST_BUCKET_VALUE,  SUM(DELTA_READ_REQUESTS * MIDDLE_BUCKETS_RATIO) RREQS_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_READ_REQUESTS * LAST_BUCKET_RATIO) RREQS_LAST_BUCKET_VALUE,	SUM(DELTA_WRITE_REQUESTS * FIRST_BUCKET_RATIO) WREQS_FIRST_BUCKET_VALUE,  SUM(DELTA_WRITE_REQUESTS * MIDDLE_BUCKETS_RATIO) WREQS_MIDDLE_BUCKETS_VALUE,	SUM(DELTA_WRITE_REQUESTS * LAST_BUCKET_RATIO) WREQS_LAST_BUCKET_VALUE,	SUM(DELTA_READ_BYTES * FIRST_BUCKET_RATIO) RBYTES_FIRST_BUCKET_VALUE,  SUM(DELTA_READ_BYTES * MIDDLE_BUCKETS_RATIO) RBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_READ_BYTES * LAST_BUCKET_RATIO) RBYTES_LAST_BUCKET_VALUE,  SUM(DELTA_WRITE_BYTES * FIRST_BUCKET_RATIO) WBYTES_FIRST_BUCKET_VALUE,  SUM(DELTA_WRITE_BYTES * MIDDLE_BUCKETS_RATIO) WBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_WRITE_BYTES * LAST_BUCKET_RATIO) WBYTES_LAST_BUCKET_VALUE,  SUM(DELTA_INTERCONNECT_BYTES * FIRST_BUCKET_RATIO) IBYTES_FIRST_BUCKET_VALUE,	SUM(DELTA_INTERCONNECT_BYTES * MIDDLE_BUCKETS_RATIO) IBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_INTERCONNECT_BYTES * LAST_BUCKET_RATIO) IBYTES_LAST_BUCKET_VALUE,	SUM(DELTA_READ_MEM_BYTES * FIRST_BUCKET_RATIO) CRBYTES_FIRST_BUCKET_VALUE,  SUM(DELTA_READ_MEM_BYTES * MIDDLE_BUCKETS_RATIO) CRBYTES_MIDDLE_BUCKETS_VALUE,  SUM(DELTA_READ_MEM_BYTES * LAST_BUCKET_RATIO) CRBYTES_LAST_BUCKET_VALUE,  SUM(PGA_ALLOCATED * LENGTH_SEG * FIRST_BUCKET_RATIO) PGA_ALLOC_FIRST_BUCKET_VALUE,  SUM(PGA_ALLOCATED * LENGTH_SEG * MIDDLE_BUCKETS_RATIO) PGA_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(PGA_ALLOCATED * LENGTH_SEG * LAST_BUCKET_RATIO) PGA_ALLOC_LAST_BUCKET_VALUE,  SUM(TEMP_SPACE_ALLOCATED * LENGTH_SEG * FIRST_BUCKET_RATIO) TMP_ALLOC_FIRST_BUCKET_VALUE,  SUM(TEMP_SPACE_ALLOCATED * LENGTH_SEG * MIDDLE_BUCKETS_RATIO) TMP_ALLOC_MIDDLE_BUCKETS_VALUE,  SUM(TEMP_SPACE_ALLOCATED * LENGTH_SEG * LAST_BUCKET_RATIO) TMP_ALLOC_LAST_BUCKET_VALUE FROM ( SELECT USERENV('INSTANCE') INST_ID,  ROW_ID,  SID,	SAMPLE_TIME,  CASE WHEN BUCKET_END IS NULL OR BUCKET_START IS NULL THEN NULL WHEN BUCKET_START = TM_BUCKET_START AND BUCKET_START = BUCKET_END THEN 'CO' WHEN BUCKET_START = TM_BUCKET_START THEN 'CM' WHEN BUCKET_START = BUCKET_END THEN 'SO' ELSE 'SM' END GROUP_TYPE,  CASE WHEN TM_BUCKET_START IS NULL OR BUCKET_END IS NULL OR (TM_BUCKET_START = BUCKET_START) THEN NULL WHEN TM_BUCKET_START = BUCKET_END THEN 'O' ELSE 'M' END TM_GROUP_TYPE,  START_SEG,  BUCKET_START,  BUCKET_START_OFFSET,  TM_START_SEG,  CASE WHEN TM_BUCKET_START IS NULL OR (TM_BUCKET_START = BUCKET_START) THEN NULL ELSE TM_BUCKET_START END TM_BUCKET_START,  CASE WHEN TM_BUCKET_START IS NULL OR (TM_BUCKET_START = BUCKET_START) THEN NULL ELSE BUCKET_END END TM_BUCKET_END,	TM_BUCKET_START_OFFSET,  LENGTH_SEG,  TM_LENGTH_SEG,  END_SEG,	BUCKET_END,  BUCKET_END_OFFSET,  CASE WHEN BUCKET_START != BUCKET_END THEN (:B9 - BUCKET_START_OFFSET) / LENGTH_SEG ELSE 1 END FIRST_BUCKET_RATIO,  CASE WHEN BUCKET_END &gt;= BUCKET_START + 2 THEN :B9 / LENGTH_SEG ELSE NULL END MIDDLE_BUCKETS_RATIO,  CASE WHEN BUCKET_START != BUCKET_END THEN BUCKET_END_OFFSET / LENGTH_SEG ELSE NULL END LAST_BUCKET_RATIO,  CASE WHEN TM_BUCKET_START != BUCKET_END THEN (:B9 - TM_BUCKET_START_OFFSET) / TM_LENGTH_SEG ELSE 1 END TM_FIRST_BUCKET_RATIO,  CASE WHEN BUCKET_END &gt;= TM_BUCKE
T_START + 2 THEN :B9 / TM_LENGTH_SEG ELSE NULL END TM_MIDDLE_BUCKETS_RATIO,  CASE WHEN TM_BUCKET_START != BUCKET_END THEN BUCKET_END_OFFSET / TM_LENGTH_SEG ELSE NULL END TM_LAST_BUCKET_RATIO,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,	DELTA_READ_IO_REQUESTS DELTA_READ_REQUESTS,  DELTA_WRITE_IO_REQUESTS DELTA_WRITE_REQUESTS,  DELTA_READ_IO_BYTES DELTA_READ_BYTES,  DELTA_WRITE_IO_BYTES DELTA_WRITE_BYTES,  DELTA_INTERCONNECT_IO_BYTES DELTA_INTERCONNECT_BYTES,  DELTA_READ_MEM_BYTES DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,  SID,	SAMPLE_TIME,  START_SEG,  TRUNC(START_SEG / :B9 ) BUCKET_START,  MOD(START_SEG,  :B9 ) BUCKET_START_OFFSET,  TM_START_SEG,  TRUNC(TM_START_SEG/:B9 ) TM_BUCKET_START,  MOD(TM_START_SEG,  :B9 ) TM_BUCKET_START_OFFSET,  TRUNC(END_SEG/:B9 ) BUCKET_END,  MOD(END_SEG,	:B9 ) BUCKET_END_OFFSET,  END_SEG,  LENGTH_SEG,  TM_LENGTH_SEG,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,	DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,  DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,	DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,	SID,  SAMPLE_TIME,  TIME_INTERVAL,  CASE WHEN START_SEG &lt; 0 THEN 0 ELSE START_SEG END START_SEG,  CASE WHEN TM_START_SEG &lt; 0 THEN 0 ELSE TM_START_SEG END TM_START_SEG,  CASE WHEN END_SEG &gt; TIME_INTERVAL THEN TIME_INTERVAL ELSE END_SEG END END_SEG,  (LENGTH_SEG - (CASE WHEN START_SEG &lt; 0 THEN -START_SEG ELSE 0 END + CASE WHEN END_SEG &gt; TIME_INTERVAL THEN END_SEG - TIME_INTERVAL ELSE 0 END)) LENGTH_SEG,  (TM_LENGTH_SEG - (CASE WHEN TM_START_SEG &lt; 0 THEN -TM_START_SEG ELSE 0 END + CASE WHEN END_SEG &gt; TIME_INTERVAL THEN END_SEG - TIME_INTERVAL ELSE 0 END)) TM_LENGTH_SEG,  TM_DELTA_CPU_TIME,	TM_DELTA_DB_TIME,  DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,  DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,	PGA_ALLOCATED,	TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,  SID,  SAMPLE_TIME,  TIME_INTERVAL,  LENGTH_SEG,  TM_LENGTH_SEG,  END_SEG - TM_LENGTH_SEG TM_START_SEG,  END_SEG - LENGTH_SEG START_SEG,  END_SEG,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,	DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROW_ID,  SID,  SAMPLE_TIME,  EXTRACT(SECOND FROM REL_SAMPLE_TIME_INT) + EXTRACT(MINUTE FROM REL_SAMPLE_TIME_INT)*60 + EXTRACT(HOUR FROM REL_SAMPLE_TIME_INT)*3600 + EXTRACT(DAY FROM REL_SAMPLE_TIME_INT)*3600*24 END_SEG,	TIME_INTERVAL,	DELTA_TIME/1000000 LENGTH_SEG,	TM_DELTA_TIME/1000000 TM_LENGTH_SEG,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,	DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,  DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ROWNUM ROW_ID,  SESSION_ID SID,  CAST(FROM_TZ(SAMPLE_TIME,	DBTIMEZONE) AS DATE) SAMPLE_DATE,  SAMPLE_TIME,  (SAMPLE_TIME - CAST(:B8 AS TIMESTAMP)) REL_SAMPLE_TIME_INT,  TRUNC((:B7 - :B8 ) * 3600 * 24) TIME_INTERVAL,  :B8 AS BND_START_INTERVAL ,  :B7 AS BND_END_INTERVAL ,  TM_DELTA_TIME,  TM_DELTA_CPU_TIME,  TM_DELTA_DB_TIME,  DELTA_TIME,  DELTA_READ_IO_REQUESTS,  DELTA_WRITE_IO_REQUESTS,  DELTA_READ_IO_BYTES,  DELTA_WRITE_IO_BYTES,  DELTA_INTERCONNECT_IO_BYTES,	DELTA_READ_MEM_BYTES,  PGA_ALLOCATED,  TEMP_SPACE_ALLOCATED FROM (SELECT ASH0.* FROM V$ACTIVE_SESSION_HISTORY ASH0 WHERE SAMPLE_TIME BETWEEN :B6 AND :B5 AND ( (SESSION_ID = :B2 AND SESSION_SERIAL# = :B1 AND USERENV('INSTANCE') = :B3 ) OR (:B4 = 'yes' AND QC_INSTANCE_ID = :B3 AND QC_SESSION_ID = :B2 AND QC_SESSION_SERIAL# = :B1 ))) ) ASH1 WHERE SAMPLE_DATE &gt;= BND_START_INTERVAL AND SAMPLE_DATE &lt;= BND_END_INTERVAL + 120/3600/24 ) ) WHERE START_SEG &lt;= TIME_INTERVAL ) WHERE (LENGTH_SEG IS NOT NULL AND LENGTH_SEG &gt; 0) OR (TM_LENGTH_SEG IS NOT NULL AND TM_LENGTH_SEG &gt; 0)) ) GROUP BY INST_ID,  GROUP_TYPE,  BUCKET_START,  BUCKET_END,  TM_GROUP_TYPE,  TM_BUCKET_START,  TM_BUCKET_END))) GVTF WHERE INST_ID &gt;= :B11 AND INST_ID &lt;= :B10 GROUP BY GROUP_TYPE,	BUCKET_START,  BUCKET_END,  TM_GROUP_TYPE,  TM_BUCKET_START,  TM_BUCKET_END ) GROUP BY GROUPING SETS ( (GROUP_TYPE,  BUCKET_START,  BUCKET_END),  (TM_GROUP_TYPE,  TM_BUCKET_START,  TM_BUCKET_END) )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="axfzdxtanvh74"></a>axfzdxtanvh74</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '32';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="ayb2zjspaq24n"></a>ayb2zjspaq24n</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '23';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bhdvtsvjhgvrh"></a>bhdvtsvjhgvrh</td><td class='awrnc'><pre_sqltext class="awr">SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bxpcry2tpc217"></a>bxpcry2tpc217</td><td class='awrc'><pre_sqltext class="awr">select /*+ opt_param('parallel_execution_enabled',
				   'false') EXEC_FROM_DBMS_XPLAN */ * from gv$all_sql_plan where 1=0</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="cgtc5gb7c4g07"></a>cgtc5gb7c4g07</td><td class='awrnc'><pre_sqltext class="awr">select dbid,  status_flag from wrm$_wr_control order by mrct_snap_time_num desc</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="csnp95dz2r8ss"></a>csnp95dz2r8ss</td><td class='awrc'><pre_sqltext class="awr">select file#,  block# from recyclebin$ where ts# = :1     and file# != 0 and block# != 0 and space = 0</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="d1j2yjcpr4vg8"></a>d1j2yjcpr4vg8</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '7';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="dg8wzzu89u0y0"></a>dg8wzzu89u0y0</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '4';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="dpnvk07hr10yx"></a>dpnvk07hr10yx</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '17';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="drktaf71uygnb"></a>drktaf71uygnb</td><td class='awrc'><pre_sqltext class="awr">BEGIN
	  sys.prvt_hdm.auto_execute(
	    db_id =&gt; :bind_dbid,
	    inst_id =&gt; :bind_inst,
	    end_snap =&gt; :bind_snap,
	    time_left_in_secs =&gt; :bind_time);
	END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="dxc8p6cu2bx5n"></a>dxc8p6cu2bx5n</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '1';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f7xnvp44nukp7"></a>f7xnvp44nukp7</td><td class='awrc'><pre_sqltext class="awr">insert into  wrm$_snapshot_details  (snap_id, dbid, instance_number, table_id, begin_time, end_time, step_id)    values (:snap_id, :dbid, :instance_number, :bind1, :bind2, :bind3, :step_id)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f80h0xb1qvbsk"></a>f80h0xb1qvbsk</td><td class='awrnc'><pre_sqltext class="awr">SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fhf8upax5cxsz"></a>fhf8upax5cxsz</td><td class='awrc'><pre_sqltext class="awr">BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref,  :snap_id,  :pr_class,					       :rep_id,  :suc); END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fn5s5p6hr6702"></a>fn5s5p6hr6702</td><td class='awrnc'><pre_sqltext class="awr">INSERT INTO wri$_adv_message_groups (task_id, id, seq, message#, fac, hdr, lm, nl, p1, p2, p3, p4, p5) VALUES (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fsprw99ahsvyn"></a>fsprw99ahsvyn</td><td class='awrc'><pre_sqltext class="awr">select typeid,  roottoid from type$ where tvoid = :1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fxtw8kpwrmyrh"></a>fxtw8kpwrmyrh</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '19';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="gjaap3w3qbf8c"></a>gjaap3w3qbf8c</td><td class='awrc'><pre_sqltext class="awr">select count(*) from ilmobj$ where rownum = 1</pre_sqltext></td></tr>
</table>
<p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="23"></a>
<h2 class="awr">
Instance Activity Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1200">Key Instance Activity Stats</a></li>
<li class="awr"><a class="awr" href="#1250">Instance Activity Stats</a></li>
<li class="awr"><a class="awr" href="#1300">Instance Activity Stats - Absolute Values</a></li>
<li class="awr"><a class="awr" href="#1400">Instance Activity Stats - Thread Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1200"></a>
<h3 class="awr">Key Instance Activity Stats</h3>
<ul>
<li class="awr"> Ordered by statistic name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Key Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>1,801,188</td><td align="right" class='awrc'>2,917.20</td><td align="right" class='awrc'>39.17</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>331,888</td><td align="right" class='awrnc'>537.53</td><td align="right" class='awrnc'>7.22</td></tr>
<tr><td scope="row" class='awrc'>gc cr block receive time</td><td align="right" class='awrc'>6,158</td><td align="right" class='awrc'>9.97</td><td align="right" class='awrc'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks received</td><td align="right" class='awrnc'>35,036</td><td align="right" class='awrnc'>56.74</td><td align="right" class='awrnc'>0.76</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>10,399</td><td align="right" class='awrc'>16.84</td><td align="right" class='awrc'>0.23</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>92,749</td><td align="right" class='awrnc'>150.22</td><td align="right" class='awrnc'>2.02</td></tr>
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>378,086</td><td align="right" class='awrnc'>612.35</td><td align="right" class='awrnc'>8.22</td></tr>
<tr><td scope="row" class='awrc'>parse count (total)</td><td align="right" class='awrc'>23,955</td><td align="right" class='awrc'>38.80</td><td align="right" class='awrc'>0.52</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>197</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical reads</td><td align="right" class='awrc'>4,253,774</td><td align="right" class='awrc'>6,889.41</td><td align="right" class='awrc'>92.50</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>709,396</td><td align="right" class='awrnc'>1,148.94</td><td align="right" class='awrnc'>15.43</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>612,583,116</td><td align="right" class='awrc'>992,138.66</td><td align="right" class='awrc'>13,320.79</td></tr>
<tr><td scope="row" class='awrnc'>session cursor cache hits</td><td align="right" class='awrnc'>377,216</td><td align="right" class='awrnc'>610.94</td><td align="right" class='awrnc'>8.20</td></tr>
<tr><td scope="row" class='awrc'>session logical reads</td><td align="right" class='awrc'>7,234,630</td><td align="right" class='awrc'>11,717.20</td><td align="right" class='awrc'>157.32</td></tr>
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>166</td><td align="right" class='awrnc'>0.27</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>45,987</td><td align="right" class='awrc'>74.48</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>workarea executions - optimal</td><td align="right" class='awrnc'>663</td><td align="right" class='awrnc'>1.07</td><td align="right" class='awrnc'>0.01</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1250"></a>
<h3 class="awr">Instance Activity Stats</h3>
<ul>
<li class="awr"> Ordered by statistic name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>617</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>168</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>483</td><td align="right" class='awrnc'>0.78</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Optimized reject DB</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Optimized reject l1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search all</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search hint</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search steal</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:bump HWM</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free block</td><td align="right" class='awrc'>449</td><td align="right" class='awrc'>0.73</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free data block</td><td align="right" class='awrnc'>352</td><td align="right" class='awrnc'>0.57</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free index block</td><td align="right" class='awrc'>97</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:good hint</td><td align="right" class='awrnc'>442</td><td align="right" class='awrnc'>0.72</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:reject L1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:reject db</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM rsv:fill reserve</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM wasted db state change</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO (bound) vector count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO block miss count</td><td align="right" class='awrnc'>3,189,108</td><td align="right" class='awrnc'>5,165.07</td><td align="right" class='awrnc'>69.35</td></tr>
<tr><td scope="row" class='awrc'>Batched IO buffer defrag count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO double miss count</td><td align="right" class='awrnc'>256,670</td><td align="right" class='awrnc'>415.70</td><td align="right" class='awrnc'>5.58</td></tr>
<tr><td scope="row" class='awrc'>Batched IO same unit count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO single block count</td><td align="right" class='awrnc'>1,496</td><td align="right" class='awrnc'>2.42</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector block count</td><td align="right" class='awrc'>3,187,672</td><td align="right" class='awrc'>5,162.75</td><td align="right" class='awrc'>69.32</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector read count</td><td align="right" class='awrnc'>255,039</td><td align="right" class='awrnc'>413.06</td><td align="right" class='awrnc'>5.55</td></tr>
<tr><td scope="row" class='awrc'>Block Cleanout Optim referenced</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CCursor + sql area evicted</td><td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CPU used by this session</td><td align="right" class='awrc'>122,351</td><td align="right" class='awrc'>198.16</td><td align="right" class='awrc'>2.66</td></tr>
<tr><td scope="row" class='awrnc'>CPU used when call started</td><td align="right" class='awrnc'>97,355</td><td align="right" class='awrnc'>157.68</td><td align="right" class='awrnc'>2.12</td></tr>
<tr><td scope="row" class='awrc'>CR blocks created</td><td align="right" class='awrc'>507</td><td align="right" class='awrc'>0.82</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Cached Commit SCN referenced</td><td align="right" class='awrnc'>3,441,112</td><td align="right" class='awrnc'>5,573.22</td><td align="right" class='awrnc'>74.83</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Receive Window</td><td align="right" class='awrc'>133</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Send Window</td><td align="right" class='awrnc'>133</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrc'>1,245,165</td><td align="right" class='awrc'>2,016.67</td><td align="right" class='awrc'>27.08</td></tr>
<tr><td scope="row" class='awrnc'>Client Send Congestion Window</td><td align="right" class='awrnc'>190</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Received</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrnc'>42,683</td><td align="right" class='awrnc'>69.13</td><td align="right" class='awrnc'>0.93</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrc'>43,893</td><td align="right" class='awrc'>71.09</td><td align="right" class='awrc'>0.95</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Acked</td><td align="right" class='awrnc'>300,600</td><td align="right" class='awrnc'>486.85</td><td align="right" class='awrnc'>6.54</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Received</td><td align="right" class='awrc'>116,006</td><td align="right" class='awrc'>187.88</td><td align="right" class='awrc'>2.52</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Number of Retransmitted Packets</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Commit SCN cached</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoint buffers written</td><td align="right" class='awrnc'>25,921</td><td align="right" class='awrnc'>41.98</td><td align="right" class='awrnc'>0.56</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoints</td><td align="right" class='awrc'>21,794</td><td align="right" class='awrc'>35.30</td><td align="right" class='awrc'>0.47</td></tr>
<tr><td scope="row" class='awrnc'>DBWR fusion writes</td><td align="right" class='awrnc'>127</td><td align="right" class='awrnc'>0.21</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR object drop buffers written</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR parallel query checkpoint buffers written</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR thread checkpoint buffers written</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR transaction table writes</td><td align="right" class='awrnc'>295</td><td align="right" class='awrnc'>0.48</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>DBWR undo block writes</td><td align="right" class='awrc'>31,865</td><td align="right" class='awrc'>51.61</td><td align="right" class='awrc'>0.69</td></tr>
<tr><td scope="row" class='awrnc'>DFO trees parallelized</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Effective IO time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>HSC Heap Segment Block Changes</td><td align="right" class='awrnc'>689,329</td><td align="right" class='awrnc'>1,116.44</td><td align="right" class='awrnc'>14.99</td></tr>
<tr><td scope="row" class='awrc'>Heap Segment Array Inserts</td><td align="right" class='awrc'>166</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Heap Segment Array Updates</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Heatmap Blklevel Flush Task Count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc req</td><td align="right" class='awrnc'>22,359</td><td align="right" class='awrnc'>36.21</td><td align="right" class='awrnc'>0.49</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc space (block)</td><td align="right" class='awrc'>8,079,671,296</td><td align="right" class='awrc'>13,085,823.00</td><td align="right" class='awrc'>175,694.68</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc time (ms)</td><td align="right" class='awrnc'>361,143,691</td><td align="right" class='awrnc'>584,907.76</td><td align="right" class='awrnc'>7,853.17</td></tr>
<tr><td scope="row" class='awrc'>KTFB apply req</td><td align="right" class='awrc'>44,123</td><td align="right" class='awrc'>71.46</td><td align="right" class='awrc'>0.96</td></tr>
<tr><td scope="row" class='awrnc'>KTFB apply time (ms)</td><td align="right" class='awrnc'>4,102,855</td><td align="right" class='awrnc'>6,644.98</td><td align="right" class='awrnc'>89.22</td></tr>
<tr><td scope="row" class='awrc'>KTFB commit req</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTFB commit time (ms)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KTFB free req</td><td align="right" class='awrc'>21,767</td><td align="right" class='awrc'>35.25</td><td align="right" class='awrc'>0.47</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free space (block)</td><td align="right" class='awrnc'>962,296</td><td align="right" class='awrnc'>1,558.53</td><td align="right" class='awrnc'>20.93</td></tr>
<tr><td scope="row" class='awrc'>KTFB free time (ms)</td><td align="right" class='awrc'>204,093,047</td><td align="right" class='awrc'>330,548.78</td><td align="right" class='awrc'>4,438.06</td></tr>
<tr><td scope="row" class='awrnc'>LOB table id lookup cache misses</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Number of read IOs issued</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX local messages recv'd</td><td align="right" class='awrnc'>84</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX local messages sent</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX remote messages recv'd</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX remote messages sent</td><td align="right" class='awrc'>78</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Parallel operations not downgraded</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Requests to/from client</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SMON posted for undo segment shrink</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>TBS Extension: tasks created</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>TBS Extension: tasks executed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>active txn count during cleanout</td><td align="right" class='awrnc'>239</td><td align="right" class='awrnc'>0.39</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>auto extends on undo tablespace</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>background checkpoints completed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>background checkpoints started</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>background timeouts</td><td align="right" class='awrnc'>5,477</td><td align="right" class='awrnc'>8.87</td><td align="right" class='awrnc'>0.12</td></tr>
<tr><td scope="row" class='awrc'>blocks cleaned out using minact</td><td align="right" class='awrc'>251,482</td><td align="right" class='awrc'>407.30</td><td align="right" class='awrc'>5.47</td></tr>
<tr><td scope="row" class='awrnc'>branch node splits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>buffer is not pinned count</td><td align="right" class='awrc'>10,862,997</td><td align="right" class='awrc'>17,593.69</td><td align="right" class='awrc'>236.22</td></tr>
<tr><td scope="row" class='awrnc'>buffer is pinned count</td><td align="right" class='awrnc'>5,258,977</td><td align="right" class='awrnc'>8,517.43</td><td align="right" class='awrnc'>114.36</td></tr>
<tr><td scope="row" class='awrc'>bytes received via SQL*Net from client</td><td align="right" class='awrc'>18,772</td><td align="right" class='awrc'>30.40</td><td align="right" class='awrc'>0.41</td></tr>
<tr><td scope="row" class='awrnc'>bytes sent via SQL*Net to client</td><td align="right" class='awrnc'>9,950</td><td align="right" class='awrnc'>16.12</td><td align="right" class='awrnc'>0.22</td></tr>
<tr><td scope="row" class='awrc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrc'>429,936</td><td align="right" class='awrc'>696.32</td><td align="right" class='awrc'>9.35</td></tr>
<tr><td scope="row" class='awrnc'>calls to kcmgas</td><td align="right" class='awrnc'>100,930</td><td align="right" class='awrnc'>163.47</td><td align="right" class='awrnc'>2.19</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgcs</td><td align="right" class='awrc'>120,647</td><td align="right" class='awrc'>195.40</td><td align="right" class='awrc'>2.62</td></tr>
<tr><td scope="row" class='awrnc'>cell physical IO interconnect bytes</td><td align="right" class='awrnc'>50,277,374,976</td><td align="right" class='awrnc'>81,429,157.92</td><td align="right" class='awrnc'>1,093,295.39</td></tr>
<tr><td scope="row" class='awrc'>change write time</td><td align="right" class='awrc'>2,015</td><td align="right" class='awrc'>3.26</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>cleanout - number of ktugct calls</td><td align="right" class='awrnc'>1,147</td><td align="right" class='awrnc'>1.86</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>cleanouts and rollbacks - consistent read gets</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>cleanouts only - consistent read gets</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>cluster key scan block gets</td><td align="right" class='awrc'>661</td><td align="right" class='awrc'>1.07</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>cluster key scans</td><td align="right" class='awrnc'>447</td><td align="right" class='awrnc'>0.72</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>commit batch/immediate performed</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit batch/immediate requested</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: block lost</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: buffer being written</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: callback failure</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: cannot pin</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanouts</td><td align="right" class='awrc'>689,523</td><td align="right" class='awrc'>1,116.75</td><td align="right" class='awrc'>14.99</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanouts successfully completed</td><td align="right" class='awrnc'>689,511</td><td align="right" class='awrnc'>1,116.73</td><td align="right" class='awrnc'>14.99</td></tr>
<tr><td scope="row" class='awrc'>commit immediate performed</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit immediate requested</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit txn count during cleanout</td><td align="right" class='awrc'>143</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>consistent changes</td><td align="right" class='awrnc'>40,500</td><td align="right" class='awrnc'>65.59</td><td align="right" class='awrnc'>0.88</td></tr>
<tr><td scope="row" class='awrc'>consistent gets</td><td align="right" class='awrc'>5,041,206</td><td align="right" class='awrc'>8,164.73</td><td align="right" class='awrc'>109.62</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets direct</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>consistent gets examination</td><td align="right" class='awrc'>655,616</td><td align="right" class='awrc'>1,061.83</td><td align="right" class='awrc'>14.26</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets examination (fastpath)</td><td align="right" class='awrnc'>655,293</td><td align="right" class='awrnc'>1,061.31</td><td align="right" class='awrnc'>14.25</td></tr>
<tr><td scope="row" class='awrc'>consistent gets from cache</td><td align="right" class='awrc'>5,041,206</td><td align="right" class='awrc'>8,164.73</td><td align="right" class='awrc'>109.62</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets pin</td><td align="right" class='awrnc'>4,385,590</td><td align="right" class='awrnc'>7,102.89</td><td align="right" class='awrnc'>95.37</td></tr>
<tr><td scope="row" class='awrc'>consistent gets pin (fastpath)</td><td align="right" class='awrc'>3,589,917</td><td align="right" class='awrc'>5,814.22</td><td align="right" class='awrc'>78.06</td></tr>
<tr><td scope="row" class='awrnc'>cursor authentications</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>cursor reload failures</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>1,801,188</td><td align="right" class='awrc'>2,917.20</td><td align="right" class='awrc'>39.17</td></tr>
<tr><td scope="row" class='awrnc'>db block gets</td><td align="right" class='awrnc'>2,193,399</td><td align="right" class='awrnc'>3,552.43</td><td align="right" class='awrnc'>47.70</td></tr>
<tr><td scope="row" class='awrc'>db block gets direct</td><td align="right" class='awrc'>166</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>db block gets from cache</td><td align="right" class='awrnc'>2,193,233</td><td align="right" class='awrnc'>3,552.16</td><td align="right" class='awrnc'>47.69</td></tr>
<tr><td scope="row" class='awrc'>db block gets from cache (fastpath)</td><td align="right" class='awrc'>1,363,515</td><td align="right" class='awrc'>2,208.35</td><td align="right" class='awrc'>29.65</td></tr>
<tr><td scope="row" class='awrnc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>253,754</td><td align="right" class='awrnc'>410.98</td><td align="right" class='awrnc'>5.52</td></tr>
<tr><td scope="row" class='awrc'>dirty buffers inspected</td><td align="right" class='awrc'>574,524</td><td align="right" class='awrc'>930.50</td><td align="right" class='awrc'>12.49</td></tr>
<tr><td scope="row" class='awrnc'>enqueue conversions</td><td align="right" class='awrnc'>511,811</td><td align="right" class='awrnc'>828.93</td><td align="right" class='awrnc'>11.13</td></tr>
<tr><td scope="row" class='awrc'>enqueue releases</td><td align="right" class='awrc'>1,486,140</td><td align="right" class='awrc'>2,406.95</td><td align="right" class='awrc'>32.32</td></tr>
<tr><td scope="row" class='awrnc'>enqueue requests</td><td align="right" class='awrnc'>1,486,263</td><td align="right" class='awrnc'>2,407.15</td><td align="right" class='awrnc'>32.32</td></tr>
<tr><td scope="row" class='awrc'>enqueue timeouts</td><td align="right" class='awrc'>174</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enqueue waits</td><td align="right" class='awrnc'>78,387</td><td align="right" class='awrnc'>126.96</td><td align="right" class='awrnc'>1.70</td></tr>
<tr><td scope="row" class='awrc'>exchange deadlocks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>331,888</td><td align="right" class='awrnc'>537.53</td><td align="right" class='awrnc'>7.22</td></tr>
<tr><td scope="row" class='awrc'>fastpath consistent get quota limit</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>file io service time</td><td align="right" class='awrnc'>159,774,448</td><td align="right" class='awrnc'>258,770.45</td><td align="right" class='awrnc'>3,474.34</td></tr>
<tr><td scope="row" class='awrc'>free buffer inspected</td><td align="right" class='awrc'>4,447,517</td><td align="right" class='awrc'>7,203.19</td><td align="right" class='awrc'>96.71</td></tr>
<tr><td scope="row" class='awrnc'>free buffer requested</td><td align="right" class='awrnc'>4,412,060</td><td align="right" class='awrnc'>7,145.77</td><td align="right" class='awrnc'>95.94</td></tr>
<tr><td scope="row" class='awrc'>gc blocks compressed</td><td align="right" class='awrc'>5,554</td><td align="right" class='awrc'>9.00</td><td align="right" class='awrc'>0.12</td></tr>
<tr><td scope="row" class='awrnc'>gc blocks lost</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cleanout applied</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cleanout saved</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks created</td><td align="right" class='awrc'>37,159</td><td align="right" class='awrc'>60.18</td><td align="right" class='awrc'>0.81</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks shrunk</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block build time</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block flush time</td><td align="right" class='awrnc'>119</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block receive time</td><td align="right" class='awrc'>6,158</td><td align="right" class='awrc'>9.97</td><td align="right" class='awrc'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks built</td><td align="right" class='awrnc'>1,527</td><td align="right" class='awrnc'>2.47</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks flushed</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks received</td><td align="right" class='awrnc'>35,036</td><td align="right" class='awrnc'>56.74</td><td align="right" class='awrnc'>0.76</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks served</td><td align="right" class='awrc'>1,546</td><td align="right" class='awrc'>2.50</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multiblock grant time</td><td align="right" class='awrnc'>146,386</td><td align="right" class='awrnc'>237.09</td><td align="right" class='awrnc'>3.18</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grants received</td><td align="right" class='awrc'>1,596,353</td><td align="right" class='awrc'>2,585.45</td><td align="right" class='awrc'>34.71</td></tr>
<tr><td scope="row" class='awrnc'>gc current block flush time</td><td align="right" class='awrnc'>138</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block pin time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block receive time</td><td align="right" class='awrnc'>10,399</td><td align="right" class='awrnc'>16.84</td><td align="right" class='awrnc'>0.23</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks flushed</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks pinned</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks received</td><td align="right" class='awrc'>92,749</td><td align="right" class='awrc'>150.22</td><td align="right" class='awrc'>2.02</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks served</td><td align="right" class='awrnc'>16,568</td><td align="right" class='awrnc'>26.83</td><td align="right" class='awrnc'>0.36</td></tr>
<tr><td scope="row" class='awrc'>gc force cr read cr</td><td align="right" class='awrc'>73</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc force cr read current</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes saved</td><td align="right" class='awrc'>27,546</td><td align="right" class='awrc'>44.61</td><td align="right" class='awrc'>0.60</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes sent</td><td align="right" class='awrnc'>117,367</td><td align="right" class='awrnc'>190.09</td><td align="right" class='awrnc'>2.55</td></tr>
<tr><td scope="row" class='awrc'>gc local grants</td><td align="right" class='awrc'>2,532,742</td><td align="right" class='awrc'>4,102.02</td><td align="right" class='awrc'>55.08</td></tr>
<tr><td scope="row" class='awrnc'>gc merge pi bg</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc merge pi fg</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc no change made</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc read time waited</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc read waits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass grants</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass waits</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc remote grants</td><td align="right" class='awrc'>1,780,249</td><td align="right" class='awrc'>2,883.29</td><td align="right" class='awrc'>38.71</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages received</td><td align="right" class='awrnc'>490,398</td><td align="right" class='awrnc'>794.25</td><td align="right" class='awrnc'>10.66</td></tr>
<tr><td scope="row" class='awrc'>gc status messages sent</td><td align="right" class='awrc'>217,203</td><td align="right" class='awrc'>351.78</td><td align="right" class='awrc'>4.72</td></tr>
<tr><td scope="row" class='awrnc'>gcs affinity lock failures</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity lock grants</td><td align="right" class='awrc'>1,633,621</td><td align="right" class='awrc'>2,645.81</td><td align="right" class='awrc'>35.52</td></tr>
<tr><td scope="row" class='awrnc'>gcs anti-locks created</td><td align="right" class='awrnc'>37,179</td><td align="right" class='awrnc'>60.22</td><td align="right" class='awrnc'>0.81</td></tr>
<tr><td scope="row" class='awrc'>gcs data block access records</td><td align="right" class='awrc'>4,390,996</td><td align="right" class='awrc'>7,111.65</td><td align="right" class='awrc'>95.48</td></tr>
<tr><td scope="row" class='awrnc'>gcs messages sent</td><td align="right" class='awrnc'>4,807,581</td><td align="right" class='awrnc'>7,786.35</td><td align="right" class='awrnc'>104.54</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly lock failures</td><td align="right" class='awrc'>69,279</td><td align="right" class='awrc'>112.20</td><td align="right" class='awrc'>1.51</td></tr>
<tr><td scope="row" class='awrnc'>gcs read-mostly lock grants</td><td align="right" class='awrnc'>391,614</td><td align="right" class='awrnc'>634.26</td><td align="right" class='awrnc'>8.52</td></tr>
<tr><td scope="row" class='awrc'>gcs stats management (SCM) process posts</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges messages sent</td><td align="right" class='awrnc'>116,005</td><td align="right" class='awrnc'>187.88</td><td align="right" class='awrnc'>2.52</td></tr>
<tr><td scope="row" class='awrc'>global enqueue get time</td><td align="right" class='awrc'>59,732</td><td align="right" class='awrc'>96.74</td><td align="right" class='awrc'>1.30</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue gets async</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global enqueue gets sync</td><td align="right" class='awrc'>7,138,352</td><td align="right" class='awrc'>11,561.26</td><td align="right" class='awrc'>155.23</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue releases</td><td align="right" class='awrnc'>6,626,617</td><td align="right" class='awrnc'>10,732.46</td><td align="right" class='awrnc'>144.10</td></tr>
<tr><td scope="row" class='awrc'>global undo segment hints helped</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global undo segment hints were stale</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>heap block compress</td><td align="right" class='awrc'>3,154</td><td align="right" class='awrc'>5.11</td><td align="right" class='awrc'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>hot buffers moved to head of LRU</td><td align="right" class='awrnc'>155,295</td><td align="right" class='awrnc'>251.52</td><td align="right" class='awrnc'>3.38</td></tr>
<tr><td scope="row" class='awrc'>immediate (CR) block cleanout applications</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>280</td><td align="right" class='awrnc'>0.45</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>index crx upgrade (positioned)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>index fast full scans (full)</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>index fetch by key</td><td align="right" class='awrc'>2,622</td><td align="right" class='awrc'>4.25</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>index range scans</td><td align="right" class='awrnc'>307,794</td><td align="right" class='awrnc'>498.50</td><td align="right" class='awrnc'>6.69</td></tr>
<tr><td scope="row" class='awrc'>index reclamation/extension switch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>leaf node 90-10 splits</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>leaf node splits</td><td align="right" class='awrc'>94</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>lob reads</td><td align="right" class='awrnc'>277</td><td align="right" class='awrnc'>0.45</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>lob writes</td><td align="right" class='awrc'>3,216</td><td align="right" class='awrc'>5.21</td><td align="right" class='awrc'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>lob writes unaligned</td><td align="right" class='awrnc'>3,216</td><td align="right" class='awrnc'>5.21</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>logical read bytes from cache</td><td align="right" class='awrc'>59,264,524,288</td><td align="right" class='awrc'>95,984,730.89</td><td align="right" class='awrc'>1,288,723.43</td></tr>
<tr><td scope="row" class='awrnc'>logons cumulative</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>max cf enq hold time</td><td align="right" class='awrc'>1,610</td><td align="right" class='awrc'>2.61</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>messages received</td><td align="right" class='awrnc'>128,338</td><td align="right" class='awrnc'>207.86</td><td align="right" class='awrnc'>2.79</td></tr>
<tr><td scope="row" class='awrc'>messages sent</td><td align="right" class='awrc'>128,337</td><td align="right" class='awrc'>207.85</td><td align="right" class='awrc'>2.79</td></tr>
<tr><td scope="row" class='awrnc'>min active SCN optimization applied on CR</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>no buffer to keep pinned count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>no work - consistent read gets</td><td align="right" class='awrnc'>4,280,638</td><td align="right" class='awrnc'>6,932.91</td><td align="right" class='awrnc'>93.08</td></tr>
<tr><td scope="row" class='awrc'>non-idle wait count</td><td align="right" class='awrc'>3,635,653</td><td align="right" class='awrc'>5,888.30</td><td align="right" class='awrc'>79.06</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>378,086</td><td align="right" class='awrnc'>612.35</td><td align="right" class='awrnc'>8.22</td></tr>
<tr><td scope="row" class='awrc'>parse count (describe)</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse count (failures)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>parse count (hard)</td><td align="right" class='awrc'>168</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse count (total)</td><td align="right" class='awrnc'>23,955</td><td align="right" class='awrnc'>38.80</td><td align="right" class='awrnc'>0.52</td></tr>
<tr><td scope="row" class='awrc'>parse time cpu</td><td align="right" class='awrc'>81</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>197</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical read IO requests</td><td align="right" class='awrc'>4,253,575</td><td align="right" class='awrc'>6,889.08</td><td align="right" class='awrc'>92.50</td></tr>
<tr><td scope="row" class='awrnc'>physical read bytes</td><td align="right" class='awrnc'>34,846,908,416</td><td align="right" class='awrnc'>56,437,998.40</td><td align="right" class='awrnc'>757,755.64</td></tr>
<tr><td scope="row" class='awrc'>physical read total IO requests</td><td align="right" class='awrc'>4,258,694</td><td align="right" class='awrc'>6,897.37</td><td align="right" class='awrc'>92.61</td></tr>
<tr><td scope="row" class='awrnc'>physical read total bytes</td><td align="right" class='awrnc'>35,600,901,120</td><td align="right" class='awrnc'>57,659,163.80</td><td align="right" class='awrnc'>774,151.41</td></tr>
<tr><td scope="row" class='awrc'>physical read total multi block requests</td><td align="right" class='awrc'>669</td><td align="right" class='awrc'>1.08</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical reads</td><td align="right" class='awrnc'>4,253,774</td><td align="right" class='awrnc'>6,889.41</td><td align="right" class='awrnc'>92.50</td></tr>
<tr><td scope="row" class='awrc'>physical reads cache</td><td align="right" class='awrc'>4,253,774</td><td align="right" class='awrc'>6,889.41</td><td align="right" class='awrc'>92.50</td></tr>
<tr><td scope="row" class='awrnc'>physical reads cache prefetch</td><td align="right" class='awrnc'>2,864,582</td><td align="right" class='awrnc'>4,639.47</td><td align="right" class='awrnc'>62.29</td></tr>
<tr><td scope="row" class='awrc'>physical reads direct</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical reads direct (lob)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical reads direct temporary tablespace</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical reads prefetch warmup</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical write IO requests</td><td align="right" class='awrc'>673,985</td><td align="right" class='awrc'>1,091.59</td><td align="right" class='awrc'>14.66</td></tr>
<tr><td scope="row" class='awrnc'>physical write bytes</td><td align="right" class='awrnc'>5,811,372,032</td><td align="right" class='awrnc'>9,412,089.06</td><td align="right" class='awrnc'>126,369.89</td></tr>
<tr><td scope="row" class='awrc'>physical write total IO requests</td><td align="right" class='awrc'>761,860</td><td align="right" class='awrc'>1,233.91</td><td align="right" class='awrc'>16.57</td></tr>
<tr><td scope="row" class='awrnc'>physical write total bytes</td><td align="right" class='awrnc'>7,331,900,416</td><td align="right" class='awrnc'>11,874,734.45</td><td align="right" class='awrnc'>159,434.20</td></tr>
<tr><td scope="row" class='awrc'>physical write total multi block requests</td><td align="right" class='awrc'>1,875</td><td align="right" class='awrc'>3.04</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>709,396</td><td align="right" class='awrnc'>1,148.94</td><td align="right" class='awrnc'>15.43</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct</td><td align="right" class='awrc'>230</td><td align="right" class='awrc'>0.37</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct (lob)</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct temporary tablespace</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical writes from cache</td><td align="right" class='awrnc'>709,166</td><td align="right" class='awrnc'>1,148.56</td><td align="right" class='awrnc'>15.42</td></tr>
<tr><td scope="row" class='awrc'>physical writes non checkpoint</td><td align="right" class='awrc'>698,794</td><td align="right" class='awrc'>1,131.77</td><td align="right" class='awrc'>15.20</td></tr>
<tr><td scope="row" class='awrnc'>pinned buffers inspected</td><td align="right" class='awrnc'>2,099</td><td align="right" class='awrnc'>3.40</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>prefetch warmup blocks aged out before use</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>prefetched blocks aged out before use</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>process last non-idle time</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>recursive calls</td><td align="right" class='awrnc'>638,722</td><td align="right" class='awrnc'>1,034.47</td><td align="right" class='awrnc'>13.89</td></tr>
<tr><td scope="row" class='awrc'>recursive cpu usage</td><td align="right" class='awrc'>116,565</td><td align="right" class='awrc'>188.79</td><td align="right" class='awrc'>2.53</td></tr>
<tr><td scope="row" class='awrnc'>redo KB read</td><td align="right" class='awrnc'>401,761</td><td align="right" class='awrnc'>650.69</td><td align="right" class='awrnc'>8.74</td></tr>
<tr><td scope="row" class='awrc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrc'>433,740</td><td align="right" class='awrc'>702.48</td><td align="right" class='awrc'>9.43</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written</td><td align="right" class='awrnc'>1,257,239</td><td align="right" class='awrnc'>2,036.22</td><td align="right" class='awrnc'>27.34</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written (group 0)</td><td align="right" class='awrc'>666,032</td><td align="right" class='awrc'>1,078.70</td><td align="right" class='awrc'>14.48</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written (group 1)</td><td align="right" class='awrnc'>591,207</td><td align="right" class='awrnc'>957.52</td><td align="right" class='awrnc'>12.86</td></tr>
<tr><td scope="row" class='awrc'>redo buffer allocation retries</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo entries</td><td align="right" class='awrnc'>1,051,993</td><td align="right" class='awrnc'>1,703.81</td><td align="right" class='awrnc'>22.88</td></tr>
<tr><td scope="row" class='awrc'>redo log space requests</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo ordering marks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>612,583,116</td><td align="right" class='awrc'>992,138.66</td><td align="right" class='awrc'>13,320.79</td></tr>
<tr><td scope="row" class='awrnc'>redo size for direct writes</td><td align="right" class='awrnc'>180</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo subscn max counts</td><td align="right" class='awrc'>121</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch long waits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time (usec)</td><td align="right" class='awrnc'>220,081</td><td align="right" class='awrnc'>356.44</td><td align="right" class='awrnc'>4.79</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead (usec)</td><td align="right" class='awrc'>31,072</td><td align="right" class='awrc'>50.32</td><td align="right" class='awrc'>0.68</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead count (  8ms)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead count ( 32ms)</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead count (inf)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch writes</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo wastage</td><td align="right" class='awrc'>10,522,248</td><td align="right" class='awrc'>17,041.82</td><td align="right" class='awrc'>228.81</td></tr>
<tr><td scope="row" class='awrnc'>redo write active strands</td><td align="right" class='awrnc'>43,120</td><td align="right" class='awrnc'>69.84</td><td align="right" class='awrnc'>0.94</td></tr>
<tr><td scope="row" class='awrc'>redo write broadcast ack count</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write broadcast ack time</td><td align="right" class='awrnc'>365,556</td><td align="right" class='awrnc'>592.05</td><td align="right" class='awrnc'>7.95</td></tr>
<tr><td scope="row" class='awrc'>redo write finish time</td><td align="right" class='awrc'>1,041,064,826</td><td align="right" class='awrc'>1,686,106.96</td><td align="right" class='awrc'>22,638.24</td></tr>
<tr><td scope="row" class='awrnc'>redo write gather time</td><td align="right" class='awrnc'>56,536,891</td><td align="right" class='awrnc'>91,567.06</td><td align="right" class='awrnc'>1,229.41</td></tr>
<tr><td scope="row" class='awrc'>redo write info find</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write schedule time</td><td align="right" class='awrnc'>57,066,606</td><td align="right" class='awrnc'>92,424.99</td><td align="right" class='awrnc'>1,240.93</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (   4KB)</td><td align="right" class='awrc'>5,396</td><td align="right" class='awrc'>8.74</td><td align="right" class='awrc'>0.12</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (   8KB)</td><td align="right" class='awrnc'>5,773</td><td align="right" class='awrnc'>9.35</td><td align="right" class='awrnc'>0.13</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (  16KB)</td><td align="right" class='awrc'>6,854</td><td align="right" class='awrc'>11.10</td><td align="right" class='awrc'>0.15</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (  32KB)</td><td align="right" class='awrnc'>6,522</td><td align="right" class='awrnc'>10.56</td><td align="right" class='awrnc'>0.14</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 128KB)</td><td align="right" class='awrc'>6,312</td><td align="right" class='awrc'>10.22</td><td align="right" class='awrc'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 256KB)</td><td align="right" class='awrnc'>118</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 512KB)</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (1024KB)</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (inf)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write time</td><td align="right" class='awrnc'>104,275</td><td align="right" class='awrnc'>168.88</td><td align="right" class='awrnc'>2.27</td></tr>
<tr><td scope="row" class='awrc'>redo write time (usec)</td><td align="right" class='awrc'>1,042,755,998</td><td align="right" class='awrc'>1,688,845.98</td><td align="right" class='awrc'>22,675.02</td></tr>
<tr><td scope="row" class='awrnc'>redo write total time</td><td align="right" class='awrnc'>1,097,318,287</td><td align="right" class='awrnc'>1,777,214.98</td><td align="right" class='awrnc'>23,861.49</td></tr>
<tr><td scope="row" class='awrc'>redo write worker delay (usec)</td><td align="right" class='awrc'>54,774,305</td><td align="right" class='awrc'>88,712.38</td><td align="right" class='awrc'>1,191.08</td></tr>
<tr><td scope="row" class='awrnc'>redo write worker delay count</td><td align="right" class='awrnc'>30,983</td><td align="right" class='awrnc'>50.18</td><td align="right" class='awrnc'>0.67</td></tr>
<tr><td scope="row" class='awrc'>redo writes</td><td align="right" class='awrc'>30,983</td><td align="right" class='awrc'>50.18</td><td align="right" class='awrc'>0.67</td></tr>
<tr><td scope="row" class='awrnc'>redo writes (group 0)</td><td align="right" class='awrnc'>15,924</td><td align="right" class='awrnc'>25.79</td><td align="right" class='awrnc'>0.35</td></tr>
<tr><td scope="row" class='awrc'>redo writes (group 1)</td><td align="right" class='awrc'>15,059</td><td align="right" class='awrc'>24.39</td><td align="right" class='awrc'>0.33</td></tr>
<tr><td scope="row" class='awrnc'>redo writes adaptive all</td><td align="right" class='awrnc'>30,983</td><td align="right" class='awrnc'>50.18</td><td align="right" class='awrnc'>0.67</td></tr>
<tr><td scope="row" class='awrc'>redo writes adaptive worker</td><td align="right" class='awrc'>30,983</td><td align="right" class='awrc'>50.18</td><td align="right" class='awrc'>0.67</td></tr>
<tr><td scope="row" class='awrnc'>remote Oradebug requests</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>rollback changes - undo records applied</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rollbacks only - consistent read gets</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>root node splits</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rows fetched via callback</td><td align="right" class='awrnc'>1,156</td><td align="right" class='awrnc'>1.87</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>saved cleanout failures: callback failure</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>saved cleanouts</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>saved cleanouts successfully completed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile allocation bytes</td><td align="right" class='awrnc'>524,288</td><td align="right" class='awrnc'>849.14</td><td align="right" class='awrnc'>11.40</td></tr>
<tr><td scope="row" class='awrc'>securefile allocation chunks</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile bytes non-transformed</td><td align="right" class='awrnc'>442,217</td><td align="right" class='awrnc'>716.21</td><td align="right" class='awrnc'>9.62</td></tr>
<tr><td scope="row" class='awrc'>securefile direct read bytes</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct read ops</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile direct write bytes</td><td align="right" class='awrc'>524,288</td><td align="right" class='awrc'>849.14</td><td align="right" class='awrc'>11.40</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct write ops</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile number of non-transformed flushes</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment cfs allocations</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment chunks allocation from dispenser</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser allocations</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment dispenser load empty</td><td align="right" class='awrc'>79</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser load tasks</td><td align="right" class='awrnc'>80</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc bytes</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc ops</td><td align="right" class='awrnc'>187</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc tasks</td><td align="right" class='awrc'>184</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc time (ms)</td><td align="right" class='awrnc'>324</td><td align="right" class='awrnc'>0.52</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc ufs2cfs bytes</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment total chunk allocation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache hits</td><td align="right" class='awrc'>377,216</td><td align="right" class='awrc'>610.94</td><td align="right" class='awrc'>8.20</td></tr>
<tr><td scope="row" class='awrnc'>session logical reads</td><td align="right" class='awrnc'>7,234,630</td><td align="right" class='awrnc'>11,717.20</td><td align="right" class='awrnc'>157.32</td></tr>
<tr><td scope="row" class='awrc'>shared hash latch upgrades - no wait</td><td align="right" class='awrc'>1,377,462</td><td align="right" class='awrc'>2,230.94</td><td align="right" class='awrc'>29.95</td></tr>
<tr><td scope="row" class='awrnc'>shared hash latch upgrades - wait</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>shared io pool buffer get success</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>sorts (memory)</td><td align="right" class='awrnc'>655</td><td align="right" class='awrnc'>1.06</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>sorts (rows)</td><td align="right" class='awrc'>73,167</td><td align="right" class='awrc'>118.50</td><td align="right" class='awrc'>1.59</td></tr>
<tr><td scope="row" class='awrnc'>sql area evicted</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>sql area purged</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>summed dirty queue length</td><td align="right" class='awrnc'>3,521,264</td><td align="right" class='awrnc'>5,703.03</td><td align="right" class='awrnc'>76.57</td></tr>
<tr><td scope="row" class='awrc'>switch current caused by our pin</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>switch current to new buffer</td><td align="right" class='awrnc'>29</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>table fetch by rowid</td><td align="right" class='awrc'>7,101,047</td><td align="right" class='awrc'>11,500.84</td><td align="right" class='awrc'>154.41</td></tr>
<tr><td scope="row" class='awrnc'>table fetch continued row</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>table scan blocks gotten</td><td align="right" class='awrc'>51,071</td><td align="right" class='awrc'>82.71</td><td align="right" class='awrc'>1.11</td></tr>
<tr><td scope="row" class='awrnc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrnc'>5,276,905</td><td align="right" class='awrnc'>8,546.47</td><td align="right" class='awrnc'>114.75</td></tr>
<tr><td scope="row" class='awrc'>table scan rows gotten</td><td align="right" class='awrc'>5,276,905</td><td align="right" class='awrc'>8,546.47</td><td align="right" class='awrc'>114.75</td></tr>
<tr><td scope="row" class='awrnc'>table scans (cache partitions)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>table scans (direct read)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>table scans (short tables)</td><td align="right" class='awrnc'>21,986</td><td align="right" class='awrnc'>35.61</td><td align="right" class='awrnc'>0.48</td></tr>
<tr><td scope="row" class='awrc'>temp space allocated (bytes)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>total cf enq hold time</td><td align="right" class='awrnc'>6,569</td><td align="right" class='awrnc'>10.64</td><td align="right" class='awrnc'>0.14</td></tr>
<tr><td scope="row" class='awrc'>total number of cf enq holders</td><td align="right" class='awrc'>330</td><td align="right" class='awrc'>0.53</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>total number of times SMON posted</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction lock background gets</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction lock foreground requests</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction rollbacks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction tables consistent read rollbacks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction tables consistent reads - undo records applied</td><td align="right" class='awrc'>35,549</td><td align="right" class='awrc'>57.58</td><td align="right" class='awrc'>0.77</td></tr>
<tr><td scope="row" class='awrnc'>undo change vector size</td><td align="right" class='awrnc'>251,244,632</td><td align="right" class='awrnc'>406,915.41</td><td align="right" class='awrnc'>5,463.38</td></tr>
<tr><td scope="row" class='awrc'>user calls</td><td align="right" class='awrc'>166</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>user commits</td><td align="right" class='awrnc'>45,987</td><td align="right" class='awrnc'>74.48</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>user logons cumulative</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>user logouts cumulative</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>workarea executions - optimal</td><td align="right" class='awrc'>663</td><td align="right" class='awrc'>1.07</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>write clones created in background</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>write clones created in foreground</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1300"></a>
<h3 class="awr">Instance Activity Stats - Absolute Values</h3>
<ul>
<li class="awr"> Statistics with absolute values (should not be diffed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays absolute values of instance-related features. For each instance, activity begin value and end value are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Begin Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>logons current</td><td align="right" class='awrc'>108</td><td align="right" class='awrc'>90</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors current</td><td align="right" class='awrnc'>227</td><td align="right" class='awrnc'>130</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache count</td><td align="right" class='awrc'>11,166</td><td align="right" class='awrc'>11,079</td></tr>
<tr><td scope="row" class='awrnc'>session pga memory</td><td align="right" class='awrnc'>734,783,448</td><td align="right" class='awrnc'>593,884,424</td></tr>
<tr><td scope="row" class='awrc'>session pga memory max</td><td align="right" class='awrc'>921,683,128</td><td align="right" class='awrc'>781,308,392</td></tr>
<tr><td scope="row" class='awrnc'>session uga memory</td><td align="right" class='awrnc'>621,223,464</td><td align="right" class='awrnc'>570,037,760</td></tr>
<tr><td scope="row" class='awrc'>session uga memory max</td><td align="right" class='awrc'>6,171,765,928</td><td align="right" class='awrc'>6,260,718,704</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1400"></a>
<h3 class="awr">Instance Activity Stats - Thread Activity</h3>
<ul>
<li class="awr"> Statistics identified by '(derived)' come from sources other than SYSSTAT</li>
</ul>
<table border="0" class="tdiff" summary="This table displays thread activity stats in the instance. For each activity , total number of activity and activity per hour are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Hour</th></tr>
<tr><td scope="row" class='awrc'>log switches (derived)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="24"></a>
<h2 class="awr">
IO Stats
</h2>
<ul>
<li class="awr"><a class="awr" href="#8760">IOStat by Function summary</a></li>
<li class="awr"><a class="awr" href="#8770">IOStat by Filetype summary</a></li>
<li class="awr"><a class="awr" href="#8780">IOStat by Function/Filetype summary</a></li>
<li class="awr"><a class="awr" href="#1700">Tablespace IO Stats</a></li>
<li class="awr"><a class="awr" href="#1800">File IO Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8760"></a>
<h3 class="awr">IOStat by Function summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the IO Statistics for different functions. IO stats includes amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td scope="row" class='awrc'>Buffer Cache Reads</td><td align="right" class='awrc'>32.2G</td><td align="right" class='awrc'>6842.84</td><td align="right" class='awrc'>53.465M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1.4M</td><td align="right" class='awrc'>5.91ms</td></tr>
<tr><td scope="row" class='awrnc'>DBWR</td><td align="right" class='awrnc'>4M</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>.006M</td><td align="right" class='awrnc'>5.4G</td><td align="right" class='awrnc'>1083.27</td><td align="right" class='awrnc'>8.887M</td><td align="right" class='awrnc'>246</td><td align="right" class='awrnc'>253.59us</td></tr>
<tr><td scope="row" class='awrc'>LGWR</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1.2G</td><td align="right" class='awrc'>139.43</td><td align="right" class='awrc'>1.976M</td><td align="right" class='awrc'>30.9K</td><td align="right" class='awrc'>31.65ms</td></tr>
<tr><td scope="row" class='awrnc'>Others</td><td align="right" class='awrnc'>715M</td><td align="right" class='awrnc'>7.86</td><td align="right" class='awrnc'>1.158M</td><td align="right" class='awrnc'>222M</td><td align="right" class='awrnc'>2.43</td><td align="right" class='awrnc'>.36M</td><td align="right" class='awrnc'>3934</td><td align="right" class='awrnc'>3.18ms</td></tr>
<tr><td scope="row" class='awrc'>Direct Writes</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>750.00us</td></tr>
<tr><td scope="row" class='awrc'>TOTAL:</td><td align="right" class='awrc'>32.9G</td><td align="right" class='awrc'>6851.10</td><td align="right" class='awrc'>54.629M</td><td align="right" class='awrc'>6.8G</td><td align="right" class='awrc'>1225.16</td><td align="right" class='awrc'>11.222M</td><td align="right" class='awrc'>1.4M</td><td align="right" class='awrc'>6.46ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8770"></a>
<h3 class="awr">IOStat by Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Small Read and Large Read are average service times </li>
<li class="awr"> Ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IO Statistics for different file types, such as data files, control files, log files and temp files. IO Statistics include amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Small Read</th><th class="awrbg" scope="col">Large Read</th></tr>
<tr><td scope="row" class='awrc'>Data File</td><td align="right" class='awrc'>32.2G</td><td align="right" class='awrc'>6843.64</td><td align="right" class='awrc'>53.468M</td><td align="right" class='awrc'>5.4G</td><td align="right" class='awrc'>1083.41</td><td align="right" class='awrc'>8.887M</td><td align="right" class='awrc'>1.54ms</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Log File</td><td align="right" class='awrnc'>652M</td><td align="right" class='awrnc'>1.31</td><td align="right" class='awrnc'>1.056M</td><td align="right" class='awrnc'>1.2G</td><td align="right" class='awrnc'>139.40</td><td align="right" class='awrnc'>1.978M</td><td align="right" class='awrnc'>408.45us</td><td align="right" class='awrnc'>1351.66ms</td></tr>
<tr><td scope="row" class='awrc'>Control File</td><td align="right" class='awrc'>66M</td><td align="right" class='awrc'>6.81</td><td align="right" class='awrc'>.107M</td><td align="right" class='awrc'>14M</td><td align="right" class='awrc'>1.44</td><td align="right" class='awrc'>.023M</td><td align="right" class='awrc'>62.56us</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2M</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>.003M</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Temp File</td><td align="right" class='awrc'>1M</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>.002M</td><td align="right" class='awrc'>1M</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>.002M</td><td align="right" class='awrc'>.00ns</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TOTAL:</td><td align="right" class='awrnc'>32.9G</td><td align="right" class='awrnc'>6851.84</td><td align="right" class='awrnc'>54.632M</td><td align="right" class='awrnc'>6.6G</td><td align="right" class='awrnc'>1224.73</td><td align="right" class='awrnc'>10.892M</td><td align="right" class='awrnc'>1.53ms</td><td align="right" class='awrnc'>1351.66ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8780"></a>
<h3 class="awr">IOStat by Function/Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Ordered by (Data Read + Write) desc for each function</li>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function/Filetype summary. . 'Data' columns suffixed with M,G,T,P are in multiples of 1024 other columns suffixed with K,M,G,T,P are in multiples of 1000. Ordered by (Data Read + Write) desc for each function"><tr><th class="awrbg" scope="col">Function/File Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs	 per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time	</th></tr>
<tr><td scope="row" class='awrc'>
Buffer Cache Reads
</td><td align="right" class='awrc'>32.2G</td><td align="right" class='awrc'>6842.15</td><td align="right" class='awrc'>53.46M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1.1M</td><td align="right" class='awrc'>4.63ms</td></tr>
<tr><td scope="row" class='awrnc'>
 Buffer Cache Reads (Data File)
</td><td align="right" class='awrnc'>32.2G</td><td align="right" class='awrnc'>6842.07</td><td align="right" class='awrnc'>53.458M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1.1M</td><td align="right" class='awrnc'>4.63ms</td></tr>
<tr><td scope="row" class='awrc'>
 Buffer Cache Reads (Temp File)
</td><td align="right" class='awrc'>1M</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>.002M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>50</td><td align="right" class='awrc'>240.00us</td></tr>
<tr><td scope="row" class='awrnc'>
DBWR
</td><td align="right" class='awrnc'>4M</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>.006M</td><td align="right" class='awrnc'>5.4G</td><td align="right" class='awrnc'>1083.27</td><td align="right" class='awrnc'>8.887M</td><td align="right" class='awrnc'>246</td><td align="right" class='awrnc'>253.59us</td></tr>
<tr><td scope="row" class='awrc'>
 DBWR (Data File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>5.4G</td><td align="right" class='awrc'>1083.23</td><td align="right" class='awrc'>8.887M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 DBWR (Control File)
</td><td align="right" class='awrnc'>4M</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>.006M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>246</td><td align="right" class='awrnc'>253.59us</td></tr>
<tr><td scope="row" class='awrc'>
 DBWR (Temp File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 LGWR (Log File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1.2G</td><td align="right" class='awrnc'>139.42</td><td align="right" class='awrnc'>1.976M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
LGWR
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1.2G</td><td align="right" class='awrc'>139.42</td><td align="right" class='awrc'>1.976M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
Others
</td><td align="right" class='awrnc'>716M</td><td align="right" class='awrnc'>7.86</td><td align="right" class='awrnc'>1.16M</td><td align="right" class='awrnc'>220M</td><td align="right" class='awrnc'>2.03</td><td align="right" class='awrnc'>.356M</td><td align="right" class='awrnc'>3366</td><td align="right" class='awrnc'>777.20us</td></tr>
<tr><td scope="row" class='awrc'>
 Others (Log File)
</td><td align="right" class='awrc'>653M</td><td align="right" class='awrc'>1.31</td><td align="right" class='awrc'>1.058M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>132</td><td align="right" class='awrc'>848.48us</td></tr>
<tr><td scope="row" class='awrnc'>
 Others (Data File)
</td><td align="right" class='awrnc'>1M</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>.002M</td><td align="right" class='awrnc'>206M</td><td align="right" class='awrnc'>0.54</td><td align="right" class='awrnc'>.334M</td><td align="right" class='awrnc'>164</td><td align="right" class='awrnc'>7.34ms</td></tr>
<tr><td scope="row" class='awrc'>
 Others (Control File)
</td><td align="right" class='awrc'>62M</td><td align="right" class='awrc'>6.41</td><td align="right" class='awrc'>.1M</td><td align="right" class='awrc'>14M</td><td align="right" class='awrc'>1.44</td><td align="right" class='awrc'>.023M</td><td align="right" class='awrc'>3070</td><td align="right" class='awrc'>423.64us</td></tr>
<tr><td scope="row" class='awrnc'>
 Others (Temp File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 Direct Writes (Data File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
Direct Writes
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 Streams AQ (Data File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>750.00us</td></tr>
<tr><td scope="row" class='awrnc'>
Streams AQ
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>750.00us</td></tr>
<tr><td scope="row" class='awrc'>
TOTAL:
</td><td align="right" class='awrc'>32.9G</td><td align="right" class='awrc'>6850.42</td><td align="right" class='awrc'>54.626M</td><td align="right" class='awrc'>6.8G</td><td align="right" class='awrc'>1224.75</td><td align="right" class='awrc'>11.219M</td><td align="right" class='awrc'>1.1M</td><td align="right" class='awrc'>4.62ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1700"></a>
<h3 class="awr">Tablespace IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1800"></a>
<h3 class="awr">File IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="25"></a>
<h2 class="awr">
Buffer Pool Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1900">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#1910">Checkpoint Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1900"></a>
<h3 class="awr">Buffer Pool Statistics</h3>
<ul>
<li class="awr"> Standard block size Pools  D: default,  K: keep,  R: recycle </li>
<li class="awr"> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer pool statistics for different types of buffers, such as default, keep, and recycle. Statistics include number of buffers, % Pool hit, buffer gets, physical reads, physical writes, free buffer wait, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Number of Buffers</th><th class="awrbg" scope="col">Pool Hit%</th><th class="awrbg" scope="col">Buffer Gets</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Free Buff Wait</th><th class="awrbg" scope="col">Writ Comp Wait</th><th class="awrbg" scope="col">Buffer Busy Waits</th></tr>
<tr><td scope="row" class='awrc'>D</td><td align="right" class='awrc'>931,982</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>7,240,900</td><td align="right" class='awrc'>4,256,281</td><td align="right" class='awrc'>709,166</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>36,004</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1910"></a>
<h3 class="awr">Checkpoint Activity</h3>
<ul>
<li class="awr">Total Physical Writes:			    709,396</li>
</ul>
<table border="0" class="tdiff" summary="This table displays checkpoint activity statistics. Statistics include MTTR writes, log size writes, autotune checkpoint writes, etc."><tr><th class="awrbg" scope="col">MTTR Writes</th><th class="awrbg" scope="col">Log Size Writes</th><th class="awrbg" scope="col">Log Ckpt Writes</th><th class="awrbg" scope="col">Other Settings Writes</th><th class="awrbg" scope="col">Autotune Ckpt Writes</th><th class="awrbg" scope="col">Thread Ckpt Writes</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>25,921</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="26"></a>
<h2 class="awr">
Advisory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#2000">Instance Recovery Stats</a></li>
<li class="awr"><a class="awr" href="#2010">MTTR Advisory</a></li>
<li class="awr"><a class="awr" href="#2100">Buffer Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#2400">PGA Aggr Summary</a></li>
<li class="awr"><a class="awr" href="#2600">PGA Aggr Target Stats</a></li>
<li class="awr"><a class="awr" href="#2700">PGA Aggr Target Histogram</a></li>
<li class="awr"><a class="awr" href="#2800">PGA Memory Advisory</a></li>
<li class="awr"><a class="awr" href="#5500">Shared Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#6900">SGA Target Advisory</a></li>
<li class="awr"><a class="awr" href="#7100">Streams Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#5700">Java Pool Advisory</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2000"></a>
<h3 class="awr">Instance Recovery Stats</h3>
<ul>
<li class="awr"> B: Begin Snapshot,  E: End Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="This table displays instance recovery statistics at begin and end snapshot. It displays target MTTR, estimated MTTR, recovery estimated IO per second, redo blocks, target redo blocks, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Targt MTTR  (s) </th><th class="awrbg" scope="col">Estd MTTR (s)</th><th class="awrbg" scope="col">Recovery Estd IOs</th><th class="awrbg" scope="col">Actual  RedoBlks</th><th class="awrbg" scope="col">Target	RedoBlks</th><th class="awrbg" scope="col">Log Sz  RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Timeout RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Interval RedoBlks</th><th class="awrbg" scope="col">Opt Log Sz(M)</th><th class="awrbg" scope="col">Estd RAC Avail Time</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>57884</td><td align="right" class='awrc'>103744</td><td align="right" class='awrc'>16986915</td><td align="right" class='awrc'>16986915</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>11</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>67299</td><td align="right" class='awrnc'>553625</td><td align="right" class='awrnc'>16986915</td><td align="right" class='awrnc'>16986915</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>23</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2010"></a>
<h3 class="awr">MTTR Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2100"></a>
<h3 class="awr">Buffer Pool Advisory</h3>
<ul>
<li class="awr"> Only rows with estimated physical reads &gt;0 are displayed </li>
<li class="awr"> ordered by Block Size, Buffers For Estimate</li>
</ul>
<table border="0" class="tdiff" summary="This table displays MTTR advisory. It displays size for estimate, dirty limit, estimated cache writes, estimated cache write factor, estimated total write, estimated total IO per second, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Size for Est (M)</th><th class="awrbg" scope="col">Size Factor</th><th class="awrbg" scope="col">Buffers (thousands)</th><th class="awrbg" scope="col">Est Phys Read Factor</th><th class="awrbg" scope="col">Estimated Phys Reads (thousands)</th><th class="awrbg" scope="col">Est Phys Read Time</th><th class="awrbg" scope="col">Est %DBtime for Rds</th></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>800</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>93</td><td align="right" class='awrc'>1.37</td><td align="right" class='awrc'>41,923</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>109869.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>1,600</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>186</td><td align="right" class='awrnc'>1.30</td><td align="right" class='awrnc'>39,747</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>104173.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>2,400</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>280</td><td align="right" class='awrc'>1.25</td><td align="right" class='awrc'>38,139</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>99964.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>3,200</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>373</td><td align="right" class='awrnc'>1.21</td><td align="right" class='awrnc'>36,780</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>96408.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>4,000</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>466</td><td align="right" class='awrc'>1.17</td><td align="right" class='awrc'>35,572</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>93246.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>4,800</td><td align="right" class='awrnc'>0.60</td><td align="right" class='awrnc'>559</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>34,449</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>90306.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>5,600</td><td align="right" class='awrc'>0.70</td><td align="right" class='awrc'>652</td><td align="right" class='awrc'>1.09</td><td align="right" class='awrc'>33,389</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>87532.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>6,400</td><td align="right" class='awrnc'>0.80</td><td align="right" class='awrnc'>746</td><td align="right" class='awrnc'>1.06</td><td align="right" class='awrnc'>32,378</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>84884.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>7,200</td><td align="right" class='awrc'>0.90</td><td align="right" class='awrc'>839</td><td align="right" class='awrc'>1.03</td><td align="right" class='awrc'>31,425</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>82391.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>8,000</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>932</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>30,512</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>80001.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>8,800</td><td align="right" class='awrc'>1.10</td><td align="right" class='awrc'>1,025</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>29,703</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>77883.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>9,600</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>1,118</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>29,230</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>76645.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>10,400</td><td align="right" class='awrc'>1.30</td><td align="right" class='awrc'>1,212</td><td align="right" class='awrc'>0.95</td><td align="right" class='awrc'>29,008</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>76063.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>11,200</td><td align="right" class='awrnc'>1.40</td><td align="right" class='awrnc'>1,305</td><td align="right" class='awrnc'>0.94</td><td align="right" class='awrnc'>28,792</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>75499.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>12,000</td><td align="right" class='awrc'>1.50</td><td align="right" class='awrc'>1,398</td><td align="right" class='awrc'>0.94</td><td align="right" class='awrc'>28,588</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>74964.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>12,800</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>1,491</td><td align="right" class='awrnc'>0.93</td><td align="right" class='awrnc'>28,391</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>74448.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>13,600</td><td align="right" class='awrc'>1.70</td><td align="right" class='awrc'>1,584</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>28,203</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>73956.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>14,400</td><td align="right" class='awrnc'>1.80</td><td align="right" class='awrnc'>1,678</td><td align="right" class='awrnc'>0.92</td><td align="right" class='awrnc'>28,021</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>73481.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>15,200</td><td align="right" class='awrc'>1.90</td><td align="right" class='awrc'>1,771</td><td align="right" class='awrc'>0.91</td><td align="right" class='awrc'>27,844</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>73016.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>16,000</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>1,864</td><td align="right" class='awrnc'>0.91</td><td align="right" class='awrnc'>27,661</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>72538.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2400"></a>
<h3 class="awr">PGA Aggr Summary</h3>
<ul>
<li class="awr"> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate summary. It includes PGA cache hits, total wait time, average time for each class of buffer wait and WorkArea data processed."><tr><th class="awrbg" scope="col">PGA Cache Hit %</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Extra W/A MB Read/Written</th></tr>
<tr><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>143</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2600"></a>
<h3 class="awr">PGA Aggr Target Stats</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap (rows dentified with B or E contain data	 which is absolute i.e. not diffed over the interval) </li>
<li class="awr"> Auto PGA Target - actual workarea memory target </li>
<li class="awr"> W/A PGA Used	 - amount of memory used for all Workareas (manual + auto) </li>
<li class="awr"> %PGA W/A Mem	 - percentage of PGA memory allocated to workareas </li>
<li class="awr"> %Auto W/A Mem	 - percentage of workarea memory controlled by Auto Mem Mgmt </li>
<li class="awr"> %Man W/A Mem	 - percentage of workarea memory under manual control</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target statistics for begin and end snapshot. Statistics include PGA aggregate target, auto PGA target, PGA memory allocation, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">PGA Aggr Target(M)</th><th class="awrbg" scope="col">Auto PGA Target(M)</th><th class="awrbg" scope="col">PGA Mem  Alloc(M) </th><th class="awrbg" scope="col">W/A PGA  Used(M) </th><th class="awrbg" scope="col">%PGA W/A Mem</th><th class="awrbg" scope="col">%Auto W/A Mem</th><th class="awrbg" scope="col">%Man W/A Mem</th><th class="awrbg" scope="col">Global Mem Bound(K)</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>3,215</td><td align="right" class='awrc'>1,841</td><td align="right" class='awrc'>1,503.07</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>329,210</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>3,215</td><td align="right" class='awrnc'>1,923</td><td align="right" class='awrnc'>1,326.37</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>329,210</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2700"></a>
<h3 class="awr">PGA Aggr Target Histogram</h3>
<ul>
<li class="awr"> Optimal Executions are purely in-memory operations</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target histograms."><tr><th class="awrbg" scope="col">  Low Optimal</th><th class="awrbg" scope="col">  High Optimal</th><th class="awrbg" scope="col">Total Execs</th><th class="awrbg" scope="col">Optimal Execs</th><th class="awrbg" scope="col">1-Pass Execs</th><th class="awrbg" scope="col">M-Pass Execs</th></tr>
<tr><td class='awrc'>2K</td><td class='awrc'>4K</td><td align="right" class='awrc'>421</td><td align="right" class='awrc'>421</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>64K</td><td class='awrnc'>128K</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>128K</td><td class='awrc'>256K</td><td align="right" class='awrc'>46</td><td align="right" class='awrc'>46</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>256K</td><td class='awrnc'>512K</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>512K</td><td class='awrc'>1024K</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>1M</td><td class='awrnc'>2M</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>2M</td><td class='awrc'>4M</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2800"></a>
<h3 class="awr">PGA Memory Advisory</h3>
<ul>
<li class="awr"> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value    where Estd PGA Overalloc Count is 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA memory advisory for different estimated PGA target sizes. It displays size factor, Workarea MB processed, estimated PGA cache hit, estimated extra Workarea MB read written to disk, etc., for each target size."><tr><th class="awrbg" scope="col">PGA Target Est (MB)</th><th class="awrbg" scope="col">Size Factr</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Estd Extra	 W/A MB Read/	Written to Disk </th><th class="awrbg" scope="col">Estd PGA Cache Hit %</th><th class="awrbg" scope="col">Estd PGA Overalloc Count</th><th class="awrbg" scope="col">Estd Time</th></tr>
<tr><td align="right" scope="row" class='awrc'>402</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>12,563.14</td><td align="right" class='awrc'>885.84</td><td align="right" class='awrc'>93.00</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>71,836,191</td></tr>
<tr><td align="right" scope="row" class='awrnc'>804</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>12,563.14</td><td align="right" class='awrnc'>729.61</td><td align="right" class='awrnc'>95.00</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>71,001,724</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,608</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>12,563.14</td><td align="right" class='awrc'>321.94</td><td align="right" class='awrc'>98.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>68,824,191</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,411</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>12,563.14</td><td align="right" class='awrnc'>321.94</td><td align="right" class='awrnc'>98.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>68,824,191</td></tr>
<tr><td align="right" scope="row" class='awrc'>3,215</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>12,563.14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>67,104,577</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,858</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>12,563.14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>67,104,577</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,501</td><td align="right" class='awrc'>1.40</td><td align="right" class='awrc'>12,563.14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>67,104,577</td></tr>
<tr><td align="right" scope="row" class='awrnc'>5,144</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>12,563.14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>67,104,577</td></tr>
<tr><td align="right" scope="row" class='awrc'>5,787</td><td align="right" class='awrc'>1.80</td><td align="right" class='awrc'>12,563.14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>67,104,577</td></tr>
<tr><td align="right" scope="row" class='awrnc'>6,430</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>12,563.14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>67,104,577</td></tr>
<tr><td align="right" scope="row" class='awrc'>9,645</td><td align="right" class='awrc'>3.00</td><td align="right" class='awrc'>12,563.14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>67,104,577</td></tr>
<tr><td align="right" scope="row" class='awrnc'>12,860</td><td align="right" class='awrnc'>4.00</td><td align="right" class='awrnc'>12,563.14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>67,104,577</td></tr>
<tr><td align="right" scope="row" class='awrc'>19,290</td><td align="right" class='awrc'>6.00</td><td align="right" class='awrc'>12,563.14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>67,104,577</td></tr>
<tr><td align="right" scope="row" class='awrnc'>25,720</td><td align="right" class='awrnc'>8.00</td><td align="right" class='awrnc'>12,563.14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>67,104,577</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5500"></a>
<h3 class="awr">Shared Pool Advisory</h3>
<ul>
<li class="awr"> SP: Shared Pool     Est LC: Estimated Library Cache   Factr: Factor </li>
<li class="awr"> Note there is often a 1:Many correlation between a single logical object    in the Library Cache, and the physical number of memory objects associated    with it.  Therefore comparing the number of Lib Cache objects (e.g. in     v$librarycache), with the number of Lib Cache Memory Objects is invalid.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared pool advisory. Size factor, estimated library cache size, estimated library cache memory object and other info is displayed for different shared pool sizes"><tr><th class="awrbg" scope="col">Shared Pool Size(M)</th><th class="awrbg" scope="col">SP Size Factr</th><th class="awrbg" scope="col">Est LC Size (M)</th><th class="awrbg" scope="col">Est LC Mem Obj</th><th class="awrbg" scope="col">Est LC Time Saved (s)</th><th class="awrbg" scope="col">Est LC Time Saved Factr</th><th class="awrbg" scope="col">Est LC Load Time (s)</th><th class="awrbg" scope="col">Est LC Load Time Factr</th><th class="awrbg" scope="col">Est LC Mem Obj Hits (K)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1,440</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>122</td><td align="right" class='awrc'>3,947</td><td align="right" class='awrc'>107,720</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>149</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>4,892</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,472</td><td align="right" class='awrnc'>1.02</td><td align="right" class='awrnc'>154</td><td align="right" class='awrnc'>5,140</td><td align="right" class='awrnc'>107,725</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>144</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>4,893</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,504</td><td align="right" class='awrc'>1.04</td><td align="right" class='awrc'>186</td><td align="right" class='awrc'>6,072</td><td align="right" class='awrc'>107,729</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>140</td><td align="right" class='awrc'>0.94</td><td align="right" class='awrc'>4,894</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,536</td><td align="right" class='awrnc'>1.07</td><td align="right" class='awrnc'>218</td><td align="right" class='awrnc'>7,077</td><td align="right" class='awrnc'>107,737</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>132</td><td align="right" class='awrnc'>0.89</td><td align="right" class='awrnc'>4,894</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,568</td><td align="right" class='awrc'>1.09</td><td align="right" class='awrc'>250</td><td align="right" class='awrc'>8,335</td><td align="right" class='awrc'>107,743</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>126</td><td align="right" class='awrc'>0.85</td><td align="right" class='awrc'>4,895</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,600</td><td align="right" class='awrnc'>1.11</td><td align="right" class='awrnc'>282</td><td align="right" class='awrnc'>9,260</td><td align="right" class='awrnc'>107,749</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>0.81</td><td align="right" class='awrnc'>4,896</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,632</td><td align="right" class='awrc'>1.13</td><td align="right" class='awrc'>314</td><td align="right" class='awrc'>10,060</td><td align="right" class='awrc'>107,751</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>118</td><td align="right" class='awrc'>0.79</td><td align="right" class='awrc'>4,896</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,664</td><td align="right" class='awrnc'>1.16</td><td align="right" class='awrnc'>346</td><td align="right" class='awrnc'>10,718</td><td align="right" class='awrnc'>107,753</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>116</td><td align="right" class='awrnc'>0.78</td><td align="right" class='awrnc'>4,897</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,696</td><td align="right" class='awrc'>1.18</td><td align="right" class='awrc'>378</td><td align="right" class='awrc'>12,314</td><td align="right" class='awrc'>107,754</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>115</td><td align="right" class='awrc'>0.77</td><td align="right" class='awrc'>4,897</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,728</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>410</td><td align="right" class='awrnc'>13,614</td><td align="right" class='awrnc'>107,756</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>113</td><td align="right" class='awrnc'>0.76</td><td align="right" class='awrnc'>4,897</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,760</td><td align="right" class='awrc'>1.22</td><td align="right" class='awrc'>442</td><td align="right" class='awrc'>15,364</td><td align="right" class='awrc'>107,756</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>113</td><td align="right" class='awrc'>0.76</td><td align="right" class='awrc'>4,897</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,920</td><td align="right" class='awrnc'>1.33</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>18,846</td><td align="right" class='awrnc'>107,757</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>112</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>4,897</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,080</td><td align="right" class='awrc'>1.44</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>18,846</td><td align="right" class='awrc'>107,757</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>112</td><td align="right" class='awrc'>0.75</td><td align="right" class='awrc'>4,897</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,240</td><td align="right" class='awrnc'>1.56</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>18,846</td><td align="right" class='awrnc'>107,757</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>112</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>4,897</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,400</td><td align="right" class='awrc'>1.67</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>18,846</td><td align="right" class='awrc'>107,757</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>112</td><td align="right" class='awrc'>0.75</td><td align="right" class='awrc'>4,897</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,560</td><td align="right" class='awrnc'>1.78</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>18,846</td><td align="right" class='awrnc'>107,757</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>112</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>4,897</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,720</td><td align="right" class='awrc'>1.89</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>18,846</td><td align="right" class='awrc'>107,757</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>112</td><td align="right" class='awrc'>0.75</td><td align="right" class='awrc'>4,897</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,880</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>18,846</td><td align="right" class='awrnc'>107,757</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>112</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>4,897</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6900"></a>
<h3 class="awr">SGA Target Advisory</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA target advisory for different SGA target sizes. It displays SGA size factor, estimated DB time and estimated physical reads for different SGA target sizes."><tr><th class="awrbg" scope="col">SGA Target Size (M)</th><th class="awrbg" scope="col">SGA Size Factor</th><th class="awrbg" scope="col">Est DB Time (s)</th><th class="awrbg" scope="col">Est Physical Reads</th></tr>
<tr><td align="right" scope="row" class='awrc'>3,624</td><td align="right" class='awrc'>0.38</td><td align="right" class='awrc'>119,485</td><td align="right" class='awrc'>39,747,843</td></tr>
<tr><td align="right" scope="row" class='awrnc'>4,832</td><td align="right" class='awrnc'>0.50</td><td align="right" class='awrnc'>111,727</td><td align="right" class='awrnc'>36,779,036</td></tr>
<tr><td align="right" scope="row" class='awrc'>6,040</td><td align="right" class='awrc'>0.63</td><td align="right" class='awrc'>108,544</td><td align="right" class='awrc'>35,570,765</td></tr>
<tr><td align="right" scope="row" class='awrnc'>7,248</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>102,836</td><td align="right" class='awrnc'>33,389,165</td></tr>
<tr><td align="right" scope="row" class='awrc'>8,456</td><td align="right" class='awrc'>0.88</td><td align="right" class='awrc'>97,728</td><td align="right" class='awrc'>31,424,199</td></tr>
<tr><td align="right" scope="row" class='awrnc'>9,664</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>95,298</td><td align="right" class='awrnc'>30,511,893</td></tr>
<tr><td align="right" scope="row" class='awrc'>10,872</td><td align="right" class='awrc'>1.13</td><td align="right" class='awrc'>91,944</td><td align="right" class='awrc'>29,230,393</td></tr>
<tr><td align="right" scope="row" class='awrnc'>12,080</td><td align="right" class='awrnc'>1.25</td><td align="right" class='awrnc'>91,362</td><td align="right" class='awrnc'>29,007,657</td></tr>
<tr><td align="right" scope="row" class='awrc'>13,288</td><td align="right" class='awrc'>1.38</td><td align="right" class='awrc'>90,257</td><td align="right" class='awrc'>28,586,593</td></tr>
<tr><td align="right" scope="row" class='awrnc'>14,496</td><td align="right" class='awrnc'>1.50</td><td align="right" class='awrnc'>89,285</td><td align="right" class='awrnc'>28,202,143</td></tr>
<tr><td align="right" scope="row" class='awrc'>15,704</td><td align="right" class='awrc'>1.63</td><td align="right" class='awrc'>88,770</td><td align="right" class='awrc'>28,022,123</td></tr>
<tr><td align="right" scope="row" class='awrnc'>16,912</td><td align="right" class='awrnc'>1.75</td><td align="right" class='awrnc'>87,836</td><td align="right" class='awrnc'>27,662,082</td></tr>
<tr><td align="right" scope="row" class='awrc'>18,120</td><td align="right" class='awrc'>1.88</td><td align="right" class='awrc'>87,827</td><td align="right" class='awrc'>27,662,082</td></tr>
<tr><td align="right" scope="row" class='awrnc'>19,328</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>87,827</td><td align="right" class='awrnc'>27,662,082</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7100"></a>
<h3 class="awr">Streams Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5700"></a>
<h3 class="awr">Java Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="27"></a>
<h2 class="awr">
Wait Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#2300">Buffer Wait Statistics</a></li>
<li class="awr"><a class="awr" href="#3000">Enqueue Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2300"></a>
<h3 class="awr">Buffer Wait Statistics</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer wait statistics. Statistics include waits, total wait time and average time for each class of buffer wait."><tr><th class="awrbg" scope="col">Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Time (ms)</th></tr>
<tr><td scope="row" class='awrc'>file header block</td><td align="right" class='awrc'>35,845</td><td align="right" class='awrc'>742</td><td align="right" class='awrc'>21</td></tr>
<tr><td scope="row" class='awrnc'>undo header</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>3rd level bmb</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#27">Back to Wait Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3000"></a>
<h3 class="awr">Enqueue Activity</h3>
<ul>
<li class="awr"> only enqueues with requests are shown	</li>
<li class="awr"> Enqueue stats gathered prior to 10g should not be compared with 10g data </li>
<li class="awr"> ordered by Wait Time desc, Waits desc, Requests desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays enqueue activity statistics. Requests, success gets, failed gets, waits, wait time and average wait time are displayed for each enqueue type."><tr><th class="awrbg" scope="col">Enqueue Type (Request Reason)</th><th class="awrbg" scope="col">Requests</th><th class="awrbg" scope="col">Succ Gets</th><th class="awrbg" scope="col">Failed Gets</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Wt Time (s)</th><th class="awrbg" scope="col">Av Wt Time(ms)</th></tr>
<tr><td scope="row" class='awrc'>CR-Reuse Block Range (block range reuse ckpt)</td>
<td align="right" class='awrc'>217,340</td><td align="right" class='awrc'>217,340</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>54,752</td><td align="right" class='awrc'>284</td><td align="right" class='awrc'>5.20</td></tr>
<tr><td scope="row" class='awrnc'>US-Undo Segment</td>
<td align="right" class='awrnc'>379,694</td><td align="right" class='awrnc'>379,643</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>22,858</td><td align="right" class='awrnc'>217</td><td align="right" class='awrnc'>9.51</td></tr>
<tr><td scope="row" class='awrc'>HW-Segment High Water Mark</td>
<td align="right" class='awrc'>803,569</td><td align="right" class='awrc'>803,527</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>392</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>20.90</td></tr>
<tr><td scope="row" class='awrnc'>CF-Controlfile Transaction</td>
<td align="right" class='awrnc'>1,820</td><td align="right" class='awrnc'>1,820</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>121</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.00</td></tr>
<tr><td scope="row" class='awrc'>RO-Multiple Object Reuse (fast object reuse)</td>
<td align="right" class='awrc'>100</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.70</td></tr>
<tr><td scope="row" class='awrnc'>TM-DML</td>
<td align="right" class='awrnc'>45,936</td><td align="right" class='awrnc'>45,937</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20.00</td></tr>
<tr><td scope="row" class='awrc'>WF-AWR Flush</td>
<td align="right" class='awrc'>21</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.07</td></tr>
<tr><td scope="row" class='awrnc'>PS-PX Process Reservation</td>
<td align="right" class='awrnc'>48</td><td align="right" class='awrnc'>48</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.17</td></tr>
<tr><td scope="row" class='awrc'>FB-Format Block</td>
<td align="right" class='awrc'>11</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>DW-In memory Dispenser</td>
<td align="right" class='awrnc'>187</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>169</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.50</td></tr>
<tr><td scope="row" class='awrc'>TO-Temp Object</td>
<td align="right" class='awrc'>27</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.00</td></tr>
<tr><td scope="row" class='awrnc'>WT-AWR CDB-Wide Table Lock</td>
<td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.75</td></tr>
<tr><td scope="row" class='awrc'>TT-Tablespace</td>
<td align="right" class='awrc'>423,778</td><td align="right" class='awrc'>423,778</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>TD-KTF map table enqueue (KTF dump entries)</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>TA-Instance Undo</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.50</td></tr>
<tr><td scope="row" class='awrnc'>PW-Buffer Cache PreWarm (flush prewarm buffers)</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>TK-Auto Task Serialization (Auto Task Serialization)</td>
<td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>TX-Transaction</td>
<td align="right" class='awrnc'>89,935</td><td align="right" class='awrnc'>89,931</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IS-Instance State</td>
<td align="right" class='awrc'>21,750</td><td align="right" class='awrc'>21,750</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JG-Job Scheduler1</td>
<td align="right" class='awrnc'>2,583</td><td align="right" class='awrnc'>2,583</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JG-Job Scheduler1 (queue lock)</td>
<td align="right" class='awrc'>2,583</td><td align="right" class='awrc'>2,583</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SJ-KTSJ Slave Task Cancel (Slave Task Cancel)</td>
<td align="right" class='awrnc'>667</td><td align="right" class='awrnc'>667</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DD-ASM Local Disk Group</td>
<td align="right" class='awrc'>551</td><td align="right" class='awrc'>551</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JG-Job Scheduler1 (q mem clnup lck)</td>
<td align="right" class='awrnc'>246</td><td align="right" class='awrnc'>246</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>BU-Buddy Instance Context (recovery set construct)</td>
<td align="right" class='awrc'>188</td><td align="right" class='awrc'>188</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>FP-File Object (global fob contention)</td>
<td align="right" class='awrnc'>171</td><td align="right" class='awrnc'>171</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CU-Cursor</td>
<td align="right" class='awrc'>113</td><td align="right" class='awrc'>113</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>XL-ASM Extent Fault Lock (fault extent map)</td>
<td align="right" class='awrnc'>50</td><td align="right" class='awrnc'>50</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CT-Block Change Tracking (CTWR process start/stop)</td>
<td align="right" class='awrc'>41</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CT-Block Change Tracking (state)</td>
<td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>FD-Flashback Database (Flashback logical operations)</td>
<td align="right" class='awrc'>41</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MV-Online Datafile Move (datafile move)</td>
<td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>RP-Resilver / Repair</td>
<td align="right" class='awrc'>41</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SW-Suspend Writes</td>
<td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SE-Session Migration</td>
<td align="right" class='awrc'>14</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TH-Threshold Chain (metric threshold evaluation)</td>
<td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AF-Advisor Framework (task serialization)</td>
<td align="right" class='awrc'>7</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DA-Instance DP Array (Slave Process Array)</td>
<td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQ-Sequence Cache</td>
<td align="right" class='awrc'>7</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PR-Process Startup</td>
<td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PV-KSV slave startup (syncstart)</td>
<td align="right" class='awrc'>5</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MR-Media Recovery</td>
<td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AE-Edition Lock (lock)</td>
<td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SH-Active Session History Flushing</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XR-Quiesce / Force Logging (database force logging)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#27">Back to Wait Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="28"></a>
<h2 class="awr">
Undo Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3300">Undo Segment Summary</a></li>
<li class="awr"><a class="awr" href="#3400">Undo Segment Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3300"></a>
<h3 class="awr">Undo Segment Summary</h3>
<ul>
<li class="awr"> Min/Max TR (mins) - Min and Max Tuned Retention (minutes) </li>
<li class="awr"> STO - Snapshot Too Old count,	OOS - Out of Space count </li>
<li class="awr"> Undo segment block stats: </li>
<li class="awr"> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed </li>
<li class="awr"> eS - expired	Stolen,   eR - expired	 Released,   eU - expired   reUsed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays undo segment summary. It displays undo tablespace number, number of undo blocks, number of transactions, max query length, etc."><tr><th class="awrbg" scope="col">Undo TS#</th><th class="awrbg" scope="col">Num Undo Blocks (K)</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concurcy</th><th class="awrbg" scope="col">Min/Max TR (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">	uS/uR/uU/    eS/eR/eU</th></tr>
<tr><td align="right" scope="row" class='awrc'>2</td><td align="right" class='awrc'>20.46</td><td align="right" class='awrc'>57,741</td><td align="right" class='awrc'>1,016</td><td align="right" class='awrc'>17</td><td class='awrc'>39.1/39.1</td><td class='awrc'>0/0</td><td class='awrc'>0/0/0/9139/673544/0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#28">Back to Undo Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3400"></a>
<h3 class="awr">Undo Segment Stats</h3>
<ul>
<li class="awr"> Most recent 35 Undostat rows, ordered by Time desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the 35 most recent Undostat rows."><tr><th class="awrbg" scope="col">End Time</th><th class="awrbg" scope="col">Num Undo Blocks</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concy</th><th class="awrbg" scope="col">Tun Ret (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">  uS/uR/uU/   eS/eR/eU</th></tr>
<tr><td scope="row" class='awrc'>08-Feb 10:32</td><td align="right" class='awrc'>20,464</td><td align="right" class='awrc'>57,741</td><td align="right" class='awrc'>1,016</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>39</td><td class='awrc'>0/0</td><td class='awrc'>0/0/0/9139/673544/0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#28">Back to Undo Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="29"></a>
<h2 class="awr">
Latch Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3500">Latch Activity</a></li>
<li class="awr"><a class="awr" href="#3600">Latch Sleep Breakdown</a></li>
<li class="awr"><a class="awr" href="#3700">Latch Miss Sources</a></li>
<li class="awr"><a class="awr" href="#7500">Mutex Sleep Summary</a></li>
<li class="awr"><a class="awr" href="#3800">Parent Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#3900">Child Latch Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3500"></a>
<h3 class="awr">Latch Activity</h3>
<ul>
<li class="awr"> &quot;Get Requests&quot;, &quot;Pct Get Miss&quot; and &quot;Avg Slps/Miss&quot; are statistics for	 willing-to-wait latch get requests </li>
<li class="awr"> &quot;NoWait Requests&quot;, &quot;Pct NoWait Miss&quot; are for no-wait latch get requests </li>
<li class="awr"> &quot;Pct Misses&quot; for both should be very close to 0.0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch statistics. Get requests, % get miss, wait time, noWait requests are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Get Miss</th><th class="awrbg" scope="col">Avg Slps /Miss</th><th class="awrbg" scope="col">Wait Time (s)</th><th class="awrbg" scope="col">NoWait Requests</th><th class="awrbg" scope="col">Pct NoWait Miss</th></tr>
<tr><td scope="row" class='awrc'>AQ Background: interrupt command latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>AQ Coord jobx_kwsbgsgn latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ Message drive state object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AQ Sharded master pool latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ deq hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM Keyed state latch</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM allocation</td><td align="right" class='awrc'>37,423</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM connection state latch</td><td align="right" class='awrnc'>5,811</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM db client latch</td><td align="right" class='awrc'>48,245</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map headers</td><td align="right" class='awrnc'>1,864</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM map load waiting list</td><td align="right" class='awrc'>485</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map operation freelist</td><td align="right" class='awrnc'>270</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM map operation hash table</td><td align="right" class='awrc'>11,218,878</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM network background latch</td><td align="right" class='awrnc'>4,866</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM network state latch</td><td align="right" class='awrc'>394</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM remote client latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AWR Alerted Metric Element list</td><td align="right" class='awrc'>5,605</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Autotask management</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Change Notification Hash table latch</td><td align="right" class='awrc'>237</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Column stats entry latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Consistent RBA</td><td align="right" class='awrc'>31,033</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DML lock allocation</td><td align="right" class='awrnc'>92,555</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Event Group Locks</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>FIB s.o chain latch</td><td align="right" class='awrnc'>348</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>FOB consolidated s.o list latch</td><td align="right" class='awrc'>348</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>File State Object Pool Parent Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCS logfile block</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCS logfile write queue</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Hang Manager wait event statistics</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7,264</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>I/O Staticstics latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM Stats Stripe Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM Stats main anchor latch</td><td align="right" class='awrnc'>124</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM access tracking extent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM activity tracking latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM Global dictionary latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM Global dictionary queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM Global dictionary rw latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM area sb latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM area scb latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM emb latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM seg hdr latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMFS defer write list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMXT hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC other latch</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC stats buffer allocation latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>In memory undo latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS Sh mem access</td><td align="right" class='awrc'>124</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS broadcast add buf latch</td><td align="right" class='awrnc'>140</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS broadcast drop buf latch</td><td align="right" class='awrc'>140</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS broadcast load blnc latch</td><td align="right" class='awrnc'>140</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS mem alloc latch</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS queue access latch</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS queue state obj latch</td><td align="right" class='awrc'>5,166</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS slv state obj latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KCNIBR - invalid block range tree</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDCStatHash latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDFI Buffer Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDFI Hash Bucket Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDFI Hash Elem Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDMADO action list latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDMADO bll latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDMADO latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFC FX Hash Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFC Hash Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFCL LE Freelist</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS client latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS cluster latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS endpoint latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS node latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS process latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFK SGA Libload latch</td><td align="right" class='awrnc'>4,488</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFMD SGA</td><td align="right" class='awrc'>389</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KGNFS-NFS:SHM structure</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KGNFS-NFS:SVR LIST</td><td align="right" class='awrc'>207</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool KGH calls</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC message pool free list</td><td align="right" class='awrc'>366,763</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>530,421</td><td align="right" class='awrc'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool pending avail list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJCT flow control latch</td><td align="right" class='awrc'>2,775,020</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KMG MMAN ready and startup request latch</td><td align="right" class='awrnc'>206</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS OFS ctx level parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS OFS req layer parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS OFS sess layer parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS Receive and Send Queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS id table parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS ksfs_node latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFSD name cache parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSGL LS Segment latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSGL SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPC ASPC anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPC SGA allocation parent latch</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPCGSN Hash Table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPCGSN Namespace latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSK PDB IO STAT</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSRMA SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSRMF SGA anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSWL SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSXR hang analysis phase 1 latch</td><td align="right" class='awrnc'>43,777</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KSXR hang analysis phase 2 latch</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSXR large replies</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTF sga latch</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>410</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTILM latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTU in-memory txn table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTURMA ODPSCN latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTURMA SGA allocation parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KWQMN job cache list latch</td><td align="right" class='awrnc'>90</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Latch for NonceHistory</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Locator state objects pool parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Lost write change tracking</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Lsod array latch</td><td align="right" class='awrnc'>128</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA asr alloc latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA heap latch</td><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>7.55</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA shared context latch</td><td align="right" class='awrc'>1,371</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA shared context root latch</td><td align="right" class='awrnc'>70</td><td align="right" class='awrnc'>4.29</td><td align="right" class='awrnc'>0.67</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MQL Tracking Latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Memory Management Latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>206</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #2</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #3</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #4</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Subscriber</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Message cache latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MinActiveScn Latch</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Mutex</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Mutex Stats</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Nologging Standby SCN Time Map cache</td><td align="right" class='awrc'>203</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>OS process</td><td align="right" class='awrnc'>517</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OS process allocation</td><td align="right" class='awrc'>1,282</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>OS process: request allocation</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PDB Hash Table Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PDB LRU structure</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PL/SQL warning settings</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX hash array latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Parent latch for dependency tracking</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parent latch for query hash table access</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Parent latch for segments scanning</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>QMT</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Real-time descriptor latch</td><td align="right" class='awrc'>5,010</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Report Request stats latch</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Report Request struct latch</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Request holder compeltion list latch</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Retry Ht elm latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Retry bkt latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA Blackbox latch</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA IO buffer pool latch</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SGA Logging Bkt Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA Logging Log Latch</td><td align="right" class='awrnc'>2,913</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA blob parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA bucket locks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA heap locks</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA pool locks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SO private so latch</td><td align="right" class='awrc'>82</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SQL memory manager latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>205</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SQL memory manager workarea list latch</td><td align="right" class='awrc'>15,299</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SR Stats Stripe Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sched IM Job latch</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sched InMem Job Cache</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Shared B-Tree</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Streams Generic</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Subscriber Ht elm latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Testing</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Token Manager</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Txn Ht elm latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Txn bkt latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>UM object latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Undo Hint Latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>15,033</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>WCR: sync</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Write State Object Pool Parent Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>X$KSFQP</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XDB NFS Security Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>XDB unused session pool</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XDB used session pool</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>active checkpoint queue latch</td><td align="right" class='awrnc'>227,108</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.53</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>active service list</td><td align="right" class='awrc'>3,025</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>562</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>archive destination</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>begin backup scn array</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer pool</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>business card</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cache buffer handles</td><td align="right" class='awrnc'>149</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cache buffers chains</td><td align="right" class='awrc'>31,984,752</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7,687,581</td><td align="right" class='awrc'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>cache buffers lru chain</td><td align="right" class='awrnc'>3,599,039</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5,166,307</td><td align="right" class='awrnc'>0.73</td></tr>
<tr><td scope="row" class='awrc'>cache table scan latch</td><td align="right" class='awrc'>44</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>44</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>call allocation</td><td align="right" class='awrnc'>21,876</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>change notification client cache latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>channel handle pool latch</td><td align="right" class='awrnc'>80</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>channel operations parent latch</td><td align="right" class='awrc'>176,300</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>115</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>checkpoint queue latch</td><td align="right" class='awrnc'>3,749,753</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>719,380</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>client/application info</td><td align="right" class='awrc'>71</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>compile environment latch</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp handoff latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp pool latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp server hash latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp sga latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp srv type state latch</td><td align="right" class='awrc'>619</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp srv type wait latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cr slave free list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cvmap freelist lock</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>deferred cleanup latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher info</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dml lock allocation</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>done queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dtp latch</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dummy allocation</td><td align="right" class='awrnc'>47</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>eighth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>eleventh spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enqueue freelist latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2,706,363</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>enqueue hash chains</td><td align="right" class='awrnc'>6,742,697</td><td align="right" class='awrnc'>2.78</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>1,151</td><td align="right" class='awrnc'>0.26</td></tr>
<tr><td scope="row" class='awrc'>enqueues</td><td align="right" class='awrc'>111</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>error message lists</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>fast space usage latch</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fifteenth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>file cache latch</td><td align="right" class='awrc'>44,398</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.42</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>flash file access latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>flashback copy</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fourteenth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>fourth Audit Vault latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc element</td><td align="right" class='awrnc'>11,446,577</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>940,132</td><td align="right" class='awrnc'>0.11</td></tr>
<tr><td scope="row" class='awrc'>gc imc list</td><td align="right" class='awrc'>96</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc persistent rm</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc xid list</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcr global ctx</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity object freelist latch</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs commit scn state</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs nodemap pool</td><td align="right" class='awrc'>72,513</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs opaque info freelist</td><td align="right" class='awrnc'>128,017</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs partitioned table hash</td><td align="right" class='awrc'>9,723,906</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2,113,827</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs pcm hashed value bucket hash</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remaster request queue</td><td align="right" class='awrc'>85,773</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs remastering latch</td><td align="right" class='awrnc'>16,427</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,777</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gcs resource freelist</td><td align="right" class='awrc'>1,631,123</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>533,067</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource hash</td><td align="right" class='awrnc'>12,463,563</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>309</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs resource scan list</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource timerq list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs resource validate list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs shadows freelist</td><td align="right" class='awrnc'>906,026</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges cached resource lists</td><td align="right" class='awrc'>6,204,661</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>198,124</td><td align="right" class='awrc'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>ges deadlock list</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges domain table</td><td align="right" class='awrc'>13,270,176</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges enqueue table freelist</td><td align="right" class='awrnc'>2,738,893</td><td align="right" class='awrnc'>0.33</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges group table</td><td align="right" class='awrc'>14,295,203</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges process hash list</td><td align="right" class='awrnc'>17,217</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges process parent latch</td><td align="right" class='awrc'>27,217,595</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.80</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges process table freelist</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges remote lock freelist</td><td align="right" class='awrc'>161</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource hash list</td><td align="right" class='awrnc'>20,081,428</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>10,405</td><td align="right" class='awrnc'>0.11</td></tr>
<tr><td scope="row" class='awrc'>ges resource scan list</td><td align="right" class='awrc'>14,737</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource table freelist</td><td align="right" class='awrnc'>6,203</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges s-lock bitvec freelist</td><td align="right" class='awrc'>183</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges timeout list</td><td align="right" class='awrnc'>207</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges value block free list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>global tx hash mapping</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>granule from data transfer cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gws:Sharding global descriptor latch</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hash table column usage latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>86,026</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>hash table expression usage tracking latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hash table sql contorl latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat check</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>304</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>heartbeat structure management</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>308</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>imc buf hdl lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc cr clone buf</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc hash lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc sj lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc srchsp lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc-txn-wrk-lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory area latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory columnar segment hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory columnar ts extent map chunk latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory global pool latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>internal temp table object number allocation latch</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>interrupt manipulation</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>intra txn parallel recovery</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>io pool granule list</td><td align="right" class='awrc'>50</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>io pool granule metadata list</td><td align="right" class='awrnc'>101</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>job workq parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>job_queue_processes parameter latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>k2q global data latch</td><td align="right" class='awrc'>412</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>k2q lock allocation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kKCN Cqn SGA</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kcb DW scan objtemp hash table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kcn buffer chains</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kdlx hb parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kgb parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kgnfs mount latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjbr roi instance map</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjci objects freelist latch</td><td align="right" class='awrnc'>1,115</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjci process context latch</td><td align="right" class='awrc'>748</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>216,669</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>kjci process list latch</td><td align="right" class='awrnc'>510</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjci request sequence latch</td><td align="right" class='awrc'>67</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjcipctx state object freelist latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjoedcso state object freelist latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjoeq omni enqueue hash bucket latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjoer owner hash bucket</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjpm my inst data</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsc Request obj freelist latch</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsc Ring Buffer obj freelist latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsc protect control request queue</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6,176</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>kjsc protect warm up context</td><td align="right" class='awrnc'>43,625</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsca pkey obj freelist latch</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsca protect pkey hash table bucket</td><td align="right" class='awrnc'>6,899</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsca protect service hash table bucket</td><td align="right" class='awrc'>720</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjscpss state object freelist latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kokc descriptor allocation latch</td><td align="right" class='awrc'>50</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kpoxft latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>krso process</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksbxic instance latch</td><td align="right" class='awrnc'>50</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksevn object root latch</td><td align="right" class='awrc'>206</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksfv messages</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksi resource reuse count</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksim group membership cache</td><td align="right" class='awrnc'>529</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksim membership request latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>593</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksns object latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kss move lock</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksuosstats global area</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>235</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ksutcpistat latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksv allocation latch</td><td align="right" class='awrnc'>29</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksv class latch</td><td align="right" class='awrc'>17,637</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.33</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksv instance latch</td><td align="right" class='awrnc'>74</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksv msg queue latch</td><td align="right" class='awrc'>625</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>624</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksxp shared latch</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksxp so latch</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksz_so allocation latch</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktfbn latch</td><td align="right" class='awrc'>131</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg jrnls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg lookuptable level 1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg lookuptable level 2</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg space</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg stages</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg worklink</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm global data</td><td align="right" class='awrnc'>102</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm prv jrnls</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktmpj HT ls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwqbsn:qsga</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwslbmdl: metadata latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwslbql: queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwslbutl: uncommitted txn latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsptQcachLt: queue cache latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsptTrncTsksLt: trunc task latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsptjobAdPtLt: AdPt list latch</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsslLat: skiplist latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kxfxscanrate_latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lgwr LWN SCN</td><td align="right" class='awrnc'>32,334</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>list of block allocation</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>loader state object freelist</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lob segment dispenser latch</td><td align="right" class='awrc'>63</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lob segment hash table latch</td><td align="right" class='awrnc'>581</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lob segment query latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lock DBA buffer during media recovery</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log write info</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>179,262</td><td align="right" class='awrc'>2.82</td></tr>
<tr><td scope="row" class='awrnc'>log write worker phase</td><td align="right" class='awrnc'>14,903</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logical standby cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logminer context allocation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logminer local</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logminer work area</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>longop free list parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>managed standby</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>message bitmap latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>message pool operations parent latch</td><td align="right" class='awrnc'>65,934</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>messages</td><td align="right" class='awrc'>567,790</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>msg queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>multiblock read objects</td><td align="right" class='awrc'>510,874</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service memory objects</td><td align="right" class='awrnc'>65</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service namespace bucket</td><td align="right" class='awrc'>3,290</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service pending queue</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service request</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service request queue</td><td align="right" class='awrnc'>6,360</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ncodef allocation latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ninth spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>object queue header freelist</td><td align="right" class='awrc'>4,558</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>object queue header operation</td><td align="right" class='awrnc'>10,973,836</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>14,795</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>object queue memory</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>object stats modification</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>parallel query alloc buffer</td><td align="right" class='awrc'>117</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>95</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parallel query stats</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>parallel txn reco latch</td><td align="right" class='awrc'>636</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parameter table management</td><td align="right" class='awrnc'>160</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pdb enqueue hash chains</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>peshm</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pesom_free_list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pesom_hash_node</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pkey global statistics</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pmon dead latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>post/wait queue</td><td align="right" class='awrc'>218,242</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>219,166</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>process allocation</td><td align="right" class='awrnc'>3,095</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process group creation</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process memory detail</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process pkey statistics list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process queue</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process queue reference</td><td align="right" class='awrc'>2,064</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>227</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>qmn task queue latch</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>1.10</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>quarantine object</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>query server freelists</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>query server process</td><td align="right" class='awrc'>441</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>queued dump request</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>queuing load statistics</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>read-moslty lock queue under pkey</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>recovery domain hash bucket</td><td align="right" class='awrc'>2,412</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>redo allocation</td><td align="right" class='awrnc'>109,947</td><td align="right" class='awrnc'>1.07</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,052,020</td><td align="right" class='awrnc'>0.56</td></tr>
<tr><td scope="row" class='awrc'>redo copy</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,054,027</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>redo transport task</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>redo writing</td><td align="right" class='awrc'>201,483</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remote tool request latch</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr group change latch</td><td align="right" class='awrc'>126</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:active threads</td><td align="right" class='awrnc'>239</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6,081</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>resmgr:actses change group</td><td align="right" class='awrc'>72</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:actses change state</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:free threads list</td><td align="right" class='awrc'>150</td><td align="right" class='awrc'>0.67</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:plan CPU method</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:plan change alloc latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:plan change latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:resource group CPU method</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:schema config</td><td align="right" class='awrnc'>107</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>resmgr:session queuing</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resumable state object</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>row cache objects</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>rt rmv count latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>308</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>second Audit Vault latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>segmented array pool</td><td align="right" class='awrnc'>348</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sequence cache</td><td align="right" class='awrc'>177</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>service drain list</td><td align="right" class='awrnc'>616</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session allocation</td><td align="right" class='awrc'>128</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>session idle bit</td><td align="right" class='awrnc'>499</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session state list latch</td><td align="right" class='awrnc'>47</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session statistics</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session switching</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session timer</td><td align="right" class='awrc'>206</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>seventh spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sga hash table parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shard latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shardgroup list latch</td><td align="right" class='awrc'>183</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>30,943</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>shared pool sim alloc</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shared pool simulator</td><td align="right" class='awrnc'>490</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shared server configuration</td><td align="right" class='awrc'>206</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sim partition latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>simulator hash latch</td><td align="right" class='awrc'>1,249,235</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>simulator lru latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>730,106</td><td align="right" class='awrnc'>0.08</td></tr>
<tr><td scope="row" class='awrc'>sixth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sort extent pool</td><td align="right" class='awrnc'>330</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>space background task latch</td><td align="right" class='awrc'>2,648</td><td align="right" class='awrc'>44.30</td><td align="right" class='awrc'>0.77</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>423</td><td align="right" class='awrc'>1.42</td></tr>
<tr><td scope="row" class='awrnc'>state object free list</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>statistics aggregation</td><td align="right" class='awrc'>145</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>subscriber Ht bkt</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>tablespace key chain</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>temp lob duration state obj allocation</td><td align="right" class='awrnc'>46</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>tenth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test excl. parent l0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test excl. parent2 l0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test excl. parent2 lmid cln</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test mixed exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test mode exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test open exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test pdb exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test shared parent2 lmid</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>thirteenth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>threshold alerts latch</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>transaction allocation</td><td align="right" class='awrnc'>21,545</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twelfth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-fifth spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-first spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-fourth spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-second spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-third spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo global data</td><td align="right" class='awrc'>2,718,572</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>virtual circuit buffers</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>virtual circuit holder</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>virtual circuit queues</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3600"></a>
<h3 class="awr">Latch Sleep Breakdown</h3>
<ul>
<li class="awr"> ordered by misses desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch sleep statistics. Get requests, misses, sleeps, spin gets are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Misses</th><th class="awrbg" scope="col">Sleeps</th><th class="awrbg" scope="col">Spin Gets</th></tr>
<tr><td scope="row" class='awrc'>enqueue hash chains</td><td align="right" class='awrc'>6,742,697</td><td align="right" class='awrc'>187,507</td><td align="right" class='awrc'>14,054</td><td align="right" class='awrc'>174,161</td></tr>
<tr><td scope="row" class='awrnc'>ges cached resource lists</td><td align="right" class='awrnc'>6,204,661</td><td align="right" class='awrnc'>13,555</td><td align="right" class='awrnc'>282</td><td align="right" class='awrnc'>13,277</td></tr>
<tr><td scope="row" class='awrc'>ges resource hash list</td><td align="right" class='awrc'>20,081,428</td><td align="right" class='awrc'>11,663</td><td align="right" class='awrc'>1,546</td><td align="right" class='awrc'>10,147</td></tr>
<tr><td scope="row" class='awrnc'>cache buffers lru chain</td><td align="right" class='awrnc'>3,599,039</td><td align="right" class='awrnc'>11,460</td><td align="right" class='awrnc'>604</td><td align="right" class='awrnc'>10,869</td></tr>
<tr><td scope="row" class='awrc'>ges enqueue table freelist</td><td align="right" class='awrc'>2,738,893</td><td align="right" class='awrc'>8,919</td><td align="right" class='awrc'>746</td><td align="right" class='awrc'>8,197</td></tr>
<tr><td scope="row" class='awrnc'>gc element</td><td align="right" class='awrnc'>11,446,577</td><td align="right" class='awrnc'>3,010</td><td align="right" class='awrnc'>368</td><td align="right" class='awrnc'>2,646</td></tr>
<tr><td scope="row" class='awrc'>cache buffers chains</td><td align="right" class='awrc'>31,984,752</td><td align="right" class='awrc'>2,713</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>2,659</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource hash</td><td align="right" class='awrnc'>12,463,563</td><td align="right" class='awrnc'>1,695</td><td align="right" class='awrnc'>475</td><td align="right" class='awrnc'>1,244</td></tr>
<tr><td scope="row" class='awrc'>undo global data</td><td align="right" class='awrc'>2,718,572</td><td align="right" class='awrc'>1,638</td><td align="right" class='awrc'>156</td><td align="right" class='awrc'>1,485</td></tr>
<tr><td scope="row" class='awrnc'>KJCT flow control latch</td><td align="right" class='awrnc'>2,775,020</td><td align="right" class='awrnc'>1,564</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>1,448</td></tr>
<tr><td scope="row" class='awrc'>redo allocation</td><td align="right" class='awrc'>109,947</td><td align="right" class='awrc'>1,180</td><td align="right" class='awrc'>177</td><td align="right" class='awrc'>1,005</td></tr>
<tr><td scope="row" class='awrnc'>space background task latch</td><td align="right" class='awrnc'>2,648</td><td align="right" class='awrnc'>1,173</td><td align="right" class='awrnc'>906</td><td align="right" class='awrnc'>293</td></tr>
<tr><td scope="row" class='awrc'>ges process parent latch</td><td align="right" class='awrc'>27,217,595</td><td align="right" class='awrc'>840</td><td align="right" class='awrc'>673</td><td align="right" class='awrc'>167</td></tr>
<tr><td scope="row" class='awrnc'>object queue header operation</td><td align="right" class='awrnc'>10,973,836</td><td align="right" class='awrnc'>650</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>558</td></tr>
<tr><td scope="row" class='awrc'>ges domain table</td><td align="right" class='awrc'>13,270,176</td><td align="right" class='awrc'>616</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>609</td></tr>
<tr><td scope="row" class='awrnc'>messages</td><td align="right" class='awrnc'>567,790</td><td align="right" class='awrnc'>598</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>569</td></tr>
<tr><td scope="row" class='awrc'>gcs resource freelist</td><td align="right" class='awrc'>1,631,123</td><td align="right" class='awrc'>556</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>520</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool free list</td><td align="right" class='awrnc'>366,763</td><td align="right" class='awrnc'>325</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>276</td></tr>
<tr><td scope="row" class='awrc'>channel operations parent latch</td><td align="right" class='awrc'>176,300</td><td align="right" class='awrc'>323</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>312</td></tr>
<tr><td scope="row" class='awrnc'>multiblock read objects</td><td align="right" class='awrnc'>510,874</td><td align="right" class='awrnc'>285</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>250</td></tr>
<tr><td scope="row" class='awrc'>active checkpoint queue latch</td><td align="right" class='awrc'>227,108</td><td align="right" class='awrc'>262</td><td align="right" class='awrc'>138</td><td align="right" class='awrc'>124</td></tr>
<tr><td scope="row" class='awrnc'>ASM map operation hash table</td><td align="right" class='awrnc'>11,218,878</td><td align="right" class='awrnc'>256</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>233</td></tr>
<tr><td scope="row" class='awrc'>checkpoint queue latch</td><td align="right" class='awrc'>3,749,753</td><td align="right" class='awrc'>134</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>122</td></tr>
<tr><td scope="row" class='awrnc'>redo writing</td><td align="right" class='awrnc'>201,483</td><td align="right" class='awrnc'>80</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>69</td></tr>
<tr><td scope="row" class='awrc'>lgwr LWN SCN</td><td align="right" class='awrc'>32,334</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>20</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>30,943</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>15</td></tr>
<tr><td scope="row" class='awrc'>file cache latch</td><td align="right" class='awrc'>44,398</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>7</td></tr>
<tr><td scope="row" class='awrnc'>call allocation</td><td align="right" class='awrnc'>21,876</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>9</td></tr>
<tr><td scope="row" class='awrc'>MGA shared context root latch</td><td align="right" class='awrc'>70</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>ksv class latch</td><td align="right" class='awrnc'>17,637</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>gcs nodemap pool</td><td align="right" class='awrc'>72,513</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>ges process hash list</td><td align="right" class='awrnc'>17,217</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>ksv msg queue latch</td><td align="right" class='awrc'>625</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>qmn task queue latch</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3700"></a>
<h3 class="awr">Latch Miss Sources</h3>
<ul>
<li class="awr"> only latches with sleeps are shown </li>
<li class="awr"> ordered by name, sleeps desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch miss sources. Place where latch was requested, no-wait misses, sleeps, waiter sleeps are displayed for each missed latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Where</th><th class="awrbg" scope="col">NoWait Misses</th><th class="awrbg" scope="col">   Sleeps</th><th class="awrbg" scope="col">Waiter Sleeps</th></tr>
<tr><td class='awrc'>ASM map operation hash table</td><td class='awrc'>kffmTranslate</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>15</td></tr>
<tr><td class='awrnc'>ASM map operation hash table</td><td class='awrnc'>kffmDoDone_1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>8</td></tr>
<tr><td class='awrc'>KJC message pool free list</td><td class='awrc'>kjcsmpav: allocate a msg buffer</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>49</td></tr>
<tr><td class='awrnc'>KJC message pool free list</td><td class='awrnc'>kjcspfmbq: free vector of msg buffers</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjctcsnd: send normal message</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>57</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjcts_sedeqv3: dequeue a vector of msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>6</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjcts_sqenq: queue a message</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>23</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjctr_updatetkt: update ticket info</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>19</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjctr_releasetkt: change ticket allocation</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>4</td></tr>
<tr><td class='awrnc'>MGA shared context root latch</td><td class='awrnc'>ksm_mga_detach_whr1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td></tr>
<tr><td class='awrc'>active checkpoint queue latch</td><td class='awrc'>kcbk_add_rbr_ckpt: Add rbr ckpt 3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>124</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>active checkpoint queue latch</td><td class='awrnc'>kcbk_add_rbr_ckpt: Add rbr ckpt 1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>active checkpoint queue latch</td><td class='awrc'>kcbkcpa: Checkpoint post-processing 2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>active checkpoint queue latch</td><td class='awrnc'>kcbkcpa: Checkpoint post-processing</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbzibmlt: multi-block read: nowait</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbzgb: scan from tail nowait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbzwb</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>8</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbgcur: fast path excl</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>10</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kclcls_3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbchg: cur pin change</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbgcur: fast path shr</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbgtcr: convert latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbbic1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>6</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbgtcr: fast path exam</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbrls: fast pin release</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbchg: change complete</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>2</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbchg: rollback</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbgcur: convert latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbgtcr: convert latch 4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbgtcr: fast path pin</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbnlc</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbrls: pin release</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers lru chain</td><td class='awrc'>kcbzgb_2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>305</td><td align="right" class='awrc'>109</td></tr>
<tr><td class='awrnc'>cache buffers lru chain</td><td class='awrnc'>kcbzgws</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>294</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers lru chain</td><td class='awrc'>kcbo_write_bufs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers lru chain</td><td class='awrnc'>kcbbwlru</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>511</td></tr>
<tr><td class='awrc'>call allocation</td><td class='awrc'>ksuprc</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>channel operations parent latch</td><td class='awrnc'>ksrwait()</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>channel operations parent latch</td><td class='awrc'>ksrapublish()</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>checkpoint queue latch</td><td class='awrnc'>kcbklbc_cql</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>file cache latch</td><td class='awrc'>file cache:04</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>6</td></tr>
<tr><td class='awrnc'>file cache latch</td><td class='awrnc'>file cache:21</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclnfndnewm</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>192</td><td align="right" class='awrc'>85</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclulb</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>69</td><td align="right" class='awrnc'>117</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>KCLUNLNK</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>85</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclollnumiter</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclnfndx</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>34</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclfwrite1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>11</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclplz_1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclnfnds</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>30</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclpdcl</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>2</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclplz</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclrwrite_1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclrwrite</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>11</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclexpand_2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclpdc_1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>2</td></tr>
<tr><td class='awrc'>gcs nodemap pool</td><td class='awrc'>kjbrnmapalloc_2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gcs resource freelist</td><td class='awrnc'>kjbralc: check freelist nowait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource freelist</td><td class='awrc'>kjbrfr_bg2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>16</td></tr>
<tr><td class='awrnc'>gcs resource freelist</td><td class='awrnc'>kjbrralc: reserve allocation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>gcs resource freelist</td><td class='awrc'>kjbralc add resource</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>17</td></tr>
<tr><td class='awrnc'>gcs resource freelist</td><td class='awrnc'>kjbrfr_bg: free resource</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kclfwrite1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>204</td><td align="right" class='awrc'>20</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbcropen</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>88</td><td align="right" class='awrnc'>69</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjblocalobj_nolock</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>64</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbopen</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>5</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbassume</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>18</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kclpdc</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>95</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbrrcres_99</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbclose_remaster</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>39</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbmpopen</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>48</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbrrcfwst</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjblpast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>48</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbmpclose</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>23</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kclrwrite</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>14</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kclgrantlk_1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbmpconvert</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbmpflushpi</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>7</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbopen:affinity</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbrprmexpack</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>ges cached resource lists</td><td class='awrc'>kjrm2c: move resource to cache</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>269</td><td align="right" class='awrc'>282</td></tr>
<tr><td class='awrnc'>ges cached resource lists</td><td class='awrnc'>kjchc: clean resource cache</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges cached resource lists</td><td class='awrc'>kjrchc: cached obj cleanup</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>ges cached resource lists</td><td class='awrnc'>kjruch: cached obj cleanup</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges domain table</td><td class='awrc'>kjdmlad: add a lock to an xid-hashed lock list</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>4</td></tr>
<tr><td class='awrnc'>ges enqueue table freelist</td><td class='awrnc'>kjlalc: lock allocation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>537</td><td align="right" class='awrnc'>427</td></tr>
<tr><td class='awrc'>ges enqueue table freelist</td><td class='awrc'>kjlfr: remove lock from parent object</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>209</td><td align="right" class='awrc'>319</td></tr>
<tr><td class='awrnc'>ges process hash list</td><td class='awrnc'>kjakiqa: set inquiry response</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges process parent latch</td><td class='awrc'>kjata_fg</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>672</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>ges process parent latch</td><td class='awrnc'>kjata</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges resource hash list</td><td class='awrc'>kjlrlr: remove lock from resource queue</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>658</td><td align="right" class='awrc'>789</td></tr>
<tr><td class='awrnc'>ges resource hash list</td><td class='awrnc'>kjrmas1: lookup master node</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>283</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges resource hash list</td><td class='awrc'>kjakcai: search for resp by resname</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>240</td><td align="right" class='awrc'>113</td></tr>
<tr><td class='awrnc'>ges resource hash list</td><td class='awrnc'>kjucvl: lock convert request</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>175</td><td align="right" class='awrnc'>72</td></tr>
<tr><td class='awrc'>ges resource hash list</td><td class='awrc'>kjlmfnd: search for lockp by rename and inst id</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>149</td><td align="right" class='awrc'>83</td></tr>
<tr><td class='awrnc'>ges resource hash list</td><td class='awrnc'>kjcvscn: remove from scan queue</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges resource hash list</td><td class='awrc'>kjrref: find matched resource</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>487</td></tr>
<tr><td class='awrnc'>ges resource hash list</td><td class='awrnc'>kjuinq: inquire resource held mode</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ksv class latch</td><td class='awrc'>ksvclsl: checkpool</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>ksv msg queue latch</td><td class='awrnc'>ksvmql: getwork</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>messages</td><td class='awrc'>ksarcv</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>23</td></tr>
<tr><td class='awrnc'>messages</td><td class='awrnc'>ksarcv: after wait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>6</td></tr>
<tr><td class='awrc'>messages</td><td class='awrc'>ksaamb: after wakeup</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>mostly latch-free SCN</td><td class='awrnc'>kcs024</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>multiblock read objects</td><td class='awrc'>kcbzibmlt</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>20</td></tr>
<tr><td class='awrnc'>multiblock read objects</td><td class='awrnc'>kcbzibmlt: normal mbr free</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>15</td></tr>
<tr><td class='awrc'>object queue header operation</td><td class='awrc'>kcbo_unlink_q</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>64</td></tr>
<tr><td class='awrnc'>object queue header operation</td><td class='awrnc'>kcbo_link_q</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>11</td></tr>
<tr><td class='awrc'>object queue header operation</td><td class='awrc'>kclobj</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>object queue header operation</td><td class='awrnc'>kcbo_switch_mq_bg</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>4</td></tr>
<tr><td class='awrc'>object queue header operation</td><td class='awrc'>kcbo_switch_q_bg</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>object queue header operation</td><td class='awrnc'>kcbo_switch_cq</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>14</td></tr>
<tr><td class='awrc'>qmn task queue latch</td><td class='awrc'>kwqmnmvtsks: delay to ready list</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_redo_gen: redo allocation 1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>151</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>redo allocation</td><td class='awrc'>kcrfw_post: more space</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>25</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_redo_write: before write</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>32</td></tr>
<tr><td class='awrc'>redo allocation</td><td class='awrc'>kcrfw_redo_gen: redo allocation 3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>120</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_redo_gen: redo allocation 2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>redo writing</td><td class='awrc'>kcrfw_post: rba scn pair</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>redo writing</td><td class='awrnc'>kcrfw_cal_target_rba</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td></tr>
<tr><td class='awrc'>redo writing</td><td class='awrc'>kcrfwcr</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>5</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_grab_task</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>701</td><td align="right" class='awrnc'>892</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_detach_task</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>137</td><td align="right" class='awrc'>14</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsjCreateTask</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>39</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_smco_purgeexpired</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_smco_movetasks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>undo global data</td><td class='awrc'>ktusm_stealext_2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>130</td><td align="right" class='awrc'>65</td></tr>
<tr><td class='awrnc'>undo global data</td><td class='awrnc'>ktusm_stealext: KSLBEGIN</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>8</td></tr>
<tr><td class='awrc'>undo global data</td><td class='awrc'>ktudba: KSLBEGIN</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>64</td></tr>
<tr><td class='awrnc'>undo global data</td><td class='awrnc'>ktusmupst: KSLBEGIN</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>10</td></tr>
<tr><td class='awrc'>undo global data</td><td class='awrc'>ktudnx:child</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>undo global data</td><td class='awrnc'>ktufrbs_2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>ksqcmi: if lk mode not requested</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4,710</td><td align="right" class='awrc'>980</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqgtl3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3,685</td><td align="right" class='awrnc'>6,020</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>ksqcmi: if lk mode requested</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2,858</td><td align="right" class='awrc'>3,200</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqrcl</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,980</td><td align="right" class='awrnc'>3,354</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>ksqcnl</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>821</td><td align="right" class='awrc'>500</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>kghfre</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7500"></a>
<h3 class="awr">Mutex Sleep Summary</h3>
<ul>
<li class="awr"> ordered by number of sleeps desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the mutex sleep summary. Location, sleeps and wait time are displayed for each mutex type"><tr><th class="awrbg" scope="col">Mutex Type</th><th class="awrbg" scope="col">Location</th><th class="awrbg" scope="col">Sleeps</th><th class="awrbg" scope="col">Wait    Time (ms)</th></tr>
<tr><td class='awrc'>Row Cache</td><td class='awrc'>[19] kqrpre</td><td align="right" class='awrc'>489</td><td align="right" class='awrc'>1,201</td></tr>
<tr><td class='awrnc'>Row Cache</td><td class='awrnc'>[06] kqrGetClusterLock</td><td align="right" class='awrnc'>58</td><td align="right" class='awrnc'>58</td></tr>
<tr><td class='awrc'>Row Cache</td><td class='awrc'>[10] kqreqd</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>9</td></tr>
<tr><td class='awrnc'>Cursor Pin</td><td class='awrnc'>kksLockDelete [KKSCHLPIN6]</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>6</td></tr>
<tr><td class='awrc'>Cursor Pin</td><td class='awrc'>kksfbc [KKSCHLFSP2]</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>Cursor Pin</td><td class='awrnc'>kksfbc [KKSCHLPIN1]</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3800"></a>
<h3 class="awr">Parent Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3900"></a>
<h3 class="awr">Child Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="30"></a>
<h2 class="awr">
Segment Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4000">Segments by Logical Reads</a></li>
<li class="awr"><a class="awr" href="#4100">Segments by Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4104">Segments by Physical Read Requests</a></li>
<li class="awr"><a class="awr" href="#4108">Segments by UnOptimized Reads</a></li>
<li class="awr"><a class="awr" href="#4106">Segments by Optimized Reads</a></li>
<li class="awr"><a class="awr" href="#4110">Segments by Direct Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4120">Segments by Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4124">Segments by Physical Write Requests</a></li>
<li class="awr"><a class="awr" href="#4130">Segments by Direct Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4140">Segments by Table Scans</a></li>
<li class="awr"><a class="awr" href="#4150">Segments by DB Blocks Changes</a></li>
<li class="awr"><a class="awr" href="#4200">Segments by Row Lock Waits</a></li>
<li class="awr"><a class="awr" href="#4300">Segments by ITL Waits</a></li>
<li class="awr"><a class="awr" href="#4400">Segments by Buffer Busy Waits</a></li>
<li class="awr"><a class="awr" href="#4450">Segments by Global Cache Buffer Busy</a></li>
<li class="awr"><a class="awr" href="#4500">Segments by CR Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4600">Segments by Current Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4605">Segments by Global Cache Remote Grants</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4000"></a>
<h3 class="awr">Segments by Logical Reads</h3>
<ul>
<li class="awr">Total Logical Reads:	   7,234,630</li>
<li class="awr">Captured Segments account for	76.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by logical reads. Owner, tablespace name, object type, logical read, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER12</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>503,472</td><td align="right" class='awrc'>6.96</td></tr>
<tr><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>496,864</td><td align="right" class='awrnc'>6.87</td></tr>
<tr><td class='awrc'>USER15</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>432,480</td><td align="right" class='awrc'>5.98</td></tr>
<tr><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>366,208</td><td align="right" class='awrnc'>5.06</td></tr>
<tr><td class='awrc'>USER3</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>360,560</td><td align="right" class='awrc'>4.98</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4100"></a>
<h3 class="awr">Segments by Physical Reads</h3>
<ul>
<li class="awr">Total Physical Reads:	    4,253,774</li>
<li class="awr">Captured Segments account for  100.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical reads. Owner, tablespace name, object type, physical reads, etc. are displayed for each segment "><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	 Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER12</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>466,690</td><td align="right" class='awrc'>10.97</td></tr>
<tr><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>458,963</td><td align="right" class='awrnc'>10.79</td></tr>
<tr><td class='awrc'>USER15</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>404,719</td><td align="right" class='awrc'>9.51</td></tr>
<tr><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>339,269</td><td align="right" class='awrnc'>7.98</td></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>271,748</td><td align="right" class='awrc'>6.39</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4104"></a>
<h3 class="awr">Segments by Physical Read Requests</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    4,253,575</li>
<li class="awr">Captured Segments account for  100.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical read requests. Owner, tablespace name, object type, physical read requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Read Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER12</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>466,690</td><td align="right" class='awrc'>10.97</td></tr>
<tr><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>458,963</td><td align="right" class='awrnc'>10.79</td></tr>
<tr><td class='awrc'>USER15</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>404,719</td><td align="right" class='awrc'>9.51</td></tr>
<tr><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>339,269</td><td align="right" class='awrnc'>7.98</td></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>271,748</td><td align="right" class='awrc'>6.39</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4108"></a>
<h3 class="awr">Segments by UnOptimized Reads</h3>
<ul>
<li class="awr">Total UnOptimized Read Requests:       4,253,575</li>
<li class="awr">Captured Segments account for  100.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by unoptimized reads. Owner, tablespace name, object type, unoptimized reads, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">UnOptimized Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER12</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>466,690</td><td align="right" class='awrc'>10.97</td></tr>
<tr><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>458,963</td><td align="right" class='awrnc'>10.79</td></tr>
<tr><td class='awrc'>USER15</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>404,719</td><td align="right" class='awrc'>9.51</td></tr>
<tr><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>339,269</td><td align="right" class='awrnc'>7.98</td></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>271,748</td><td align="right" class='awrc'>6.39</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4106"></a>
<h3 class="awr">Segments by Optimized Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4110"></a>
<h3 class="awr">Segments by Direct Physical Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4120"></a>
<h3 class="awr">Segments by Physical Writes</h3>
<ul>
<li class="awr">Total Physical Writes:	       709,396</li>
<li class="awr">Captured Segments account for	94.7% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical writes. Owner, tablespace name, object type, physical writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>74,335</td><td align="right" class='awrc'>10.48</td></tr>
<tr><td class='awrnc'>USER12</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73464</td><td align="right" class='awrnc'>73460</td><td align="right" class='awrnc'>70,134</td><td align="right" class='awrnc'>9.89</td></tr>
<tr><td class='awrc'>USER15</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>60,526</td><td align="right" class='awrc'>8.53</td></tr>
<tr><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>54,713</td><td align="right" class='awrnc'>7.71</td></tr>
<tr><td class='awrc'>USER4</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>54,339</td><td align="right" class='awrc'>7.66</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4124"></a>
<h3 class="awr">Segments by Physical Write Requests</h3>
<ul>
<li class="awr">Total Physical Write Requests:	       673,985</li>
<li class="awr">Captured Segments account for	98.8% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical write requests. Owner, tablespace name, object type, physical write requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Write Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>74,144</td><td align="right" class='awrc'>11.00</td></tr>
<tr><td class='awrnc'>USER12</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73464</td><td align="right" class='awrnc'>73460</td><td align="right" class='awrnc'>69,027</td><td align="right" class='awrnc'>10.24</td></tr>
<tr><td class='awrc'>USER15</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>59,680</td><td align="right" class='awrc'>8.85</td></tr>
<tr><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>53,711</td><td align="right" class='awrnc'>7.97</td></tr>
<tr><td class='awrc'>USER3</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>53,662</td><td align="right" class='awrc'>7.96</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4130"></a>
<h3 class="awr">Segments by Direct Physical Writes</h3>
<ul>
<li class="awr">Total Direct Physical Writes:		  230</li>
<li class="awr">Captured Segments account for	56.5% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>

WORKLOAD REPOSITORY report for

DB Name 	DB Id	 Unique Name DB Role	      Edition Release	 RAC CDB
------------ ----------- ----------- ---------------- ------- ---------- --- ---
P30DB	      3393773525 p30db	     PRIMARY	      EE      19.0.0.0.0 YES NO

Instance     Inst Num Startup Time
------------ -------- ---------------
p30db1		    1 08-Feb-20 07:52

Host Name	 Platform			  CPUs Cores Sockets Memory(GB)
---------------- -------------------------------- ---- ----- ------- ----------
mcracpoc1.exampl Linux x86 64-bit		     8	   4	   1	  31.40

	      Snap Id	   Snap Time	  Sessions Curs/Sess Instances
	    --------- ------------------- -------- --------- ---------
Begin Snap:	   68 08-Feb-20 10:27:31       108	 2.1	     2
  End Snap:	   69 08-Feb-20 10:37:48	90	 1.4	     2
   Elapsed:		  10.29 (mins)
   DB Time:		 180.13 (mins)

Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name
---------------------------------------- ------- ------ ------------------------
Top SQL Statements			   17.52  99.64 ADDM:3393773525_1_69
"User I/O" wait Class			   17.52  75.41 ADDM:3393773525_1_69
Top Segments by "User I/O" and "Cluster"   17.52  23.13 ADDM:3393773525_1_69
Buffer Busy - Hot Objects		   17.52   7.11 ADDM:3393773525_1_69
Global Cache Messaging			   17.52   5.10 ADDM:3393773525_1_69
Load Profile			Per Second   Per Transaction  Per Exec	Per Call
~~~~~~~~~~~~~~~ 	   ---------------   --------------- --------- ---------
	     DB Time(s):	      17.5		 0.2	  0.03	   65.11
	      DB CPU(s):	       1.5		 0.0	  0.00	    5.41
      Background CPU(s):	       0.8		 0.0	  0.00	    0.00
      Redo size (bytes):	 992,138.7	    13,320.8
  Logical read (blocks):	  11,717.2	       157.3
	  Block changes:	   2,917.2		39.2
 Physical read (blocks):	   6,889.4		92.5
Physical write (blocks):	   1,148.9		15.4
       Read IO requests:	   6,889.1		92.5
      Write IO requests:	   1,091.6		14.7
	   Read IO (MB):	      53.8		 0.7
	  Write IO (MB):	       9.0		 0.1
	   IM scan rows:	       0.0		 0.0
Session Logical Read IM:	       0.0		 0.0
 RAC GC blocks received:	     207.0		 2.8
   RAC GC blocks served:	      29.3		 0.4
	     User calls:	       0.3		 0.0
	   Parses (SQL):	      38.8		 0.5
      Hard parses (SQL):	       0.3		 0.0
     SQL Work Area (MB):	       0.2		 0.0
		 Logons:	       0.0		 0.0
	    User logons:	       0.0		 0.0
	 Executes (SQL):	     537.5		 7.2
	      Rollbacks:	       0.0		 0.0
	   Transactions:	      74.5

Instance Efficiency Percentages (Target 100%)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	    Buffer Nowait %:   99.50	   Redo NoWait %:  100.00
	    Buffer  Hit   %:   41.20	In-memory Sort %:  100.00
	    Library Hit   %:   99.86	    Soft Parse %:   99.30
	 Execute to Parse %:   92.78	     Latch Hit %:   99.87
Parse CPU to Parse Elapsd %:   41.12	 % Non-Parse CPU:   99.94
	  Flash Cache Hit %:	0.00

Top 10 Foreground Events by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					   Total Wait	    Avg   % DB Wait
Event				     Waits Time (sec)	   Wait   time Class
------------------------------ ----------- ---------- --------- ------ --------
db file sequential read 	 1,134,921     5214.4	 4.59ms   48.2 User I/O
db file parallel read		   253,304     2932.1	11.58ms   27.1 User I/O
DB CPU						898.1		   8.3
buffer busy waits		    29,009	747.4	25.77ms    6.9 Concurre
enq: CR - block range reuse ck	    54,512	276.1	 5.07ms    2.6 Other
enq: US - contention		    23,061	218.1	 9.46ms    2.0 Other
gc current grant 2-way		   258,460	169.6  656.32us    1.6 Cluster
gc cr multi block grant 	   117,945	157.8	 1.34ms    1.5 Cluster
gc cr grant 2-way		   193,594	129.5  669.06us    1.2 Cluster
gc current grant read-mostly i	    73,122	 92.8	 1.27ms     .9 Cluster

Wait Classes by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
							  Avg		  Avg
					Total Wait	 Wait	% DB   Active
Wait Class		    Waits	Time (sec)	 Time	time Sessions
---------------- ---------------- ---------------- ---------- ------ --------
User I/O		1,457,348	     8,156     5.60ms	75.5	 13.2
System I/O		  110,523	     1,197    10.83ms	11.1	  1.9
Other			  249,634	     1,136     4.55ms	10.5	  1.8
DB CPU					       898		 8.3	  1.5
Concurrency		   30,494	       750    24.60ms	 6.9	  1.2
Cluster 		  727,044	       649   892.72us	 6.0	  1.1
Configuration		      601		11    18.75ms	  .1	  0.0
Commit				6		 0    36.62ms	  .0	  0.0
Application		       32		 0     2.98ms	  .0	  0.0
Network 		      526		 0    69.64us	  .0	  0.0

Host CPU
<table border="0" class="tdiff" summary="This table displays top segments by direct physical writes. Owner, tablespace name, object type, direct writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Direct Writes</th><th class="awrbg" scope="col">%Total</th></tr>
~~~~~~~~		  Load Average
 CPUs Cores Sockets	Begin	    End     %User   %System	 %WIO	  %Idle
----- ----- ------- --------- --------- --------- --------- --------- ---------
    8	  4	  1	 7.32	   5.22      10.9      18.6	 38.1	   61.7

Instance CPU
~~~~~~~~~~~~
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
	      % of total CPU for Instance:	29.9
	      % of busy  CPU for Instance:	78.0
  %DB time waiting for CPU - Resource Mgr:	 0.0

IO Profile		    Read+Write/Second	  Read/Second	 Write/Second
~~~~~~~~~~		    ----------------- --------------- ---------------
	    Total Requests:	      8,131.3	      6,897.4	      1,233.9
	 Database Requests:	      7,980.7	      6,889.1	      1,091.6
<td scope="row" class='awrc'>WRH$_ACTIVE_SESSION_HISTORY</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_33</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>73801</td><td align="right" class='awrc'>73801</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>28.70</td></tr>
	Optimized Requests:		  0.0		  0.0		  0.0
	     Redo Requests:		140.7		  1.3		139.4
		Total (MB):		 66.3		 55.0		 11.3
	     Database (MB):		 62.8		 53.8		  9.0
      Optimized Total (MB):		  0.0		  0.0		  0.0
		 Redo (MB):		  3.0		  1.1		  2.0
	 Database (blocks):	      8,038.3	      6,889.4	      1,148.9
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
 Via Buffer Cache (blocks):	      8,038.0	      6,889.4	      1,148.6
	   Direct (blocks):		  0.4		  0.0		  0.4

Memory Statistics
~~~~~~~~~~~~~~~~~			Begin	       End
				 ------------ ------------
		  Host Mem (MB):     32,156.0	  32,156.0
		   SGA use (MB):      9,664.0	   9,664.0
		   PGA use (MB):      1,503.1	   1,326.4
    % Host Mem used for SGA+PGA:	34.73	     34.18
<td scope="row" class='awrnc'>SYS_LOB0000011139C00004$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11140</td><td align="right" class='awrnc'>11140</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>24.78</td></tr>

Cache Sizes			  Begin        End
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>SYS_LOB0000007451C00009$$</td><td class='awrc'>SYS_LOB_P256</td><td class='awrc'>LOB PARTITION</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>73950</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>2.17</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>SYS_LOB0000011147C00038$$</td><td class='awrnc'>&#160;</td><td class='awrnc'>LOB</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>11148</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.87</td></tr>
~~~~~~~~~~~		     ---------- ----------
</table><p />
	       Buffer Cache:	 8,000M     8,000M  Std Block Size:	    8K
	   Shared Pool Size:	 1,105M     1,106M	Log Buffer:    20,612K
<hr align="left" width="20%" /><p />
	     In-Memory Area:	     0M 	0M

 Shared Pool Statistics        Begin	End
~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ------  ------
<a class="awr" href="#30">Back to Segment Statistics</a>
	     Memory Usage %:   84.34   83.19
    % SQL with executions>1:   83.80   83.56
  % Memory for SQL w/exec>1:   84.76   83.02

<br /><a class="awr" href="#top">Back to Top</a><p />

Time Model Statistics			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> DB Time represents total time in user calls
-> DB CPU represents CPU time of foreground processes
<a class="awr" name="4140"></a>
-> Total CPU Time represents foreground and background processes
-> Statistics including the word "background" measure background process
   time, therefore do not contribute to the DB time statistic
<h3 class="awr">Segments by Table Scans</h3>
-> Ordered by % of DB time in descending order, followed by Statistic Name

								% of  % of Total
Statistic Name					     Time (s) DB Time	CPU Time

------------------------------------------ ------------------ ------- ----------
sql execute elapsed time			     10,807.4	100.0
DB CPU							898.1	  8.3	    66.1
<p />
PL/SQL execution elapsed time				 16.1	   .1
parse time elapsed					  1.8	   .0
connection management call elapsed time 		  0.0	   .0
repeated bind elapsed time				  0.0	   .0
		  No data exists for this section of the report.
DB time 					     10,807.8
background elapsed time 			      2,067.4
background cpu time					461.3		    33.9
total CPU time					      1,359.4
<p />
			  ------------------------------------------------------

Operating System Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> *TIME statistic values are diffed.
<a class="awr" href="#30">Back to Segment Statistics</a>
   All others display actual values.  End Value is displayed if different
-> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name

Statistic				   Value	End Value
<br /><a class="awr" href="#top">Back to Top</a><p />
------------------------- ---------------------- ----------------
FREE_MEMORY_BYTES		   5,510,602,752    5,875,994,624
INACTIVE_MEMORY_BYTES		   1,330,835,456    1,330,499,584
<a class="awr" name="4150"></a>
BUSY_TIME				 174,172
IDLE_TIME				 280,309
IOWAIT_TIME				 173,319
SYS_TIME				  84,496
USER_TIME				  49,466
<h3 class="awr">Segments by DB Blocks Changes</h3>
LOAD					       7		5
RSRC_MGR_CPU_WAIT_TIME			       5
PHYSICAL_MEMORY_BYTES		  33,717,977,088
NUM_CPUS				       8
<ul>
NUM_CPU_CORES				       4
NUM_CPU_SOCKETS 			       1
GLOBAL_RECEIVE_SIZE_MAX 	       4,194,304
GLOBAL_SEND_SIZE_MAX		       1,048,576
<li class="awr"> % of Capture shows % of DB Block Changes for each top segment compared  </li>
TCP_RECEIVE_SIZE_DEFAULT		  87,380
TCP_RECEIVE_SIZE_MAX		       6,291,456
TCP_RECEIVE_SIZE_MIN			   4,096
TCP_SEND_SIZE_DEFAULT			  16,384
TCP_SEND_SIZE_MAX		       4,194,304
<li class="awr"> with total DB Block Changes for all segments captured by the Snapshot </li>
TCP_SEND_SIZE_MIN			   4,096
			  ------------------------------------------------------

Operating System Statistics - Detail	   DB/Inst: P30DB/p30db1  Snaps: 68-69
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available</li>

Snap Time	    Load    %busy    %user     %sys    %idle  %iowait
--------------- -------- -------- -------- -------- -------- --------
08-Feb 10:27:31      7.3      N/A      N/A	N/A	 N/A	  N/A
</ul>
08-Feb 10:37:48      5.2     38.3     10.9     18.6	61.7	 38.1
			  ------------------------------------------------------

Foreground Wait Class			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
-> ordered by wait time desc, waits desc
<table border="0" class="tdiff" summary="This table displays top segments by DB blocks changes. Owner, tablespace name, object type, db block changes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">DB Block Changes</th><th class="awrbg" scope="col">% of Capture</th></tr>
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0
-> Captured Time accounts for	     102.2%  of Total DB time	   10,807.83 (s)
-> Total FG Wait Time:		  10,150.07 (s)  DB CPU time:	      898.09 (s)
<tr><td class='awrc'>USER12</td><td class='awrc'>IOPS</td>

				     %Time	Total Wait
Wait Class		       Waits -outs	  Time (s)   Avg wait  %DB time
-------------------- --------------- ----- --------------- ---------- ---------
User I/O		   1,388,801	 0	     8,151     5.87ms	   75.4
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>75,136</td><td align="right" class='awrc'>10.87</td></tr>
DB CPU						       898		    8.3
Concurrency		      29,343	 0	       749    25.52ms	    6.9
Cluster 		     724,071	 0	       644   889.82us	    6.0
Other			     131,776	 0	       593     4.50ms	    5.5
<tr><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td>
Configuration			 585	32		11    19.24ms	    0.1
System I/O		       1,126	 0		 2     2.08ms	    0.0
Commit				   6	 0		 0    36.62ms	    0.0
Network 			  39	 0		 0    13.69us	    0.0
Application			   0			 0		    0.0
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>74,576</td><td align="right" class='awrnc'>10.79</td></tr>
			  ------------------------------------------------------


Foreground Wait Events			   DB/Inst: P30DB/p30db1  Snaps: 68-69
<tr><td class='awrc'>USER15</td><td class='awrc'>IOPS</td>
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Only events with Total Wait Time (s) >= .001 are shown
-> ordered by wait time desc, waits desc (idle events last)
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % DB
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>64,576</td><td align="right" class='awrc'>9.34</td></tr>
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
db file sequential read      1,134,921		5,214	 4.59ms     24.7   48.2
<tr><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td>
db file parallel read	       253,304		2,932	11.58ms      5.5   27.1
buffer busy waits		29,009		  747	25.77ms      0.6    6.9
enq: CR - block range reus	54,512		  276	 5.07ms      1.2    2.6
enq: US - contention		23,061		  218	 9.46ms      0.5    2.0
gc current grant 2-way	       258,460		  170  656.32us      5.6    1.6
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>54,672</td><td align="right" class='awrnc'>7.91</td></tr>
gc cr multi block grant        117,945		  158	 1.34ms      2.6    1.5
gc cr grant 2-way	       193,594		  130  669.06us      4.2    1.2
gc current grant read-most	73,122		   93	 1.27ms      1.6     .9
reliable message		21,648		   85	 3.91ms      0.5     .8
<tr><td class='awrc'>USER3</td><td class='awrc'>IOPS</td>
gc current block 2-way		36,218		   32  888.55us      0.8     .3
gc cr multi block mixed 	15,537		   31	 1.96ms      0.3     .3
gc current block busy		14,662		   11  732.18us      0.3     .1
enq: HW - contention		   396		    9	22.00ms      0.0     .1
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>53,776</td><td align="right" class='awrc'>7.78</td></tr>
gc current grant busy		 5,269		    6	 1.05ms      0.1     .1
latch: enqueue hash chains	12,902		    5  406.98us      0.3     .0
gc cr grant busy		 3,544		    4	 1.20ms      0.1     .0
gc cr block 2-way		 4,518		    4  941.55us      0.1     .0
</table><p />
KSV master wait 		   516		    3	 5.32ms      0.0     .0
Data file init write		    86		    3	31.37ms      0.0     .0
undo segment extension		   189	  99	    3	13.47ms      0.0     .0
gcs drm freeze in enter se	    21		    2  100.67ms      0.0     .0
<hr align="left" width="20%" /><p />
gc current grant congested	   580		    2	 3.34ms      0.0     .0
gc current block lost		     3		    2  573.58ms      0.0     .0
control file parallel writ	   129		    2	12.76ms      0.0     .0
gc cr grant congested		   473		    2	 3.30ms      0.0     .0
<a class="awr" href="#30">Back to Segment Statistics</a>
gc cr block lost		     2		    1  661.19ms      0.0     .0
row cache mutex 		   278		    1	 4.57ms      0.0     .0
db file single write		    86		    1	13.99ms      0.0     .0
<br /><a class="awr" href="#top">Back to Top</a><p />
DLM cross inst call comple	    43		    1	24.20ms      0.0     .0
KJC: Wait for msg sends to	 1,223		    1  516.84us      0.0     .0
latch free			 1,841		    1  313.08us      0.0     .0
gc current block congested	   133		    0	 3.60ms      0.0     .0
<a class="awr" name="4200"></a>
latch: ges resource hash l	 1,278		    0  364.28us      0.0     .0
kfk: async disk IO		    86		    0	 5.09ms      0.0     .0
control file sequential re	   911		    0  289.09us      0.0     .0
<h3 class="awr">Segments by Row Lock Waits</h3>
latch: gc element		   310		    0  714.67us      0.0     .0
log file sync			     6		    0	36.62ms      0.0     .0
CSS initialization		    36		    0	 5.34ms      0.0     .0

ges enter server mode		12,713		    0	 9.06us      0.3     .0
latch: gcs resource hash	   150		    0  586.01us      0.0     .0
CSS operation: action		    54		    0	 1.37ms      0.0     .0
latch: undo global data 	   153		    0  366.67us      0.0     .0
<p />
latch: object queue header	    87		    0  579.31us      0.0     .0
gc cr block congested		    11		    0	 4.26ms      0.0     .0
enq: CF - contention		    51		    0  905.45us      0.0     .0
latch: redo allocation		   114		    0  357.66us      0.0     .0
		  No data exists for this section of the report.
Disk file operations I/O	   273		    0  142.40us      0.0     .0
CSS operation: query		   108		    0  288.98us      0.0     .0
ges inquiry response		    43		    0  690.51us      0.0     .0
<p />
latch: cache buffers lru c	   107		    0  269.09us      0.0     .0
latch: cache buffers chain	    46		    0  516.09us      0.0     .0
PGA memory operation		   256		    0	82.90us      0.0     .0
datafile move cleanup duri	    43		    0  369.58us      0.0     .0
<a class="awr" href="#30">Back to Segment Statistics</a>
Disk file Mirror Read		    45		    0  347.42us      0.0     .0
cursor: pin S			    10		    0	 1.23ms      0.0     .0
ASM file metadata operatio	   258		    0	32.72us      0.0     .0
<br /><a class="awr" href="#top">Back to Top</a><p />
wait list latch free		     4		    0	 1.26ms      0.0     .0
IPC send completion sync	     6		    0  820.33us      0.0     .0
direct path sync		    43		    0  109.49us      0.0     .0

<a class="awr" name="4300"></a>
Foreground Wait Events			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Only events with Total Wait Time (s) >= .001 are shown
-> ordered by wait time desc, waits desc (idle events last)
<h3 class="awr">Segments by ITL Waits</h3>
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % DB

Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
PX Deq: Slave Session Stat	     8		    0  547.63us      0.0     .0
enq: PS - contention		     3	  33	    0	 1.21ms      0.0     .0
<p />
ges ipc enter server mode	   202		    0	 8.87us      0.0     .0
name-service call wait		     2		    0  640.00us      0.0     .0
watchdog main loop		   824		2,472 3000.02ms      0.0
PX Deq: Execution Msg		    24		    0	 1.74ms      0.0
		  No data exists for this section of the report.
PX Deq: Msg Fragment		    60		    0  462.50us      0.0
SQL*Net message from clien	    38		    0  644.82us      0.0
			  ------------------------------------------------------

<p />

Background Wait Events			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
<a class="awr" href="#30">Back to Segment Statistics</a>
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % bg
<br /><a class="awr" href="#top">Back to Top</a><p />
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
log file parallel write 	31,033	   0	  984	31.70ms      0.7   47.6
LGWR any worker group		26,602	   0	  434	16.30ms      0.6   21.0
<a class="awr" name="4400"></a>
db file parallel write		59,584	   0	  202	 3.39ms      1.3    9.8
LGWR worker group ordering	 7,452	   0	   53	 7.14ms      0.2    2.6
LGWR all worker groups		 1,283	   0	   38	29.71ms      0.0    1.8
control file parallel writ	   324	   0	    7	20.59ms      0.0     .3
<h3 class="awr">Segments by Buffer Busy Waits</h3>
ASM file metadata operatio	 3,126	   0	    4	 1.33ms      0.1     .2
gcs log flush sync		 2,787	   0	    2  788.32us      0.1     .1
ASM IO for non-blocking po	66,623	   0	    2	31.23us      1.4     .1
<ul>
db file sequential read 	   625	   0	    2	 2.87ms      0.0     .1
enq: CR - block range reus	   409	   0	    2	 4.32ms      0.0     .1
ksxr poll remote instances	44,266	 100	    1	32.40us      1.0     .1
buffer busy waits		    31	   0	    1	45.64ms      0.0     .1
<li class="awr"> % of Capture shows % of Buffer Busy Waits for each top segment compared  </li>
KSV master wait 		 1,092	  42	    1	 1.24ms      0.0     .1
gcs remastering wait for r	    10	   0	    1  123.59ms      0.0     .1
Sync ASM rebalance		    54	   0	    1	21.61ms      0.0     .1
control file sequential re	 3,358	   0	    1  327.55us      0.1     .1
<li class="awr"> with total Buffer Busy Waits for all segments captured by the Snapshot </li>
gc cr block busy		    39	   0	    1	27.27ms      0.0     .1
gc cr block 2-way		 1,404	   0	    1  616.22us      0.0     .0
gc buffer busy release		    10	   0	    1	81.96ms      0.0     .0
IMR slave acknowledgement	 1,851	   0	    1  358.89us      0.0     .0
log file sequential read	   312	   0	    1	 1.92ms      0.0     .0
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available</li>
Disk file Mirror Read		   849	   0	    1  700.31us      0.0     .0
latch free			 1,147	   0	    1  516.60us      0.0     .0
gc current block busy		   262	   0	    1	 2.23ms      0.0     .0
ges lms sync during dynami	    35	  69	    1	15.62ms      0.0     .0
</ul>
gc cr multi block mixed 	    15	   0	    1	35.48ms      0.0     .0
reliable message		   165	   0	    1	 3.21ms      0.0     .0
gc current block 2-way		   792	   0	    1  648.19us      0.0     .0
PX Deq: reap credit		10,734	 100	    0	27.75us      0.2     .0
latch: cache buffers lru c	   485	   0	    0  463.72us      0.0     .0
latch: enqueue hash chains	   624	   0	    0  358.28us      0.0     .0
db file scattered read		    44	   0	    0	 4.75ms      0.0     .0
<table border="0" class="tdiff" summary="This table displays top segments by buffer busy waits. Owner, tablespace name, object type, buffer busy waits, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Buffer Busy Waits</th><th class="awrbg" scope="col">% of Capture</th></tr>
enq: CF - contention		    73	  60	    0	 2.66ms      0.0     .0
DFS lock handle 		   266	 100	    0  692.32us      0.0     .0
AQ: RAC AQ Network		 6,157	 100	    0	29.53us      0.1     .0
CGS wait for IPC msg		 6,702	 100	    0	26.33us      0.1     .0
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
direct path write		     8	   0	    0	20.40ms      0.0     .0
oracle thread bootstrap 	     6	   0	    0	27.20ms      0.0     .0
db file async I/O submit	14,782	   0	    0	 9.64us      0.3     .0
latch: gcs resource hash	   301	   0	    0  439.46us      0.0     .0
kjctssqmg: quick message s	   291	 100	    0  438.17us      0.0     .0
<td scope="row" class='awrc'>SYS_LOB0000011139C00004$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100.00</td></tr>
direct path write temp		    30	   0	    0	 3.92ms      0.0     .0
gc cr grant 2-way		   129	   0	    0  834.73us      0.0     .0
latch: ges resource hash l	   240	   0	    0  403.55us      0.0     .0
gc current grant 2-way		   138	   0	    0  592.22us      0.0     .0
</table><p />
gc current grant busy		   117	   0	    0  649.47us      0.0     .0
enq: RO - fast object reus	    30	   0	    0	 2.48ms      0.0     .0
Disk file operations I/O	   327	   0	    0  220.95us      0.0     .0
<hr align="left" width="20%" /><p />
KJC: Wait for msg sends to	   188	  80	    0  381.70us      0.0     .0
enq: US - contention		    13	   0	    0	 5.03ms      0.0     .0
CSS operation: action		    38	   0	    0	 1.28ms      0.0     .0
<a class="awr" href="#30">Back to Segment Statistics</a>
LGWR wait for redo copy 	    82	   0	    0  506.87us      0.0     .0
IPC group service call		   468	   0	    0	76.90us      0.0     .0
row cache lock			    24	 100	    0	 1.33ms      0.0     .0
PX Deq: Join ACK		    13	   0	    0	 2.07ms      0.0     .0
<br /><a class="awr" href="#top">Back to Top</a><p />
latch: redo allocation		    61	   0	    0  421.93us      0.0     .0
gc cr disk read 		    33	   0	    0  738.36us      0.0     .0
CSS operation: data query	    18	   0	    0	 1.31ms      0.0     .0
IPC send completion sync	   623	  99	    0	34.36us      0.0     .0

<a class="awr" name="4450"></a>
Background Wait Events			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0
<h3 class="awr">Segments by Global Cache Buffer Busy</h3>

						Total
				       %Time	 Wait		   Waits   % bg
Event				 Waits -outs Time (s)  Avg wait     /txn   time

-------------------------- ----------- ----- -------- --------- -------- ------
latch: gc element		    54	   0	    0  394.20us      0.0     .0
enq: TM - contention		     1	   0	    0	19.96ms      0.0     .0
CSS operation: data update	    20	   0	    0	  .96ms      0.0     .0
gc current multi block req	    12	   0	    0	 1.36ms      0.0     .0
gc cr multi block grant 	    15	   0	    0	 1.08ms      0.0     .0
os thread creation		     6	   0	    0	 2.46ms      0.0     .0
enq: WF - contention		    14	   0	    0	  .98ms      0.0     .0
gc cr block congested		     2	   0	    0	 5.88ms      0.0     .0
<p />
PGA memory operation		   145	   0	    0	74.72us      0.0     .0
enq: FB - contention		    11	   0	    0  880.00us      0.0     .0
ges inquiry response		    10	   0	    0  948.40us      0.0     .0
library cache lock		     6	   0	    0	 1.56ms      0.0     .0
enq: PS - contention		     9	  22	    0	  .97ms      0.0     .0
		  No data exists for this section of the report.
latch: messages 		    29	   0	    0  279.93us      0.0     .0
libcache interrupt action	 1,074	   0	    0	 5.96us      0.0     .0
gc current grant congested	     1	   0	    0	 5.98ms      0.0     .0
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
enq: WT - contention		     7	   0	    0  843.43us      0.0     .0
direct path sync		    43	   0	    0  128.14us      0.0     .0
enq: HW - contention		     5	  20	    0	 1.10ms      0.0     .0
<br /><a class="awr" href="#top">Back to Top</a><p />
ges2 LMON to wake up LMD -	    30	   0	    0  177.03us      0.0     .0
latch: redo writing		    11	   0	    0  463.18us      0.0     .0
enq: TO - contention		     3	   0	    0	 1.64ms      0.0     .0
enq: DW - contention		     4	 100	    0	 1.19ms      0.0     .0
<a class="awr" name="4500"></a>
library cache pin		     5	   0	    0  836.60us      0.0     .0
gc current block congested	     1	   0	    0	 4.03ms      0.0     .0
latch: object queue header	     5	   0	    0  637.20us      0.0     .0
latch: cache buffers chain	     8	   0	    0  364.00us      0.0     .0
<h3 class="awr">Segments by CR Blocks Received</h3>
enq: TT - contention		     3	  33	    0  942.67us      0.0     .0
DLM cross inst call comple	    24	   0	    0  106.50us      0.0     .0
PX Deq: Slave Session Stat	    13	   0	    0  186.46us      0.0     .0
<ul>
latch: checkpoint queue la	    12	   0	    0  174.67us      0.0     .0
db file parallel read		     2	   0	    0	 1.04ms      0.0     .0
PX Deq: Signal ACK EXT		    13	   0	    0  158.62us      0.0     .0
enq: SM -  contention		     2	   0	    0  820.00us      0.0     .0
<li class="awr">Total CR Blocks Received:	   35,036</li>
enq: TD - KTF dump entries	     2	   0	    0  648.00us      0.0     .0
ges enter server mode		    88	   0	    0	13.59us      0.0     .0
rdbms ipc message	       169,020	   7   13,348	78.98ms      3.7
PX Idle Wait			     9	   0   10,214 1134.92 s      0.0
<li class="awr">Captured Segments account for	94.8% of Total</li>
Space Manager: slave idle	 3,641	   0	9,832 2700.22ms      0.1
class slave wait		 8,120	  76	5,150  634.18ms      0.2
wait for unread message on	   944	 100	1,851 1960.34ms      0.0
pmon timer			   412	 100	1,236 2999.91ms      0.0
GCR sleep			 4,108	   0	1,233  300.10ms      0.1
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
DIAG idle wait			 7,710	  83	1,231  159.72ms      0.2
gcs yield cpu			42,597	  99	1,226	28.79ms      0.9
ges remote message	       195,276	   0	1,218	 6.24ms      4.2
gcs remote message	     1,115,508	   0	1,081	  .97ms     24.3
</ul>
smon timer			    22	   5	  671	30.51 s      0.0
PING				   564	  18	  620 1099.83ms      0.0
ASM cluster membership cha	   354	  82	  620 1750.34ms      0.0
ASM background timer		 2,118	   0	  618  291.85ms      0.0
OFS idle			   206	 100	  618 3000.02ms      0.0
pman timer			   206	 100	  618 2999.68ms      0.0
heartbeat redo informer 	   617	   0	  617 1000.15ms      0.0
REPL Capture/Apply: RAC AQ	    10	 100	  617	61.68 s      0.0
Streams AQ: qmn coordinato	    45	   0	  616	13.69 s      0.0
Streams AQ: qmn slave idle	    23	   0	  616	26.78 s      0.0
<table border="0" class="tdiff" summary="This table displays top segments by CR blocks received. Owner, tablespace name, object type, CR blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">CR    Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
SCM slave idle			 6,176	   0	  616	99.69ms      0.1
lreg timer			   205	 100	  616 3002.53ms      0.0
dispatcher timer		    10	 100	  600	60.01 s      0.0

Background Wait Events			   DB/Inst: P30DB/p30db1  Snaps: 68-69
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % bg
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>26,033</td><td align="right" class='awrc'>74.30</td></tr>
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
AQPC idle			    20	 100	  600	30.00 s      0.0
Data Guard: Gap Manager 	    10	   0	  600	60.00 s      0.0
Data Guard: Timer		     1	   0	  600  600.00 s      0.0
<tr><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td>
LGWR worker group idle		14,499	   0	  189	13.05ms      0.3
PX Deq Credit: send blkd	    65	   0	    0  663.29us      0.0
PX Deq: Execute Reply		    13	   0	    0	 2.86ms      0.0
PX Deq: Parse Reply		    13	   0	    0	 1.92ms      0.0
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>3,661</td><td align="right" class='awrnc'>10.45</td></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>2,773</td><td align="right" class='awrc'>7.91</td></tr>
<tr><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>337</td><td align="right" class='awrnc'>0.96</td></tr>
<tr><td class='awrc'>USER10</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73453</td><td align="right" class='awrc'>73455</td><td align="right" class='awrc'>113</td><td align="right" class='awrc'>0.32</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4600"></a>
<h3 class="awr">Segments by Current Blocks Received</h3>
<ul>
<li class="awr">Total Current Blocks Received:		92,749</li>
<li class="awr">Captured Segments account for	98.0% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by current blocks received. Owner, tablespace name, object type, Current blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Current Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>41,072</td><td align="right" class='awrc'>44.28</td></tr>
<tr><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>10,826</td><td align="right" class='awrnc'>11.67</td></tr>
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>6,933</td><td align="right" class='awrc'>7.48</td></tr>
<tr><td class='awrnc'>USER10</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73462</td><td align="right" class='awrnc'>73462</td><td align="right" class='awrnc'>3,686</td><td align="right" class='awrnc'>3.97</td></tr>
<tr><td class='awrc'>USER19</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73500</td><td align="right" class='awrc'>73500</td><td align="right" class='awrc'>3,680</td><td align="right" class='awrc'>3.97</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4605"></a>
<h3 class="awr">Segments by Global Cache Remote Grants</h3>
<ul>
<li class="awr">Total Global Cache Remote Grants:	1,780,249</li>
<li class="awr">Captured Segments account for	98.9% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
RMA: IPC0 completion sync	   670	   0	    0	25.24us      0.0
SQL*Net message from clien	    19	   0	    0  526.47us      0.0
			  ------------------------------------------------------
</ul>


Wait Event Histogram			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
<table border="0" class="tdiff" summary="This table displays top segments by gc remote grants. Owner, tablespace name, object type, gc remote grants, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">GC Remote Grants</th><th class="awrbg" scope="col">%Total</th></tr>
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)

<tr><td class='awrc'>USER4</td><td class='awrc'>IOPS</td>
						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>334,315</td><td align="right" class='awrc'>18.78</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>243,743</td><td align="right" class='awrnc'>13.69</td></tr>
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
<tr><td class='awrc'>USER2</td><td class='awrc'>IOPS</td>
AQ: RAC AQ Network	    6141	 2.2  83.2   9.8   3.1	 1.2	.4    .2
ASM IO for non-blocking p  66.6K   1.0	63.0  22.7   6.3   3.4	 1.9   1.2    .6
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>216,913</td><td align="right" class='awrc'>12.18</td></tr>
ASM background starting        1 100.0
ASM file metadata operati   3326  11.6	  .8  39.9  11.3   7.7	 6.5   4.1  17.9
<tr><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td>
AWR Flush		       4 100.0
CGS wait for IPC msg	    6684	11.5  76.3   8.4   2.6	  .7	.3    .1
CSS initialization	      32	 3.1  40.6   3.1   3.1		    50.0
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>137,253</td><td align="right" class='awrnc'>7.71</td></tr>
CSS operation: action	      86	20.9   1.2		       1.2  76.7
CSS operation: data query     18				      27.8  72.2
CSS operation: data updat     20					   100.0
CSS operation: query	      96  67.7	13.5   1.0   1.0		    16.7
<tr><td class='awrc'>USER10</td><td class='awrc'>IOPS</td>
DFS lock handle 	     266			    .4	  .4  45.1  54.1
DLM cross inst call compl     64	      21.9   1.6   4.7	 3.1   3.1  65.6
Data file init write	      82					   100.0
Disk file Mirror Read	     889			    .2	42.9  39.6  17.3
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73453</td><td align="right" class='awrc'>73455</td><td align="right" class='awrc'>133,665</td><td align="right" class='awrc'>7.51</td></tr>
Disk file operations I/O     579   2.4	 5.9  13.1  10.4  11.6	32.8  20.2   3.6
GCR CSS group query	      18	66.7  27.8   5.6
GCR CSS group update	      18	77.8  11.1  11.1
</table><p />
IMR slave acknowledgement   1845	 9.8  12.4   5.9  19.3	13.9  24.9  13.7
IPC group service call	     469	  .2  14.3  37.1  38.8	 7.7   1.5    .4
IPC send completion sync     628	 1.8  82.0  10.0   2.5	 1.6   1.1   1.0
<hr align="left" width="20%" /><p />
KJC: Wait for msg sends t   1408	 1.3   1.3  24.9  40.7	11.8   8.2  11.8
KSV master wait 	    1578    .1	 7.0  16.4   3.5   8.2	22.4   4.8  37.6
<a class="awr" href="#30">Back to Segment Statistics</a>
LGWR all worker groups	    1288					   100.0
<br /><a class="awr" href="#top">Back to Top</a><p />
LGWR any worker group	   26.5K	  .0	.0    .1    .2	  .4	.7  98.6
LGWR wait for redo copy       81   4.9	 2.5	     8.6  14.8	18.5  19.8  30.9
<p />
LGWR worker group orderin   7419    .3	  .4	.1    .5   1.4	 1.2   1.4  94.8
PGA memory operation	     391  41.2	24.8  19.2   3.8    .5	 1.3   3.1   6.1
PX Deq: Join ACK	      13				       7.7  92.3
<a class="awr" name="31"></a>
PX Deq: Signal ACK EXT	      13	      53.8		30.8   7.7   7.7
PX Deq: Slave Session Sta     21	28.6   4.8		 9.5  42.9  14.3
PX Deq: reap credit	   10.7K	 6.2  80.7   9.0   2.5	  .8	.5    .2
<h2 class="awr">
SQL*Net message to client     57  75.4	21.1	     1.8	 1.8
Sync ASM rebalance	      54	38.9   1.9   1.9	 3.7   9.3  44.4
asynch descriptor resize      21  90.5	 4.8		   4.8
buffer busy waits	   28.9K	  .3	.7    .3   2.0	 2.4   2.3  91.9
control file parallel wri    446					   100.0
control file sequential r   4209	 6.2  13.0   1.0   2.8	33.0  30.7  13.3
Dictionary Cache Statistics
cursor: pin S		       9					   100.0
datafile move cleanup dur     41				19.5  65.9  14.6
db file async I/O submit   14.7K  93.2	 1.9   1.8   1.6    .8	  .4	.2    .1
</h2>
db file parallel read	  252.3K				  .0   2.0  98.0
db file parallel write	   59.5K	  .1   1.4   8.4   9.0	11.6  14.3  55.2
db file scattered read	      44				22.7  25.0  52.3
<ul>
db file sequential read     1.1M			    .0	 1.5  37.0  61.4
db file single write	      82					   100.0
direct path sync	      82			  79.3	17.1   3.7
direct path write	       8					   100.0
<li class="awr"><a class="awr" href="#4700">Dictionary Cache Stats</a></li>
direct path write temp	      30					   100.0
enq: CF - contention	     121				      10.7  89.3
enq: CR - block range reu  54.8K		.0    .1    .1	  .3  17.0  82.5
<li class="awr"><a class="awr" href="#4800">Dictionary Cache Stats (RAC)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
enq: DW - contention	       4					   100.0
enq: FB - contention	       6				      33.3  66.7
enq: HW - contention	     392		.5    .8   3.3	 5.6   6.6  83.2
<a class="awr" name="4700"></a>
enq: PS - contention	      12				      25.0  75.0
enq: PW - flush prewarm b      1					   100.0
enq: RO - fast object reu     30				      33.3  66.7
enq: SM -  contention	       2				      50.0  50.0
<h3 class="awr">Dictionary Cache Stats</h3>
enq: TA - contention	       2				     100.0
enq: TD - KTF dump entrie      2				      50.0  50.0

<ul>
Wait Event Histogram			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
<li class="awr"> &quot;Pct Misses&quot;  should be very low (&lt; 2% in most cases) </li>
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)
<li class="awr"> &quot;Final Usage&quot; is the number of cache entries being used</li>

						 % of Total Waits
				 -----------------------------------------------
			   Total
</ul>
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
enq: TK - Auto Task Seria      1					   100.0
enq: TM - contention	       1					   100.0
enq: TO - contention	       3					   100.0
enq: TT - contention	       3				      33.3  66.7
enq: US - contention	   22.9K	 1.6   2.6   1.5   8.8	12.3   9.2  63.9
<table border="0" class="tdiff" summary="This table displays dictionary cache statistics. Get requests, % misses, scan requests, final usage, etc. are displayed for each cache"><tr><th class="awrbg" scope="col">Cache</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Scan Reqs</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Mod Reqs</th><th class="awrbg" scope="col">Final Usage</th></tr>
enq: WF - contention	      14				       7.1  92.9
enq: WT - contention	       7				      14.3  85.7
gc buffer busy release	       8					   100.0
gc cr block 2-way	    5868		      .2    .6	  .7  29.0  69.6
<tr><td scope="row" class='awrc'>dc_awr_control</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>23.53</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td></tr>
gc cr block busy	      36					   100.0
gc cr block congested	      13					   100.0
gc cr block lost	       2					   100.0
gc cr disk read 	      33				 6.1  54.5  39.4
gc cr grant 2-way	  192.5K		      .3   1.1	 3.2  45.9  49.4
<tr><td scope="row" class='awrnc'>dc_global_oids</td><td align="right" class='awrnc'>1,454</td><td align="right" class='awrnc'>1.65</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>209</td></tr>
gc cr grant busy	    3543		.1	    .1	  .3  13.4  86.2
gc cr grant congested	     471					   100.0
gc cr multi block grant   117.3K		.0    .0    .1	  .2   2.5  97.2
gc cr multi block mixed    15.4K		      .0    .3	  .2	.3  99.2
<tr><td scope="row" class='awrc'>dc_histogram_data</td><td align="right" class='awrc'>6,347</td><td align="right" class='awrc'>2.62</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3,137</td></tr>
gc current block 2-way	   36.6K		      .1    .6	  .5  16.2  82.7
gc current block busy	   14.7K		      .2    .8	  .6  34.5  64.0
gc current block congeste    133					   100.0
gc current block lost	       3					   100.0
gc current grant 2-way	  256.8K		      .4   1.0	 3.4  47.4  47.8
<tr><td scope="row" class='awrnc'>dc_histogram_defs</td><td align="right" class='awrnc'>8,278</td><td align="right" class='awrnc'>5.35</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5,320</td></tr>
gc current grant busy	    5367		.1    .1    .2	  .4  16.2  83.0
gc current grant congeste    578			    .2		    99.8
gc current grant read-mos  72.9K		.0    .0    .1	  .1   3.2  96.6
gc current multi block re      6					   100.0
gcs drm freeze in enter s     21					   100.0
<tr><td scope="row" class='awrc'>dc_objects</td><td align="right" class='awrc'>4,682</td><td align="right" class='awrc'>1.15</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2,102</td></tr>
gcs log flush sync	    1652	  .5   3.0   7.6  16.5	14.8  17.3  40.3
gcs remastering wait for      10	10.0			      10.0  80.0
ges enter server mode	   12.8K  94.5	 2.5   1.3   1.1    .3	  .2	.1    .1
ges inquiry response	      51		     2.0	      23.5  74.5
<tr><td scope="row" class='awrnc'>dc_props</td><td align="right" class='awrnc'>496</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td></tr>
ges ipc enter server mode    288  83.3	12.2   2.1   1.4   1.0
ges lms sync during dynam     35				 2.9   2.9  94.3
ges resource directory to      4 100.0
ges2 LMON to wake up LMD      30	 3.3  26.7   6.7  16.7	20.0  23.3   3.3
<tr><td scope="row" class='awrc'>dc_rollback_segments</td><td align="right" class='awrc'>5,167,189</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>321</td></tr>
kfk: async disk IO	      82				23.2  18.3  58.5
kjctssqmg: quick message     291	14.1  20.6   3.8   2.7	 2.7  17.2  38.8
ksxr poll remote instance  44.2K	  .2  86.3   6.7   4.9	 1.2	.5    .3
latch free		    2966	 7.7   3.7   9.1  18.9	20.5  18.0  22.1
<tr><td scope="row" class='awrnc'>dc_segments</td><td align="right" class='awrnc'>66,056</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>549</td></tr>
latch: MGA shared context      2			 100.0
latch: cache buffers chai     54	11.1	     3.7  16.7	 9.3  25.9  33.3
latch: cache buffers lru     590	12.2	.8   4.7  17.8	19.8  18.1  26.4
latch: call allocation	       1			       100.0
latch: checkpoint queue l     11	36.4		  18.2	18.2  18.2   9.1
<tr><td scope="row" class='awrc'>dc_sequences</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>8.33</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>5</td></tr>
latch: enqueue hash chain  13.3K    .0	10.7   1.6   5.0  18.4	22.1  20.1  22.0
latch: gc element	     360	 6.4	.6   5.8  10.8	19.7  19.4  37.2
latch: gcs resource hash     450	10.0   4.4  11.3  14.2	17.1  19.1  23.8
latch: ges resource hash    1507	 7.8   1.9  11.8  19.9	21.8  18.7  18.1
<tr><td scope="row" class='awrnc'>dc_tablespaces</td><td align="right" class='awrnc'>270</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td></tr>
latch: messages 	      29	20.7   3.4  13.8  13.8	24.1  10.3  13.8
latch: object queue heade     92	 3.3   2.2   2.2  12.0	17.4  22.8  40.2
latch: redo allocation	     174	12.6	.6   8.0  17.2	23.0  16.1  22.4
latch: redo writing	      11	 9.1			27.3  27.3  36.4
latch: shared pool	       1				     100.0
<tr><td scope="row" class='awrc'>dc_users</td><td align="right" class='awrc'>171</td><td align="right" class='awrc'>1.17</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>231</td></tr>
latch: undo global data      146	12.3   2.7   4.1  25.3	21.9  16.4  17.1
libcache interrupt action   1075  95.1	 3.2	.7    .7    .4		.1
library cache lock	       6					   100.0
library cache pin	       5					   100.0
lock deadlock retry	       3	66.7  33.3
<tr><td scope="row" class='awrnc'>outstanding_alerts</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td></tr>
log file parallel write      31K					   100.0

Wait Event Histogram			   DB/Inst: P30DB/p30db1  Snaps: 68-69
</table><p />
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
<hr align="left" width="20%" /><p />
   value of null is truly 0
-> Ordered by Event (idle events last)

						 % of Total Waits
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
<br /><a class="awr" href="#top">Back to Top</a><p />
log file sequential read     312	       3.2  15.1   2.2	 1.6  16.0  61.9
log file sync		       6					   100.0
name-service call wait	       3					   100.0
oracle thread bootstrap        6					   100.0
<a class="awr" name="4800"></a>
os thread creation	       6					   100.0
reliable message	   21.8K					   100.0
row cache lock		      23				       8.7  91.3
row cache mutex 	     276    .7	15.2   8.7  10.5   5.1	 3.6   3.6  52.5
<h3 class="awr">Dictionary Cache Stats (RAC)</h3>
undo segment extension	     189	18.0  11.6    .5   1.6	 1.1	.5  66.7
undo_retention publish re      2 100.0
wait list latch free	       4					   100.0

AQPC idle		      20					   100.0
ASM background timer	    2088				 9.6   7.7  82.7
ASM cluster membership ch    352					   100.0
DIAG idle wait		    7695		      .4    .6	  .4   1.2  97.5
<p />
Data Guard: Gap Manager       10					   100.0
Data Guard: Timer	       1					   100.0
GCR sleep		    4098					   100.0
		  No data exists for this section of the report.
LGWR worker group idle	   14.5K  13.1	10.1   3.1   7.8  19.3	 8.5   4.3  33.8
OFS idle		     205					   100.0
PING			     564		.7  20.6  21.8	13.3   8.7  34.9
<p />
PX Deq Credit: send blkd      65				 1.5  75.4  23.1
PX Deq: Execute Reply	      13				 7.7   7.7  84.6
PX Deq: Execution Msg	      24				 4.2   8.3  87.5
PX Deq: Msg Fragment	      60   6.7	11.7   1.7	   3.3	 1.7  28.3  46.7
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
PX Deq: Parse Reply	      13				      23.1  76.9
PX Idle Wait		       8					   100.0
REPL Capture/Apply: RAC A     10					   100.0
RMA: IPC0 completion sync    670	32.2  56.1   6.0   4.3	 1.0	      .3
<br /><a class="awr" href="#top">Back to Top</a><p />
SCM slave idle		    6160					   100.0
SQL*Net message from clie     57				15.8  50.9  33.3
Space Manager: slave idle   3601	 1.3	.4   1.1   2.2	 5.4   3.1  86.5
Streams AQ: qmn coordinat     45   2.2				31.1  13.3  53.3
<p />
Streams AQ: qmn slave idl     23   4.3					    95.7
class slave wait	    8082    .1	 3.7	.4   1.5   2.9	 1.4	.6  89.6
dispatcher timer	      10					   100.0
<a class="awr" name="32"></a>
gcs remote message	    1.1M	 2.0   3.2   9.1  12.2	14.6  21.7  37.2
gcs yield cpu		   42.4K    .0	 2.6	.2    .2    .1	  .1	.1  96.6
ges remote message	  194.7K	 1.3   3.6    .6    .6	 7.7  18.3  67.9
heartbeat monitor sleep        3  33.3	      33.3		      33.3
<h2 class="awr">
heartbeat redo informer      615					   100.0
lreg timer		     205					   100.0
pman timer		     205					   100.0
pmon timer		     410					   100.0
Library Cache Statistics
rdbms ipc message	  168.7K    .0	 5.1	.4   1.3   4.7	 4.1  10.9  73.5
smon timer		      22			   4.5	       4.5  90.9
wait for unread message o    943					   100.0
watchdog main loop	     820					   100.0
</h2>
			  ------------------------------------------------------


Wait Event Histogram (up to 64 us)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
<ul>
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: total waits for all wait classes, including Idle
<li class="awr"><a class="awr" href="#4900">Library Cache Activity</a></li>
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

<li class="awr"><a class="awr" href="#5000">Library Cache Activity (RAC)</a></li>
						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1us
</ul>
Event			  - 64us  <1us	<2us  <4us  <8us <16us <32us <64us >=64u
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	    5844			   2.2	83.2   9.8   4.8
ASM IO for non-blocking p  61.8K		     1.0  63.0	22.7   6.3   7.1
<a class="awr" href="#top">Back to Top</a><p />
ASM background starting        1		   100.0
ASM file metadata operati   2119		.2  11.5    .8	39.9  11.3  36.3
AWR Flush		       4		   100.0
CGS wait for IPC msg	    6432			  11.5	76.3   8.4   3.8
<a class="awr" name="4900"></a>
CSS initialization	      15			   3.1	40.6   3.1  53.1
CSS operation: action	      19			  20.9	 1.2	    77.9
CSS operation: query	      80		    67.7  13.5	 1.0   1.0  16.7
DLM cross inst call compl     15				21.9   1.6  76.6
<h3 class="awr">Library Cache Activity</h3>
Disk file operations I/O     184		     2.4   5.9	13.1  10.4  68.2
GCR CSS group query	      18			  66.7	27.8   5.6
<ul>
GCR CSS group update	      18			  77.8	11.1  11.1
IMR slave acknowledgement    519			   9.8	12.4   5.9  71.9
IPC group service call	     242			    .2	14.3  37.1  48.4
IPC send completion sync     589			   1.8	82.0  10.0   6.2
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
KJC: Wait for msg sends t    387			   1.3	 1.3  24.9  72.5
KSV master wait 	     426		      .1   7.0	16.4   3.5  73.0
LGWR any worker group	      33			    .0	  .0	.1  99.9
LGWR wait for redo copy       13		     4.9   2.5	       8.6  84.0
</ul>
LGWR worker group orderin     92		      .3    .4	  .1	.5  98.8
PGA memory operation	     348		    41.2  24.8	19.2   3.8  11.0
PX Deq: Signal ACK EXT	       7				53.8	    46.2
PX Deq: Slave Session Sta      7			  28.6	 4.8	    66.7
PX Deq: reap credit	   10.3K			   6.2	80.7   9.0   4.0
<table border="0" class="tdiff" summary="This table displays library cache statistics. Get requests, % misses, pin request, % miss, reloads, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th></tr>
SQL*Net message to client     56		    75.4  21.1	       1.8   1.8
Sync ASM rebalance	      23			  38.9	 1.9   1.9  57.4
asynch descriptor resize      20		    90.5   4.8		     4.8
buffer busy waits	     381			    .3	  .7	.3  98.7
control file sequential r    852			   6.2	13.0   1.0  79.8
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>226</td><td align="right" class='awrc'>0.88</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
db file async I/O submit   14.5K		.4  92.8   1.9	 1.8   1.6   1.6
db file parallel write	    5884			    .1	 1.4   8.4  90.1
enq: CR - block range reu     70				  .0	.1  99.9
enq: HW - contention	       5				  .5	.8  98.7
enq: US - contention	    1316			   1.6	 2.6   1.5  94.2
<tr><td scope="row" class='awrnc'>CLUSTER</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
gc cr block 2-way	       9					.2  99.8
gc cr grant 2-way	     670					.3  99.7
gc cr grant busy	       2				  .1	    99.9
gc cr multi block grant       34				  .0	.0 100.0
gc cr multi block mixed        4					.0 100.0
gc current block 2-way	      33					.1  99.9
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
gc current block busy	      24					.2  99.8
gc current grant 2-way	    1007					.4  99.6
gc current grant busy	       9				  .1	.1  99.8
gc current grant read-mos     38				  .0	.0  99.9
<tr><td scope="row" class='awrnc'>HINTSET OBJECT</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>15.15</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>15.15</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
gcs log flush sync	     184			    .5	 3.0   7.6  88.9
gcs remastering wait for       1			  10.0		    90.0
ges enter server mode	   12.8K		.4  94.0   2.5	 1.3   1.1    .7
ges inquiry response	       1				       2.0  98.0
ges ipc enter server mode    285		    83.3  12.2	 2.1   1.4   1.0
<tr><td scope="row" class='awrc'>INDEX</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>15.38</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td></tr>
ges resource directory to      4	      25.0  75.0
ges2 LMON to wake up LMD      11			   3.3	26.7   6.7  63.3
kjctssqmg: quick message     112			  14.1	20.6   3.8  61.5
ksxr poll remote instance  41.1K			    .2	86.3   6.7   6.8
latch free		     607			   7.7	 3.7   9.1  79.5
<tr><td scope="row" class='awrnc'>SCHEMA</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
latch: cache buffers chai      8			  11.1	       3.7  85.2
latch: cache buffers lru     105			  12.2	  .8   4.7  82.2
latch: checkpoint queue l      4			  36.4		    63.6
latch: enqueue hash chain   2312		      .0  10.7	 1.6   5.0  82.6
latch: gc element	      46			   6.4	  .6   5.8  87.2
<tr><td scope="row" class='awrc'>SQL AREA</td><td align="right" class='awrc'>662</td><td align="right" class='awrc'>10.27</td><td align="right" class='awrc'>355,993</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>125</td><td align="right" class='awrc'>1</td></tr>

Wait Event Histogram (up to 64 us)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
<tr><td scope="row" class='awrnc'>SQL AREA BUILD</td><td align="right" class='awrnc'>161</td><td align="right" class='awrnc'>86.34</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

<tr><td scope="row" class='awrc'>SQL AREA STATS</td><td align="right" class='awrc'>126</td><td align="right" class='awrc'>48.41</td><td align="right" class='awrc'>126</td><td align="right" class='awrc'>48.41</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1us
Event			  - 64us  <1us	<2us  <4us  <8us <16us <32us <64us >=64u
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
<tr><td scope="row" class='awrnc'>TABLE/PROCEDURE</td><td align="right" class='awrnc'>560</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>3,211</td><td align="right" class='awrnc'>8.16</td><td align="right" class='awrnc'>178</td><td align="right" class='awrnc'>0</td></tr>
latch: gcs resource hash     116			  10.0	 4.4  11.3  74.2
latch: ges resource hash     324			   7.8	 1.9  11.8  78.5
latch: messages 	      11			  20.7	 3.4  13.8  62.1
latch: object queue heade      7			   3.3	 2.2   2.2  92.4
latch: redo allocation	      37			  12.6	  .6   8.0  78.7
latch: redo writing	       1			   9.1		    90.9
latch: undo global data       28			  12.3	 2.7   4.1  80.8
<tr><td scope="row" class='awrc'>TRIGGER</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>66.67</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
libcache interrupt action   1070	       8.3  86.8   3.2	  .7	.7    .5
lock deadlock retry	       3			  66.7	33.3
log file sequential read      57				 3.2  15.1  81.7
row cache mutex 	      97		      .7  15.2	 8.7  10.5  64.9
</table><p />
undo segment extension	      57			  18.0	11.6	.5  69.8
undo_retention publish re      2		   100.0
			  ------------------------------------------------------

<hr align="left" width="20%" /><p />

Wait Event Histogram (up to 32 ms)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
<a class="awr" href="#32">Back to Library Cache Statistics</a>
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
<br /><a class="awr" href="#top">Back to Top</a><p />
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
<a class="awr" name="5000"></a>
				 -----------------------------------------------
			   Waits
			    1ms
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
<h3 class="awr">Library Cache Activity (RAC)</h3>
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	      11  99.8	  .1	.0    .0
ASM IO for non-blocking p    389  99.4	  .4	.1    .0    .0
<ul>
ASM file metadata operati    577  82.1	 1.1   3.3   6.6   4.7	  .4   1.2    .6
CGS wait for IPC msg	       9  99.9	  .1	      .0
CSS initialization	      16  50.0				50.0
CSS operation: action	      66  23.3	11.6  55.8   4.7   3.5	 1.2
</ul>
CSS operation: data query     13  27.8	22.2  33.3  16.7
CSS operation: data updat     20	65.0  35.0
CSS operation: query	      16  83.3	 1.0  13.5   1.0   1.0
DFS lock handle 	     144  45.9	37.6  14.3   2.3
DLM cross inst call compl     35  34.4	 1.6			48.4   4.7  10.9
Data file init write	      44				25.6  28.0  46.3
<table border="0" class="tdiff" summary="This table displays library cache statistics. Ges lock requests, GES pin requests, GES pin releases, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
Disk file Mirror Read	     154  82.7	12.1   1.8    .9    .9	  .8	.8
Disk file operations I/O      21  96.4	 2.8	.7	    .2
IMR slave acknowledgement    253  86.3	10.5   1.9    .6    .3	  .2	.3
IPC group service call	       2  99.6	  .4
IPC send completion sync       6  99.0	  .5	.5
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>205</td><td align="right" class='awrc'>205</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
KJC: Wait for msg sends t    165  88.2	 6.3   2.7   1.9    .7	  .1	      .1
KSV master wait 	     575  62.4	 1.6   6.6  14.5  10.4	  .9   2.4   1.1
LGWR all worker groups	     855		.1   2.5  11.4	28.0  24.5  33.6
LGWR any worker group	   21.9K   1.4	 1.2   3.8  24.3  18.4	15.8  19.0  16.1
LGWR wait for redo copy       25  69.1	19.8   6.2   4.9
<tr><td scope="row" class='awrnc'>CLUSTER</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
LGWR worker group orderin   6783   5.2	 1.9   4.0  43.8  25.7	 8.5   7.5   3.4
PGA memory operation	      24  93.9	 4.9   1.3
PX Deq: Join ACK	      12   7.7	38.5  15.4  23.1  15.4
PX Deq: Signal ACK EXT	       1  92.3	 7.7
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
PX Deq: Slave Session Sta      3  85.7	 9.5   4.8
PX Deq: reap credit	      19  99.8	  .1	.1    .0
Sync ASM rebalance	      14  55.6	 7.4   1.9   1.9	 7.4   7.4  18.5
buffer busy waits	   21.4K   8.1	 2.4   3.2   6.7  19.0	20.1  22.6  17.9
control file parallel wri    370		    13.9  37.7	14.8  16.6  17.0
<tr><td scope="row" class='awrnc'>HINTSET OBJECT</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
control file sequential r    559  86.7	10.9   1.9    .2    .0	  .1	.0    .0
cursor: pin S		       9	     100.0
datafile move cleanup dur      6  85.4	12.2   2.4
db file async I/O submit      20  99.9	  .1	.0
db file parallel read	  217.1K   2.0	18.1   6.5  10.1  32.9	 6.2  12.3  12.0
<tr><td scope="row" class='awrc'>INDEX</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
db file parallel write	   32.1K  44.8	15.2  13.5  10.1   5.5	 3.5   6.2   1.1
db file scattered read	      20  47.7	18.2   2.3   4.5  15.9	       4.5   6.8
db file sequential read   656.2K  38.6	17.3   3.2  19.2  10.9	 1.9   5.5   3.4
db file single write	      76		    22.0  28.0	15.9  26.8   7.3
<tr><td scope="row" class='awrnc'>TABLE/PROCEDURE</td><td align="right" class='awrnc'>735</td><td align="right" class='awrnc'>2,357</td><td align="right" class='awrnc'>2,357</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
direct path write	       6		    50.0	25.0	    25.0
direct path write temp	      30		    53.3  46.7
enq: CF - contention	     107  10.7	70.2  14.0   4.1		      .8
enq: CR - block range reu  43.9K  17.5	46.5  12.5   3.6   4.5	 5.6   7.4   2.4
enq: DW - contention	       4	50.0  50.0
<tr><td scope="row" class='awrc'>TRIGGER</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
enq: FB - contention	       4  33.3	33.3  33.3
enq: HW - contention	     281  16.8	 8.9   3.1   9.2  16.6	18.6  15.3  11.5
enq: PS - contention	       9  25.0	25.0  50.0
enq: PW - flush prewarm b      1       100.0
</table><p />
enq: RO - fast object reu     19  33.3	30.0  26.7   3.3   3.3		     3.3
enq: SM -  contention	       1  50.0	      50.0
enq: TD - KTF dump entrie      1  50.0	50.0
enq: TK - Auto Task Seria      1       100.0
enq: TM - contention	       1				     100.0
<hr align="left" width="20%" /><p />
enq: TO - contention	       3	33.3  33.3  33.3
enq: TT - contention	       2  33.3	33.3  33.3
enq: US - contention	   13.5K  36.1	 7.5   5.0   6.0  19.1	12.7   8.7   5.0
enq: WF - contention	      13   7.1	42.9  50.0
<a class="awr" href="#32">Back to Library Cache Statistics</a>
enq: WT - contention	       6  14.3	57.1  28.6
gc buffer busy release	       6		    12.5  25.0	12.5  25.0  25.0

Wait Event Histogram (up to 32 ms)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
<br /><a class="awr" href="#top">Back to Top</a><p />
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
<p />
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

<a class="awr" name="33"></a>
						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1ms
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
<h2 class="awr">
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
gc cr block 2-way	    4082  30.4	48.8  14.7   5.2    .8	  .1	.0
gc cr block busy	      22	       2.8   8.3   2.8	30.6  16.7  38.9
gc cr block congested	      13	       7.7  53.8  23.1	15.4
Memory Statistics
gc cr disk read 	      13  60.6	21.2  15.2	   3.0
gc cr grant 2-way	   95.1K  50.6	36.5  10.5   1.9    .5	  .1	.0
gc cr grant busy	    3052  13.8	55.7  22.8   5.4   1.4	  .6	.2    .1
gc cr grant congested	     471	  .2  29.5  49.7  15.9	 4.7
</h2>
gc cr multi block grant     114K   2.8	43.7  42.3   9.2   1.7	  .3	.0    .0
gc cr multi block mixed    15.3K    .8	19.6  53.9  21.8   2.6	 1.2	.1    .0
gc current block 2-way	   30.2K  17.3	60.2  18.8   2.9    .6	  .1	.0
<ul>
gc current block busy	    9433  36.0	49.6  12.2   1.6    .4	  .2	.0    .0
gc current block congeste    133	      18.0  55.6  21.8	 4.5
gc current grant 2-way	  122.7K  52.2	35.4  10.1   1.8    .4	  .1	.0
gc current grant busy	    4453  17.0	54.8  22.2   4.4   1.1	  .3	.1    .0
<li class="awr"><a class="awr" href="#8500">Memory Dynamic Components</a></li>
gc current grant congeste    577    .2	      29.4  50.3  14.9	 4.7	.5
gc current grant read-mos  70.4K   3.4	44.8  41.7   8.8   1.1	  .2	.0    .0
gc current multi block re      6	33.3  33.3  33.3
gcs log flush sync	     666  59.7	18.5  11.4   7.6   1.9	  .7	.2
<li class="awr"><a class="awr" href="#8600">Memory Resize Operations Summary</a></li>
gcs remastering wait for       1  20.0				      10.0  70.0
ges enter server mode	      15  99.9	  .0	.0    .0    .0
ges inquiry response	      38  25.5	66.7   3.9   3.9
ges lms sync during dynam     31   5.7	 5.7   8.6   5.7   2.9	25.7  40.0   5.7
<li class="awr"><a class="awr" href="#8650">Memory Resize Ops</a></li>
ges2 LMON to wake up LMD       1  96.7	 3.3
kfk: async disk IO	      46  41.5	 8.5	    19.5  14.6	 6.1   7.3   2.4
kjctssqmg: quick message     113  61.2	28.9   8.9   1.0
ksxr poll remote instance    115  99.7	  .2	.0    .0    .0
<li class="awr"><a class="awr" href="#7300">Process Memory Summary</a></li>
latch free		     655  77.9	12.1   7.8   1.6    .5
latch: cache buffers chai     18  66.7	20.4   9.3   3.7
latch: cache buffers lru     156  73.6	17.5   5.9   2.5    .5
<li class="awr"><a class="awr" href="#5900">SGA Memory Summary</a></li>
<li class="awr"><a class="awr" href="#6100">SGA breakdown difference by Pool and Name</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8500"></a>
<h3 class="awr">Memory Dynamic Components</h3>
<ul>
<li class="awr"> Min/Max sizes since instance startup </li>
<li class="awr"> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred </li>
<li class="awr"> ordered by Component </li>
</ul>
<table border="0" class="tdiff" summary="This table displays memory dynamic component statistics. Begin snap size, current size, min size, etc. are displayed for each component"><tr><th class="awrbg" scope="col">Component</th><th class="awrbg" scope="col">Begin Snap Size (Mb)</th><th class="awrbg" scope="col">Current Size (Mb)</th><th class="awrbg" scope="col">Min Size (Mb)</th><th class="awrbg" scope="col">Max Size (Mb)</th><th class="awrbg" scope="col">Oper Count</th><th class="awrbg" scope="col">Last Op Typ/Mod</th></tr>
<tr><td scope="row" class='awrc'>ASM Buffer Cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 16K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT 2K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 32K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT 4K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 8K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT buffer cache</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>7,936.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>0</td><td class='awrc'>GRO/DEF</td></tr>
<tr><td scope="row" class='awrnc'>Data Transfer Cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>In Memory RO Extension Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>In Memory RW Extension Area</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>In-Memory Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>KEEP buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>PGA Target</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
latch: checkpoint queue l      1  90.9	 9.1
latch: enqueue hash chain   2928  78.0	13.5   6.1   1.8    .5	  .1
latch: gc element	     134  62.8	18.6  12.5   4.2   1.7	  .3
latch: gcs resource hash     107  76.2	14.0   6.2   2.0    .9	  .7
latch: ges resource hash     273  81.9	10.7   5.1   1.8    .3	  .1
latch: messages 	       4  86.2	 6.9   3.4   3.4
latch: object queue heade     37  59.8	27.2   8.7   3.3   1.1
latch: redo allocation	      39  77.6	17.2   3.4    .6    .6	  .6
latch: redo writing	       4  63.6	27.3   9.1
latch: undo global data       25  82.9	 8.9   6.8    .7    .7
library cache lock	       6	33.3  50.0  16.7
library cache pin	       5	80.0  20.0
log file parallel write    18.5K		     1.0   9.7	19.9  29.1  40.3
log file sequential read     192  38.1	23.7  15.1  14.7   2.6	 3.8   1.6    .3
log file sync		       3			  16.7	16.7  16.7  50.0
name-service call wait	       3       100.0
oracle thread bootstrap        4				16.7  50.0  33.3
os thread creation	       6	16.7  33.3  33.3  16.7
reliable message	   21.7K	  .1   1.4  69.8  26.8	 1.5	.3    .2
row cache lock		      21   8.7	43.5  30.4  17.4
row cache mutex 	     145  47.5	 2.9   3.3   1.1   2.2	42.4	.7
undo segment extension	     107  33.3	       1.6		33.9  21.2  10.1
wait list latch free	       4	     100.0
			  ------------------------------------------------------


Wait Event Histogram (up to 2 sec)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   ms is milliseconds
   s is 1024 milliseconds (approximately 1 second)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			   64ms
Event			   to 2s <32ms <64ms <1/8s <1/4s <1/2s	 <1s   <2s  >=2s
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
ASM file metadata operati     20  99.4	  .5	.1    .1
DLM cross inst call compl      7  89.1	 6.3   3.1   1.6
Data file init write	      38  53.7	45.1   1.2
KJC: Wait for msg sends t      1  99.9			    .1
KSV master wait 	      18  98.9	  .8	.2    .1
LGWR all worker groups	     433  66.4	25.2   7.5    .9
LGWR any worker group	    4269  83.9	13.9   2.1    .1
LGWR worker group orderin    253  96.6	 3.4	.1
Sync ASM rebalance	      10  81.5	 5.6   9.3   3.7
buffer busy waits	    5194  82.1	12.5   2.3   1.7   1.2	  .2
control file parallel wri     76  83.0	12.1   4.3    .7
control file sequential r      1 100.0	  .0
db file parallel read	   30.2K  88.0	11.4	.6
db file parallel write	     669  98.9	 1.1	.0
db file scattered read	       3  93.2	 6.8
db file sequential read    38.9K  96.6	 3.4	.1
db file single write	       6  92.7	 4.9   2.4
direct path write	       2  75.0	12.5  12.5
enq: CF - contention	       1  99.2		      .8
enq: CR - block range reu   1305  97.6	 2.0	.2    .1    .1	  .0
enq: HW - contention	      45  88.5	 6.6	.8   2.3   1.8
enq: RO - fast object reu      1  96.7	 3.3
enq: US - contention	    1137  95.0	 3.6	.5    .5    .4	  .0
gc buffer busy release	       2  75.0	12.5  12.5
gc cr block busy	      14  61.1	30.6   8.3
gc cr block lost	       2			       100.0
gc cr grant busy	       3  99.9		.1
gc cr multi block grant        9 100.0		.0    .0
gc cr multi block mixed        5 100.0			    .0	  .0
gc current block busy	       3 100.0	  .0	.0
gc current block lost	       3			  33.3	66.7
gc current grant busy	       2 100.0	  .0	.0
gc current grant read-mos      6 100.0	  .0	.0
gcs drm freeze in enter s     21	      90.5   9.5
gcs remastering wait for       7  30.0	      20.0  50.0
ges lms sync during dynam      2  94.3	 5.7
kfk: async disk IO	       2  97.6	 2.4
log file parallel write    12.5K  59.7	32.6   7.2    .6    .0
log file sequential read       1  99.7	  .3
log file sync		       3  50.0	33.3  16.7
oracle thread bootstrap        2  66.7	33.3
reliable message	      45  99.8	  .2	.0    .0
undo segment extension	      19  89.9	 7.4   1.6   1.1
			  ------------------------------------------------------


Wait Event Histogram (up to 2 min)	   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------


Wait Event Histogram (up to 1 hr)	   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------


Service Statistics			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> ordered by DB Time

							   Physical	 Logical
Service Name		      DB Time (s)   DB CPU (s)	  Reads (K)    Reads (K)
---------------------------- ------------ ------------ ------------ ------------
p30db.example.com		   10,779	   895	      4,230	   7,101
SYS$BACKGROUND				0	     0		  1	      95
SYS$USERS				0	     0		  0	       0
p30dbXDB				0	     0		  0	       0
			  ------------------------------------------------------

Service Wait Class Stats		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Wait Class info for services in the Service Statistics section.
-> Total Waits and Time Waited displayed for the following wait
   classes:  User I/O, Concurrency, Administrative, Network
-> Time Waited (Wt Time) in seconds

Service Name
<tr><td scope="row" class='awrnc'>RECYCLE buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
----------------------------------------------------------------
 User I/O  User I/O  Concurcy  Concurcy     Admin     Admin   Network	Network
Total Wts   Wt Time Total Wts	Wt Time Total Wts   Wt Time Total Wts	Wt Time
--------- --------- --------- --------- --------- --------- --------- ---------
<tr><td scope="row" class='awrc'>SGA Target</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
p30db.example.com
  1380966      8118	29229	    741 	0	  0	   38	      0
SYS$BACKGROUND
    68319	  5	 1145	      1 	0	  0	  467	      0
<tr><td scope="row" class='awrnc'>Shared IO Pool</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
SYS$USERS
	0	  0	    0	      0 	0	  0	    0	      0
			  ------------------------------------------------------

Top 10 Channel Waits			   DB/Inst: P30DB/p30db1  Snaps: 68-69
<tr><td scope="row" class='awrc'>java pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
-> Top 10 Channel Waits by wait time

Channel
----------------------------------------------------------------
	       Total
<tr><td scope="row" class='awrnc'>large pool</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
		Wait
      Waits Time (s)  Avg Wait
----------- -------- ---------
kxfp control signal channel
	  7	   0  903.29us
GEN0 ksbxic channel
<tr><td scope="row" class='awrc'>memoptimize buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
	 10	   0	1.66ms
obj broadcast channel
	 10	   0	2.77ms
RBR channel
     21,733	  85	3.90ms
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,504.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>SHR/DEF</td></tr>
			  ------------------------------------------------------


Top Process Types by Wait Class 	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> This table displays top process types ordered by wait class

<tr><td scope="row" class='awrc'>streams pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
Proce Description		     Wait Class Type  Wait Time (sec
----- ------------------------------ ---------------- --------------
      Others (foregrounds + unclassi User I/O		     8,145.4
LG    Log Writer Slave		     System I/O 	       982.2
<tr><td scope="row" class='awrnc'>unified pga pool</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
      Others (foregrounds + unclassi Concurrency	       744.1
      Others (foregrounds + unclassi Cluster		       642.1
      Others (foregrounds + unclassi Other		       590.3
LGWR  Redo etc. 		     Other		       471.0
</table><p />
DBW0  db writer process 0	     System I/O 	       201.9
LG    Log Writer Slave		     Other			53.1
      Others (foregrounds + unclassi Configuration		11.0
CKPT  checkpoint		     System I/O 		 6.2
<hr align="left" width="20%" /><p />
O     ASM Connection Pool	     Other			 3.9
LM    global cache service process   Other			 2.3
      Others (foregrounds + unclassi System I/O 		 2.3
SMON  System Monitor Process	     Other			 2.2
<a class="awr" href="#33">Back to Memory Statistics</a>
M     MMON slave class 1	     Cluster			 2.2
DBW0  db writer process 0	     User I/O			 2.1
M     MMON slave class 1	     User I/O			 1.8
MMON  Manageability Monitor Process  Cluster			 1.7
<br /><a class="awr" href="#top">Back to Top</a><p />
LCK0  Lock Process 0		     Other			 1.4
LMON  global enqueue service monitor Other			 1.4
			  ------------------------------------------------------

<a class="awr" name="8600"></a>

Top Process Types by CPU Used		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> This table displays top process types ordered by CPU time

<h3 class="awr">Memory Resize Operations Summary</h3>
Proces Description		      CPU Time (sec)
------ ------------------------------ --------------
       Others (foregrounds + unclassi	       897.4

LM     global cache service process	       285.2
DBW0   db writer process 0			49.7
VKTM   Virtual Keeper of TiMe process		33.2
LG     Log Writer Slave 			19.4
<p />
LMD0   global enqueue service daemon		19.1
LMD1   global enqueue service daemon		16.8
LCK0   Lock Process 0				15.2
CKPT   checkpoint				10.4
		  No data exists for this section of the report.
M      MMON slave class 1			 9.5
RS*    GCS RM Slave				 8.1
LGWR   Redo etc.				 7.7
GCR    GCR Slaves (LMHB)			 3.8
<p />
VKRM   Virtual sKeduler for Resource		 3.3
IPC0   IPC Service 0				 2.9
DIA0   diagnosibility process 0 		 2.2
O      ASM Connection Pool			 2.1
<a class="awr" href="#33">Back to Memory Statistics</a>
P      Parallel query slave			 1.4
SCM    DLM Statistics Collection and		 1.4
LMON   global enqueue service monitor		 1.3
			  ------------------------------------------------------
<br /><a class="awr" href="#top">Back to Top</a><p />


SQL ordered by Elapsed Time		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Resources reported for PL/SQL code includes the resources used by all SQL
<a class="awr" name="8650"></a>
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
   into the Total Database Time multiplied by 100
<h3 class="awr">Memory Resize Ops</h3>
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time

-> Captured SQL account for   98.8% of Total DB Time (s):	   10,808
-> Captured PL/SQL account for	 99.6% of Total DB Time (s):	      10,808

	Elapsed 		 Elapsed Time
<p />
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------
	 5,922.1	258,079 	 0.02	54.8	6.7   90.4 bhdvtsvjhgvrh
Module: SQL*Plus
		  No data exists for this section of the report.
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	 4,741.2	 45,533 	 0.10	43.9	9.1   57.9 35dumc2tpr9dv
Module: SQL*Plus
<p />
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	   568.7	      1        568.68	 5.3	5.9   82.3 dpnvk07hr10yx
<a class="awr" href="#33">Back to Memory Statistics</a>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	   566.6	      1        566.63	 5.2	6.5   81.4 8thj2ffrw6hnr
Module: SQL*Plus
<br /><a class="awr" href="#top">Back to Top</a><p />
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	   566.6	      1        566.62	 5.2   14.6   56.6 dg8wzzu89u0y0
Module: SQL*Plus
<a class="awr" name="7300"></a>
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   566.6	      1        566.60	 5.2   13.4   57.9 dxc8p6cu2bx5n
Module: SQL*Plus
<h3 class="awr">Process Memory Summary</h3>
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   566.6	      1        566.59	 5.2   13.1   65.0 14g8z0zv8sq36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
<ul>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<li class="awr"> B: Begin Snap	 E: End Snap  </li>
	   566.6	      1        566.59	 5.2	6.0   82.9 ajx8j2hvgamh9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<li class="awr"> All rows below contain absolute values (i.e. not diffed over the interval) </li>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   566.5	      1        566.53	 5.2   14.7   49.6 0hk2wm946s76n
Module: SQL*Plus
<li class="awr"> Max Alloc is Maximum PGA Allocation size at snapshot time  </li>
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>

	   566.5	      1        566.51	 5.2	5.1   85.1 1svba844x4jw9
Module: SQL*Plus

<li class="awr"> ordered by Begin/End snapshot, Alloc (MB) desc </li>
SQL ordered by Elapsed Time		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
<li class="awr"> Top 10 containers by Alloc (MB) at end snapshot time are displayed</li>
   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
</ul>
-> Captured SQL account for   98.8% of Total DB Time (s):	   10,808
-> Captured PL/SQL account for	 99.6% of Total DB Time (s):	      10,808

	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<table border="0" class="tdiff" summary="This table displays process memory summary. Allocation, used, average allocation, etc. are displayed for different category of process memory."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	   566.4	      1        566.41	 5.2   11.7   65.4 30nj40b6j5jjg
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
<tr><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>236.31</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.63</td><td align="right" class='awrc'>8.88</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>51</td></tr>
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   566.4	      1        566.41	 5.2   10.1   69.4 5pj15z95yy8bw
Module: SQL*Plus
<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>731.82</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.76</td><td align="right" class='awrnc'>7.98</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>127</td><td align="right" class='awrnc'>127</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   566.4	      1        566.40	 5.2	5.2   85.7 axfzdxtanvh74
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>16.71</td><td align="right" class='awrc'>15.29</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.33</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>109</td></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>10.72</td><td align="right" class='awrnc'>6.63</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>49</td></tr>
	   566.3	      1        566.31	 5.2	5.1   85.0 9m8b40kyd8ksd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>995.55</td><td align="right" class='awrc'>21.92</td><td align="right" class='awrc'>10.72</td><td align="right" class='awrc'>17.50</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>63</td><td align="right" class='awrc'>348</td><td align="right" class='awrc'>336</td></tr>

	   566.3	      1        566.29	 5.2	6.3   80.9 fxtw8kpwrmyrh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	   566.1	      1        566.12	 5.2   11.5   67.4 6c0z4993ppn5s
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
<tr><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>195.19</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.91</td><td align="right" class='awrnc'>8.45</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>33</td></tr>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	   565.7	      1        565.68	 5.2	5.1   85.5 98t98dbg02qny
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>608.11</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.58</td><td align="right" class='awrc'>8.61</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>109</td></tr>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	   565.6	      1        565.58	 5.2	6.3   81.2 ayb2zjspaq24n
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>7.73</td><td align="right" class='awrnc'>6.42</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.33</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>90</td></tr>
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

SQL ordered by Elapsed Time		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>3.39</td><td align="right" class='awrc'>2.33</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>31</td></tr>
-> Captured SQL account for   98.8% of Total DB Time (s):	   10,808
-> Captured PL/SQL account for	 99.6% of Total DB Time (s):	      10,808

	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------

	   565.4	      1        565.38	 5.2	6.0   82.7 d1j2yjcpr4vg8
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>814.42</td><td align="right" class='awrnc'>8.75</td><td align="right" class='awrnc'>11.66</td><td align="right" class='awrnc'>17.57</td><td align="right" class='awrnc'>73</td><td align="right" class='awrnc'>63</td><td align="right" class='awrnc'>275</td><td align="right" class='awrnc'>263</td></tr>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   565.4	      1        565.38	 5.2	6.0   83.7 2sggy6afm410z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
</table><p />
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	   565.2	      1        565.20	 5.2	5.1   85.7 4y8pwam7nhcwj
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<hr align="left" width="20%" /><p />
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<a class="awr" href="#33">Back to Memory Statistics</a>
			  ------------------------------------------------------


SQL ordered by CPU Time 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
<br /><a class="awr" href="#top">Back to Top</a><p />
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
<a class="awr" name="5900"></a>
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   93.1% of Total CPU Time (s):	       898
-> Captured PL/SQL account for	100.0% of Total CPU Time (s):		  898

    CPU 		  CPU per	    Elapsed
<h3 class="awr">SGA Memory Summary</h3>
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
     433.6	 45,533       0.01   48.3    4,741.2	9.1   57.9 35dumc2tpr9dv
Module: SQL*Plus
<ul>
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

     395.8	258,079       0.00   44.1    5,922.1	6.7   90.4 bhdvtsvjhgvrh
</ul>
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

      83.1	      1      83.09    9.3      566.5   14.7   49.6 0hk2wm946s76n
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
<table border="0" class="tdiff" summary="This table displays SGA memory summary. For each SGA region, begin size and end size is displayed."><tr><th class="awrbg" scope="col">SGA regions</th><th class="awrbg" scope="col">Begin Size (Bytes)</th><th class="awrbg" scope="col">End Size (Bytes) (if different)</th></tr>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<tr><td scope="row" class='awrc'>Database Buffers</td><td align="right" class='awrc'>8,522,825,728</td><td align="right" class='awrc'>&#160;</td></tr>
      82.7	      1      82.74    9.2      566.6   14.6   56.6 dg8wzzu89u0y0
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
<tr><td scope="row" class='awrnc'>Fixed Size</td><td align="right" class='awrnc'>12,445,928</td><td align="right" class='awrnc'>&#160;</td></tr>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      75.9	      1      75.86    8.4      566.6   13.4   57.9 dxc8p6cu2bx5n
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
<tr><td scope="row" class='awrc'>Redo Buffers</td><td align="right" class='awrc'>21,106,688</td><td align="right" class='awrc'>&#160;</td></tr>
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      74.1	      1      74.09    8.2      566.6   13.1   65.0 14g8z0zv8sq36
<tr><td scope="row" class='awrnc'>Variable Size</td><td align="right" class='awrnc'>1,577,058,304</td><td align="right" class='awrnc'>&#160;</td></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
</table><p />
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      66.2	      1      66.22    7.4      566.4   11.7   65.4 30nj40b6j5jjg
Module: SQL*Plus
<a class="awr" href="#33">Back to Memory Statistics</a>
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<br /><a class="awr" href="#top">Back to Top</a><p />

      65.2	      1      65.19    7.3      566.1   11.5   67.4 6c0z4993ppn5s
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
<a class="awr" name="6100"></a>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      57.1	      1      57.12    6.4      566.4   10.1   69.4 5pj15z95yy8bw
<h3 class="awr">SGA breakdown difference by Pool and Name</h3>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
<ul>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      36.9	      1      36.88    4.1      566.6	6.5   81.4 8thj2ffrw6hnr
Module: SQL*Plus

<li class="awr"> ordered by Pool, Name	</li>
SQL ordered by CPU Time 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
<li class="awr"> N/A value for Begin MB or End MB indicates the size of that Pool/Name was    insignificant, or zero in that snapshot</li>
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
</ul>
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   93.1% of Total CPU Time (s):	       898
-> Captured PL/SQL account for	100.0% of Total CPU Time (s):		  898

<table border="0" class="tdiff" summary="This table displays SGA breakdown difference. For each pool name, begin and end size are displayed."><tr><th class="awrbg" scope="col">Pool</th><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Begin MB</th><th class="awrbg" scope="col">End MB</th><th class="awrbg" scope="col">% Diff</th></tr>
    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td class='awrc'>large</td><td class='awrc'>PX msg pool</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>0.00</td></tr>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      35.9	      1      35.87    4.0      565.6	6.3   81.2 ayb2zjspaq24n
Module: SQL*Plus
<tr><td class='awrnc'>large</td><td class='awrnc'>free memory</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>0.00</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<tr><td class='awrc'>shared</td><td class='awrc'>ASH buffers</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>0.00</td></tr>
      35.8	      1      35.84    4.0      566.3	6.3   80.9 fxtw8kpwrmyrh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<tr><td class='awrnc'>shared</td><td class='awrnc'>KCRAHT Free Blocks</td><td align="right" class='awrnc'>21.25</td><td align="right" class='awrnc'>21.25</td><td align="right" class='awrnc'>0.00</td></tr>
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      34.1	      1      34.06    3.8      565.4	6.0   82.7 d1j2yjcpr4vg8
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td class='awrc'>shared</td><td class='awrc'>KGH: NO ACCESS</td><td align="right" class='awrc'>31.95</td><td align="right" class='awrc'>31.95</td><td align="right" class='awrc'>0.00</td></tr>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      34.0	      1      34.04    3.8      565.4	6.0   83.7 2sggy6afm410z
Module: SQL*Plus
<tr><td class='awrnc'>shared</td><td class='awrnc'>KGLH0</td><td align="right" class='awrnc'>37.93</td><td align="right" class='awrnc'>38.58</td><td align="right" class='awrnc'>1.69</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      34.0	      1      34.00    3.8      566.6	6.0   82.9 ajx8j2hvgamh9
<tr><td class='awrc'>shared</td><td class='awrc'>KJSC rnb slots</td><td align="right" class='awrc'>31.38</td><td align="right" class='awrc'>27.39</td><td align="right" class='awrc'>-12.71</td></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<tr><td class='awrnc'>shared</td><td class='awrnc'>SO private sga</td><td align="right" class='awrnc'>28.84</td><td align="right" class='awrnc'>28.84</td><td align="right" class='awrnc'>0.00</td></tr>

      33.7	      1      33.70    3.8      568.7	5.9   82.3 dpnvk07hr10yx
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td class='awrc'>shared</td><td class='awrc'>SQLA</td><td align="right" class='awrc'>186.13</td><td align="right" class='awrc'>177.40</td><td align="right" class='awrc'>-4.69</td></tr>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      29.4	      1      29.43    3.3      566.4	5.2   85.7 axfzdxtanvh74
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
<tr><td class='awrnc'>shared</td><td class='awrnc'>db_block_hash_buckets</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>0.00</td></tr>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      29.1	      1      29.08    3.2      566.5	5.1   85.1 1svba844x4jw9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
<tr><td class='awrc'>shared</td><td class='awrc'>free memory</td><td align="right" class='awrc'>173.14</td><td align="right" class='awrc'>185.95</td><td align="right" class='awrc'>7.40</td></tr>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

SQL ordered by CPU Time 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
<tr><td class='awrnc'>shared</td><td class='awrnc'>gc name table</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>32.00</td><td align="right" class='awrnc'>0.00</td></tr>
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
<tr><td class='awrc'>shared</td><td class='awrc'>gcs resources</td><td align="right" class='awrc'>268.85</td><td align="right" class='awrc'>268.85</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gcs resv res hash bucket</td><td align="right" class='awrnc'>48.00</td><td align="right" class='awrnc'>48.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gcs shadows</td><td align="right" class='awrc'>146.65</td><td align="right" class='awrc'>146.65</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>ges big msg buffers</td><td align="right" class='awrnc'>26.29</td><td align="right" class='awrnc'>26.29</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>ksunfy_meta 1</td><td align="right" class='awrc'>25.03</td><td align="right" class='awrc'>25.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>row cache</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>buffer_cache</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>fixed_sga</td><td align="right" class='awrnc'>11.87</td><td align="right" class='awrnc'>11.87</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>log_buffer</td><td align="right" class='awrc'>20.13</td><td align="right" class='awrc'>20.13</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>shared_io_pool</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="39"></a>
<h2 class="awr">
Replication Statistics (GoldenGate, XStream)
</h2>
<ul>
<li class="awr"><a class="awr" href="#9000">Replication System Resource Usage</a></li>
<li class="awr"><a class="awr" href="#9010">Replication SGA Usage</a></li>
<li class="awr"><a class="awr" href="#9020">GoldenGate Capture</a></li>
<li class="awr"><a class="awr" href="#9030">GoldenGate Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9040">GoldenGate Apply Reader</a></li>
<li class="awr"><a class="awr" href="#9041">GoldenGate Apply Coordinator</a></li>
<li class="awr"><a class="awr" href="#9042">GoldenGate Apply Server</a></li>
<li class="awr"><a class="awr" href="#9051">GoldenGate Apply Coordinator Rate</a></li>
<li class="awr"><a class="awr" href="#9050">GoldenGate Apply Reader and Server Rate</a></li>
<li class="awr"><a class="awr" href="#9060">XStream Capture</a></li>
<li class="awr"><a class="awr" href="#9070">XStream Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9080">XStream Apply Reader</a></li>
-> Captured SQL account for   93.1% of Total CPU Time (s):	       898
-> Captured PL/SQL account for	100.0% of Total CPU Time (s):		  898

    CPU 		  CPU per	    Elapsed
<li class="awr"><a class="awr" href="#9081">XStream Apply Coordinator</a></li>
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------

<li class="awr"><a class="awr" href="#9082">XStream Apply Server</a></li>
      29.0	      1      28.97    3.2      565.7	5.1   85.5 98t98dbg02qny
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
<li class="awr"><a class="awr" href="#9091">XStream Apply Coordinator Rate</a></li>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<li class="awr"><a class="awr" href="#9090">XStream Apply Reader and Server Rate</a></li>
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      28.8	      1      28.84    3.2      566.3	5.1   85.0 9m8b40kyd8ksd
Module: SQL*Plus
<li class="awr"><a class="awr" href="#9100">Table Statistics by DML Operations</a></li>
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<li class="awr"><a class="awr" href="#9110">Table Statistics by Conflict Resolutions</a></li>
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      28.6	      1      28.57    3.2      565.2	5.1   85.7 4y8pwam7nhcwj
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
<li class="awr"><a class="awr" href="#9120">Replication Large Transaction Statistics</a></li>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<li class="awr"><a class="awr" href="#9130">Replication Long Running Transaction Statistics</a></li>

			  ------------------------------------------------------


</ul>
SQL ordered by User I/O Wait Time	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
<a class="awr" href="#top">Back to Top</a><p />
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
<a class="awr" name="9000"></a>
-> Captured SQL account for   99.3% of Total User I/O Wait Time (s):	       8
-> Captured PL/SQL account for	 99.6% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed
<h3 class="awr">Replication System Resource Usage</h3>
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------

   5,353.5	258,079       0.02   65.6    5,922.1	6.7   90.4 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

<p />
   2,744.7	 45,533       0.06   33.7    4,741.2	9.1   57.9 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
		  No data exists for this section of the report.
< :B1 )

     485.3	      1     485.34    6.0      566.4	5.2   85.7 axfzdxtanvh74
Module: SQL*Plus
<p />
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     484.5	      1     484.49    5.9      565.2	5.1   85.7 4y8pwam7nhcwj
<br /><a class="awr" href="#top">Back to Top</a><p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<a class="awr" name="9010"></a>

     483.4	      1     483.43    5.9      565.7	5.1   85.5 98t98dbg02qny
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<h3 class="awr">Replication SGA Usage</h3>
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     482.2	      1     482.15    5.9      566.5	5.1   85.1 1svba844x4jw9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     481.1	      1     481.15    5.9      566.3	5.1   85.0 9m8b40kyd8ksd
Module: SQL*Plus
<p />
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
		  No data exists for this section of the report.
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     473.0	      1     472.99    5.8      565.4	6.0   83.7 2sggy6afm410z
<p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     469.7	      1     469.69    5.8      566.6	6.0   82.9 ajx8j2hvgamh9
<br /><a class="awr" href="#top">Back to Top</a><p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" name="9020"></a>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     468.2	      1     468.23    5.7      568.7	5.9   82.3 dpnvk07hr10yx
<h3 class="awr">GoldenGate Capture</h3>
Module: SQL*Plus

SQL ordered by User I/O Wait Time	   DB/Inst: P30DB/p30db1  Snaps: 68-69

-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
<p />
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   99.3% of Total User I/O Wait Time (s):	       8
-> Captured PL/SQL account for	 99.6% of Total User I/O Wait Time (s):
		  No data exists for this section of the report.

  User I/O		  UIO per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
<p />
---------- ------------ ---------- ------ ---------- ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     467.7	      1     467.67    5.7      565.4	6.0   82.7 d1j2yjcpr4vg8
<br /><a class="awr" href="#top">Back to Top</a><p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" name="9030"></a>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     461.5	      1     461.46    5.7      566.6	6.5   81.4 8thj2ffrw6hnr
<h3 class="awr">GoldenGate Capture Rate</h3>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<p />
     459.4	      1     459.35    5.6      565.6	6.3   81.2 ayb2zjspaq24n
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
		  No data exists for this section of the report.
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<p />
     458.2	      1     458.24    5.6      566.3	6.3   80.9 fxtw8kpwrmyrh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     393.1	      1     393.09    4.8      566.4   10.1   69.4 5pj15z95yy8bw
<br /><a class="awr" href="#top">Back to Top</a><p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" name="9040"></a>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<h3 class="awr">GoldenGate Apply Reader</h3>
     381.7	      1     381.73    4.7      566.1   11.5   67.4 6c0z4993ppn5s
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<p />
     370.4	      1     370.38    4.5      566.4   11.7   65.4 30nj40b6j5jjg
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
		  No data exists for this section of the report.
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<p />
     368.5	      1     368.53    4.5      566.6   13.1   65.0 14g8z0zv8sq36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<br /><a class="awr" href="#top">Back to Top</a><p />

SQL ordered by User I/O Wait Time	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
<a class="awr" name="9041"></a>
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
<h3 class="awr">GoldenGate Apply Coordinator</h3>
-> Captured SQL account for   99.3% of Total User I/O Wait Time (s):	       8
-> Captured PL/SQL account for	 99.6% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed

  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------

<p />
     327.8	      1     327.81    4.0      566.6   13.4   57.9 dxc8p6cu2bx5n
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
		  No data exists for this section of the report.
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<p />
     321.0	      1     320.97    3.9      566.6   14.6   56.6 dg8wzzu89u0y0
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     281.0	      1     280.97    3.4      566.5   14.7   49.6 0hk2wm946s76n
<br /><a class="awr" href="#top">Back to Top</a><p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" name="9042"></a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			  ------------------------------------------------------
<h3 class="awr">GoldenGate Apply Server</h3>


SQL ordered by Gets			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Resources reported for PL/SQL code includes the resources used by all SQL

   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
<p />
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    7,234,630
-> Captured SQL account for   98.5% of Total

		  No data exists for this section of the report.
     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------
<p />
  4,653,749	258,079 	18.0   64.3    5,922.1	 6.7  90.4 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>

  2,374,934	 45,533 	52.2   32.8    4,741.2	 9.1  57.9 35dumc2tpr9dv
Module: SQL*Plus
<br /><a class="awr" href="#top">Back to Top</a><p />
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
<a class="awr" name="9051"></a>
< :B1 )

    773,064	      1    773,064.0   10.7	 566.6	13.1	65 14g8z0zv8sq36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<h3 class="awr">GoldenGate Apply Coordinator Rate</h3>
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    764,908	      1    764,908.0   10.6	 566.5	14.7  49.6 0hk2wm946s76n
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re

do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    664,344	      1    664,344.0	9.2	 566.1	11.5  67.4 6c0z4993ppn5s
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
<p />
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

		  No data exists for this section of the report.
    556,141	      1    556,141.0	7.7	 566.6	14.6  56.6 dg8wzzu89u0y0
Module: SQL*Plus
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
<br /><a class="awr" href="#top">Back to Top</a><p />
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    553,622	      1    553,622.0	7.7	 566.4	11.7  65.4 30nj40b6j5jjg
Module: SQL*Plus
<a class="awr" name="9050"></a>
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
<h3 class="awr">GoldenGate Apply Reader and Server Rate</h3>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    501,156	      1    501,156.0	6.9	 566.6	13.4  57.9 dxc8p6cu2bx5n
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
<p />
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    358,419	      1    358,419.0	5.0	 566.4	10.1  69.4 5pj15z95yy8bw
Module: SQL*Plus
		  No data exists for this section of the report.
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
<p />
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    284,276	      1    284,276.0	3.9	 566.4	 5.2  85.7 axfzdxtanvh74
Module: SQL*Plus

<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
SQL ordered by Gets			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
<br /><a class="awr" href="#top">Back to Top</a><p />
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
<a class="awr" name="9060"></a>
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
<h3 class="awr">XStream Capture</h3>
-> Total Buffer Gets:	    7,234,630
-> Captured SQL account for   98.5% of Total


     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
<p />
----------- ----------- ------------ ------ ---------- ----- ----- -------------
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
		  No data exists for this section of the report.
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<p />

    280,598	      1    280,598.0	3.9	 565.7	 5.1  85.5 98t98dbg02qny
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<br /><a class="awr" href="#top">Back to Top</a><p />
    280,403	      1    280,403.0	3.9	 566.5	 5.1  85.1 1svba844x4jw9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" name="9070"></a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    279,346	      1    279,346.0	3.9	 566.3	 5.1	85 9m8b40kyd8ksd
<h3 class="awr">XStream Capture Rate</h3>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re

do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    274,500	      1    274,500.0	3.8	 565.2	 5.1  85.7 4y8pwam7nhcwj
Module: SQL*Plus
<p />
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
		  No data exists for this section of the report.
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    227,277	      1    227,277.0	3.1	 565.4	   6  82.7 d1j2yjcpr4vg8
Module: SQL*Plus
<p />
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>

    227,048	      1    227,048.0	3.1	 566.6	   6  82.9 ajx8j2hvgamh9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
<br /><a class="awr" href="#top">Back to Top</a><p />
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<a class="awr" name="9080"></a>
    224,388	      1    224,388.0	3.1	 565.4	   6  83.7 2sggy6afm410z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<h3 class="awr">XStream Apply Reader</h3>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    222,245	      1    222,245.0	3.1	 568.7	 5.9  82.3 dpnvk07hr10yx

Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<p />
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

SQL ordered by Gets			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Resources reported for PL/SQL code includes the resources used by all SQL
		  No data exists for this section of the report.
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
<p />
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    7,234,630
-> Captured SQL account for   98.5% of Total

<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------

<br /><a class="awr" href="#top">Back to Top</a><p />
    213,730	      1    213,730.0	3.0	 566.6	 6.5  81.4 8thj2ffrw6hnr
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" name="9081"></a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    209,464	      1    209,464.0	2.9	 566.3	 6.3  80.9 fxtw8kpwrmyrh
Module: SQL*Plus
<h3 class="awr">XStream Apply Coordinator</h3>
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re

do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    206,356	      1    206,356.0	2.9	 565.6	 6.3  81.2 ayb2zjspaq24n
Module: SQL*Plus
<p />
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
		  No data exists for this section of the report.

			  ------------------------------------------------------


SQL ordered by Reads			   DB/Inst: P30DB/p30db1  Snaps: 68-69
<p />
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   4,253,774
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
-> Captured SQL account for   99.1% of Total

   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
<br /><a class="awr" href="#top">Back to Top</a><p />
----------- ----------- ---------- ------ ---------- ------ ------ -------------
<a class="awr" name="9082"></a>
  3,581,309	258,079       13.9   84.2    5,922.1	6.7   90.4 bhdvtsvjhgvrh
<h3 class="awr">XStream Apply Server</h3>
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


    632,614	 45,533       13.9   14.9    4,741.2	9.1   57.9 35dumc2tpr9dv
Module: SQL*Plus
<p />
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

		  No data exists for this section of the report.
    467,187	      1  467,187.0   11.0      566.6   13.1   65.0 14g8z0zv8sq36
Module: SQL*Plus
<p />
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    459,376	      1  459,376.0   10.8      566.5   14.7   49.6 0hk2wm946s76n
Module: SQL*Plus
<br /><a class="awr" href="#top">Back to Top</a><p />
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<a class="awr" name="9091"></a>
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    405,065	      1  405,065.0    9.5      566.1   11.5   67.4 6c0z4993ppn5s
Module: SQL*Plus
<h3 class="awr">XStream Apply Coordinator Rate</h3>
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do


    332,907	      1  332,907.0    7.8      566.6   14.6   56.6 dg8wzzu89u0y0
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
<p />
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
		  No data exists for this section of the report.

    269,669	      1  269,669.0    6.3      566.4   11.7   65.4 30nj40b6j5jjg
<p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<br /><a class="awr" href="#top">Back to Top</a><p />

    243,245	      1  243,245.0    5.7      566.6   13.4   57.9 dxc8p6cu2bx5n
Module: SQL*Plus
<a class="awr" name="9090"></a>
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<h3 class="awr">XStream Apply Reader and Server Rate</h3>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_


    216,711	      1  216,711.0    5.1      566.4   10.1   69.4 5pj15z95yy8bw
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
<p />
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

		  No data exists for this section of the report.
    175,457	      1  175,457.0    4.1      565.7	5.1   85.5 98t98dbg02qny
Module: SQL*Plus

SQL ordered by Reads			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> %Total - Physical Reads as a percentage of Total Disk Reads
<p />
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   4,253,774
-> Captured SQL account for   99.1% of Total

<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
<br /><a class="awr" href="#top">Back to Top</a><p />
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<a class="awr" name="9100"></a>
    174,780	      1  174,780.0    4.1      566.4	5.2   85.7 axfzdxtanvh74
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<h3 class="awr">Table Statistics by DML Operations</h3>

    174,426	      1  174,426.0    4.1      566.3	5.1   85.0 9m8b40kyd8ksd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do


    174,318	      1  174,318.0    4.1      566.5	5.1   85.1 1svba844x4jw9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    170,971	      1  170,971.0    4.0      565.2	5.1   85.7 4y8pwam7nhcwj
<p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

		  No data exists for this section of the report.
    144,374	      1  144,374.0    3.4      566.6	6.0   82.9 ajx8j2hvgamh9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
<p />
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    142,419	      1  142,419.0    3.3      565.4	6.0   82.7 d1j2yjcpr4vg8
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
<br /><a class="awr" href="#top">Back to Top</a><p />
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    141,568	      1  141,568.0    3.3      565.4	6.0   83.7 2sggy6afm410z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
<a class="awr" name="9110"></a>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<h3 class="awr">Table Statistics by Conflict Resolutions</h3>
    139,897	      1  139,897.0    3.3      568.7	5.9   82.3 dpnvk07hr10yx
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

SQL ordered by Reads			   DB/Inst: P30DB/p30db1  Snaps: 68-69
<p />
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   4,253,774
-> Captured SQL account for   99.1% of Total
		  No data exists for this section of the report.

   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------
<p />

    133,688	      1  133,688.0    3.1      566.6	6.5   81.4 8thj2ffrw6hnr
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    133,058	      1  133,058.0    3.1      565.6	6.3   81.2 ayb2zjspaq24n
Module: SQL*Plus
<br /><a class="awr" href="#top">Back to Top</a><p />
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<a class="awr" name="9120"></a>

    130,902	      1  130,902.0    3.1      566.3	6.3   80.9 fxtw8kpwrmyrh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
<h3 class="awr">Replication Large Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9130"></a>
<h3 class="awr">Replication Long Running Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="34"></a>
<h2 class="awr">
Advanced Queuing
</h2>
<ul>
<li class="awr"><a class="awr" href="#6150">Advanced Queue CPU/IO Usage</a></li>
<li class="awr"><a class="awr" href="#6400">Buffered Queues</a></li>
<li class="awr"><a class="awr" href="#6500">Buffered Queue Subscribers</a></li>
<li class="awr"><a class="awr" href="#6600">Rule Set</a></li>
<li class="awr"><a class="awr" href="#7600">Persistent Queues</a></li>
<li class="awr"><a class="awr" href="#7610">Persistent Queues Rate</a></li>
<li class="awr"><a class="awr" href="#7700">Persistent Queue Subscribers</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6150"></a>
<h3 class="awr">Advanced Queue CPU/IO Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6400"></a>
<h3 class="awr">Buffered Queues</h3>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<p />
			  ------------------------------------------------------


SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 68-69
		  No data exists for this section of the report.
-> UnOptimized Read Reqs = Physical Read Reqs -
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
<p />
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       4,253,575
-> Captured SQL account for    0.5% of Total
<a class="awr" href="#34">Back to Advanced Queuing</a>
-> Total UnOptimized Read Requests:	  4,253,575
-> Captured SQL account for    0.5% of Total
-> Total Optimized Read Requests:		1
<br /><a class="awr" href="#top">Back to Top</a><p />
-> Captured SQL account for    0.0% of Total

<a class="awr" name="6500"></a>
UnOptimized   Physical		    UnOptimized
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
<h3 class="awr">Buffered Queue Subscribers</h3>
    467,210	467,210 	 1    467,210.0    0.0	 11.0 14g8z0zv8sq36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<p />
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    459,445	459,445 	 1    459,445.0    0.0	 10.8 0hk2wm946s76n
Module: SQL*Plus
		  No data exists for this section of the report.
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<p />
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    405,134	405,134 	 1    405,134.0    0.0	  9.5 6c0z4993ppn5s
<a class="awr" href="#34">Back to Advanced Queuing</a>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<br /><a class="awr" href="#top">Back to Top</a><p />
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<a class="awr" name="6600"></a>
    332,930	332,930 	 1    332,930.0    0.0	  7.8 dg8wzzu89u0y0
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
<h3 class="awr">Rule Set</h3>
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_


    269,738	269,738 	 1    269,738.0    0.0	  6.3 30nj40b6j5jjg
Module: SQL*Plus
<p />
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    243,314	243,314 	 1    243,314.0    0.0	  5.7 dxc8p6cu2bx5n
Module: SQL*Plus
		  No data exists for this section of the report.
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    216,734	216,734 	 1    216,734.0    0.0	  5.1 5pj15z95yy8bw
Module: SQL*Plus
<p />
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    175,503	175,503 	 1    175,503.0    0.0	  4.1 98t98dbg02qny
<a class="awr" href="#34">Back to Advanced Queuing</a>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<br /><a class="awr" href="#top">Back to Top</a><p />
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    174,826	174,826 	 1    174,826.0    0.0	  4.1 axfzdxtanvh74
<a class="awr" name="7600"></a>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<h3 class="awr">Persistent Queues</h3>

SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 68-69
-> UnOptimized Read Reqs = Physical Read Reqs -

     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
<p />
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       4,253,575
-> Captured SQL account for    0.5% of Total
		  No data exists for this section of the report.
-> Total UnOptimized Read Requests:	  4,253,575
-> Captured SQL account for    0.5% of Total
-> Total Optimized Read Requests:		1
<p />
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
<a class="awr" href="#34">Back to Advanced Queuing</a>
----------- ----------- ---------- ------------ ------ ------ -------------
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<br /><a class="awr" href="#top">Back to Top</a><p />

    174,449	174,449 	 1    174,449.0    0.0	  4.1 9m8b40kyd8ksd
Module: SQL*Plus
<a class="awr" name="7610"></a>
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<h3 class="awr">Persistent Queues Rate</h3>
    174,433	174,433 	 1    174,433.0    0.0	  4.1 1svba844x4jw9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=

 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<p />

    170,994	170,994 	 1    170,994.0    0.0	  4.0 4y8pwam7nhcwj
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
		  No data exists for this section of the report.
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<p />

    144,397	144,397 	 1    144,397.0    0.0	  3.4 ajx8j2hvgamh9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
<a class="awr" href="#34">Back to Advanced Queuing</a>
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<br /><a class="awr" href="#top">Back to Top</a><p />

    142,465	142,465 	 1    142,465.0    0.0	  3.3 d1j2yjcpr4vg8
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
<a class="awr" name="7700"></a>
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<h3 class="awr">Persistent Queue Subscribers</h3>

    141,614	141,614 	 1    141,614.0    0.0	  3.3 2sggy6afm410z
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<p />
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    140,012	140,012 	 1    140,012.0    0.0	  3.3 dpnvk07hr10yx
Module: SQL*Plus
		  No data exists for this section of the report.
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<p />
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    133,734	133,734 	 1    133,734.0    0.0	  3.1 8thj2ffrw6hnr
Module: SQL*Plus
<a class="awr" href="#34">Back to Advanced Queuing</a>
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<br /><a class="awr" href="#top">Back to Top</a><p />
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

<p />
    133,104	133,104 	 1    133,104.0    0.0	  3.1 ayb2zjspaq24n

SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 68-69
-> UnOptimized Read Reqs = Physical Read Reqs -
<a class="awr" name="6700"></a>
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
<h3 class="awr">Resource Limit Stats</h3>
-> Total Physical Read Requests:       4,253,575
-> Captured SQL account for    0.5% of Total
-> Total UnOptimized Read Requests:	  4,253,575
<ul>
<li class="awr"> Only rows with Current or Maximum Utilization &gt; 80% of Limit are shown  </li>
-> Captured SQL account for    0.5% of Total
-> Total Optimized Read Requests:		1
<li class="awr"> For &quot;UNLIMITED&quot; resources, rows whose Current or Maximum Utilization    exceeds 2*Initial Allocation are shown </li>
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
<li class="awr"> Ordered by Resource Name</li>
----------- ----------- ---------- ------------ ------ ------ -------------
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
</ul>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

    130,925	130,925 	 1    130,925.0    0.0	  3.1 fxtw8kpwrmyrh
Module: SQL*Plus
<table border="0" class="tdiff" summary="This table displays resource limit statistics. Current utilization, maximum utilization, initial allocation and limit are displayed for each resource name"><tr><th class="awrbg" scope="col">Resource Name</th><th class="awrbg" scope="col">Current	 Utilization</th><th class="awrbg" scope="col">Maximum	 Utilization</th><th class="awrbg" scope="col">  Initial Allocation</th><th class="awrbg" scope="col">	Limit</th></tr>
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<tr><td scope="row" class='awrc'>ges_cache_ress</td><td align="right" class='awrc'>3,173</td><td align="right" class='awrc'>3,720</td><td class='awrc'>0</td><td class='awrc'>UNLIMITED</td></tr>

			  ------------------------------------------------------


</table><p />
SQL ordered by Executions		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Executions:	     331,888
<hr align="left" width="20%" /><p />
-> Captured SQL account for   98.5% of Total

					      Elapsed
 Executions   Rows Processed  Rows per Exec   Time (s)	%CPU   %IO    SQL Id
<br /><a class="awr" href="#top">Back to Top</a><p />
------------ --------------- -------------- ---------- ----- ----- -------------
     258,079	     258,086		1.0    5,922.1	 6.7  90.4 bhdvtsvjhgvrh
Module: SQL*Plus
<p />
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

      45,533	     682,995	       15.0    4,741.2	 9.1  57.9 35dumc2tpr9dv
Module: SQL*Plus
<a class="awr" name="37"></a>
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

      21,568	      21,575		1.0	   4.2	87.3	 0 86708bvah4akq
<h2 class="awr">
select name from undo$ where file#=:1 and block#=:2 and ts#=:3 and status$
 != 1

Shared Server Statistics
	 834		 816		1.0	   0.1	79.7	 0 24djtk7r8fz33
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
2 AND tsn = :3 AND objid = :4

</h2>
	  89		  89		1.0	   0.4	 5.1   1.7 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
<ul>
,:bind3,:step_id)

	  66		  15		0.2	   0.0	92.8	 0 87gaftwrm2h68
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$
<li class="awr"><a class="awr" href="#8710">Shared Servers Activity</a></li>
o where o.obj#=:1

	  60		  60		1.0	   0.1	33.4  26.1 fn5s5p6hr6702
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
<li class="awr"><a class="awr" href="#8720">Shared Servers Rates</a></li>
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

	  48		  48		1.0	   0.0	43.1	 0 f80h0xb1qvbsk
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

<li class="awr"><a class="awr" href="#8730">Shared Servers Utilization</a></li>
	  45		  45		1.0	   0.0	  98	 0 6xvp6nxs4a9n4
select nvl(sum(space),0) from recyclebin$ where ts# = :1

	  45		   0		0.0	   0.0	92.3	 0 csnp95dz2r8ss
<li class="awr"><a class="awr" href="#8740">Shared Servers Common Queue</a></li>
select file#, block# from recyclebin$ where ts# = :1 and file# != 0 and bloc
k# != 0 and space = 0

<li class="awr"><a class="awr" href="#8750">Shared Servers Dispatchers</a></li>
			  ------------------------------------------------------


SQL ordered by Parse Calls		   DB/Inst: P30DB/p30db1  Snaps: 68-69
</ul>
-> Total Parse Calls:	       23,955
-> Captured SQL account for   96.1% of Total

			    % Total
<a class="awr" href="#top">Back to Top</a><p />
 Parse Calls  Executions     Parses    SQL Id
------------ ------------ --------- -------------
      21,548	   21,568     89.95 86708bvah4akq
<a class="awr" name="8710"></a>
select name from undo$ where file#=:1 and block#=:2 and ts#=:3 and status$
 != 1

	 834	      834      3.48 24djtk7r8fz33
<h3 class="awr">Shared Servers Activity</h3>
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
2 AND tsn = :3 AND objid = :4

	  89	       89      0.37 f7xnvp44nukp7
<ul>
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

<li class="awr"> Values represent averages for all samples</li>
	  60	       60      0.25 fn5s5p6hr6702
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

</ul>
<table border="0" class="tdiff" summary="This table displays shared servers activity statistics. It displays average total connections, average active connections, average total shared servers, etc."><tr><th class="awrbg" scope="col">Avg Total Connections</th><th class="awrbg" scope="col">Avg Active Connections</th><th class="awrbg" scope="col">Avg Total Shared Srvrs</th><th class="awrbg" scope="col">Avg Active Shared Srvrs</th><th class="awrbg" scope="col">Avg Total Dispatchers</th><th class="awrbg" scope="col">Avg Active Dispatchers</th></tr>
	  48	       48      0.20 f80h0xb1qvbsk
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

	  45	       45      0.19 6xvp6nxs4a9n4
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
select nvl(sum(space),0) from recyclebin$ where ts# = :1

	  45	       45      0.19 csnp95dz2r8ss
select file#, block# from recyclebin$ where ts# = :1 and file# != 0 and bloc
</table><p />
k# != 0 and space = 0

	  22	       22      0.09 6n2qqv1brfhpp
select ind.type#, ind.property, base_obj.obj#, base_owner.name, base_obj.name
<hr align="left" width="20%" /><p />
 from sys.ind$ ind, sys.user$ base_owner, sys.obj$ base_obj where ind.obj#
 = :oid and ind.dataobj# = :doid and ind.bo# = base_obj
.obj# and base_obj.owner# = base_owner.user#
<a class="awr" href="#37">Back to Shared Server Statistics</a>

	  20	       20      0.08 bxpcry2tpc217
select /*+ opt_param('parallel_execution_enabled',
 'false') EXEC_FROM_DBMS_XPLAN */ * from gv$all_sql_plan where 1=0
<br /><a class="awr" href="#top">Back to Top</a><p />

	  20	       20      0.08 gjaap3w3qbf8c
select count(*) from ilmobj$ where rownum = 1

<a class="awr" name="8720"></a>
			  ------------------------------------------------------


SQL ordered by Sharable Memory		   DB/Inst: P30DB/p30db1  Snaps: 68-69
<h3 class="awr">Shared Servers Rates</h3>
-> Only Statements with Sharable Memory greater than 1048576 are displayed

<ul>
Sharable Mem (b)  Executions   % Total	  SQL Id
---------------- ------------ -------- -------------
</ul>
      13,234,945	    5	  1.14 9yv5dwv8k0awg
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,
FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

       2,095,492	    5	  0.18 atwuyuvqkf27w
<table border="0" class="tdiff" summary="This table displays shared servers rate statistics. It displays common queue per second, disp queue per second, server messages per second, common queue total, etc."><tr><th class="awrbg" scope="col">Common Queue Per Sec</th><th class="awrbg" scope="col">Disp Queue Per Sec</th><th class="awrbg" scope="col">Server Msgs/Sec</th><th class="awrbg" scope="col">Server KB/Sec</th><th class="awrbg" scope="col">Common Queue Total</th><th class="awrbg" scope="col">Disp Queue Total</th><th class="awrbg" scope="col">Server Total Msgs</th><th class="awrbg" scope="col">Server Total(KB)</th></tr>
SELECT /*+ OPT_PARAM('_fix_control' '16391176:1') */ GROUP_TYPE, BUCKET_START, B
UCKET_END, TM_GROUP_TYPE, TM_BUCKET_START, TM_BUCKET_END, SUM(TM_CPU_FIRST_BUCKE
T_VALUE) TM_CPU_FIRST_BUCKET_VALUE, SUM(TM_CPU_MIDDLE_BUCKETS_VALUE) TM_CPU_MIDD
LE_BUCKETS_VALUE, SUM(TM_CPU_LAST_BUCKET_VALUE) TM_CPU_LAST_BUCKET_VALUE, SUM(TM

			  ------------------------------------------------------


<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
SQL ordered by Version Count		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Only Statements with Version Count greater than 20 are displayed

 Version
  Count   Executions	 SQL Id
-------- ------------ -------------
      26      258,079 bhdvtsvjhgvrh
Module: SQL*Plus
</table><p />
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

      24       45,533 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  ------------------------------------------------------
<hr align="left" width="20%" /><p />


SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
<a class="awr" href="#37">Back to Shared Server Statistics</a>
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
<br /><a class="awr" href="#top">Back to Top</a><p />
-> Total Cluster Wait Time (s): 	    649
-> Captured SQL account for   97.9% of Total

       Cluster			      Elapsed
<a class="awr" name="8730"></a>
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
	 351.6	    258,079   54.2    5,922.1	 5.9	6.7   90.4 bhdvtsvjhgvrh
Module: SQL*Plus
<h3 class="awr">Shared Servers Utilization</h3>
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	 282.6	     45,533   43.5    4,741.2	 6.0	9.1   57.9 35dumc2tpr9dv
Module: SQL*Plus
<ul>
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	  94.0		  1   14.5	566.5	16.6   14.7   49.6 0hk2wm946s76n
Module: SQL*Plus
<li class="awr"> Statistics are combined for all servers </li>
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<li class="awr"> Incoming and Outgoing Net % are included in %Busy</li>
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	  90.1		  1   13.9	566.6	15.9   14.6   56.6 dg8wzzu89u0y0
Module: SQL*Plus
</ul>
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  87.8		  1   13.5	566.6	15.5   13.4   57.9 dxc8p6cu2bx5n
<table border="0" class="tdiff" summary="This table displays shared servers utilization statistics. It displays total server time second, % busy, % idle, incoming net %, outgoing net %, etc."><tr><th class="awrbg" scope="col">Total Server Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Incoming Net %</th><th class="awrbg" scope="col">Outgoing Net %</th></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
<tr><td align="right" class='awrc'>615</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  62.0		  1    9.6	566.4	10.9   10.1   69.4 5pj15z95yy8bw
Module: SQL*Plus
</table><p />
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<hr align="left" width="20%" /><p />

	  49.5		  1    7.6	566.4	 8.7   11.7   65.4 30nj40b6j5jjg
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
<a class="awr" href="#37">Back to Shared Server Statistics</a>
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<br /><a class="awr" href="#top">Back to Top</a><p />
	  39.7		  1    6.1	565.6	 7.0	6.3   81.2 ayb2zjspaq24n
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" name="8740"></a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	  39.7		  1    6.1	566.6	 7.0	6.5   81.4 8thj2ffrw6hnr
<h3 class="awr">Shared Servers Common Queue</h3>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<p />

	  38.5		  1    5.9	566.3	 6.8	6.3   80.9 fxtw8kpwrmyrh
Module: SQL*Plus

SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db1  Snaps: 68-69
		  No data exists for this section of the report.
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
<p />
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    649
<a class="awr" href="#37">Back to Shared Server Statistics</a>
-> Captured SQL account for   97.9% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
<br /><a class="awr" href="#top">Back to Top</a><p />
-------------- ------------ ------ ---------- ------ ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<a class="awr" name="8750"></a>
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	  28.0		  1    4.3	568.7	 4.9	5.9   82.3 dpnvk07hr10yx
Module: SQL*Plus
<h3 class="awr">Shared Servers Dispatchers</h3>
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<ul>
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	  27.7		  1    4.3	566.6	 4.9	6.0   82.9 ajx8j2hvgamh9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
<li class="awr"> Ordered by %Busy, descending </li>
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<li class="awr"> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue </li>
	  27.6		  1    4.2	565.4	 4.9	6.0   82.7 d1j2yjcpr4vg8
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
<li class="awr"> Name suffixes:       &quot;(N)&quot; - dispatcher started between begin and end snapshots	&quot;(R)&quot; - dispatcher re-started between begin and end snapshots</li>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  26.8		  1    4.1	565.4	 4.7	6.0   83.7 2sggy6afm410z
Module: SQL*Plus
</ul>
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<table border="0" class="tdiff" summary="This table displays shared servers dispatcher statistics. Average connections, total dispatch time, % busy, % idle, total queued, total queued wait, etc. are displayed for each dispatcher"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Avg Conns</th><th class="awrbg" scope="col">Total Disp Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Total Queued</th><th class="awrbg" scope="col">Total Queue Wait (s)</th><th class="awrbg" scope="col">Avg Queue Wait (ms)</th></tr>

<tr><td scope="row" class='awrc'>D000</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>615</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
	  13.8		  1    2.1	566.6	 2.4   13.1   65.0 14g8z0zv8sq36
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
</table><p />
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	  12.9		  1    2.0	566.1	 2.3   11.5   67.4 6c0z4993ppn5s
<hr align="left" width="20%" /><p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
<a class="awr" href="#37">Back to Shared Server Statistics</a>
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	    .5		  1    0.1	  0.7	74.4	2.8   23.6 9x2prazfz86dz
 select s.file#, s.block#, s.ts#, t.obj#, s.hwmincr, t.obj# from tab$ t, seg$ s
<br /><a class="awr" href="#top">Back to Top</a><p />
where bitand(s.spare1, 4503599627370496) = 4503599627370496 and bitand(s.spare1,
 65536) <> 65536 and s.file# = t.file# and s.ts# = t.ts# and s.block# = t.block
# UNION select s.file#, s.block#, s.ts#, t.obj#, s.hwmincr, tab.obj# from tabpa

<p />
	    .4		 89    0.1	  0.4	83.2	5.1    1.7 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)
<a class="awr" name="36"></a>

	    .2		  1    0.0	  3.2	 5.3   47.8   18.6 a95n8p4vpxmps
begin prvt_hdm.execute_slave_actions; end;

<h2 class="awr">
SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
Initialization Parameters
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    649
</h2>
-> Captured SQL account for   97.9% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
<ul>
-------------- ------------ ------ ---------- ------ ------ ------ -------------

	    .2		  1    0.0	  3.2	 5.4   47.7   18.6 drktaf71uygnb
BEGIN sys.prvt_hdm.auto_execute( db_id => :bind_dbid,
<li class="awr"><a class="awr" href="#6800">Modified Parameters</a></li>
 inst_id => :bind_inst, end_snap => :bind_snap, t
ime_left_in_secs => :bind_time); END;

	    .0		 60    0.0	  0.1	36.4   33.4   26.1 fn5s5p6hr6702
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
<li class="awr"><a class="awr" href="#6850">Modified Multi-Valued Parameters</a></li>
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

	    .0		  1    0.0	566.3	 0.0	5.1   85.0 9m8b40kyd8ksd
Module: SQL*Plus
</ul>
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
<a class="awr" href="#top">Back to Top</a><p />

	    .0		  1    0.0	  0.0	55.1   50.8    6.1 a2kfmf3xv45kg
insert into WRH$_SERVICE_STAT (dbid, per_pdb, con_dbid, snap_id, instance_numb
er, service_name_hash, stat_id, value) select /*+ opt_param('_optimizer_mjc_ena
<a class="awr" name="6800"></a>
bled','false') no_query_transformation */ :dbid, 0 per_pdb, :src
dbid con_dbid, :snap_id, :instance_number, stat.service_name_hash, stat.stat_

	    .0		 11    0.0	  0.1	 8.9	7.2   85.5 fsprw99ahsvyn
<h3 class="awr">Modified Parameters</h3>
select typeid, roottoid from type$ where tvoid = :1

	    .0		 13    0.0	  0.1	13.8	8.6   72.9 8swypbbr0m372
select order#,columns,types from access$ where d_obj#=:1
<ul>

	    .0		 13    0.0	  0.1	12.7   14.8   66.3 3un99a0zwp4vd
select owner#,name,namespace,remoteowner,linkname,p_timestamp,p_obj#, nvl(proper
ty,0),subname,type#,flags,d_attrs from dependency$ d, obj$ o where d_obj#=:1 and
 p_obj#=obj#(+) order by order#
<li class="awr"> This section shows all the modified initialization parameters that  were in effect during the entire snapshot interval </li>

	    .0		  1    0.0	565.7	 0.0	5.1   85.5 98t98dbg02qny
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<li class="awr"> End Value is displayed only if the parameter value was modified within the snapshot interval</li>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	    .0		  5    0.0	  1.5	 0.4   79.0   11.5 fhf8upax5cxsz
</ul>
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

	    .0		  1    0.0	565.2	 0.0	5.1   85.7 4y8pwam7nhcwj
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	    .0		 10    0.0	  0.0	51.2   43.1	.0 cgtc5gb7c4g07
select dbid, status_flag from wrm$_wr_control order by mrct_snap_time_num desc

	    .0		  1    0.0	566.5	 0.0	5.1   85.1 1svba844x4jw9
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re

SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    649
-> Captured SQL account for   97.9% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			  ------------------------------------------------------


Key Instance Activity Stats		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
db block changes			  1,801,188	   2,917.2	    39.2
execute count				    331,888	     537.5	     7.2
gc cr block receive time		      6,158	      10.0	     0.1
gc cr blocks received			     35,036	      56.7	     0.8
gc current block receive time		     10,399	      16.8	     0.2
gc current blocks received		     92,749	     150.2	     2.0
logons cumulative				 14	       0.0	     0.0
opened cursors cumulative		    378,086	     612.4	     8.2
parse count (total)			     23,955	      38.8	     0.5
parse time elapsed				197	       0.3	     0.0
physical reads				  4,253,774	   6,889.4	    92.5
physical writes 			    709,396	   1,148.9	    15.4
redo size				612,583,116	 992,138.7	13,320.8
session cursor cache hits		    377,216	     610.9	     8.2
session logical reads			  7,234,630	  11,717.2	   157.3
user calls					166	       0.3	     0.0
user commits				     45,987	      74.5	     1.0
workarea executions - optimal			663	       1.1	     0.0
			  ------------------------------------------------------


Instance Activity Stats 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
ASSM bg: segment fix monitor			  1	       0.0	     0.0
ASSM cbk:blocks examined			617	       1.0	     0.0
ASSM cbk:blocks marked full			168	       0.3	     0.0
ASSM gsp:L1 bitmaps examined			483	       0.8	     0.0
ASSM gsp:L2 bitmap full 			  7	       0.0	     0.0
<table border="0" class="tdiff" summary="This table displays name and value of the modified initialization parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>TRUE</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>DB</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>TRUE</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>19.0.0</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
ASSM gsp:L2 bitmaps examined			 56	       0.1	     0.0
ASSM gsp:Optimized reject DB			  0	       0.0	     0.0
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>8192</td><td class='awrc'>&#160;&#160;</td></tr>
ASSM gsp:Optimized reject l1			  0	       0.0	     0.0
ASSM gsp:Search all				  9	       0.0	     0.0
ASSM gsp:Search hint				 10	       0.0	     0.0
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>+DATA</td><td class='awrnc'>&#160;&#160;</td></tr>
ASSM gsp:Search steal				  4	       0.0	     0.0
ASSM gsp:bump HWM				  4	       0.0	     0.0
ASSM gsp:get free block 			449	       0.7	     0.0
ASSM gsp:get free data block			352	       0.6	     0.0
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>example.com</td><td class='awrc'>&#160;&#160;</td></tr>
ASSM gsp:get free index block			 97	       0.2	     0.0
ASSM gsp:good hint				442	       0.7	     0.0
ASSM gsp:reject L1				  0	       0.0	     0.0
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>p30db</td><td class='awrnc'>&#160;&#160;</td></tr>
ASSM gsp:reject db				  0	       0.0	     0.0
ASSM rsv:fill reserve				  2	       0.0	     0.0
ASSM wasted db state change			  3	       0.0	     0.0
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>+FRA</td><td class='awrc'>&#160;&#160;</td></tr>
Batched IO (bound) vector count 		  0	       0.0	     0.0
Batched IO block miss count		  3,189,108	   5,165.1	    69.4
Batched IO buffer defrag count			  0	       0.0	     0.0
Batched IO double miss count		    256,670	     415.7	     5.6
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>274877906944</td><td class='awrnc'>&#160;&#160;</td></tr>
Batched IO same unit count			  0	       0.0	     0.0
Batched IO single block count		      1,496	       2.4	     0.0
Batched IO vector block count		  3,187,672	   5,162.8	    69.3
Batched IO vector read count		    255,039	     413.1	     5.6
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'>&#160;&#160;</td></tr>
Block Cleanout Optim referenced 		 12	       0.0	     0.0
CCursor + sql area evicted			 36	       0.1	     0.0
CPU used by this session		    122,351	     198.2	     2.7
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'>&#160;&#160;</td></tr>
CPU used when call started		     97,355	     157.7	     2.1
CR blocks created				507	       0.8	     0.0
Cached Commit SCN referenced		  3,441,112	   5,573.2	    74.8
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>1</td><td class='awrc'>&#160;&#160;</td></tr>
Client Advertised Receive Window		133	       0.2	     0.0
Client Advertised Send Window			133	       0.2	     0.0
Client Path Maximum Transmission	  1,245,165	   2,016.7	    27.1
Client Send Congestion Window			190	       0.3	     0.0
<tr><td scope="row" class='awrnc'>listener_networks</td><td class='awrnc'>&#160;&#160;</td><td class='awrnc'>&#160;&#160;</td></tr>
Client Time (usec) Last Ack Rece		 13	       0.0	     0.0
Client Time (usec) Last Data Rec		 13	       0.0	     0.0
Client Time (usec) Last Data Sen		 45	       0.1	     0.0
Client Time (usec) Round Trip Ti	     42,683	      69.1	     0.9
<tr><td scope="row" class='awrc'>local_listener</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522))</td><td class='awrc'>&#160;&#160;</td></tr>
Client Time (usec) Round Trip Ti	     43,893	      71.1	     1.0
Client Total Bytes Acked		    300,600	     486.9	     6.5
Client Total Bytes Received		    116,006	     187.9	     2.5
Client Total Number of Retransmi		  1	       0.0	     0.0
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>AMERICAN</td><td class='awrnc'>&#160;&#160;</td></tr>
Commit SCN cached				  0	       0.0	     0.0
DBWR checkpoint buffers written 	     25,921	      42.0	     0.6
DBWR checkpoints			     21,794	      35.3	     0.5
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>AMERICA</td><td class='awrc'>&#160;&#160;</td></tr>
DBWR fusion writes				127	       0.2	     0.0
DBWR object drop buffers written		 20	       0.0	     0.0
DBWR parallel query checkpoint b		  0	       0.0	     0.0
DBWR thread checkpoint buffers w		  0	       0.0	     0.0
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>300</td><td class='awrnc'>&#160;&#160;</td></tr>
DBWR transaction table writes			295	       0.5	     0.0
DBWR undo block writes			     31,865	      51.6	     0.7
DFO trees parallelized				  7	       0.0	     0.0
Effective IO time				  0	       0.0	     0.0
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>3371171840</td><td class='awrc'>&#160;&#160;</td></tr>
HSC Heap Segment Block Changes		    689,329	   1,116.4	    15.0
Heap Segment Array Inserts			166	       0.3	     0.0
Heap Segment Array Updates			 12	       0.0	     0.0

<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>640</td><td class='awrnc'>&#160;&#160;</td></tr>
Instance Activity Stats 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Ordered by statistic name
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'>&#160;&#160;</td></tr>

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'>&#160;&#160;</td></tr>
Heatmap Blklevel Flush Task Coun		  0	       0.0	     0.0
KTFB alloc req				     22,359	      36.2	     0.5
KTFB alloc space (block)	      8,079,671,296   13,085,823.0     175,694.7
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>10133438464</td><td class='awrc'>&#160;&#160;</td></tr>
KTFB alloc time (ms)			361,143,691	 584,907.8	 7,853.2
KTFB apply req				     44,123	      71.5	     1.0
KTFB apply time (ms)			  4,102,855	   6,645.0	    89.2
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>1</td><td class='awrnc'>&#160;&#160;</td></tr>
KTFB commit req 				  0	       0.0	     0.0
KTFB commit time (ms)				  0	       0.0	     0.0
KTFB free req				     21,767	      35.3	     0.5
KTFB free space (block) 		    962,296	   1,558.5	    20.9
<tr><td scope="row" class='awrc'>undo_tablespace</td><td class='awrc'>UNDOTBS1</td><td class='awrc'>&#160;&#160;</td></tr>
KTFB free time (ms)			204,093,047	 330,548.8	 4,438.1
LOB table id lookup cache misses		  0	       0.0	     0.0
Number of read IOs issued			  0	       0.0	     0.0
</table><p />
PX local messages recv'd			 84	       0.1	     0.0
PX local messages sent				 84	       0.1	     0.0
PX remote messages recv'd			 18	       0.0	     0.0
<hr align="left" width="20%" /><p />
PX remote messages sent 			 78	       0.1	     0.0
Parallel operations not downgrad		  7	       0.0	     0.0
Requests to/from client 			 57	       0.1	     0.0
SMON posted for undo segment shr		 20	       0.0	     0.0
<a class="awr" href="#36">Back to Initialization Parameters</a>
SQL*Net roundtrips to/from clien		 38	       0.1	     0.0
TBS Extension: tasks created			 41	       0.1	     0.0
TBS Extension: tasks executed			  0	       0.0	     0.0
<br /><a class="awr" href="#top">Back to Top</a><p />
active txn count during cleanout		239	       0.4	     0.0
auto extends on undo tablespace 		 41	       0.1	     0.0
background checkpoints completed		  0	       0.0	     0.0
background checkpoints started			  0	       0.0	     0.0
<a class="awr" name="6850"></a>
background timeouts			      5,477	       8.9	     0.1
blocks cleaned out using minact 	    251,482	     407.3	     5.5
branch node splits				  0	       0.0	     0.0
<h3 class="awr">Modified Multi-Valued Parameters</h3>
buffer is not pinned count		 10,862,997	  17,593.7	   236.2
buffer is pinned count			  5,258,977	   8,517.4	   114.4
bytes received via SQL*Net from 	     18,772	      30.4	     0.4
<ul>
bytes sent via SQL*Net to client	      9,950	      16.1	     0.2
calls to get snapshot scn: kcmgs	    429,936	     696.3	     9.4
calls to kcmgas 			    100,930	     163.5	     2.2
<li class="awr"> This section only displays parameters that have more than one value </li>
calls to kcmgcs 			    120,647	     195.4	     2.6
cell physical IO interconnect by     50,277,374,976   81,429,157.9   1,093,295.4
change write time			      2,015	       3.3	     0.0
cleanout - number of ktugct call	      1,147	       1.9	     0.0
<li class="awr">'(NULL)' indicates a missing parameter value </li>
cleanouts and rollbacks - consis		  3	       0.0	     0.0
cleanouts only - consistent read		 28	       0.1	     0.0
cluster key scan block gets			661	       1.1	     0.0
cluster key scans				447	       0.7	     0.0
commit batch/immediate performed		  1	       0.0	     0.0
<li class="awr"> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot'</li>
commit batch/immediate requested		  1	       0.0	     0.0
commit cleanout failures: block 		  1	       0.0	     0.0
commit cleanout failures: buffer		  1	       0.0	     0.0
commit cleanout failures: callba		 10	       0.0	     0.0
commit cleanout failures: cannot		  0	       0.0	     0.0
commit cleanouts			    689,523	   1,116.8	    15.0
</ul>
commit cleanouts successfully co	    689,511	   1,116.7	    15.0
commit immediate performed			  1	       0.0	     0.0
commit immediate requested			  1	       0.0	     0.0
commit txn count during cleanout		143	       0.2	     0.0
consistent changes			     40,500	      65.6	     0.9
consistent gets 			  5,041,206	   8,164.7	   109.6
consistent gets direct				  0	       0.0	     0.0
consistent gets examination		    655,616	   1,061.8	    14.3
consistent gets examination (fas	    655,293	   1,061.3	    14.3

<table border="0" class="tdiff" summary="This table displays name and value of multi-valued parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
Instance Activity Stats 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
<tr><td scope="row" class='awrc'>control_files</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'>&#160;&#160;</td></tr>
-------------------------------- ------------------ -------------- -------------
consistent gets from cache		  5,041,206	   8,164.7	   109.6
consistent gets pin			  4,385,590	   7,102.9	    95.4
consistent gets pin (fastpath)		  3,589,917	   5,814.2	    78.1
<tr><td scope="row" class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
cursor authentications				 83	       0.1	     0.0
cursor reload failures				  1	       0.0	     0.0
data blocks consistent reads - u		  5	       0.0	     0.0
db block changes			  1,801,188	   2,917.2	    39.2
</table><p />
db block gets				  2,193,399	   3,552.4	    47.7
db block gets direct				166	       0.3	     0.0
db block gets from cache		  2,193,233	   3,552.2	    47.7
<hr align="left" width="20%" /><p />
db block gets from cache (fastpa	  1,363,515	   2,208.4	    29.7
deferred (CURRENT) block cleanou	    253,754	     411.0	     5.5
dirty buffers inspected 		    574,524	     930.5	    12.5
enqueue conversions			    511,811	     828.9	    11.1
<a class="awr" href="#36">Back to Initialization Parameters</a>
enqueue releases			  1,486,140	   2,407.0	    32.3
enqueue requests			  1,486,263	   2,407.2	    32.3
enqueue timeouts				174	       0.3	     0.0
enqueue waits				     78,387	     127.0	     1.7
<br /><a class="awr" href="#top">Back to Top</a><p />
exchange deadlocks				  0	       0.0	     0.0
execute count				    331,888	     537.5	     7.2
fastpath consistent get quota li		  0	       0.0	     0.0
<p />
file io service time			159,774,448	 258,770.5	 3,474.3
free buffer inspected			  4,447,517	   7,203.2	    96.7
free buffer requested			  4,412,060	   7,145.8	    95.9
gc blocks compressed			      5,554	       9.0	     0.1
<a class="awr" name="42"></a>
gc blocks lost					 14	       0.0	     0.0
gc cleanout applied				  0	       0.0	     0.0
gc cleanout saved				  1	       0.0	     0.0
gc cr anti locks created		     37,159	      60.2	     0.8
<h2 class="awr">
gc cr anti locks shrunk 			  0	       0.0	     0.0
gc cr block build time				 22	       0.0	     0.0
gc cr block flush time				119	       0.2	     0.0
gc cr block receive time		      6,158	      10.0	     0.1
Active Session History (ASH) Report
gc cr blocks built			      1,527	       2.5	     0.0
gc cr blocks flushed				 21	       0.0	     0.0
gc cr blocks received			     35,036	      56.7	     0.8
</h2>
gc cr blocks served			      1,546	       2.5	     0.0
gc cr multiblock grant time		    146,386	     237.1	     3.2
gc cr multiblock grants received	  1,596,353	   2,585.5	    34.7
gc current block flush time			138	       0.2	     0.0
<ul>
gc current block pin time			  0	       0.0	     0.0
gc current block receive time		     10,399	      16.8	     0.2
gc current blocks flushed			 19	       0.0	     0.0
<li class="awr"><a class="awr" href="#9990">Top SQL with Top Events</a></li>
gc current blocks pinned			  1	       0.0	     0.0
gc current blocks received		     92,749	     150.2	     2.0
gc current blocks served		     16,568	      26.8	     0.4
gc force cr read cr				 73	       0.1	     0.0
<li class="awr"><a class="awr" href="#9989">Top SQL with Top Row Sources</a></li>
gc force cr read current			  5	       0.0	     0.0
gc kbytes saved 			     27,546	      44.6	     0.6
gc kbytes sent				    117,367	     190.1	     2.6
gc local grants 			  2,532,742	   4,102.0	    55.1
<li class="awr"><a class="awr" href="#9993">Top Sessions</a></li>
gc merge pi bg					  0	       0.0	     0.0
gc merge pi fg					 20	       0.0	     0.0
gc no change made				  1	       0.0	     0.0
gc read time waited				  0	       0.0	     0.0
<li class="awr"><a class="awr" href="#9992">Top Blocking Sessions</a></li>
gc read waits					  0	       0.0	     0.0
gc reader bypass grants 			  6	       0.0	     0.0
gc reader bypass waits				  1	       0.0	     0.0
gc remote grants			  1,780,249	   2,883.3	    38.7
gc status messages received		    490,398	     794.3	    10.7
<li class="awr"><a class="awr" href="#9991">Top PL/SQL Procedures</a></li>

Instance Activity Stats 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
gc status messages sent 		    217,203	     351.8	     4.7
gcs affinity lock failures			  2	       0.0	     0.0
<li class="awr"><a class="awr" href="#9988">Top Events</a></li>
gcs affinity lock grants		  1,633,621	   2,645.8	    35.5
gcs anti-locks created			     37,179	      60.2	     0.8
gcs data block access records		  4,390,996	   7,111.7	    95.5
gcs messages sent			  4,807,581	   7,786.4	   104.5
gcs read-mostly lock failures		     69,279	     112.2	     1.5
gcs read-mostly lock grants		    391,614	     634.3	     8.5
gcs stats management (SCM) proce		  0	       0.0	     0.0
<li class="awr"><a class="awr" href="#9994">Top Event P1/P2/P3 Values</a></li>
ges messages sent			    116,005	     187.9	     2.5
global enqueue get time 		     59,732	      96.7	     1.3
global enqueue gets async			  0	       0.0	     0.0
global enqueue gets sync		  7,138,352	  11,561.3	   155.2
<li class="awr"><a class="awr" href="#9987">Top DB Objects</a></li>
global enqueue releases 		  6,626,617	  10,732.5	   144.1
global undo segment hints helped		 10	       0.0	     0.0
global undo segment hints were s		  1	       0.0	     0.0
heap block compress			      3,154	       5.1	     0.1
<li class="awr"><a class="awr" href="#9986">Activity Over Time</a></li>
hot buffers moved to head of LRU	    155,295	     251.5	     3.4
immediate (CR) block cleanout ap		 31	       0.1	     0.0
immediate (CURRENT) block cleano		280	       0.5	     0.0
index crx upgrade (positioned)			  0	       0.0	     0.0
</ul>
index fast full scans (full)			  1	       0.0	     0.0
index fetch by key			      2,622	       4.3	     0.1
index range scans			    307,794	     498.5	     6.7
index reclamation/extension swit		  0	       0.0	     0.0
<a class="awr" href="#top">Back to Top</a><p />
leaf node 90-10 splits				  3	       0.0	     0.0
leaf node splits				 94	       0.2	     0.0
lob reads					277	       0.5	     0.0
lob writes				      3,216	       5.2	     0.1
<a class="awr" name="9990"></a>
lob writes unaligned			      3,216	       5.2	     0.1
logical read bytes from cache	     59,264,524,288   95,984,730.9   1,288,723.4
logons cumulative				 14	       0.0	     0.0
<h3 class="awr">Top SQL with Top Events</h3>
max cf enq hold time			      1,610	       2.6	     0.0
messages received			    128,338	     207.9	     2.8
messages sent				    128,337	     207.9	     2.8
min active SCN optimization appl		  0	       0.0	     0.0
<ul>
no buffer to keep pinned count			  0	       0.0	     0.0
no work - consistent read gets		  4,280,638	   6,932.9	    93.1
non-idle wait count			  3,635,653	   5,888.3	    79.1
opened cursors cumulative		    378,086	     612.4	     8.2
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
parse count (describe)				 19	       0.0	     0.0
parse count (failures)				  0	       0.0	     0.0
parse count (hard)				168	       0.3	     0.0
parse count (total)			     23,955	      38.8	     0.5
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
parse time cpu					 81	       0.1	     0.0
parse time elapsed				197	       0.3	     0.0
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
physical read IO requests		  4,253,575	   6,889.1	    92.5
physical read bytes		     34,846,908,416   56,437,998.4     757,755.6
physical read total IO requests 	  4,258,694	   6,897.4	    92.6
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
physical read total bytes	     35,600,901,120   57,659,163.8     774,151.4
physical read total multi block 		669	       1.1	     0.0
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
physical reads				  4,253,774	   6,889.4	    92.5
</ul>
physical reads cache			  4,253,774	   6,889.4	    92.5
physical reads cache prefetch		  2,864,582	   4,639.5	    62.3
physical reads direct				  0	       0.0	     0.0
physical reads direct (lob)			  0	       0.0	     0.0
physical reads direct temporary 		  0	       0.0	     0.0
physical reads prefetch warmup			  0	       0.0	     0.0
physical write IO requests		    673,985	   1,091.6	    14.7
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
physical write bytes		      5,811,372,032    9,412,089.1     126,369.9

<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>594</td><td align="right" class='awrc'>45.45</td>
Instance Activity Stats 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Ordered by statistic name

<td class='awrc'>db file parallel read</td><td align="right" class='awrc'>20.40</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>20.40</td>
Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
physical write total IO requests	    761,860	   1,233.9	    16.6
physical write total bytes	      7,331,900,416   11,874,734.5     159,434.2
<tr><td align="right" class='awrnc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrnc'><div class="hidden">1497866750</div></td><td align="right" class='awrnc'><div class="hidden">594</div></td><td align="right" class='awrnc'><div class="hidden">45.45454545454545454545454545454545454545</div></td>
<td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>19.79</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>19.56</td>
<td class='awrnc'></td></tr>
physical write total multi block	      1,875	       3.0	     0.0
physical writes 			    709,396	   1,148.9	    15.4
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">594</div></td><td align="right" class='awrc'><div class="hidden">45.45454545454545454545454545454545454545</div></td>
physical writes direct				230	       0.4	     0.0
physical writes direct (lob)			 64	       0.1	     0.0
physical writes direct temporary		100	       0.2	     0.0
physical writes from cache		    709,166	   1,148.6	    15.4
physical writes non checkpoint		    698,794	   1,131.8	    15.2
pinned buffers inspected		      2,099	       3.4	     0.1
<td class='awrc'>gc cr multi block request</td><td align="right" class='awrc'>1.76</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>1.76</td>
prefetch warmup blocks aged out 		  0	       0.0	     0.0
prefetched blocks aged out befor		  0	       0.0	     0.0
process last non-idle time			110	       0.2	     0.0
recursive calls 			    638,722	   1,034.5	    13.9
<td class='awrc'></td></tr>
recursive cpu usage			    116,565	     188.8	     2.5
redo KB read				    401,761	     650.7	     8.7
redo blocks checksummed by FG (e	    433,740	     702.5	     9.4
redo blocks written			  1,257,239	   2,036.2	    27.3
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>503</td><td align="right" class='awrnc'>38.43</td>
redo blocks written (group 0)		    666,032	   1,078.7	    14.5
redo blocks written (group 1)		    591,207	     957.5	    12.9
redo buffer allocation retries			  0	       0.0	     0.0
redo entries				  1,051,993	   1,703.8	    22.9
<td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>23.07</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>22.99</td>
redo log space requests 			  0	       0.0	     0.0
redo ordering marks				  0	       0.0	     0.0
redo size				612,583,116	 992,138.7	13,320.8
redo size for direct writes			180	       0.3	     0.0
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
redo subscn max counts				121	       0.2	     0.0
redo synch long waits				  0	       0.0	     0.0
redo synch time 				 24	       0.0	     0.0
redo synch time (usec)			    220,081	     356.4	     4.8
redo synch time overhead (usec) 	     31,072	      50.3	     0.7
redo synch time overhead count (		  5	       0.0	     0.0
<tr><td align="right" class='awrc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrc'><div class="hidden">203653710</div></td><td align="right" class='awrc'><div class="hidden">503</div></td><td align="right" class='awrc'><div class="hidden">38.42627960275019098548510313216195569137</div></td>
redo synch time overhead count (		  0	       0.0	     0.0
redo synch time overhead count (		  1	       0.0	     0.0
redo synch time overhead count (		  0	       0.0	     0.0
redo synch writes				 19	       0.0	     0.0
redo wastage				 10,522,248	  17,041.8	   228.8
<td class='awrc'>buffer busy waits</td><td align="right" class='awrc'>5.58</td><td class='awrc'>UPDATE STATEMENT</td><td align="right" class='awrc'>5.58</td>
redo write active strands		     43,120	      69.8	     0.9
redo write broadcast ack count			  6	       0.0	     0.0
redo write broadcast ack time		    365,556	     592.1	     8.0
redo write finish time		      1,041,064,826    1,686,107.0	22,638.2
<td class='awrc'></td></tr>
redo write gather time			 56,536,891	  91,567.1	 1,229.4
redo write info find				  6	       0.0	     0.0
redo write schedule time		 57,066,606	  92,425.0	 1,240.9
redo write size count (   4KB)		      5,396	       8.7	     0.1
redo write size count (   8KB)		      5,773	       9.4	     0.1
<tr><td align="right" class='awrnc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrnc'><div class="hidden">203653710</div></td><td align="right" class='awrnc'><div class="hidden">503</div></td><td align="right" class='awrnc'><div class="hidden">38.42627960275019098548510313216195569137</div></td>
redo write size count (  16KB)		      6,854	      11.1	     0.2
redo write size count (  32KB)		      6,522	      10.6	     0.1
redo write size count ( 128KB)		      6,312	      10.2	     0.1
redo write size count ( 256KB)			118	       0.2	     0.0
redo write size count ( 512KB)			  7	       0.0	     0.0
<td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>2.67</td><td class='awrnc'>UPDATE STATEMENT</td><td align="right" class='awrnc'>1.68</td>
redo write size count (1024KB)			  3	       0.0	     0.0
redo write size count (inf)			  0	       0.0	     0.0
redo write time 			    104,275	     168.9	     2.3
redo write time (usec)		      1,042,755,998    1,688,846.0	22,675.0
<td class='awrnc'></td></tr>
redo write total time		      1,097,318,287    1,777,215.0	23,861.5
redo write worker delay (usec)		 54,774,305	  88,712.4	 1,191.1
redo write worker delay count		     30,983	      50.2	     0.7
redo writes				     30,983	      50.2	     0.7
</table><p />
redo writes (group 0)			     15,924	      25.8	     0.4

Instance Activity Stats 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Ordered by statistic name

<hr align="left" width="20%" /><p />
Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
redo writes (group 1)			     15,059	      24.4	     0.3
redo writes adaptive all		     30,983	      50.2	     0.7
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
redo writes adaptive worker		     30,983	      50.2	     0.7
remote Oradebug requests			  0	       0.0	     0.0
rollback changes - undo records 		  0	       0.0	     0.0
rollbacks only - consistent read		  2	       0.0	     0.0
<br /><a class="awr" href="#top">Back to Top</a><p />
root node splits				  0	       0.0	     0.0
rows fetched via callback		      1,156	       1.9	     0.0
saved cleanout failures: callbac		  1	       0.0	     0.0
saved cleanouts 				  1	       0.0	     0.0
<a class="awr" name="9989"></a>
saved cleanouts successfully com		  0	       0.0	     0.0
securefile allocation bytes		    524,288	     849.1	    11.4
securefile allocation chunks			 25	       0.0	     0.0
securefile bytes non-transformed	    442,217	     716.2	     9.6
securefile direct read bytes			  0	       0.0	     0.0
securefile direct read ops			  0	       0.0	     0.0
<h3 class="awr">Top SQL with Top Row Sources</h3>
securefile direct write bytes		    524,288	     849.1	    11.4
securefile direct write ops			 25	       0.0	     0.0
securefile number of non-transfo		 25	       0.0	     0.0
segment cfs allocations 			 34	       0.1	     0.0
segment chunks allocation from d		 24	       0.0	     0.0
segment dispenser allocations			 24	       0.0	     0.0
segment dispenser load empty			 79	       0.1	     0.0
segment dispenser load tasks			 80	       0.1	     0.0
<ul>
segment prealloc bytes				  0	       0.0	     0.0
segment prealloc ops				187	       0.3	     0.0
segment prealloc tasks				184	       0.3	     0.0
segment prealloc time (ms)			324	       0.5	     0.0
segment prealloc ufs2cfs bytes			  0	       0.0	     0.0
segment total chunk allocation			  0	       0.0	     0.0
session cursor cache hits		    377,216	     610.9	     8.2
session logical reads			  7,234,630	  11,717.2	   157.3
shared hash latch upgrades - no 	  1,377,462	   2,230.9	    30.0
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
shared hash latch upgrades - wai		  2	       0.0	     0.0
shared io pool buffer get succes		 25	       0.0	     0.0
sorts (memory)					655	       1.1	     0.0
sorts (rows)				     73,167	     118.5	     1.6
sql area evicted				 37	       0.1	     0.0
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
sql area purged 				  1	       0.0	     0.0
summed dirty queue length		  3,521,264	   5,703.0	    76.6
switch current caused by our pin		 29	       0.1	     0.0
switch current to new buffer			 29	       0.1	     0.0
table fetch by rowid			  7,101,047	  11,500.8	   154.4
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
table fetch continued row			 31	       0.1	     0.0
table scan blocks gotten		     51,071	      82.7	     1.1
table scan disk non-IMC rows got	  5,276,905	   8,546.5	   114.8
table scan rows gotten			  5,276,905	   8,546.5	   114.8
table scans (cache partitions)			  0	       0.0	     0.0
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
table scans (direct read)			  0	       0.0	     0.0
table scans (short tables)		     21,986	      35.6	     0.5
temp space allocated (bytes)			  0	       0.0	     0.0
total cf enq hold time			      6,569	      10.6	     0.1
total number of cf enq holders			330	       0.5	     0.0
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
total number of times SMON poste		 21	       0.0	     0.0
transaction lock background gets		  0	       0.0	     0.0
transaction lock foreground requ		  0	       0.0	     0.0
</ul>
transaction rollbacks				  0	       0.0	     0.0
transaction tables consistent re		  0	       0.0	     0.0
transaction tables consistent re	     35,549	      57.6	     0.8
undo change vector size 		251,244,632	 406,915.4	 5,463.4

Instance Activity Stats 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Ordered by statistic name

<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
user calls					166	       0.3	     0.0
user commits				     45,987	      74.5	     1.0
user logons cumulative				  0	       0.0	     0.0
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>594</td><td align="right" class='awrc'>45.45</td>
user logouts cumulative 			 19	       0.0	     0.0
workarea executions - optimal			663	       1.1	     0.0
write clones created in backgrou		  1	       0.0	     0.0
write clones created in foregrou		 20	       0.0	     0.0
			  ------------------------------------------------------

<td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>44.31</td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>20.40</td>

Instance Activity Stats - Absolute Values  DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Statistics with absolute values (should not be diffed)

Statistic			     Begin Value       End Value
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
-------------------------------- --------------- ---------------
logons current				     108	      90
opened cursors current			     227	     130
session cursor cache count		  11,166	  11,079
session pga memory		     734,783,448     593,884,424
session pga memory max		     921,683,128     781,308,392
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>503</td><td align="right" class='awrnc'>38.43</td>
session uga memory		     621,223,464     570,037,760
session uga memory max		   6,171,765,928   6,260,718,704
			  ------------------------------------------------------

Instance Activity Stats - Thread Activity  DB/Inst: P30DB/p30db1  Snaps: 68-69
<td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>26.66</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>22.99</td>
-> Statistics identified by '(derived)' come from sources other than SYSSTAT

Statistic				      Total  per Hour
-------------------------------- ------------------ ---------
log switches (derived)				  0	  .00
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
			  ------------------------------------------------------

IOStat by Function summary		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> ordered by (Data Read + Write) desc

		 Reads:  Reqs	 Data	Writes:  Reqs	 Data	 Waits:    Avg
<tr><td align="right" class='awrc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrc'><div class="hidden">203653710</div></td><td align="right" class='awrc'><div class="hidden">503</div></td><td align="right" class='awrc'><div class="hidden">38.42627960275019098548510313216195569137</div></td>
Function Name	   Data per sec per sec    Data per sec per sec   Count    Time
--------------- ------- ------- ------- ------- ------- ------- ------- --------
Buffer Cache Re   32.2G  6842.8 53.465M      0M     0.0      0M    1.4M   5.91ms
DBWR		     4M     0.4   .006M    5.4G  1083.3  8.887M     246 253.59us
<td class='awrc'>UPDATE STATEMENT</td><td align="right" class='awrc'>11.61</td><td class='awrc'>buffer busy waits</td><td align="right" class='awrc'>5.58</td>
LGWR		     0M     0.0      0M    1.2G   139.4  1.976M   30.9K  31.65ms
Others		   715M     7.9  1.158M    222M     2.4    .36M    3934   3.18ms
<td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9993"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>9,16277</td><td align="right" class='awrc'>4.43</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.90</td>
<td class='awrc'>USER17</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>38/62 [ 62%]</td><td align="right" class='awrc'>17</td></tr>
<tr><td align="right" scope="row" class='awrnc'>15, 3416</td><td align="right" class='awrnc'>4.43</td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>1.38</td>
<td class='awrnc'>USER15</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>18/62 [ 29%]</td><td align="right" class='awrnc'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">15, 3416</div></td><td align="right" class='awrc'><div class="hidden">4.43086325439266615737203972498090145149</div></td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>1.30</td>
<td class='awrc'><div class="hidden">USER15</div></td><td class='awrc'><div class="hidden">sqlplus@mcracp...m (TNS V1-V3)</div></td><td align="right" class='awrc'>17/62 [ 28%]</td><td align="right" class='awrc'>8</td></tr>
<tr><td align="right" scope="row" class='awrnc'>22,45631</td><td align="right" class='awrnc'>4.43</td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>1.45</td>
<td class='awrnc'>USER1</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>19/62 [ 31%]</td><td align="right" class='awrnc'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>25,26846</td><td align="right" class='awrc'>4.43</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.75</td>
<td class='awrc'>USER19</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>36/62 [ 58%]</td><td align="right" class='awrc'>19</td></tr>
<tr><td align="right" scope="row" class='awrnc'>140,55215</td><td align="right" class='awrnc'>4.43</td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>1.30</td>
<td class='awrnc'>USER16</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>17/62 [ 28%]</td><td align="right" class='awrnc'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">140,55215</div></td><td align="right" class='awrc'><div class="hidden">4.43086325439266615737203972498090145149</div></td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>1.07</td>
<td class='awrc'><div class="hidden">USER16</div></td><td class='awrc'><div class="hidden">sqlplus@mcracp...m (TNS V1-V3)</div></td><td align="right" class='awrc'>14/62 [ 23%]</td><td align="right" class='awrc'>8</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9992"></a>
<h3 class="awr">Top Blocking Sessions</h3>
<ul>
<li class="awr"> Blocking session activity percentages are calculated with respect to	     waits on enqueues, latches and &quot;buffer busy&quot; only  </li>
<li class="awr"> '% Activity' represents the load on the database caused by	   a particular blocking session </li>
Direct Writes	     0M     0.0      0M      0M     0.0      0M       0
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the	blocking session was found active. </li>
Streams AQ	     0M     0.0      0M      0M     0.0      0M       4 750.00us
TOTAL:		  32.9G  6851.1 54.629M    6.8G  1225.2 11.222M    1.4M   6.46ms
			  ------------------------------------------------------
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the blocking session was found active.</li>

IOStat by Filetype summary		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
</ul>
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> Small Read and Large Read are average service times
-> Ordered by (Data Read + Write) desc

<table border="0" class="tdiff" summary="This table displays the top sessions that are blocking other sessions."><tr><th class="awrbg" scope="col">Blocking Sid (Inst)</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event Caused</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
		Reads:	Reqs	Data   Writes:	Reqs	Data	  Small    Large
Filetype Name	  Data per sec per sec	  Data per sec per sec	   Read     Read
<tr><td align="right" scope="row" class='awrc'>374,41238(     1)</td><td align="right" class='awrc'>3.82</td><td class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>3.59</td>
-------------- ------- ------- ------- ------- ------- ------- -------- --------
Data File	 32.2G	6843.6 53.468M	  5.4G	1083.4	8.887M	 1.54ms
Log File	  652M	   1.3	1.056M	  1.2G	 139.4	1.978M 408.45us 1351.66m
Control File	   66M	   6.8	 .107M	   14M	   1.4	 .023M	62.56us
<td class='awrc'>SYS</td><td class='awrc'>oracle@mcracpo...le.com (LG00)</td><td align="right" class='awrc'>54/62 [ 88%]</td><td align="right" class='awrc'>0</td></tr>
Other		    0M	   0.0	    0M	    2M	   0.4	 .003M
Temp File	    1M	   0.1	 .002M	    1M	   0.1	 .002M	  .00ns
TOTAL:		 32.9G	6851.8 54.632M	  6.6G	1224.7 10.892M	 1.53ms 1351.66m
<tr><td align="right" scope="row" class='awrnc'>877,55918(     1)</td><td align="right" class='awrnc'>1.15</td><td class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>0.99</td>
			  ------------------------------------------------------

IOStat by Function/Filetype summary	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
<td class='awrnc'>USER6</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>57/62 [ 92%]</td><td align="right" class='awrnc'>11</td></tr>
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> Ordered by (Data Read + Write) desc for each function

  Reads:  Reqs	  Data	 Writes:  Reqs	  Data	  Waits:      Avg
    Data per sec per sec    Data per sec per sec   Count     Time
 ------- ------- ------- ------- ------- ------- ------- ----------
</table><p />
Buffer Cache Reads
   32.2G  6842.2  53.46M      0M     0.0      0M    1.1M     4.63ms
 Buffer Cache Reads (Data File)
   32.2G  6842.1 53.458M      0M     0.0      0M    1.1M     4.63ms
 Buffer Cache Reads (Temp File)
      1M     0.1   .002M      0M     0.0      0M      50   240.00us
<hr align="left" width="20%" /><p />
DBWR
      4M     0.4   .006M    5.4G  1083.3  8.887M     246   253.59us
 DBWR (Data File)
      0M     0.0      0M    5.4G  1083.2  8.887M       0
 DBWR (Control File)
      4M     0.4   .006M      0M     0.0      0M     246   253.59us
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
 DBWR (Temp File)
      0M     0.0      0M      0M     0.0      0M       0
 LGWR (Log File)
      0M     0.0      0M    1.2G   139.4  1.976M       0
LGWR
      0M     0.0      0M    1.2G   139.4  1.976M       0
Others
<br /><a class="awr" href="#top">Back to Top</a><p />
    716M     7.9   1.16M    220M     2.0   .356M    3366   777.20us
 Others (Log File)
    653M     1.3  1.058M      0M     0.0      0M     132   848.48us
 Others (Data File)
      1M     0.1   .002M    206M     0.5   .334M     164     7.34ms
<a class="awr" name="9991"></a>
 Others (Control File)
     62M     6.4     .1M     14M     1.4   .023M    3070   423.64us
 Others (Temp File)
      0M     0.0      0M      0M     0.0      0M       0
 Direct Writes (Data File)
      0M     0.0      0M      0M     0.0      0M       0
Direct Writes
<h3 class="awr">Top PL/SQL Procedures</h3>
      0M     0.0      0M      0M     0.0      0M       0
 Streams AQ (Data File)
      0M     0.0      0M      0M     0.0      0M       4   750.00us
Streams AQ
      0M     0.0      0M      0M     0.0      0M       4   750.00us
TOTAL:
<ul>
   32.9G  6850.4 54.626M    6.8G  1224.8 11.219M    1.1M     4.62ms
			  ------------------------------------------------------


Tablespace IO Stats			   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
			  ------------------------------------------------------


File IO Stats				   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------

<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>

Buffer Pool Statistics			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Standard block size Pools  D: default,  K: keep,  R: recycle
</ul>
-> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k

							    Free   Writ   Buffer
     Number of Pool	  Buffer     Physical	 Physical   Buff   Comp     Busy
P      Buffers Hit%	    Gets	Reads	   Writes   Wait   Wait    Waits
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
--- ---------- ---- ------------ ------------ ----------- ------ ------ --------
D      931,982	 41    7,240,900    4,256,281	  709,166      0      0   36,004
			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>38.50</td>

Checkpoint Activity			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total Physical Writes:		       709,396
<td class='awrc'>SQL</td><td align="right" class='awrc'>38.50</td></tr>

					  Other    Autotune	 Thread
       MTTR    Log Size    Log Ckpt    Settings        Ckpt	   Ckpt
</table><p />
     Writes	 Writes      Writes	 Writes      Writes	 Writes
----------- ----------- ----------- ----------- ----------- -----------
	  0	      0 	  0	      0      25,921	      0
<hr align="left" width="20%" /><p />
			  ------------------------------------------------------

Instance Recovery Stats 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> B: Begin Snapshot,  E: End Snapshot
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>

									    Estd
  Targt  Estd					  Log Ckpt Log Ckpt    Opt   RAC
  MTTR	 MTTR Recovery	Actual	 Target   Log Sz   Timeout Interval    Log Avail
<br /><a class="awr" href="#top">Back to Top</a><p />
   (s)	  (s) Estd IOs RedoBlks RedoBlks RedoBlks RedoBlks RedoBlks  Sz(M)  Time
- ----- ----- -------- -------- -------- -------- -------- -------- ------ -----
B     0    33	 57884	 103744 1.70E+07 1.70E+07      N/A	N/A    N/A    11
<a class="awr" name="9988"></a>
E     0    61	 67299	 553625 1.70E+07 1.70E+07      N/A	N/A    N/A    23
			  ------------------------------------------------------

<h3 class="awr">Top Events</h3>
MTTR Advisory				       DB/Inst: P30DB/p30db1  Snap: 69

		  No data exists for this section of the report.
<ul>
			  ------------------------------------------------------

Buffer Pool Advisory			       DB/Inst: P30DB/p30db1  Snap: 69
-> Only rows with estimated physical reads >0 are displayed
<li class="awr"> Top Events by DB Time </li>
-> ordered by Block Size, Buffers For Estimate

				    Est
				   Phys      Estimated			Est
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
    Size for   Size	 Buffers   Read     Phys Reads	   Est Phys %DBtime
P    Est (M) Factor  (thousands) Factor    (thousands)	  Read Time for Rds
--- -------- ------ ------------ ------ -------------- ------------ -------
</ul>
D	 800	 .1	      93    1.4 	41,923		  1 1.1E+05
D      1,600	 .2	     186    1.3 	39,747		  1 1.0E+05
D      2,400	 .3	     280    1.3 	38,139		  1 1.0E+05
D      3,200	 .4	     373    1.2 	36,780		  1 9.6E+04
D      4,000	 .5	     466    1.2 	35,572		  1 9.3E+04
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
D      4,800	 .6	     559    1.1 	34,449		  1 9.0E+04
D      5,600	 .7	     652    1.1 	33,389		  1 8.8E+04
D      6,400	 .8	     746    1.1 	32,378		  1 8.5E+04
D      7,200	 .9	     839    1.0 	31,425		  1 8.2E+04
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
D      8,000	1.0	     932    1.0 	30,512		  1 8.0E+04
D      8,800	1.1	   1,025    1.0 	29,703		  1 7.8E+04
D      9,600	1.2	   1,118    1.0 	29,230		  1 7.7E+04
D     10,400	1.3	   1,212    1.0 	29,008		  1 7.6E+04
<td align="right" class='awrc'>42.86</td><td align="right" class='awrc'>9.09</td></tr>
D     11,200	1.4	   1,305    0.9 	28,792		  1 7.5E+04
D     12,000	1.5	   1,398    0.9 	28,588		  1 7.5E+04
D     12,800	1.6	   1,491    0.9 	28,391		  1 7.4E+04
D     13,600	1.7	   1,584    0.9 	28,203		  1 7.4E+04
D     14,400	1.8	   1,678    0.9 	28,021		  1 7.3E+04
D     15,200	1.9	   1,771    0.9 	27,844		  1 7.3E+04
D     16,000	2.0	   1,864    0.9 	27,661		  1 7.3E+04
			  ------------------------------------------------------


PGA Aggr Summary			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory

PGA Cache Hit %   W/A MB Processed  Extra W/A MB Read/Written
--------------- ------------------ --------------------------
	  100.0 	       143			    0
<tr><td scope="row" class='awrnc'>db file parallel read</td><td class='awrnc'>User I/O</td><td class='awrnc'>FOREGROUND</td>
			  ------------------------------------------------------

PGA Aggr Target Stats			   DB/Inst: P30DB/p30db1  Snaps: 68-69
<td align="right" class='awrnc'>20.40</td><td align="right" class='awrnc'>4.33</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td class='awrc'>System I/O</td><td class='awrc'>BACKGROUND</td>
<td align="right" class='awrc'>7.94</td><td align="right" class='awrc'>1.69</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td class='awrnc'>Concurrency</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>5.58</td><td align="right" class='awrnc'>1.18</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>FOREGROUND</td>
-> B: Begin Snap   E: End Snap (rows dentified with B or E contain data
<td align="right" class='awrc'>4.51</td><td align="right" class='awrc'>0.96</td></tr>
   which is absolute i.e. not diffed over the interval)
-> Auto PGA Target - actual workarea memory target
-> W/A PGA Used    - amount of memory used for all Workareas (manual + auto)
-> %PGA W/A Mem    - percentage of PGA memory allocated to workareas
</table><p />
-> %Auto W/A Mem   - percentage of workarea memory controlled by Auto Mem Mgmt
-> %Man W/A Mem    - percentage of workarea memory under manual control

						%PGA  %Auto   %Man
<hr align="left" width="20%" /><p />
    PGA Aggr   Auto PGA   PGA Mem    W/A PGA	 W/A	W/A    W/A Global Mem
   Target(M)  Target(M)  Alloc(M)    Used(M)	 Mem	Mem    Mem   Bound(K)
- ---------- ---------- ---------- ---------- ------ ------ ------ ----------
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
B      3,215	  1,841    1,503.1	  0.0	  .0	 .0	.0    329,210
E      3,215	  1,923    1,326.4	  0.0	  .0	 .0	.0    329,210
			  ------------------------------------------------------

<br /><a class="awr" href="#top">Back to Top</a><p />
PGA Aggr Target Histogram		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Optimal Executions are purely in-memory operations

  Low	  High
<a class="awr" name="9994"></a>
Optimal Optimal    Total Execs	Optimal Execs 1-Pass Execs M-Pass Execs
------- ------- -------------- -------------- ------------ ------------
     2K      4K 	   421		  421		 0	      0
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
    64K    128K 	    43		   43		 0	      0
   128K    256K 	    46		   46		 0	      0
   256K    512K 	    28		   28		 0	      0
   512K   1024K 	    62		   62		 0	      0
<ul>
     1M      2M 	    61		   61		 0	      0
     2M      4M 	     3		    3		 0	      0
			  ------------------------------------------------------

<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
PGA Memory Advisory			       DB/Inst: P30DB/p30db1  Snap: 69
-> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value
   where Estd PGA Overalloc Count is 0

<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
				       Estd Extra    Estd P Estd PGA
PGA Target    Size	     W/A MB   W/A MB Read/    Cache Overallo	Estd
  Est (MB)   Factr	  Processed Written to Disk   Hit %    Count	Time
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
---------- ------- ---------------- ---------------- ------ -------- -------
       402     0.1	   12,563.1	       885.8   93.0	  55 7.2E+07
       804     0.3	   12,563.1	       729.6   95.0	  30 7.1E+07
</ul>
     1,608     0.5	   12,563.1	       321.9   98.0	   0 6.9E+07
     2,411     0.8	   12,563.1	       321.9   98.0	   0 6.9E+07
     3,215     1.0	   12,563.1		 0.0  100.0	   0 6.7E+07
     3,858     1.2	   12,563.1		 0.0  100.0	   0 6.7E+07
     4,501     1.4	   12,563.1		 0.0  100.0	   0 6.7E+07
     5,144     1.6	   12,563.1		 0.0  100.0	   0 6.7E+07
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
     5,787     1.8	   12,563.1		 0.0  100.0	   0 6.7E+07
     6,430     2.0	   12,563.1		 0.0  100.0	   0 6.7E+07
     9,645     3.0	   12,563.1		 0.0  100.0	   0 6.7E+07
    12,860     4.0	   12,563.1		 0.0  100.0	   0 6.7E+07
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>42.86</td><td align="right" class='awrc'>&quot;2&quot;,&quot;24942388&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.08</td>
    19,290     6.0	   12,563.1		 0.0  100.0	   0 6.7E+07
    25,720     8.0	   12,563.1		 0.0  100.0	   0 6.7E+07
			  ------------------------------------------------------


<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
Shared Pool Advisory			       DB/Inst: P30DB/p30db1  Snap: 69
-> SP: Shared Pool     Est LC: Estimated Library Cache	 Factr: Factor
-> Note there is often a 1:Many correlation between a single logical object
   in the Library Cache, and the physical number of memory objects associated
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>20.40</td><td align="right" class='awrnc'>&quot;1&quot;,&quot;13&quot;,&quot;13&quot;</td><td align="right" class='awrnc'>18.11</td>
   with it.  Therefore comparing the number of Lib Cache objects (e.g. in
   v$librarycache), with the number of Lib Cache Memory Objects is invalid.

				       Est LC Est LC  Est LC Est LC
  Shared    SP	 Est LC 		 Time	Time	Load   Load	  Est LC
    Pool  Size	   Size       Est LC	Saved  Saved	Time   Time	 Mem Obj
 Size(M) Factr	    (M)      Mem Obj	  (s)  Factr	 (s)  Factr	Hits (K)
<td class='awrnc'>files</td><td class='awrnc'>blocks</td><td class='awrnc'>requests</td></tr>
-------- ----- -------- ------------ -------- ------ ------- ------ ------------
   1,440   1.0	    122        3,947  107,720	 1.0	 149	1.0	   4,892
   1,472   1.0	    154        5,140  107,725	 1.0	 144	1.0	   4,893
   1,504   1.0	    186        6,072  107,729	 1.0	 140	 .9	   4,894
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>7.94</td><td align="right" class='awrc'>&quot;2&quot;,&quot;4&quot;,&quot;2&quot;</td><td align="right" class='awrc'>0.46</td>
   1,536   1.1	    218        7,077  107,737	 1.0	 132	 .9	   4,894
   1,568   1.1	    250        8,335  107,743	 1.0	 126	 .8	   4,895
   1,600   1.1	    282        9,260  107,749	 1.0	 120	 .8	   4,896
   1,632   1.1	    314       10,060  107,751	 1.0	 118	 .8	   4,896
<td class='awrc'>files</td><td class='awrc'>blocks</td><td class='awrc'>requests</td></tr>
   1,664   1.2	    346       10,718  107,753	 1.0	 116	 .8	   4,897
   1,696   1.2	    378       12,314  107,754	 1.0	 115	 .8	   4,897
   1,728   1.2	    410       13,614  107,756	 1.0	 113	 .8	   4,897
   1,760   1.2	    442       15,364  107,756	 1.0	 113	 .8	   4,897
   1,920   1.3	    600       18,846  107,757	 1.0	 112	 .8	   4,897
   2,080   1.4	    600       18,846  107,757	 1.0	 112	 .8	   4,897
   2,240   1.6	    600       18,846  107,757	 1.0	 112	 .8	   4,897
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>5.65</td><td align="right" class='awrnc'>&quot;4&quot;,&quot;2&quot;,&quot;13&quot;</td><td align="right" class='awrnc'>5.65</td>
   2,400   1.7	    600       18,846  107,757	 1.0	 112	 .8	   4,897
   2,560   1.8	    600       18,846  107,757	 1.0	 112	 .8	   4,897
   2,720   1.9	    600       18,846  107,757	 1.0	 112	 .8	   4,897
   2,880   2.0	    600       18,846  107,757	 1.0	 112	 .8	   4,897
			  ------------------------------------------------------

SGA Target Advisory			       DB/Inst: P30DB/p30db1  Snap: 69

<td class='awrnc'>file#</td><td class='awrnc'>block#</td><td class='awrnc'>class#</td></tr>
SGA Target   SGA Size	    Est DB     Est Physical
  Size (M)     Factor	  Time (s)	      Reads
---------- ---------- ------------ ----------------
     3,624	  0.4	   119,485	 39,747,843
     4,832	  0.5	   111,727	 36,779,036
     6,040	  0.6	   108,544	 35,570,765
     7,248	  0.8	   102,836	 33,389,165
     8,456	  0.9	    97,728	 31,424,199
     9,664	  1.0	    95,298	 30,511,893
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>1.99</td><td align="right" class='awrc'>&quot;1129447430&quot;,&quot;65639&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.31</td>
    10,872	  1.1	    91,944	 29,230,393
    12,080	  1.3	    91,362	 29,007,657
    13,288	  1.4	    90,257	 28,586,593
    14,496	  1.5	    89,285	 28,202,143
    15,704	  1.6	    88,770	 28,022,123
    16,912	  1.8	    87,836	 27,662,082
    18,120	  1.9	    87,827	 27,662,082
<td class='awrc'>name|mode</td><td class='awrc'>2</td><td class='awrc'>0</td></tr>
    19,328	  2.0	    87,827	 27,662,082
			  ------------------------------------------------------

Streams Pool Advisory			       DB/Inst: P30DB/p30db1  Snap: 69
</table><p />

		  No data exists for this section of the report.
			  ------------------------------------------------------

<hr align="left" width="20%" /><p />
Java Pool Advisory			       DB/Inst: P30DB/p30db1  Snap: 69

		  No data exists for this section of the report.
			  ------------------------------------------------------

Buffer Wait Statistics			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> ordered by wait time desc, waits desc

Class			 Waits Total Wait Time (s)  Avg Time (ms)
------------------ ----------- ------------------- --------------
file header block	35,845		       742	       21
undo header		    54			 0		0
3rd level bmb		     1			 0		0
			  ------------------------------------------------------
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>


Enqueue Activity			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> only enqueues with requests are shown
<br /><a class="awr" href="#top">Back to Top</a><p />
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
-> ordered by Wait Time desc, Waits desc, Requests desc

Enqueue Type (Request Reason)
<a class="awr" name="9987"></a>
------------------------------------------------------------------------------
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
------------ ------------ ----------- ----------- ------------ --------------
<h3 class="awr">Top DB Objects</h3>
CR-Reuse Block Range (block range reuse ckpt)
     217,340	  217,340	    0	   54,752	   284		 5.20
US-Undo Segment
     379,694	  379,643	    0	   22,858	   217		 9.51
<ul>
HW-Segment High Water Mark
     803,569	  803,527	    0	      392	     8		20.90
CF-Controlfile Transaction
       1,820	    1,820	    0	      121	     0		 2.00
RO-Multiple Object Reuse (fast object reuse)
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
	 100	      100	    0	       30	     0		 2.70
TM-DML
      45,936	   45,937	    0		1	     0		20.00
WF-AWR Flush
	  21	       21	    0	       14	     0		 1.07
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
PS-PX Process Reservation
	  48	       48	    0	       12	     0		 1.17
FB-Format Block
	  11	       11	    0		7	     0		 1.00
DW-In memory Dispenser
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
	 187	       18	  169		4	     0		 1.50
TO-Temp Object
</ul>
	  27	       27	    0		3	     0		 2.00
WT-AWR CDB-Wide Table Lock
	  19	       19	    0		4	     0		  .75
TT-Tablespace
     423,778	  423,778	    0		3	     0		 1.00
TD-KTF map table enqueue (KTF dump entries)
	   2		2	    0		2	     0		 1.00
TA-Instance Undo
	   2		2	    0		2	     0		  .50
PW-Buffer Cache PreWarm (flush prewarm buffers)
	   2		2	    0		1	     0		 1.00
TK-Auto Task Serialization (Auto Task Serialization)
	   1		1	    0		1	     0		 1.00
TX-Transaction
      89,935	   89,931	    5		0	     0		  N/A
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
IS-Instance State
      21,750	   21,750	    0		0	     0		  N/A
JG-Job Scheduler1
       2,583	    2,583	    0		0	     0		  N/A
JG-Job Scheduler1 (queue lock)
<tr><td align="right" scope="row" class='awrc'>73433</td><td align="right" class='awrc'>4.20</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.52</td>
       2,583	    2,583	    0		0	     0		  N/A
SJ-KTSJ Slave Task Cancel (Slave Task Cancel)
	 667	      667	    0		0	     0		  N/A
DD-ASM Local Disk Group
	 551	      551	    0		0	     0		  N/A
<td class='awrc'>USER7.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
JG-Job Scheduler1 (q mem clnup lck)
	 246	      246	    0		0	     0		  N/A
BU-Buddy Instance Context (recovery set construct)
	 188	      188	    0		0	     0		  N/A
FP-File Object (global fob contention)
	 171	      171	    0		0	     0		  N/A
CU-Cursor
	 113	      113	    0		0	     0		  N/A
XL-ASM Extent Fault Lock (fault extent map)
	  50	       50	    0		0	     0		  N/A
CT-Block Change Tracking (CTWR process start/stop)
	  41	       41	    0		0	     0		  N/A
CT-Block Change Tracking (state)
	  41	       41	    0		0	     0		  N/A

Enqueue Activity			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> only enqueues with requests are shown
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
-> ordered by Wait Time desc, Waits desc, Requests desc
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">73433</div></td><td align="right" class='awrnc'><div class="hidden">4.20168067226890756302521008403361344538</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>1.15</td>

Enqueue Type (Request Reason)
------------------------------------------------------------------------------
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
<td class='awrnc'><div class="hidden">USER7.CF1 (TABLE)</div></td><td class='awrnc'><div class="hidden">IOPS</div></td></tr>
------------ ------------ ----------- ----------- ------------ --------------
FD-Flashback Database (Flashback logical operations)
	  41	       41	    0		0	     0		  N/A
MV-Online Datafile Move (datafile move)
<tr><td align="right" scope="row" class='awrc'>73533</td><td align="right" class='awrc'>4.20</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.83</td>
	  41	       41	    0		0	     0		  N/A
RP-Resilver / Repair
	  41	       41	    0		0	     0		  N/A
SW-Suspend Writes
	  41	       41	    0		0	     0		  N/A
<td class='awrc'>USER26.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
SE-Session Migration
	  14	       14	    0		0	     0		  N/A
TH-Threshold Chain (metric threshold evaluation)
	  10	       10	    0		0	     0		  N/A
AF-Advisor Framework (task serialization)
	   7		7	    0		0	     0		  N/A
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">73533</div></td><td align="right" class='awrnc'><div class="hidden">4.20168067226890756302521008403361344538</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>1.30</td>
DA-Instance DP Array (Slave Process Array)
	   7		7	    0		0	     0		  N/A
SQ-Sequence Cache
	   7		7	    0		0	     0		  N/A
PR-Process Startup
	   6		6	    0		0	     0		  N/A
<td class='awrnc'><div class="hidden">USER26.CF1 (TABLE)</div></td><td class='awrnc'><div class="hidden">IOPS</div></td></tr>
PV-KSV slave startup (syncstart)
	   5		5	    0		0	     0		  N/A
MR-Media Recovery
	   4		4	    0		0	     0		  N/A
AE-Edition Lock (lock)
	   3		3	    0		0	     0		  N/A
<tr><td align="right" scope="row" class='awrc'>73562</td><td align="right" class='awrc'>4.20</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>3.13</td>
SH-Active Session History Flushing
	   2		2	    0		0	     0		  N/A
XR-Quiesce / Force Logging (database force logging)
	   2		2	    0		0	     0		  N/A
			  ------------------------------------------------------


Undo Segment Summary			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Min/Max TR (mins) - Min and Max Tuned Retention (minutes)
-> STO - Snapshot Too Old count,  OOS - Out of Space count
-> Undo segment block stats:
-> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed
-> eS - expired   Stolen,   eR - expired   Released,   eU - expired   reUsed

Undo   Num Undo       Number of  Max Qry   Max Tx Min/Max   STO/     uS/uR/uU/
 TS# Blocks (K)    Transactions  Len (s) Concurcy TR (mins) OOS      eS/eR/eU
<td class='awrc'>USER32.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
---- ---------- --------------- -------- -------- --------- ----- --------------
   2	   20.5 	 57,741    1,016       17 39.1/39.1 0/0   0/0/0/9139/673
			  ------------------------------------------------------

Undo Segment Stats			   DB/Inst: P30DB/p30db1  Snaps: 68-69
<tr><td align="right" scope="row" class='awrnc'>73492</td><td align="right" class='awrnc'>4.13</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.98</td>
-> Most recent 35 Undostat rows, ordered by Time desc

		Num Undo    Number of Max Qry  Max Tx Tun Ret STO/    uS/uR/uU/
End Time	  Blocks Transactions Len (s)	Concy  (mins) OOS     eS/eR/eU
<td class='awrnc'>USER18.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
------------ ----------- ------------ ------- ------- ------- ----- ------------
08-Feb 10:32	  20,464       57,741	1,016	   17	   39 0/0   0/0/0/9139/6
			  ------------------------------------------------------


<tr><td align="right" scope="row" class='awrc'>73503</td><td align="right" class='awrc'>4.13</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.83</td>
Latch Activity				   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
<td class='awrc'>USER21.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">73503</div></td><td align="right" class='awrnc'><div class="hidden">4.12528647822765469824293353705118411001</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>1.07</td>
AQ Background: interrupt	      1    0.0		   0	       22    0.0
AQ Coord jobx_kwsbgsgn l	     20    0.0		   0		0    N/A
AQ Message drive state o	      1    0.0		   0		0    N/A
AQ Sharded master pool l	     20    0.0		   0		0    N/A
<td class='awrnc'><div class="hidden">USER21.CF1 (TABLE)</div></td><td class='awrnc'><div class="hidden">IOPS</div></td></tr>
AQ deq hash table latch 	      1    0.0		   0		0    N/A
ASM Keyed state latch		     30    0.0		   0		0    N/A
ASM allocation			 37,423    0.0		   0		0    N/A
</table><p />
ASM connection state lat	  5,811    0.0		   0		0    N/A
ASM db client latch		 48,245    0.0		   0		0    N/A
ASM map headers 		  1,864    0.0		   0		0    N/A
ASM map load waiting lis	    485    0.0		   0		0    N/A
<hr align="left" width="20%" /><p />
ASM map operation freeli	    270    0.0		   0		0    N/A
ASM map operation hash t     11,218,878    0.0	  0.1	   0		0    N/A
ASM network background l	  4,866    0.0		   0		0    N/A
ASM network state latch 	    394    0.0		   0		0    N/A
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
ASM remote client latch 	     10    0.0		   0		0    N/A
AWR Alerted Metric Eleme	  5,605    0.0		   0		0    N/A
Autotask management		     10    0.0		   0		0    N/A
Change Notification Hash	    237    0.0		   0		0    N/A
<br /><a class="awr" href="#top">Back to Top</a><p />
Column stats entry latch	      1    0.0		   0		0    N/A
Consistent RBA			 31,033    0.0	  0.0	   0		0    N/A
DML lock allocation		 92,555    0.0	  0.0	   0		0    N/A
Event Group Locks		     21    0.0		   0		0    N/A
<a class="awr" name="9986"></a>
FIB s.o chain latch		    348    0.0		   0		0    N/A
FOB consolidated s.o lis	    348    0.0		   0		0    N/A
File State Object Pool P	      1    0.0		   0		0    N/A
GCS logfile block		      1    0.0		   0		0    N/A
<h3 class="awr">Activity Over Time</h3>
GCS logfile write queue 	      1    0.0		   0		0    N/A
Hang Manager wait event 	     41    0.0		   0	    7,264    0.0
I/O Staticstics latch		      1    0.0		   0		0    N/A
ILM Stats Stripe Latch		      1    0.0		   0		0    N/A
<ul>
ILM Stats main anchor la	    124    0.0		   0		0    N/A
ILM access tracking exte	      1    0.0		   0		0    N/A
ILM activity tracking la	      1    0.0		   0		0    N/A
IM Global dictionary lat	      1    0.0		   0		0    N/A
IM Global dictionary que	      1    0.0		   0		0    N/A
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
IM Global dictionary rw 	      1    0.0		   0		0    N/A
IM area sb latch		      1    0.0		   0		0    N/A
IM area scb latch		      1    0.0		   0		0    N/A
IM emb latch			      1    0.0		   0		0    N/A
IM seg hdr latch		      1    0.0		   0		0    N/A
<li class="awr"> Top 3 events are reported in each of those slots </li>
IMFS defer write list		      1    0.0		   0		0    N/A
IMXT hash table latch		      1    0.0		   0		0    N/A
IPC other latch 		      7    0.0		   0		0    N/A
IPC stats buffer allocat	      1    0.0		   0		0    N/A
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
In memory undo latch		      1    0.0		   0		0    N/A
JS Sh mem access		    124    0.0		   0		0    N/A
JS broadcast add buf lat	    140    0.0		   0		0    N/A
JS broadcast drop buf la	    140    0.0		   0		0    N/A
JS broadcast load blnc l	    140    0.0		   0		0    N/A
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
JS mem alloc latch		      4    0.0		   0		0    N/A
JS queue access latch		      5    0.0		   0		0    N/A
JS queue state obj latch	  5,166    0.0		   0		0    N/A
JS slv state obj latch		      1    0.0		   0		0    N/A
KCNIBR - invalid block r	      1    0.0		   0		0    N/A
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
KDCStatHash latch		      1    0.0		   0		0    N/A
KDFI Buffer Latch		      1    0.0		   0		0    N/A
</ul>
KDFI Hash Bucket Latch		      1    0.0		   0		0    N/A
KDFI Hash Elem Latch		      1    0.0		   0		0    N/A
KDMADO action list latch	      1    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
<tr><td align="right" class='awrc'>10:27:31   (2.5 min)</td><td align="right" class='awrc'>360</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>154</td><td align="right" class='awrc'>11.76</td></tr>
------------------------ -------------- ------ ------ ------ ------------ ------
KDMADO bll latch		      1    0.0		   0		0    N/A
<tr><td align="right" class='awrnc'><div class="hidden">10:27:31   (2.5 min)</div></td><td align="right" class='awrnc'><div class="hidden">360</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>4.35</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">10:27:31   (2.5 min)</div></td><td align="right" class='awrc'><div class="hidden">360</div></td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>2.60</td></tr>
<tr><td align="right" class='awrnc'>10:30:00   (5.0 min)</td><td align="right" class='awrnc'>675</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>287</td><td align="right" class='awrnc'>21.93</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">10:30:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">675</div></td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>154</td><td align="right" class='awrc'>11.76</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">10:30:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">675</div></td><td class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>4.20</td></tr>
<tr><td align="right" class='awrc'>10:35:00   (2.8 min)</td><td align="right" class='awrc'>274</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>9.17</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">10:35:00   (2.8 min)</div></td><td align="right" class='awrnc'><div class="hidden">274</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>4.28</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">10:35:00   (2.8 min)</div></td><td align="right" class='awrc'><div class="hidden">274</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>1.83</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99995"></a>
<h2>ADDM Task ADDM:3393773525_1_69</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_1_69&apos;
	  -------------------------------------------

Analysis Period
---------------
AWR snapshot range from 68 to 69.
Time period starts at 08-FEB-20 10.27.31 AM
Time period ends at 08-FEB-20 10.37.49 AM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of instance p30db1, numbered 1 and hosted at
mcracpoc1.example.com.

Activity During the Analysis Period
-----------------------------------
KDMADO latch			      1    0.0		   0		0    N/A
Total database time was 10808 seconds.
KFC FX Hash Latch		      1    0.0		   0		0    N/A
KFC Hash Latch			      1    0.0		   0		0    N/A
KFCL LE Freelist		      1    0.0		   0		0    N/A
The average number of active sessions was 17.49.
KFIAS client latch		      1    0.0		   0		0    N/A
KFIAS cluster latch		      1    0.0		   0		0    N/A
KFIAS endpoint latch		      1    0.0		   0		0    N/A

KFIAS node latch		      1    0.0		   0		0    N/A
KFIAS process latch		      1    0.0		   0		0    N/A
KFIAS queue latch		      1    0.0		   0		0    N/A
Summary of Findings
KFK SGA Libload latch		  4,488    0.0		   0		0    N/A
KFMD SGA			    389    0.0		   0		0    N/A
KGNFS-NFS:SHM structure 	      1    0.0		   0		0    N/A
-------------------
KGNFS-NFS:SVR LIST		    207    0.0		   0		0    N/A
KJC message pool KGH cal	      2    0.0		   0		0    N/A
KJC message pool free li	366,763    0.1	  0.2	   0	  530,421    0.1
   Description				     Active Sessions	  Recommendations
KJC message pool pending	      1    0.0		   0		0    N/A
KJCT flow control latch       2,775,020    0.1	  0.1	   0		0    N/A
KMG MMAN ready and start	    206    0.0		   0		0    N/A
					     Percent of Activity
KSFS OFS ctx level paren	      1    0.0		   0		0    N/A
KSFS OFS req layer paren	      1    0.0		   0		0    N/A
KSFS OFS sess layer pare	      1    0.0		   0		0    N/A
   ----------------------------------------  -------------------  ---------------
KSFS Receive and Send Qu	      1    0.0		   0		0    N/A
KSFS id table parent lat	      1    0.0		   0		0    N/A
KSFS ksfs_node latch		      1    0.0		   0		0    N/A
1  Top SQL Statements			     17.42 | 99.64	  2
KSFSD name cache parent 	      1    0.0		   0		0    N/A
KSGL LS Segment latch		      1    0.0		   0		0    N/A
KSGL SGA anchor latch		      1    0.0		   0		0    N/A
KSIPC ASPC anchor latch 	      1    0.0		   0		0    N/A
2  &quot;User I/O&quot; wait Class		       13.19 | 75.41	    0
KSIPC SGA allocation par	    110    0.0		   0		0    N/A
KSIPCGSN Hash Table latc	      1    0.0		   0		0    N/A
KSIPCGSN Namespace latch	      1    0.0		   0		0    N/A
3  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  4.05 | 23.13	      5
KSK PDB IO STAT 		      1    0.0		   0		0    N/A
KSRMA SGA anchor latch		      1    0.0		   0		0    N/A
KSRMF SGA anchor latch		      1    0.0		   0		0    N/A
4  Buffer Busy - Hot Objects		     1.24 | 7.11	  5
KSWL SGA anchor latch		      1    0.0		   0		0    N/A
KSXR hang analysis phase	 43,777    0.0		   0	      103    0.0
KSXR hang analysis phase	     31    0.0		   0		0    N/A
5  Global Cache Messaging		     .89 | 5.1		  1
KSXR large replies		     20    0.0		   0		0    N/A
6  Undersized SGA			     .56 | 3.22 	  1
KTF sga latch			      4    0.0		   0	      410    0.0
KTILM latch			      1    0.0		   0		0    N/A
KTU in-memory txn table 	      1    0.0		   0		0    N/A
KTURMA ODPSCN latch		      1    0.0		   0		0    N/A
7  Unusual &quot;Other&quot; Wait Event 	       .45 | 2.56	    3
KTURMA SGA allocation pa	      1    0.0		   0		0    N/A
KWQMN job cache list lat	     90    0.0		   0		0    N/A
Latch for NonceHistory		      1    0.0		   0		0    N/A
8  Unusual &quot;Other&quot; Wait Event 	       .35 | 2.02	    4
Locator state objects po	      1    0.0		   0		0    N/A
Lost write change tracki	      1    0.0		   0		0    N/A
Lsod array latch		    128    0.0		   0		0    N/A

MGA asr alloc latch		     10    0.0		   0		0    N/A
MGA heap latch			     53    7.5	  0.0	   0		0    N/A
MGA shared context latch	  1,371    0.1	  0.0	   0		0    N/A

MGA shared context root 	     70    4.3	  0.7	   0		0    N/A
MQL Tracking Latch		      0    N/A		   0	       12    0.0
Memory Management Latch 	      0    N/A		   0	      206    0.0
Memory Queue			      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Subscriber 	      1    0.0		   0		0    N/A
Message cache latch		      1    0.0		   0		0    N/A
MinActiveScn Latch		     30    0.0		   0		0    N/A
Mutex				      1    0.0		   0		0    N/A
Mutex Stats			      1    0.0		   0		0    N/A
Nologging Standby SCN Ti	    203    0.0		   0		0    N/A
OS process			    517    0.0		   0		0    N/A
OS process allocation		  1,282    0.0		   0		0    N/A
OS process: request allo	     30    0.0		   0		0    N/A
PDB Hash Table Latch		      1    0.0		   0		0    N/A
PDB LRU structure		      1    0.0		   0		0    N/A
PL/SQL warning settings 	     14    0.0		   0		0    N/A
PX hash array latch		      1    0.0		   0		0    N/A
Parent latch for depende	      1    0.0		   0		0    N/A
Parent latch for query h	      1    0.0		   0		0    N/A
Parent latch for segment	      1    0.0		   0		0    N/A
QMT				      1    0.0		   0		0    N/A
Real-time descriptor lat	  5,010    0.0		   0		0    N/A
Report Request stats lat	     45    0.0		   0		0    N/A
Report Request struct la	     15    0.0		   0		0    N/A
Request holder compeltio	     13    0.0		   0		0    N/A
Retry Ht elm latch		      1    0.0		   0		0    N/A
Retry bkt latch 		      1    0.0		   0		0    N/A
SGA Blackbox latch		      2    0.0		   0		0    N/A
SGA IO buffer pool latch	     13    0.0		   0	       13    0.0
SGA Logging Bkt Latch		      1    0.0		   0		0    N/A
SGA Logging Log Latch		  2,913    0.0		   0		0    N/A
SGA blob parent 		      1    0.0		   0		0    N/A
SGA bucket locks		      1    0.0		   0		0    N/A
SGA heap locks			      1    0.0		   0		0    N/A
SGA pool locks			      1    0.0		   0		0    N/A
SO private so latch		     82    0.0		   0		7    0.0
SQL memory manager latch	      1    0.0		   0	      205    0.0
SQL memory manager worka	 15,299    0.0		   0		0    N/A
SR Stats Stripe Latch		      1    0.0		   0		0    N/A
Sched IM Job latch		     11    0.0		   0		0    N/A
Sched InMem Job Cache		      1    0.0		   0		0    N/A
Shared B-Tree			     23    0.0		   0		0    N/A
Streams Generic 		      1    0.0		   0		0    N/A
Subscriber Ht elm latch 	      1    0.0		   0		0    N/A
Testing 			      1    0.0		   0		0    N/A
Token Manager			      1    0.0		   0		0    N/A
Txn Ht elm latch		      1    0.0		   0		0    N/A
Txn bkt latch			      1    0.0		   0		0    N/A
UM object latch 		      1    0.0		   0		0    N/A
Undo Hint Latch 		      0    N/A		   0	   15,033    0.0
WCR: sync			      1    0.0		   0		0    N/A
Write State Object Pool 	      1    0.0		   0		0    N/A
X$KSFQP 			      1    0.0		   0		0    N/A
XDB NFS Security Latch		      1    0.0		   0		0    N/A
XDB unused session pool 	      1    0.0		   0		0    N/A
XDB used session pool		      1    0.0		   0		0    N/A
active checkpoint queue 	227,108    0.1	  0.5	   0		0    N/A
active service list		  3,025    0.0		   0	      562    0.0
archive destination		     20    0.0		   0		0    N/A
begin backup scn array		     28    0.0		   0		0    N/A
buffer pool			      1    0.0		   0		0    N/A
business card			     15    0.0		   0		0    N/A
cache buffer handles		    149    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
cache buffers chains	     31,984,752    0.0	  0.0	   0	7,687,581    0.1
cache buffers lru chain       3,599,039    0.3	  0.1	   0	5,166,307    0.7
cache table scan latch		     44    0.0		   0	       44    0.0
call allocation 		 21,876    0.0	  0.1	   0		0    N/A
change notification clie	      1    0.0		   0		0    N/A
channel handle pool latc	     80    0.0		   0		0    N/A
channel operations paren	176,300    0.2	  0.0	   0	      115    0.0
checkpoint queue latch	      3,749,753    0.0	  0.1	   0	  719,380    0.0
client/application info 	     71    0.0		   0		0    N/A
compile environment latc	     19    0.0		   0		0    N/A
cp handoff latch		      1    0.0		   0		0    N/A
cp pool latch			      1    0.0		   0		0    N/A
cp server hash latch		      1    0.0		   0		0    N/A
cp sga latch			     10    0.0		   0		0    N/A
cp srv type state latch 	    619    0.0		   0		0    N/A
cp srv type wait latch		      1    0.0		   0		0    N/A
cr slave free list		      1    0.0		   0		0    N/A
cvmap freelist lock		      1    0.0		   0		0    N/A
deferred cleanup latch		     10    0.0		   0		0    N/A
dispatcher info 		      4    0.0		   0		0    N/A
dml lock allocation		     10    0.0		   0		0    N/A
done queue latch		      1    0.0		   0		0    N/A
dtp latch			     30    0.0		   0		0    N/A
dummy allocation		     47    0.0		   0		0    N/A
eighth spare latch - X p	      1    0.0		   0		0    N/A
eleventh spare latch - c	      1    0.0		   0		0    N/A
enqueue freelist latch		      1    0.0		   0	2,706,363    0.0
enqueue hash chains	      6,742,697    2.8	  0.1	   5	    1,151    0.3
enqueues			    111    0.0		   0		0    N/A
error message lists		     33    0.0		   0		0    N/A
fast space usage latch		     25    0.0		   0		0    N/A
fifteenth spare latch - 	      1    0.0		   0		0    N/A
file cache latch		 44,398    0.0	  0.4	   0		0    N/A
flash file access latch 	      1    0.0		   0		0    N/A
flashback copy			      1    0.0		   0		0    N/A
fourteenth spare latch -	      1    0.0		   0		0    N/A
fourth Audit Vault latch	      1    0.0		   0		0    N/A
gc element		     11,446,577    0.0	  0.1	   0	  940,132    0.1
gc imc list			     96    0.0		   0		0    N/A
gc persistent rm		      1    0.0		   0		0    N/A
gc xid list			    100    0.0		   0		0    N/A
gcr global ctx			     11    0.0		   0		0    N/A
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gcs affinity object free	      2    0.0		   0		0    N/A
gcs commit scn state		      1    0.0		   0		0    N/A
gcs nodemap pool		 72,513    0.0	  0.5	   0		0    N/A
gcs opaque info freelist	128,017    0.0	  0.0	   0		0    N/A
gcs partitioned table ha      9,723,906    0.0	  0.0	   0	2,113,827    0.0
gcs pcm hashed value buc	      1    0.0		   0		0    N/A
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gcs remaster request que	 85,773    0.0		   0		0    N/A
gcs remastering latch		 16,427    0.1	  0.0	   0	    1,777    0.1
gcs resource freelist	      1,631,123    0.0	  0.1	   0	  533,067    0.1
gcs resource hash	     12,463,563    0.0	  0.3	   0	      309    0.0

gcs resource scan list		      5    0.0		   0		0    N/A
gcs resource timerq list	      1    0.0		   0		0    N/A
gcs resource validate li	      1    0.0		   0		0    N/A

gcs shadows freelist		906,026    0.0	  0.0	   0		0    N/A
ges cached resource list      6,204,661    0.2	  0.0	   0	  198,124    0.1
ges deadlock list		     24    0.0		   0		0    N/A
ges domain table	     13,270,176    0.0	  0.0	   0		0    N/A
	  Findings and Recommendations
ges enqueue table freeli      2,738,893    0.3	  0.1	   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
	  ----------------------------
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0


					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
Finding 1: Top SQL Statements
ges group table 	     14,295,203    0.0		   0		0    N/A
ges process hash list		 17,217    0.0	  1.0	   0		0    N/A
ges process parent latch     27,217,595    0.0	  0.8	   0		0    N/A
ges process table freeli	     30    0.0		   0		0    N/A
Impact is 17.45 active sessions, 99.64% of total activity.
ges remote lock freelist	    161    0.0		   0		0    N/A
ges resource hash list	     20,081,428    0.1	  0.1	   1	   10,405    0.1
ges resource scan list		 14,737    0.0		   0		0    N/A
ges resource table freel	  6,203    0.0		   0		0    N/A
----------------------------------------------------------
ges s-lock bitvec freeli	    183    0.0		   0		0    N/A
ges timeout list		    207    0.0		   0	       16    0.0
ges value block free lis	      1    0.0		   0		0    N/A
global tx hash mapping		      1    0.0		   0		0    N/A
SQL statements consuming significant database time were found. These
granule from data transf	      1    0.0		   0		0    N/A
gws:Sharding global desc	     40    0.0		   0		0    N/A
hash table column usage 	      0    N/A		   0	   86,026    0.0
hash table expression us	      1    0.0		   0		0    N/A
statements offer a good opportunity for performance improvement.
hash table sql contorl l	      1    0.0		   0		0    N/A
heartbeat check 		      1    0.0		   0	      304    0.0
heartbeat structure mana	      0    N/A		   0	      308    0.0
imc buf hdl lat 		      1    0.0		   0		0    N/A

imc cr clone buf		      1    0.0		   0		0    N/A
imc hash lat			      1    0.0		   0		0    N/A
imc sj lat			      1    0.0		   0		0    N/A
imc srchsp lat			      1    0.0		   0		0    N/A
   Recommendation 1: SQL Tuning
imc-txn-wrk-lat 		      1    0.0		   0		0    N/A
in-memory area latch		      1    0.0		   0		0    N/A
in-memory columnar segme	      1    0.0		   0		0    N/A
in-memory columnar ts ex	      1    0.0		   0		0    N/A
   Estimated benefit is 9.43 active sessions, 53.9% of total activity.
in-memory global pool la	      1    0.0		   0		0    N/A
internal temp table obje	     30    0.0		   0		0    N/A
interrupt manipulation		     42    0.0		   0		0    N/A
intra txn parallel recov	      1    0.0		   0		0    N/A
   -------------------------------------------------------------------
io pool granule list		     50    0.0		   0		0    N/A
io pool granule metadata	    101    0.0		   0		0    N/A
job workq parent latch		      1    0.0		   0		0    N/A
job_queue_processes para	     10    0.0		   0		0    N/A
   Action
k2q global data latch		    412    0.0		   0		0    N/A
k2q lock allocation		      1    0.0		   0		0    N/A
kKCN Cqn SGA			      1    0.0		   0		0    N/A
kcb DW scan objtemp hash	      1    0.0		   0		0    N/A
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
kcn buffer chains		      1    0.0		   0		0    N/A
kdlx hb parent latch		      1    0.0		   0		0    N/A
kgb parent			      1    0.0		   0		0    N/A
kgnfs mount latch		      1    0.0		   0		0    N/A
      &quot;bhdvtsvjhgvrh&quot;.
kjbr roi instance map		      1    0.0		   0		0    N/A
kjci objects freelist la	  1,115    0.0		   0		0    N/A
kjci process context lat	    748    0.1	  0.0	   0	  216,669    0.0
kjci process list latch 	    510    0.0		   0		0    N/A
      Related Object
kjci request sequence la	     67    0.0		   0		0    N/A
kjcipctx state object fr	     20    0.0		   0		0    N/A
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND
kjoedcso state object fr	     10    0.0		   0		0    N/A
kjoeq omni enqueue hash 	      1    0.0		   0		0    N/A
kjoer owner hash bucket 	      1    0.0		   0		0    N/A
	 (CUSTID &lt; :B1 )
kjpm my inst data		     20    0.0		   0		0    N/A
kjsc Request obj freelis	     40    0.0		   0		0    N/A
kjsc Ring Buffer obj fre	     20    0.0		   0		0    N/A
kjsc protect control req	     20    0.0		   0	    6,176    0.0
   Rationale
kjsc protect warm up con	 43,625    0.0		   0		0    N/A
kjsca pkey obj freelist 	     34    0.0		   0		0    N/A
kjsca protect pkey hash 	  6,899    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db1  Snaps: 68-69
      The SQL spent 99% of its database time on CPU, I/O and Cluster waits.
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0
      This part of database time may be improved by the SQL Tuning Advisor.

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
   Rationale
------------------------ -------------- ------ ------ ------ ------------ ------
kjsca protect service ha	    720    0.0		   0		0    N/A
kjscpss state object fre	     20    0.0		   0		0    N/A
kokc descriptor allocati	     50    0.0		   0		0    N/A
kpoxft latch			      0    N/A		   0	       19    0.0
      Database time for this SQL was divided as follows: 100% for SQL
krso process			     21    0.0		   0		0    N/A
ksbxic instance latch		     50    0.0		   0		0    N/A
ksevn object root latch 	    206    0.0		   0		0    N/A
ksfv messages			      1    0.0		   0		0    N/A
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
ksi resource reuse count	      1    0.0		   0		0    N/A
ksim group membership ca	    529    0.0		   0		0    N/A
ksim membership request 	      0    N/A		   0	      593    0.0
ksns object latch		      1    0.0		   0		0    N/A
      execution.
kss move lock			     11    0.0		   0		0    N/A
ksuosstats global area		     49    0.0		   0	      235    0.0
ksutcpistat latch		      1    0.0		   0		0    N/A
ksv allocation latch		     29    0.0		   0		0    N/A
ksv class latch 		 17,637    0.0	  0.3	   0		1    0.0
   Rationale
ksv instance latch		     74    0.0		   0		0    N/A
ksv msg queue latch		    625    0.2	  1.0	   0	      624    0.0
ksxp shared latch		     30    0.0		   0		0    N/A
ksxp so latch			     30    0.0		   0		0    N/A
ksz_so allocation latch 	     30    0.0		   0		0    N/A
      SQL statement with SQL_ID &quot;bhdvtsvjhgvrh&quot; was executed 258079 times and
ktfbn latch			    131    0.0		   0		0    N/A
ktm adg jrnls			      1    0.0		   0		0    N/A
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
ktm adg space			      1    0.0		   0		0    N/A
      had an average elapsed time of 0.022 seconds.
ktm adg stages			      1    0.0		   0		0    N/A
ktm adg worklink		      1    0.0		   0		0    N/A
ktm global data 		    102    0.0		   0		0    N/A
ktm prv jrnls			      1    0.0		   0		0    N/A
   Rationale
ktmpj HT ls			      1    0.0		   0		0    N/A
kwqbsn:qsga			     22    0.0		   0		0    N/A
kwslbmdl: metadata latch	     21    0.0		   0		0    N/A
kwslbql: queue latch		      1    0.0		   0		0    N/A
      I/O and Cluster wait for TABLE &quot;USER26.CF1&quot; with object ID 73533
kwslbutl: uncommitted tx	      1    0.0		   0		0    N/A
kwsptQcachLt: queue cach	      1    0.0		   0		0    N/A
kwsptTrncTsksLt: trunc t	      1    0.0		   0		0    N/A
kwsptjobAdPtLt: AdPt lis	     15    0.0		   0		0    N/A
kwsslLat: skiplist latch	      1    0.0		   0		0    N/A
      consumed 6% of the database time spent on this SQL statement.
kxfxscanrate_latch		      1    0.0		   0		0    N/A
lgwr LWN SCN			 32,334    0.1	  0.1	   0		0    N/A
list of block allocation	     42    0.0		   0		0    N/A
loader state object free	     64    0.0		   0		0    N/A

lob segment dispenser la	     63    0.0		   0		0    N/A
lob segment hash table l	    581    0.0		   0		0    N/A
lob segment query latch 	      1    0.0		   0		0    N/A
lock DBA buffer during m	      1    0.0		   0		0    N/A
   Recommendation 2: SQL Tuning
log write info			      0    N/A		   0	  179,262    2.8
log write worker phase		 14,903    0.0		   0		0    N/A
logical standby cache		      1    0.0		   0		0    N/A
logminer context allocat	      1    0.0		   0		0    N/A
logminer local			      1    0.0		   0		0    N/A
   Estimated benefit is 5.9 active sessions, 33.76% of total activity.
logminer work area		      1    0.0		   0		0    N/A
longop free list parent 	      1    0.0		   0		0    N/A
managed standby 		     20    0.0		   0		0    N/A
message bitmap latch		      1    0.0		   0		0    N/A
   -------------------------------------------------------------------
message pool operations 	 65,934    0.0		   0		0    N/A
messages			567,790    0.1	  0.1	   0		0    N/A
msg queue latch 		      1    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db1  Snaps: 68-69
   Action
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
      &quot;35dumc2tpr9dv&quot;.
multiblock read objects 	510,874    0.1	  0.1	   0		0    N/A
name-service memory obje	     65    0.0		   0		0    N/A
name-service namespace b	  3,290    0.0		   0		0    N/A
name-service pending que	     30    0.0		   0		0    N/A
      Related Object
name-service request		      6    0.0		   0		0    N/A
name-service request que	  6,360    0.0		   0		0    N/A
ncodef allocation latch 	     10    0.0		   0		0    N/A
ninth spare latch - X pa	      1    0.0		   0		0    N/A
	 SQL statement with SQL_ID 35dumc2tpr9dv.
object queue header free	  4,558    0.0		   0		0    N/A
object queue header oper     10,973,836    0.0	  0.1	   0	   14,795    0.0
object queue memory		      1    0.0		   0		0    N/A
object stats modificatio	      8    0.0		   0		0    N/A
parallel query alloc buf	    117    0.0		   0	       95    0.0
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
parallel query stats		     30    0.0		   0		0    N/A
parallel txn reco latch 	    636    0.0		   0		0    N/A
parameter table manageme	    160    0.0		   0		0    N/A
pdb enqueue hash chains 	      1    0.0		   0		0    N/A
	 AND (CUSTID &lt; :B1 )
peshm				      1    0.0		   0		0    N/A
pesom_free_list 		      1    0.0		   0		0    N/A
pesom_hash_node 		      1    0.0		   0		0    N/A
pkey global statistics		      1    0.0		   0		0    N/A
pmon dead latch 		     10    0.0		   0		0    N/A
   Rationale
post/wait queue 		218,242    0.0	  0.0	   0	  219,166    0.0
process allocation		  3,095    0.0		   0		0    N/A
process group creation		     30    0.0		   0		0    N/A
process memory detail		      1    0.0		   0		0    N/A
process pkey statistics 	      1    0.0		   0		0    N/A
      The SQL spent 73% of its database time on CPU, I/O and Cluster waits.
process queue			     54    0.0		   0		0    N/A
process queue reference 	  2,064    0.0		   0	      227    0.0
qmn task queue latch		     91    1.1	  1.0	   0		0    N/A
quarantine object		     10    0.0		   0		0    N/A
query server freelists		     66    0.0		   0		0    N/A
      This part of database time may be improved by the SQL Tuning Advisor.
query server process		    441    0.0		   0		1    0.0
queued dump request		      3    0.0		   0		0    N/A
queuing load statistics 	      1    0.0		   0		0    N/A
read-moslty lock queue u	      1    0.0		   0		0    N/A
   Rationale
recovery domain hash buc	  2,412    0.0		   0		0    N/A
redo allocation 		109,947    1.1	  0.2	   0	1,052,020    0.6
redo copy			      1    0.0		   0	1,054,027    0.1
redo transport task		      1    0.0		   0		0    N/A
redo writing			201,483    0.0	  0.1	   0		0    N/A
      Database time for this SQL was divided as follows: 100% for SQL
remote tool request latc	     32    0.0		   0		0    N/A
resmgr group change latc	    126    0.0		   0		0    N/A
resmgr:active threads		    239    0.0		   0	    6,081    0.0
resmgr:actses change gro	     72    0.0		   0		0    N/A
resmgr:actses change sta	      4    0.0		   0		0    N/A
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
resmgr:free threads list	    150    0.7	  0.0	   0		0    N/A
resmgr:plan CPU method		      1    0.0		   0		0    N/A
resmgr:plan change alloc	      1    0.0		   0		0    N/A
resmgr:plan change latch	      1    0.0		   0		0    N/A
      execution.
resmgr:resource group CP	     21    0.0		   0		0    N/A
resmgr:schema config		    107    0.0		   0	       10    0.0
resmgr:session queuing		      1    0.0		   0		0    N/A
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 45533 times and
      had an average elapsed time of 0.1 seconds.
resumable state object		     19    0.0		   0		0    N/A
row cache objects		      1    0.0		   0		0    N/A
rt rmv count latch		      0    N/A		   0	      308    0.0
second Audit Vault latch	      1    0.0		   0		0    N/A

segmented array pool		    348    0.0		   0		0    N/A
sequence cache			    177    0.0		   0		0    N/A
service drain list		    616    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db1  Snaps: 68-69

-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
Finding 2: &quot;User I/O&quot; wait Class
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

Impact is 13.21 active sessions, 75.41% of total activity.
					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
----------------------------------------------------------
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
session allocation		    128    0.0		   0	       53    0.0
session idle bit		    499    0.0		   0		0    N/A
Wait class &quot;User I/O&quot; was consuming significant database time.
Waits for I/O to temporary tablespaces were not consuming significant database
time.
The throughput of the I/O subsystem was not significantly lower than expected.

   No recommendations are available.


Finding 3: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 4.05 active sessions, 23.13% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

   Recommendation 1: Segment Tuning
   Estimated benefit is .84 active sessions, 4.82% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER26.CF1&quot; with
      object ID 73533.
      Related Object
	 Database object with ID 73533.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the SELECT statement with
      SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 67% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 174159
      physical reads, 26238 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .81 active sessions, 4.64% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER19.CF1&quot; with
      object ID 73485.
      Related Object
	 Database object with ID 73485.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 130813
      physical reads, 19551 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .8 active sessions, 4.56% of total activity.
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER7.CF1&quot; with
session queue latch		      1    0.0		   0		0    N/A
      object ID 73433.
session state list latch	     47    0.0		   0		0    N/A
session statistics		     47    0.0		   0		0    N/A
session switching		     35    0.0		   0		0    N/A
      Related Object
session timer			    206    0.0		   0		0    N/A
seventh spare latch - X 	      1    0.0		   0		0    N/A
sga hash table parent la	      1    0.0		   0		0    N/A
	 Database object with ID 73433.
shard latch			      1    0.0		   0		0    N/A
shardgroup list latch		    183    0.0		   0		0    N/A
shared pool			 30,943    0.1	  0.1	   0		2    0.0
shared pool sim alloc		      3    0.0		   0		0    N/A
shared pool simulator		    490    0.0		   0		0    N/A
   Action
shared server configurat	    206    0.0		   0		0    N/A
sim partition latch		      1    0.0		   0		0    N/A
simulator hash latch	      1,249,235    0.0	  0.0	   0		0    N/A
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
simulator lru latch		      1    0.0		   0	  730,106    0.1
      significant I/O on this segment. For example, the SELECT statement with
sixth spare latch - X pa	      1    0.0		   0		0    N/A
sort extent pool		    330    0.0		   0		0    N/A
space background task la	  2,648   44.3	  0.8	   1	      423    1.4
      SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 71% of &quot;User I/O&quot; and
state object free list		      2    0.0		   0		0    N/A
statistics aggregation		    145    0.0		   0		0    N/A
subscriber Ht bkt		      1    0.0		   0		0    N/A
tablespace key chain		      1    0.0		   0		0    N/A
      &quot;Cluster&quot; waits for this segment.
temp lob duration state 	     46    0.0		   0		0    N/A
tenth spare latch - X pa	      1    0.0		   0		0    N/A
test excl. parent l0		      1    0.0		   0		0    N/A
   Rationale
test excl. parent2 l0		      1    0.0		   0		0    N/A
test excl. parent2 lmid 	      1    0.0		   0		0    N/A
test mixed exclusive		      1    0.0		   0		0    N/A
test mode exclusive		      1    0.0		   0		0    N/A
      The I/O usage statistics for the object are: 0 full object scans, 142604
test open exclusive		      1    0.0		   0		0    N/A
test pdb exclusive		      1    0.0		   0		0    N/A
test shared parent2 lmid	      1    0.0		   0		0    N/A
      physical reads, 21215 physical writes and 0 direct reads.
thirteenth spare latch -	      1    0.0		   0		0    N/A
threshold alerts latch		     20    0.0		   0		0    N/A

transaction allocation		 21,545    0.0		   0		0    N/A
twelfth spare latch - ch	      1    0.0		   0		0    N/A
twenty-fifth spare latch	      1    0.0		   0		0    N/A
   Recommendation 4: Segment Tuning
twenty-first spare latch	      1    0.0		   0		0    N/A
twenty-fourth spare latc	      1    0.0		   0		0    N/A
twenty-second spare latc	      1    0.0		   0		0    N/A
twenty-third spare latch	      1    0.0		   0		0    N/A
undo global data	      2,718,572    0.1	  0.1	   0		0    N/A
virtual circuit buffers 	      1    0.0		   0		0    N/A
virtual circuit holder		      1    0.0		   0		0    N/A
virtual circuit queues		      1    0.0		   0		0    N/A
   Estimated benefit is .8 active sessions, 4.56% of total activity.
			  ------------------------------------------------------


Latch Sleep Breakdown			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> ordered by misses desc

				       Get				   Spin
   -----------------------------------------------------------------
Latch Name			  Requests	 Misses      Sleeps	   Gets
-------------------------- --------------- ------------ ----------- -----------
enqueue hash chains		 6,742,697	187,507      14,054	174,161
   Action
ges cached resource lists	 6,204,661	 13,555 	282	 13,277
ges resource hash list		20,081,428	 11,663       1,546	 10,147
cache buffers lru chain 	 3,599,039	 11,460 	604	 10,869
ges enqueue table freelist	 2,738,893	  8,919 	746	  8,197
      Investigate application logic involving I/O on TABLE &quot;USER18.CF1&quot; with
gc element			11,446,577	  3,010 	368	  2,646
cache buffers chains		31,984,752	  2,713 	 55	  2,659
gcs resource hash		12,463,563	  1,695 	475	  1,244
      object ID 73492.
undo global data		 2,718,572	  1,638 	156	  1,485
KJCT flow control latch 	 2,775,020	  1,564 	120	  1,448
redo allocation 		   109,947	  1,180 	177	  1,005
      Related Object
space background task latc	     2,648	  1,173 	906	    293
ges process parent latch	27,217,595	    840 	673	    167
object queue header operat	10,973,836	    650 	 92	    558
ges domain table		13,270,176	    616 	  7	    609
messages			   567,790	    598 	 30	    569
gcs resource freelist		 1,631,123	    556 	 36	    520
KJC message pool free list	   366,763	    325 	 49	    276
channel operations parent	   176,300	    323 	 11	    312
multiblock read objects 	   510,874	    285 	 35	    250
active checkpoint queue la	   227,108	    262 	138	    124
	 Database object with ID 73492.
ASM map operation hash tab	11,218,878	    256 	 23	    233
checkpoint queue latch		 3,749,753	    134 	 12	    122
redo writing			   201,483	     80 	 11	     69
   Action
lgwr LWN SCN			    32,334	     22 	  2	     20
shared pool			    30,943	     16 	  1	     15
file cache latch		    44,398	     12 	  5	      7
call allocation 		    21,876	     10 	  1	      9
MGA shared context root la		70	      3 	  2	      1
ksv class latch 		    17,637	      3 	  1	      2
gcs nodemap pool		    72,513	      2 	  1	      1
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
ges process hash list		    17,217	      1 	  1	      0
ksv msg queue latch		       625	      1 	  1	      0
qmn task queue latch			91	      1 	  1	      0
      significant I/O on this segment. For example, the UPDATE statement with
			  ------------------------------------------------------


Latch Miss Sources			   DB/Inst: P30DB/p30db1  Snaps: 68-69
      SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 51% of &quot;User I/O&quot; and
-> only latches with sleeps are shown
-> ordered by name, sleeps desc

						     NoWait		 Waiter
      &quot;Cluster&quot; waits for this segment.
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
ASM map operation hash t kffmTranslate			  0	    17	     15
ASM map operation hash t kffmDoDone_1			  0	     6	      8
KJC message pool free li kjcsmpav: allocate a msg b	  0	    33	     49
KJC message pool free li kjcspfmbq: free vector of	  0	    16	      0
KJCT flow control latch  kjctcsnd: send normal mess	  0	    59	     57
KJCT flow control latch  kjcts_sedeqv3: dequeue a v	  0	    25	      6
KJCT flow control latch  kjcts_sqenq: queue a messa	  0	    18	     23
KJCT flow control latch  kjctr_updatetkt: update ti	  0	    11	     19
KJCT flow control latch  kjctr_releasetkt: change t	  0	     7	      4
   Rationale
MGA shared context root  ksm_mga_detach_whr1		  0	     2	      2
active checkpoint queue  kcbk_add_rbr_ckpt: Add rbr	  0	   124	      0
active checkpoint queue  kcbk_add_rbr_ckpt: Add rbr	  0	     9	      0
active checkpoint queue  kcbkcpa: Checkpoint post-p	  0	     4	      0
active checkpoint queue  kcbkcpa: Checkpoint post-p	  0	     1	      0
cache buffers chains	 kcbzibmlt: multi-block rea	  0	    13	      0
cache buffers chains	 kcbzgb: scan from tail now	  0	     8	      0
cache buffers chains	 kcbzwb 			  0	     6	      8
cache buffers chains	 kcbgcur: fast path excl	  0	     5	     10
cache buffers chains	 kclcls_3			  0	     5	      0
cache buffers chains	 kcbchg: cur pin change 	  0	     3	      1
      The I/O usage statistics for the object are: 0 full object scans, 173999
cache buffers chains	 kcbgcur: fast path shr 	  0	     3	      0
cache buffers chains	 kcbgtcr: convert latch 	  0	     3	      0
cache buffers chains	 kcbbic1			  0	     2	      6
cache buffers chains	 kcbgtcr: fast path exam	  0	     2	      3
      physical reads, 26042 physical writes and 0 direct reads.
cache buffers chains	 kcbrls: fast pin release	  0	     2	      2
cache buffers chains	 kcbchg: change complete	  0	     1	      2
cache buffers chains	 kcbchg: rollback		  0	     1	      0

cache buffers chains	 kcbgcur: convert latch 	  0	     1	      0
cache buffers chains	 kcbgtcr: convert latch 4	  0	     1	      0
cache buffers chains	 kcbgtcr: fast path pin 	  0	     1	     11
cache buffers chains	 kcbnlc 			  0	     1	      0
   Recommendation 5: Segment Tuning
cache buffers chains	 kcbrls: pin release		  0	     1	      0
cache buffers lru chain  kcbzgb_2			  0	   305	    109
cache buffers lru chain  kcbzgws			  0	   294	      0
cache buffers lru chain  kcbo_write_bufs		  0	     3	      0
cache buffers lru chain  kcbbwlru			  0	     2	    511
call allocation 	 ksuprc 			  0	     1	      1
channel operations paren ksrwait()			  0	     9	      0
channel operations paren ksrapublish()			  0	     3	      0
   Estimated benefit is .8 active sessions, 4.56% of total activity.
checkpoint queue latch	 kcbklbc_cql			  0	    12	      0
file cache latch	 file cache:04			  0	     4	      6
file cache latch	 file cache:21			  0	     1	      0
gc element		 kclnfndnewm			  0	   192	     85
   -----------------------------------------------------------------
gc element		 kclulb 			  0	    69	    117
gc element		 KCLUNLNK			  0	    20	     85
   Action
gc element		 kclollnumiter			  0	    18	      0
gc element		 kclnfndx			  0	    14	     34
gc element		 kclfwrite1			  0	    13	     11
gc element		 kclplz_1			  0	    11	      0
      Investigate application logic involving I/O on TABLE &quot;USER21.CF1&quot; with
gc element		 kclnfnds			  0	    10	     30
gc element		 kclpdcl			  0	     9	      2
gc element		 kclplz 			  0	     8	      0
gc element		 kclrwrite_1			  0	     7	      0
      object ID 73503.
gc element		 kclrwrite			  0	     4	     11
gc element		 kclexpand_2			  0	     1	      0
gc element		 kclpdc_1			  0	     1	      2
gcs nodemap pool	 kjbrnmapalloc_2		  0	     1	      0
      Related Object
gcs resource freelist	 kjbralc: check freelist no	  0	    23	      0
gcs resource freelist	 kjbrfr_bg2			  0	     6	     16
gcs resource freelist	 kjbrralc: reserve allocati	  0	     4	      3

Latch Miss Sources			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> only latches with sleeps are shown
-> ordered by name, sleeps desc
	 Database object with ID 73503.

						     NoWait		 Waiter
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
   Rationale
gcs resource freelist	 kjbralc add resource		  0	     2	     17
gcs resource freelist	 kjbrfr_bg: free resource	  0	     1	      0
gcs resource hash	 kclfwrite1			  0	   204	     20
gcs resource hash	 kjbcropen			  0	    88	     69
gcs resource hash	 kjblocalobj_nolock		  0	    47	     64
gcs resource hash	 kjbopen			  0	    27	      5
gcs resource hash	 kjbassume			  0	    17	     18
gcs resource hash	 kclpdc 			  0	    16	     95
gcs resource hash	 kjbrrcres_99			  0	    16	      0
      The I/O usage statistics for the object are: 0 full object scans, 175461
gcs resource hash	 kjbclose_remaster		  0	    15	     39
gcs resource hash	 kjbmpopen			  0	    12	     48
gcs resource hash	 kjbrrcfwst			  0	    11	      0
gcs resource hash	 kjblpast			  0	     8	     48
      physical reads, 26584 physical writes and 0 direct reads.
gcs resource hash	 kjbmpclose			  0	     5	     23
gcs resource hash	 kclrwrite			  0	     4	     14
gcs resource hash	 kclgrantlk_1			  0	     1	      0

gcs resource hash	 kjbmpconvert			  0	     1	      3
gcs resource hash	 kjbmpflushpi			  0	     1	      7
gcs resource hash	 kjbopen:affinity		  0	     1	      0
gcs resource hash	 kjbrprmexpack			  0	     1	      1
   Symptoms That Led to the Finding:
ges cached resource list kjrm2c: move resource to c	  0	   269	    282
ges cached resource list kjchc: clean resource cach	  0	    11	      0
ges cached resource list kjrchc: cached obj cleanup	  0	     1	      0
ges cached resource list kjruch: cached obj cleanup	  0	     1	      0
   ---------------------------------
ges domain table	 kjdmlad: add a lock to an	  0	     7	      4
ges enqueue table freeli kjlalc: lock allocation	  0	   537	    427
ges enqueue table freeli kjlfr: remove lock from pa	  0	   209	    319
      Wait class &quot;User I/O&quot; was consuming significant database time.
ges process hash list	 kjakiqa: set inquiry respo	  0	     1	      0
ges process parent latch kjata_fg			  0	   672	      0
ges process parent latch kjata				  0	     1	      0
      Impact is 13.19 active sessions, 75.41% of total activity.
ges resource hash list	 kjlrlr: remove lock from r	  0	   658	    789
ges resource hash list	 kjrmas1: lookup master nod	  0	   283	      0
ges resource hash list	 kjakcai: search for resp b	  0	   240	    113
ges resource hash list	 kjucvl: lock convert reque	  0	   175	     72
ges resource hash list	 kjlmfnd: search for lockp	  0	   149	     83
ges resource hash list	 kjcvscn: remove from scan	  0	    26	      0
ges resource hash list	 kjrref: find matched resou	  0	    14	    487
ges resource hash list	 kjuinq: inquire resource h	  0	     1	      0
ksv class latch 	 ksvclsl: checkpool		  0	     1	      0
ksv msg queue latch	 ksvmql: getwork		  0	     1	      1

messages		 ksarcv 			  0	    15	     23
messages		 ksarcv: after wait		  0	    13	      6
messages		 ksaamb: after wakeup		  0	     2	      1
mostly latch-free SCN	 kcs024 			  0	     2	      0
multiblock read objects  kcbzibmlt			  0	    18	     20
multiblock read objects  kcbzibmlt: normal mbr free	  0	    17	     15

object queue header oper kcbo_unlink_q			  0	    66	     64
object queue header oper kcbo_link_q			  0	     9	     11
object queue header oper kclobj 			  0	     8	      0
object queue header oper kcbo_switch_mq_bg		  0	     6	      4
Finding 4: Buffer Busy - Hot Objects
object queue header oper kcbo_switch_q_bg		  0	     4	      1
object queue header oper kcbo_switch_cq 		  0	     1	     14
qmn task queue latch	 kwqmnmvtsks: delay to read	  0	     1	      0
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	   151	      0
redo allocation 	 kcrfw_post: more space 	  0	    14	     25
Impact is 1.24 active sessions, 7.11% of total activity.
redo allocation 	 kcrfw_redo_write: before w	  0	     6	     32
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	     5	    120
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	     1	      0
redo writing		 kcrfw_post: rba scn pair	  0	     5	      0
--------------------------------------------------------
redo writing		 kcrfw_cal_target_rba		  0	     4	      4

Latch Miss Sources			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> only latches with sleeps are shown
-> ordered by name, sleeps desc
Read and write contention on database blocks was consuming significant

						     NoWait		 Waiter
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
database time.
redo writing		 kcrfwcr			  0	     2	      5
space background task la ktsj_grab_task 		  0	   701	    892
space background task la ktsj_detach_task		  0	   137	     14
space background task la ktsjCreateTask 		  0	    39	      0

space background task la ktsj_smco_purgeexpired 	  0	    28	      0
space background task la ktsj_smco_movetasks		  0	     1	      0
undo global data	 ktusm_stealext_2		  0	   130	     65
   Recommendation 1: Schema Changes
undo global data	 ktusm_stealext: KSLBEGIN	  0	    13	      8
undo global data	 ktudba: KSLBEGIN		  0	     8	     64
undo global data	 ktusmupst: KSLBEGIN		  0	     3	     10
   Estimated benefit is .15 active sessions, .84% of total activity.
undo global data	 ktudnx:child			  0	     1	      1
undo global data	 ktufrbs_2			  0	     1	      4
unknown latch		 ksqcmi: if lk mode not req	  0	 4,710	    980
unknown latch		 ksqgtl3			  0	 3,685	  6,020
unknown latch		 ksqcmi: if lk mode request	  0	 2,858	  3,200
unknown latch		 ksqrcl 			  0	 1,980	  3,354
unknown latch		 ksqcnl 			  0	   821	    500
unknown latch		 kghfre 			  0	     1	      1
			  ------------------------------------------------------
   -----------------------------------------------------------------

Mutex Sleep Summary			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> ordered by number of sleeps desc

									 Wait
   Action
Mutex Type	      Location				     Sleeps    Time (ms)
--------------------- -------------------------------- ------------ ------------
Row Cache	      [19] kqrpre				489	   1,201
Row Cache	      [06] kqrGetClusterLock			 58	      58
      Consider rebuilding the TABLE &quot;USER16.CF1&quot; with object ID 73481 using a
Row Cache	      [10] kqreqd				  7	       9
Cursor Pin	      kksLockDelete [KKSCHLPIN6]		  5	       6
Cursor Pin	      kksfbc [KKSCHLFSP2]			  2	       3
Cursor Pin	      kksfbc [KKSCHLPIN1]			  2	       2
      higher value for PCTFREE.
			  ------------------------------------------------------


Parent Latch Statistics 		   DB/Inst: P30DB/p30db1  Snaps: 68-69

      Related Object
		  No data exists for this section of the report.
			  ------------------------------------------------------

Child Latch Statistics			   DB/Inst: P30DB/p30db1  Snaps: 68-69

	 Database object with ID 73481.
		  No data exists for this section of the report.
			  ------------------------------------------------------



Segments by Logical Reads		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total Logical Reads:       7,234,630
-> Captured Segments account for   76.4% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available
   Recommendation 2: Schema Changes

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				 Logical
   Estimated benefit is .11 active sessions, .65% of total activity.
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER12		     IOPS
CF1				TABLE	   73464      73460	 503,472    6.96
   -----------------------------------------------------------------
USER16		     IOPS
CF1				TABLE	   73481      73483	 496,864    6.87
USER15		     IOPS
CF1				TABLE	   73472      73477	 432,480    5.98
USER4		     IOPS
   Action
CF1				TABLE	   73424      73420	 366,208    5.06
USER3		     IOPS
CF1				TABLE	   73413      73416	 360,560    4.98
			  ------------------------------------------------------

      Consider rebuilding the TABLE &quot;USER1.CF1&quot; with object ID 73402 using a
Segments by Physical Reads		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total Physical Reads:       4,253,774
-> Captured Segments account for  100.4% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				Physical
      higher value for PCTFREE.
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER12		     IOPS
CF1				TABLE	   73464      73460	 466,690   10.97
USER16		     IOPS
      Related Object
CF1				TABLE	   73481      73483	 458,963   10.79
USER15		     IOPS
CF1				TABLE	   73472      73477	 404,719    9.51
USER4		     IOPS
CF1				TABLE	   73424      73420	 339,269    7.98
	 Database object with ID 73402.
USER1		     IOPS
CF1				TABLE	   73402      73404	 271,748    6.39

			  ------------------------------------------------------

Segments by Physical Read Requests	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total Physical Read Requests:       4,253,575
   Recommendation 3: Schema Changes
-> Captured Segments account for  100.4% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
   Estimated benefit is .1 active sessions, .56% of total activity.
-------------------- ----------
		     Subobject	Obj.			       Phys Read
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
   ----------------------------------------------------------------
USER12		     IOPS
CF1				TABLE	   73464      73460	 466,690   10.97
USER16		     IOPS
CF1				TABLE	   73481      73483	 458,963   10.79
USER15		     IOPS
   Action
CF1				TABLE	   73472      73477	 404,719    9.51
USER4		     IOPS
CF1				TABLE	   73424      73420	 339,269    7.98
USER1		     IOPS
CF1				TABLE	   73402      73404	 271,748    6.39
      Consider rebuilding the TABLE &quot;USER15.CF1&quot; with object ID 73472 using a
			  ------------------------------------------------------

Segments by UnOptimized Reads		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total UnOptimized Read Requests:	  4,253,575
      higher value for PCTFREE.
-> Captured Segments account for  100.4% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			     UnOptimized
      Related Object
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER12		     IOPS
CF1				TABLE	   73464      73460	 466,690   10.97
USER16		     IOPS
	 Database object with ID 73472.
CF1				TABLE	   73481      73483	 458,963   10.79
USER15		     IOPS
CF1				TABLE	   73472      73477	 404,719    9.51
USER4		     IOPS

CF1				TABLE	   73424      73420	 339,269    7.98
USER1		     IOPS
CF1				TABLE	   73402      73404	 271,748    6.39
			  ------------------------------------------------------

   Recommendation 4: Schema Changes
Segments by Optimized Reads		   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------

   Estimated benefit is .08 active sessions, .47% of total activity.
Segments by Direct Physical Reads	   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------

   -----------------------------------------------------------------
Segments by Physical Writes		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total Physical Writes:	  709,396
-> Captured Segments account for   94.7% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

   Action
		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				Physical
Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
CF1				TABLE	   73481      73483	  74,335   10.48
USER12		     IOPS
CF1				TABLE	   73464      73460	  70,134    9.89
USER15		     IOPS
CF1				TABLE	   73472      73477	  60,526    8.53
USER3		     IOPS
CF1				TABLE	   73413      73416	  54,713    7.71
USER4		     IOPS
CF1				TABLE	   73424      73420	  54,339    7.66
			  ------------------------------------------------------

Segments by Physical Write Requests	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total Physical Write Requests:	  673,985
-> Captured Segments account for   98.8% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			      Phys Write
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
CF1				TABLE	   73481      73483	  74,144   11.00
USER12		     IOPS
CF1				TABLE	   73464      73460	  69,027   10.24
USER15		     IOPS
      Consider rebuilding the TABLE &quot;USER12.CF1&quot; with object ID 73464 using a
CF1				TABLE	   73472      73477	  59,680    8.85
USER4		     IOPS
CF1				TABLE	   73424      73420	  53,711    7.97
USER3		     IOPS
CF1				TABLE	   73413      73416	  53,662    7.96
      higher value for PCTFREE.
			  ------------------------------------------------------

Segments by Direct Physical Writes	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total Direct Physical Writes:	     230
-> Captured Segments account for   56.5% of Total
      Related Object
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				  Direct
Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
SYS		     SYSAUX
WRH$_ACTIVE_SESSION_ 3773525_33 TABLE	   73801      73801	      66   28.70
SYS		     SYSAUX
SYS_LOB0000011139C00		LOB	   11140      11140	      57   24.78
	 Database object with ID 73464.
SYS		     SYSAUX
SYS_LOB0000007451C00 S_LOB_P256 LOB P	   73950      73950	       5    2.17
SYS		     SYSAUX
SYS_LOB0000011147C00		LOB	   11148      11148	       2     .87
			  ------------------------------------------------------


Segments by Table Scans 		   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------
   Recommendation 5: Schema Changes

   Estimated benefit is .08 active sessions, .47% of total activity.
Segments by DB Blocks Changes		   DB/Inst: P30DB/p30db1  Snaps: 68-69
   -----------------------------------------------------------------
-> % of Capture shows % of DB Block Changes for each top segment compared
-> with total DB Block Changes for all segments captured by the Snapshot
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				DB Block    % of
Object Name	       Name	Type	    Obj#   Dataobj#	 Changes Capture
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER12		     IOPS
CF1				TABLE	   73464      73460	  75,136   10.87
USER16		     IOPS
CF1				TABLE	   73481      73483	  74,576   10.79
USER15		     IOPS
CF1				TABLE	   73472      73477	  64,576    9.34
USER4		     IOPS
CF1				TABLE	   73424      73420	  54,672    7.91
USER3		     IOPS
   Action
CF1				TABLE	   73413      73416	  53,776    7.78
			  ------------------------------------------------------

      Consider rebuilding the TABLE &quot;USER27.CF1&quot; with object ID 73535 using a

Segments by Row Lock Waits		   DB/Inst: P30DB/p30db1  Snaps: 68-69

      higher value for PCTFREE.
		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by ITL Waits			   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by Buffer Busy Waits		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> % of Capture shows % of Buffer Busy Waits for each top segment compared
-> with total Buffer Busy Waits for all segments captured by the Snapshot
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
      Related Object
-------------------- ----------
								  Buffer
		     Subobject	Obj.				    Busy    % of
Object Name	       Name	Type	    Obj#   Dataobj#	   Waits Capture
-------------------- ---------- ----- ---------- ---------- ------------ -------
SYS		     SYSAUX
SYS_LOB0000011139C00		LOB	   11140      11140	       1  100.00
			  ------------------------------------------------------

	 Database object with ID 73535.
Segments by Global Cache Buffer Busy	   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------


Segments by CR Blocks Received		   DB/Inst: P30DB/p30db1  Snaps: 68-69

-> Total CR Blocks Received:	      35,036
-> Captured Segments account for   94.8% of Total
   Symptoms That Led to the Finding:
   ---------------------------------
      Read and write contention on database blocks was consuming significant
      database time.
      Impact is 1.24 active sessions, 7.11% of total activity.
	 Wait class &quot;Concurrency&quot; was consuming significant database time.
	 Impact is 1.21 active sessions, 6.93% of total activity.
	 Inter-instance messaging was consuming significant database time on
	 this instance.
	 Impact is .89 active sessions, 5.1% of total activity.
	    Wait class &quot;Cluster&quot; was consuming significant database time.
	    Impact is 1.04 active sessions, 5.96% of total activity.


Finding 5: Global Cache Messaging
Impact is .89 active sessions, 5.1% of total activity.
------------------------------------------------------
Inter-instance messaging was consuming significant database time on this
instance.

   Recommendation 1: Application Analysis
   Estimated benefit is .89 active sessions, 5.1% of total activity.
   -----------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 85% of Cluster wait
-> When ** MISSING ** occurs, some of the object attributes may not be available

      during the analysis period.
		     Tablespace
Owner			Name
-------------------- ----------
								   CR

		     Subobject	Obj.				 Blocks
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
   Symptoms That Led to the Finding:
USER1		     IOPS
CF1				TABLE	   73402      73404	  26,033   74.30
USER4		     IOPS
CF1				TABLE	   73424      73420	   3,661   10.45
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is 1.04 active sessions, 5.96% of total activity.
USER2		     IOPS
CF1				TABLE	   73409      73415	   2,773    7.91

USER3		     IOPS
CF1				TABLE	   73413      73416	     337     .96
USER10		     IOPS

CF1				TABLE	   73453      73455	     113     .32
			  ------------------------------------------------------

Segments by Current Blocks Received	   DB/Inst: P30DB/p30db1  Snaps: 68-69
Finding 6: Undersized SGA
-> Total Current Blocks Received:	   92,749
-> Captured Segments account for   98.0% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available
Impact is .56 active sessions, 3.22% of total activity.

		     Tablespace
Owner			Name
-------------------- ----------
-------------------------------------------------------
								 Current
		     Subobject	Obj.				 Blocks
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
The SGA was inadequately sized, causing additional I/O or hard parses.
USER1		     IOPS
CF1				TABLE	   73402      73404	  41,072   44.28
USER4		     IOPS
CF1				TABLE	   73424      73420	  10,826   11.67
The value of parameter &quot;sga_target&quot; was &quot;9664 M&quot; during the analysis period.
USER2		     IOPS
CF1				TABLE	   73409      73415	   6,933    7.48
USER10		     IOPS

I_CF1				INDEX	   73462      73462	   3,686    3.97
USER19		     IOPS
I_CF1				INDEX	   73500      73500	   3,680    3.97
   Recommendation 1: Database Configuration
			  ------------------------------------------------------

   Estimated benefit is .56 active sessions, 3.22% of total activity.
Segments by Global Cache Remote Grants	   DB/Inst: P30DB/p30db1  Snaps: 68-69
   ------------------------------------------------------------------
-> Total Global Cache Remote Grants:	   1,780,249
-> Captured Segments account for   98.9% of Total
   Action
-> When ** MISSING ** occurs, some of the object attributes may not be available

      Increase the size of the SGA by setting the parameter &quot;sga_target&quot; to
		     Tablespace
Owner			Name
      16912 M.
-------------------- ----------
								      GC

		     Subobject	Obj.				  Remote
Object Name	       Name	Type	    Obj#   Dataobj#	  Grants  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
   Symptoms That Led to the Finding:
USER4		     IOPS
CF1				TABLE	   73424      73420	 334,315   18.78
USER1		     IOPS
CF1				TABLE	   73402      73404	 243,743   13.69
   ---------------------------------
USER2		     IOPS
CF1				TABLE	   73409      73415	 216,913   12.18
USER3		     IOPS
CF1				TABLE	   73413      73416	 137,253    7.71
      Wait class &quot;User I/O&quot; was consuming significant database time.
USER10		     IOPS
CF1				TABLE	   73453      73455	 133,665    7.51
			  ------------------------------------------------------

      Impact is 13.19 active sessions, 75.41% of total activity.

Dictionary Cache Stats			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> "Pct Misses"  should be very low (< 2% in most cases)

-> "Final Usage" is the number of cache entries being used

				   Get	  Pct	 Scan	Pct	 Mod	  Final

Cache			      Requests	 Miss	 Reqs  Miss	Reqs	  Usage
------------------------- ------------ ------ ------- ----- -------- ----------
dc_awr_control			    17	 23.5	    0	N/A	   0	      1
Finding 7: Unusual &quot;Other&quot; Wait Event
dc_global_oids			 1,454	  1.7	    0	N/A	   0	    209
dc_histogram_data		 6,347	  2.6	    0	N/A	   0	  3,137
dc_histogram_defs		 8,278	  5.4	    0	N/A	   0	  5,320
dc_objects			 4,682	  1.2	    0	N/A	   0	  2,102
Impact is .45 active sessions, 2.56% of total activity.
dc_props			   496	  0.0	    0	N/A	   0	      3
dc_rollback_segments	     5,167,189	  0.0	    0	N/A	   0	    321
dc_segments			66,056	  0.1	    0	N/A	  10	    549
-------------------------------------------------------
dc_sequences			    12	  8.3	    0	N/A	  12	      5
dc_tablespaces			   270	  0.0	    0	N/A	   0	      7
dc_users			   171	  1.2	    0	N/A	   0	    231
outstanding_alerts		     2	100.0	    0	N/A	   0	      3
Wait event &quot;enq: CR - block range reuse ckpt&quot; in wait class &quot;Other&quot; was
			  ------------------------------------------------------

Dictionary Cache Stats (RAC)		   DB/Inst: P30DB/p30db1  Snaps: 68-69

consuming significant database time.
		  No data exists for this section of the report.
			  ------------------------------------------------------


Library Cache Activity			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> "Pct Misses"  should be very low

			 Get	Pct	       Pin    Pct	      Invali-
   Recommendation 1: Application Analysis
   Estimated benefit is .45 active sessions, 2.56% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate the cause for high &quot;enq: CR - block range reuse ckpt&quot; waits.
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations
--------------- ------------ ------ -------------- ------ ---------- --------
      Refer to Oracle&apos;s &quot;Database Reference&quot; for the description of this wait
BODY			  26	0.0	       226    0.9	   2	    0
CLUSTER 		   7	0.0		 7    0.0	   0	    0
EDITION 		   3	0.0		 6    0.0	   0	    0
      event.
HINTSET OBJECT		  33   15.2		33   15.2	   0	    0
INDEX			  39	0.0		39   15.4	   6	    0
SCHEMA			   4	0.0		 0    N/A	   0	    0
SQL AREA		 662   10.3	   355,993    0.0	 125	    1
   Action
SQL AREA BUILD		 161   86.3		 0    N/A	   0	    0
SQL AREA STATS		 126   48.4	       126   48.4	   0	    0
TABLE/PROCEDURE 	 560	0.0	     3,211    8.2	 178	    0
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
TRIGGER 		   3   66.7		 3  100.0	   1	    0
			  ------------------------------------------------------

      significant time on the &quot;enq: CR - block range reuse ckpt&quot; wait event.
Library Cache Activity (RAC)		   DB/Inst: P30DB/p30db1  Snaps: 68-69

		    GES Lock	  GES Pin      GES Pin	 GES Inval GES Invali-
Namespace	    Requests	 Requests     Releases	  Requests     dations
      For example, the UPDATE statement with SQL_ID &quot;35dumc2tpr9dv&quot; is
--------------- ------------ ------------ ------------ ----------- -----------
BODY			   0	      205	   205		 0	     0
CLUSTER 		   7		7	     7		 0	     0
      responsible for 92% of these waits.
EDITION 		   3		3	     3		 0	     0
HINTSET OBJECT		  33	       33	    33		 0	     0
INDEX			  39	       39	    39		 0	     0

TABLE/PROCEDURE 	 735	    2,357	 2,357		 0	     0
TRIGGER 		   0		3	     3		 0	     0
			  ------------------------------------------------------

   Recommendation 2: Application Analysis

Memory Dynamic Components		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Min/Max sizes since instance startup
-> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred
   Estimated benefit is .45 active sessions, 2.56% of total activity.
-> ordered by Component

		 Begin Snap	Current 	Min	    Max   Oper Last Op
Component	  Size (Mb)   Size (Mb)   Size (Mb)   Size (Mb)  Count Typ/Mod
   ------------------------------------------------------------------
--------------- ----------- ----------- ----------- ----------- ------ -------
ASM Buffer Cach 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 16K buf 	.00	    .00 	.00	    .00      0 STA/
   Action
DEFAULT 2K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 32K buf 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 4K buff 	.00	    .00 	.00	    .00      0 STA/
      Investigate the cause for high &quot;enq: CR - block range reuse ckpt&quot; waits
DEFAULT 8K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT buffer	   8,000.00    8,000.00    7,936.00    8,000.00      0 GRO/DEF
Data Transfer C 	.00	    .00 	.00	    .00      0 STA/
In Memory RO Ex 	.00	    .00 	.00	    .00      0 STA/
      in Module &quot;SQL*Plus&quot;.
In Memory RW Ex 	.00	    .00 	.00	    .00      0 STA/
In-Memory Area		.00	    .00 	.00	    .00      0 STA/
KEEP buffer cac 	.00	    .00 	.00	    .00      0 STA/

PGA Target	   3,232.00    3,232.00    3,232.00    3,232.00      0 STA/
RECYCLE buffer		.00	    .00 	.00	    .00      0 STA/
SGA Target	   9,664.00    9,664.00    9,664.00    9,664.00      0 STA/
   Recommendation 3: Application Analysis
Shared IO Pool	     128.00	 128.00      128.00	 128.00      0 STA/
java pool		.00	    .00 	.00	    .00      0 STA/
large pool	      64.00	  64.00       64.00	  64.00      0 STA/
memoptimize buf 	.00	    .00 	.00	    .00      0 STA/
   Estimated benefit is .45 active sessions, 2.56% of total activity.
shared pool	   1,440.00    1,440.00    1,440.00    1,504.00      0 SHR/DEF
streams pool		.00	    .00 	.00	    .00      0 STA/
unified pga poo 	.00	    .00 	.00	    .00      0 STA/
   ------------------------------------------------------------------
			  ------------------------------------------------------

Memory Resize Operations Summary	   DB/Inst: P30DB/p30db1  Snaps: 68-69

   Action
		  No data exists for this section of the report.
			  ------------------------------------------------------

Memory Resize Ops			   DB/Inst: P30DB/p30db1  Snaps: 68-69

      Investigate the cause for high &quot;enq: CR - block range reuse ckpt&quot; waits
		  No data exists for this section of the report.
			  ------------------------------------------------------

Process Memory Summary			   DB/Inst: P30DB/p30db1  Snaps: 68-69
      in Service &quot;p30db.example.com&quot;.
-> B: Begin Snap   E: End Snap
-> All rows below contain absolute values (i.e. not diffed over the interval)
-> Max Alloc is Maximum PGA Allocation size at snapshot time

-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
-> ordered by Begin/End snapshot, Alloc (MB) desc
-> Top 10 containers by Alloc (MB) at end snapshot time are displayed

   Symptoms That Led to the Finding:
							     Hist
				     Avg  Std Dev     Max     Max
		Alloc	   Used    Alloc    Alloc   Alloc   Alloc    Num    Num
   ---------------------------------
   Category	 (MB)	   (MB)     (MB)     (MB)    (MB)    (MB)   Proc  Alloc
 - -------- --------- --------- -------- -------- ------- ------- ------ ------
B Freeable     236.3	    .0	    4.6      8.9      43     N/A     51     51
      Wait class &quot;Other&quot; was consuming significant database time.
  Other        731.8	   N/A	    5.8      8.0      43      43    127    127
  PL/SQL	16.7	  15.3	     .2       .3       2       3    109    109
  SQL		10.7	   6.6	     .2       .3       1      17     61     49
      Impact is .96 active sessions, 5.48% of total activity.
  Total        995.6	  21.9	   10.7     17.5      89      63    348    336
E Freeable     195.2	    .0	    5.9      8.4      28     N/A     33     33
  Other        608.1	   N/A	    5.6      8.6      43      43    109    109

  PL/SQL	 7.7	   6.4	     .1       .3       2       3     91     90
  SQL		 3.4	   2.3	     .1       .2       1      17     42     31
  Total        814.4	   8.8	   11.7     17.6      73      63    275    263

Finding 8: Unusual &quot;Other&quot; Wait Event
Impact is .35 active sessions, 2.02% of total activity.
			  ------------------------------------------------------

SGA Memory Summary			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-------------------------------------------------------

						      End Size (Bytes)
SGA regions			Begin Size (Bytes)	(if different)
------------------------------ ------------------- -------------------
Wait event &quot;enq: US - contention&quot; in wait class &quot;Other&quot; was consuming
Database Buffers		     8,522,825,728
Fixed Size				12,445,928
Redo Buffers				21,106,688
Variable Size			     1,577,058,304
significant database time.
			       -------------------
sum				    10,133,436,648
			  ------------------------------------------------------


SGA breakdown difference by Pool and Name  DB/Inst: P30DB/p30db1  Snaps: 68-69
-> ordered by Pool, Name
-> N/A value for Begin MB or End MB indicates the size of that Pool/Name was
   insignificant, or zero in that snapshot
   Recommendation 1: Application Analysis

Pool   Name				    Begin MB	     End MB  % Diff
------ ------------------------------ -------------- -------------- -------
large  PX msg pool				15.0	       15.0    0.00
   Estimated benefit is .35 active sessions, 2.02% of total activity.
large  free memory				48.6	       48.6    0.00
shared ASH buffers				16.0	       16.0    0.00
shared KCRAHT Free Blocks			21.3	       21.3    0.00
shared KGH: NO ACCESS				32.0	       32.0    0.00
   ------------------------------------------------------------------
shared KGLH0					37.9	       38.6    1.69
shared KJSC rnb slots				31.4	       27.4  -12.71
shared SO private sga				28.8	       28.8    0.00
shared SQLA				       186.1	      177.4   -4.69
   Action
shared db_block_hash_buckets			32.0	       32.0    0.00
shared free memory			       173.1	      185.9    7.40
shared gc name table				32.0	       32.0    0.00
shared gcs resources			       268.9	      268.9    0.00
      Investigate the cause for high &quot;enq: US - contention&quot; waits. Refer to
shared gcs resv res hash bucket 		48.0	       48.0    0.00
shared gcs shadows			       146.6	      146.6    0.00
shared ges big msg buffers			26.3	       26.3    0.00
shared ksunfy_meta 1				25.0	       25.0    0.00
      Oracle&apos;s &quot;Database Reference&quot; for the description of this wait event.
shared row cache				  .0		 .0    0.00
       buffer_cache			     8,000.0	    8,000.0    0.00
       fixed_sga				11.9	       11.9    0.00

       log_buffer				20.1	       20.1    0.00
       shared_io_pool			       128.0	      128.0    0.00
   Recommendation 2: Application Analysis
			  ------------------------------------------------------


   Estimated benefit is .35 active sessions, 2.02% of total activity.
Replication System Resource Usage	   DB/Inst: P30DB/p30db1  Snaps: 68-69

   ------------------------------------------------------------------
		  No data exists for this section of the report.
			  ------------------------------------------------------
   Action

Replication SGA Usage			   DB/Inst: P30DB/p30db1  Snaps: 68-69

      Investigate the cause for high &quot;enq: US - contention&quot; waits in Module
		  No data exists for this section of the report.
			  ------------------------------------------------------

      &quot;SQL*Plus&quot;.

GoldenGate Capture			   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.

			  ------------------------------------------------------

GoldenGate Capture Rate 		   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
   Recommendation 3: Application Analysis
			  ------------------------------------------------------

GoldenGate Apply Reader 		   DB/Inst: P30DB/p30db1  Snaps: 68-69

   Estimated benefit is .35 active sessions, 2.02% of total activity.
		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Coordinator		   DB/Inst: P30DB/p30db1  Snaps: 68-69

   ------------------------------------------------------------------
		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Server 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
   Action

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Coordinator Rate	   DB/Inst: P30DB/p30db1  Snaps: 68-69
      Investigate the cause for high &quot;enq: US - contention&quot; waits in Service

		  No data exists for this section of the report.
			  ------------------------------------------------------

      &quot;p30db.example.com&quot;.
GoldenGate Apply Reader and Server Rate    DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------



XStream Capture 			   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------
   Recommendation 4: Application Analysis

XStream Capture Rate			   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------
   Estimated benefit is .1 active sessions, .59% of total activity.

XStream Apply Reader			   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Coordinator		   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------
   ----------------------------------------------------------------

XStream Apply Server			   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------

   Action
XStream Apply Coordinator Rate		   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------

      Investigate the cause for high &quot;enq: US - contention&quot; waits with P1
XStream Apply Reader and Server Rate	   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------

      (&quot;name|mode&quot;) value &quot;1431502854&quot; and P2 (&quot;undo segment #&quot;) value &quot;217&quot;.

Table Statistics by DML Operations	   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.

			  ------------------------------------------------------

Table Statistics by Conflict Resolutions   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
   Symptoms That Led to the Finding:
			  ------------------------------------------------------

Replication Large Transaction Statistics   DB/Inst: P30DB/p30db1  Snaps: 68-69

   ---------------------------------
		  No data exists for this section of the report.
			  ------------------------------------------------------

Replication Long Running Transaction StatisticsDB/Inst: P30DB/p30db1  Snaps: 6

      Wait class &quot;Other&quot; was consuming significant database time.
		  No data exists for this section of the report.
			  ------------------------------------------------------

      Impact is .96 active sessions, 5.48% of total activity.

Advanced Queue CPU/IO Usage		   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.

			  ------------------------------------------------------

Buffered Queues 			   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.

			  ------------------------------------------------------

Buffered Queue Subscribers		   DB/Inst: P30DB/p30db1  Snaps: 68-69


		  No data exists for this section of the report.
			  ------------------------------------------------------

Rule Set				   DB/Inst: P30DB/p30db1  Snaps: 68-69

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queues			   DB/Inst: P30DB/p30db1  Snaps: 68-69

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queues Rate			   DB/Inst: P30DB/p30db1  Snaps: 68-69


		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queue Subscribers		   DB/Inst: P30DB/p30db1  Snaps: 68-69
	  Additional Information

		  No data exists for this section of the report.
			  ------------------------------------------------------


	  ----------------------
Resource Limit Stats			       DB/Inst: P30DB/p30db1  Snap: 69
-> Only rows with Current or Maximum Utilization > 80% of Limit are shown
-> For "UNLIMITED" resources, rows whose Current or Maximum Utilization

   exceeds 2*Initial Allocation are shown
-> Ordered by Resource Name

				  Current      Maximum	   Initial
Resource Name			Utilization  Utilization Allocation   Limit
Miscellaneous Information
------------------------------ ------------ ------------ ---------- ----------
ges_cache_ress			      3,173	   3,720	  0  UNLIMITED
			  ------------------------------------------------------

-------------------------
Shared Servers Activity 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Values represent averages for all samples

   Avg Total   Avg Active    Avg Total	 Avg Active    Avg Total   Avg Active
Wait class &quot;Application&quot; was not consuming significant database time.
 Connections  Connections Shared Srvrs Shared Srvrs  Dispatchers  Dispatchers
------------ ------------ ------------ ------------ ------------ ------------
	   0		0	     1		  0	       1	    0
			  ------------------------------------------------------

Wait class &quot;Commit&quot; was not consuming significant database time.
Shared Servers Rates			   DB/Inst: P30DB/p30db1  Snaps: 68-69

  Common     Disp			 Common       Disp     Server
   Queue    Queue   Server    Server	  Queue      Queue	Total	  Server
Wait class &quot;Configuration&quot; was not consuming significant database time.
 Per Sec  Per Sec Msgs/Sec    KB/Sec	  Total      Total	 Msgs  Total(KB)
-------- -------- -------- --------- ---------- ---------- ---------- ----------
       0	0	 0	 0.0	      0 	 0	    0	       0
			  ------------------------------------------------------
CPU was not a bottleneck for the instance.

Shared Servers Utilization		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Statistics are combined for all servers
-> Incoming and Outgoing Net % are included in %Busy

  Total Server			  Incoming  Outgoing
      Time (s)	  %Busy    %Idle     Net %     Net %
-------------- -------- -------- --------- ---------
Wait class &quot;Network&quot; was not consuming significant database time.
	   615	    0.0    100.0       0.0	 0.0
			  ------------------------------------------------------

Shared Servers Common Queue		   DB/Inst: P30DB/p30db1  Snaps: 68-69

		  No data exists for this section of the report.
			  ------------------------------------------------------
The network latency of the cluster interconnect was within acceptable limits

Shared Servers Dispatchers		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Ordered by %Busy, descending
-> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue
-> Name suffixes:
     "(N)" - dispatcher started between begin and end snapshots
     "(R)" - dispatcher re-started between begin and end snapshots
of 1 milliseconds.

	      Avg Total Disp			    Total Total Queue  Avg Queue
Name	    Conns   Time (s)	%Busy	 %Idle	   Queued    Wait (s)  Wait (ms)
------- --------- ---------- -------- -------- ---------- ----------- ----------
D000	      0.0	 615	  0.0	 100.0		0	    0
			  ------------------------------------------------------


Session connect and disconnect calls were not consuming significant database
Modified Parameters			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> This section shows all the modified initialization parameters that
were in effect during the entire snapshot interval
-> End Value is displayed only if the parameter value was modified within
the snapshot interval

								End value
time.
Parameter Name		      Begin value			(if different)
----------------------------- --------------------------------- --------------
_ipddb_enable		      TRUE
audit_file_dest 	      /u01/app/oracle/admin/p30db/adump
audit_trail		      DB
cluster_database	      TRUE
compatible		      19.0.0
control_files		      +DATA/P30DB/CONTROLFILE/current.2
Hard parsing of SQL statements was not consuming significant database time.
db_block_size		      8192
db_create_file_dest	      +DATA
db_domain		      example.com
db_name 		      p30db
db_recovery_file_dest	      +FRA
db_recovery_file_dest_size    274877906944
diagnostic_dest 	      /u01/app/oracle
dispatchers		      (PROTOCOL=TCP) (SERVICE=p30dbXDB)

instance_number 	      1
listener_networks
local_listener		       (ADDRESS=(PROTOCOL=TCP)(HOST=192
nls_language		      AMERICAN
nls_territory		      AMERICA
open_cursors		      300
The database&apos;s maintenance windows were active during 100% of the analysis
pga_aggregate_target	      3371171840
processes		      640
remote_listener 	       mcracpoc-scan.example.com:1521
period.

</pre>
remote_login_passwordfile     EXCLUSIVE
sga_target		      10133438464
thread			      1
undo_tablespace 	      UNDOTBS1
<br /><a class="awr" href="#top">Back to Top</a><p />
			  ------------------------------------------------------


Modified Multi-Valued Parameters	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> This section only displays parameters that have more than one value
<p />
->'(NULL)' indicates a missing parameter value
-> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot

								End value
<a class="awr" name="9997"></a>
Parameter Name		      Begin value			(if different)
----------------------------- --------------------------------- --------------
control_files		      +DATA/P30DB/CONTROLFILE/current.2
			      +FRA/P30DB/CONTROLFILE/current.25
			  ------------------------------------------------------
<a class="awr" name="9997"></a><h3 class="awr">RAC Statistics</h3>

Top SQL with Top Events 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Top SQL statements by DB Time along with the top events by DB Time
   for those SQLs.
<p />
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the
   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

<table border="0" width="600" class="tdiff" summary="This table displays information about RAC instances">
		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
									   % Row
Event			       % Event Top Row Source			  Source
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th></tr>
------------------------------ ------- --------------------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		      594	   45.45
db file parallel read		 20.40 TABLE ACCESS - BY INDEX ROWID BAT   20.40
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )
<tr><td scope="row" class='awrnc'>Number of Instances:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>	 2</td></tr>


db file sequential read 	 19.79 TABLE ACCESS - BY INDEX ROWID BAT   19.56


gc cr multi block request	  1.76 TABLE ACCESS - BY INDEX ROWID BAT    1.76
<tr><td scope="row" class='awrc'>Number of LMS's:</td><td align="right" class='awrc'>	 2</td><td align="right" class='awrc'>	  2</td></tr>

	  35dumc2tpr9dv 	   203653710		      503	   38.43
db file sequential read 	 23.07 UPDATE				   22.99
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

<tr><td scope="row" class='awrnc'>Number of realtime LMS's:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>    2</td><td class='awrnc'> (0 priority changes)</td></tr>

buffer busy waits		  5.58 UPDATE STATEMENT 		    5.58


CPU + Wait for CPU		  2.67 UPDATE STATEMENT 		    1.68

</table><p />
			  ------------------------------------------------------

Top SQL with Top Row Sources		   DB/Inst: P30DB/p30db1  Snaps: 68-69
Global Cache Load Profile
-> Top SQL statements by DB Time along with the top row sources by DB Time
   for those SQLs.
<p />
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
   that SQL.
<table border="0" width="600" class="tdiff" summary="This table displays information about global cache load
-> % Event is the percentage of DB Time spent on the event by the
   SQL executing the row source.
		     profile">
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th></tr>
----------------------- -------------------- -------------------- --------------
					   % Row
Row Source				  Source Top Event		 % Event
---------------------------------------- ------- ----------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		      594	   45.45
TABLE ACCESS - BY INDEX ROWID BATCHED	   44.31 db file parallel read	   20.40
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	  35dumc2tpr9dv 	   203653710		      503	   38.43
UPDATE					   26.66 db file sequential read   22.99
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
<tr><td scope="row" class='awrnc'>Global Cache blocks received:</td><td align="right" class='awrnc'>		   206.96</td><td align="right" class='awrnc'>		       2.78</td></tr>
< :B1 )


UPDATE STATEMENT			   11.61 buffer busy waits	    5.58

			  ------------------------------------------------------

<tr><td scope="row" class='awrc'>Global Cache blocks served:</td><td align="right" class='awrc'>		29.34</td><td align="right" class='awrc'>		  0.39</td></tr>
Top Sessions				   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> '# Samples Active' shows the number of ASH samples in which the session
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
      and not total database activity.
<tr><td scope="row" class='awrnc'>GCS/GES messages received:</td><td align="right" class='awrnc'>	      6,048.98</td><td align="right" class='awrnc'>		   81.22</td></tr>
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
<tr><td scope="row" class='awrc'>GCS/GES messages sent:</td><td align="right" class='awrc'>		8,326.01</td><td align="right" class='awrc'>		   111.79</td></tr>
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
	9,16277       4.43 db file sequential read		2.90
USER17		     sqlplus@mcracp...m (TNS V1-V3)	  38/62 [ 62%]	     17

<tr><td scope="row" class='awrnc'>DBWR Fusion writes:</td><td align="right" class='awrnc'>		   0.21</td><td align="right" class='awrnc'>		     0.00</td></tr>
       15, 3416       4.43 db file parallel read		1.38
USER15		     sqlplus@mcracp...m (TNS V1-V3)	  18/62 [ 29%]	      0

<tr><td scope="row" class='awrc'>Estd Interconnect traffic (KB)</td><td align="right" class='awrc'>		4,698.00</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
Global Cache Efficiency Percentages (Target local+remote 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays global cache efficiency percentages">
<tr><td scope="row" class='awrnc'>Buffer access -  local cache %:</td><td align="right" class='awrnc'>	39.43</td></tr>
<tr><td scope="row" class='awrc'>Buffer access - remote cache %:</td><td align="right" class='awrc'>   1.77</td></tr>
<tr><td scope="row" class='awrnc'>Buffer access -	  disk %:</td><td align="right" class='awrnc'>	58.80</td></tr>
<tr><td scope="row" class='awrc'>Global Cache Locality	      %:</td><td align="right" class='awrc'>  58.72</td></tr>
</table><p />
Global Cache and Enqueue Services - Workload Characteristics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays workload characteristics for global
		    cache and enqueue services">
<tr><td scope="row" class='awrnc'>Avg global cache cr block receive time (us):</td><td align="right" class='awrnc'>	    1,757.6</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache current block receive time (us):</td><td align="right" class='awrc'>	       1,121.2</td></tr>
<tr><td scope="row" class='awrnc'>Avg LMS process busy %:</td><td align="right" class='awrnc'>		  12.5</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block build time (us):</td><td align="right" class='awrc'> 	  144.1</td></tr>
<tr><td scope="row" class='awrnc'>Global cache log flushes for cr blocks served %:</td><td align="right" class='awrnc'> 	    1.5</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block flush time (us):</td><td align="right" class='awrc'>        51,739.1</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block pin time (us):</td><td align="right" class='awrnc'>		 0.0</td></tr>
<tr><td scope="row" class='awrc'>Global cache log flushes for current blocks served %:</td><td align="right" class='awrc'>	       0.1</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block flush time (us):</td><td align="right" class='awrnc'>	      72,631.6</td></tr>
<tr><td scope="row" class='awrc'>Avg global enqueue get time (us):</td><td align="right" class='awrc'>		  83.7</td></tr>
</table><p />
Global Cache and Enqueue Services - Messaging Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays messaging statistics for Global Cache
		    and Enqueue Services">
<tr><td scope="row" class='awrnc'>Avg message sent queue time (us):</td><td align="right" class='awrnc'>	   777.6</td></tr>
<tr><td scope="row" class='awrc'>Avg message sent queue time on ksxp (us):</td><td align="right" class='awrc'>	       1,360.7</td></tr>
<tr><td scope="row" class='awrnc'>Avg message received kernel queue time (us):</td><td align="right" class='awrnc'>	       24.9</td></tr>
<tr><td scope="row" class='awrc'>Avg message received queue time (us):</td><td align="right" class='awrc'>	      13.8</td></tr>
<tr><td scope="row" class='awrnc'>Avg GCS message process time (us):</td><td align="right" class='awrnc'>	     24.0</td></tr>
<tr><td scope="row" class='awrc'>Avg GES message process time (us):</td><td align="right" class='awrc'> 	   21.5</td></tr>
<tr><td scope="row" class='awrnc'>% of direct sent messages:</td><td align="right" class='awrnc'>   20.96</td></tr>
<tr><td scope="row" class='awrc'>% of indirect sent messages:</td><td align="right" class='awrc'>   78.41</td></tr>
<tr><td scope="row" class='awrnc'>% of flow controlled messages:</td><td align="right" class='awrnc'>	 0.62</td></tr>
</table><p />
<hr />
<p />Cluster Interconnect<p />
<ul>
<li class="awr"> if Public/Source at End snap is different a '*' is displayed</li>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect. . if Public/Source at End snap is different a '*' is displayed"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 2" id="End">End</th>
</tr><tr>
<th class="awrbg" scope="col">Interface</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Src">Src</th></tr>
<tr><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.22.248</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End Pub" class='awrclb'>&#160;</td><td headers="End Src" class='awrcrb'>&#160;</td></tr>
			   db file sequential read		1.30
							  17/62 [ 28%]	      8
</table><p />

       22,45631       4.43 db file parallel read		1.45
USER1		     sqlplus@mcracp...m (TNS V1-V3)	  19/62 [ 31%]	      0
<a class="awr" name="top"></a>

       25,26846       4.43 db file sequential read		2.75
USER19		     sqlplus@mcracp...m (TNS V1-V3)	  36/62 [ 58%]	     19
<h2 class="awr">

      140,55215       4.43 db file parallel read		1.30
RAC Statistics
USER16		     sqlplus@mcracp...m (TNS V1-V3)	  17/62 [ 28%]	      0

			   db file sequential read		1.07
</h2>
							  14/62 [ 23%]	      8

			  ------------------------------------------------------

<ul>
Top Blocking Sessions			   DB/Inst: P30DB/p30db1  Snaps: 68-69
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
-> Blocking session activity percentages are calculated with respect to
      waits on enqueues, latches and "buffer busy" only
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
-> '% Activity' represents the load on the database caused by
      a particular blocking session
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
-> '# Samples Active' shows the number of ASH samples in which the
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
      blocking session was found active.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
      when the blocking session was found active.

 Blocking Sid (Inst) % Activity Event Caused			  % Event
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
-------------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
   374,41238(	  1)	   3.82 LGWR any worker group		     3.59
SYS		     oracle@mcracpo...le.com (LG00)	  54/62 [ 88%]	      0

   877,55918(	  1)	   1.15 buffer busy waits		     0.99
</ul>
USER6		     sqlplus@mcracp...m (TNS V1-V3)	  57/62 [ 92%]	     11

			  ------------------------------------------------------
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />

Top PL/SQL Procedures			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
<br /><a class="awr" href="#top">Back to Top</a><p />
      at the point of sampling . If the value is 'SQL', it represents
      the percentage of time spent executing SQL for the particular
      PL/SQL entry subprogram

PL/SQL Entry Subprogram 					  % Activity
----------------------------------------------------------------- ----------
<p />
PL/SQL Current Subprogram					   % Current
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       38.50
<a class="awr" name="5100"></a>
   SQL								       38.50
			  ------------------------------------------------------

Top Events				   DB/Inst: P30DB/p30db1  Snaps: 68-69
<h3 class="awr">Global Messaging Statistics</h3>
-> Top Events by DB Time
-> % Activity is the percentage of DB Time due to the event

<ul>
Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
	   Avg Active
% Activity   Sessions
</ul>
---------- ----------
db file sequential read 	    User I/O	    FOREGROUND
     42.86	 9.09
db file parallel read		    User I/O	    FOREGROUND
     20.40	 4.33
<table border="0" class="tdiff" summary="This table displays global messaging statistics. Total, per second, per transaction values are displayed for each statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
log file parallel write 	    System I/O	    BACKGROUND
      7.94	 1.69
buffer busy waits		    Concurrency     FOREGROUND
      5.58	 1.18
CPU + Wait for CPU		    CPU 	    FOREGROUND
<tr><td scope="row" class='awrc'>Cluster reconfiguration count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
      4.51	 0.96
			  ------------------------------------------------------

Top Event P1/P2/P3 Values		   DB/Inst: P30DB/p30db1  Snaps: 68-69
<tr><td scope="row" class='awrnc'>Domain reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
-> % Event is the percentage of DB Time due to the event
-> % Activity is the percentage of DB Time due to the event with the given
   P1,P2,P3 Values.
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>46</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td></tr>

Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
Parameter 1		   Parameter 2		      Parameter 3
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>5,246,148</td><td align="right" class='awrnc'>8,496.65</td><td align="right" class='awrnc'>114.08</td></tr>
-------------------------- -------------------------- --------------------------
db file sequential read 	 42.86		  "2","24942388","1"	   0.08
file#			   block#		      blocks
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>

db file parallel read		 20.40		       "1","13","13"	  18.11
files			   blocks		      requests

log file parallel write 	  7.94			 "2","4","2"	   0.46
<tr><td scope="row" class='awrnc'>KA local message waits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
files			   blocks		      requests

buffer busy waits		  5.65			"4","2","13"	   5.65
file#			   block#		      class#
<tr><td scope="row" class='awrc'>KA local messages received</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>

enq: CR - block range reuse ck	  1.99	    "1129447430","65639","1"	   0.31
name|mode		   2			      0

<tr><td scope="row" class='awrnc'>KA messages received actual</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
			  ------------------------------------------------------

Top DB Objects				   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Top DB Objects by DB Time with respect to Application, Cluster,
<tr><td scope="row" class='awrc'>KA messages received logical</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
   User I/O,  buffer busy waits and In-Memory DB events only.
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available
<tr><td scope="row" class='awrnc'>KA requests failed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>

      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
Object Name (Type)				      Tablespace
<tr><td scope="row" class='awrc'>KA requests succeeded</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
----------------------------------------------------- --------------------------
	  73433       4.20 db file sequential read		2.52
USER7.CF1 (TABLE)				      IOPS
			   db file parallel read		1.15

<tr><td scope="row" class='awrnc'>Pseudo reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
	  73533       4.20 db file sequential read		2.83
USER26.CF1 (TABLE)				      IOPS
			   db file parallel read		1.30

<tr><td scope="row" class='awrc'>Pseudo rm reconfig count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
	  73562       4.20 db file sequential read		3.13
USER32.CF1 (TABLE)				      IOPS
	  73492       4.13 db file sequential read		2.98
USER18.CF1 (TABLE)				      IOPS
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>2,969</td><td align="right" class='awrnc'>4.81</td><td align="right" class='awrnc'>0.06</td></tr>
	  73503       4.13 db file sequential read		2.83
USER21.CF1 (TABLE)				      IOPS
			   db file parallel read		1.07

			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>5,515</td><td align="right" class='awrc'>8.93</td><td align="right" class='awrc'>0.12</td></tr>

Activity Over Time			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Analysis period is divided into smaller time slots as indicated
   in the 'Slot Time (Duration)'.
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>7,475</td><td align="right" class='awrnc'>12.11</td><td align="right" class='awrnc'>0.16</td></tr>
-> Top 3 events are reported in each of those slots
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
   that event in that slot
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>30,769</td><td align="right" class='awrc'>49.83</td><td align="right" class='awrc'>0.67</td></tr>
-> '% Event' is 'Event Count' over all ASH samples in the analysis period

			 Slot					Event
Slot Time (Duration)	Count Event				Count % Event
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>4,478</td><td align="right" class='awrnc'>7.25</td><td align="right" class='awrnc'>0.10</td></tr>
-------------------- -------- ------------------------------ -------- -------
10:27:31   (2.5 min)	  360 db file sequential read		  154	11.76
			      db file parallel read		   57	 4.35
			      CPU + Wait for CPU		   34	 2.60
<tr><td scope="row" class='awrc'>dynamically allocated gcs resources</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
10:30:00   (5.0 min)	  675 db file sequential read		  287	21.93
			      db file parallel read		  154	11.76
			      log file parallel write		   55	 4.20
10:35:00   (2.8 min)	  274 db file sequential read		  120	 9.17
<tr><td scope="row" class='awrnc'>dynamically allocated gcs shadows</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
			      db file parallel read		   56	 4.28
			      log file parallel write		   24	 1.83
			  ------------------------------------------------------


<tr><td scope="row" class='awrc'>flow control messages received</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>

	  ADDM Report for Task 'ADDM:3393773525_1_69'
	  -------------------------------------------

Analysis Period
<tr><td scope="row" class='awrnc'>flow control messages sent</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
---------------
AWR snapshot range from 68 to 69.
Time period starts at 08-FEB-20 10.27.31 AM
<tr><td scope="row" class='awrc'>gcs assume cvt</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Time period ends at 08-FEB-20 10.37.49 AM

Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
<tr><td scope="row" class='awrnc'>gcs assume no cvt</td><td align="right" class='awrnc'>10,098</td><td align="right" class='awrnc'>16.35</td><td align="right" class='awrnc'>0.22</td></tr>
Database version 19.0.0.0.0.
ADDM performed an analysis of instance p30db1, numbered 1 and hosted at
mcracpoc1.example.com.

Activity During the Analysis Period
<tr><td scope="row" class='awrc'>gcs ast to fg</td><td align="right" class='awrc'>217,047</td><td align="right" class='awrc'>351.53</td><td align="right" class='awrc'>4.72</td></tr>
-----------------------------------
Total database time was 10808 seconds.
The average number of active sessions was 17.49.

<tr><td scope="row" class='awrnc'>gcs ast xid</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendation
s
					     Percent of Activity
<tr><td scope="row" class='awrc'>gcs bidless ast to lms</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td></tr>
   ----------------------------------------  -------------------  --------------
-
1  Top SQL Statements			     17.42 | 99.64	  2
2  "User I/O" wait Class		     13.19 | 75.41	  0
<tr><td scope="row" class='awrnc'>gcs blocked converts</td><td align="right" class='awrnc'>38,376</td><td align="right" class='awrnc'>62.15</td><td align="right" class='awrnc'>0.83</td></tr>
3  Top Segments by "User I/O" and "Cluster"  4.05 | 23.13	  5
4  Buffer Busy - Hot Objects		     1.24 | 7.11	  5
5  Global Cache Messaging		     .89 | 5.1		  1
6  Undersized SGA			     .56 | 3.22 	  1
<tr><td scope="row" class='awrc'>gcs blocked cr converts</td><td align="right" class='awrc'>1,641</td><td align="right" class='awrc'>2.66</td><td align="right" class='awrc'>0.04</td></tr>
7  Unusual "Other" Wait Event		     .45 | 2.56 	  3
8  Unusual "Other" Wait Event		     .35 | 2.02 	  4
<tr><td scope="row" class='awrnc'>gcs compatible basts</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (global)</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (local)</td><td align="right" class='awrnc'>25,527</td><td align="right" class='awrnc'>41.34</td><td align="right" class='awrnc'>0.56</td></tr>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------
<tr><td scope="row" class='awrc'>gcs cr basts to PIs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>

Finding 1: Top SQL Statements
Impact is 17.45 active sessions, 99.64% of total activity.
----------------------------------------------------------
<tr><td scope="row" class='awrnc'>gcs cr requests to slave</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

   Recommendation 1: SQL Tuning
<tr><td scope="row" class='awrc'>gcs cr serve without current lock</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
   Estimated benefit is 9.43 active sessions, 53.9% of total activity.
   -------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      "bhdvtsvjhgvrh".
<tr><td scope="row" class='awrnc'>gcs dbwr flush pi msgs</td><td align="right" class='awrnc'>316,380</td><td align="right" class='awrnc'>512.41</td><td align="right" class='awrnc'>6.88</td></tr>
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND
	 (CUSTID < :B1 )
<tr><td scope="row" class='awrc'>gcs dbwr write request msgs</td><td align="right" class='awrc'>126</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.00</td></tr>
   Rationale
      The SQL spent 99% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
<tr><td scope="row" class='awrnc'>gcs error msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
<tr><td scope="row" class='awrc'>gcs flash read serve requests to slave</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
      SQL statement with SQL_ID "bhdvtsvjhgvrh" was executed 258079 times and
      had an average elapsed time of 0.022 seconds.
   Rationale
      I/O and Cluster wait for TABLE "USER26.CF1" with object ID 73533
<tr><td scope="row" class='awrnc'>gcs force cr block only</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
      consumed 6% of the database time spent on this SQL statement.

   Recommendation 2: SQL Tuning
   Estimated benefit is 5.9 active sessions, 33.76% of total activity.
   -------------------------------------------------------------------
<tr><td scope="row" class='awrc'>gcs force cr grant</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      "35dumc2tpr9dv".
      Related Object
<tr><td scope="row" class='awrnc'>gcs force cr no current</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
      The SQL spent 73% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 45533 times and
      had an average elapsed time of 0.1 seconds.


Finding 2: "User I/O" wait Class
Impact is 13.21 active sessions, 75.41% of total activity.
----------------------------------------------------------
Wait class "User I/O" was consuming significant database time.
Waits for I/O to temporary tablespaces were not consuming significant database
time.
The throughput of the I/O subsystem was not significantly lower than expected.

   No recommendations are available.


Finding 3: Top Segments by "User I/O" and "Cluster"
Impact is 4.05 active sessions, 23.13% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant "User I/O" and
"Cluster" waits were found.

   Recommendation 1: Segment Tuning
   Estimated benefit is .84 active sessions, 4.82% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER26.CF1" with
      object ID 73533.
      Related Object
	 Database object with ID 73533.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the SELECT statement with
      SQL_ID "bhdvtsvjhgvrh" is responsible for 67% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 174159
      physical reads, 26238 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .81 active sessions, 4.64% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER19.CF1" with
      object ID 73485.
      Related Object
	 Database object with ID 73485.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 130813
      physical reads, 19551 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .8 active sessions, 4.56% of total activity.
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER7.CF1" with
      object ID 73433.
      Related Object
	 Database object with ID 73433.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the SELECT statement with
      SQL_ID "bhdvtsvjhgvrh" is responsible for 71% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 142604
      physical reads, 21215 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .8 active sessions, 4.56% of total activity.
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER18.CF1" with
      object ID 73492.
      Related Object
	 Database object with ID 73492.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID "35dumc2tpr9dv" is responsible for 51% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 173999
      physical reads, 26042 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .8 active sessions, 4.56% of total activity.
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER21.CF1" with
      object ID 73503.
      Related Object
	 Database object with ID 73503.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 175461
      physical reads, 26584 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 13.19 active sessions, 75.41% of total activity.


Finding 4: Buffer Busy - Hot Objects
Impact is 1.24 active sessions, 7.11% of total activity.
--------------------------------------------------------
Read and write contention on database blocks was consuming significant
database time.

   Recommendation 1: Schema Changes
   Estimated benefit is .15 active sessions, .84% of total activity.
   -----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE "USER16.CF1" with object ID 73481 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73481.

   Recommendation 2: Schema Changes
   Estimated benefit is .11 active sessions, .65% of total activity.
   -----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE "USER1.CF1" with object ID 73402 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73402.

   Recommendation 3: Schema Changes
   Estimated benefit is .1 active sessions, .56% of total activity.
   ----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE "USER15.CF1" with object ID 73472 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73472.

   Recommendation 4: Schema Changes
   Estimated benefit is .08 active sessions, .47% of total activity.
   -----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE "USER12.CF1" with object ID 73464 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73464.

   Recommendation 5: Schema Changes
   Estimated benefit is .08 active sessions, .47% of total activity.
   -----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE "USER27.CF1" with object ID 73535 using a
      higher value for PCTFREE.
<tr><td scope="row" class='awrc'>gcs forward cr to pinged instance</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
      Related Object
	 Database object with ID 73535.

   Symptoms That Led to the Finding:
   ---------------------------------
      Read and write contention on database blocks was consuming significant
      database time.
      Impact is 1.24 active sessions, 7.11% of total activity.
<tr><td scope="row" class='awrnc'>gcs grant ast</td><td align="right" class='awrnc'>217,094</td><td align="right" class='awrnc'>351.61</td><td align="right" class='awrnc'>4.72</td></tr>
	 Wait class "Concurrency" was consuming significant database time.
	 Impact is 1.21 active sessions, 6.93% of total activity.
	 Inter-instance messaging was consuming significant database time on
	 this instance.
	 Impact is .89 active sessions, 5.1% of total activity.
<tr><td scope="row" class='awrc'>gcs grant request in partial open</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
	    Wait class "Cluster" was consuming significant database time.
	    Impact is 1.04 active sessions, 5.96% of total activity.


Finding 5: Global Cache Messaging
<tr><td scope="row" class='awrnc'>gcs immediate (compatible) converts</td><td align="right" class='awrnc'>8,613</td><td align="right" class='awrnc'>13.95</td><td align="right" class='awrnc'>0.19</td></tr>
Impact is .89 active sessions, 5.1% of total activity.
------------------------------------------------------
Inter-instance messaging was consuming significant database time on this
instance.

<tr><td scope="row" class='awrc'>gcs immediate (null) converts</td><td align="right" class='awrc'>200,769</td><td align="right" class='awrc'>325.17</td><td align="right" class='awrc'>4.37</td></tr>
   Recommendation 1: Application Analysis
   Estimated benefit is .89 active sessions, 5.1% of total activity.
   -----------------------------------------------------------------
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
<tr><td scope="row" class='awrnc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrnc'>908</td><td align="right" class='awrnc'>1.47</td><td align="right" class='awrnc'>0.02</td></tr>
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID "bhdvtsvjhgvrh" is responsible for 85% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
<tr><td scope="row" class='awrc'>gcs immediate cr (null) converts</td><td align="right" class='awrc'>1,138,169</td><td align="right" class='awrc'>1,843.38</td><td align="right" class='awrc'>24.75</td></tr>
      Wait class "Cluster" was consuming significant database time.
      Impact is 1.04 active sessions, 5.96% of total activity.


Finding 6: Undersized SGA
<tr><td scope="row" class='awrnc'>gcs lms flush pi msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
Impact is .56 active sessions, 3.22% of total activity.
-------------------------------------------------------
The SGA was inadequately sized, causing additional I/O or hard parses.
The value of parameter "sga_target" was "9664 M" during the analysis period.

<tr><td scope="row" class='awrc'>gcs lms write request msgs</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
   Recommendation 1: Database Configuration
   Estimated benefit is .56 active sessions, 3.22% of total activity.
<tr><td scope="row" class='awrnc'>gcs msgs process time(ms)</td><td align="right" class='awrnc'>75,022</td><td align="right" class='awrnc'>121.51</td><td align="right" class='awrnc'>1.63</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs received</td><td align="right" class='awrc'>3,129,702</td><td align="right" class='awrc'>5,068.86</td><td align="right" class='awrc'>68.06</td></tr>
   ------------------------------------------------------------------
   Action
      Increase the size of the SGA by setting the parameter "sga_target" to
      16912 M.
<tr><td scope="row" class='awrnc'>gcs new served by master</td><td align="right" class='awrnc'>114</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.00</td></tr>

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
<tr><td scope="row" class='awrc'>gcs out-of-order msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
      Impact is 13.19 active sessions, 75.41% of total activity.


Finding 7: Unusual "Other" Wait Event
Impact is .45 active sessions, 2.56% of total activity.
-------------------------------------------------------
<tr><td scope="row" class='awrnc'>gcs pings refused</td><td align="right" class='awrnc'>884</td><td align="right" class='awrnc'>1.43</td><td align="right" class='awrnc'>0.02</td></tr>
Wait event "enq: CR - block range reuse ckpt" in wait class "Other" was
consuming significant database time.

   Recommendation 1: Application Analysis
   Estimated benefit is .45 active sessions, 2.56% of total activity.
<tr><td scope="row" class='awrc'>gcs pkey conflicts retry</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
   ------------------------------------------------------------------
   Action
      Investigate the cause for high "enq: CR - block range reuse ckpt" waits.
      Refer to Oracle's "Database Reference" for the description of this wait
<tr><td scope="row" class='awrnc'>gcs queued converts</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
      event.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on the "enq: CR - block range reuse ckpt" wait event.
      For example, the UPDATE statement with SQL_ID "35dumc2tpr9dv" is
<tr><td scope="row" class='awrc'>gcs read-mostly failure unmount db</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
      responsible for 92% of these waits.

   Recommendation 2: Application Analysis
   Estimated benefit is .45 active sessions, 2.56% of total activity.
   ------------------------------------------------------------------
   Action
<tr><td scope="row" class='awrnc'>gcs reader bypass N-&gt;Xw ping local</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
      Investigate the cause for high "enq: CR - block range reuse ckpt" waits
      in Module "SQL*Plus".

   Recommendation 3: Application Analysis
   Estimated benefit is .45 active sessions, 2.56% of total activity.
<tr><td scope="row" class='awrc'>gcs reader bypass N-&gt;Xw ping remote</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
   ------------------------------------------------------------------
   Action
      Investigate the cause for high "enq: CR - block range reuse ckpt" waits
      in Service "p30db.example.com".

   Symptoms That Led to the Finding:
<tr><td scope="row" class='awrnc'>gcs reader bypass grant X on assume</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
   ---------------------------------
      Wait class "Other" was consuming significant database time.
      Impact is .96 active sessions, 5.48% of total activity.


Finding 8: Unusual "Other" Wait Event
<tr><td scope="row" class='awrc'>gcs reader bypass grant ast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Impact is .35 active sessions, 2.02% of total activity.
-------------------------------------------------------
Wait event "enq: US - contention" in wait class "Other" was consuming
significant database time.

<tr><td scope="row" class='awrnc'>gcs reader bypass grant fg ast</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
   Recommendation 1: Application Analysis
   Estimated benefit is .35 active sessions, 2.02% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate the cause for high "enq: US - contention" waits. Refer to
<tr><td scope="row" class='awrc'>gcs reader bypass grant immediate</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
      Oracle's "Database Reference" for the description of this wait event.

   Recommendation 2: Application Analysis
   Estimated benefit is .35 active sessions, 2.02% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate the cause for high "enq: US - contention" waits in Module
<tr><td scope="row" class='awrnc'>gcs recovery claim msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
      "SQL*Plus".

   Recommendation 3: Application Analysis
   Estimated benefit is .35 active sessions, 2.02% of total activity.
<tr><td scope="row" class='awrc'>gcs refuse xid</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
   ------------------------------------------------------------------
   Action
      Investigate the cause for high "enq: US - contention" waits in Service
<tr><td scope="row" class='awrnc'>gcs refuse xid to fg</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
      "p30db.example.com".

   Recommendation 4: Application Analysis
   Estimated benefit is .1 active sessions, .59% of total activity.
<tr><td scope="row" class='awrc'>gcs refuse xid to lms</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
   ----------------------------------------------------------------
   Action
      Investigate the cause for high "enq: US - contention" waits with P1
<tr><td scope="row" class='awrnc'>gcs refuse xid to master</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
      ("name|mode") value "1431502854" and P2 ("undo segment #") value "217".

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "Other" was consuming significant database time.
<tr><td scope="row" class='awrc'>gcs regular cr</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
      Impact is .96 active sessions, 5.48% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<tr><td scope="row" class='awrnc'>gcs resources for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>

	  Additional Information
	  ----------------------

Miscellaneous Information
-------------------------
<tr><td scope="row" class='awrc'>gcs retry convert request</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Wait class "Application" was not consuming significant database time.
Wait class "Commit" was not consuming significant database time.
Wait class "Configuration" was not consuming significant database time.
CPU was not a bottleneck for the instance.
Wait class "Network" was not consuming significant database time.
<tr><td scope="row" class='awrnc'>gcs shadows for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.
<tr><td scope="row" class='awrc'>gcs share recovery bast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Hard parsing of SQL statements was not consuming significant database time.

The database's maintenance windows were active during 100% of the analysis
period.

RAC Statistics  DB/Inst: P30DB/p30db1	Snaps: 68-69
<tr><td scope="row" class='awrnc'>gcs side channel msgs actual</td><td align="right" class='awrnc'>4,406</td><td align="right" class='awrnc'>7.14</td><td align="right" class='awrnc'>0.10</td></tr>

				Begin	End
				----- -----
	   Number of Instances:     2	  2
	       Number of LMS's:     2	  2
      Number of realtime LMS's:     2	  2  (0 priority changes)
<tr><td scope="row" class='awrc'>gcs side channel msgs logical</td><td align="right" class='awrc'>618,980</td><td align="right" class='awrc'>1,002.50</td><td align="right" class='awrc'>13.46</td></tr>


Global Cache Load Profile
~~~~~~~~~~~~~~~~~~~~~~~~~		   Per Second	    Per Transaction
				      ---------------	    ---------------
  Global Cache blocks received: 	       206.96		       2.78
<tr><td scope="row" class='awrnc'>gcs stale cr</td><td align="right" class='awrnc'>78</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td></tr>
    Global Cache blocks served: 		29.34		       0.39
     GCS/GES messages received: 	     6,048.98		      81.22
	 GCS/GES messages sent: 	     8,326.01		     111.79
	    DBWR Fusion writes: 		 0.21		       0.00
 Estd Interconnect traffic (KB) 	     4,698.00
<tr><td scope="row" class='awrc'>gcs undo cr</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>


Global Cache Efficiency Percentages (Target local+remote 100%)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Buffer access -  local cache %:   39.43
Buffer access - remote cache %:    1.77
<tr><td scope="row" class='awrnc'>gcs write notification msgs</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
Buffer access - 	disk %:   58.80
Global Cache Locality	     %:   58.72


Global Cache and Enqueue Services - Workload Characteristics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<tr><td scope="row" class='awrc'>gcs writes refused</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
	  Avg global cache cr block receive time (us):		1,757.6
     Avg global cache current block receive time (us):		1,121.2
			       Avg LMS process busy %:		   12.5

	    Avg global cache cr block build time (us):		  144.1
<tr><td scope="row" class='awrnc'>ges msgs process time(ms)</td><td align="right" class='awrnc'>2,471</td><td align="right" class='awrnc'>4.00</td><td align="right" class='awrnc'>0.05</td></tr>
      Global cache log flushes for cr blocks served %:		    1.5
	    Avg global cache cr block flush time (us):	       51,739.1

	 Avg global cache current block pin time (us):		    0.0
 Global cache log flushes for current blocks served %:		    0.1
<tr><td scope="row" class='awrc'>ges msgs received</td><td align="right" class='awrc'>114,761</td><td align="right" class='awrc'>185.87</td><td align="right" class='awrc'>2.50</td></tr>
       Avg global cache current block flush time (us):	       72,631.6

		     Avg global enqueue get time (us):		   83.7

Global Cache and Enqueue Services - Messaging Statistics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<tr><td scope="row" class='awrnc'>ges remote lock allocation</td><td align="right" class='awrnc'>-8</td><td align="right" class='awrnc'>-0.01</td><td align="right" class='awrnc'>0.00</td></tr>
		     Avg message sent queue time (us):		  777.6
	     Avg message sent queue time on ksxp (us):		1,360.7
	  Avg message received kernel queue time (us):		   24.9
		 Avg message received queue time (us):		   13.8
		    Avg GCS message process time (us):		   24.0
<tr><td scope="row" class='awrc'>global posts dropped</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
		    Avg GES message process time (us):		   21.5

			    % of direct sent messages:		  20.96
			  % of indirect sent messages:		  78.41
			% of flow controlled messages:		   0.62
	  -------------------------------------------------------------
<tr><td scope="row" class='awrnc'>global posts queue time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>

Cluster Interconnect
-> if Public/Source at End snap is different a '*' is displayed
~~~~~~~~~~~~~~~~~~~~
				    Begin			    End
	     --------------------------------------------------   -------
<tr><td scope="row" class='awrc'>global posts queued</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Interface    IP Address      Pub Source 			  Pub Src
----------   --------------- --- ------------------------------   --- ---
fg-priv:1    169.254.22.248  N

Global Messaging Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69

<tr><td scope="row" class='awrnc'>global posts requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
Cluster reconfiguration count			 0	    0.0 	 0.0
Domain reconfiguration count			 0	    0.0 	 0.0
Global Enqueue S-optim Broadcasts		46	    0.1 	 0.0
<tr><td scope="row" class='awrc'>global posts sent</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
Global Enqueue S-optim S-lock get	 5,246,148	8,496.7        114.1
Global Enqueue S-optim anti-locks		19	    0.0 	 0.0
KA local message waits				 0	    0.0 	 0.0
KA local messages received			 0	    0.0 	 0.0
KA messages received actual			 0	    0.0 	 0.0
<tr><td scope="row" class='awrnc'>implicit batch messages received</td><td align="right" class='awrnc'>38,600</td><td align="right" class='awrnc'>62.52</td><td align="right" class='awrnc'>0.84</td></tr>
KA messages received logical			 0	    0.0 	 0.0
KA requests failed				 0	    0.0 	 0.0
KA requests succeeded				 0	    0.0 	 0.0
Pseudo reconfiguration count			 0	    0.0 	 0.0
Pseudo rm reconfig count			 0	    0.0 	 0.0
<tr><td scope="row" class='awrc'>implicit batch messages sent</td><td align="right" class='awrc'>85,097</td><td align="right" class='awrc'>137.82</td><td align="right" class='awrc'>1.85</td></tr>
acks for commit broadcast(actual)	     2,969	    4.8 	 0.1
acks for commit broadcast(logical	     5,515	    8.9 	 0.1
broadcast msgs on commit(actual)	     7,475	   12.1 	 0.2
broadcast msgs on commit(logical)	    30,769	   49.8 	 0.7
broadcast msgs on commit(wasted)	     4,478	    7.3 	 0.1
<tr><td scope="row" class='awrnc'>lmd msg send time(ms)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
dynamically allocated gcs resourc		 0	    0.0 	 0.0
dynamically allocated gcs shadows		 0	    0.0 	 0.0
flow control messages received			 0	    0.0 	 0.0
flow control messages sent			 0	    0.0 	 0.0
gcs assume cvt					 0	    0.0 	 0.0
gcs assume no cvt			    10,098	   16.4 	 0.2
<tr><td scope="row" class='awrc'>lms(s) msg send time(ms)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
gcs ast to fg				   217,047	  351.5 	 4.7
gcs ast xid					 0	    0.0 	 0.0
gcs bidless ast to lms				47	    0.1 	 0.0
gcs blocked converts			    38,376	   62.2 	 0.8
gcs blocked cr converts 		     1,641	    2.7 	 0.0
<tr><td scope="row" class='awrnc'>messages flow controlled</td><td align="right" class='awrnc'>18,295</td><td align="right" class='awrnc'>29.63</td><td align="right" class='awrnc'>0.40</td></tr>
gcs compatible basts				11	    0.0 	 0.0
gcs compatible cr basts (global)		18	    0.0 	 0.0
gcs compatible cr basts (local) 	    25,527	   41.3 	 0.6
gcs cr basts to PIs				 0	    0.0 	 0.0
gcs cr requests to slave			 0	    0.0 	 0.0
gcs cr serve without current lock		 0	    0.0 	 0.0
<tr><td scope="row" class='awrc'>messages queue sent actual</td><td align="right" class='awrc'>419,949</td><td align="right" class='awrc'>680.15</td><td align="right" class='awrc'>9.13</td></tr>
gcs dbwr flush pi msgs			   316,380	  512.4 	 6.9
gcs dbwr write request msgs		       126	    0.2 	 0.0
gcs error msgs					 0	    0.0 	 0.0
gcs flash read serve requests to		 0	    0.0 	 0.0
gcs force cr block only 			 0	    0.0 	 0.0
<tr><td scope="row" class='awrnc'>messages queue sent logical</td><td align="right" class='awrnc'>541,030</td><td align="right" class='awrnc'>876.25</td><td align="right" class='awrnc'>11.76</td></tr>
<tr><td scope="row" class='awrc'>messages received actual</td><td align="right" class='awrc'>956,440</td><td align="right" class='awrc'>1,549.05</td><td align="right" class='awrc'>20.80</td></tr>
<tr><td scope="row" class='awrnc'>messages received logical</td><td align="right" class='awrnc'>3,244,463</td><td align="right" class='awrnc'>5,254.73</td><td align="right" class='awrnc'>70.55</td></tr>
<tr><td scope="row" class='awrc'>messages sent directly</td><td align="right" class='awrc'>615,662</td><td align="right" class='awrc'>997.13</td><td align="right" class='awrc'>13.39</td></tr>
<tr><td scope="row" class='awrnc'>messages sent indirectly</td><td align="right" class='awrnc'>2,302,851</td><td align="right" class='awrnc'>3,729.69</td><td align="right" class='awrnc'>50.08</td></tr>
<tr><td scope="row" class='awrc'>messages sent not implicit batched</td><td align="right" class='awrc'>48,593</td><td align="right" class='awrc'>78.70</td><td align="right" class='awrc'>1.06</td></tr>
<tr><td scope="row" class='awrnc'>messages sent pbatched</td><td align="right" class='awrnc'>3,902,912</td><td align="right" class='awrnc'>6,321.15</td><td align="right" class='awrnc'>84.87</td></tr>
<tr><td scope="row" class='awrc'>msgs causing lmd to send msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>msgs causing lms(s) to send msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>msgs received kernel queue time (ns)</td><td align="right" class='awrc'>80,852,774,550</td><td align="right" class='awrc'>130,949,027.27</td><td align="right" class='awrc'>1,758,165.88</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queue time (ms)</td><td align="right" class='awrnc'>44,886</td><td align="right" class='awrnc'>72.70</td><td align="right" class='awrnc'>0.98</td></tr>
<tr><td scope="row" class='awrc'>msgs received queued</td><td align="right" class='awrc'>3,244,463</td><td align="right" class='awrc'>5,254.73</td><td align="right" class='awrc'>70.55</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time (ms)</td><td align="right" class='awrnc'>533,255</td><td align="right" class='awrnc'>863.66</td><td align="right" class='awrnc'>11.60</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrc'>1,842,821</td><td align="right" class='awrc'>2,984.63</td><td align="right" class='awrc'>40.07</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued</td><td align="right" class='awrnc'>685,740</td><td align="right" class='awrnc'>1,110.62</td><td align="right" class='awrnc'>14.91</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued on ksxp</td><td align="right" class='awrc'>1,354,280</td><td align="right" class='awrc'>2,193.39</td><td align="right" class='awrc'>29.45</td></tr>
<tr><td scope="row" class='awrnc'>number of broadcasted resources</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of directly freed master res</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of ges deadlock detected</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of lock borrowed by LMD</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of received ODPS messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of received RBA messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of resource borrowed by LMD</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
gcs force cr grant				 4	    0.0 	 0.0
<tr><td scope="row" class='awrc'>number of sent ODPS messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
gcs force cr no current 			 0	    0.0 	 0.0
gcs forward cr to pinged instance		 0	    0.0 	 0.0
gcs grant ast				   217,094	  351.6 	 4.7
gcs grant request in partial open		 0	    0.0 	 0.0
gcs immediate (compatible) conver	     8,613	   13.9 	 0.2
gcs immediate (null) converts		   200,769	  325.2 	 4.4
<tr><td scope="row" class='awrnc'>number of sent RBA messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
gcs immediate cr (compatible) con	       908	    1.5 	 0.0
gcs immediate cr (null) converts	 1,138,169	1,843.4 	24.7
gcs lms flush pi msgs				 0	    0.0 	 0.0
gcs lms write request msgs			13	    0.0 	 0.0
<tr><td scope="row" class='awrc'>process batch messages received</td><td align="right" class='awrc'>516,541</td><td align="right" class='awrc'>836.59</td><td align="right" class='awrc'>11.23</td></tr>
gcs msgs process time(ms)		    75,022	  121.5 	 1.6
gcs msgs received			 3,129,702	5,068.9 	68.1
gcs new served by master		       114	    0.2 	 0.0
gcs out-of-order msgs				 0	    0.0 	 0.0
<tr><td scope="row" class='awrnc'>process batch messages sent</td><td align="right" class='awrnc'>603,526</td><td align="right" class='awrnc'>977.47</td><td align="right" class='awrnc'>13.12</td></tr>
gcs pings refused			       884	    1.4 	 0.0
gcs pkey conflicts retry			 0	    0.0 	 0.0
<tr><td scope="row" class='awrc'>receiver cycle time</td><td align="right" class='awrc'>321,459</td><td align="right" class='awrc'>520.63</td><td align="right" class='awrc'>6.99</td></tr>
gcs queued converts				 1	    0.0 	 0.0
gcs read-mostly failure unmount d		 0	    0.0 	 0.0
gcs reader bypass N->Xw ping loca		 0	    0.0 	 0.0

<tr><td scope="row" class='awrnc'>receiver loop count</td><td align="right" class='awrnc'>1,311,046</td><td align="right" class='awrnc'>2,123.37</td><td align="right" class='awrnc'>28.51</td></tr>
Global Messaging Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
</table><p />
gcs reader bypass N->Xw ping remo		 0	    0.0 	 0.0
gcs reader bypass grant X on assu		 0	    0.0 	 0.0
gcs reader bypass grant ast			 0	    0.0 	 0.0
<hr align="left" width="20%" /><p />
gcs reader bypass grant fg ast			 0	    0.0 	 0.0
gcs reader bypass grant immediate		 6	    0.0 	 0.0
gcs recovery claim msgs 			 0	    0.0 	 0.0
gcs refuse xid					 0	    0.0 	 0.0
<br /><a class="awr" href="#top">Back to Top</a><p />
gcs refuse xid to fg				 0	    0.0 	 0.0
gcs refuse xid to lms				 0	    0.0 	 0.0
gcs refuse xid to master			 0	    0.0 	 0.0
<p />
gcs regular cr					 0	    0.0 	 0.0
gcs resources for dynamic sga			 0	    0.0 	 0.0
gcs retry convert request			 0	    0.0 	 0.0
<a class="awr" name="5200"></a>
gcs shadows for dynamic sga			 0	    0.0 	 0.0
gcs share recovery bast 			 0	    0.0 	 0.0
gcs side channel msgs actual		     4,406	    7.1 	 0.1
gcs side channel msgs logical		   618,980	1,002.5 	13.5
<h3 class="awr">Global CR Server Statistics</h3>
gcs stale cr					78	    0.1 	 0.0
gcs undo cr					 0	    0.0 	 0.0
gcs write notification msgs			 1	    0.0 	 0.0
<ul>
gcs writes refused				 1	    0.0 	 0.0
ges msgs process time(ms)		     2,471	    4.0 	 0.1
ges msgs received			   114,761	  185.9 	 2.5
</ul>
ges remote lock allocation			-8	    0.0 	 0.0
global posts dropped				 0	    0.0 	 0.0
global posts queue time 			 0	    0.0 	 0.0
global posts queued				 0	    0.0 	 0.0
global posts requested				 0	    0.0 	 0.0
<table border="0" class="tdiff" summary="This table displays global CR served statistics. For each statistics, total value is shown"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th></tr>
global posts sent				 0	    0.0 	 0.0
implicit batch messages received	    38,600	   62.5 	 0.8
implicit batch messages sent		    85,097	  137.8 	 1.9
<tr><td scope="row" class='awrc'>CR Block Requests</td><td align="right" class='awrc'>1,526</td></tr>
lmd msg send time(ms)				 0	    0.0 	 0.0
lms(s) msg send time(ms)			 0	    0.0 	 0.0
messages flow controlled		    18,295	   29.6 	 0.4
<tr><td scope="row" class='awrnc'>CURRENT Block Requests</td><td align="right" class='awrnc'>65</td></tr>
messages queue sent actual		   419,949	  680.1 	 9.1
messages queue sent logical		   541,030	  876.3 	11.8
messages received actual		   956,440	1,549.0 	20.8
messages received logical		 3,244,463	5,254.7 	70.6
<tr><td scope="row" class='awrc'>Data Block Requests</td><td align="right" class='awrc'>1,526</td></tr>
messages sent directly			   615,662	  997.1 	13.4
messages sent indirectly		 2,302,851	3,729.7 	50.1
messages sent not implicit batche	    48,593	   78.7 	 1.1
<tr><td scope="row" class='awrnc'>Undo Block Requests</td><td align="right" class='awrnc'>0</td></tr>
messages sent pbatched			 3,902,912	6,321.2 	84.9
msgs causing lmd to send msgs			 0	    0.0 	 0.0
msgs causing lms(s) to send msgs		 0	    0.0 	 0.0
msgs received kernel queue time (   80,852,774,550 1.309490E+08  1,758,165.9
<tr><td scope="row" class='awrc'>TX Block Requests</td><td align="right" class='awrc'>8</td></tr>
msgs received queue time (ms)		    44,886	   72.7 	 1.0
msgs received queued			 3,244,463	5,254.7 	70.6
msgs sent queue time (ms)		   533,255	  863.7 	11.6
msgs sent queue time on ksxp (ms)	 1,842,821	2,984.6 	40.1
<tr><td scope="row" class='awrnc'>Current Results</td><td align="right" class='awrnc'>1,551</td></tr>
msgs sent queued			   685,740	1,110.6 	14.9
msgs sent queued on ksxp		 1,354,280	2,193.4 	29.4
number of broadcasted resources 		 0	    0.0 	 0.0
<tr><td scope="row" class='awrc'>Private results</td><td align="right" class='awrc'>2</td></tr>
number of directly freed master r		41	    0.1 	 0.0
number of ges deadlock detected 		 0	    0.0 	 0.0
number of lock borrowed by LMD			 0	    0.0 	 0.0
number of received ODPS messages		 0	    0.0 	 0.0
<tr><td scope="row" class='awrnc'>Zero Results</td><td align="right" class='awrnc'>1</td></tr>
number of received RBA messages 		 0	    0.0 	 0.0
number of resource borrowed by LM		 0	    0.0 	 0.0
number of sent ODPS messages			 0	    0.0 	 0.0
number of sent RBA messages			 0	    0.0 	 0.0
<tr><td scope="row" class='awrc'>Disk Read Results</td><td align="right" class='awrc'>38</td></tr>

Global Messaging Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69

Statistic				     Total   per Second    per Trans
<tr><td scope="row" class='awrnc'>Fail Results</td><td align="right" class='awrnc'>0</td></tr>
--------------------------------- ---------------- ------------ ------------
process batch messages received 	   516,541	  836.6 	11.2
process batch messages sent		   603,526	  977.5 	13.1
<tr><td scope="row" class='awrc'>Fairness Down Converts</td><td align="right" class='awrc'>1,432</td></tr>
receiver cycle time			   321,459	  520.6 	 7.0
receiver loop count			 1,311,046	2,123.4 	28.5
			  ------------------------------------------------------

<tr><td scope="row" class='awrnc'>Light Works</td><td align="right" class='awrnc'>883</td></tr>

Global CR Server Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69

Statistic				    Total
<tr><td scope="row" class='awrc'>Flushes</td><td align="right" class='awrc'>23</td></tr>
------------------------------ ------------------
CR Block Requests			    1,526
CURRENT Block Requests			       65
Data Block Requests			    1,526
<tr><td scope="row" class='awrnc'>Builds</td><td align="right" class='awrnc'>1,527</td></tr>
Undo Block Requests				0
TX Block Requests				8
Current Results 			    1,551
Private results 				2
<tr><td scope="row" class='awrc'>Errors</td><td align="right" class='awrc'>0</td></tr>
Zero Results					1
Disk Read Results			       38
Fail Results					0
Fairness Down Converts			    1,432
</table><p />
Light Works				      883
Flushes 				       23
Builds					    1,527
Errors						0
<hr align="left" width="20%" /><p />
			  ------------------------------------------------------

Global Current Server Statistics	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Pins    = CURRENT Block Pin Operations
<br /><a class="awr" href="#top">Back to Top</a><p />
-> Flushes = Redo Flush before CURRENT Block Served Operations

Statistic	  Total % <100us   % <1ms  % <10ms % <100ms    % <1s   % <10s
<p />
---------- ------------ -------- -------- -------- -------- -------- --------
Pins		      0
Flushes 	     19 		     36.84    57.89	5.26
			  ------------------------------------------------------
<a class="awr" name="5300"></a>

Global Cache Transfer Statistics	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
<h3 class="awr">Global Current Server Statistics</h3>
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested (Congst) - Block Transfer impacted by Remote System Load
-> ordered by CR + Current Blocks Received desc

<ul>
			       CR			  Current
		 ----------------------------- -----------------------------
Inst Block	   Blocks      %      %      %	 Blocks      %	    %	   %
<li class="awr"> Pins	 = CURRENT Block Pin Operations </li>
  No Class	 Received  Immed   Busy Congst Received  Immed	 Busy Congst
---- ----------- -------- ------ ------ ------ -------- ------ ------ ------
   2 data block    33,620   98.5     .0    1.5	 91,697   83.5	 16.1	  .4
<li class="awr"> Flushes = Redo Flush before CURRENT Block Served Operations</li>
   2 undo header    1,334   97.4    2.5     .1	      3   66.7	 33.3	  .0
   2 Others	       16   93.8     .0    6.3	    768   94.8	  5.2	  .0
			  ------------------------------------------------------
</ul>

Global Cache Transfer Times (us)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Avg Time - average time of all blocks (Immed,Busy,Congst) in us
-> Immed, Busy, Congst -  Average times in us
<table border="0" class="tdiff" summary="This table displays global current served statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
-> ordered by CR + Current Blocks Received desc

		    CR Avg Time (us)	     Current Avg Time (us)
	      --------------------------- ---------------------------
Inst Block
<tr><td scope="row" class='awrc'>Pins</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
  No Class	 All  Immed   Busy Congst    All  Immed   Busy Congst
---- -------- ------ ------ ------ ------ ------ ------ ------ ------
   2 data blo	1773   1708   6562   6035   1125   1182    752	 3963
   2 undo hea	1328	601  29087   2853   1069    730   1748	  N/A
   2 others	1389	888    N/A   8913    749    632   2878	  N/A
<tr><td scope="row" class='awrnc'>Flushes</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>36.84</td><td align="right" class='awrnc'>57.89</td><td align="right" class='awrnc'>5.26</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
   2 undo blo	 N/A	N/A    N/A    N/A    N/A    N/A    N/A	  N/A
			  ------------------------------------------------------

<hr align="left" width="20%" /><p />
Global Cache Transfer (Immediate)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> % of Blocks Received requiring 2 or 3 hops
-> ordered by CR + Current Blocks Received desc
<br /><a class="awr" href="#top">Back to Top</a><p />

				   CR			    Current
		      --------------------------- ---------------------------
<p />
 Src Block     Blocks  Immed Blks	%	%  Immed Blks	    %	    %
Inst Class	 Lost	 Received    2hop    3hop    Received	 2hop	 3hop
---- -------- ------- ----------- ------- ------- ----------- ------- -------
<a class="awr" name="7"></a>
   2 data blo		   33,120   100.0     0.0      76,577	100.0	  0.0
   2 undo hea		    1,299   100.0     0.0	    2	100.0	  0.0
   2 others		       15   100.0     0.0	  728	100.0	  0.0
<h2 class="awr">
   2 undo blo		      N/A     N/A     N/A	  N/A	  N/A	  N/A
			  ------------------------------------------------------

Global Cache Times (Immediate)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
Global Cache Transfer Statistics
-> Blocks Lost, 2-hop and 3-hop Average times in (us)
-> ordered by CR + Current Blocks Received desc

		       CR Avg Time (us)   Current Avg Time (us)
</h2>
		     -------------------- --------------------
 Src Block	Lost
Inst Class	Time  Immed   2hop   3hop  Immed   2hop   3hop
<ul>
---- -------- ------ ------ ------ ------ ------ ------ ------
   2 data blo	       1708   1708    N/A   1182   1182    N/A
   2 undo hea		601    601    N/A    730    730    N/A
   2 others		888    888    N/A    632    632    N/A
<li class="awr"><a class="awr" href="#5400">Global Cache Transfer Statistics</a></li>
   2 undo blo		N/A    N/A    N/A    N/A    N/A    N/A
			  ------------------------------------------------------

Interconnect Ping Latency Statistics	   DB/Inst: P30DB/p30db1  Snaps: 68-69
<li class="awr"><a class="awr" href="#5450">Global Cache Transfer Times (us)</a></li>
-> Ping latency of the roundtrip of a message from this instance to -> target in
-> The target instance is identified by an instance number.
-> Average and standard deviation of ping latency is given in microseconds
<li class="awr"><a class="awr" href="#5460">Global Cache Transfer (Immediate)</a></li>
-> for message sizes of 500 bytes and 8K.
<li class="awr"><a class="awr" href="#5470">Global Cache Times (Immediate)</a></li>
</ul>
-> Note that latency of a message from the instance to itself is used as
-> control, since message latency can include wait for CPU
<a class="awr" href="#top">Back to Top</a><p />

   Target 500B Pin Avg La      Stddev  8K Ping Avg La	   Stddev
 Instance    Count 500B m    500B msg	 Count 8K msg	   8K msg
<a class="awr" name="5400"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
--------- -------- ------ ----------- -------- ------ -----------
	1	57    566	  .24	    62	  547	      .23
<ul>
	2	57    793	  .32	    62	  857	      .40
			  ------------------------------------------------------

Interconnect Throughput by Client	   DB/Inst: P30DB/p30db1  Snaps: 68-69
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
-> Throughput of interconnect usage by major consumers
-> All throughput numbers are megabytes per second

			Send	 Receive
Used By 	  Mbytes/sec  Mbytes/sec
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
---------------- ----------- -----------
Global Cache		 .22	    1.15
Parallel Query		 .00	     .00
<li class="awr"> Congested (Congst) - Block Transfer impacted by Remote System Load </li>
DB Locks		2.18	    1.33
DB Streams		 N/A	     N/A
Other			 .04	     .00
			  ------------------------------------------------------
<li class="awr"> ordered by CR + Current Blocks Received desc</li>

Interconnect Device Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Throughput and errors of interconnect devices (at OS level)
-> All throughput numbers are megabytes per second
</ul>

Device Name	IP Address	 Public Source
--------------- ---------------- ------ -------------------------------
				  Send	   Send
       Send	Send	 Send	Buffer	Carrier
<table border="0" class="tdiff" summary="This table displays global cache transfer stats. CR, blocks received, % immediate, % busy, % congestion are displayed for each instance and block class"><tr>
 Mbytes/sec   Errors  Dropped  Overrun	   Lost
----------- -------- -------- -------- --------
			       Receive	Receive
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CR">CR</th>
    Receive  Receive  Receive	Buffer	  Frame
 Mbytes/sec   Errors  Dropped  Overrun	 Errors
----------- -------- -------- -------- --------
fg-priv:1	169.254.22.248	 NO
	.00	   0	    0	     0	      0
	.00	   0	    0	     0	      0
			  ------------------------------------------------------

Dynamic Remastering Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Times are in seconds
<th class="awrbg" colspan=" 4" id="Current">Current</th>
-> Affinity objects - Affinity objects mastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot

							per    Begin	  End
</tr><tr>
Name					Total	Remaster Op	Snap	 Snap
-------------------------------- ------------ ------------- -------- --------
remaster ops				    1	       1.00
remastered objects			    5	       5.00
replayed locks received 		    0	       0.00
replayed locks sent			2,181	   2,181.00
resources cleaned			    0	       0.00
remaster time (s)			  0.9	       0.89
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th></tr>
freeze time (s) 			  0.0	       0.03
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" headers="CR Blocks|Received" class='awrclb'>33,620</td><td align="right" headers="CR %|Immed" class='awrc'>98.51</td><td align="right" headers="CR %|Busy" class='awrc'>0.01</td><td align="right" headers="CR %|Congst" class='awrc'>1.48</td><td align="right" headers="Current Blocks|Received" class='awrclb'>91,697</td><td align="right" headers="Current %|Immed" class='awrc'>83.51</td><td align="right" headers="Current %|Busy" class='awrc'>16.06</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.42</td></tr>
cleanup time (s)			  0.2	       0.17
replay time (s) 			  0.3	       0.26
fixwrite time (s)			  0.1	       0.11
sync time (s)				  0.3	       0.29
affinity objects					N/A	  10	    9
read-mostly objects					N/A	   1	    1
affinity objects (other inst)				N/A	  10	   13
read-mostly objects (persistent)			N/A	   0	    0
			  ------------------------------------------------------

End of Report
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo header</td><td align="right" headers="CR Blocks|Received" class='awrnclb'>1,334</td><td align="right" headers="CR %|Immed" class='awrnc'>97.38</td><td align="right" headers="CR %|Busy" class='awrnc'>2.55</td><td align="right" headers="CR %|Congst" class='awrnc'>0.07</td><td align="right" headers="Current Blocks|Received" class='awrnclb'>3</td><td align="right" headers="Current %|Immed" class='awrnc'>66.67</td><td align="right" headers="Current %|Busy" class='awrnc'>33.33</td><td align="right" headers="Current %|Congst" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>Others</td><td align="right" headers="CR Blocks|Received" class='awrclb'>16</td><td align="right" headers="CR %|Immed" class='awrc'>93.75</td><td align="right" headers="CR %|Busy" class='awrc'>0.00</td><td align="right" headers="CR %|Congst" class='awrc'>6.25</td><td align="right" headers="Current Blocks|Received" class='awrclb'>768</td><td align="right" headers="Current %|Immed" class='awrc'>94.79</td><td align="right" headers="Current %|Busy" class='awrc'>5.21</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5450"></a>
<h3 class="awr">Global Cache Transfer Times (us)</h3>
<ul>
<li class="awr"> Avg Time - average time of all blocks (Immed,Busy,Congst) in us </li>
<li class="awr"> Immed, Busy, Congst -	Average times in us </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer time statistics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>1773</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>1708</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>6562</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>6035</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>1125</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>1182</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>752</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>3963</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo header</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>1328</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>601</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>29087</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>2853</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>1069</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>730</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>1748</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>others</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>1389</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>888</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>8913</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>749</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>632</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>2878</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5460"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> % of Blocks Received requiring 2 or 3 hops </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CR">CR</th>
<th class="awrbg" colspan=" 3" id="Current">Current</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Blocks Lost</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>33,120</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>76,577</td><td align="right" headers="Current %|2hop" class='awrc'>100.00</td><td align="right" headers="Current %|3hop" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo header</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>1,299</td><td align="right" headers="CR %|2hop" class='awrnc'>100.00</td><td align="right" headers="CR %|3hop" class='awrnc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>2</td><td align="right" headers="Current %|2hop" class='awrnc'>100.00</td><td align="right" headers="Current %|3hop" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>others</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>15</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>728</td><td align="right" headers="Current %|2hop" class='awrc'>100.00</td><td align="right" headers="Current %|3hop" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>&#160;</td><td align="right" headers="CR %|2hop" class='awrnc'>&#160;</td><td align="right" headers="CR %|3hop" class='awrnc'>&#160;</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>&#160;</td><td align="right" headers="Current %|2hop" class='awrnc'>&#160;</td><td align="right" headers="Current %|3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5470"></a>
<h3 class="awr">Global Cache Times (Immediate)</h3>
<ul>
<li class="awr"> Blocks Lost, 2-hop and 3-hop Average times in (us) </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache times (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Lost Time</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>1708</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>1708</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>1182</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>1182</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo header</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>601</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>601</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>730</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>730</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>others</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>888</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>888</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>632</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>632</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>&#160;</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#7800">Interconnect Latency Stats</a></li>
<li class="awr"><a class="awr" href="#7900">Interconnect Throughput by Client</a></li>
<li class="awr"><a class="awr" href="#8000">Interconnect Device Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7800"></a>
<h3 class="awr">Interconnect Ping Latency Statistics</h3>
<ul>
<li class="awr"> Ping latency of the roundtrip of a message from this instance to </li>
<li class="awr"> target instances.  </li>
<li class="awr"> The target instance is identified by an instance number. </li>
<li class="awr"> Average and standard deviation of ping latency is given in microseconds </li>
<li class="awr"> for message sizes of 500 bytes and 8K. </li>
Report written to awr.txt
<li class="awr"> Note that latency of a message from the instance to itself is used as </li>
<li class="awr"> control, since message latency can include wait for CPU</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IC ping latency statistics"><tr><th class="awrbg" scope="col">Target Instance</th><th class="awrbg" scope="col">500B Ping Count</th><th class="awrbg" scope="col">Avg Latency 500B msg</th><th class="awrbg" scope="col">Stddev 500B msg</th><th class="awrbg" scope="col">8K Ping Count</th><th class="awrbg" scope="col">Avg Latency 8K msg</th><th class="awrbg" scope="col">Stddev 8K msg</th></tr>
<tr><td align="right" class='awrc'>1</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>566</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>547</td><td align="right" class='awrc'>0.23</td></tr>
<tr><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>793</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>62</td><td align="right" class='awrnc'>857</td><td align="right" class='awrnc'>0.40</td></tr>
SQL> SQL> SQL> </table><p />
SQL> SQL> <hr align="left" width="20%" /><p />
SQL> SQL> <a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7900"></a>
<h3 class="awr">Interconnect Throughput by Client</h3>
<ul>
<li class="awr"> Throughput of interconnect usage by major consumers </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect throughput by client statistics"><tr><th class="awrbg" scope="col">Used By</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Receive Mbytes/sec</th></tr>
<tr><td scope="row" class='awrc'>Global Cache</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>1.15</td></tr>
<tr><td scope="row" class='awrnc'>Parallel Query</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DB Locks</td><td align="right" class='awrc'>2.18</td><td align="right" class='awrc'>1.33</td></tr>
<tr><td scope="row" class='awrnc'>DB Streams</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8000"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Throughput and errors of interconnect devices (at OS level) </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect device statistics. IP address, public, source, etc. are displayed for each device"><tr><th class="awrbg" scope="col">Device Name</th><th class="awrbg" scope="col">IP Address</th><th class="awrbg" scope="col">Public</th><th class="awrbg" scope="col">Source</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Send Errors</th><th class="awrbg" scope="col">Send Dropped</th><th class="awrbg" scope="col">Send Buffer Overrun</th><th class="awrbg" scope="col">Send Carrier Lost</th><th class="awrbg" scope="col">Receive Mbytes/sec</th><th class="awrbg" scope="col">Receive Errors</th><th class="awrbg" scope="col">Receive Dropped</th><th class="awrbg" scope="col">Receive Buffer Overrun</th><th class="awrbg" scope="col">Receive Frame Errors</th></tr>
<tr><td scope="row" class='awrc'>fg-priv:1</td><td class='awrc'>169.254.22.248</td><td class='awrc'>NO</td><td class='awrc'>&#160;</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8790"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Times are in seconds </li>
<li class="awr"> Affinity objects - Affinity objects mastered at the begin/end snapshot </li>
<li class="awr"> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Times are in seconds. Affinity objects - Affinity objects mastered at the begin/end snapshot. Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Remaster Op</th><th class="awrbg" scope="col">Begin Snap</th><th class="awrbg" scope="col">End Snap</th></tr>

<tr><td scope="row" class='awrc'>remaster ops</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>



<tr><td scope="row" class='awrnc'>remastered objects</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>5.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>replayed locks received</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>replayed locks sent</td><td align="right" class='awrnc'>2,181</td><td align="right" class='awrnc'>2,181.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resources cleaned</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remaster time (s)</td><td align="right" class='awrnc'>0.9</td><td align="right" class='awrnc'>0.89</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>freeze time (s)</td><td align="right" class='awrc'>0.0</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cleanup time (s)</td><td align="right" class='awrnc'>0.2</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>replay time (s)</td><td align="right" class='awrc'>0.3</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fixwrite time (s)</td><td align="right" class='awrnc'>0.1</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sync time (s)</td><td align="right" class='awrc'>0.3</td><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>affinity objects</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>9</td></tr>
<tr><td scope="row" class='awrc'>read-mostly objects</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>affinity objects (other inst)</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>13</td></tr>
<tr><td scope="row" class='awrc'>read-mostly objects (persistent)</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>

Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt.  Default value is 'html'.

'html'		HTML format (default)
'text'		Text format
'active-html'	Includes Performance Hub active report


Type Specified:  text

Report written to awr.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0






Current Database
~~~~~~~~~~~~~~~~
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db











Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using instances ALL (default 'ALL')


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.


Enter value for num_days: 
Listing all Completed Snapshots
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
		    13	06 Feb 2020 07:00    1
		    14	06 Feb 2020 08:00    1
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
		    19	06 Feb 2020 13:00    1
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
		    24	06 Feb 2020 15:55    1
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1
		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
		    38	07 Feb 2020 04:00    1
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
		    45	07 Feb 2020 11:00    1
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
		    50	08 Feb 2020 08:13    1
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
		    55	08 Feb 2020 08:48    1
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		    57	08 Feb 2020 09:00    1
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
		    60	08 Feb 2020 09:17    1
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
		    63	08 Feb 2020 09:43    1
		    64	08 Feb 2020 09:53    1
		    65	08 Feb 2020 10:03    1
		    66	08 Feb 2020 10:08    1
		    67	08 Feb 2020 10:18    1
		    68	08 Feb 2020 10:27    1
		    69	08 Feb 2020 10:37    1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 68

End   Snapshot Id specified: 69



Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_rac_68_69.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr_rac.txt

WORKLOAD REPOSITORY REPORT (RAC)

Database Summary
~~~~~~~~~~~~~~~~
				   Database					   Snapshot Ids     Number of Instances     Number of Hosts	Report Total (minutes)
-----------------------------------------------------------------------------	-----------------   ------------------	 ------------------   ------------------------
	 Id Name      Unique Name Role		   Edition RAC CDB Block Size	   Begin      End   In Report	 Total	 In Report    Total	  DB time Elapsed time
----------- --------- ----------- ---------------- ------- --- --- ----------	-------- --------   --------- --------	 --------- --------   ----------- ------------
 3393773525 P30DB     p30db	  PRIMARY	   EE	   YES NO	 8192	      68       69	    2	     2		 2	  2	   303.90	 10.29
Database Instances Included In Report
-> Listed in order of instance number, I#
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
																      Avg Active
  I# Instance  Host	  Startup	  Begin Snap Time End Snap Time   Release	  Elapsed Time(min) DB time(min) Up Time(hrs)	Sessions Platform
---- --------- ---------- --------------- --------------- --------------- --------------- ----------------- ------------ ------------ ---------- ---------------
   1 p30db1    mcracpoc1. 08-Feb-20 07:52 08-Feb-20 10:27 08-Feb-20 10:37 19.0.0.0.0		      10.28	  180.13	 2.75	   17.52 Linux x86 64-bi
   2 p30db2    mcracpoc2. 08-Feb-20 07:52 08-Feb-20 10:27 08-Feb-20 10:37 19.0.0.0.0		      10.28	  123.77	 2.75	   12.04 Linux x86 64-bi

Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name		       Begin Snap Time End Snap Time
---------------------------------------- ------- ------ ------------------------------ --------------- ---------------
Top SQL Statements			   29.55  99.68 ADDM:3393773525_69	       08-Feb-20 10:27 08-Feb-20 10:37
"User I/O" wait Class			   29.55  82.47 ADDM:3393773525_69	       08-Feb-20 10:27 08-Feb-20 10:37
Top Segments by "User I/O" and "Cluster"   29.55  15.28 ADDM:3393773525_69	       08-Feb-20 10:27 08-Feb-20 10:37
Global Cache Messaging			   29.55   4.59 ADDM:3393773525_69	       08-Feb-20 10:27 08-Feb-20 10:37
Buffer Busy - Hot Objects		   29.55   4.31 ADDM:3393773525_69	       08-Feb-20 10:27 08-Feb-20 10:37
Cache Sizes
-> All values are in Megabytes
-> Listed in order of instance number, I#
-> End values displayed only if different from Begin values
~~~~~~~~~~~
	 Memory Target	       Sga Target	    DB Cache	      Shared Pool	   Large Pool	       Java Pool	  Streams Pool	       PGA Target
       -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------
  I#	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End   Log Buffer
----   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   ----------
   1			      9,664		  8,000 	      1,440		     64 						      3,232		     19.4
   2			      9,664		  7,872 	      1,568		     64 						      3,232		     19.4
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~
 Avg			      9,664		  7,936 	      1,504		     64 						      3,232		     19.4
 Min			      9,664		  7,872 	      1,440		     64 						      3,232		     19.4
 Max			      9,664		  8,000 	      1,568		     64 						      3,232		     19.4

OS Statistics By Instance		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Listed in order of instance number, I#
-> End values are diplayed only if different from begin values

	      CPU		Load			  % CPU 				  Time (s)			 Memory 	    End Values
       -----------------   -------------   ----------------------------------	--------------------------------------------   ----------   -------------------------
  I#   #CPUs #Core #Sckt    Begin    End   % Busy  % Usr  % Sys  % WIO	% Idl		  Busy		 Idle	       Total	       MB   #CPU #Cor #Sck Memory (M)
----   ----- ----- -----   ------ ------   ------ ------ ------ ------ ------	-------------- -------------- --------------   ----------   ---- ---- ---- ----------
   1	   8	 4     1      7.3    5.2     38.3   10.9   18.6   38.1	 61.7	       1,741.7	      2,803.1	     4,544.8	 32,156.0
   2	   8	 4     1      4.2    4.6     28.5    7.5   14.0   42.8	 71.5	       1,282.6	      3,211.3	     4,494.0	 32,156.0
 ~~~										~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum										       3,024.4	      6,014.4	     9,038.8
			  --------------------------------------------------------------------------------------------------------------------


Time Model				   DB/Inst: P30DB/p30db1  Snaps: 68-69

					 SQL Exec		     Hard Parse
  I#	DB time (s)	DB CPU (s)	  Ela (s)  Parse Ela (s)	Ela (s) PL/SQL Ela (s)	 Java Ela (s)	 bg time (s)	 bg CPU (s)
---- -------------- -------------- -------------- -------------- -------------- -------------- -------------- -------------- --------------
   1	   10,807.8	     898.1	 10,807.4	     1.8	    0.0 	  16.1		  0.0	     2,067.4	      461.3
   2	    7,426.5	     420.1	  7,425.6	     0.4	    0.3 	  11.4		  0.0	     1,063.6	      519.0
 ~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	   18,234.3	   1,318.2	 18,233.0	     2.2	    0.3 	  27.5		  0.0	     3,131.0	      980.3
 Avg	    9,117.1	     659.1	  9,116.5	     1.1	    0.2 	  13.7		  0.0	     1,565.5	      490.1
 Std	    2,391.0	     338.0	  2,391.3	     1.0	    0.2 	   3.3		  0.0	       709.8	       40.8
			  --------------------------------------------------------------------------------------------------------------------

Time Model - % of DB time		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]

							      % DB time 							      % bg time
		      ----------------------------------------------------------------------------------------- 		   --------------
	    % Total													 % Total
  I#	    DB time	      DB CPU   SQL Exec Ela	 Parse Ela     Hard Parse     PL/SQL Ela       Java Ela 	 bg time	   bg CPU
---- --------------   -------------- -------------- -------------- -------------- -------------- --------------   --------------   --------------
   1	       59.3		 8.3	      100.0	       0.0	      0.0	     0.0	    0.0 	    66.0	     22.3
   2	       40.7		 5.7	      100.0	       0.0	      0.0	     0.0	    0.0 	    34.0	     48.8
 ~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~
 Avg	       50.0		 7.0	      100.0	       0.0	      0.0	     0.0	    0.0 	    50.0	     35.6
			  --------------------------------------------------------------------------------------------------------------------


Foreground Wait Classes -  % of Total DB timeDB/Inst: P30DB/p30db1  Snaps: 68-
-> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time

	  User I/O	 Sys I/O	 Other	      Applic	    Commit	 Network      Concurcy	      Config	   Cluster	   Admin     Scheduler	      DB CPU
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------
	      82.5	     0.0	   3.3		 0.0	       0.0	     0.0	   4.1		 0.1	       5.1	     N/A	   N/A		 7.2
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes 		   DB/Inst: P30DB/p30db1  Snaps: 68-69

  I#   User I/O(s)    Sys I/O(s)      Other(s)	  Applic (s)	Commit (s)   Network (s)  Concurcy (s)	  Config (s)   Cluster (s)     Admin (s) Scheduler (s)	  DB CPU (s)	    DB time
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- --------------
   1	   8,150.5	     2.3	 592.7		 0.0	       0.2	     0.0	 748.7		11.3	     644.3	     N/A	   N/A	       898.1	   10,807.8
   2	   6,887.5	     0.0	   4.3		 0.0	       0.6	     0.0	   0.0		 0.0	     285.3	     N/A	   N/A	       420.1	    7,426.5
 ~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	  15,038.0	     2.4	 597.0		 0.0	       0.8	     0.0	 748.7		11.3	     929.6	     0.0	   0.0	     1,318.2	   18,234.3
 Avg	   7,519.0	     1.2	 298.5		 0.0	       0.4	     0.0	 374.4		 5.6	     464.8	     N/A	   N/A	       659.1	    9,117.1
 Std	     893.1	     1.6	 416.1		 0.0	       0.3	     0.0	 529.4		 8.0	     253.9	     N/A	   N/A	       338.0	    2,391.0
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes -  % of DB time    DB/Inst: P30DB/p30db1  Snaps: 68-69
-> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time

										      % DB time
       -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
																						       % Total
  I#	    User I/O	   Sys I/O	   Other	Applic	      Commit	   Network	Concurcy	Config	     Cluster	     Admin     Scheduler	DB CPU	       DB time
----   ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------	 -------------
   1		75.4	       0.0	     5.5	   0.0		 0.0	       0.0	     6.9	   0.1		 6.0	       N/A	     N/A	   8.3		  59.3
   2		92.7	       0.0	     0.1	   0.0		 0.0	       0.0	     0.0	   0.0		 3.8	       N/A	     N/A	   5.7		  40.7
 ~~~   ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~
 Avg		84.1	       0.0	     2.8	   0.0		 0.0	       0.0	     3.5	   0.1		 4.9	       N/A	     N/A	   7.0
			  --------------------------------------------------------------------------------------------------------------------


Top Timed Events			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time '	       : Per-instance 'Wait Time Avg ' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			1,871,499	0.0	   9,795.36   5.23ms	53.72	    5.41ms     4.59ms	  6.22ms     1.15ms    2
       User I/O   db file parallel read 			  414,576	0.0	   5,240.71  12.64ms	28.74	   12.95ms    11.58ms	 14.32ms     1.94ms    2
       System I/O log file parallel write			   55,054	0.0	   1,485.08  26.98ms	 8.14	   26.28ms    20.87ms	 31.70ms     7.66ms    2
		  DB CPU					      N/A	N/A	   1,318.15		 7.23						       2
       Concurrenc buffer busy waits				   29,041	0.0	     748.84  25.79ms	 4.11	   12.98ms   175.00us	 25.79ms    18.11ms    2
       Other	  LGWR any worker group 			   26,603	0.0	     433.71  16.30ms	 2.38	   16.30ms    16.30ms	 16.30ms	       2
       System I/O db file parallel write			  109,277	0.0	     392.56   3.59ms	 2.15	    3.61ms     3.39ms	  3.84ms   319.14us    2
       Other	  enq: CR - block range reuse ckpt		   88,149	0.0	     302.22   3.43ms	 1.66	    2.90ms   731.42us	  5.06ms     3.06ms    2
       Cluster	  gc cr multi block grant			  199,320	0.0	     271.34   1.36ms	 1.49	    1.37ms     1.34ms	  1.40ms    41.24us    2
       Cluster	  gc current grant 2-way			  381,188	0.0	     245.84 644.93us	 1.35	  638.63us   620.97us	656.29us    24.98us    2

   1   User I/O   db file sequential read			1,135,542	0.0	   5,216.23   4.59ms	48.26
       User I/O   db file parallel read 			  253,306	0.0	   2,932.10  11.58ms	27.13
       System I/O log file parallel write			   31,037	0.0	     983.83  31.70ms	 9.10
		  DB CPU					      N/A	N/A	     898.09		 8.31
       Concurrenc buffer busy waits				   29,040	0.0	     748.84  25.79ms	 6.93
       Other	  LGWR any worker group 			   26,603	0.0	     433.71  16.30ms	 4.01
       Other	  enq: CR - block range reuse ckpt		   54,921	0.0	     277.92   5.06ms	 2.57
       Other	  enq: US - contention				   23,074	0.0	     218.21   9.46ms	 2.02
       System I/O db file parallel write			   59,584	0.0	     201.81   3.39ms	 1.87
       Cluster	  gc current grant 2-way			  258,597	0.0	     169.72 656.29us	 1.57

   2   User I/O   db file sequential read			  735,957	0.0	   4,579.13   6.22ms	61.66
       User I/O   db file parallel read 			  161,270	0.0	   2,308.61  14.32ms	31.09
       System I/O log file parallel write			   24,017	0.0	     501.25  20.87ms	 6.75
		  DB CPU					      N/A	N/A	     420.06		 5.66
       System I/O db file parallel write			   49,693	0.0	     190.74   3.84ms	 2.57
       Cluster	  gc cr multi block grant			   81,360	0.0	     113.57   1.40ms	 1.53
       Cluster	  gc current grant 2-way			  122,591	0.0	      76.13 620.97us	 1.03
       Cluster	  gc cr grant 2-way				   93,003	0.0	      59.27 637.30us	 0.80
       Other	  enq: CR - block range reuse ckpt		   33,228	0.0	      24.30 731.42us	 0.33
       Other	  ges inquiry response				   21,816	0.0	      16.23 743.94us	 0.22
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Foreground Events		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Foreground Activity is captured in release 11g and above
-> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			1,870,100	0.0	   9,793.25   5.24ms	53.71	    5.41ms     4.59ms	  6.23ms     1.16ms    2
       User I/O   db file parallel read 			  414,572	0.0	   5,240.70  12.64ms	28.74	   12.95ms    11.58ms	 14.32ms     1.94ms    2
		  DB CPU					      N/A	N/A	   1,318.15		 7.23						       2
       Concurrenc buffer busy waits				   29,009	0.0	     747.42  25.77ms	 4.10	   25.77ms    25.77ms	 25.77ms	       2
       Other	  enq: CR - block range reuse ckpt		   54,512	0.0	     276.15   5.07ms	 1.51	    5.07ms     5.07ms	  5.07ms	       2
       Cluster	  gc cr multi block grant			  199,296	0.0	     271.31   1.36ms	 1.49	    1.37ms     1.34ms	  1.40ms    41.23us    2
       Cluster	  gc current grant 2-way			  381,025	0.0	     245.74 644.95us	 1.35	  638.65us   620.99us	656.32us    24.98us    2
       Other	  enq: US - contention				   23,061	0.0	     218.15   9.46ms	 2.02	    9.46ms     9.46ms	  9.46ms	       1
       Cluster	  gc cr grant 2-way				  286,191	0.0	     188.57 658.90us	 1.03	  653.36us   637.66us	669.06us    22.20us    2
       Cluster	  gc current grant read-mostly invalidatio	   73,122	0.0	      92.83   1.27ms	 0.86	    1.27ms     1.27ms	  1.27ms	       1

   1   User I/O   db file sequential read			1,134,921	0.0	   5,214.45   4.59ms	48.25
       User I/O   db file parallel read 			  253,304	0.0	   2,932.10  11.58ms	27.13
		  DB CPU					      N/A	N/A	     898.09		 8.31
       Concurrenc buffer busy waits				   29,009	0.0	     747.42  25.77ms	 6.92
       Other	  enq: CR - block range reuse ckpt		   54,512	0.0	     276.15   5.07ms	 2.56
       Other	  enq: US - contention				   23,061	0.0	     218.15   9.46ms	 2.02
       Cluster	  gc current grant 2-way			  258,460	0.0	     169.63 656.32us	 1.57
       Cluster	  gc cr multi block grant			  117,945	0.0	     157.76   1.34ms	 1.46
       Cluster	  gc cr grant 2-way				  193,594	0.0	     129.53 669.06us	 1.20
       Cluster	  gc current grant read-mostly invalidatio	   73,122	0.0	      92.83   1.27ms	 0.86

   2   User I/O   db file sequential read			  735,179	0.0	   4,578.80   6.23ms	61.66
       User I/O   db file parallel read 			  161,268	0.0	   2,308.60  14.32ms	31.09
		  DB CPU					      N/A	N/A	     420.06		 5.66
       Cluster	  gc cr multi block grant			   81,351	0.0	     113.55   1.40ms	 1.53
       Cluster	  gc current grant 2-way			  122,565	0.0	      76.11 620.99us	 1.02
       Cluster	  gc cr grant 2-way				   92,597	0.0	      59.05 637.66us	 0.80
       Cluster	  gc current block 2-way			   12,754	0.0	      10.94 857.73us	 0.15
       Cluster	  gc current grant busy 			    7,582	0.0	       8.86   1.17ms	 0.12
       Cluster	  gc cr grant busy				    5,322	0.0	       5.47   1.03ms	 0.07
       Cluster	  gc cr multi block mixed			    2,059	0.0	       4.22   2.05ms	 0.06
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Background Events		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> % of bg time: % of background elapsed time
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   System I/O log file parallel write			   55,050	0.0	   1,485.02  26.98ms	47.43	   26.29ms    20.87ms	 31.70ms     7.66ms    2
		  background cpu time				      N/A	N/A	     980.30		31.31						       2
       Other	  LGWR any worker group 			   26,602	0.0	     433.71  16.30ms	13.85	   16.30ms    16.30ms	 16.30ms	       2
       System I/O db file parallel write			  109,277	0.0	     392.56   3.59ms	12.54	    3.61ms     3.39ms	  3.84ms   319.14us    2
       Other	  LGWR worker group ordering			    7,452	0.0	      53.22   7.14ms	 1.70	    7.14ms     7.14ms	  7.14ms	       2
       Other	  LGWR all worker groups			    1,283	0.0	      38.11  29.71ms	 1.22	   29.71ms    29.71ms	 29.71ms	       2
       Other	  enq: CR - block range reuse ckpt		   33,636	0.0	      26.07 775.10us	 0.83	    2.53ms   731.42us	  4.32ms     2.54ms    2
       Other	  ges inquiry response				   21,826	0.0	      16.24 744.03us	 0.52	  846.17us   743.94us	948.40us   144.57us    2
       System I/O control file parallel write			      608	0.0	      12.19  20.05ms	 0.39	   20.01ms    19.42ms	 20.59ms   829.24us    2
       Other	  ASM file metadata operation			    6,525	0.0	       7.25   1.11ms	 0.23	    1.12ms   909.20us	  1.33ms   298.14us    2

   1   System I/O log file parallel write			   31,033	0.0	     983.77  31.70ms	47.58
		  background cpu time				      N/A	N/A	     461.27		22.31
       Other	  LGWR any worker group 			   26,602	0.0	     433.71  16.30ms	20.98
       System I/O db file parallel write			   59,584	0.0	     201.81   3.39ms	 9.76
       Other	  LGWR worker group ordering			    7,452	0.0	      53.22   7.14ms	 2.57
       Other	  LGWR all worker groups			    1,283	0.0	      38.11  29.71ms	 1.84
       System I/O control file parallel write			      324	0.0	       6.67  20.59ms	 0.32
       Other	  ASM file metadata operation			    3,126	0.0	       4.16   1.33ms	 0.20
       Other	  gcs log flush sync				    2,787	0.0	       2.20 788.32us	 0.11
       User I/O   ASM IO for non-blocking poll			   66,623	0.0	       2.08  31.23us	 0.10

   2		  background cpu time				      N/A	N/A	     519.03		48.80
       System I/O log file parallel write			   24,017	0.0	     501.25  20.87ms	47.13
       System I/O db file parallel write			   49,693	0.0	     190.74   3.84ms	17.93
       Other	  enq: CR - block range reuse ckpt		   33,227	0.0	      24.30 731.42us	 2.29
       Other	  ges inquiry response				   21,816	0.0	      16.23 743.94us	 1.53
       System I/O control file parallel write			      284	0.0	       5.52  19.42ms	 0.52
       User I/O   Disk file Mirror Read 			      836	0.0	       4.43   5.29ms	 0.42
       Other	  IMR slave acknowledgement msg 		    1,851	0.0	       3.58   1.93ms	 0.34
       Other	  ASM file metadata operation			    3,399	0.0	       3.09 909.20us	 0.29
       Other	  KSV master wait				    1,535      30.2	       2.98   1.94ms	 0.28
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
User I/O   db file sequential read			 1,870,100	 0.0	    9,793.25   5.24ms	 53.71	     5.41ms	4.59ms	   6.23ms     1.16ms
User I/O   db file parallel read			   414,572	 0.0	    5,240.70  12.64ms	 28.74	    12.95ms    11.58ms	  14.32ms     1.94ms
Concurrenc buffer busy waits				    29,009	 0.0	      747.42  25.77ms	  4.10	    25.77ms    25.77ms	  25.77ms
Other	   enq: CR - block range reuse ckpt		    54,512	 0.0	      276.15   5.07ms	  1.51	     5.07ms	5.07ms	   5.07ms
Cluster    gc cr multi block grant			   199,296	 0.0	      271.31   1.36ms	  1.49	     1.37ms	1.34ms	   1.40ms    41.23us
Cluster    gc current grant 2-way			   381,025	 0.0	      245.74 644.95us	  1.35	   638.65us   620.99us	 656.32us    24.98us
Other	   enq: US - contention 			    23,061	 0.0	      218.15   9.46ms	  1.20	     9.46ms	9.46ms	   9.46ms
Cluster    gc cr grant 2-way				   286,191	 0.0	      188.57 658.90us	  1.03	   653.36us   637.66us	 669.06us    22.20us
Cluster    gc current grant read-mostly invalidatio	    73,122	 0.0	       92.83   1.27ms	  0.51	     1.27ms	1.27ms	   1.27ms
Other	   reliable message				    21,649	 0.0	       86.52   4.00ms	  0.47	   987.79ms	3.91ms	1971.67ms  1391.42ms
Cluster    gc current block 2-way			    48,972	 0.0	       43.12 880.52us	  0.24	   873.14us   857.73us	 888.55us    21.79us
Cluster    gc cr multi block mixed			    17,596	 0.0	       34.74   1.97ms	  0.19	     2.01ms	1.96ms	   2.05ms    59.14us
Cluster    gc current grant busy			    12,851	 0.0	       14.39   1.12ms	  0.08	     1.11ms	1.05ms	   1.17ms    84.36us
Cluster    gc current block busy			    15,694	 0.0	       12.95 824.92us	  0.07	     1.44ms   732.18us	   2.14ms     1.00ms
Cluster    gc cr grant busy				     8,866	 0.0		9.74   1.10ms	  0.05	     1.12ms	1.03ms	   1.20ms   124.46us
Configurat enq: HW - contention 			       396	 0.0		8.71  22.00ms	  0.05	    22.00ms    22.00ms	  22.00ms
Other	   latch: enqueue hash chains			    12,924	 0.0		5.26 406.81us	  0.03	   356.40us   305.82us	 406.98us    71.53us
Cluster    gc cr block 2-way				     4,891	 0.0		4.61 941.81us	  0.03	   943.22us   941.55us	 944.88us     2.35us
Other	   gcs drm freeze in enter server mode			45	 0.0		4.08  90.71ms	  0.02	    91.34ms    82.01ms	 100.67ms    13.19ms
Cluster    gc current grant congested			       710	 0.0		3.11   4.38ms	  0.02	     6.18ms	3.34ms	   9.02ms     4.01ms
Other	   KSV master wait				       516	 0.0		2.75   5.32ms	  0.02	     5.32ms	5.32ms	   5.32ms
User I/O   Data file init write 				86	 0.0		2.70  31.37ms	  0.01	    31.37ms    31.37ms	  31.37ms
Configurat undo segment extension			       189	99.5		2.55  13.47ms	  0.01	    13.47ms    13.47ms	  13.47ms
Cluster    gc cr grant congested			       570	 0.0		2.50   4.39ms	  0.01	     6.50ms	3.30ms	   9.70ms     4.52ms
Cluster    gc cr block lost					 3	 0.0		2.36 786.27ms	  0.01	   848.81ms   661.19ms	1036.44ms   265.34ms
Cluster    gc current block lost				 3	 0.0		1.72 573.58ms	  0.01	   573.58ms   573.58ms	 573.58ms
System I/O control file parallel write			       129	 0.0		1.65  12.76ms	  0.01	    12.76ms    12.76ms	  12.76ms
Concurrenc row cache mutex				       278	 0.0		1.27   4.57ms	  0.01	     4.57ms	4.57ms	   4.57ms
User I/O   db file single write 				86	 0.0		1.20  13.99ms	  0.01	    13.99ms    13.99ms	  13.99ms
Cluster    gc cr block busy					19	 0.0		1.20  62.95ms	  0.01	    62.95ms    62.95ms	  62.95ms
Other	   DLM cross inst call completion			55	 0.0		1.05  19.05ms	  0.01	    12.40ms   611.42us	  24.20ms    16.68ms
Commit	   log file sync					12	 0.0		0.81  67.81ms	  0.00	    67.81ms    36.62ms	  99.00ms    44.11ms
Other	   KJC: Wait for msg sends to complete		     1,621	 0.0		0.68 419.27us	  0.00	   318.15us   119.47us	 516.84us   280.98us
Other	   latch free					     1,935	 0.0		0.62 322.15us	  0.00	   406.44us   313.08us	 499.80us   132.03us
Cluster    gc current block congested			       151	 0.0		0.54   3.59ms	  0.00	     3.54ms	3.48ms	   3.60ms    81.81us
Other	   latch: ges resource hash list		     1,280	 0.0		0.47 364.01us	  0.00	   280.14us   196.00us	 364.28us   118.99us
System I/O kfk: async disk IO					86	 0.0		0.44   5.09ms	  0.00	     5.09ms	5.09ms	   5.09ms
System I/O control file sequential read 		     1,047	 0.0		0.29 277.52us	  0.00	   244.56us   200.03us	 289.09us    62.97us
Other	   latch: gc element				       382	 0.0		0.26 683.11us	  0.00	   630.95us   547.22us	 714.67us   118.40us
Other	   CSS initialization					40	 0.0		0.21   5.28ms	  0.00	     5.07ms	4.81ms	   5.34ms   368.03us
Other	   latch: gcs resource hash			       224	 0.0		0.13 561.42us	  0.00	   548.79us   511.57us	 586.01us    52.64us
Other	   ges enter server mode			    12,784	 0.0		0.12   9.06us	  0.00	     8.47us	7.89us	   9.06us   830.83ns
Cluster    gc buffer busy release				 6	 0.0		0.10  16.37ms	  0.00	    16.37ms    16.37ms	  16.37ms
Other	   CSS operation: action				58	 0.0		0.08   1.36ms	  0.00	     1.28ms	1.18ms	   1.37ms   136.90us
User I/O   Disk file Mirror Read				79	 0.0		0.06 810.24us	  0.00	   885.11us   347.42us	   1.42ms   760.40us
Other	   latch: object queue header operation 	       115	 0.0		0.06 545.13us	  0.00	   509.12us   438.93us	 579.31us    99.26us
Other	   latch: undo global data			       154	 0.0		0.06 367.18us	  0.00	   405.34us   366.67us	 444.00us    54.68us
User I/O   direct path write					 3	 0.0		0.06  18.47ms	  0.00	    18.47ms    18.47ms	  18.47ms
Other	   latch: redo allocation			       140	 0.0		0.05 369.78us	  0.00	   390.29us   357.66us	 422.92us    46.15us
Cluster    gc cr block congested				11	 0.0		0.05   4.26ms	  0.00	     4.26ms	4.26ms	   4.26ms
Other	   enq: CF - contention 				51	 0.0		0.05 905.45us	  0.00	   905.45us   905.45us	 905.45us
User I/O   Disk file operations I/O			       291	 0.0		0.04 141.10us	  0.00	   131.92us   121.44us	 142.40us    14.82us
Other	   latch: cache buffers lru chain		       140	 0.0		0.04 255.21us	  0.00	   239.64us   210.18us	 269.09us    41.66us
Other	   CSS operation: query 			       120	 0.0		0.03 288.03us	  0.00	   284.20us   279.42us	 288.98us     6.76us
Other	   ges inquiry response 				43	 0.0		0.03 690.51us	  0.00	   690.51us   690.51us	 690.51us
Other	   PGA memory operation 			       595	 0.0		0.03  48.93us	  0.00	    53.09us    23.28us	  82.90us    42.16us
Concurrenc latch: cache buffers chains				53	 0.0		0.03 478.49us	  0.00	   373.76us   231.43us	 516.09us   201.28us
Other	   IPC send completion sync				28	 0.0		0.02 668.43us	  0.00	   723.67us   627.00us	 820.33us   136.71us
Other	   datafile move cleanup during resize			43	 0.0		0.02 369.58us	  0.00	   369.58us   369.58us	 369.58us
Other	   enq: WF - contention 				14	 0.0		0.01	.98ms	  0.00	      .98ms	 .98ms	    .98ms
Foreground Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Concurrenc cursor: pin S					10	 0.0		0.01   1.23ms	  0.00	     1.23ms	1.23ms	   1.23ms
Concurrenc row cache lock					11     100.0		0.01   1.09ms	  0.00	     1.09ms	1.09ms	   1.09ms
Other	   enq: PS - contention 				11	18.2		0.01   1.09ms	  0.00	     1.12ms	1.04ms	   1.21ms   116.50us
Cluster    gc current multi block request			 7	 0.0		0.01   1.60ms	  0.00	     1.60ms	1.60ms	   1.60ms
Applicatio SQL*Net break/reset to client		       124	 0.0		0.01  72.57us	  0.00	    72.57us    72.57us	  72.57us
Other	   ASM file metadata operation			       258	 0.0		0.01  32.72us	  0.00	    32.72us    32.72us	  32.72us
Other	   enq: FB - contention 				 6	 0.0		0.01   1.33ms	  0.00	     1.33ms	1.33ms	   1.33ms
Other	   PX Deq: Slave Session Stats				16	 0.0		0.01 409.81us	  0.00	   409.81us   272.00us	 547.63us   194.90us
Other	   PX Deq: reap credit				       236     100.0		0.01  23.47us	  0.00	    23.66us    23.44us	  23.88us   313.95ns
Other	   wait list latch free 				 4	 0.0		0.01   1.26ms	  0.00	     1.26ms	1.26ms	   1.26ms
User I/O   direct path sync					43	 0.0		0.00 109.49us	  0.00	   109.49us   109.49us	 109.49us
Other	   ges ipc enter server mode			       384	 0.0		0.00  10.65us	  0.00	    10.74us	8.87us	  12.62us     2.65us
Other	   name-service call wait				 4	 0.0		0.00 944.75us	  0.00	   944.75us   640.00us	   1.25ms   430.98us
Cluster    gc current retry					 1	 0.0		0.00   3.37ms	  0.00	     3.37ms	3.37ms	   3.37ms
Other	   enq: AF - task serialization 			 1	 0.0		0.00   2.36ms	  0.00	     2.36ms	2.36ms	   2.36ms
Concurrenc library cache lock					 2	 0.0		0.00   1.04ms	  0.00	     1.04ms	1.04ms	   1.04ms
Network    SQL*Net message to client			       199	 0.0		0.00   8.93us	  0.00	    10.65us	7.88us	  13.42us     3.92us
Applicatio enq: TM - contention 				 1	 0.0		0.00   1.38ms	  0.00	     1.38ms	1.38ms	   1.38ms
User I/O   ASM IO for non-blocking poll 			55	 0.0		0.00  19.56us	  0.00	    20.95us    18.49us	  23.42us     3.48us
Concurrenc library cache pin					 2	 0.0		0.00 220.00us	  0.00	   220.00us   220.00us	 220.00us
Other	   latch: call allocation				 1	 0.0		0.00 133.00us	  0.00	   133.00us   133.00us	 133.00us
Network    IPC group service call				 7	 0.0		0.00  13.86us	  0.00	    18.08us    12.17us	  24.00us     8.37us
Other	   lock deadlock retry					 4     100.0		0.00  16.75us	  0.00	    19.17us    14.33us	  24.00us     6.84us
Other	   AWR Flush						 6	 0.0		0.00   7.33us	  0.00	     7.33us	7.33us	   7.33us
Other	   asynch descriptor resize				 3     100.0		0.00  10.00us	  0.00	    10.25us	9.50us	  11.00us     1.06us
Other	   ges resource directory to be unfrozen		 3	 0.0		0.00   4.33us	  0.00	     4.25us	4.00us	   4.50us   353.55ns
Idle	   watchdog main loop				     1,647	 0.0	    4,944.04 3001.84m	 27.11	  3001.85ms  3000.02ms	3003.67ms     2.58ms
Idle	   SQL*Net message from client			       199	 0.0	      620.12 3116.17m	  3.40	  1926.08ms   644.82us	3851.52ms  2722.98ms
Idle	   PL/SQL lock timer					 1     100.0		9.00 9000.19m	  0.05	  9000.19ms  9000.19ms	9000.19ms
Idle	   PX Deq: Execution Msg				48	 0.0		0.06   1.33ms	  0.00	     1.33ms   927.21us	   1.74ms   571.93us
Idle	   PX Deq: Msg Fragment 			       120	 0.0		0.05 433.36us	  0.00	   433.36us   404.22us	 462.50us    41.21us
			  --------------------------------------------------------------------------------------------------------------------

Background Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
System I/O log file parallel write			    55,050	 0.0	    1,485.02  26.98ms	  0.47	    26.29ms    20.87ms	  31.70ms     7.66ms
Other	   LGWR any worker group			    26,602	 0.0	      433.71  16.30ms	  0.14	    16.30ms    16.30ms	  16.30ms
System I/O db file parallel write			   109,277	 0.0	      392.56   3.59ms	  0.13	     3.61ms	3.39ms	   3.84ms   319.14us
Other	   LGWR worker group ordering			     7,452	 0.0	       53.22   7.14ms	  0.02	     7.14ms	7.14ms	   7.14ms
Other	   LGWR all worker groups			     1,283	 0.0	       38.11  29.71ms	  0.01	    29.71ms    29.71ms	  29.71ms
Other	   enq: CR - block range reuse ckpt		    33,636	 0.0	       26.07 775.10us	  0.01	     2.53ms   731.42us	   4.32ms     2.54ms
Other	   ges inquiry response 			    21,826	 0.0	       16.24 744.03us	  0.01	   846.17us   743.94us	 948.40us   144.57us
System I/O control file parallel write			       608	 0.0	       12.19  20.05ms	  0.00	    20.01ms    19.42ms	  20.59ms   829.24us
Other	   ASM file metadata operation			     6,525	 0.0		7.25   1.11ms	  0.00	     1.12ms   909.20us	   1.33ms   298.14us
User I/O   Disk file Mirror Read			     1,685	 0.0		5.02   2.98ms	  0.00	     3.00ms   700.31us	   5.29ms     3.25ms
Other	   KSV master wait				     2,627	35.2		4.33   1.65ms	  0.00	     1.59ms	1.24ms	   1.94ms   493.88us
Other	   IMR slave acknowledgement msg		     3,702	 0.0		4.24   1.15ms	  0.00	     1.15ms   358.89us	   1.93ms     1.11ms
Other	   gcs log flush sync				     4,467	 0.0		3.35 750.02us	  0.00	   737.40us   686.47us	 788.32us    72.02us
User I/O   ASM IO for non-blocking poll 		   118,671	 0.0		3.15  26.52us	  0.00	    25.86us    20.49us	  31.23us     7.59us
Other	   ksxr poll remote instances			    88,570     100.0		2.78  31.39us	  0.00	    31.39us    30.38us	  32.40us     1.43us
System I/O control file sequential read 		     7,025	 0.0		2.28 324.84us	  0.00	   324.95us   322.35us	 327.55us     3.68us
User I/O   db file sequential read			     1,403	 0.0		2.12   1.51ms	  0.00	     1.65ms   424.99us	   2.87ms     1.73ms
Other	   Sync ASM rebalance				       117	 0.0		2.09  17.83ms	  0.00	    18.10ms    14.58ms	  21.61ms     4.97ms
Concurrenc buffer busy waits					32	 0.0		1.41  44.22ms	  0.00	    22.91ms   175.00us	  45.64ms    32.15ms
System I/O log file sequential read			       836	 0.0		1.28   1.54ms	  0.00	     1.61ms	1.31ms	   1.92ms   430.43us
Other	   gcs remastering wait for read latch			14	 0.0		1.24  88.43ms	  0.00	    62.06ms   518.75us	 123.59ms    87.03ms
Other	   ges lms sync during dynamic remastering		70	68.6		1.18  16.83ms	  0.00	    16.83ms    15.62ms	  18.04ms     1.71ms
Cluster    gc cr block busy					39	 0.0		1.06  27.27ms	  0.00	    27.27ms    27.27ms	  27.27ms
Other	   reliable message				       179	 0.0		0.94   5.23ms	  0.00	    16.08ms	3.21ms	  28.94ms    18.19ms
Other	   latch free					     2,300	 0.0		0.91 393.54us	  0.00	   393.86us   271.12us	 516.60us   173.58us
Cluster    gc cr block 2-way				     1,411	 0.0		0.87 615.91us	  0.00	   585.32us   554.43us	 616.22us    43.69us
Cluster    gc buffer busy release				10	 0.0		0.82  81.96ms	  0.00	    81.96ms    81.96ms	  81.96ms
Cluster    gc current block busy			       268	 0.0		0.68   2.54ms	  0.00	     9.06ms	2.23ms	  15.89ms     9.65ms
Other	   PX Deq: reap credit				    21,181     100.0		0.59  28.07us	  0.00	    28.07us    27.75us	  28.39us   455.93ns
Cluster    gc cr multi block mixed				27	 0.0		0.54  20.11ms	  0.00	    18.19ms   910.17us	  35.48ms    24.44ms
Cluster    gc current block 2-way			       814	 0.0		0.53 654.46us	  0.00	   764.10us   648.19us	 880.00us   163.91us
Other	   DFS lock handle				       560     100.0		0.39 688.39us	  0.00	   688.57us   684.82us	 692.32us     5.30us
Other	   AQ: RAC AQ Network				    12,320     100.0		0.37  29.88us	  0.00	    29.88us    29.53us	  30.24us   501.37ns
Other	   CGS wait for IPC msg 			    13,334     100.0		0.35  26.48us	  0.00	    26.48us    26.33us	  26.63us   210.79ns
Other	   enq: CF - contention 			       166	45.8		0.34   2.03ms	  0.00	     2.09ms	1.53ms	   2.66ms   797.99us
Cluster    gc cr grant 2-way				       535	 0.0		0.33 622.34us	  0.00	   694.80us   554.86us	 834.73us   197.90us
Other	   latch: cache buffers lru chain		       707	 0.0		0.30 422.18us	  0.00	   397.57us   331.42us	 463.72us    93.55us
Other	   oracle thread bootstrap				11	 0.0		0.28  25.20ms	  0.00	    25.00ms    22.81ms	  27.20ms     3.10ms
Other	   latch: ges resource hash list		       625	 0.0		0.26 409.64us	  0.00	   408.49us   403.55us	 413.44us     6.99us
System I/O db file async I/O submit			    25,168	 0.0		0.23   9.18us	  0.00	     9.08us	8.53us	   9.64us   784.84ns
Other	   latch: enqueue hash chains			       629	 0.0		0.23 358.68us	  0.00	   383.54us   358.28us	 408.80us    35.72us
User I/O   db file scattered read				75	 0.0		0.22   2.99ms	  0.00	     2.62ms   492.74us	   4.75ms     3.01ms
User I/O   Disk file operations I/O			       827	 0.0		0.19 227.30us	  0.00	   226.20us   220.95us	 231.45us     7.42us
Other	   DLM cross inst call completion		       301	 0.0		0.17 576.80us	  0.00	   362.02us   106.50us	 617.55us   361.37us
User I/O   direct path write					 9	 0.0		0.17  19.15ms	  0.00	    14.78ms	9.15ms	  20.40ms     7.96ms
Other	   latch: gcs resource hash			       398	 0.0		0.16 392.56us	  0.00	   343.24us   247.01us	 439.46us   136.08us
Other	   kjctssqmg: quick message send wait		       291     100.0		0.13 438.17us	  0.00	   438.17us   438.17us	 438.17us
User I/O   direct path write temp				30	 0.0		0.12   3.92ms	  0.00	     3.92ms	3.92ms	   3.92ms
Cluster    gc current grant 2-way			       164	 0.0		0.10 583.59us	  0.00	   565.00us   537.77us	 592.22us    38.51us
Applicatio enq: RO - fast object reuse				50	 0.0		0.08   1.66ms	  0.00	     1.46ms   438.25us	   2.48ms     1.44ms
Cluster    gc current grant busy			       122	 0.0		0.08 659.71us	  0.00	   774.44us   649.47us	 899.40us   176.73us
Other	   KJC: Wait for msg sends to complete		       204	77.5		0.08 384.79us	  0.00	   401.41us   381.70us	 421.13us    27.88us
Network    IPC group service call			       939	 0.0		0.07  78.41us	  0.00	    78.41us    76.90us	  79.92us     2.14us
Other	   enq: US - contention 				13	 0.0		0.07   5.03ms	  0.00	     5.03ms	5.03ms	   5.03ms
Other	   LGWR wait for redo copy			       196	 0.0		0.05 270.82us	  0.00	   303.95us   101.04us	 506.87us   286.97us
Other	   CSS operation: action				40	 0.0		0.05   1.26ms	  0.00	     1.12ms	 .96ms	   1.28ms   227.13us
Other	   CSS operation: data query				36	 0.0		0.05   1.36ms	  0.00	     1.36ms	1.31ms	   1.41ms    67.45us
Cluster    gc cr disk read					71	 0.0		0.05 653.15us	  0.00	   658.76us   579.16us	 738.36us   112.58us
Concurrenc row cache lock					31     100.0		0.04   1.44ms	  0.00	     1.58ms	1.33ms	   1.83ms   357.69us
Other	   PX Deq: Join ACK					16	 0.0		0.04   2.48ms	  0.00	     3.18ms	2.07ms	   4.30ms     1.58ms
Background Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Other	   IPC send completion sync			     1,241	99.3		0.04  30.63us	  0.00	    30.61us    26.86us	  34.36us     5.31us
Other	   CSS operation: data update				40	 0.0		0.04 919.68us	  0.00	   919.68us   883.10us	    .96ms    51.72us
Other	   latch: redo allocation				75	 0.0		0.03 407.31us	  0.00	   382.75us   343.57us	 421.93us    55.41us
Cluster    gc cr multi block grant				24	 0.0		0.03   1.17ms	  0.00	     1.20ms	1.08ms	   1.32ms   168.26us
Other	   latch: gc element					70	 0.0		0.03 390.20us	  0.00	   385.45us   376.69us	 394.20us    12.39us
Other	   os thread creation					11	 0.0		0.02   2.22ms	  0.00	     2.19ms	1.93ms	   2.46ms   379.03us
Other	   latch: messages					87	 0.0		0.02 252.59us	  0.00	   259.42us   238.91us	 279.93us    29.00us
Applicatio enq: TM - contention 				 2	 0.0		0.02  10.22ms	  0.00	    10.22ms   486.00us	  19.96ms    13.77ms
Concurrenc library cache lock					28	 0.0		0.02 713.75us	  0.00	     1.02ms   481.95us	   1.56ms   764.89us
Cluster    gc current multi block request			12	 0.0		0.02   1.36ms	  0.00	     1.36ms	1.36ms	   1.36ms
Other	   enq: WF - contention 				15	 0.0		0.02   1.01ms	  0.00	     1.17ms	 .98ms	   1.35ms   256.07us
Concurrenc library cache pin					25	 0.0		0.02 602.16us	  0.00	   690.08us   543.55us	 836.60us   207.22us
Other	   PGA memory operation 			       219	 0.0		0.01  65.14us	  0.00	    60.54us    46.36us	  74.72us    20.05us
Other	   enq: PS - contention 				12	25.0		0.01   1.10ms	  0.00	     1.23ms	 .97ms	   1.49ms   366.05us
Cluster    gc cr block congested				 2	 0.0		0.01   5.88ms	  0.00	     5.88ms	5.88ms	   5.88ms
Concurrenc libcache interrupt action by LCK		     1,886	 0.0		0.01   6.02us	  0.00	     6.03us	5.96us	   6.11us   102.76ns
User I/O   direct path sync					86	 0.0		0.01 125.81us	  0.00	   125.81us   123.49us	 128.14us     3.29us
Other	   enq: FB - contention 				11	 0.0		0.01 880.00us	  0.00	   880.00us   880.00us	 880.00us
Other	   enq: CO - master slave det				10     100.0		0.01 888.60us	  0.00	   888.60us   888.60us	 888.60us
Cluster    gc cr grant busy					 8	 0.0		0.01	.98ms	  0.00	      .98ms	 .98ms	    .98ms
Other	   enq: DW - contention 				 7     100.0		0.01   1.09ms	  0.00	     1.07ms	 .95ms	   1.19ms   168.94us
Concurrenc latch: cache buffers chains				30	 0.0		0.01 248.63us	  0.00	   285.34us   206.68us	 364.00us   111.24us
Cluster    gc current grant congested				 1	 0.0		0.01   5.98ms	  0.00	     5.98ms	5.98ms	   5.98ms
Other	   enq: WT - contention 				 7	 0.0		0.01 843.43us	  0.00	   843.43us   843.43us	 843.43us
Other	   ges2 LMON to wake up LMD - mrcvr			34	 0.0		0.01 167.26us	  0.00	   135.52us    94.00us	 177.03us    58.71us
Configurat enq: HW - contention 				 5	20.0		0.01   1.10ms	  0.00	     1.10ms	1.10ms	   1.10ms
Other	   latch: object queue header operation 		 9	 0.0		0.01 606.00us	  0.00	   602.10us   567.00us	 637.20us    49.64us
Configurat latch: redo writing					13	 0.0		0.01 399.08us	  0.00	   254.84us    46.50us	 463.18us   294.64us
Other	   enq: TO - contention 				 3	 0.0		0.00   1.64ms	  0.00	     1.64ms	1.64ms	   1.64ms
Cluster    gc current block congested				 1	 0.0		0.00   4.03ms	  0.00	     4.03ms	4.03ms	   4.03ms
Other	   enq: TT - contention 				 4	50.0		0.00   1.00ms	  0.00	     1.05ms   942.67us	   1.17ms   157.92us
Other	   latch: checkpoint queue latch			19	 0.0		0.00 200.63us	  0.00	   209.90us   174.67us	 245.14us    49.83us
User I/O   db file parallel read				 4	 0.0		0.00 885.25us	  0.00	   885.25us   728.00us	   1.04ms   222.39us
Other	   PX Deq: Slave Session Stats				16	 0.0		0.00 197.94us	  0.00	   217.06us   186.46us	 247.67us    43.28us
Other	   enq: TD - KTF dump entries				 4	 0.0		0.00 686.50us	  0.00	   686.50us   648.00us	 725.00us    54.45us
Other	   enq: TK - Auto Task Serialization			 2     100.0		0.00   1.12ms	  0.00	     1.12ms	 .96ms	   1.29ms   231.93us
Other	   PX Deq: Signal ACK EXT				16	 0.0		0.00 138.81us	  0.00	   105.81us    53.00us	 158.62us    74.68us
Other	   ges enter server mode			       182	 0.0		0.00  11.19us	  0.00	    11.26us	8.94us	  13.59us     3.29us
Other	   name-service call wait				 2	 0.0		0.00 884.00us	  0.00	   884.00us   870.00us	 898.00us    19.80us
Other	   enq: SM -  contention				 2	 0.0		0.00 820.00us	  0.00	   820.00us   820.00us	 820.00us
Other	   enq: TA - contention 				 3	 0.0		0.00 470.67us	  0.00	   463.75us   443.00us	 484.50us    29.34us
Other	   ges ipc enter server mode			       211	 0.0		0.00   6.25us	  0.00	     6.21us	5.98us	   6.44us   327.57ns
Commit	   log file sync					 1	 0.0		0.00   1.15ms	  0.00	     1.15ms	1.15ms	   1.15ms
Applicatio enq: PW - flush prewarm buffers			 1     100.0		0.00 862.00us	  0.00	   862.00us   862.00us	 862.00us
Other	   GCR CSS group query					36	 0.0		0.00  19.83us	  0.00	    19.83us    16.22us	  23.44us     5.11us
Other	   GCR CSS group update 				36	 0.0		0.00  14.75us	  0.00	    14.75us    12.78us	  16.72us     2.79us
Concurrenc latch: shared pool					 1	 0.0		0.00 472.00us	  0.00	   472.00us   472.00us	 472.00us
Other	   asynch descriptor resize				37     100.0		0.00   7.65us	  0.00	     7.51us	5.82us	   9.20us     2.39us
Concurrenc latch: MGA shared context root latch 		 3	 0.0		0.00  79.33us	  0.00	    78.75us    77.00us	  80.50us     2.47us
Network    SQL*Net message to client				35	 0.0		0.00   5.54us	  0.00	     5.53us	5.38us	   5.68us   218.64ns
Cluster    gc quiesce						 1	 0.0		0.00  57.00us	  0.00	    57.00us    57.00us	  57.00us
Other	   ges resource directory to be unfrozen		 6	 0.0		0.00   4.50us	  0.00	     4.50us	4.00us	   5.00us   707.11ns
Other	   undo_retention publish retry 			 4	 0.0		0.00   6.00us	  0.00	     6.00us	5.50us	   6.50us   707.11ns
Other	   AWR Flush						 4	 0.0		0.00   5.00us	  0.00	     5.00us	5.00us	   5.00us
Other	   ASM background starting				 2	 0.0		0.00   5.50us	  0.00	     5.50us	5.00us	   6.00us   707.11ns
Idle	   rdbms ipc message				   330,059	 6.8	   26,702.69  80.90ms	  8.53	    80.95ms    78.98ms	  82.93ms     2.79ms
Idle	   PX Idle Wait 					18	 0.0	   20,439.95 1135.55	  6.53	  1135.55 s  1134.92 s	1136.18 s   891.53ms
Idle	   Space Manager: slave idle wait		     6,257	 0.0	   19,679.06 3145.13m	  6.29	  3232.29ms  2700.22ms	3764.35ms   752.46ms
Idle	   class slave wait				    16,216	75.5	    9,855.76 607.78ms	  3.15	   607.74ms   581.30ms	 634.18ms    37.39ms
Idle	   wait for unread message on broadcast cha	     1,889     100.1	    3,702.12 1959.83m	  1.18	  1959.83ms  1959.33ms	1960.34ms   718.79us
Background Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Idle	   pmon timer					       823     100.0	    2,468.92 2999.91m	  0.79	  2999.91ms  2999.90ms	2999.91ms     6.75us
Idle	   GCR sleep					     8,221	 0.0	    2,466.71 300.05ms	  0.79	   300.05ms   300.00ms	 300.10ms    66.44us
Idle	   DIAG idle wait				    15,487	82.9	    2,463.64 159.08ms	  0.79	   159.08ms   158.44ms	 159.72ms   909.89us
Idle	   gcs yield cpu				    84,426	99.4	    2,455.63  29.09ms	  0.78	    29.09ms    28.79ms	  29.39ms   421.95us
Idle	   ges remote message				   369,027	 0.0	    2,438.29   6.61ms	  0.78	     6.63ms	6.24ms	   7.02ms   552.62us
Idle	   gcs remote message				 2,443,636	 0.0	    2,111.47 864.07us	  0.67	   872.48us   775.84us	    .97ms   136.66us
Idle	   LGWR worker group idle			    14,499	 0.0	    1,389.23  95.82ms	  0.44	    13.05ms    13.05ms	  13.05ms
Idle	   PING 					     1,082	18.9	    1,240.59 1146.57m	  0.40	  1148.65ms  1099.83ms	1197.47ms    69.04ms
Idle	   ASM background timer 			     4,334	 0.0	    1,236.27 285.25ms	  0.39	   285.40ms   278.94ms	 291.85ms     9.13ms
Idle	   OFS idle					       412     100.0	    1,236.01 3000.02m	  0.39	  3000.02ms  3000.01ms	3000.02ms    10.24us
Idle	   pman timer					       412     100.0	    1,235.87 2999.68m	  0.39	  2999.68ms  2999.68ms	2999.68ms     1.00us
Idle	   ASM cluster membership changes		       706	81.9	    1,235.74 1750.35m	  0.39	  1750.35ms  1750.34ms	1750.35ms     6.85us
Idle	   REPL Capture/Apply: RAC AQ qmn coordinat		20     100.0	    1,234.19  61.71 s	  0.39	    61.71 s    61.68 s	  61.74 s    38.00ms
Idle	   heartbeat redo informer			     1,234	 0.0	    1,234.18 1000.14m	  0.39	  1000.14ms  1000.14ms	1000.15ms     9.95us
Idle	   lreg timer					       411     100.0	    1,234.05 3002.54m	  0.39	  3002.54ms  3002.53ms	3002.56ms    21.84us
Idle	   SCM slave idle				    12,376	 0.0	    1,232.55  99.59ms	  0.39	    99.59ms    99.49ms	  99.69ms   143.65us
Idle	   Streams AQ: qmn coordinator idle wait		90	 0.0	    1,232.04  13.69 s	  0.39	    13.69 s    13.69 s	  13.69 s    24.59us
Idle	   Streams AQ: qmn slave idle wait			46	 0.0	    1,232.02  26.78 s	  0.39	    26.78 s    26.78 s	  26.78 s   461.13us
Idle	   shared server idle wait				 0	 N/A	    1,230.23		  0.39
Idle	   Streams AQ: waiting for time management		 0	 N/A	    1,230.02		  0.39
Idle	   dispatcher timer					20     100.0	    1,200.12  60.01 s	  0.38	    60.01 s    60.01 s	  60.01 s   264.60us
Idle	   AQPC idle						40     100.0	    1,200.03  30.00 s	  0.38	    30.00 s    30.00 s	  30.00 s    53.39us
Idle	   Data Guard: Gap Manager				20	 0.0	    1,200.01  60.00 s	  0.38	    60.00 s    60.00 s	  60.00 s    90.16us
Idle	   Data Guard: Timer					 2	 0.0	    1,200.00 600.00 s	  0.38	   600.00 s   600.00 s	 600.00 s   271.53us
Idle	   smon timer						32	 3.1	    1,190.56  37.21 s	  0.38	    41.22 s    30.51 s	  51.93 s    15.15 s
Idle	   PX Deq: Execute Reply				16	 0.0		0.04   2.74ms	  0.00	     2.54ms	2.22ms	   2.86ms   453.62us
Idle	   PX Deq Credit: send blkd				65	 0.0		0.04 663.29us	  0.00	   663.29us   663.29us	 663.29us
Idle	   PX Deq: Parse Reply					16	 0.0		0.04   2.21ms	  0.00	     2.69ms	1.92ms	   3.47ms     1.09ms
Idle	   RMA: IPC0 completion sync			     1,340	 0.0		0.03  24.72us	  0.00	    24.72us    24.21us	  25.24us   729.27ns
Idle	   SQL*Net message from client				36	 0.0		0.03 726.11us	  0.00	   737.85us   526.47us	 949.24us   298.94us
Idle	   heartbeat monitor sleep				 3	 0.0		0.00 179.67us	  0.00	   179.67us   179.67us	 179.67us
			  --------------------------------------------------------------------------------------------------------------------

Wait Event Histogram (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
AQ: RAC AQ Network	   12.3K					    1.7     82.5     10.7      3.3	1.2	 0.5	  0.1	0.0(3)	 0.0(1)
ASM IO for non-blocking p 118.6K				   1.1	   67.0     20.8      5.5      2.8	1.5	 0.9	  0.3	   0.1	0.0(20)   0.0(6)
ASM background starting        2				 100.0
ASM file metadata operati   6719			  0.1	  12.5	    1.4     39.2     12.4      5.6	6.6	 4.8	  0.9	   3.4	    5.4      5.9      0.6      0.7	0.3	 0.1   0.0(2)
AWR Flush		      10				  80.0	   20.0
CGS wait for IPC msg	   13.3K					   12.0     74.5      9.3      2.9	0.9	 0.3	  0.1	0.0(1)	 0.0(1)
CSS initialization	      36					    5.6     38.9      2.8      2.8						     2.8     47.2
CSS operation: action	      92					   20.7      1.1				 1.1	 13.0	  55.4	    4.3      3.3      1.1
CSS operation: data query     36											16.7	 30.6	  30.6	   22.2
CSS operation: data updat     40												 70.0	  30.0
CSS operation: query	     108				  67.6	   13.0      0.9      1.9				  0.9	  13.0	    1.9      0.9
DFS lock handle 	     560							      0.2      0.2	0.7	41.6	 42.9	  12.3	    2.0      0.2
DLM cross inst call compl    356						     6.7      0.6      1.1	1.1	36.2	 37.9	   3.1	    0.8      0.8      8.7      0.8	1.1	 0.6	  0.3
Data file init write	      82																     25.6     28.0     45.1	 1.2
Disk file Mirror Read	    1758								       0.1     21.7	20.0	 17.9	  23.7	    5.7      3.1      2.8      3.0	1.6	 0.3
Disk file operations I/O    1097				   1.6	    4.1      7.1      5.6     14.5     43.3	19.9	  3.0	   0.7	    0.1      0.1
GCR CSS group query	      36					   75.0     16.7      5.6		2.8
GCR CSS group update	      36					   83.3     11.1      5.6
IMR slave acknowledgement   3696					    8.8     13.2      6.0     21.1     12.7	16.1	  7.5	   9.1	    1.7      0.9      0.9      1.2	0.6	 0.1
IPC group service call	     945				   0.4	    0.3     15.2     37.8     36.5	7.2	 1.8	  0.6	   0.1
IPC send completion sync    1269					    1.3     81.2     10.9      2.4	1.5	 1.3	  0.7	   0.6
KJC: Wait for msg sends t   1821					    1.0      1.2     27.1     42.7     11.2	 7.1	  5.1	   2.2	    1.6      0.6      0.1					   0.1
KSV master wait 	    3109				   0.1	    7.8     16.2      3.5      8.5     22.2	 4.8	  1.3	   6.2	   12.8     13.0      1.5      1.4	0.5	 0.2	  0.1
LGWR all worker groups	    1288													   0.1	    2.5     11.4     28.0     24.5     25.2	 7.5	  0.9
LGWR any worker group	   26.5K					0.0(13)   0.0(1)      0.1      0.2	0.4	 0.7	  1.2	   3.8	   24.3     18.4     15.8     19.0     13.9	 2.1	  0.1
LGWR wait for redo copy      194			  1.0	  21.6	    3.1      1.5     15.5     16.0     12.9	13.4	 10.3	   2.6	    2.1
LGWR worker group orderin   7419				   0.3	    0.4      0.1      0.5      1.4	1.2	 1.4	  1.9	   4.0	   43.8     25.7      8.5      7.5	3.4	 0.1
PGA memory operation	     799				  46.6	   28.9     12.8      2.4      1.3	3.1	 1.6	  2.6	   0.8
PX Deq: Join ACK	      16											 6.3	 37.5	  12.5	   25.0     12.5      6.3
PX Deq: Signal ACK EXT	      16						    43.8     12.5      6.3     25.0	 6.3	  6.3
PX Deq: Slave Session Sta     32					   21.9      9.4	       9.4     12.5	34.4	  6.3	   6.3
PX Deq: reap credit	   21.4K					    5.9     79.9     10.0      2.7	0.9	 0.4	  0.2	0.0(9)	 0.0(1)
SQL*Net break/reset to cl    124				  35.5	   13.7      0.8      2.4     33.9     11.3	 0.8	  0.8	   0.8
SQL*Net message to client    234			  0.4	  83.8	   11.1      2.1      1.7		0.9
Sync ASM rebalance	     117					   38.5      1.7      0.9      1.7	4.3	 7.7	  7.7	   3.4	    0.9      0.9      8.5      9.4	2.6	10.3	  1.7
asynch descriptor resize      40				  87.5	   10.0 		       2.5
buffer busy waits	   28.9K					    0.3      0.7      0.3      2.0	2.4	 2.3	  2.4	   3.2	    6.7     19.0     20.1     22.6     12.5	 2.3	  1.7	   1.2	    0.2
control file parallel wri    729														    9.2     37.3     15.6     21.1     12.8	 3.4	  0.5
control file sequential r   8002					    6.5     13.3      1.2      2.4     33.2	31.3	 10.2	   1.4	    0.2   0.0(4)      0.1      0.1   0.0(2)
cursor: pin S		       9													 100.0
datafile move cleanup dur     41									       19.5	65.9	 12.2	   2.4
db file async I/O submit   25.1K			  0.5	  93.0	    2.0      1.7      1.5      0.7	0.4	 0.2	  0.1	0.0(6)
db file parallel read	  413.2K									    0.0(13)	 1.3	 12.0	   4.2	    8.8     40.6      7.1     13.1     12.1	 0.8   0.0(1)
db file parallel write	  109.2K					    0.2      1.3      7.2      8.0     11.2	14.6	 15.8	  13.8	   10.0      5.9      4.4      6.3	1.3  0.0(30)
db file scattered read	      75									       20.0	28.0	 32.0	   1.3	    2.7      9.3	       2.7	4.0
db file sequential read     1.9M								   0.0(20)	1.2	31.6	 15.3	   2.4	   23.8     13.2      2.3      6.5	3.7	 0.1
db file single write	      82														   22.0     28.0     15.9     26.8	4.9	 2.4
direct path sync	     124								      75.8     19.4	 4.8
direct path write	      12														   41.7      8.3     25.0	       16.7	 8.3
direct path write temp	      30														   53.3     46.7
enq: AF - task serializat      1														  100.0
enq: CF - contention	     213											15.0	 63.8	  16.9	    2.8 		       0.5	0.5		  0.5
enq: CO - master slave de     10											50.0	 30.0	  10.0	   10.0
enq: CR - block range reu    88K					 0.0(2)  0.0(14)      0.1      0.1	0.3	22.2	 49.9	  12.0	    2.8      3.0      3.5      4.6	1.2	 0.1  0.0(34)	   0.1	0.0(15)
enq: DW - contention	       7												 57.1	  42.9
enq: FB - contention	      11											45.5	 36.4	  18.2
enq: HW - contention	     393						     0.5      0.8      3.3	5.6	 6.9	  8.9	   3.1	    9.2     16.5     18.6     15.3	6.6	 0.8	  2.3	   1.8
enq: PS - contention	      23											26.1	 26.1	  39.1	    8.7
enq: PW - flush prewarm b      1												100.0
enq: RO - fast object reu     50											52.0	 26.0	  16.0	    2.0      2.0			2.0
Wait Event Histogram (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
enq: SM -  contention	       2											50.0		  50.0
enq: TA - contention	       3										       100.0
enq: TD - KTF dump entrie      4											25.0	 75.0
enq: TK - Auto Task Seria      2												 50.0	  50.0
enq: TM - contention	       3											33.3		  33.3				      33.3
enq: TO - contention	       3												 33.3	  33.3	   33.3
enq: TT - contention	       4											25.0	 25.0	  50.0
enq: US - contention	   22.9K					    1.6      2.6      1.5      8.8     12.3	 9.2	  7.5	   5.0	    6.0     19.1     12.7      8.7	3.6	 0.5	  0.5	   0.4	 0.0(5)
enq: WF - contention	      29											13.8	 41.4	  41.4	    3.4
enq: WT - contention	       7											14.3	 57.1	  28.6
gc buffer busy release	      19														   10.5     36.8     15.8     26.3	5.3	 5.3
gc cr block 2-way	    6253							      0.2      0.6	0.7	28.8	 48.8	  14.9	    5.2      0.8      0.1   0.0(1)
gc cr block busy	      59													   1.7	    5.1      3.4     23.7     13.6     35.6	15.3	  1.7
gc cr block congested	      13													   7.7	   53.8     23.1     15.4
gc cr block lost	       3																							  100.0
gc cr disk read 	      71										2.8	53.5	 32.4	   9.9		     1.4
gc cr grant 2-way	  285.4K							      0.3      1.0	3.1	46.9	 36.9	   9.7	    1.7      0.4      0.1  0.0(16)	      0.0(1)   0.0(1)		 0.0(1)
gc cr grant busy	    8739						     0.1   0.0(4)      0.1	0.3	12.8	 58.1	  22.3	    4.6      0.9      0.5      0.2	      0.0(3)
gc cr grant congested	     567												  0.2	  28.7	   50.3     15.0      5.3			 0.2	  0.4
gc cr multi block grant   198.4K						 0.0(13)  0.0(35)      0.1	0.1	 2.4	 43.6	  42.2	    9.4      1.6      0.4      0.1  0.0(33)   0.0(5)  0.0(10)
gc cr multi block mixed    17.5K							   0.0(4)      0.2	0.2	 0.4	 20.0	  54.3	   21.0      2.5      1.1      0.1				0.0(3)	 0.0(3)
gc current block 2-way	   49.3K							      0.1      0.6	0.5	15.5	 61.6	  18.4	    2.7      0.6      0.1   0.0(2)
gc current block busy	   15.8K							      0.2      0.7	0.7	34.7	 49.5	  12.0	    1.5      0.4      0.2   0.0(7)   0.0(5)	 0.1   0.0(4)
gc current block congeste    150													  18.0	   54.7     23.3      4.0
gc current block lost	       3																						  33.3	   66.7
gc current grant 2-way	  379.3K						  0.0(1)      0.4      0.9	3.3	48.0	 35.9	   9.4	    1.6      0.4      0.1   0.0(7)				0.0(1)
gc current grant busy	   12.7K						  0.0(5)      0.1      0.1	0.3	15.0	 56.6	  22.2	    4.1      1.0      0.4      0.1   0.0(4)   0.0(1)			 0.0(1)
gc current grant congeste    708								       0.1				  28.1	   50.1     15.7      4.9      0.4		 0.3	  0.3
gc current grant read-mos  72.9K						 0.0(18)  0.0(20)      0.1	0.1	 3.2	 44.8	  41.7	    8.8      1.1      0.2  0.0(24)   0.0(5)   0.0(1)
gc current multi block re     11												 27.3	  45.5	   18.2      9.1
gc current retry	       1														  100.0
gc quiesce		       1							    100.0
gcs drm freeze in enter s     45																	       4.4	8.9	82.2	  4.4
gcs log flush sync	    3162					    0.6      2.9      9.6     15.9     15.3	19.9	 17.3	   9.1	    6.0      2.1      1.1      0.3
gcs remastering wait for      14					   14.3      7.1				14.3		   7.1				       7.1		14.3	 35.7
ges enter server mode	     13K			  0.4	  93.8	    2.7      1.3      1.1      0.3	0.2	 0.1   0.0(5)	0.0(5)	 0.0(3)   0.0(2)
ges inquiry response	   21.8K					 0.0(1)   0.0(2)      0.1      0.1	0.4	28.7	 57.5	  11.0	    1.7      0.4   0.0(9)
ges ipc enter server mode    595			  0.3	  83.0	   12.8      1.5      1.3      0.5	0.2	 0.2	  0.2
ges lms sync during dynam     70										2.9	 2.9	  7.1	   5.7	    7.1      4.3     17.1     42.9     10.0
ges resource directory to      9			 11.1	  88.9
ges2 LMON to wake up LMD      34					    5.9     26.5      5.9     14.7     23.5	20.6	  2.9
kfk: async disk IO	      82									       23.2	18.3	  8.5		   19.5     14.6      6.1      7.3	2.4
kjctssqmg: quick message     291					   14.1     20.6      3.8      2.7	2.7	17.2	 28.9	   8.9	    1.0
ksxr poll remote instance  88.4K					    0.6     86.7      6.5      4.3	1.1	 0.5	  0.2	   0.1	 0.0(9)   0.0(3)
latch free		    4208					    7.1      3.7      8.9     18.9     23.5	18.5	 11.1	   6.7	    1.3      0.5
latch: MGA shared context      3								     100.0
latch: cache buffers chai     83					    9.6      3.6      4.8     20.5     12.0	24.1	 16.9	   6.0	    2.4
latch: cache buffers lru     845					   13.0      1.2      5.0     17.9     19.2	19.1	 17.0	   5.4	    1.9      0.4
latch: call allocation	       1									      100.0
latch: checkpoint queue l     18					   33.3 	      5.6     22.2     16.7	11.1	  5.6	   5.6
latch: enqueue hash chain  13.3K				0.0(6)	   10.7      1.6      5.0     18.4     22.1	20.1	 13.5	   6.1	    1.8      0.5      0.1
latch: gc element	     448					    5.8      0.7      6.0     11.2     18.5	22.1	 18.5	  11.6	    3.8      1.6      0.2
latch: gcs resource hash     621					    9.8      5.2     11.8     15.1     17.2	17.9	 13.0	   6.6	    2.3      0.6      0.5
latch: ges resource hash    1893					    7.5      1.8     10.5     19.3     22.3	19.5	 11.8	   4.9	    1.9      0.4      0.1
latch: messages 	      87					   18.4      2.3      5.7     20.7     26.4	11.5	 11.5	   2.3	    1.1
latch: object queue heade    124					    3.2      1.6      1.6     13.7     17.7	25.8	 25.0	   7.3	    3.2      0.8
latch: redo allocation	     214					   13.6      0.9      8.4     16.8     21.0	15.4	 17.8	   4.2	    0.9      0.5      0.5
latch: redo writing	      13					   15.4 		       7.7     23.1	23.1	 23.1	   7.7
latch: shared pool	       1										       100.0
latch: undo global data      147					   12.2      2.7      4.1     25.2     21.8	17.0	  8.8	   6.8	    0.7      0.7
Wait Event Histogram (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
libcache interrupt action   1885			  7.5	  87.3	    3.1      0.8      0.6      0.3	0.1	 0.1
library cache lock	      30											60.0	 20.0	  16.7	    3.3
library cache pin	      27							      3.7			55.6	 33.3	   7.4
lock deadlock retry	       4					   50.0     50.0
log file parallel write    54.9K														    1.5     16.6     23.0     27.5     25.8	 5.2	  0.4	0.0(2)
log file sequential read     836						     6.0     13.9      1.9	1.6	13.6	 30.1	  11.4	   15.6      2.6      2.2      1.1	0.1
log file sync		      13												  7.7	   7.7		     7.7      7.7      7.7     15.4	30.8	 15.4
name-service call wait	       6												 83.3	  16.7
oracle thread bootstrap       11																      9.1     63.6     27.3
os thread creation	      11												  9.1	  45.5	   36.4      9.1
reliable message	   21.8K												  0.1	   1.4	   69.8     26.8      1.5      0.3	0.2   0.0(6)   0.0(2)	0.0(1)		  0.0(1)
row cache lock		      43											 4.7	 46.5	  32.6	   16.3
row cache mutex 	     276				   0.7	   15.2      8.7     10.5      5.1	3.6	 3.6	  2.9	   3.3	    1.1      2.2     42.4      0.7
undo segment extension	     189					   18.0     11.6      0.5      1.6	1.1	 0.5		   1.6			     33.9     21.2	7.4	 1.6	  1.1
undo_retention publish re      4				  75.0	   25.0
wait list latch free	       4													 100.0
			  --------------------------------------------------------------------------------------------------------------------


System Statistics			   DB/Inst: P30DB/p30db1  Snaps: 68-69

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	       Reads	    Reads	Writes	   Size (k)	 Changes	Calls	     Execs	 Parses     Logons	   Txns
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	   7,234,630	4,253,774      709,396	    598,226    1,801,188	  166	   331,888	 23,955 	14	 45,987
   2	   5,253,488	2,771,694      414,191	    355,398	 952,260	  269	   194,308	  1,366 	14	 28,839
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	  12,488,118	7,025,468    1,123,587	    953,623    2,753,448	  435	   526,196	 25,321 	28	 74,826
 Avg	   6,244,059	3,512,734      561,794	    476,812    1,376,724	  218	   263,098	 12,661 	14	 37,413
 Std	   1,400,879	1,047,989      208,741	    171,705	 600,283	   73	    97,284	 15,973 	 0	 12,125
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Second		   DB/Inst: P30DB/p30db1  Snaps: 68-69

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	     Reads/s	  Reads/s     Writes/s	 Size (k)/s    Changes/s      Calls/s	   Execs/s     Parses/s   Logons/s	 Txns/s
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	   11,717.20	  6,889.4      1,148.9	      968.9	 2,917.2	  0.3	     537.5	   38.8       0.02	   74.5
   2	    8,507.91	  4,488.7	 670.8	      575.6	 1,542.2	  0.4	     314.7	    2.2       0.02	   46.7
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	   20,225.10	 11,378.1      1,819.7	    1,544.4	 4,459.4	  0.7	     852.2	   41.0       0.05	  121.2
 Avg	   10,112.55	  5,689.1	 909.9	      772.2	 2,229.7	  0.4	     426.1	   20.5       0.02	   60.6
 Std	    2,269.31	  1,697.6	 338.1	      278.1	   972.3	  0.1	     157.6	   25.9       0.00	   19.6
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Transaction	   DB/Inst: P30DB/p30db1  Snaps: 68-69

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	    Reads/tx	 Reads/tx    Writes/tx	Size (k)/tx   Changes/tx     Calls/tx	  Execs/tx    Parses/tx  Logons/tx
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ----------
   1	      157.32	     92.5	  15.4	       13.0	    39.2	  0.0	       7.2	    0.5       0.00
   2	      182.17	     96.1	  14.4	       12.3	    33.0	  0.0	       6.7	    0.0       0.00
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~
 Avg	      169.74	     94.3	  14.9	       12.7	    36.1	  0.0	       7.0	    0.3       0.00
			  --------------------------------------------------------------------------------------------------------------------


SysStat and Global Messaging  - RAC	   DB/Inst: P30DB/p30db1  Snaps: 68-69

	   Blocks Received	      Blocks Served	       CPU (seconds)						Messages				       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir	  Lost	  Failure
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	    92,749	35,036	      16,568	   1,546	  N/A	       0	3,620,100	 114,761      5,024,784     116,005	 615,662   2,302,851	    14		0
   2	    16,754	 1,569	      93,159	  35,161	  N/A	       0	5,034,601	 114,012      3,630,352     114,970	 314,140   1,006,460	     2		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	   109,503	36,605	     109,727	  36,707	    0	       0	8,654,701	 228,773      8,655,136     230,975	 929,802   3,309,311	    16		0
 Avg	    54,752	18,303	      54,864	  18,354	  N/A	       0	4,327,351	 114,387      4,327,568     115,488	 464,901   1,654,656	     8		0
 Std	    53,737	23,665	      54,158	  23,769	  N/A	       0	1,000,203	     530	986,012 	732	 213,208     916,687	     8		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Sec)- RACDB/Inst: P30DB/p30db1  Snaps: 68-69

     Blocks Received Per Second   Blocks Served per Second   CPU seconds per Second				     Messages Per Second				  GC Blks     GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent    GES Sent  Sent Direct  Sent Indir	Lost/s	   Fail/s
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	    150.22	 56.74	       26.83	    2.50	  N/A	    0.00	 5,863.11	  185.87       8,138.13      187.88	   997.1    3,729.69	     0		0
   2	     27.13	  2.54	      150.87	   56.94	  N/A	    0.00	 8,153.42	  184.64       5,879.27      186.19	   508.7    1,629.94	     0		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	    177.35	 59.29	      177.70	   59.45	 0.00	    0.00	14,016.53	  370.51      14,017.41      374.07	 1,505.9    5,359.63	     0		0
 Avg	     88.67	 29.64	       88.85	   29.72	  N/A	    0.00	 7,008.27	  185.25       7,008.70      187.04	   752.9    2,679.82	     0		0
 Std	     87.03	 38.33	       87.71	   38.49	  N/A	    0.00	 1,619.50	    0.87       1,597.25        1.20	   345.3    1,484.75	     0		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Tx)- RAC DB/Inst: P30DB/p30db1  Snaps: 68-69

	Blocks Received per Tx	      Blocks Served	    CPU (seconds) per Tx				Messages per Transaction			       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   ------	--------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir   Lost/T	 Fail/Tx
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   ------	--------
   1	      2.02	  0.76		0.36	    0.03	  N/A	    0.00	    78.72	    2.50	 109.27        2.52	    13.4       50.08	  0.0	     0.0
   2	      0.58	  0.05		3.23	    1.22	  N/A	    0.00	   174.58	    3.95	 125.88        3.99	    10.9       34.90	  0.0	     0.0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~	~~~~~~~~
 Avg	      1.30	  0.41		1.80	    0.63	  N/A	    0.00	   126.65	    3.22	 117.57        3.25	    12.1       42.49	  0.0	     0.0
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Efficiency Percentages	   DB/Inst: P30DB/p30db1  Snaps: 68-69

	       Buffer Access
       -----------------------------
  I#	   Local % Remote %   Disk %	Locality %
----   ----------- -------- --------   -----------
   1	     39.43     1.77    58.80	     58.72
   2	     46.89     0.35    52.76	     69.65
			  --------------------------------------------------------------------------------------------------------------------

Global Latency Characteristics		   DB/Inst: P30DB/p30db1  Snaps: 68-69

				CR Blocks				  CU Blocks
		 ---------------------------------------   ---------------------------------------
	GE Get	   Receive     Build	 Flush Log Flush     Receive	   Pin	   Flush Log Flush
  I# Time (us)	 Time (us) Time (us) Time (us) CR Srvd %   Time (us) Time (us) Time (us) CU Srvd %
---- ---------	 --------- --------- --------- ---------   --------- --------- --------- ---------
   1	    84	      1758	 144	 51739	     1.5	1121	     0	   72632       0.1
   2	   249	      1861	 114	 27632	     0.1	 956	 10000	   18846       0.0
			  --------------------------------------------------------------------------------------------------------------------

Global Messaging Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69

	     Queue Time (us)	    Process Time (us)	      % Messages Sent
       --------------------------   -----------------	--------------------------
  I#	   Sent  on ksxp Received   GCS msgs GES msgs	  Direct Indirect Flow Ctr
----   -------- -------- --------   -------- --------	-------- -------- --------
   1	    778     1361       14	  24	   22	    21.0     78.4      0.6
   2	    493     1046       14	  24	   25	    23.7     76.0      0.2
			  --------------------------------------------------------------------------------------------------------------------


Global CR Server Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69

			   Block Requests					   Results			 Fairness      Light		   Total
       -----------------------------------------------------   ----------------------------------------------	----------   --------	--------------------------
  I#		CR	    CU	      Data     Undo	  TX	   Current Private	 Zero  Dsk Rd	 Fail	 Down Conv	Works	   Flushes     Builds Erro
----   ----------- ----------- ----------- -------- --------   ----------- ------- ---------- ------- -------	----------   --------	---------- ---------- ----
   1	     1,526	    65	     1,526	  0	   8	     1,551	 2	    1	   38	    0	     1,432	  883		23	1,527	 0
   2	    33,737	 1,404	    33,737	  0    1,352	    35,099	 0	    0	   33	    0	    33,672	3,253		38     33,737	 0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~ ~~~~~~~ ~~~~~~~~~~ ~~~~~~~ ~~~~~~~	~~~~~~~~~~   ~~~~~~~~	~~~~~~~~~~ ~~~~~~~~~~ ~~~~
 Sum	    35,263	 1,469	    35,263	  0    1,360	    36,650	 2	    1	   71	    0	    35,104	4,136		61     35,264	 0
 Avg	    17,632	   735	    17,632	  0	 680	    18,325	 1	    1	   36	    0	    17,552	2,068		31     17,632	 0
 Std	    22,777	   947	    22,777	  0	 950	    23,722	 1	    1	    4	    0	    22,797	1,676		11     22,776	 0
			  --------------------------------------------------------------------------------------------------------------------

Global Current Server Statistics	   DB/Inst: P30DB/p30db1  Snaps: 68-69

  I#	    Pins % <100us   % <1ms  % <10ms % <100ms	% <1s	% <10s	   Flushes % <100us   % <1ms  % <10ms % <100ms	  % <1s   % <10s
---- ----------- -------- -------- -------- -------- -------- -------- ----------- -------- -------- -------- -------- -------- --------
   1	       0     0.00     0.00     0.00	0.00	 0.00	  0.00		19     0.00	0.00	36.84	 57.89	   5.26     0.00
   2	       1     0.00   100.00     0.00	0.00	 0.00	  0.00		26     0.00	0.00	42.31	 57.69	   0.00     0.00
 ~~~ ~~~~~~~~~~~						       ~~~~~~~~~~~
 Sum	       1								45
 Avg	       1								23
 Std	       1								 5
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Transfer Statistics	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested  (Cngst) - Block Transfer impacted by Remote System Load
-> All - average time of All blocks (Immed,Busy,Cngst) in us
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block		       CR Blocks		       Current Blocks		       CR Avg Time (us) 	  Current Avg Time (us)
---------   ------------   --------------------------------   --------------------------------	 ---------------------------   ---------------------------
Dest  Src   Class	      Received %Immed  %Busy %Cngst	 Received %Immed  %Busy %Cngst	    All  Immed	 Busy  Cngst	  All  Immed   Busy  Cngst
---- ----   ------------   ----------- ------ ------ ------   ----------- ------ ------ ------	 ------ ------ ------ ------   ------ ------ ------ ------
   1	2   data block		33,620	 98.5	 0.0	1.5	   91,697   83.5   16.1    0.4	   1773   1708	 6562	6035	 1125	1182	752   3963
	2   undo header 	 1,334	 97.4	 2.5	0.1		3   66.7   33.3    0.0	   1328    601	29087	2853	 1069	 730   1748    N/A
	2   others		    16	 93.8	 0.0	6.3	      768   94.8    5.2    0.0	   1389    888	  N/A	8913	  749	 632   2878    N/A

   2	1   data block		 1,534	 97.8	 1.2	1.0	   16,691   93.7    6.1    0.1	   1865   1080	62954	2965	  945	 863   2152   3653
	1   others		    26	100.0	 0.0	0.0	       34   55.9   44.1    0.0	    444    444	  N/A	 N/A	  537	 511	571    N/A
	1   undo header 	    11	 63.6	36.4	0.0		8   25.0   75.0    0.0	   4970    388	12990	 N/A	12141	1019  15848    N/A
			  --------------------------------------------------------------------------------------------------------------------

Global Cache Transfer (Immediate)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block	     Lost Blocks	 Immediate CR Blocks	     Immediate Current Blocks	   Immed CR Avg Time (us)   Immed Current Avg Time (us)
---------   ------------   --------------   ----------------------------   ----------------------------   -----------------------   -----------------------
Dest  Src   Class	     Count Time(u      Received  %2-hop   %3-hop      Received	%2-hop	 %3-hop     Total   2-hop   3-hop     Total   2-hop   3-hop
---- ----   ------------   ------- ------   ----------- ------- --------   ----------- ------- --------   ------- ------- -------   ------- ------- -------
   1	2   data block		 0    N/A	 33,120   100.0      0.0	76,577	 100.0	    0.0      1708    1708     N/A      1182    1182	N/A
	2   undo header 	 0    N/A	  1,299   100.0      0.0	     2	 100.0	    0.0       601     601     N/A	730	730	N/A
	2   others		 0    N/A	     15   100.0      0.0	   728	 100.0	    0.0       888     888     N/A	632	632	N/A
	2   undo block		 0    N/A	      0     N/A      N/A	     0	   N/A	    N/A       N/A     N/A     N/A	N/A	N/A	N/A

   2	1   data block		 0    N/A	  1,500   100.0      0.0	15,646	 100.0	    0.0      1080    1080     N/A	863	863	N/A
	1   others		 0    N/A	     26   100.0      0.0	    19	 100.0	    0.0       444     444     N/A	511	511	N/A
	1   undo header 	 0    N/A	      7   100.0      0.0	     2	 100.0	    0.0       388     388     N/A      1019    1019	N/A
	1   undo block		 0    N/A	      0     N/A      N/A	     0	   N/A	    N/A       N/A     N/A     N/A	N/A	N/A	N/A
			  --------------------------------------------------------------------------------------------------------------------


Cluster Interconnect			   DB/Inst: P30DB/p30db1  Snaps: 68-69

					 Begin					  End (if different from Begin)
		  --------------------------------------------------   --------------------------------------------------
  I# NAME	  IP Address	  Pub Source			       IP Address      Pub Source
---- ----------   --------------- --- ------------------------------   --------------- --- ------------------------------
   1 fg-priv:1	  169.254.22.248  N
   2 fg-priv:1	  169.254.31.173  N
			  --------------------------------------------------------------------------------------------------------------------

Ping Statistics 			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Latency of the roundtrip of a message from  Src Instance to the Target instances

 Instance#	       500 bytes		    8 Kbytes
-----------   --------------------------   --------------------------
		    Ping    Avg      Std	 Ping	 Avg	  Std
 Src Target	   Count Time(us)    Dev	Count Time(us)	  Dev
---- ------   ---------- -------- ------   ---------- -------- ------
   1	  1	      57      566    0.2	   62	   547	  0.2
	  2	      57      793    0.3	   62	   857	  0.4

   2	  1	      57      953    0.8	   62	   996	  0.7
	  2	      57      558    0.7	   62	   547	  0.7
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69

				   Sent (MB)							     Received (MB)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	  1,667.0      138.7	    1.1    1,344.4	  1.0	   181.8      1,540.3	   706.7	0.2	 819.0	      1.0	13.4
   2	  1,549.4      712.3	    0.2      822.4	  1.0	    13.5      1,675.4	   140.3	1.1    1,350.8	      1.0      182.2
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	  3,216.4      851.0	    1.2    2,166.8	  2.1	   195.3      3,215.7	   847.0	1.2    2,169.7	      2.1      195.6
 Avg	  1,608.2      425.5	    0.6    1,083.4	  1.0	    97.6      1,607.8	   423.5	0.6    1,084.9	      1.0	97.8
 Std	     83.1      405.6	    0.6      369.1	  0.0	   119.0	 95.6	   400.5	0.6	 376.0	      0.0      119.3
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 68-69

				  Sent (MB/s)							    Received (MB/s)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	      2.7	 0.2	    0.0        2.2	  0.0	     0.3	  2.5	     1.1	0.0	   1.3	      0.0	 0.0
   2	      2.5	 1.2	    0.0        1.3	  0.0	     0.0	  2.7	     0.2	0.0	   2.2	      0.0	 0.3
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	      5.2	 1.4	    0.0        3.5	  0.0	     0.3	  5.2	     1.4	0.0	   3.5	      0.0	 0.3
 Avg	      2.6	 0.7	    0.0        1.8	  0.0	     0.2	  2.6	     0.7	0.0	   1.8	      0.0	 0.2
 Std	      0.1	 0.7	    0.0        0.6	  0.0	     0.2	  0.2	     0.6	0.0	   0.6	      0.0	 0.2
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> null means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	  9,689.6    5,511,949	     0	     0	     0	     0	       6,479.9	  5,597,791	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	  2,273.4    2,773,376	     0	     0	     0	     0	       2,231.5	  3,916,854	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.2	   638	     0	     0	     0	     0		   0.1		616	  0	  0	  0	  0
       fg-pub:1   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:3   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      2.0	 3,056	     0	     0	     0	     0		   1.2	      3,099	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		     45.7      451,412	     0	     0	     0	     0		  45.7	    451,412	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	  6,542.7    5,712,709	     0	     0	     0	     0	       9,591.1	  5,339,587	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	  2,211.0    3,110,277	     0	     0	     0	     0	       2,283.3	  3,593,949	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.1	   616	     0	     0	     0	     0		   0.2		635	  0	  0	  0	  0
       fg-pub:1   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      2.0	 3,065	     0	     0	     0	     0		   1.2	      3,116	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		     14.4      242,920	     0	     0	     0	     0		  14.4	    242,920	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							 20,781.2   17,810,018	     0	     0	     0	     0	      20,648.5	 19,149,979	  0	  0	  0	  0
 Avg							  1,222.4    1,047,648	     0	     0	     0	     0	       1,214.6	  1,126,469	  0	  0	  0	  0
 Std							  2,754.0    1,968,283	     0	     0	     0	     0	       2,728.2	  2,043,214	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> Blank  means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	     15.7	 8,927	     0	     0	     0	     0		  10.5	      9,066	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	      3.7	 4,492	     0	     0	     0	     0		   3.6	      6,344	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.0	     1	     0	     0	     0	     0		   0.0		  1	  0	  0	  0	  0
       fg-pub:1   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:3   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.1	   731	     0	     0	     0	     0		   0.1		731	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	     10.6	 9,252	     0	     0	     0	     0		  15.5	      8,647	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	      3.6	 5,037	     0	     0	     0	     0		   3.7	      5,820	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.0	     1	     0	     0	     0	     0		   0.0		  1	  0	  0	  0	  0
       fg-pub:1   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.0	   393	     0	     0	     0	     0		   0.0		393	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							     33.7	28,844	     0	     0	     0	     0		  33.4	     31,014	  0	  0	  0	  0
 Avg							      2.0	 1,697	     0	     0	     0	     0		   2.0	      1,824	  0	  0	  0	  0
 Std							      4.5	 3,188	     0	     0	     0	     0		   4.4	      3,309	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Dynamic Remastering Statistics		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Affinity Objects - Affinity objects remastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot

				   Counts per Ops					 Time per Ops (seconds) 			 Affinity Objects		  Read Mostly Objects
		---------------------------------------------------   -----------------------------------------------------------   -------------------------	--------------------------------------
     Remaster	  Remastered Replay Locks Replay Locks	  Resources														    Begin
  I#	  Ops	     Objects	 Received	  Sent	    Cleaned    Remaster    Freeze   Cleanup    Replay  Fixwrite      Sync	   Begin	  End	       Begin (persistent)	   End
---- --------	------------ ------------ ------------ ------------   --------- --------- --------- --------- --------- ---------   ------------ ------------	------------ ------------ ------------
   1	    1		 5.0	      0.0      2,181.0		0.0	   0.89      0.03      0.17	 0.26	   0.11      0.29	      10	    9		   1		0	     1
   2	    1		 5.0	  2,181.0	   0.0		0.0	   0.86      0.01      0.16	 0.26	   0.21      0.19	      10	   13		   1		0	     1
 ~~~ ~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~   ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~   ~~~~~~~~~~~~ ~~~~~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~
 Avg	    1		 5.0	  1,090.5      1,090.5		0.0	   0.88      0.02      0.17	 0.26	   0.16      0.24	      10	   11		   1		0	     1
 Max				  2,181.0      2,181.0		0.0	   0.89      0.03      0.17	 0.26	   0.21      0.29	      10	   13		   1		0	     1
			  --------------------------------------------------------------------------------------------------------------------


SQL ordered by Elapsed Time (Global)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Captured SQL account for   98.7% of Total DB Time (s):	   18,234
-> Captured PL/SQL account for	 99.6% of Total DB Time (s):	      18,234

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	  Elapsed (s)	  CPU (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	DB time   DB CPU  IO Wait     Gets    Reads  Cluster	Execs
-------------	------------- ----------- ----------- -------------- ------------ ------------ ----------- ------------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	    10,653.64	   649.57    9,771.74	   7,585,528	5,924,543      420,679	    543.40	420,666 	   0.03        0.00	   0.02 	  18.0	       14.1	     1.0	0.00	   58.4     49.3      0.6     60.7     84.3	58.1	 79.9
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     7,335.12	   558.17    5,181.68	   2,957,090	1,045,646    1,113,150	    369.79	 74,210 	   0.10        0.01	   0.07 	  39.8	       14.1	    15.0	0.00	   40.2     42.3      0.3     23.7     14.9	39.6	 14.1
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

9f9w8g2xnb7pk	       569.80	    26.79      542.14	     259,402	  203,383	     1	     12.27	      1 	 569.80       26.79	 542.14      259,402.0	  203,383.0	     1.0       12.27	    3.1      2.0      0.0      2.1	2.9	 1.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

bff19a1raa4vy	       568.88	    25.67      543.48	     246,190	  192,716	     1	     10.85	      1 	 568.88       25.67	 543.48      246,190.0	  192,716.0	     1.0       10.85	    3.1      1.9      0.0      2.0	2.7	 1.2	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

dpnvk07hr10yx	       568.68	    33.70      468.23	     222,245	  139,897	     1	     28.00	      1 	 568.68       33.70	 468.23      222,245.0	  139,897.0	     1.0       28.00	    3.1      2.6      0.0      1.8	2.0	 3.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

06y2j283phcdz	       568.60	    28.03      552.79	     330,091	  255,451	     1	      0.00	      1 	 568.60       28.03	 552.79      330,091.0	  255,451.0	     1.0	0.00	    3.1      2.1      0.0      2.6	3.6	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

9c0dt5tks83kz	       567.81	    35.56      515.03	     259,004	  202,693	     1	     33.05	      1 	 567.81       35.56	 515.03      259,004.0	  202,693.0	     1.0       33.05	    3.1      2.7      0.0      2.1	2.9	 3.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

gwvc8un8ww8mb	       567.79	    35.73      514.46	     256,176	  200,631	     1	     33.85	      1 	 567.79       35.73	 514.46      256,176.0	  200,631.0	     1.0       33.85	    3.1      2.7      0.0      2.1	2.9	 3.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

a42c3p5zjh4yg	       567.54	    35.57      512.76	     256,111	  200,176	     1	     35.32	      1 	 567.54       35.57	 512.76      256,111.0	  200,176.0	     1.0       35.32	    3.1      2.7      0.0      2.1	2.8	 3.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

8p83bvqrm41hf	       567.53	    25.10      553.56	     287,752	  224,278	     1	      0.00	      1 	 567.53       25.10	 553.56      287,752.0	  224,278.0	     1.0	0.00	    3.1      1.9      0.0      2.3	3.2	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by CPU Time (Global)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Captured SQL account for   92.2% of Total CPU Time (s):	     1,318
-> Captured PL/SQL account for	 99.7% of Total CPU Time (s):		1,318

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	    CPU (s)   Elapsed (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs       CPU (s)	Elapsed (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	 DB CPU  DB time  IO Wait     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	     649.57	10,653.64    9,771.74	   7,585,528	5,924,543      420,679	    543.40	420,666 	 0.00	       0.03	   0.02 	  18.0	       14.1	     1.0	0.00	   49.3     58.4     64.9     60.7     84.3	58.1	 79.9
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     558.17	 7,335.12    5,181.68	   2,957,090	1,045,646    1,113,150	    369.79	 74,210 	 0.01	       0.10	   0.07 	  39.8	       14.1	    15.0	0.00	   42.3     40.2     34.4     23.7     14.9	39.6	 14.1
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

0hk2wm946s76n	      83.09	   566.53      280.97	     764,908	  459,376	     1	     93.97	      1 	83.09	     566.53	 280.97      764,908.0	  459,376.0	     1.0       93.97	    6.3      3.1      1.9      6.1	6.5	10.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

dg8wzzu89u0y0	      82.74	   566.62      320.97	     556,141	  332,907	     1	     90.09	      1 	82.74	     566.62	 320.97      556,141.0	  332,907.0	     1.0       90.09	    6.3      3.1      2.1      4.5	4.7	 9.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

dxc8p6cu2bx5n	      75.86	   566.60      327.81	     501,156	  243,245	     1	     87.84	      1 	75.86	     566.60	 327.81      501,156.0	  243,245.0	     1.0       87.84	    5.8      3.1      2.2      4.0	3.5	 9.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

14g8z0zv8sq36	      74.09	   566.59      368.53	     773,064	  467,187	     1	     13.76	      1 	74.09	     566.59	 368.53      773,064.0	  467,187.0	     1.0       13.76	    5.6      3.1      2.4      6.2	6.6	 1.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

30nj40b6j5jjg	      66.22	   566.41      370.38	     553,622	  269,669	     1	     49.45	      1 	66.22	     566.41	 370.38      553,622.0	  269,669.0	     1.0       49.45	    5.0      3.1      2.5      4.4	3.8	 5.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6c0z4993ppn5s	      65.19	   566.12      381.73	     664,344	  405,065	     1	     12.90	      1 	65.19	     566.12	 381.73      664,344.0	  405,065.0	     1.0       12.90	    4.9      3.1      2.5      5.3	5.8	 1.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

5pj15z95yy8bw	      57.12	   566.41      393.09	     358,419	  216,711	     1	     62.01	      1 	57.12	     566.41	 393.09      358,419.0	  216,711.0	     1.0       62.01	    4.3      3.1      2.6      2.9	3.1	 6.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

68bjwqddyrzp1	      37.23	   566.77      500.49	     216,726	  165,576	     1	     46.08	      1 	37.23	     566.77	 500.49      216,726.0	  165,576.0	     1.0       46.08	    2.8      3.1      3.3      1.7	2.4	 4.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by User I/O Time (Global)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Captured SQL account for   99.4% of Total User I/O Wait Time (s):	      15,049
-> Captured PL/SQL account for	 99.6% of Total User I/O Wait Time (s): 	 15,049

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	 IOWait (s)   Elapsed (s)     CPU (s)		Gets	    Reads	  Rows Cluster (s)	  Execs    IOWait (s)	Elapsed (s)	CPU (s) 	  Gets	      Reads	    Rows Cluster (s)	IO Wait  DB time   DB CPU     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   9,771.74	10,653.64      649.57	   7,585,528	5,924,543      420,679	    543.40	420,666 	 0.02	       0.03	   0.00 	  18.0	       14.1	     1.0	0.00	   64.9     58.4     49.3     60.7     84.3	58.1	 79.9
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	   5,181.68	 7,335.12      558.17	   2,957,090	1,045,646    1,113,150	    369.79	 74,210 	 0.07	       0.10	   0.01 	  39.8	       14.1	    15.0	0.00	   34.4     40.2     42.3     23.7     14.9	39.6	 14.1
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

68bjwqddyrzp1	     500.49	   566.77	37.23	     216,726	  165,576	     1	     46.08	      1        500.49	     566.77	  37.23      216,726.0	  165,576.0	     1.0       46.08	    3.3      3.1      2.8      1.7	2.4	 4.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5pj15z95yy8bw	     393.09	   566.41	57.12	     358,419	  216,711	     1	     62.01	      1        393.09	     566.41	  57.12      358,419.0	  216,711.0	     1.0       62.01	    2.6      3.1      4.3      2.9	3.1	 6.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6c0z4993ppn5s	     381.73	   566.12	65.19	     664,344	  405,065	     1	     12.90	      1        381.73	     566.12	  65.19      664,344.0	  405,065.0	     1.0       12.90	    2.5      3.1      4.9      5.3	5.8	 1.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

30nj40b6j5jjg	     370.38	   566.41	66.22	     553,622	  269,669	     1	     49.45	      1        370.38	     566.41	  66.22      553,622.0	  269,669.0	     1.0       49.45	    2.5      3.1      5.0      4.4	3.8	 5.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

14g8z0zv8sq36	     368.53	   566.59	74.09	     773,064	  467,187	     1	     13.76	      1        368.53	     566.59	  74.09      773,064.0	  467,187.0	     1.0       13.76	    2.4      3.1      5.6      6.2	6.6	 1.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

dxc8p6cu2bx5n	     327.81	   566.60	75.86	     501,156	  243,245	     1	     87.84	      1        327.81	     566.60	  75.86      501,156.0	  243,245.0	     1.0       87.84	    2.2      3.1      5.8      4.0	3.5	 9.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

dg8wzzu89u0y0	     320.97	   566.62	82.74	     556,141	  332,907	     1	     90.09	      1        320.97	     566.62	  82.74      556,141.0	  332,907.0	     1.0       90.09	    2.1      3.1      6.3      4.5	4.7	 9.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0hk2wm946s76n	     280.97	   566.53	83.09	     764,908	  459,376	     1	     93.97	      1        280.97	     566.53	  83.09      764,908.0	  459,376.0	     1.0       93.97	    1.9      3.1      6.3      6.1	6.5	10.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Gets (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total Buffer Gets:	   12,488,118
-> Captured SQL account for   85.3% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id		  Gets	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	    Gets	Reads	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	   Gets    Reads  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	-------------- ------------ ------------- ----------- ----------- ------------ ----------- ------------   -------------- ------------ ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	     7,585,528	  5,924,543	10,653.64      649.57	 9,771.74      420,679	    543.40	420,666 	    18.0	 14.1	       0.03	   0.00        0.02	     1.0	0.00	   60.7     84.3     58.4     49.3     64.9	58.1	 79.9
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     2,957,090	  1,045,646	 7,335.12      558.17	 5,181.68    1,113,150	    369.79	 74,210 	    39.8	 14.1	       0.10	   0.01        0.07	    15.0	0.00	   23.7     14.9     40.2     42.3     34.4	39.6	 14.1
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

14g8z0zv8sq36	       773,064	    467,187	   566.59	74.09	   368.53	     1	     13.76	      1        773,064.0    467,187.0	     566.59	  74.09      368.53	     1.0       13.76	    6.2      6.6      3.1      5.6	2.4	 1.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

0hk2wm946s76n	       764,908	    459,376	   566.53	83.09	   280.97	     1	     93.97	      1        764,908.0    459,376.0	     566.53	  83.09      280.97	     1.0       93.97	    6.1      6.5      3.1      6.3	1.9	10.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

6c0z4993ppn5s	       664,344	    405,065	   566.12	65.19	   381.73	     1	     12.90	      1        664,344.0    405,065.0	     566.12	  65.19      381.73	     1.0       12.90	    5.3      5.8      3.1      4.9	2.5	 1.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

dg8wzzu89u0y0	       556,141	    332,907	   566.62	82.74	   320.97	     1	     90.09	      1        556,141.0    332,907.0	     566.62	  82.74      320.97	     1.0       90.09	    4.5      4.7      3.1      6.3	2.1	 9.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

30nj40b6j5jjg	       553,622	    269,669	   566.41	66.22	   370.38	     1	     49.45	      1        553,622.0    269,669.0	     566.41	  66.22      370.38	     1.0       49.45	    4.4      3.8      3.1      5.0	2.5	 5.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

dxc8p6cu2bx5n	       501,156	    243,245	   566.60	75.86	   327.81	     1	     87.84	      1        501,156.0    243,245.0	     566.60	  75.86      327.81	     1.0       87.84	    4.0      3.5      3.1      5.8	2.2	 9.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

95x8tdmpy1k78	       451,466	    342,429	   566.49	36.08	   545.65	     1	      0.00	      1        451,466.0    342,429.0	     566.49	  36.08      545.65	     1.0	0.00	    3.6      4.9      3.1      2.7	3.6	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

5pj15z95yy8bw	       358,419	    216,711	   566.41	57.12	   393.09	     1	     62.01	      1        358,419.0    216,711.0	     566.41	  57.12      393.09	     1.0       62.01	    2.9      3.1      3.1      4.3	2.6	 6.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Reads (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total Disk Reads:	   7,025,468
-> Captured SQL account for   99.2% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Reads	       Gets   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	 Reads		 Gets	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	  Reads     Gets  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	------------ -------------- ------------- ----------- ----------- ------------ ----------- ------------   ------------ -------------- ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   5,924,543	  7,585,528	10,653.64      649.57	 9,771.74      420,679	    543.40	420,666 	  14.1		 18.0	       0.03	   0.00        0.02	     1.0	0.00	   84.3     60.7     58.4     49.3     64.9	58.1	 79.9
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	   1,045,646	  2,957,090	 7,335.12      558.17	 5,181.68    1,113,150	    369.79	 74,210 	  14.1		 39.8	       0.10	   0.01        0.07	    15.0	0.00	   14.9     23.7     40.2     42.3     34.4	39.6	 14.1
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

14g8z0zv8sq36	     467,187	    773,064	   566.59	74.09	   368.53	     1	     13.76	      1      467,187.0	    773,064.0	     566.59	  74.09      368.53	     1.0       13.76	    6.6      6.2      3.1      5.6	2.4	 1.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

0hk2wm946s76n	     459,376	    764,908	   566.53	83.09	   280.97	     1	     93.97	      1      459,376.0	    764,908.0	     566.53	  83.09      280.97	     1.0       93.97	    6.5      6.1      3.1      6.3	1.9	10.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

6c0z4993ppn5s	     405,065	    664,344	   566.12	65.19	   381.73	     1	     12.90	      1      405,065.0	    664,344.0	     566.12	  65.19      381.73	     1.0       12.90	    5.8      5.3      3.1      4.9	2.5	 1.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

95x8tdmpy1k78	     342,429	    451,466	   566.49	36.08	   545.65	     1	      0.00	      1      342,429.0	    451,466.0	     566.49	  36.08      545.65	     1.0	0.00	    4.9      3.6      3.1      2.7	3.6	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

dg8wzzu89u0y0	     332,907	    556,141	   566.62	82.74	   320.97	     1	     90.09	      1      332,907.0	    556,141.0	     566.62	  82.74      320.97	     1.0       90.09	    4.7      4.5      3.1      6.3	2.1	 9.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

30nj40b6j5jjg	     269,669	    553,622	   566.41	66.22	   370.38	     1	     49.45	      1      269,669.0	    553,622.0	     566.41	  66.22      370.38	     1.0       49.45	    3.8      4.4      3.1      5.0	2.5	 5.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

06y2j283phcdz	     255,451	    330,091	   568.60	28.03	   552.79	     1	      0.00	      1      255,451.0	    330,091.0	     568.60	  28.03      552.79	     1.0	0.00	    3.6      2.6      3.1      2.1	3.7	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

dxc8p6cu2bx5n	     243,245	    501,156	   566.60	75.86	   327.81	     1	     87.84	      1      243,245.0	    501,156.0	     566.60	  75.86      327.81	     1.0       87.84	    3.5      4.0      3.1      5.8	2.2	 9.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by UnOptimized Read Requests (Global)DB/Inst: P30DB/p30db1	Snaps:
-> Total Physical Read Requests:       7,025,142
-> Captured SQL account for    0.3% of Total
-> Total UnOptimized Read Requests:	  7,025,142
-> Captured SQL account for    0.3% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

								       Total													 Per Execution									    Percentage of Total
		------------------------------------------------------------------------------------------------------------------   -----------------------------------------------------------------------------------------------------   -----------------------------------------------------------------
   SQL Id	 UnOptimized	 Requests	 Reads	 Elapsed (s)	 CPU (s)  IOWait (s)	     Rows Cluster (s)	     Execs    UnOptimized     Requests	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)   UnOptimized Requests  Reads DB time DB CPU IO Wait Cluster  Execs
-------------	------------ ------------ ------------ ------------- ----------- ----------- ------------ ----------- ------------   ------------ ------------ ------------ ------------- ----------- ----------- ------------ -----------   ----------- -------- ------ ------- ------ ------- ------- ------
14g8z0zv8sq36	     467,210	  467,210      467,187	      566.59	   74.09      368.53		1	13.76		 1	467,210.0    467,210.0	  467,187.0	   566.59	74.09	   368.53	   1.0	     13.76	     6.7      6.7    6.6     3.1    5.6     2.4     1.5    0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

0hk2wm946s76n	     459,445	  459,445      459,376	      566.53	   83.09      280.97		1	93.97		 1	459,445.0    459,445.0	  459,376.0	   566.53	83.09	   280.97	   1.0	     93.97	     6.5      6.5    6.5     3.1    6.3     1.9    10.1    0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

6c0z4993ppn5s	     405,134	  405,134      405,065	      566.12	   65.19      381.73		1	12.90		 1	405,134.0    405,134.0	  405,065.0	   566.12	65.19	   381.73	   1.0	     12.90	     5.8      5.8    5.8     3.1    4.9     2.5     1.4    0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

95x8tdmpy1k78	     342,429	  342,429      342,429	      566.49	   36.08      545.65		1	 0.00		 1	342,429.0    342,429.0	  342,429.0	   566.49	36.08	   545.65	   1.0	      0.00	     4.9      4.9    4.9     3.1    2.7     3.6     0.0    0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

dg8wzzu89u0y0	     332,930	  332,930      332,907	      566.62	   82.74      320.97		1	90.09		 1	332,930.0    332,930.0	  332,907.0	   566.62	82.74	   320.97	   1.0	     90.09	     4.7      4.7    4.7     3.1    6.3     2.1     9.6    0.0
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

30nj40b6j5jjg	     269,738	  269,738      269,669	      566.41	   66.22      370.38		1	49.45		 1	269,738.0    269,738.0	  269,669.0	   566.41	66.22	   370.38	   1.0	     49.45	     3.8      3.8    3.8     3.1    5.0     2.5     5.3    0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

06y2j283phcdz	     255,451	  255,451      255,451	      568.60	   28.03      552.79		1	 0.00		 1	255,451.0    255,451.0	  255,451.0	   568.60	28.03	   552.79	   1.0	      0.00	     3.6      3.6    3.6     3.1    2.1     3.7     0.0    0.0
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

dxc8p6cu2bx5n	     243,314	  243,314      243,245	      566.60	   75.86      327.81		1	87.84		 1	243,314.0    243,314.0	  243,245.0	   566.60	75.86	   327.81	   1.0	     87.84	     3.5      3.5    3.5     3.1    5.8     2.2     9.4    0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

8p83bvqrm41hf	     224,278	  224,278      224,278	      567.53	   25.10      553.56		1	 0.00		 1	224,278.0    224,278.0	  224,278.0	   567.53	25.10	   553.56	   1.0	      0.00	     3.2      3.2    3.2     3.1    1.9     3.7     0.0    0.0
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

5pj15z95yy8bw	     216,734	  216,734      216,711	      566.41	   57.12      393.09		1	62.01		 1	216,734.0    216,734.0	  216,711.0	   566.41	57.12	   393.09	   1.0	     62.01	     3.1      3.1    3.1     3.1    4.3     2.6     6.6    0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Executions (Global)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total Executions:	     526,196
-> Captured SQL account for   98.6% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Execs   Elapsed (s)     CPU (s)	IOWait (s)	     Gets	 Reads	       Rows Cluster (s)     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	  Execs  DB time   DB CPU  IO Wait     Gets    Reads  Cluster
-------------	------------ ------------- ----------- ----------- -------------- ------------ ------------ -----------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	     420,666	 10,653.64	649.57	  9,771.74	7,585,528    5,924,543	    420,679	 543.40 	   0.03        0.00	   0.02 	  18.0	       14.1	     1.0	0.00	   79.9     58.4     49.3     64.9     60.7	84.3	 58.1
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	      74,210	  7,335.12	558.17	  5,181.68	2,957,090    1,045,646	  1,113,150	 369.79 	   0.10        0.01	   0.07 	  39.8	       14.1	    15.0	0.00	   14.1     40.2     42.3     34.4     23.7	14.9	 39.6
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

86708bvah4akq	      21,568	      4.18	  3.65	      0.00	   68,218	     0	     21,575	   0.00 	   0.00        0.00	   0.00 	   3.2		0.0	     1.0	0.00	    4.1      0.0      0.3      0.0	0.5	 0.0	  0.0
select name from undo$ where file#=:1 and block#=:2 and ts#=:3 and status$
 != 1

24djtk7r8fz33		 834	      0.10	  0.08	      0.00	    1,784	     0		816	   0.00 	   0.00        0.00	   0.00 	   2.1		0.0	     1.0	0.00	    0.2      0.0      0.0      0.0	0.0	 0.0	  0.0
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
2 AND tsn = :3 AND objid = :4

f7xnvp44nukp7		 181	      0.83	  0.05	      0.02	      898	    12		181	   0.72 	   0.00        0.00	   0.00 	   5.0		0.1	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.1
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

fn5s5p6hr6702		 149	      0.12	  0.04	      0.06	    1,056	    13		149	   0.02 	   0.00        0.00	   0.00 	   7.1		0.1	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

3dbzmtf9ahvzt		 142	      0.03	  0.03	      0.00	      857	     3		142	   0.00 	   0.00        0.00	   0.00 	   6.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

f80h0xb1qvbsk		 119	      0.06	  0.03	      0.00	       60	     0		119	   0.00 	   0.00        0.00	   0.00 	   0.5		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

87gaftwrm2h68		 104	      0.00	  0.00	      0.00	      226	     0		 18	   0.00 	   0.00        0.00	   0.00 	   2.2		0.0	     0.2	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$
o where o.obj#=:1

6xvp6nxs4a9n4		  45	      0.01	  0.01	      0.00	       46	     0		 45	   0.00 	   0.00        0.00	   0.00 	   1.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
select nvl(sum(space),0) from recyclebin$ where ts# = :1

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Cluster Wait Time (Global)  DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Total Cluster Wait Time (s): 	    935
-> Captured SQL account for   98.0% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	Cluster (s)   Elapsed (s)     CPU (s)  IOWait (s)	    Gets	Reads	      Rows	  Execs   Cluster (s)	Elapsed (s)	CPU (s)  IOWait (s)	      Gets	  Reads 	Rows	Cluster  DB time   DB CPU     Gets  IO Wait    Reads	Execs
-------------	----------- ------------- ----------- ----------- -------------- ------------ ------------ ------------   ----------- ------------- ----------- ----------- -------------- ------------ ------------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	     543.40	10,653.64      649.57	 9,771.74      7,585,528    5,924,543	   420,679	420,666 	 0.00	       0.03	   0.00        0.02	      18.0	   14.1 	 1.0	   58.1     58.4     49.3     64.9     60.7	84.3	 79.9
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     369.79	 7,335.12      558.17	 5,181.68      2,957,090    1,045,646	 1,113,150	 74,210 	 0.00	       0.10	   0.01        0.07	      39.8	   14.1 	15.0	   39.6     40.2     42.3     34.4     23.7	14.9	 14.1
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

0hk2wm946s76n	      93.97	   566.53	83.09	   280.97	 764,908      459,376		 1	      1 	93.97	     566.53	  83.09      280.97	 764,908.0    459,376.0 	 1.0	   10.1      3.1      6.3      1.9	6.1	 6.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

dg8wzzu89u0y0	      90.09	   566.62	82.74	   320.97	 556,141      332,907		 1	      1 	90.09	     566.62	  82.74      320.97	 556,141.0    332,907.0 	 1.0	    9.6      3.1      6.3      2.1	4.5	 4.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

dxc8p6cu2bx5n	      87.84	   566.60	75.86	   327.81	 501,156      243,245		 1	      1 	87.84	     566.60	  75.86      327.81	 501,156.0    243,245.0 	 1.0	    9.4      3.1      5.8      2.2	4.0	 3.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5pj15z95yy8bw	      62.01	   566.41	57.12	   393.09	 358,419      216,711		 1	      1 	62.01	     566.41	  57.12      393.09	 358,419.0    216,711.0 	 1.0	    6.6      3.1      4.3      2.6	2.9	 3.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

30nj40b6j5jjg	      49.45	   566.41	66.22	   370.38	 553,622      269,669		 1	      1 	49.45	     566.41	  66.22      370.38	 553,622.0    269,669.0 	 1.0	    5.3      3.1      5.0      2.5	4.4	 3.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

68bjwqddyrzp1	      46.08	   566.77	37.23	   500.49	 216,726      165,576		 1	      1 	46.08	     566.77	  37.23      500.49	 216,726.0    165,576.0 	 1.0	    4.9      3.1      2.8      3.3	1.7	 2.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

ayb2zjspaq24n	      39.70	   565.58	35.87	   459.35	 206,356      133,058		 1	      1 	39.70	     565.58	  35.87      459.35	 206,356.0    133,058.0 	 1.0	    4.2      3.1      2.7      3.1	1.7	 1.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

8thj2ffrw6hnr	      39.65	   566.63	36.88	   461.46	 213,730      133,688		 1	      1 	39.65	     566.63	  36.88      461.46	 213,730.0    133,688.0 	 1.0	    4.2      3.1      2.8      3.1	1.7	 1.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '16' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
ASSM bg: segment fix monitor						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM cbk:blocks examined						  1,233 	   2.0		0.0		1.0	      0.0	    1.0 	  1.0
ASSM cbk:blocks marked full						    300 	   0.5		0.0		0.2	      0.0	    0.2 	  0.3
ASSM gsp:L1 bitmaps examined						    989 	   1.6		0.0		0.8	      0.0	    0.8 	  0.8
ASSM gsp:L2 bitmap full 						     12 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:L2 bitmaps examined						    178 	   0.3		0.0		0.1	      0.1	    0.1 	  0.2
ASSM gsp:Search all							     17 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:Search hint							     10 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ASSM gsp:Search steal							      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:bump HWM							      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:get free block 						    935 	   1.5		0.0		0.8	      0.0	    0.7 	  0.8
ASSM gsp:get free data block						    765 	   1.2		0.0		0.6	      0.1	    0.6 	  0.7
ASSM gsp:get free index block						    170 	   0.3		0.0		0.1	      0.0	    0.1 	  0.2
ASSM gsp:good hint							    824 	   1.3		0.0		0.7	      0.1	    0.6 	  0.7
ASSM rsv:fill reserve							      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ASSM wasted db state change						      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Batched IO (bound) vector count 					      6 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO block miss count					      5,228,938        8,468.5	       69.9	    4,234.3	  1,316.4	3,303.5       5,165.1
Batched IO double miss count						418,617 	 678.0		5.6	      339.0	    108.5	  262.3 	415.7
Batched IO same unit count						     12 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO single block count						  2,193 	   3.6		0.0		1.8	      0.9	    1.1 	  2.4
Batched IO vector block count					      5,226,860        8,465.2	       69.9	    4,232.6	  1,315.5	3,302.4       5,162.7
Batched IO vector read count						416,212 	 674.1		5.6	      337.0	    107.5	  261.0 	413.1
Block Cleanout Optim referenced 					     27 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
CCursor + sql area evicted						     67 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1
CPU used by this session						203,903 	 330.2		2.7	      165.1	     46.7	  132.1 	198.2
CPU used when call started						142,715 	 231.1		1.9	      115.6	     59.6	   73.5 	157.7
CR blocks created							  2,204 	   3.6		0.0		1.8	      1.4	    0.8 	  2.7
Cached Commit SCN referenced					      5,911,907        9,574.6	       79.0	    4,787.3	  1,111.4	4,001.4       5,573.2
Client Advertised Receive Window					    231 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
Client Advertised Send Window						    231 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
Client Path Maximum Transmission Unit(MTU)			      1,265,465        2,049.5	       16.9	    1,024.8	  1,402.8	   32.9       2,016.7
Client Send Congestion Window						    330 	   0.5		0.0		0.3	      0.1	    0.2 	  0.3
Client Time (usec) Last Ack Received					     23 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Time (usec) Last Data Received					     23 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Time (usec) Last Data Sent					     83 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1
Client Time (usec) Round Trip Time					 73,857 	 119.6		1.0	       59.8	     13.2	   50.5 	 69.1
Client Time (usec) Round Trip Time Variance				 75,258 	 121.9		1.0	       60.9	     14.4	   50.8 	 71.1
Client Total Bytes Acked						510,755 	 827.2		6.8	      413.6	    103.6	  340.3 	486.9
Client Total Bytes Received						200,519 	 324.8		2.7	      162.4	     36.1	  136.9 	187.9
Client Total Number of Retransmitted Packets				      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
DB time 							      1,922,759        3,114.0	       25.7	    1,557.0	    411.1	1,266.3       1,847.7
DBWR checkpoint buffers written 					 41,052 	  66.5		0.5	       33.2	     12.4	   24.5 	 42.0
DBWR checkpoints							 43,612 	  70.6		0.6	       35.3	      0.0	   35.3 	 35.3
DBWR fusion writes							    169 	   0.3		0.0		0.1	      0.1	    0.1 	  0.2
DBWR object drop buffers written					     20 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
DBWR transaction table writes						    561 	   0.9		0.0		0.5	      0.0	    0.4 	  0.5
DBWR undo block writes							 50,325 	  81.5		0.7	       40.8	     15.4	   29.9 	 51.6
DFO trees parallelized							      9 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
HSC Heap Segment Block Changes					      1,122,481        1,817.9	       15.0	      909.0	    293.4	  701.5       1,116.4
Heap Segment Array Inserts						    342 	   0.6		0.0		0.3	      0.0	    0.3 	  0.3
Heap Segment Array Updates						     17 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
KTFB alloc req								 22,390 	  36.3		0.3	       18.1	     25.6	    0.1 	 36.2
KTFB alloc space (block)					  8,111,194,112   13,136,873.5	  108,400.7	6,568,436.8   9,216,976.0      51,050.5  13,085,823.0
KTFB alloc time (ms)						    361,147,838      584,914.5	    4,826.5	  292,457.2	413,587.5	    6.7     584,907.8
KTFB apply req								 44,163 	  71.5		0.6	       35.8	     50.5	    0.1 	 71.5
KTFB apply time (ms)						      4,104,353        6,647.4	       54.9	    3,323.7	  4,697.0	    2.4       6,645.0
KTFB free req								 21,777 	  35.3		0.3	       17.6	     24.9	    0.0 	 35.3
KTFB free space (block) 						963,456        1,560.4	       12.9	      780.2	  1,100.7	    1.9       1,558.5
KTFB free time (ms)						    204,093,749      330,549.9	    2,727.6	  165,275.0	233,732.5	    1.1     330,548.8

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
PX local messages recv'd						     88 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
PX local messages sent							     88 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
PX remote messages recv'd						     96 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
PX remote messages sent 						     96 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
Parallel operations not downgraded					      9 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Requests to/from client 						    231 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
SMON posted for undo segment shrink					     30 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
SQL*Net roundtrips to/from client					    199 	   0.3		0.0		0.2	      0.1	    0.1 	  0.3
TBS Extension: tasks created						     41 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
active txn count during cleanout					    433 	   0.7		0.0		0.4	      0.1	    0.3 	  0.4
application wait time							     12 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
auto extends on undo tablespace 					     41 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
background timeouts							 10,955 	  17.7		0.1		8.9	      0.0	    8.9 	  8.9
blocks cleaned out using minact 					323,405 	 523.8		4.3	      261.9	    205.6	  116.5 	407.3
branch node splits							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
buffer is not pinned count					     17,754,485       28,754.3	      237.3	   14,377.2	  4,548.9      11,160.6      17,593.7
buffer is pinned count						      7,986,803       12,935.1	      106.7	    6,467.5	  2,899.0	4,417.7       8,517.4
bytes received via SQL*Net from client					425,206 	 688.6		5.7	      344.3	    443.9	   30.4 	658.2
bytes sent via SQL*Net to client					 42,602 	  69.0		0.6	       34.5	     26.0	   16.1 	 52.9
calls to get snapshot scn: kcmgss					653,365        1,058.2		8.7	      529.1	    236.5	  361.8 	696.3
calls to kcmgas 							158,359 	 256.5		2.1	      128.2	     49.8	   93.0 	163.5
calls to kcmgcs 							123,686 	 200.3		1.7	      100.2	    134.7	    4.9 	195.4
cell physical IO interconnect bytes				 82,603,779,584  133,781,052.0	1,103,944.9    66,890,526.0  20,560,730.4  52,351,894.1  81,429,157.9
change write time							  2,958 	   4.8		0.0		2.4	      1.2	    1.5 	  3.3
cleanout - number of ktugct calls					  4,631 	   7.5		0.1		3.7	      2.7	    1.9 	  5.6
cleanouts and rollbacks - consistent read gets				     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
cleanouts only - consistent read gets					     44 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
cluster key scan block gets						    834 	   1.4		0.0		0.7	      0.6	    0.3 	  1.1
cluster key scans							    604 	   1.0		0.0		0.5	      0.3	    0.3 	  0.7
cluster wait time							 93,293 	 151.1		1.2	       75.5	     41.5	   46.2 	104.9
commit batch/immediate performed					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit batch/immediate requested					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit cleanout failures: block lost					      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanout failures: buffer being written				      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit cleanout failures: callback failure				     29 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanouts						      1,122,443        1,817.9	       15.0	      908.9	    293.9	  701.1       1,116.8
commit cleanouts successfully completed 			      1,122,405        1,817.8	       15.0	      908.9	    293.9	  701.1       1,116.7
commit immediate performed						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit immediate requested						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit txn count during cleanout					    238 	   0.4		0.0		0.2	      0.1	    0.2 	  0.2
concurrency wait time							 74,868 	 121.3		1.0	       60.6	     85.7	    0.0 	121.2
consistent changes						      1,665,945        2,698.0	       22.3	    1,349.0	  1,815.0	   65.6       2,632.4
consistent gets 						      9,753,047       15,795.5	      130.3	    7,897.7	    377.6	7,630.7       8,164.7
consistent gets examination					      2,667,932        4,320.7	       35.7	    2,160.4	  1,553.6	1,061.8       3,258.9
consistent gets examination (fastpath)				      2,667,332        4,319.8	       35.6	    2,159.9	  1,553.6	1,061.3       3,258.5
consistent gets from cache					      9,753,047       15,795.5	      130.3	    7,897.7	    377.6	7,630.7       8,164.7
consistent gets pin						      7,085,115       11,474.7	       94.7	    5,737.4	  1,931.2	4,371.8       7,102.9
consistent gets pin (fastpath)					      5,790,505        9,378.0	       77.4	    4,689.0	  1,591.3	3,563.8       5,814.2
cursor authentications							    101 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
cursor reload failures							      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
data blocks consistent reads - undo records applied			     20 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
db block changes						      2,753,448        4,459.4	       36.8	    2,229.7	    972.3	1,542.2       2,917.2
db block gets							      2,735,038        4,429.6	       36.6	    2,214.8	  1,891.7	  877.2       3,552.4
db block gets direct							    210 	   0.3		0.0		0.2	      0.1	    0.1 	  0.3
db block gets from cache					      2,734,828        4,429.3	       36.5	    2,214.6	  1,891.6	  877.1       3,552.2
db block gets from cache (fastpath)				      1,452,205        2,352.0	       19.4	    1,176.0	  1,460.0	  143.6       2,208.3
deferred (CURRENT) block cleanout applications				327,005 	 529.6		4.4	      264.8	    206.7	  118.6 	411.0
dirty buffers inspected 						953,018        1,543.5	       12.7	      771.7	    224.5	  613.0 	930.5
enqueue conversions							555,634 	 899.9		7.4	      449.9	    536.0	   71.0 	828.9
enqueue releases						      1,619,445        2,622.8	       21.6	    1,311.4	  1,549.3	  215.9       2,407.0

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
enqueue requests						      1,619,558        2,623.0	       21.6	    1,311.5	  1,549.5	  215.9       2,407.1
enqueue timeouts							    185 	   0.3		0.0		0.1	      0.2	    0.0 	  0.3
enqueue waits								111,768 	 181.0		1.5	       90.5	     51.5	   54.1 	127.0
execute count								526,196 	 852.2		7.0	      426.1	    157.6	  314.7 	537.5
file io service time						    210,364,594      340,700.1	    2,811.4	  170,350.0	125,045.3      81,929.6     258,770.4
file io wait time						 75,351,429,676  122,037,029.8	1,007,022.0    61,018,514.9  47,799,596.0  27,219,096.5  94,817,933.4
free buffer inspected						      7,275,603       11,783.2	       97.2	    5,891.6	  1,854.9	4,580.0       7,203.2
free buffer requested						      7,222,931       11,697.9	       96.5	    5,849.0	  1,834.0	4,552.1       7,145.8
gc blocks compressed							102,111 	 165.4		1.4	       82.7	    104.2	    9.0 	156.4
gc blocks lost								     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cleanout saved							      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cr anti locks created						 74,373 	 120.4		1.0	       60.2	      0.1	   60.2 	 60.3
gc cr block build time							    408 	   0.7		0.0		0.3	      0.4	    0.0 	  0.6
gc cr block flush time							    224 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
gc cr block receive time						  6,450 	  10.4		0.1		5.2	      6.7	    0.5 	 10.0
gc cr blocks built							 35,312 	  57.2		0.5	       28.6	     36.9	    2.5 	 54.7
gc cr blocks flushed							     62 	   0.1		0.0		0.1	      0.0	    0.0 	  0.1
gc cr blocks received							 36,605 	  59.3		0.5	       29.6	     38.3	    2.5 	 56.7
gc cr blocks served							 36,707 	  59.4		0.5	       29.7	     38.5	    2.5 	 56.9
gc cr multiblock grant time						221,770 	 359.2		3.0	      179.6	     81.3	  122.1 	237.1
gc cr multiblock grants received				      2,652,001        4,295.0	       35.4	    2,147.5	    619.3	1,709.6       2,585.5
gc current block flush time						    187 	   0.3		0.0		0.2	      0.1	    0.1 	  0.2
gc current block pin time						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc current block receive time						 12,000 	  19.4		0.2		9.7	     10.1	    2.6 	 16.8
gc current blocks flushed						     48 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc current blocks pinned						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc current blocks received						109,503 	 177.3		1.5	       88.7	     87.0	   27.1 	150.2
gc current blocks served						109,727 	 177.7		1.5	       88.9	     87.7	   26.8 	150.9
gc force cr read cr							    140 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
gc force cr read current						      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc kbytes saved 							389,804 	 631.3		5.2	      315.6	    383.3	   44.6 	586.7
gc kbytes sent								781,669        1,265.9	       10.4	      633.0	    626.3	  190.1       1,075.8
gc local grants 						      4,486,162        7,265.5	       60.0	    3,632.8	    663.6	3,163.5       4,102.0
gc merge pi fg								     65 	   0.1		0.0		0.1	      0.0	    0.0 	  0.1
gc no change made							      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc reader bypass grants 						     42 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
gc reader bypass waits							      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc remote grants						      2,631,363        4,261.6	       35.2	    2,130.8	  1,064.1	1,378.4       2,883.3
gc status messages received						708,163        1,146.9		9.5	      573.5	    312.2	  352.7 	794.2
gc status messages sent 						709,156        1,148.5		9.5	      574.2	    314.6	  351.8 	796.7
gcs affinity lock failures						    376 	   0.6		0.0		0.3	      0.4	    0.0 	  0.6
gcs affinity lock grants					      2,982,777        4,830.7	       39.9	    2,415.4	    325.9	2,184.9       2,645.8
gcs anti-locks created							 74,394 	 120.5		1.0	       60.2	      0.0	   60.2 	 60.3
gcs data block access records					      7,254,854       11,749.6	       97.0	    5,874.8	  1,749.2	4,638.0       7,111.7
gcs messages sent						      7,945,980       12,868.9	      106.2	    6,434.5	  1,911.9	5,082.6       7,786.4
gcs read-mostly lock failures						 69,279 	 112.2		0.9	      112.2	      N/A	  112.2 	112.2
gcs read-mostly lock grants						391,614 	 634.3		5.2	      634.3	      N/A	  634.3 	634.3
ges messages sent							230,975 	 374.1		3.1	      187.0	      1.2	  186.2 	187.9
global enqueue get time 						 62,829 	 101.8		0.8	       50.9	     64.9	    5.0 	 96.7
global enqueue gets sync					      7,262,748       11,762.7	       97.1	    5,881.4	  8,032.6	  201.5      11,561.3
global enqueue releases 					      6,707,247       10,863.0	       89.6	    5,431.5	  7,496.7	  130.6      10,732.5
global undo segment hints helped					     10 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
global undo segment hints were stale					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
heap block compress							  4,158 	   6.7		0.1		3.4	      2.5	    1.6 	  5.1
hot buffers moved to head of LRU					294,985 	 477.7		3.9	      238.9	     17.9	  226.2 	251.5
immediate (CR) block cleanout applications				     54 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
immediate (CURRENT) block cleanout applications 			    485 	   0.8		0.0		0.4	      0.1	    0.3 	  0.5
in call idle wait time						     10,029,395       16,243.0	      134.0	    8,121.5	     53.3	8,083.8       8,159.2
index crx upgrade (positioned)						     62 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
index fast full scans (full)						      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
index fetch by key							  3,740 	   6.1		0.0		3.0	      1.7	    1.8 	  4.2
index range scans							500,946 	 811.3		6.7	      405.7	    131.3	  312.8 	498.5
leaf node 90-10 splits							      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
leaf node splits							    166 	   0.3		0.0		0.1	      0.0	    0.1 	  0.2
lob reads								    277 	   0.4		0.0		0.4	      N/A	    0.4 	  0.4
lob writes								  3,241 	   5.2		0.0		2.6	      3.7	    0.0 	  5.2
lob writes unaligned							  3,241 	   5.2		0.0		2.6	      3.7	    0.0 	  5.2
logical read bytes from cache					102,300,672,000  165,680,816.0	1,367,180.8    82,840,408.0  18,588,879.7  69,696,085.1  95,984,730.9
logons cumulative							     28 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
max cf enq hold time							  1,629 	   2.6		0.0		1.3	      1.8	    0.0 	  2.6
messages received							238,513 	 386.3		3.2	      193.1	     20.8	  178.4 	207.9
messages sent								238,511 	 386.3		3.2	      193.1	     20.8	  178.4 	207.9
no work - consistent read gets					      6,970,136       11,288.5	       93.2	    5,644.2	  1,822.4	4,355.6       6,932.9
non-idle wait count						      5,635,582        9,127.1	       75.3	    4,563.6	  1,873.4	3,238.8       5,888.3
non-idle wait time						      1,983,423        3,212.3	       26.5	    1,606.1	    452.6	1,286.1       1,926.2
opened cursors cumulative						601,224 	 973.7		8.0	      486.9	    177.5	  361.4 	612.3
parse count (describe)							     19 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
parse count (hard)							    199 	   0.3		0.0		0.2	      0.2	    0.1 	  0.3
parse count (total)							 25,321 	  41.0		0.3	       20.5	     25.9	    2.2 	 38.8
parse time cpu								     97 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
parse time elapsed							    220 	   0.4		0.0		0.2	      0.2	    0.0 	  0.3
physical read IO requests					      7,025,142       11,377.6	       93.9	    5,688.8	  1,697.5	4,488.5       6,889.1
physical read bytes						 57,552,625,664   93,209,403.0	  769,152.8    46,604,701.5  13,906,381.8  36,771,404.6  56,437,998.4
physical read total IO requests 				      7,035,452       11,394.3	       94.0	    5,697.1	  1,697.4	4,496.9       6,897.4
physical read total bytes					 59,579,852,288   96,492,542.5	  796,245.3    48,246,271.2  13,311,840.3  38,833,378.7  57,659,163.8
physical read total multi block requests				  1,834 	   3.0		0.0		1.5	      0.6	    1.1 	  1.9
physical reads							      7,025,468       11,378.1	       93.9	    5,689.1	  1,697.6	4,488.7       6,889.4
physical reads cache						      7,025,468       11,378.1	       93.9	    5,689.1	  1,697.6	4,488.7       6,889.4
physical reads cache prefetch					      4,738,597        7,674.4	       63.3	    3,837.2	  1,134.6	3,034.9       4,639.5
physical write IO requests					      1,066,707        1,727.6	       14.3	      863.8	    322.1	  636.0       1,091.6
physical write bytes						  9,204,424,704   14,907,062.5	  123,011.0	7,453,531.2   2,769,819.0   5,494,973.4   9,412,089.1
physical write total IO requests				      1,213,714        1,965.7	       16.2	      982.8	    355.1	  731.8       1,233.9
physical write total bytes					 11,500,974,080   18,626,456.6	  153,702.9	9,313,228.3   3,622,516.7   6,751,722.2  11,874,734.5
physical write total multi block requests				  2,967 	   4.8		0.0		2.4	      0.9	    1.8 	  3.0
physical writes 						      1,123,587        1,819.7	       15.0	      909.9	    338.1	  670.8       1,148.9
physical writes direct							    314 	   0.5		0.0		0.3	      0.2	    0.1 	  0.4
physical writes direct (lob)						    104 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
physical writes direct temporary tablespace				    100 	   0.2		0.0		0.2	      N/A	    0.2 	  0.2
physical writes from cache					      1,123,273        1,819.2	       15.0	      909.6	    337.9	  670.6       1,148.6
physical writes non checkpoint					      1,112,130        1,801.2	       14.9	      900.6	    327.0	  669.4       1,131.8
pinned buffers inspected						  3,119 	   5.1		0.0		2.5	      1.2	    1.7 	  3.4
process last non-idle time						    728 	   1.2		0.0		0.6	      0.6	    0.2 	  1.0
recursive calls 							902,381        1,461.5	       12.1	      730.7	    429.6	  427.0       1,034.5
recursive cpu usage							193,475 	 313.3		2.6	      156.7	     45.4	  124.6 	188.8
redo KB read							      1,084,702        1,756.7	       14.5	      878.3	    322.0	  650.7       1,106.0
redo blocks checksummed by FG (exclusive)				691,016        1,119.1		9.2	      559.6	    202.1	  416.7 	702.5
redo blocks written						      2,005,966        3,248.8	       26.8	    1,624.4	    582.4	1,212.5       2,036.2
redo blocks written (group 0)						666,032        1,078.7		8.9	    1,078.7	      N/A	1,078.7       1,078.7
redo blocks written (group 1)						591,207 	 957.5		7.9	      957.5	      N/A	  957.5 	957.5
redo entries							      1,574,074        2,549.3	       21.0	    1,274.7	    606.9	  845.5       1,703.8
redo size							    976,510,424    1,581,510.8	   13,050.4	  790,755.4	284,798.9     589,372.2     992,138.7
redo size for direct writes						    300 	   0.5		0.0		0.2	      0.1	    0.2 	  0.3
redo subscn max counts							    193 	   0.3		0.0		0.2	      0.1	    0.1 	  0.2
redo synch time 							     83 	   0.1		0.0		0.1	      0.0	    0.0 	  0.1
redo synch time (usec)							815,580        1,320.8	       10.9	      660.4	    429.9	  356.4 	964.4
redo synch time overhead (usec) 					 31,895 	  51.7		0.4	       25.8	     34.6	    1.3 	 50.3
redo synch time overhead count (  2ms)					     12 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo synch time overhead count ( 32ms)					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
redo synch writes							     35 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
redo wastage							     17,734,332       28,721.6	      237.0	   14,360.8	  3,791.5      11,679.8      17,041.8

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
redo write active strands						 72,365 	 117.2		1.0	       58.6	     15.9	   47.4 	 69.8
redo write broadcast ack count						     11 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write broadcast ack time						595,971 	 965.2		8.0	      482.6	    154.8	  373.2 	592.1
redo write finish time						  1,544,439,643    2,501,311.3	   20,640.4	1,250,655.6	615,821.2     815,204.3   1,686,107.0
redo write gather time						     57,532,304       93,179.1	      768.9	   46,589.6	 63,607.8	1,612.0      91,567.1
redo write info find							     13 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write schedule time					     58,380,087       94,552.1	      780.2	   47,276.1	 63,850.2	2,127.2      92,425.0
redo write size count (   4KB)						  7,865 	  12.7		0.1		6.4	      3.4	    4.0 	  8.7
redo write size count (   8KB)						 10,561 	  17.1		0.1		8.6	      1.1	    7.8 	  9.3
redo write size count (  16KB)						 15,015 	  24.3		0.2	       12.2	      1.5	   11.1 	 13.2
redo write size count (  32KB)						 12,835 	  20.8		0.2	       10.4	      0.2	   10.2 	 10.6
redo write size count ( 128KB)						  8,574 	  13.9		0.1		6.9	      4.6	    3.7 	 10.2
redo write size count ( 256KB)						    133 	   0.2		0.0		0.1	      0.1	    0.0 	  0.2
redo write size count ( 512KB)						     12 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write size count (1024KB)						      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
redo write time 							154,630 	 250.4		2.1	      125.2	     61.8	   81.5 	168.9
redo write time (usec)						  1,546,308,856    2,504,338.7	   20,665.4	1,252,169.3	617,554.1     815,492.7   1,688,846.0
redo write total time						  1,601,706,055    2,594,059.8	   21,405.7	1,297,029.9	679,084.3     816,844.8   1,777,215.0
redo write worker delay (usec)					     54,774,305       88,712.4	      732.0	   88,712.4	      N/A      88,712.4      88,712.4
redo write worker delay count						 30,983 	  50.2		0.4	       50.2	      N/A	   50.2 	 50.2
redo writes								 54,996 	  89.1		0.7	       44.5	      8.0	   38.9 	 50.2
redo writes (group 0)							 15,924 	  25.8		0.2	       25.8	      N/A	   25.8 	 25.8
redo writes (group 1)							 15,059 	  24.4		0.2	       24.4	      N/A	   24.4 	 24.4
redo writes adaptive all						 54,995 	  89.1		0.7	       44.5	      8.0	   38.9 	 50.2
redo writes adaptive worker						 30,983 	  50.2		0.4	       50.2	      N/A	   50.2 	 50.2
rollbacks only - consistent read gets					     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
rows fetched via callback						  1,865 	   3.0		0.0		1.5	      0.5	    1.1 	  1.9
saved cleanout failures: callback failure				      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
saved cleanouts 							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
securefile allocation bytes						851,968        1,379.8	       11.4	      689.9	    225.2	  530.7 	849.1
securefile allocation chunks						     39 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
securefile bytes non-transformed					719,241        1,164.8		9.6	      582.4	    189.2	  448.6 	716.2
securefile direct write bytes						851,968        1,379.8	       11.4	      689.9	    225.2	  530.7 	849.1
securefile direct write ops						     39 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
securefile number of non-transformed flushes				     41 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
segment cfs allocations 						     34 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
segment chunks allocation from dispenser				     38 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
segment dispenser allocations						     38 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
segment dispenser load empty						     79 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
segment dispenser load tasks						     80 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
segment prealloc ops							    190 	   0.3		0.0		0.2	      0.2	    0.0 	  0.3
segment prealloc tasks							    184 	   0.3		0.0		0.3	      N/A	    0.3 	  0.3
segment prealloc time (ms)						    700 	   1.1		0.0		0.6	      0.1	    0.5 	  0.6
session connect time							    652 	   1.1		0.0		1.1	      N/A	    1.1 	  1.1
session cursor cache hits						599,678 	 971.2		8.0	      485.6	    177.2	  360.3 	610.9
session logical reads						     12,488,118       20,225.1	      166.9	   10,112.6	  2,269.3	8,507.9      11,717.2
shared hash latch upgrades - no wait				      2,260,662        3,661.3	       30.2	    1,830.6	    566.1	1,430.3       2,230.9
shared hash latch upgrades - wait					      9 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
shared io pool buffer get success					     39 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
sorts (memory)								    914 	   1.5		0.0		0.7	      0.5	    0.4 	  1.1
sorts (rows)								101,254 	 164.0		1.4	       82.0	     51.6	   45.5 	118.5
sql area evicted							     69 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1
sql area purged 							      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
summed dirty queue length					      5,822,369        9,429.6	       77.8	    4,714.8	  1,397.6	3,726.6       5,703.0
switch current caused by our pin					     94 	   0.2		0.0		0.1	      0.0	    0.0 	  0.1
switch current to new buffer						    103 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
table fetch by rowid						     11,597,187       18,782.2	      155.0	    9,391.1	  2,983.6	7,281.4      11,500.8
table fetch continued row						     43 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
table scan blocks gotten						 55,982 	  90.7		0.7	       45.3	     52.9	    8.0 	 82.7
table scan disk non-IMC rows gotten				      5,584,137        9,044.0	       74.6	    4,522.0	  5,691.4	  497.6       8,546.5

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
table scan rows gotten						      5,584,137        9,044.0	       74.6	    4,522.0	  5,691.4	  497.6       8,546.5
table scans (short tables)						 22,276 	  36.1		0.3	       18.0	     24.8	    0.5 	 35.6
total cf enq hold time							 10,592 	  17.2		0.1		8.6	      2.9	    6.5 	 10.6
total number of cf enq holders						    589 	   1.0		0.0		0.5	      0.1	    0.4 	  0.5
total number of times SMON posted					     31 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
transaction tables consistent reads - undo records applied	      1,660,867        2,689.7	       22.2	    1,344.9	  1,820.5	   57.6       2,632.2
undo change vector size 					    401,228,316      649,810.7	    5,362.2	  324,905.3	115,979.8     242,895.2     406,915.4
user I/O wait time						      1,505,116        2,437.6	       20.1	    1,218.8	    144.4	1,116.7       1,320.9
user calls								    435 	   0.7		0.0		0.4	      0.1	    0.3 	  0.4
user commits								 74,826 	 121.2		1.0	       60.6	     19.6	   46.7 	 74.5
user logons cumulative							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
user logouts cumulative 						     33 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
workarea executions - optimal						    987 	   1.6		0.0		0.8	      0.4	    0.5 	  1.1
write clones created in background					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
write clones created in foreground					     22 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
			  --------------------------------------------------------------------------------------------------------------------


Global Messaging Statistics (Global)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
Global Enqueue S-optim Broadcasts sent					     84 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1
Global Enqueue S-optim S-lock gets				      5,251,440        8,505.2	       70.2	    4,252.6	  6,002.0	    8.6       8,496.7
Global Enqueue S-optim anti-locks crea					     43 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
acks for commit broadcast(actual)					  6,039 	   9.8		0.1		4.9	      0.1	    4.8 	  5.0
acks for commit broadcast(logical)					 13,009 	  21.1		0.2	       10.5	      2.3	    8.9 	 12.1
broadcast msgs on commit(actual)					 13,015 	  21.1		0.2	       10.5	      2.2	    9.0 	 12.1
broadcast msgs on commit(logical)					 54,733 	  88.6		0.7	       44.3	      7.8	   38.8 	 49.8
broadcast msgs on commit(wasted)					  6,624 	  10.7		0.1		5.4	      2.7	    3.5 	  7.3
gcs assume no cvt							 86,575 	 140.2		1.2	       70.1	     76.0	   16.4 	123.9
gcs ast to fg								708,669        1,147.7		9.5	      573.8	    314.4	  351.5 	796.2
gcs bidless ast to lms							    604 	   1.0		0.0		0.5	      0.6	    0.1 	  0.9
gcs blocked converts							 90,645 	 146.8		1.2	       73.4	     15.9	   62.2 	 84.6
gcs blocked cr converts 						 36,683 	  59.4		0.5	       29.7	     38.2	    2.7 	 56.7
gcs compatible basts							     26 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (global)					     37 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (local) 					 93,664 	 151.7		1.3	       75.8	     48.8	   41.3 	110.3
gcs dbwr flush pi msgs							433,296 	 701.8		5.8	      350.9	    228.4	  189.3 	512.4
gcs dbwr write request msgs						    168 	   0.3		0.0		0.1	      0.1	    0.1 	  0.2
gcs force cr grant							      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs grant ast								709,273        1,148.7		9.5	      574.3	    315.0	  351.6 	797.1
gcs immediate (compatible) converts					 19,765 	  32.0		0.3	       16.0	      2.9	   13.9 	 18.1
gcs immediate (null) converts						545,109 	 882.8		7.3	      441.4	    164.4	  325.2 	557.7
gcs immediate cr (compatible) converts					  4,049 	   6.6		0.1		3.3	      2.6	    1.5 	  5.1
gcs immediate cr (null) converts				      3,081,270        4,990.2	       41.2	    2,495.1	    921.7	1,843.4       3,146.8
gcs lms write request msgs						    123 	   0.2		0.0		0.1	      0.1	    0.0 	  0.2
gcs msgs process time(ms)						192,897 	 312.4		2.6	      156.2	     49.1	  121.5 	190.9
gcs msgs received						      7,946,538       12,869.6	      106.2	    6,434.8	  1,931.7	5,068.9       7,800.8
gcs new served by master						    322 	   0.5		0.0		0.3	      0.1	    0.2 	  0.3
gcs out-of-order msgs							      6 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs pings refused							 15,603 	  25.3		0.2	       12.6	     15.8	    1.4 	 23.8
gcs queued converts							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs reader bypass grant immediate					     42 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
gcs side channel msgs actual						  8,619 	  14.0		0.1		7.0	      0.2	    6.8 	  7.1
gcs side channel msgs logical						855,046        1,384.8	       11.4	      692.4	    438.5	  382.3       1,002.5
gcs stale cr								    140 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
gcs write notification msgs						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs writes refused							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ges msgs process time(ms)						  5,378 	   8.7		0.1		4.4	      0.5	    4.0 	  4.7
ges msgs received							228,773 	 370.5		3.1	      185.3	      0.9	  184.6 	185.9
implicit batch messages received					123,753 	 200.4		1.7	      100.2	     53.3	   62.5 	137.9
implicit batch messages sent						123,717 	 200.4		1.7	      100.2	     53.2	   62.5 	137.8
messages flow controlled						 21,264 	  34.4		0.3	       17.2	     17.6	    4.8 	 29.6
messages queue sent actual						851,582        1,379.2	       11.4	      689.6	     13.3	  680.1 	699.0
messages queue sent logical						825,677        1,337.2	       11.0	      668.6	    293.6	  461.0 	876.3
messages received actual					      2,314,608        3,748.6	       30.9	    1,874.3	    460.0	1,549.0       2,199.5
messages received logical					      8,175,311       13,240.1	      109.3	    6,620.1	  1,930.9	5,254.7       7,985.4
messages sent directly							929,802        1,505.9	       12.4	      752.9	    345.3	  508.7 	997.1
messages sent indirectly					      3,309,311        5,359.6	       44.2	    2,679.8	  1,484.8	1,629.9       3,729.7
messages sent not implicit batched					 57,125 	  92.5		0.8	       46.3	     45.9	   13.8 	 78.7
messages sent pbatched						      6,646,030       10,763.6	       88.8	    5,381.8	  1,328.5	4,442.4       6,321.2
msgs received kernel queue time (ns)				228,380,379,683  369,866,706.2	3,052,152.7   1.8493335E+08  76,345,365.7 1.3094903E+08 2.3891768E+08
msgs received queue time (ms)						114,896 	 186.1		1.5	       93.0	     28.8	   72.7 	113.4
msgs received queued						      8,175,311       13,240.1	      109.3	    6,620.1	  1,930.9	5,254.7       7,985.4
msgs sent queue time (ms)						791,585        1,282.0	       10.6	      641.0	    314.9	  418.4 	863.7
msgs sent queue time on ksxp (ms)				      2,845,257        4,608.1	       38.0	    2,304.0	    962.5	1,623.4       2,984.6
msgs sent queued						      1,209,212        1,958.4	       16.2	      979.2	    185.9	  847.8       1,110.6
msgs sent queued on ksxp					      2,313,028        3,746.1	       30.9	    1,873.0	    453.1	1,552.7       2,193.4
number of directly freed master res					     41 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
process batch messages received 				      1,075,661        1,742.1	       14.4	      871.0	     48.7	  836.6 	905.5
process batch messages sent					      1,145,367        1,855.0	       15.3	      927.5	     70.7	  877.5 	977.5

Global Messaging Statistics (Global)	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
receiver cycle time							714,134        1,156.6		9.5	      578.3	     81.5	  520.6 	635.9
receiver loop count						      2,813,141        4,556.0	       37.6	    2,278.0	    218.7	2,123.4       2,432.6
			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Absolute Values)	   DB/Inst: P30DB/p30db1  Snaps: 68-69

	    Sessions		   Open Cursors 	    Session Cached Cursors
       -----------------   ---------------------------	 ---------------------------
  I#	  Begin      End	    Begin	   End		  Begin 	 End
----   -------- --------   -------------- ------------	 -------------- ------------
   1	    108       90	      227	   130		 11,166       11,079
   2	    104       92	      165	   110		  9,067        9,052
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~	 ~~~~~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	    212      182	      392	   240		 20,233       20,131
 Avg	    106       91	      196	   120		 10,117       10,066
 Std	      3        1	       44	    14		  1,484        1,433
			  --------------------------------------------------------------------------------------------------------------------

IO Profile (Global)			   DB/Inst: P30DB/p30db1  Snaps: 68-69

Statistic			  Read+Write/s	      Reads/s	    Writes/s
------------------------------ --------------- -------------- --------------
Total Requests			     13,359.19	    11,393.63	    1,965.56
Database Requests		     13,104.42	    11,376.93	    1,727.49
Optimized Requests			  0.00		 0.00		0.00
Redo Requests				 89.06		  N/A	       89.06
Total (MB)				109.78		92.02	       17.76
Database (MB)				103.10		88.89	       14.22
Optimized Total (MB)			  0.00		 0.00		0.00
Redo (MB)				  1.51		  N/A		1.51
Database (blocks)		     13,197.06	    11,377.46	    1,819.60
Via Buffer Cache (blocks)	     13,196.56	    11,377.46	    1,819.10
Direct (blocks) 			  0.51		 0.00		0.51
			  --------------------------------------------------------------------------------------------------------------------

IOStat by Function			   DB/Inst: P30DB/p30db1  Snaps: 68-69

					   Requests						 MB
		       ------------------------------------------------   ------------------------------------------------
															      Waits:	Avg
  I# Function Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s     Count	Time
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   ------- --------
   * Total		  8,203,221   13,284.78   11,327.93    1,956.85 	67,409	    109.17	 91.51	     17.66	2.3M   7.08ms
     Buffer Cache Re	  6,984,571   11,311.23   11,311.23	   0.00 	54,571	     88.38	 88.38	      0.00	2.3M   6.62ms
     DBWR		  1,062,299    1,720.35        0.80    1,719.55 	 8,732	     14.14	  0.01	     14.13	 492 271.77us
     Others		     11,808	  19.12       15.76	   3.36 	 2,155	      3.49	  3.12	      0.37	7079   2.73ms
     LGWR		    144,426	 233.89        0.00	 233.89 	 1,950	      3.16	  0.00	      3.16     54.8K  26.98ms
     Direct Writes		112	   0.18        0.13	   0.05 	     1	      0.00	  0.00	      0.00	  65 261.54us
     Streams AQ 		  5	   0.01        0.01	   0.00 	     0	      0.00	  0.00	      0.00	   5 600.00us

   1 Total		  4,986,585    8,075.57    6,850.52    1,225.06 	40,659	     65.85	 54.62	     11.22	1.4M   6.46ms
     Buffer Cache Re	  4,225,024    6,842.25    6,842.25	   0.00 	33,011	     53.46	 53.46	      0.00	1.4M   5.91ms
     DBWR		    669,094    1,083.57        0.40    1,083.17 	 5,491	      8.89	  0.01	      8.89	 246 253.59us
     LGWR		     86,090	 139.42        0.00	 139.42 	 1,220	      1.98	  0.00	      1.98     30.9K  31.65ms
     Others		      6,351	  10.29        7.86	   2.43 	   937	      1.52	  1.16	      0.36	3934   3.18ms
     Direct Writes		 22	   0.04        0.00	   0.04 	     0	      0.00	  0.00	      0.00	   0
     Streams AQ 		  4	   0.01        0.01	   0.00 	     0	      0.00	  0.00	      0.00	   4 750.00us

   2 Total		  3,216,636    5,209.21    4,477.42	 731.80 	26,750	     43.32	 36.88	      6.44    921.5K   8.03ms
     Buffer Cache Re	  2,759,547    4,468.97    4,468.97	   0.00 	21,560	     34.92	 34.92	      0.00    894.1K   7.70ms
     DBWR		    393,205	 636.78        0.40	 636.38 	 3,241	      5.25	  0.01	      5.24	 246 289.95us
     Others		      5,457	   8.84        7.91	   0.93 	 1,218	      1.97	  1.96	      0.01	3145   2.17ms
     LGWR		     58,336	  94.47        0.00	  94.47 	   730	      1.18	  0.00	      1.18     23.9K  20.93ms
     Direct Writes		 90	   0.15        0.13	   0.01 	     1	      0.00	  0.00	      0.00	  65 261.54us
     Streams AQ 		  1	   0.00        0.00	   0.00 	     0	      0.00	  0.00	      0.00	   1	.00ns
			  --------------------------------------------------------------------------------------------------------------------

IOStat by File Type			   DB/Inst: P30DB/p30db1  Snaps: 68-69

					   Requests						 MB				Service Time
		       ------------------------------------------------   ------------------------------------------------   -----------------
																Small	 Large
  I# Filetype Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s	 Read	  Read
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   -------- --------
   * Total		  8,203,443   13,285.14   11,328.72    1,956.42 	67,205	    108.84	 91.51	     17.33     1.73ms 1524.10m
     Data File		  8,047,013   13,031.81   11,312.09    1,719.72 	63,297	    102.51	 88.38	     14.13     1.73ms
     Log File		    146,635	 237.47        3.61	 233.86 	 3,756	      6.08	  2.93	      3.16   197.47us 1524.10m
     Control File	      9,445	  15.30       12.94	   2.36 	   148	      0.24	  0.20	      0.04    66.34us
     Temp File			104	   0.17        0.08	   0.09 	     2	      0.00	  0.00	      0.00	.00ns
     Other			246	   0.40        0.00	   0.40 	     2	      0.00	  0.00	      0.00

   1 Total		  4,986,775    8,075.88    6,851.25    1,224.63 	40,457	     65.52	 54.63	     10.89     1.53ms 1351.66m
     Data File		  4,894,451    7,926.36    6,843.05    1,083.32 	38,500	     62.35	 53.46	      8.89     1.54ms
     Log File		     86,883	 140.70        1.31	 139.39 	 1,873	      3.03	  1.06	      1.98   408.45us 1351.66m
     Control File	      5,094	   8.25        6.81	   1.44 	    80	      0.13	  0.11	      0.02    62.56us
     Other			246	   0.40        0.00	   0.40 	     2	      0.00	  0.00	      0.00
     Temp File			101	   0.16        0.08	   0.08 	     2	      0.00	  0.00	      0.00	.00ns

   2 Total		  3,216,668    5,209.26    4,477.47	 731.79 	26,748	     43.32	 36.88	      6.44     2.03ms 1623.13m
     Data File		  3,152,562    5,105.45    4,469.04	 636.40 	24,797	     40.16	 34.92	      5.24     2.03ms
     Log File		     59,752	  96.77        2.30	  94.47 	 1,883	      3.05	  1.87	      1.18    79.05us 1623.13m
     Control File	      4,351	   7.05        6.13	   0.92 	    68	      0.11	  0.10	      0.01    70.54us
     Temp File			  3	   0.00        0.00	   0.00 	     0	      0.00	  0.00	      0.00	.00ns
			  --------------------------------------------------------------------------------------------------------------------


Segment Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> % Total shows % of statistic for each segment compared to the global cluster-wide total
   (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants)
-> % Capture shows % of statistic for each segment compared to the  total captured
   by AWR for all segments during the snapshot interval
-> Captured Segments account for   72.3% of Total Logical Reads:      12,488,118
-> Captured Segments account for  100.1% of Total Physical Reads:	7,025,468
-> Captured Segments account for  100.1% of Total Physical Read Requests:	7,025,142
-> Captured Segments account for  100.1% of Total UnOptimized Read Requests:	   7,025,142
-> Captured Segments account for    0.0% of Total Optimized  Read Requests:		  1
-> Captured Segments account for    0.0% of Total Direct Physical Reads:	       1
-> Captured Segments account for   95.0% of Total Physical Writes:	 1,123,587
-> Captured Segments account for   99.1% of Total Physical Write Requests:	 1,066,707
-> Captured Segments account for   68.2% of Total Direct Physical Writes:	      314
-> Captured Segments account for    0.0% of Total Table Scans:		     5
-> Captured Segments account for   94.7% of Total CR Blocks Received:	       36,605
-> Captured Segments account for   98.0% of Total Current Blocks Received:	   109,503
-> Captured Segments account for   94.5% of Total CR Blocks Served:	     36,707
-> Captured Segments account for   97.8% of Total Current Blocks Served:	 109,727
-> Captured Segments account for   99.0% of Total Global Cache Remote Grants:	    2,631,363
-> When ** MISSING ** occurs, some of the object attributes may not be available

				    Tablespace Object		    Subobject  Obj.
Statistic		 Owner	    Name       Name		    Name       Type	   Obj#   Dataobj#	  Value %Total %Capture
------------------------ ---------- ---------- -------------------- ---------- ----- ---------- ---------- ------------ ------ --------
buffer busy waits	 SYS	    SYSAUX     SYS_LOB0000011139C00	       LOB	  11140      11140	      1    N/A	  100.0
db block changes	 USER12     IOPS       CF1			       TABLE	  73464      73460	 75,136    N/A	   23.2
			 USER16     IOPS       CF1			       TABLE	  73481      73483	 74,576    N/A	   23.0
			 USER15     IOPS       CF1			       TABLE	  73472      73477	 64,576    N/A	   19.9
			 USER14     IOPS       CF1			       TABLE	  73470      73474	 54,896    N/A	   17.0
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	 54,672    N/A	   16.9
gc cr blocks received	 USER1	    IOPS       CF1			       TABLE	  73402      73404	 26,033   71.1	   76.5
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	  3,661   10.0	   10.8
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	  2,773    7.6	    8.2
			 USER8	    IOPS       CF1			       TABLE	  73443      73446	  1,208    3.3	    3.6
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	    337    0.9	    1.0
gc cr blocks served	 USER1	    IOPS       CF1			       TABLE	  73402      73404	 26,033   70.9	   76.5
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	  3,661   10.0	   10.8
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	  2,773    7.6	    8.2
			 USER8	    IOPS       CF1			       TABLE	  73443      73446	  1,208    3.3	    3.6
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	    337    0.9	    1.0
gc cu blocks received	 USER1	    IOPS       CF1			       TABLE	  73402      73404	 41,072   37.5	   61.9
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	 10,826    9.9	   16.3
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	  6,933    6.3	   10.4
			 USER8	    IOPS       CF1			       TABLE	  73443      73446	  3,872    3.5	    5.8
			 USER10     IOPS       I_CF1			       INDEX	  73462      73462	  3,686    3.4	    5.6
gc cu blocks served	 USER1	    IOPS       CF1			       TABLE	  73402      73404	 41,072   37.4	   61.9
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	 10,826    9.9	   16.3
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	  6,933    6.3	   10.4
			 USER8	    IOPS       CF1			       TABLE	  73443      73446	  3,872    3.5	    5.8
			 USER10     IOPS       I_CF1			       INDEX	  73462      73462	  3,686    3.4	    5.6
gc remote grants	 USER4	    IOPS       CF1			       TABLE	  73424      73420	334,315   12.7	   30.4
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	243,743    9.3	   22.2
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	216,913    8.2	   19.7
			 USER8	    IOPS       CF1			       TABLE	  73443      73446	166,256    6.3	   15.1
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	137,253    5.2	   12.5
logical reads		 USER12     IOPS       CF1			       TABLE	  73464      73460	503,472    4.0	   23.2
			 USER16     IOPS       CF1			       TABLE	  73481      73483	496,864    4.0	   22.9
			 USER15     IOPS       CF1			       TABLE	  73472      73477	432,480    3.5	   19.9
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	370,016    3.0	   17.1
			 USER14     IOPS       CF1			       TABLE	  73470      73474	366,112    2.9	   16.9
physical reads		 USER12     IOPS       CF1			       TABLE	  73464      73460	466,690    6.6	   23.2
			 USER16     IOPS       CF1			       TABLE	  73481      73483	458,963    6.5	   22.8
			 USER15     IOPS       CF1			       TABLE	  73472      73477	404,719    5.8	   20.1
			 USER14     IOPS       CF1			       TABLE	  73470      73474	342,868    4.9	   17.0
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	339,269    4.8	   16.9
physical read requests	 USER12     IOPS       CF1			       TABLE	  73464      73460	466,690    6.6	   23.2
			 USER16     IOPS       CF1			       TABLE	  73481      73483	458,963    6.5	   22.8
			 USER15     IOPS       CF1			       TABLE	  73472      73477	404,719    5.8	   20.1
			 USER14     IOPS       CF1			       TABLE	  73470      73474	342,868    4.9	   17.0
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	339,269    4.8	   16.9
physical writes 	 USER16     IOPS       CF1			       TABLE	  73481      73483	 74,335    N/A	   23.7
			 USER12     IOPS       CF1			       TABLE	  73464      73460	 70,134    N/A	   22.3
			 USER15     IOPS       CF1			       TABLE	  73472      73477	 60,526    N/A	   19.3
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	 54,713    N/A	   17.4
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	 54,339    N/A	   17.3
physical writes direct	 SYS	    SYSAUX     WRH$_ACTIVE_SESSION_ 3773525_33 TABLE	  73801      73801	    110    N/A	   51.4
			 SYS	    SYSAUX     SYS_LOB0000011139C00	       LOB	  11140      11140	     96    N/A	   44.9
			 SYS	    SYSAUX     SYS_LOB0000007451C00 S_LOB_P256 LOB P	  73950      73950	      5    N/A	    2.3
			 SYS	    SYSAUX     SYS_LOB0000011147C00	       LOB	  11148      11148	      3    N/A	    1.4
physical write requests  USER16     IOPS       CF1			       TABLE	  73481      73483	 74,144    7.0	   23.9
			 USER12     IOPS       CF1			       TABLE	  73464      73460	 69,027    6.5	   22.3
			 USER15     IOPS       CF1			       TABLE	  73472      73477	 59,680    5.6	   19.2
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	 53,711    5.0	   17.3
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	 53,662    5.0	   17.3
			  --------------------------------------------------------------------------------------------------------------------

Library Cache Activity			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Summarized for all instances in the report
-> "Pct Misses"  should be very low

			 Get	Pct	       Pin    Pct	      Invali-	  GES Lock	GES Pin      GES Pin   GES Inval GES Invali-
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations	  Requests     Requests     Releases	Requests     dations
--------------- ------------ ------ -------------- ------ ---------- -------- ------------ ------------ ------------ ----------- -----------
ACCOUNT_STATUS		   4	0.0		 0    N/A	   0	    0		 4	      0 	   0	       0	   0
AUDIT POLICY		   2	0.0		 2    0.0	   0	    0		 2	      2 	   2	       0	   0
BODY			  61	0.0	       346    0.9	   3	    0		 0	    325 	 325	       0	   0
CLUSTER 		   9	0.0		 9    0.0	   0	    0		 9	      9 	   9	       0	   0
DBLINK			   4	0.0		 0    N/A	   0	    0		 4	      0 	   0	       0	   0
EDITION 		   7	0.0		14    0.0	   0	    0		 7	      7 	   7	       0	   0
HINTSET OBJECT		  39   17.9		39   17.9	   0	    0		39	     39 	  39	       0	   0
INDEX			  49	0.0		49   14.3	   7	    0		49	     49 	  49	       0	   0
QUEUE			  62	0.0		62    0.0	   0	    0		62	     62 	  62	       0	   0
SCHEMA			   5	0.0		 0    N/A	   0	    0		 1	      0 	   0	       0	   0
SQL AREA	       1,203	7.6	   551,369    0.0	 132	    3		 0	      0 	   0	       0	   0
SQL AREA BUILD		 189   86.8		 0    N/A	   0	    0		 0	      0 	   0	       0	   0
SQL AREA STATS		 155   56.8	       155   56.8	   0	    0		 0	      0 	   0	       0	   0
TABLE/PROCEDURE 	 702	0.1	     4,081    7.2	 188	    0	     1,069	  2,987        2,987	       0	   0
TRANSFORMATION		  62	0.0		62    0.0	   0	    0		62	     62 	  62	       0	   0
TRIGGER 		  10   20.0		10   30.0	   1	    0		 0	     10 	  10	       0	   0
			  --------------------------------------------------------------------------------------------------------------------


PGA Aggregate Target Statistics 	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> all stats are reported in MegaBytes

	  PGA Aggr Target	   Auto PGA Target	      PGA Mem Alloc		Auto Workareas		 Manual Workarea	   Global Mem Bound
       ---------------------   -----------------------	 -----------------------   -----------------------   -----------------------   -----------------------
  I#	    Begin	 End	      Begin	   End		Begin	     End	  Begin        End	    Begin	 End	      Begin	   End
----   ---------- ----------   ------------ ----------	 ------------ ----------   ------------ ----------   ------------ ----------   ------------ ----------
   1	  3,215.0    3,215.0	    1,840.6    1,922.9	      1,503.1	 1,326.4	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
   2	  3,215.0    3,215.0	    1,905.3    1,950.2	      1,359.9	 1,269.7	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
			  --------------------------------------------------------------------------------------------------------------------


Process Memory Summary			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> B: Begin Snap   E: End Snap I#: Instance number
-> Max Alloc is Maximum PGA allocation size at snapshot time
-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
-> ordered by instance, Begin/End snapshot, Alloc (MB)

							     Hist
					Avg Std Dev    Max    Max
		     Alloc     Used   Alloc   Alloc  Alloc  Alloc   Num   Num
  I#   Category       (MB)     (MB)    (MB)    (MB)   (MB)   (MB)  Proc Alloc
---- - ---------- -------- -------- ------- ------- ------ ------ ----- -----
   1 B Freeable      236.3	 .0	4.6	8.9	43    N/A    51    51
       Other	     731.8	N/A	5.8	8.0	43     43   127   127
       PL/SQL	      16.7     15.3	 .2	 .3	 2	3   109   109
       SQL	      10.7	6.6	 .2	 .3	 1     17    61    49
       Total	     995.6     21.9    10.7    17.5	89     63   348   336
     E Freeable      195.2	 .0	5.9	8.4	28    N/A    33    33
       Other	     608.1	N/A	5.6	8.6	43     43   109   109
       PL/SQL	       7.7	6.4	 .1	 .3	 2	3    91    90
       SQL	       3.4	2.3	 .1	 .2	 1     17    42    31
       Total	     814.4	8.8    11.7    17.6	73     63   275   263
   2 B Freeable      168.2	 .0	4.8	7.9	26    N/A    35    35
       Other	     651.2	N/A	5.3	7.8	42     42   123   123
       PL/SQL	      17.4     16.1	 .2	 .5	 2	4   105   104
       SQL	      11.2	9.3	 .2	 .4	 1     11    55    46
       Total	     848.0     25.4    10.5    16.5	71     56   318   308
     E Freeable      169.8	 .0	5.1	8.2	26    N/A    33    33
       Other	     573.3	N/A	5.2	8.1	41     41   111   111
       PL/SQL	      11.3     10.1	 .1	 .5	 2	4    93    92
       SQL	       3.4	2.6	 .1	 .2	 1     11    42    30
       Total	     757.8     12.7    10.5    17.1	71     55   279   266
			  --------------------------------------------------------------------------------------------------------------------


init.ora Parameters			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> '*' indicates same value across all instances

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
_ipddb_enable			* TRUE
audit_file_dest 		* /u01/app/oracle/admin/p30db/adump
audit_trail			* DB
cluster_database		* TRUE
compatible			* 19.0.0
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581, +FRA/
db_block_size			* 8192
db_create_file_dest		* +DATA
db_domain			* example.com
db_name 			* p30db
db_recovery_file_dest		* +FRA
db_recovery_file_dest_size	* 274877906944
diagnostic_dest 		* /u01/app/oracle
dispatchers			* (PROTOCOL=TCP) (SERVICE=p30dbXDB)
instance_number 		1 1
				2 2
listener_networks		*
local_listener			1  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522
				2  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522
nls_language			* AMERICAN
nls_territory			* AMERICA
open_cursors			* 300
pga_aggregate_target		* 3371171840
processes			* 640
remote_listener 		*  mcracpoc-scan.example.com:1521
remote_login_passwordfile	* EXCLUSIVE
sga_target			* 10133438464
thread				1 1
				2 2
undo_tablespace 		1 UNDOTBS1
				2 UNDOTBS2
			  --------------------------------------------------------------------------------------------------------------------


init.ora Multi-valued Parameters	   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> This section only displays parameters that have more one value
-> '*' indicates same value across all instances
-> '(NULL)' indicates that the	parameter value was not set
-> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581
				* +FRA/P30DB/CONTROLFILE/current.257.1031594583
			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Events 		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Top SQL statements by DB Time along with the top events by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the
   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
									   % Row
Event			       % Event Top Row Source			  Source
------------------------------ ------- --------------------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		     1082	   49.95
db file parallel read		 23.89 TABLE ACCESS - BY INDEX ROWID BAT   23.89
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


db file sequential read 	 21.82 TABLE ACCESS - BY INDEX ROWID BAT   21.63


CPU + Wait for CPU		  1.48 TABLE ACCESS - BY INDEX ROWID BAT    1.01

	  35dumc2tpr9dv 	   203653710		      768	   35.42
db file sequential read 	 25.88 UPDATE				   25.83
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )


buffer busy waits		  3.37 UPDATE STATEMENT 		    3.37


CPU + Wait for CPU		  1.71 UPDATE STATEMENT 		    1.01

			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Row Sources		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Top SQL statements by DB Time along with the top row sources by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
   that SQL.
-> % Event is the percentage of DB Time spent on the event by the
   SQL executing the row source.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
					   % Row
Row Source				  Source Top Event		 % Event
---------------------------------------- ------- ----------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		     1082	   49.95
TABLE ACCESS - BY INDEX ROWID BATCHED	   49.03 db file parallel read	   23.89
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	  35dumc2tpr9dv 	   203653710		      768	   35.42
UPDATE					   28.32 db file sequential read   25.83
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )


UPDATE STATEMENT			    7.01 buffer busy waits	    3.37

			  --------------------------------------------------------------------------------------------------------------------

Top Sessions				   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> '# Samples Active' shows the number of ASH samples in which the session
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
      and not total database activity.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
	9,16277       2.68 db file sequential read		1.75
USER17		     sqlplus@mcracp...m (TNS V1-V3)	  38/62 [ 62%]	     17

       15, 3416       2.68 db file parallel read		0.83
USER15		     sqlplus@mcracp...m (TNS V1-V3)	  18/62 [ 29%]	      0

       22,45631       2.68 db file parallel read		0.88
USER1		     sqlplus@mcracp...m (TNS V1-V3)	  19/62 [ 31%]	      0

       25,26846       2.68 db file sequential read		1.66
USER19		     sqlplus@mcracp...m (TNS V1-V3)	  36/62 [ 58%]	     19

       25,31913       2.68 db file sequential read		2.03
USER24		     sqlplus@mcracp...m (TNS V1-V3)	  44/62 [ 71%]	     20

			  --------------------------------------------------------------------------------------------------------------------

Top Blocking Sessions			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Blocking session activity percentages are calculated with respect to
      waits on enqueues, latches and "buffer busy" only
-> '% Activity' represents the load on the database caused by
      a particular blocking session
-> '# Samples Active' shows the number of ASH samples in which the
      blocking session was found active.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the blocking session was found active.

 Blocking Sid (Inst) % Activity Event Caused			  % Event
-------------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
   374,41238(	  1)	   2.31 LGWR any worker group		     2.17
SYS		     oracle@mcracpo...le.com (LG00)	  54/62 [ 88%]	      0

			  --------------------------------------------------------------------------------------------------------------------

Top PL/SQL Procedures			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
      at the point of sampling . If the value is 'SQL', it represents
      the percentage of time spent executing SQL for the particular
      PL/SQL entry subprogram

PL/SQL Entry Subprogram 					  % Activity
----------------------------------------------------------------- ----------
PL/SQL Current Subprogram					   % Current
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       35.52
   SQL								       35.52
			  --------------------------------------------------------------------------------------------------------------------

Top Events				   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Top Events by DB Time
-> % Activity is the percentage of DB Time due to the event

Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
	   Avg Active
% Activity   Sessions
---------- ----------
db file sequential read 	    User I/O	    FOREGROUND
     47.69	16.76
db file parallel read		    User I/O	    FOREGROUND
     23.89	 8.40
log file parallel write 	    System I/O	    BACKGROUND
      7.33	 2.58
CPU + Wait for CPU		    CPU 	    FOREGROUND
      3.41	 1.20
buffer busy waits		    Concurrency     FOREGROUND
      3.37	 1.18
			  --------------------------------------------------------------------------------------------------------------------

Top Event P1/P2/P3 Values		   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
-> % Event is the percentage of DB Time due to the event
-> % Activity is the percentage of DB Time due to the event with the given
   P1,P2,P3 Values.

Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
Parameter 1		   Parameter 2		      Parameter 3
-------------------------- -------------------------- --------------------------
db file sequential read 	 47.69		  "2","24942388","1"	   0.05
file#			   block#		      blocks

db file parallel read		 23.89		       "1","13","13"	  22.05
files			   blocks		      requests

log file parallel write 	  7.33			 "2","4","2"	   0.28
files			   blocks		      requests

buffer busy waits		  3.41			"4","2","13"	   3.41
file#			   block#		      class#

db file parallel write		  1.43		"4","0","2147483647"	   0.42
requests		   interrupt		      timeout

			  --------------------------------------------------------------------------------------------------------------------

Top DB Objects				   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Top DB Objects by DB Time with respect to Application, Cluster,
   User I/O,  buffer busy waits and In-Memory DB events only.
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available.

      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
Object Name (Type)				      Tablespace
----------------------------------------------------- --------------------------------
	  73439       2.68 db file sequential read		1.66
USER9.CF1 (TABLE)				      IOPS
			   db file parallel read		1.01

	  73443       2.68 db file sequential read		1.75
USER8.CF1 (TABLE)				      IOPS
	  73458       2.68 db file sequential read		1.85
USER13.CF1 (TABLE)				      IOPS
	  73501       2.63 db file sequential read		1.52
USER20.CF1 (TABLE)				      IOPS
			   db file parallel read		1.11

	  73520       2.63 db file sequential read		1.98
USER24.CF1 (TABLE)				      IOPS
			  --------------------------------------------------------------------------------------------------------------------

Activity Over Time			   DB/Inst: P30DB/p30db1  Snaps: 68-69
-> Analysis period is divided into smaller time slots as indicated
   in the 'Slot Time (Duration)'.
-> Top 3 events are reported in each of those slots
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
   that event in that slot
-> '% Event' is 'Event Count' over all ASH samples in the analysis period

			 Slot					Event
Slot Time (Duration)	Count Event				Count % Event
-------------------- -------- ------------------------------ -------- -------
10:27:31   (2.5 min)	  598 db file sequential read		  284	13.10
			      db file parallel read		  119	 5.49
			      CPU + Wait for CPU		   51	 2.35
10:30:00   (5.0 min)	1,114 db file sequential read		  543	25.05
			      db file parallel read		  286	13.19
			      log file parallel write		   83	 3.83
10:35:00   (2.8 min)	  456 db file sequential read		  207	 9.55
			      db file parallel read		  113	 5.21
			      log file parallel write		   36	 1.66
			  --------------------------------------------------------------------------------------------------------------------



	  ADDM Report for Task 'ADDM:3393773525_69'
	  -----------------------------------------

Analysis Period
---------------
AWR snapshot range from 68 to 69.
Time period starts at 08-FEB-20 10.27.31 AM
Time period ends at 08-FEB-20 10.37.49 AM

Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 18234 seconds.
The average number of active sessions was 29.51.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendation
s
					     Percent of Activity
   ----------------------------------------  -------------------  --------------
-
1  Top SQL Statements			     29.41 | 99.68	  2
2  "User I/O" wait Class		     24.33 | 82.47	  0
3  Top Segments by "User I/O" and "Cluster"  4.51 | 15.28	  5
4  Global Cache Messaging		     1.35 | 4.59	  1
5  Buffer Busy - Hot Objects		     1.27 | 4.31	  5
6  "Other" Wait Class			     .97 | 3.27 	  0


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 29.46 active sessions, 99.68% of total activity.
----------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  59.32	    ADDM:3393773525_1_69
    2	    p30db2  40.68	    ADDM:3393773525_2_69

   Recommendation 1: SQL Tuning
   Estimated benefit is 17.19 active sessions, 58.27% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      "bhdvtsvjhgvrh".
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND
	 (CUSTID < :B1 )
   Rationale
      The SQL spent 99% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "bhdvtsvjhgvrh" was executed 420666 times and
      had an average elapsed time of 0.025 seconds.
   Rationale
      I/O and Cluster wait for TABLE "USER9.CF1" with object ID 73439 consumed
      3% of the database time spent on this SQL statement.

   Recommendation 2: SQL Tuning
   Estimated benefit is 10.12 active sessions, 34.3% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      "35dumc2tpr9dv".
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
      The SQL spent 82% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 74210 times and
      had an average elapsed time of 0.098 seconds.


Finding 2: "User I/O" wait Class
Impact is 24.37 active sessions, 82.47% of total activity.
----------------------------------------------------------
Wait class "User I/O" was consuming significant database time.
The throughput of the I/O subsystem was not significantly lower than expected.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  54.2	    ADDM:3393773525_1_69
    2	    p30db2  45.8	    ADDM:3393773525_2_69

   No recommendations are available.


Finding 3: Top Segments by "User I/O" and "Cluster"
Impact is 4.51 active sessions, 15.28% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant "User I/O" and
"Cluster" waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_69

   Recommendation 1: Segment Tuning
   Estimated benefit is .91 active sessions, 3.08% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER9.CF1" with
      object ID 73439.
      Related Object
	 Database object with ID 73439.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the SELECT statement with
      SQL_ID "bhdvtsvjhgvrh" is responsible for 71% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 202542
      physical reads, 28338 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .91 active sessions, 3.08% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER8.CF1" with
      object ID 73443.
      Related Object
	 Database object with ID 73443.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 169267
      physical reads, 24255 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .91 active sessions, 3.08% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER13.CF1" with
      object ID 73458.
      Related Object
	 Database object with ID 73458.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 224040
      physical reads, 32568 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .89 active sessions, 3.02% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER20.CF1" with
      object ID 73501.
      Related Object
	 Database object with ID 73501.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the SELECT statement with
      SQL_ID "bhdvtsvjhgvrh" is responsible for 78% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 195608
      physical reads, 27146 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .89 active sessions, 3.02% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER24.CF1" with
      object ID 73520.
      Related Object
	 Database object with ID 73520.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 192506
      physical reads, 26756 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 24.33 active sessions, 82.47% of total activity.


Finding 4: Global Cache Messaging
Impact is 1.36 active sessions, 4.59% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  83.84	    ADDM:3393773525_1_69
    2	    p30db2  16.16	    ADDM:3393773525_2_69

   Recommendation 1: Application Analysis
   Estimated benefit is 1.35 active sessions, 4.59% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID "bhdvtsvjhgvrh" is responsible for 69% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "Cluster" was consuming significant database time.
      Impact is 1.5 active sessions, 5.1% of total activity.


Finding 5: Buffer Busy - Hot Objects
Impact is 1.27 active sessions, 4.31% of total activity.
--------------------------------------------------------
Read and write contention on database blocks was consuming significant
database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  100 	    ADDM:3393773525_1_69

   Recommendation 1: Schema Changes
   Estimated benefit is .15 active sessions, .5% of total activity.
   ----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE "USER16.CF1" with object ID 73481 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73481.

   Recommendation 2: Schema Changes
   Estimated benefit is .12 active sessions, .39% of total activity.
   -----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE "USER1.CF1" with object ID 73402 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73402.

   Recommendation 3: Schema Changes
   Estimated benefit is .1 active sessions, .34% of total activity.
   ----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE "USER15.CF1" with object ID 73472 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73472.

   Recommendation 4: Schema Changes
   Estimated benefit is .08 active sessions, .28% of total activity.
   -----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE "USER12.CF1" with object ID 73464 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73464.

   Recommendation 5: Schema Changes
   Estimated benefit is .08 active sessions, .28% of total activity.
   -----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE "USER27.CF1" with object ID 73535 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73535.

   Symptoms That Led to the Finding:
   ---------------------------------
      Read and write contention on database blocks was consuming significant
      database time.
      Impact is 1.27 active sessions, 4.31% of total activity.
	 Inter-instance messaging was consuming significant database time.
	 Impact is 1.35 active sessions, 4.59% of total activity.
	    Wait class "Cluster" was consuming significant database time.
	    Impact is 1.5 active sessions, 5.1% of total activity.
	 Wait class "Concurrency" was consuming significant database time.
	 Impact is 1.21 active sessions, 4.11% of total activity.


Finding 6: "Other" Wait Class
Impact is .97 active sessions, 3.27% of total activity.
-------------------------------------------------------
Wait class "Other" was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  99.29	    ADDM:3393773525_1_69

   No recommendations are available.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    1	    p30db1  mcracpoc1.example.com  17.52	    59.27
    2	    p30db2  mcracpoc2.example.com  12.04	    40.73

Miscellaneous Information
-------------------------
Wait class "Application" was not consuming significant database time.
Wait class "Commit" was not consuming significant database time.
Wait class "Configuration" was not consuming significant database time.
Wait class "Network" was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

The database's maintenance windows were active during 100% of the analysis
period.

End of Report
Report written to awr_rac.txt
SQL> SQL> SQL> SQL> SQL> SQL> 




Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt.  Default value is 'html'.

'html'		HTML format (default)
'text'		Text format
'active-html'	Includes Performance Hub active report


Type Specified:  html







Current Database
~~~~~~~~~~~~~~~~
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db











Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using instances ALL (default 'ALL')


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.


Enter value for num_days: 
Listing all Completed Snapshots
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
		    13	06 Feb 2020 07:00    1
		    14	06 Feb 2020 08:00    1
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
		    19	06 Feb 2020 13:00    1
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
		    24	06 Feb 2020 15:55    1
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1
		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
		    38	07 Feb 2020 04:00    1
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
		    45	07 Feb 2020 11:00    1
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
		    50	08 Feb 2020 08:13    1
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
		    55	08 Feb 2020 08:48    1
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		    57	08 Feb 2020 09:00    1
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
		    60	08 Feb 2020 09:17    1
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
		    63	08 Feb 2020 09:43    1
		    64	08 Feb 2020 09:53    1
		    65	08 Feb 2020 10:03    1
		    66	08 Feb 2020 10:08    1
		    67	08 Feb 2020 10:18    1
		    68	08 Feb 2020 10:27    1
		    69	08 Feb 2020 10:37    1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 68

End   Snapshot Id specified: 69



Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_rac_68_69.html.	To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr_rac.html

<html lang="en"><head><title>AWR RAC Report for DB: P30DB, Snaps: 68-69</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY REPORT (RAC)

</h1>
<p />Database Summary<p />
<ul>
</ul>
<table border="0" class="tdiff" summary="Database Summary"><tr>
<th class="awrbg" colspan=" 8" id="Database">Database</th>
<th class="awrbg" colspan=" 2" id="SnapshotIds">Snapshot Ids</th>
<th class="awrbg" colspan=" 2" id="NumberofInstances">Number of Instances</th>
<th class="awrbg" colspan=" 2" id="NumberofHosts">Number of Hosts</th>
<th class="awrbg" colspan=" 2" id="ReportTotal(minutes)">Report Total (minutes)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Id">Id</th><th class="awrbg" scope="col" id="Name">Name</th><th class="awrbg" scope="col" id="UniqueName">Unique Name</th><th class="awrbg" scope="col" id="Role">Role</th><th class="awrbg" scope="col" id="Edition">Edition</th><th class="awrbg" scope="col" id="RAC">RAC</th><th class="awrbg" scope="col" id="CDB">CDB</th><th class="awrbg" scope="col" id="BlockSize">Block Size</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="Elapsedtime">Elapsed time</th></tr>
<tr><td align="right" headers="Database Id" class='awrclb'>3393773525</td><td headers="Database Name" class='awrc'>P30DB</td><td headers="Database UniqueName" class='awrc'>p30db</td><td headers="Database Role" class='awrc'>PRIMARY</td><td headers="Database Edition" class='awrc'>EE</td><td headers="Database RAC" class='awrc'>YES</td><td headers="Database CDB" class='awrc'>NO</td><td align="right" headers="Database BlockSize" class='awrc'>8192</td><td align="right" headers="SnapshotIds Begin" class='awrclb'>68</td><td align="right" headers="SnapshotIds End" class='awrc'>69</td><td align="right" headers="NumberofInstances InReport" class='awrclb'>2</td><td align="right" headers="NumberofInstances Total" class='awrc'>2</td><td align="right" headers="NumberofHosts InReport" class='awrclb'>2</td><td align="right" headers="NumberofHosts Total" class='awrc'>2</td><td align="right" headers="ReportTotal(minutes) DBtime" class='awrclb'>303.90</td><td align="right" headers="ReportTotal(minutes) Elapsedtime" class='awrcrb'>10.29</td></tr>
</table><p />
<p />Database Instances Included In Report<p />
<ul>
<li class="awr"> Listed in order of instance number, I#</li>
</ul>
<table border="0" class="tdiff" summary="Database Instances Included In Report. . Listed in order of instance number, I#"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Host</th><th class="awrbg" scope="col">Startup</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">Elapsed Time(min)</th><th class="awrbg" scope="col">DB time(min)</th><th class="awrbg" scope="col">Up Time(hrs)</th><th class="awrbg" scope="col">Avg Active Sessions</th><th class="awrbg" scope="col">Platform</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>p30db1</td><td class='awrc'>mcracpoc1.example.com</td><td class='awrc'>08-Feb-20 07:52</td><td class='awrc'>08-Feb-20 10:27</td><td class='awrc'>08-Feb-20 10:37</td><td class='awrc'>19.0.0.0.0</td><td align="right" class='awrc'>10.28</td><td align="right" class='awrc'>180.13</td><td align="right" class='awrc'>2.75</td><td align="right" class='awrc'>17.52</td><td class='awrc'>Linux x86 64-bit</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>p30db2</td><td class='awrnc'>mcracpoc2.example.com</td><td class='awrnc'>08-Feb-20 07:52</td><td class='awrnc'>08-Feb-20 10:27</td><td class='awrnc'>08-Feb-20 10:37</td><td class='awrnc'>19.0.0.0.0</td><td align="right" class='awrnc'>10.28</td><td align="right" class='awrnc'>123.77</td><td align="right" class='awrnc'>2.75</td><td align="right" class='awrnc'>12.04</td><td class='awrnc'>Linux x86 64-bit</td></tr>
</table><p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>29.55</td><td align="right" class='awrc'>99.68</td><td scope="row" class='awrc'>ADDM:3393773525_69</td><td class='awrc'>08-Feb-20 10:27</td><td class='awrc'>08-Feb-20 10:37</td></tr>
<tr><td class='awrnc'>&quot;User I/O&quot; wait Class</td><td align="right" class='awrnc'>29.55</td><td align="right" class='awrnc'>82.47</td><td scope="row" class='awrnc'>ADDM:3393773525_69</td><td class='awrnc'>08-Feb-20 10:27</td><td class='awrnc'>08-Feb-20 10:37</td></tr>
<tr><td class='awrc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrc'>29.55</td><td align="right" class='awrc'>15.28</td><td scope="row" class='awrc'>ADDM:3393773525_69</td><td class='awrc'>08-Feb-20 10:27</td><td class='awrc'>08-Feb-20 10:37</td></tr>
<tr><td class='awrnc'>Global Cache Messaging</td><td align="right" class='awrnc'>29.55</td><td align="right" class='awrnc'>4.59</td><td scope="row" class='awrnc'>ADDM:3393773525_69</td><td class='awrnc'>08-Feb-20 10:27</td><td class='awrnc'>08-Feb-20 10:37</td></tr>
<tr><td class='awrc'>Buffer Busy - Hot Objects</td><td align="right" class='awrc'>29.55</td><td align="right" class='awrc'>4.31</td><td scope="row" class='awrc'>ADDM:3393773525_69</td><td class='awrc'>08-Feb-20 10:27</td><td class='awrc'>08-Feb-20 10:37</td></tr>
</table><p />
<p />Cache Sizes<p />
<ul>
<li class="awr"> All values are in Megabytes </li>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values displayed only if different from Begin values</li>
</ul>
<table border="0" class="tdiff" summary="Cache Sizes. . All values are in Megabytes. Listed in order of instance number, I#. End values displayed only if different from Begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="MemoryTarget">Memory Target</th>
<th class="awrbg" colspan=" 2" id="SgaTarget">Sga Target</th>
<th class="awrbg" colspan=" 2" id="DBCache">DB Cache</th>
<th class="awrbg" colspan=" 2" id="SharedPool">Shared Pool</th>
<th class="awrbg" colspan=" 2" id="LargePool">Large Pool</th>
<th class="awrbg" colspan=" 2" id="JavaPool">Java Pool</th>
<th class="awrbg" colspan=" 2" id="StreamsPool">Streams Pool</th>
<th class="awrbg" colspan=" 2" id="PGATarget">PGA Target</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col">Log Buffer</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="MemoryTarget Begin" class='awrclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrclb'>8,000</td><td align="right" headers="DBCache End" class='awrc'>&#160;</td><td align="right" headers="SharedPool Begin" class='awrclb'>1,440</td><td align="right" headers="SharedPool End" class='awrc'>&#160;</td><td align="right" headers="LargePool Begin" class='awrclb'>64</td><td align="right" headers="LargePool End" class='awrc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrclb'>3,232</td><td align="right" headers="PGATarget End" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="MemoryTarget Begin" class='awrnclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrnc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrnclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrnc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrnclb'>7,872</td><td align="right" headers="DBCache End" class='awrnc'>&#160;</td><td align="right" headers="SharedPool Begin" class='awrnclb'>1,568</td><td align="right" headers="SharedPool End" class='awrnc'>&#160;</td><td align="right" headers="LargePool Begin" class='awrnclb'>64</td><td align="right" headers="LargePool End" class='awrnc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrnc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrnc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrnclb'>3,232</td><td align="right" headers="PGATarget End" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>9,664</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>7,936</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>1,504</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>64</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>3,232</td><td align="right" class='awrcrbt'>&#160;</td><td align="right" class='awrct'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Min</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>9,664</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>7,872</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>1,440</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>64</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>3,232</td><td align="right" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrc'>Max</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>9,664</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>8,000</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>1,568</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>64</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>3,232</td><td align="right" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
</table><p />

<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#12010">OS Statistics</a></li>
<li class="awr"><a class="awr" href="#629">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#621">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#639">Global Activity Load Profile</a></li>
<li class="awr"><a class="awr" href="#605">Global Cache and Enqueue Statistics Summary</a></li>
<li class="awr"><a class="awr" href="#12033">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#12034">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#607">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#608">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#622">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#623">Global Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#630">I/O Statistics</a></li>
<li class="awr"><a class="awr" href="#12083">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#633">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#638">Supplemental Information</a></li>
<li class="awr"><a class="awr" href="#43">Active Session History(ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99994">ADDM Reports</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<a class="awr" name="12010"></a>
<h3 class="awr">OS Statistics By Instance</h3>
<ul>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values are diplayed only if different from begin values</li>
</ul>
<table border="0" class="tdiff" summary="OS Statistics By Instance. . Listed in order of instance number, I#. End values are diplayed only if different from begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="CPU">CPU</th>
<th class="awrbg" colspan=" 2" id="Load">Load</th>
<th class="awrbg" colspan=" 5" id="%CPU">% CPU</th>
<th class="awrbg" colspan=" 3" id="Time(s)">Time (s)</th>
<th class="awrbg" colspan=" 1" id="Memory">Memory</th>
<th class="awrbg" colspan=" 4" id="EndValues">End Values</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="%Busy">% Busy</th><th class="awrbg" scope="col" id="%Usr">% Usr</th><th class="awrbg" scope="col" id="%Sys">% Sys</th><th class="awrbg" scope="col" id="%WIO">% WIO</th><th class="awrbg" scope="col" id="%Idl">% Idl</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Idle">Idle</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="MB">MB</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Memory(M)">Memory (M)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="CPU #CPUs" class='awrclb'>8</td><td align="right" headers="CPU #Cores" class='awrc'>4</td><td align="right" headers="CPU #Sckts" class='awrc'>1</td><td align="right" headers="Load Begin" class='awrclb'>7.32</td><td align="right" headers="Load End" class='awrc'>5.22</td><td align="right" headers="%CPU %Busy" class='awrclb'>38.32</td><td align="right" headers="%CPU %Usr" class='awrc'>10.88</td><td align="right" headers="%CPU %Sys" class='awrc'>18.59</td><td align="right" headers="%CPU %WIO" class='awrc'>38.14</td><td align="right" headers="%CPU %Idl" class='awrc'>61.68</td><td align="right" headers="Time(s) Busy" class='awrclb'>1,741.72</td><td align="right" headers="Time(s) Idle" class='awrc'>2,803.09</td><td align="right" headers="Time(s) Total" class='awrc'>4,544.81</td><td align="right" headers="Memory MB" class='awrclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="CPU #CPUs" class='awrnclb'>8</td><td align="right" headers="CPU #Cores" class='awrnc'>4</td><td align="right" headers="CPU #Sckts" class='awrnc'>1</td><td align="right" headers="Load Begin" class='awrnclb'>4.16</td><td align="right" headers="Load End" class='awrnc'>4.63</td><td align="right" headers="%CPU %Busy" class='awrnclb'>28.54</td><td align="right" headers="%CPU %Usr" class='awrnc'>7.51</td><td align="right" headers="%CPU %Sys" class='awrnc'>14.01</td><td align="right" headers="%CPU %WIO" class='awrnc'>42.83</td><td align="right" headers="%CPU %Idl" class='awrnc'>71.46</td><td align="right" headers="Time(s) Busy" class='awrnclb'>1,282.63</td><td align="right" headers="Time(s) Idle" class='awrnc'>3,211.33</td><td align="right" headers="Time(s) Total" class='awrnc'>4,493.96</td><td align="right" headers="Memory MB" class='awrnclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrnclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrnc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrnc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclbt'>3,024.35</td><td align="right" class='awrct'>6,014.42</td><td align="right" class='awrct'>9,038.77</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="629"></a>
<h2 class="awr">
Time Model Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12014">Time Model</a></li>
<li class="awr"><a class="awr" href="#12015">Time Model - % of DB time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12014"></a>
<h3 class="awr">Time Model</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Time Model"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">DB time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">SQL Exec Ela (s)</th><th class="awrbg" scope="col">Parse Ela (s)</th><th class="awrbg" scope="col">Hard Parse Ela (s)</th><th class="awrbg" scope="col">PL/SQL Ela (s)</th><th class="awrbg" scope="col">Java Ela (s)</th><th class="awrbg" scope="col">bg time (s)</th><th class="awrbg" scope="col">bg CPU (s)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>10,807.83</td><td align="right" class='awrc'>898.09</td><td align="right" class='awrc'>10,807.43</td><td align="right" class='awrc'>1.83</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>16.05</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>2,067.43</td><td align="right" class='awrc'>461.27</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>7,426.46</td><td align="right" class='awrnc'>420.06</td><td align="right" class='awrnc'>7,425.61</td><td align="right" class='awrnc'>0.39</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>11.41</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1,063.56</td><td align="right" class='awrnc'>519.03</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>18,234.29</td><td align="right" class='awrct'>1,318.15</td><td align="right" class='awrct'>18,233.04</td><td align="right" class='awrct'>2.22</td><td align="right" class='awrct'>0.32</td><td align="right" class='awrct'>27.47</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>3,130.99</td><td align="right" class='awrct'>980.30</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>9,117.14</td><td align="right" class='awrnc'>659.08</td><td align="right" class='awrnc'>9,116.52</td><td align="right" class='awrnc'>1.11</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>13.73</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1,565.50</td><td align="right" class='awrnc'>490.15</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>2,390.99</td><td align="right" class='awrc'>338.02</td><td align="right" class='awrc'>2,391.31</td><td align="right" class='awrc'>1.01</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>3.28</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>709.84</td><td align="right" class='awrc'>40.84</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12015"></a>
<h3 class="awr">Time Model - % of DB time</h3>
<ul>
<li class="awr"> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]</li>
</ul>
<table border="0" class="tdiff" summary="Time Model - % of DB time. . % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 6" id="%DBtime">% DB time</th>
<td>&#160;</td><th class="awrbg" colspan=" 1" id="%bgtime">% bg time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">% Total DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="SQLExecEla">SQL Exec Ela</th><th class="awrbg" scope="col" id="ParseEla">Parse Ela</th><th class="awrbg" scope="col" id="HardParse">Hard Parse</th><th class="awrbg" scope="col" id="PL/SQLEla">PL/SQL Ela</th><th class="awrbg" scope="col" id="JavaEla">Java Ela</th><th class="awrbg" scope="col">% Total bg time</th><th class="awrbg" scope="col" id="bgCPU">bg CPU</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>59.27</td><td align="right" headers="%DBtime DBCPU" class='awrclb'>8.31</td><td align="right" headers="%DBtime SQLExecEla" class='awrc'>100.00</td><td align="right" headers="%DBtime ParseEla" class='awrc'>0.02</td><td align="right" headers="%DBtime HardParse" class='awrc'>0.00</td><td align="right" headers="%DBtime PL/SQLEla" class='awrc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrc'>0.00</td><td align="right" class='awrc'>66.03</td><td align="right" headers="%bgtime bgCPU" class='awrcbb'>22.31</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>40.73</td><td align="right" headers="%DBtime DBCPU" class='awrnclb'>5.66</td><td align="right" headers="%DBtime SQLExecEla" class='awrnc'>99.99</td><td align="right" headers="%DBtime ParseEla" class='awrnc'>0.01</td><td align="right" headers="%DBtime HardParse" class='awrnc'>0.00</td><td align="right" headers="%DBtime PL/SQLEla" class='awrnc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrnc'>0.00</td><td align="right" class='awrnc'>33.97</td><td align="right" headers="%bgtime bgCPU" class='awrncbb'>48.80</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrclbt'>6.98</td><td align="right" class='awrct'>99.99</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrcbbt'>35.56</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="621"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12011">Foreground Wait Classes -	% of Total DB time</a></li>
<li class="awr"><a class="awr" href="#12012">Foreground Wait Classes</a></li>
<li class="awr"><a class="awr" href="#12013">Foreground Wait Classes -	% of DB time </a></li>
<li class="awr"><a class="awr" href="#12050">Top Timed Events</a></li>
<li class="awr"><a class="awr" href="#12051">Top Timed Foreground Events</a></li>
<li class="awr"><a class="awr" href="#12052">Top Timed Background Events</a></li>
<li class="awr"><a class="awr" href="#12053">Foreground Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12054">Background Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12055">Wait Event Histogram (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12011"></a>
<h3 class="awr">Foreground Wait Classes -  % of Total DB time</h3>
<ul>
<li class="awr"> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of Total DB time. . Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time"><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">User I/O</th><th class="awrbg" scope="col">Sys I/O</th><th class="awrbg" scope="col">Other</th><th class="awrbg" scope="col">Applic</th><th class="awrbg" scope="col">Commit</th><th class="awrbg" scope="col">Network</th><th class="awrbg" scope="col">Concurcy</th><th class="awrbg" scope="col">Config</th><th class="awrbg" scope="col">Cluster</th><th class="awrbg" scope="col">Admin</th><th class="awrbg" scope="col">Scheduler</th><th class="awrbg" scope="col">DB CPU</th></tr>
<tr><td class='awrc'>&#160;</td><td align="right" class='awrc'>82.47</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>3.27</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.11</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>5.10</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>7.23</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12012"></a>
<h3 class="awr">Foreground Wait Classes</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">User I/O(s)</th><th class="awrbg" scope="col">Sys I/O(s)</th><th class="awrbg" scope="col">Other(s)</th><th class="awrbg" scope="col">Applic (s)</th><th class="awrbg" scope="col">Commit (s)</th><th class="awrbg" scope="col">Network (s)</th><th class="awrbg" scope="col">Concurcy (s)</th><th class="awrbg" scope="col">Config (s)</th><th class="awrbg" scope="col">Cluster (s)</th><th class="awrbg" scope="col">Admin (s)</th><th class="awrbg" scope="col">Scheduler (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>8,150.51</td><td align="right" class='awrc'>2.35</td><td align="right" class='awrc'>592.72</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>748.73</td><td align="right" class='awrc'>11.26</td><td align="right" class='awrc'>644.30</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>898.09</td><td align="right" class='awrc'>10,807.83</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>6,887.51</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>4.25</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.59</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>285.29</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>420.06</td><td align="right" class='awrnc'>7,426.46</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>15,038.02</td><td align="right" class='awrct'>2.37</td><td align="right" class='awrct'>596.97</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.81</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>748.74</td><td align="right" class='awrct'>11.26</td><td align="right" class='awrct'>929.58</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>1,318.15</td><td align="right" class='awrct'>18,234.29</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>7,519.01</td><td align="right" class='awrnc'>1.19</td><td align="right" class='awrnc'>298.48</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.41</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>374.37</td><td align="right" class='awrnc'>5.63</td><td align="right" class='awrnc'>464.79</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>659.08</td><td align="right" class='awrnc'>9,117.14</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>893.07</td><td align="right" class='awrc'>1.64</td><td align="right" class='awrc'>416.11</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>529.42</td><td align="right" class='awrc'>7.96</td><td align="right" class='awrc'>253.86</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>338.02</td><td align="right" class='awrc'>2,390.99</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12013"></a>
<h3 class="awr">Foreground Wait Classes -  % of DB time </h3>
<ul>
<li class="awr"> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of DB time . . % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 12" id="%DBtime">% DB time</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="UserI/O">User I/O</th><th class="awrbg" scope="col" id="SysI/O">Sys I/O</th><th class="awrbg" scope="col" id="Other">Other</th><th class="awrbg" scope="col" id="Applic">Applic</th><th class="awrbg" scope="col" id="Commit">Commit</th><th class="awrbg" scope="col" id="Network">Network</th><th class="awrbg" scope="col" id="Concurcy">Concurcy</th><th class="awrbg" scope="col" id="Config">Config</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Admin">Admin</th><th class="awrbg" scope="col" id="Scheduler">Scheduler</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col">% Total DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="%DBtime UserI/O" class='awrclb'>75.41</td><td align="right" headers="%DBtime SysI/O" class='awrc'>0.02</td><td align="right" headers="%DBtime Other" class='awrc'>5.48</td><td align="right" headers="%DBtime Applic" class='awrc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrc'>0.00</td><td align="right" headers="%DBtime Network" class='awrc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrc'>6.93</td><td align="right" headers="%DBtime Config" class='awrc'>0.10</td><td align="right" headers="%DBtime Cluster" class='awrc'>5.96</td><td align="right" headers="%DBtime Admin" class='awrc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrcrb'>8.31</td><td align="right" class='awrc'>59.27</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="%DBtime UserI/O" class='awrnclb'>92.74</td><td align="right" headers="%DBtime SysI/O" class='awrnc'>0.00</td><td align="right" headers="%DBtime Other" class='awrnc'>0.06</td><td align="right" headers="%DBtime Applic" class='awrnc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrnc'>0.01</td><td align="right" headers="%DBtime Network" class='awrnc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrnc'>0.00</td><td align="right" headers="%DBtime Config" class='awrnc'>0.00</td><td align="right" headers="%DBtime Cluster" class='awrnc'>3.84</td><td align="right" headers="%DBtime Admin" class='awrnc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrnc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrncrb'>5.66</td><td align="right" class='awrnc'>40.73</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>84.08</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>2.77</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>3.46</td><td align="right" class='awrct'>0.05</td><td align="right" class='awrct'>4.90</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrcrbt'>6.98</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12050"></a>
<h3 class="awr">Top Timed Events</h3>
<ul>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time ' 	     : Per-instance 'Wait Time Avg ' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Events. . Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time ' : Per-instance 'Wait Time Avg ' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>1,871,499</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9,795.36</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.23ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>53.72</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.41ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.59ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.22ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>1.15ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>414,576</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5,240.71</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>12.64ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>28.74</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>12.95ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>11.58ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>14.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>1.94ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>55,054</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,485.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>26.98ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>8.14</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>26.28ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>20.87ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>31.70ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>7.66ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,318.15</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>7.23</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>buffer busy waits</td><td align="right" headers="Event Waits" class='awrclb'>29,041</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>748.84</td><td align="right" headers="WaitTime AvgWait" class='awrc'>25.79ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>12.98ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>175.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>25.79ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>18.11ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>26,603</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>433.71</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>16.30ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.38</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>16.30ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>16.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>16.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>109,277</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>392.56</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.59ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.15</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.39ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.84ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>319.14us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrnclb'>88,149</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>302.22</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.90ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>731.42us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.06ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>3.06ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrclb'>199,320</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>271.34</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.36ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.49</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.37ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.34ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.40ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>41.24us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>381,188</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>245.84</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>644.93us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.35</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>638.63us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>620.97us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>656.29us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>24.98us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>1,135,542</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>5,216.23</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.59ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>48.26</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>253,306</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,932.10</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>11.58ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>27.13</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>31,037</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>983.83</td><td align="right" headers="WaitTime AvgWait" class='awrc'>31.70ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>9.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>898.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>8.31</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>buffer busy waits</td><td align="right" headers="Event Waits" class='awrclb'>29,040</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>748.84</td><td align="right" headers="WaitTime AvgWait" class='awrc'>25.79ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>6.93</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>26,603</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>433.71</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>16.30ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrclb'>54,921</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>277.92</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.06ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: US - contention</td><td align="right" headers="Event Waits" class='awrnclb'>23,074</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>218.21</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.46ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>59,584</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>201.81</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.39ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.87</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>258,597</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>169.72</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>656.29us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>735,957</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>4,579.13</td><td align="right" headers="WaitTime AvgWait" class='awrct'>6.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>61.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>161,270</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,308.61</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>14.32ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>31.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>24,017</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>501.25</td><td align="right" headers="WaitTime AvgWait" class='awrc'>20.87ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>6.75</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>420.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>5.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>49,693</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>190.74</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.84ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrnclb'>81,360</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>113.57</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.40ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>122,591</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>76.13</td><td align="right" headers="WaitTime AvgWait" class='awrc'>620.97us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>93,003</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>59.27</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>637.30us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.80</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrclb'>33,228</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>24.30</td><td align="right" headers="WaitTime AvgWait" class='awrc'>731.42us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges inquiry response</td><td align="right" headers="Event Waits" class='awrnclb'>21,816</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>16.23</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>743.94us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.22</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12051"></a>
<h3 class="awr">Top Timed Foreground Events</h3>
<ul>
<li class="awr"> Foreground Activity is captured in release 11g and above </li>
<li class="awr"> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Foreground Events. . Foreground Activity is captured in release 11g and above. For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>1,870,100</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9,793.25</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.24ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>53.71</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.41ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.59ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>1.16ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>414,572</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5,240.70</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>12.64ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>28.74</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>12.95ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>11.58ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>14.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>1.94ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,318.15</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>7.23</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>buffer busy waits</td><td align="right" headers="Event Waits" class='awrnclb'>29,009</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>747.42</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>25.77ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>25.77ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>25.77ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>25.77ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrclb'>54,512</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>276.15</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.07ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.07ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.07ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.07ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrnclb'>199,296</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>271.31</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.36ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.49</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.37ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.34ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.40ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>41.23us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>381,025</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>245.74</td><td align="right" headers="WaitTime AvgWait" class='awrc'>644.95us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.35</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>638.65us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>620.99us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>656.32us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>24.98us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: US - contention</td><td align="right" headers="Event Waits" class='awrnclb'>23,061</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>218.15</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.46ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.46ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>9.46ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.46ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>1</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>286,191</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>188.57</td><td align="right" headers="WaitTime AvgWait" class='awrc'>658.90us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>653.36us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>637.66us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>669.06us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>22.20us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>73,122</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>92.83</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.27ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.86</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>1</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>1,134,921</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>5,214.45</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.59ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>48.25</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>253,304</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,932.10</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>11.58ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>27.13</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>898.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>8.31</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>buffer busy waits</td><td align="right" headers="Event Waits" class='awrnclb'>29,009</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>747.42</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>25.77ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>6.92</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrclb'>54,512</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>276.15</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.07ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.56</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: US - contention</td><td align="right" headers="Event Waits" class='awrnclb'>23,061</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>218.15</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.46ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>258,460</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>169.63</td><td align="right" headers="WaitTime AvgWait" class='awrc'>656.32us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrnclb'>117,945</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>157.76</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.34ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.46</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>193,594</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>129.53</td><td align="right" headers="WaitTime AvgWait" class='awrc'>669.06us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.20</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>73,122</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>92.83</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.27ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.86</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>735,179</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>4,578.80</td><td align="right" headers="WaitTime AvgWait" class='awrct'>6.23ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>61.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>161,268</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,308.60</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>14.32ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>31.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>420.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>5.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrnclb'>81,351</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>113.55</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.40ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>122,565</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>76.11</td><td align="right" headers="WaitTime AvgWait" class='awrc'>620.99us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>92,597</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>59.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>637.66us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.80</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>12,754</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>10.94</td><td align="right" headers="WaitTime AvgWait" class='awrc'>857.73us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.15</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>7,582</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>8.86</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.17ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.12</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrclb'>5,322</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>5.47</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.03ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.07</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>2,059</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.22</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.05ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12052"></a>
<h3 class="awr">Top Timed Background Events</h3>
<ul>
<li class="awr"> % of bg time: % of background elapsed time </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Background Events. . % of bg time: % of background elapsed time. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>55,050</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,485.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>26.98ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>47.43</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>26.29ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>20.87ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>31.70ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>7.66ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>980.30</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>31.31</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>26,602</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>433.71</td><td align="right" headers="WaitTime AvgWait" class='awrc'>16.30ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>13.85</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>16.30ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>16.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>16.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>109,277</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>392.56</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.59ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>12.54</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.39ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.84ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>319.14us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>7,452</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>53.22</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.70</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.14ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.14ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>1,283</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>38.11</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>29.71ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.22</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>29.71ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>29.71ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>29.71ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrclb'>33,636</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>26.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>775.10us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.83</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.53ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>731.42us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>2.54ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges inquiry response</td><td align="right" headers="Event Waits" class='awrnclb'>21,826</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>16.24</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>744.03us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>846.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>743.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>948.40us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>144.57us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>608</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>12.19</td><td align="right" headers="WaitTime AvgWait" class='awrc'>20.05ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>20.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>19.42ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>20.59ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>829.24us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrnclb'>6,525</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>7.25</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.11ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.23</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>909.20us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>298.14us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>System I/O</td><td headers="Wait Event" class='awrct'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclbt'>31,033</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>983.77</td><td align="right" headers="WaitTime AvgWait" class='awrct'>31.70ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>47.58</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>461.27</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>22.31</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>26,602</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>433.71</td><td align="right" headers="WaitTime AvgWait" class='awrc'>16.30ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>20.98</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>59,584</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>201.81</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.39ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>9.76</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>7,452</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>53.22</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>1,283</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>38.11</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>29.71ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.84</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>324</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>6.67</td><td align="right" headers="WaitTime AvgWait" class='awrc'>20.59ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrnclb'>3,126</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.16</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.20</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>gcs log flush sync</td><td align="right" headers="Event Waits" class='awrclb'>2,787</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.20</td><td align="right" headers="WaitTime AvgWait" class='awrc'>788.32us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrnclb'>66,623</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>31.23us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>&#160;</td><td headers="Wait Event" class='awrct'>background cpu time</td><td align="right" headers="Event Waits" class='awrclbt'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrct'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>519.03</td><td align="right" headers="WaitTime AvgWait" class='awrct'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrct'>48.80</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>24,017</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>501.25</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>20.87ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>47.13</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>49,693</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>190.74</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.84ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>17.93</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrnclb'>33,227</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>24.30</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>731.42us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.29</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges inquiry response</td><td align="right" headers="Event Waits" class='awrclb'>21,816</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>16.23</td><td align="right" headers="WaitTime AvgWait" class='awrc'>743.94us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>284</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5.52</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>19.42ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>836</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4.43</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.29ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.42</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrnclb'>1,851</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.58</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.93ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.34</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrclb'>3,399</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>909.20us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.29</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KSV master wait</td><td align="right" headers="Event Waits" class='awrnclb'>1,535</td><td align="right" headers="Event %Timeouts" class='awrnc'>30.16</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.98</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.94ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12053"></a>
<h3 class="awr">Foreground Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>1,870,100</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9,793.25</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.24ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>53.71</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.41ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.59ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.16ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrnclb'>414,572</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5,240.70</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>12.64ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>28.74</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>12.95ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>11.58ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>14.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.94ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>buffer busy waits</td><td align="right" headers="Event Waits" class='awrclb'>29,009</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>747.42</td><td align="right" headers="WaitTime AvgWait" class='awrc'>25.77ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>25.77ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>25.77ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>25.77ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrnclb'>54,512</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>276.15</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.07ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.07ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.07ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.07ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrclb'>199,296</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>271.31</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.36ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.49</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.37ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.34ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.40ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>41.23us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>381,025</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>245.74</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>644.95us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.35</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>638.65us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>620.99us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>656.32us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>24.98us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: US - contention</td><td align="right" headers="Event Waits" class='awrclb'>23,061</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>218.15</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9.46ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.20</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>9.46ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>9.46ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>9.46ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>286,191</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>188.57</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>658.90us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>653.36us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>637.66us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>669.06us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>22.20us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>73,122</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>92.83</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.27ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>reliable message</td><td align="right" headers="Event Waits" class='awrnclb'>21,649</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>86.52</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.00ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.47</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>987.79ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.91ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1971.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1391.42ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>48,972</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>43.12</td><td align="right" headers="WaitTime AvgWait" class='awrc'>880.52us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>873.14us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>857.73us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>888.55us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>21.79us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>17,596</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>34.74</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.97ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.19</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.96ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.05ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>59.14us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>12,851</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>14.39</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.12ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.11ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.05ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>84.36us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>15,694</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>12.95</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>824.92us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.07</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.44ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>732.18us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.14ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.00ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrclb'>8,866</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9.74</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.10ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.03ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.20ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>124.46us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>enq: HW - contention</td><td align="right" headers="Event Waits" class='awrnclb'>396</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>8.71</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>22.00ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>22.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>22.00ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>22.00ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: enqueue hash chains</td><td align="right" headers="Event Waits" class='awrclb'>12,924</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>5.26</td><td align="right" headers="WaitTime AvgWait" class='awrc'>406.81us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>356.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>305.82us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>406.98us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>71.53us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>4,891</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.61</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>941.81us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>943.22us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>941.55us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>944.88us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.35us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>gcs drm freeze in enter server mode</td><td align="right" headers="Event Waits" class='awrclb'>45</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>90.71ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>91.34ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>82.01ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>100.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>13.19ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant congested</td><td align="right" headers="Event Waits" class='awrnclb'>710</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.11</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.38ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.18ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.34ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.01ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>KSV master wait</td><td align="right" headers="Event Waits" class='awrclb'>516</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.75</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.32ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.32ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.32ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Data file init write</td><td align="right" headers="Event Waits" class='awrnclb'>86</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.70</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>31.37ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>31.37ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>31.37ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>31.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Configuration</td><td headers="Wait Event" class='awrc'>undo segment extension</td><td align="right" headers="Event Waits" class='awrclb'>189</td><td align="right" headers="Event %Timeouts" class='awrc'>99.47</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.55</td><td align="right" headers="WaitTime AvgWait" class='awrc'>13.47ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>13.47ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>13.47ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>13.47ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrnclb'>570</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.50</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.39ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.50ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.70ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.52ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block lost</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.36</td><td align="right" headers="WaitTime AvgWait" class='awrc'>786.27ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>848.81ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>661.19ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1036.44ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>265.34ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block lost</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.72</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>573.58ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>573.58ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>573.58ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>573.58ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>129</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.65</td><td align="right" headers="WaitTime AvgWait" class='awrc'>12.76ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>12.76ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>12.76ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>12.76ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>row cache mutex</td><td align="right" headers="Event Waits" class='awrnclb'>278</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.27</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.57ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.57ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.57ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.57ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file single write</td><td align="right" headers="Event Waits" class='awrclb'>86</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.20</td><td align="right" headers="WaitTime AvgWait" class='awrc'>13.99ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>13.99ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>13.99ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>13.99ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrnclb'>19</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.20</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>62.95ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>62.95ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>62.95ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>62.95ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrclb'>55</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>19.05ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>12.40ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>611.42us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>24.20ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>16.68ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Commit</td><td headers="Wait Event" class='awrnc'>log file sync</td><td align="right" headers="Event Waits" class='awrnclb'>12</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.81</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>67.81ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>67.81ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>36.62ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>99.00ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>44.11ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrclb'>1,621</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.68</td><td align="right" headers="WaitTime AvgWait" class='awrc'>419.27us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>318.15us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>119.47us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>516.84us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>280.98us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch free</td><td align="right" headers="Event Waits" class='awrnclb'>1,935</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.62</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>322.15us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>406.44us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>313.08us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>499.80us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>132.03us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block congested</td><td align="right" headers="Event Waits" class='awrclb'>151</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.54</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.59ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.54ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.48ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.60ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>81.81us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: ges resource hash list</td><td align="right" headers="Event Waits" class='awrnclb'>1,280</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.47</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>364.01us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>280.14us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>196.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>364.28us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>118.99us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>kfk: async disk IO</td><td align="right" headers="Event Waits" class='awrclb'>86</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.44</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.09ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.09ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.09ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.09ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>1,047</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.29</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>277.52us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>244.56us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>200.03us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>289.09us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>62.97us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrclb'>382</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.26</td><td align="right" headers="WaitTime AvgWait" class='awrc'>683.11us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>630.95us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>547.22us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>714.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>118.40us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS initialization</td><td align="right" headers="Event Waits" class='awrnclb'>40</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.21</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.28ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.07ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.81ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.34ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>368.03us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrclb'>224</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.13</td><td align="right" headers="WaitTime AvgWait" class='awrc'>561.42us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>548.79us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>511.57us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>586.01us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>52.64us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges enter server mode</td><td align="right" headers="Event Waits" class='awrnclb'>12,784</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.06us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>8.47us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.89us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.06us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>830.83ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>16.37ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>16.37ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>16.37ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>16.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: action</td><td align="right" headers="Event Waits" class='awrnclb'>58</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.36ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.28ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>136.90us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>79</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>810.24us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>885.11us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>347.42us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.42ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>760.40us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrnclb'>115</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>545.13us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>509.12us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>438.93us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>579.31us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>99.26us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: undo global data</td><td align="right" headers="Event Waits" class='awrclb'>154</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>367.18us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>405.34us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>366.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>444.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>54.68us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>direct path write</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>18.47ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>18.47ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>18.47ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>18.47ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: redo allocation</td><td align="right" headers="Event Waits" class='awrclb'>140</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>369.78us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>390.29us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>357.66us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>422.92us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>46.15us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block congested</td><td align="right" headers="Event Waits" class='awrnclb'>11</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.26ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.26ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.26ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.26ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CF - contention</td><td align="right" headers="Event Waits" class='awrclb'>51</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>905.45us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>905.45us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>905.45us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>905.45us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrnclb'>291</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>141.10us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>131.92us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>121.44us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>142.40us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>14.82us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrclb'>140</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>255.21us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>239.64us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>210.18us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>269.09us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>41.66us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: query</td><td align="right" headers="Event Waits" class='awrnclb'>120</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>288.03us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>284.20us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>279.42us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>288.98us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>6.76us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges inquiry response</td><td align="right" headers="Event Waits" class='awrclb'>43</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>690.51us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>690.51us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>690.51us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>690.51us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrnclb'>595</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>48.93us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>53.09us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>23.28us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>82.90us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>42.16us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrclb'>53</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>478.49us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>373.76us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>231.43us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>516.09us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>201.28us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrnclb'>28</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>668.43us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>723.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>627.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>820.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>136.71us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>datafile move cleanup during resize</td><td align="right" headers="Event Waits" class='awrclb'>43</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>369.58us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>369.58us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>369.58us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>369.58us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrnclb'>14</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.98ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>.98ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.98ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>.98ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>cursor: pin S</td><td align="right" headers="Event Waits" class='awrclb'>10</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.23ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>row cache lock</td><td align="right" headers="Event Waits" class='awrnclb'>11</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.09ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.09ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.09ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.09ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrclb'>11</td><td align="right" headers="Event %Timeouts" class='awrc'>18.18</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.09ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.21ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>116.50us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrnclb'>7</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.60ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.60ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.60ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.60ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>SQL*Net break/reset to client</td><td align="right" headers="Event Waits" class='awrclb'>124</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>72.57us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>72.57us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>72.57us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>72.57us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrnclb'>258</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>32.72us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>32.72us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>32.72us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>32.72us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrnclb'>16</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>409.81us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>409.81us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>272.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>547.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>194.90us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrclb'>236</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>23.47us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>23.66us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>23.44us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>23.88us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>313.95ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>wait list latch free</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.26ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.26ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.26ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.26ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>direct path sync</td><td align="right" headers="Event Waits" class='awrclb'>43</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>109.49us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>109.49us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>109.49us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>109.49us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges ipc enter server mode</td><td align="right" headers="Event Waits" class='awrnclb'>384</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>10.65us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>10.74us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>8.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>12.62us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.65us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>name-service call wait</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>944.75us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>944.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>640.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>430.98us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current retry</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.37ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.37ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.37ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: AF - task serialization</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.36ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.36ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.36ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.36ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache lock</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.04ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Network</td><td headers="Wait Event" class='awrc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrclb'>199</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>8.93us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>10.65us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.88us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>13.42us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.92us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: TM - contention</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.38ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.38ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.38ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.38ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrclb'>55</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>19.56us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>20.95us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>18.49us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>23.42us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.48us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache pin</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>220.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>220.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>220.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>220.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: call allocation</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>133.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>133.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>133.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>133.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrnclb'>7</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>13.86us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>18.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>12.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>24.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>8.37us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>lock deadlock retry</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>16.75us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>19.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>14.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>24.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>6.84us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.33us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>10.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>10.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>9.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>11.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.06us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.33us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>353.55ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>watchdog main loop</td><td align="right" headers="Event Waits" class='awrclb'>1,647</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4,944.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3001.84ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>27.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3001.85ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3000.02ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3003.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.58ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrnclb'>199</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>620.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3116.17ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>3.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1926.08ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>644.82us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3851.52ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2722.98ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PL/SQL lock timer</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9000.19ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>9000.19ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>9000.19ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>9000.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Execution Msg</td><td align="right" headers="Event Waits" class='awrnclb'>48</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>927.21us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.74ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>571.93us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Msg Fragment</td><td align="right" headers="Event Waits" class='awrclb'>120</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>433.36us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>433.36us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>404.22us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>462.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>41.21us</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12054"></a>
<h3 class="awr">Background Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%bgtime">%bg time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>55,050</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,485.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>26.98ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.47</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>26.29ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>20.87ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>31.70ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>7.66ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>26,602</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>433.71</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>16.30ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.14</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>16.30ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>16.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>16.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>109,277</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>392.56</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.59ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.13</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.39ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.84ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>319.14us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrnclb'>7,452</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>53.22</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.14ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.14ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.14ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrclb'>1,283</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>38.11</td><td align="right" headers="WaitTime AvgWait" class='awrc'>29.71ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>29.71ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>29.71ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>29.71ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrnclb'>33,636</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>26.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>775.10us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.53ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>731.42us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.54ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges inquiry response</td><td align="right" headers="Event Waits" class='awrclb'>21,826</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>16.24</td><td align="right" headers="WaitTime AvgWait" class='awrc'>744.03us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>846.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>743.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>948.40us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>144.57us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>608</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>12.19</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>20.05ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>20.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>19.42ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>20.59ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>829.24us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrclb'>6,525</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>7.25</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.11ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>909.20us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>298.14us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>1,685</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.98ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>700.31us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.29ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.25ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>KSV master wait</td><td align="right" headers="Event Waits" class='awrclb'>2,627</td><td align="right" headers="Event %Timeouts" class='awrc'>35.17</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4.33</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.65ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.59ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.24ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.94ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>493.88us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrnclb'>3,702</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.24</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.15ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.15ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>358.89us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.93ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.11ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>gcs log flush sync</td><td align="right" headers="Event Waits" class='awrclb'>4,467</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.35</td><td align="right" headers="WaitTime AvgWait" class='awrc'>750.02us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>737.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>686.47us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>788.32us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>72.02us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrnclb'>118,671</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.15</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>26.52us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>25.86us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>20.49us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>31.23us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>7.59us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ksxr poll remote instances</td><td align="right" headers="Event Waits" class='awrclb'>88,570</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.78</td><td align="right" headers="WaitTime AvgWait" class='awrc'>31.39us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>31.39us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>30.38us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>32.40us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.43us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>7,025</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.28</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>324.84us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>324.95us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>322.35us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>327.55us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.68us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>1,403</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.12</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.51ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.65ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>424.99us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.87ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.73ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrnclb'>117</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>17.83ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>18.10ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>14.58ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>21.61ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.97ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>buffer busy waits</td><td align="right" headers="Event Waits" class='awrclb'>32</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.41</td><td align="right" headers="WaitTime AvgWait" class='awrc'>44.22ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>22.91ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>175.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>45.64ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>32.15ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>log file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>836</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.28</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.54ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>430.43us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>gcs remastering wait for read latch</td><td align="right" headers="Event Waits" class='awrclb'>14</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.24</td><td align="right" headers="WaitTime AvgWait" class='awrc'>88.43ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>62.06ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>518.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>123.59ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>87.03ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" headers="Event Waits" class='awrnclb'>70</td><td align="right" headers="Event %Timeouts" class='awrnc'>68.57</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.18</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>16.83ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>16.83ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>15.62ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>18.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.71ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrclb'>39</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>27.27ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>27.27ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>27.27ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>27.27ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>reliable message</td><td align="right" headers="Event Waits" class='awrnclb'>179</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.94</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.23ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>16.08ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.21ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>28.94ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>18.19ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch free</td><td align="right" headers="Event Waits" class='awrclb'>2,300</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.91</td><td align="right" headers="WaitTime AvgWait" class='awrc'>393.54us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>393.86us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>271.12us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>516.60us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>173.58us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,411</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.87</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>615.91us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>585.32us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>554.43us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>616.22us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>43.69us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrclb'>10</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.82</td><td align="right" headers="WaitTime AvgWait" class='awrc'>81.96ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>81.96ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>81.96ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>81.96ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>268</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.68</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.54ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.06ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.23ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>15.89ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>9.65ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrclb'>21,181</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.59</td><td align="right" headers="WaitTime AvgWait" class='awrc'>28.07us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>28.07us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>27.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>28.39us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>455.93ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>27</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.54</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>20.11ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>18.19ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>910.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>35.48ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>24.44ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>814</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.53</td><td align="right" headers="WaitTime AvgWait" class='awrc'>654.46us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>764.10us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>648.19us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>880.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>163.91us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>DFS lock handle</td><td align="right" headers="Event Waits" class='awrnclb'>560</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.39</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>688.39us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>688.57us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>684.82us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>692.32us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.30us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>AQ: RAC AQ Network</td><td align="right" headers="Event Waits" class='awrclb'>12,320</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.37</td><td align="right" headers="WaitTime AvgWait" class='awrc'>29.88us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>29.88us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>29.53us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>30.24us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>501.37ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CGS wait for IPC msg</td><td align="right" headers="Event Waits" class='awrnclb'>13,334</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.35</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>26.48us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>26.48us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>26.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>26.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>210.79ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CF - contention</td><td align="right" headers="Event Waits" class='awrclb'>166</td><td align="right" headers="Event %Timeouts" class='awrc'>45.78</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.34</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.03ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.09ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.53ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.66ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>797.99us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>535</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.33</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>622.34us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>694.80us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>554.86us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>834.73us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>197.90us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrclb'>707</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.30</td><td align="right" headers="WaitTime AvgWait" class='awrc'>422.18us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>397.57us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>331.42us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>463.72us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>93.55us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>oracle thread bootstrap</td><td align="right" headers="Event Waits" class='awrnclb'>11</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.28</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>25.20ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>25.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>22.81ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>27.20ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.10ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: ges resource hash list</td><td align="right" headers="Event Waits" class='awrclb'>625</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.26</td><td align="right" headers="WaitTime AvgWait" class='awrc'>409.64us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>408.49us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>403.55us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>413.44us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>6.99us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file async I/O submit</td><td align="right" headers="Event Waits" class='awrnclb'>25,168</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.23</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.18us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>8.53us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.64us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>784.84ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: enqueue hash chains</td><td align="right" headers="Event Waits" class='awrclb'>629</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.23</td><td align="right" headers="WaitTime AvgWait" class='awrc'>358.68us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>383.54us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>358.28us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>408.80us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>35.72us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file scattered read</td><td align="right" headers="Event Waits" class='awrnclb'>75</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.22</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.99ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.62ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>492.74us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.75ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.01ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrclb'>827</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.19</td><td align="right" headers="WaitTime AvgWait" class='awrc'>227.30us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>226.20us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>220.95us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>231.45us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>7.42us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrnclb'>301</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.17</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>576.80us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>362.02us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>106.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>617.55us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>361.37us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>direct path write</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.17</td><td align="right" headers="WaitTime AvgWait" class='awrc'>19.15ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>14.78ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>9.15ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>20.40ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>7.96ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrnclb'>398</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.16</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>392.56us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>343.24us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>247.01us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>439.46us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>136.08us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" headers="Event Waits" class='awrclb'>291</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.13</td><td align="right" headers="WaitTime AvgWait" class='awrc'>438.17us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>438.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>438.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>438.17us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>direct path write temp</td><td align="right" headers="Event Waits" class='awrnclb'>30</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.92ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.92ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.92ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>164</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>583.59us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>565.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>537.77us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>592.22us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>38.51us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: RO - fast object reuse</td><td align="right" headers="Event Waits" class='awrnclb'>50</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.66ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.46ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>438.25us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.48ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.44ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>122</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>659.71us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>774.44us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>649.47us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>899.40us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>176.73us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrnclb'>204</td><td align="right" headers="Event %Timeouts" class='awrnc'>77.45</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>384.79us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>401.41us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>381.70us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>421.13us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>27.88us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Network</td><td headers="Wait Event" class='awrc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrclb'>939</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>78.41us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>78.41us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>76.90us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>79.92us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.14us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: US - contention</td><td align="right" headers="Event Waits" class='awrnclb'>13</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.03ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.03ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.03ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.03ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR wait for redo copy</td><td align="right" headers="Event Waits" class='awrclb'>196</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>270.82us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>303.95us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>101.04us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>506.87us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>286.97us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: action</td><td align="right" headers="Event Waits" class='awrnclb'>40</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.26ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.96ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.28ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>227.13us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS operation: data query</td><td align="right" headers="Event Waits" class='awrclb'>36</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.36ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.36ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.41ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>67.45us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr disk read</td><td align="right" headers="Event Waits" class='awrnclb'>71</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>653.15us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>658.76us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>579.16us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>738.36us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>112.58us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>row cache lock</td><td align="right" headers="Event Waits" class='awrclb'>31</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.44ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.58ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.83ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>357.69us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Join ACK</td><td align="right" headers="Event Waits" class='awrnclb'>16</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.48ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.18ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.07ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.58ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrclb'>1,241</td><td align="right" headers="Event %Timeouts" class='awrc'>99.27</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>30.63us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>30.61us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>26.86us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>34.36us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.31us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: data update</td><td align="right" headers="Event Waits" class='awrnclb'>40</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>919.68us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>919.68us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>883.10us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>.96ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>51.72us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: redo allocation</td><td align="right" headers="Event Waits" class='awrclb'>75</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>407.31us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>382.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>343.57us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>421.93us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>55.41us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrnclb'>24</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.17ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>168.26us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrclb'>70</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>390.20us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>385.45us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>376.69us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>394.20us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>12.39us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>os thread creation</td><td align="right" headers="Event Waits" class='awrnclb'>11</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.22ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.19ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.93ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.46ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>379.03us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: messages</td><td align="right" headers="Event Waits" class='awrclb'>87</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>252.59us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>259.42us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>238.91us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>279.93us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>29.00us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: TM - contention</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>10.22ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>10.22ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>486.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>19.96ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>13.77ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>library cache lock</td><td align="right" headers="Event Waits" class='awrclb'>28</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>713.75us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.02ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>481.95us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.56ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>764.89us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrnclb'>12</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.36ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.36ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.36ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.36ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrclb'>15</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.01ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>.98ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.35ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>256.07us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache pin</td><td align="right" headers="Event Waits" class='awrnclb'>25</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>602.16us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>690.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>543.55us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>836.60us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>207.22us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrclb'>219</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>65.14us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.54us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>46.36us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>74.72us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>20.05us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrnclb'>12</td><td align="right" headers="Event %Timeouts" class='awrnc'>25.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.10ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.97ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.49ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>366.05us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block congested</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.88ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.88ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.88ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.88ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>libcache interrupt action by LCK</td><td align="right" headers="Event Waits" class='awrnclb'>1,886</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.02us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.03us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.96us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.11us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>102.76ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>direct path sync</td><td align="right" headers="Event Waits" class='awrclb'>86</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>125.81us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>125.81us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>123.49us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>128.14us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.29us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrnclb'>11</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>880.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>880.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>880.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>880.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CO - master slave det</td><td align="right" headers="Event Waits" class='awrclb'>10</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>888.60us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>888.60us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>888.60us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>888.60us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.98ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>.98ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.98ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>.98ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: DW - contention</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.09ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.07ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>.95ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>168.94us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrnclb'>30</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>248.63us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>285.34us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>206.68us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>364.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>111.24us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant congested</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.98ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.98ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.98ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.98ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: WT - contention</td><td align="right" headers="Event Waits" class='awrnclb'>7</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>843.43us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>843.43us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>843.43us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>843.43us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" headers="Event Waits" class='awrclb'>34</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>167.26us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>135.52us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>94.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>177.03us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>58.71us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>enq: HW - contention</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>20.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.10ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.10ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.10ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.10ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>606.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>602.10us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>567.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>637.20us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>49.64us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>latch: redo writing</td><td align="right" headers="Event Waits" class='awrnclb'>13</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>399.08us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>254.84us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>46.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>463.18us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>294.64us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: TO - contention</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.64ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.64ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.64ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.64ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block congested</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.03ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.03ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.03ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.03ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: TT - contention</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>50.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.00ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.05ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>942.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>157.92us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: checkpoint queue latch</td><td align="right" headers="Event Waits" class='awrnclb'>19</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>200.63us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>209.90us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>174.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>245.14us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>49.83us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>885.25us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>885.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>728.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>222.39us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrnclb'>16</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>197.94us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>217.06us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>186.46us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>247.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>43.28us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: TD - KTF dump entries</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>686.50us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>686.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>648.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>725.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>54.45us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TK - Auto Task Serialization</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.12ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.96ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.29ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>231.93us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" headers="Event Waits" class='awrclb'>16</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>138.81us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>105.81us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>53.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>158.62us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>74.68us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges enter server mode</td><td align="right" headers="Event Waits" class='awrnclb'>182</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>11.19us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>11.26us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>8.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>13.59us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.29us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>name-service call wait</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>884.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>884.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>870.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>898.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>19.80us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: SM -  contention</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>820.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>820.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>820.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>820.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: TA - contention</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>470.67us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>463.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>443.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>484.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>29.34us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges ipc enter server mode</td><td align="right" headers="Event Waits" class='awrnclb'>211</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.25us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.98us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.44us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>327.57ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Commit</td><td headers="Wait Event" class='awrc'>log file sync</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.15ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.15ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.15ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: PW - flush prewarm buffers</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>862.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>862.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>862.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>862.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>GCR CSS group query</td><td align="right" headers="Event Waits" class='awrclb'>36</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>19.83us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>19.83us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>16.22us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>23.44us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.11us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>GCR CSS group update</td><td align="right" headers="Event Waits" class='awrnclb'>36</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>14.75us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>14.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>12.78us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>16.72us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.79us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: shared pool</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>472.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>472.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>472.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>472.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrnclb'>37</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.65us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.51us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.82us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.20us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.39us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: MGA shared context root latch</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>79.33us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>78.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>77.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>80.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.47us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrnclb'>35</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.54us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.53us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.38us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.68us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>218.64ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc quiesce</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>57.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>57.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>57.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>57.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.50us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>707.11ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>undo_retention publish retry</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>707.11ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ASM background starting</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.50us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>707.11ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>rdbms ipc message</td><td align="right" headers="Event Waits" class='awrnclb'>330,059</td><td align="right" headers="Event %Timeouts" class='awrnc'>6.77</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>26,702.69</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>80.90ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>8.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>80.95ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>78.98ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>82.93ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.79ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Idle Wait</td><td align="right" headers="Event Waits" class='awrclb'>18</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>20,439.95</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1135.55 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>6.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1135.55 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1134.92 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1136.18 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>891.53ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Space Manager: slave idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>6,257</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>19,679.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3145.13ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>6.29</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3232.29ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2700.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3764.35ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>752.46ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>class slave wait</td><td align="right" headers="Event Waits" class='awrclb'>16,216</td><td align="right" headers="Event %Timeouts" class='awrc'>75.47</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9,855.76</td><td align="right" headers="WaitTime AvgWait" class='awrc'>607.78ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>3.15</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>607.74ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>581.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>634.18ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>37.39ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>wait for unread message on broadcast channel</td><td align="right" headers="Event Waits" class='awrnclb'>1,889</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.05</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3,702.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1959.83ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>1.18</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1959.83ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1959.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1960.34ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>718.79us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>pmon timer</td><td align="right" headers="Event Waits" class='awrclb'>823</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,468.92</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2999.91ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.79</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2999.91ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2999.90ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2999.91ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>6.75us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>GCR sleep</td><td align="right" headers="Event Waits" class='awrnclb'>8,221</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,466.71</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>300.05ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.79</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>300.05ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>300.00ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>300.10ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>66.44us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>DIAG idle wait</td><td align="right" headers="Event Waits" class='awrclb'>15,487</td><td align="right" headers="Event %Timeouts" class='awrc'>82.85</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,463.64</td><td align="right" headers="WaitTime AvgWait" class='awrc'>159.08ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.79</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>159.08ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>158.44ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>159.72ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>909.89us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>gcs yield cpu</td><td align="right" headers="Event Waits" class='awrnclb'>84,426</td><td align="right" headers="Event %Timeouts" class='awrnc'>99.43</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,455.63</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>29.09ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.78</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>29.09ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>28.79ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>29.39ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>421.95us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>ges remote message</td><td align="right" headers="Event Waits" class='awrclb'>369,027</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,438.29</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.61ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.78</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.63ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.24ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>552.62us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>gcs remote message</td><td align="right" headers="Event Waits" class='awrnclb'>2,443,636</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,111.47</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>864.07us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.67</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>872.48us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>775.84us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>.97ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>136.66us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>LGWR worker group idle</td><td align="right" headers="Event Waits" class='awrclb'>14,499</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,389.23</td><td align="right" headers="WaitTime AvgWait" class='awrc'>95.82ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.44</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>13.05ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>13.05ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>13.05ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PING</td><td align="right" headers="Event Waits" class='awrnclb'>1,082</td><td align="right" headers="Event %Timeouts" class='awrnc'>18.85</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,240.59</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1146.57ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1148.65ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1099.83ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1197.47ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>69.04ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>ASM background timer</td><td align="right" headers="Event Waits" class='awrclb'>4,334</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,236.27</td><td align="right" headers="WaitTime AvgWait" class='awrc'>285.25ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>285.40ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>278.94ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>291.85ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>9.13ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>OFS idle</td><td align="right" headers="Event Waits" class='awrnclb'>412</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,236.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3000.02ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3000.02ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3000.01ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3000.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>10.24us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>pman timer</td><td align="right" headers="Event Waits" class='awrclb'>412</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,235.87</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2999.68ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2999.68ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2999.68ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2999.68ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.00us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>ASM cluster membership changes</td><td align="right" headers="Event Waits" class='awrnclb'>706</td><td align="right" headers="Event %Timeouts" class='awrnc'>81.87</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,235.74</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1750.35ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1750.35ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1750.34ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1750.35ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>6.85us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,234.19</td><td align="right" headers="WaitTime AvgWait" class='awrc'>61.71 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>61.71 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>61.68 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>61.74 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>38.00ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>heartbeat redo informer</td><td align="right" headers="Event Waits" class='awrnclb'>1,234</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,234.18</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1000.14ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1000.14ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1000.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1000.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>9.95us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>lreg timer</td><td align="right" headers="Event Waits" class='awrclb'>411</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,234.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3002.54ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3002.54ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3002.53ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3002.56ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>21.84us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>SCM slave idle</td><td align="right" headers="Event Waits" class='awrnclb'>12,376</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,232.55</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>99.59ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>99.59ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>99.49ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>99.69ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>143.65us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Streams AQ: qmn coordinator idle wait</td><td align="right" headers="Event Waits" class='awrclb'>90</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,232.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>13.69 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>13.69 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>13.69 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>13.69 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>24.59us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Streams AQ: qmn slave idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>46</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,232.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>26.78 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>26.78 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>26.78 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>26.78 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>461.13us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>shared server idle wait</td><td align="right" headers="Event Waits" class='awrclb'>0</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,230.23</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Streams AQ: waiting for time management or cleanup tasks</td><td align="right" headers="Event Waits" class='awrnclb'>0</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,230.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>dispatcher timer</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.12</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.01 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.38</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>264.60us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>AQPC idle</td><td align="right" headers="Event Waits" class='awrnclb'>40</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>30.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.38</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>53.39us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Data Guard: Gap Manager</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.38</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>90.16us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Data Guard: Timer</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>600.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.38</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>271.53us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>smon timer</td><td align="right" headers="Event Waits" class='awrclb'>32</td><td align="right" headers="Event %Timeouts" class='awrc'>3.13</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,190.56</td><td align="right" headers="WaitTime AvgWait" class='awrc'>37.21 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.38</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>41.22 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>30.51 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>51.93 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>15.15 s</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Execute Reply</td><td align="right" headers="Event Waits" class='awrnclb'>16</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.74ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.54ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.86ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>453.62us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq Credit: send blkd</td><td align="right" headers="Event Waits" class='awrclb'>65</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>663.29us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>663.29us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>663.29us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>663.29us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Parse Reply</td><td align="right" headers="Event Waits" class='awrnclb'>16</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.21ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.69ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.92ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.47ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.09ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>RMA: IPC0 completion sync</td><td align="right" headers="Event Waits" class='awrclb'>1,340</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>24.72us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>24.72us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>24.21us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>25.24us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>729.27ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrnclb'>36</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>726.11us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>737.85us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>526.47us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>949.24us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>298.94us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>heartbeat monitor sleep</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>179.67us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>179.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>179.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>179.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12055"></a>
<h3 class="awr">Wait Event Histogram (Global)</h3>
<ul>
<li class="awr"> When % of Total Waits is  0.0 the count is displayed in parenthesis</li>
</ul>
<table border="0" class="tdiff" summary="This table displays wait event histogram information"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 22" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us"> &lt;8us</th><th class="awrbg" scope="col" id="&lt;16us"> &lt;16us</th><th class="awrbg" scope="col" id="&lt;32us"> &lt;32us</th><th class="awrbg" scope="col" id="&lt;64us"> &lt;64us</th><th class="awrbg" scope="col" id="&lt;128us"> &lt;128us</th><th class="awrbg" scope="col" id="&lt;256us"> &lt;256us</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms"> &lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms"> &lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms"> &lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms"> &lt;64ms</th><th class="awrbg" scope="col" id="&lt;128ms"> &lt;128ms</th><th class="awrbg" scope="col" id="&lt;256ms"> &lt;256ms</th><th class="awrbg" scope="col" id="&lt;512ms"> &lt;512ms</th><th class="awrbg" scope="col" id="&lt;1s"> &lt;1s</th><th class="awrbg" scope="col" id="&gt;=1s"> &gt;=1s</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>12.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>82.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>118.6K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>67.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>20.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(20)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM background starting</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>6719</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>39.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>12.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AWR Flush</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>80.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>13.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>74.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS initialization</td><td align="right" class='awrc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>47.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>92</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>55.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>30.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>30.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>40</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>70.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>108</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>67.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>560</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>41.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>356</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>36.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>37.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Data file init write</td><td align="right" class='awrnc'>82</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>25.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>28.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>45.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>1758</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>21.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>23.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>1097</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>14.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>43.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>3696</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>13.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>21.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>945</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>37.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>36.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>1269</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>81.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>1821</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>27.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>42.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>3109</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>16.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>12.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>1288</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>28.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>24.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>25.2</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>26.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.0(13)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>24.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>19.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>194</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>16.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>12.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>13.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>7419</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>43.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>25.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>799</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>46.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>28.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>12.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>16</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrnc'>16</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>43.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>32</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>34.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>21.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>79.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.0(9)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net break/reset to client</td><td align="right" class='awrc'>124</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>35.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>33.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>11.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message to client</td><td align="right" class='awrnc'>234</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>83.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>117</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>38.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>10.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>asynch descriptor resize</td><td align="right" class='awrnc'>40</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>87.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>buffer busy waits</td><td align="right" class='awrc'>28.9K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>19.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>20.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>22.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>729</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>9.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>37.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>15.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>21.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>12.8</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>8002</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>33.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>31.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>10.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cursor: pin S</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>datafile move cleanup during resize</td><td align="right" class='awrc'>41</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>19.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>65.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>25.1K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>93.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file parallel read</td><td align="right" class='awrc'>413.2K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.0(13)</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>40.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>13.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>12.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>109.2K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>14.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(30)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>75</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>28.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>32.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>1.9M</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.0(20)</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>31.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>15.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>23.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>13.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file single write</td><td align="right" class='awrc'>82</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>22.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>28.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>26.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path sync</td><td align="right" class='awrnc'>124</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>75.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>19.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>41.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path write temp</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>53.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>46.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: AF - task serialization</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>213</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>63.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>16.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CO - master slave det</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrnc'>88K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.0(14)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>49.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.0(34)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.0(15)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>57.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>11</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>45.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>36.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>393</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>9.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>16.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>18.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>15.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>23</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>26.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>26.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>39.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: PW - flush prewarm buffers</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: RO - fast object reuse</td><td align="right" class='awrnc'>50</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>52.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>26.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>16.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: SM -  contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TA - contention</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TD - KTF dump entries</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TK - Auto Task Serialization</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TM - contention</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TO - contention</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TT - contention</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: US - contention</td><td align="right" class='awrnc'>22.9K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>9.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>19.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>29</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>41.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>41.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: WT - contention</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>57.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>19</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>36.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>26.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>6253</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>28.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>48.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>14.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>59</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>23.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>13.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>35.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>15.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>53.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block lost</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr disk read</td><td align="right" class='awrnc'>71</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>53.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>32.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>285.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>46.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>36.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(16)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>8739</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>12.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>58.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>22.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant congested</td><td align="right" class='awrc'>567</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>28.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>50.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block grant</td><td align="right" class='awrnc'>198.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.0(13)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.0(35)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>43.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>42.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(33)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.0(10)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>17.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>54.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>21.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>49.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>61.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>15.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>34.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>49.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(7)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>150</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>54.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>23.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block lost</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>379.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>48.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>35.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(7)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>12.7K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>56.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>708</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>28.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>50.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>15.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>72.9K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.0(18)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.0(20)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>44.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>41.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(24)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current multi block request</td><td align="right" class='awrnc'>11</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>45.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current retry</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc quiesce</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs drm freeze in enter server mode</td><td align="right" class='awrc'>45</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>82.2</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>3162</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>15.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>17.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remastering wait for read latch</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>35.7</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges enter server mode</td><td align="right" class='awrnc'>13K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>93.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges inquiry response</td><td align="right" class='awrc'>21.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>28.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>57.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.0(9)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges ipc enter server mode</td><td align="right" class='awrnc'>595</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>83.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrc'>70</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>17.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>88.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" class='awrc'>34</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>26.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>14.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kfk: async disk IO</td><td align="right" class='awrnc'>82</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>23.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>18.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>19.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>14.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>7.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>291</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>14.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>17.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>28.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>88.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>86.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(9)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>4208</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>18.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: MGA shared context root latch</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>83</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>24.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>16.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>845</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>17.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: call allocation</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: checkpoint queue latch</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>13.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>22.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>448</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>18.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>22.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>621</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>15.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>17.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: ges resource hash list</td><td align="right" class='awrnc'>1893</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>19.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>22.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>87</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>20.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>26.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>124</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>13.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>17.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>25.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>214</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>16.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>21.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>17.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo writing</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: shared pool</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: undo global data</td><td align="right" class='awrnc'>147</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>25.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>21.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>17.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>libcache interrupt action by LCK</td><td align="right" class='awrc'>1885</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>87.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>27</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>55.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lock deadlock retry</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>54.9K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>16.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>23.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>27.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>25.8</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>836</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>13.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>30.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>15.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file sync</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>30.8</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service call wait</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>63.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>11</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>45.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>36.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>21.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>69.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>26.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>0.0(1)</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>43</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>46.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>32.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>row cache mutex</td><td align="right" class='awrc'>276</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>42.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>undo segment extension</td><td align="right" class='awrnc'>189</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>18.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>33.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>21.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo_retention publish retry</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>wait list latch free</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="639"></a>
<h2 class="awr">
Global Activity Load Profile
</h2>
<ul>
<li class="awr"><a class="awr" href="#12016">System Statistics</a></li>
<li class="awr"><a class="awr" href="#12017">System Statistics - Per Second</a></li>
<li class="awr"><a class="awr" href="#12018">System Statistics - Per Transaction</a></li>
<li class="awr"><a class="awr" href="#12030">SysStat and Global Messaging  - RAC</a></li>
<li class="awr"><a class="awr" href="#12031">SysStat and Global Messaging (per Sec)- RAC</a></li>
<li class="awr"><a class="awr" href="#12032">SysStat and Global Messaging (per Tx)- RAC</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12016"></a>
<h3 class="awr">System Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Redo Size (k)</th><th class="awrbg" scope="col">Block Changes</th><th class="awrbg" scope="col">User Calls</th><th class="awrbg" scope="col">Execs</th><th class="awrbg" scope="col">Parses</th><th class="awrbg" scope="col">Logons</th><th class="awrbg" scope="col">Txns</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>7,234,630</td><td align="right" class='awrc'>4,253,774</td><td align="right" class='awrc'>709,396</td><td align="right" class='awrc'>598,226</td><td align="right" class='awrc'>1,801,188</td><td align="right" class='awrc'>166</td><td align="right" class='awrc'>331,888</td><td align="right" class='awrc'>23,955</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>45,987</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>5,253,488</td><td align="right" class='awrnc'>2,771,694</td><td align="right" class='awrnc'>414,191</td><td align="right" class='awrnc'>355,398</td><td align="right" class='awrnc'>952,260</td><td align="right" class='awrnc'>269</td><td align="right" class='awrnc'>194,308</td><td align="right" class='awrnc'>1,366</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>28,839</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>12,488,118</td><td align="right" class='awrct'>7,025,468</td><td align="right" class='awrct'>1,123,587</td><td align="right" class='awrct'>953,623</td><td align="right" class='awrct'>2,753,448</td><td align="right" class='awrct'>435</td><td align="right" class='awrct'>526,196</td><td align="right" class='awrct'>25,321</td><td align="right" class='awrct'>28</td><td align="right" class='awrct'>74,826</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>6,244,059</td><td align="right" class='awrnc'>3,512,734</td><td align="right" class='awrnc'>561,794</td><td align="right" class='awrnc'>476,812</td><td align="right" class='awrnc'>1,376,724</td><td align="right" class='awrnc'>218</td><td align="right" class='awrnc'>263,098</td><td align="right" class='awrnc'>12,661</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>37,413</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>1,400,879</td><td align="right" class='awrc'>1,047,989</td><td align="right" class='awrc'>208,741</td><td align="right" class='awrc'>171,705</td><td align="right" class='awrc'>600,283</td><td align="right" class='awrc'>73</td><td align="right" class='awrc'>97,284</td><td align="right" class='awrc'>15,973</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12,125</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12017"></a>
<h3 class="awr">System Statistics - Per Second</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Second"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/s</th><th class="awrbg" scope="col">Physical Reads/s</th><th class="awrbg" scope="col">Physical Writes/s</th><th class="awrbg" scope="col">Redo Size (k)/s</th><th class="awrbg" scope="col">Block Changes/s</th><th class="awrbg" scope="col">User Calls/s</th><th class="awrbg" scope="col">Execs/s</th><th class="awrbg" scope="col">Parses/s</th><th class="awrbg" scope="col">Logons/s</th><th class="awrbg" scope="col">Txns/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>11,717.20</td><td align="right" class='awrc'>6,889.41</td><td align="right" class='awrc'>1,148.94</td><td align="right" class='awrc'>968.89</td><td align="right" class='awrc'>2,917.20</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>537.53</td><td align="right" class='awrc'>38.80</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>74.48</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>8,507.91</td><td align="right" class='awrnc'>4,488.70</td><td align="right" class='awrnc'>670.77</td><td align="right" class='awrnc'>575.56</td><td align="right" class='awrnc'>1,542.16</td><td align="right" class='awrnc'>0.44</td><td align="right" class='awrnc'>314.68</td><td align="right" class='awrnc'>2.21</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>46.70</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>20,225.10</td><td align="right" class='awrct'>11,378.10</td><td align="right" class='awrct'>1,819.71</td><td align="right" class='awrct'>1,544.44</td><td align="right" class='awrct'>4,459.37</td><td align="right" class='awrct'>0.70</td><td align="right" class='awrct'>852.20</td><td align="right" class='awrct'>41.01</td><td align="right" class='awrct'>0.05</td><td align="right" class='awrct'>121.18</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>10,112.55</td><td align="right" class='awrnc'>5,689.05</td><td align="right" class='awrnc'>909.85</td><td align="right" class='awrnc'>772.22</td><td align="right" class='awrnc'>2,229.68</td><td align="right" class='awrnc'>0.35</td><td align="right" class='awrnc'>426.10</td><td align="right" class='awrnc'>20.50</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>60.59</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>2,269.31</td><td align="right" class='awrc'>1,697.56</td><td align="right" class='awrc'>338.11</td><td align="right" class='awrc'>278.12</td><td align="right" class='awrc'>972.30</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>157.58</td><td align="right" class='awrc'>25.87</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>19.64</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12018"></a>
<h3 class="awr">System Statistics - Per Transaction</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Transaction"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/tx</th><th class="awrbg" scope="col">Physical Reads/tx</th><th class="awrbg" scope="col">Physical Writes/tx</th><th class="awrbg" scope="col">Redo Size (k)/tx</th><th class="awrbg" scope="col">Block Changes/tx</th><th class="awrbg" scope="col">User Calls/tx</th><th class="awrbg" scope="col">Execs/tx</th><th class="awrbg" scope="col">Parses/tx</th><th class="awrbg" scope="col">Logons/tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>157.32</td><td align="right" class='awrc'>92.50</td><td align="right" class='awrc'>15.43</td><td align="right" class='awrc'>13.01</td><td align="right" class='awrc'>39.17</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>7.22</td><td align="right" class='awrc'>0.52</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>182.17</td><td align="right" class='awrnc'>96.11</td><td align="right" class='awrnc'>14.36</td><td align="right" class='awrnc'>12.32</td><td align="right" class='awrnc'>33.02</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>6.74</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>169.74</td><td align="right" class='awrct'>94.30</td><td align="right" class='awrct'>14.89</td><td align="right" class='awrct'>12.67</td><td align="right" class='awrct'>36.09</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>6.98</td><td align="right" class='awrct'>0.28</td><td align="right" class='awrct'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12030"></a>
<h3 class="awr">SysStat and Global Messaging  - RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging  - RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceived">Blocks Received</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)">CPU (seconds)</th>
<th class="awrbg" colspan=" 6" id="Messages">Messages</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost">Lost</th><th class="awrbg" scope="col" id="Failure">Failure</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceived GCCurrent" class='awrclb'>92,749</td><td align="right" headers="BlocksReceived GCCR" class='awrc'>35,036</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>16,568</td><td align="right" headers="BlocksServed GCCR" class='awrc'>1,546</td><td align="right" headers="CPU(seconds) GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrc'>0</td><td align="right" headers="Messages GCSReceived" class='awrclb'>3,620,100</td><td align="right" headers="Messages GESReceived" class='awrc'>114,761</td><td align="right" headers="Messages GCSSent" class='awrc'>5,024,784</td><td align="right" headers="Messages GESSent" class='awrc'>116,005</td><td align="right" headers="Messages SentDirect" class='awrc'>615,662</td><td align="right" headers="Messages SentIndir" class='awrc'>2,302,851</td><td align="right" headers="GCBlks Lost" class='awrclb'>14</td><td align="right" headers="GCCR Failure" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceived GCCurrent" class='awrnclb'>16,754</td><td align="right" headers="BlocksReceived GCCR" class='awrnc'>1,569</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>93,159</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>35,161</td><td align="right" headers="CPU(seconds) GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrnc'>0</td><td align="right" headers="Messages GCSReceived" class='awrnclb'>5,034,601</td><td align="right" headers="Messages GESReceived" class='awrnc'>114,012</td><td align="right" headers="Messages GCSSent" class='awrnc'>3,630,352</td><td align="right" headers="Messages GESSent" class='awrnc'>114,970</td><td align="right" headers="Messages SentDirect" class='awrnc'>314,140</td><td align="right" headers="Messages SentIndir" class='awrnc'>1,006,460</td><td align="right" headers="GCBlks Lost" class='awrnclb'>2</td><td align="right" headers="GCCR Failure" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>109,503</td><td align="right" class='awrct'>36,605</td><td align="right" class='awrclbt'>109,727</td><td align="right" class='awrct'>36,707</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>8,654,701</td><td align="right" class='awrct'>228,773</td><td align="right" class='awrct'>8,655,136</td><td align="right" class='awrct'>230,975</td><td align="right" class='awrct'>929,802</td><td align="right" class='awrct'>3,309,311</td><td align="right" class='awrclbt'>16</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>54,752</td><td align="right" class='awrnc'>18,303</td><td align="right" class='awrnclb'>54,864</td><td align="right" class='awrnc'>18,354</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>4,327,351</td><td align="right" class='awrnc'>114,387</td><td align="right" class='awrnc'>4,327,568</td><td align="right" class='awrnc'>115,488</td><td align="right" class='awrnc'>464,901</td><td align="right" class='awrnc'>1,654,656</td><td align="right" class='awrnclb'>8</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>53,737</td><td align="right" class='awrc'>23,665</td><td align="right" class='awrclb'>54,158</td><td align="right" class='awrc'>23,769</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>1,000,203</td><td align="right" class='awrc'>530</td><td align="right" class='awrc'>986,012</td><td align="right" class='awrc'>732</td><td align="right" class='awrc'>213,208</td><td align="right" class='awrc'>916,687</td><td align="right" class='awrclb'>8</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12031"></a>
<h3 class="awr">SysStat and Global Messaging (per Sec)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Sec)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedPerSecond">Blocks Received Per Second</th>
<th class="awrbg" colspan=" 2" id="BlocksServedperSecond">Blocks Served per Second</th>
<th class="awrbg" colspan=" 2" id="CPUsecondsperSecond">CPU seconds per Second</th>
<th class="awrbg" colspan=" 6" id="MessagesPerSecond">Messages Per Second</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent</th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/s">Lost/s</th><th class="awrbg" scope="col" id="Fail/s">Fail/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrclb'>150.22</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrc'>56.74</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrclb'>26.83</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrc'>2.50</td><td align="right" headers="CPUsecondsperSecond GC" class='awrclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrclb'>5,863.11</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrc'>185.87</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrc'>8,138.13</td><td align="right" headers="MessagesPerSecond GESSent" class='awrc'>187.88</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrc'>997.13</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrc'>3,729.69</td><td align="right" headers="GCBlks Lost/s" class='awrclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrnclb'>27.13</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrnc'>2.54</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrnclb'>150.87</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrnc'>56.94</td><td align="right" headers="CPUsecondsperSecond GC" class='awrnclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrnclb'>8,153.42</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrnc'>184.64</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrnc'>5,879.27</td><td align="right" headers="MessagesPerSecond GESSent" class='awrnc'>186.19</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrnc'>508.74</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrnc'>1,629.94</td><td align="right" headers="GCBlks Lost/s" class='awrnclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>177.35</td><td align="right" class='awrct'>59.29</td><td align="right" class='awrclbt'>177.70</td><td align="right" class='awrct'>59.45</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>14,016.53</td><td align="right" class='awrct'>370.51</td><td align="right" class='awrct'>14,017.41</td><td align="right" class='awrct'>374.07</td><td align="right" class='awrct'>1,505.87</td><td align="right" class='awrct'>5,359.63</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>88.67</td><td align="right" class='awrnc'>29.64</td><td align="right" class='awrnclb'>88.85</td><td align="right" class='awrnc'>29.72</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnclb'>7,008.27</td><td align="right" class='awrnc'>185.25</td><td align="right" class='awrnc'>7,008.70</td><td align="right" class='awrnc'>187.04</td><td align="right" class='awrnc'>752.93</td><td align="right" class='awrnc'>2,679.82</td><td align="right" class='awrnclb'>0</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>87.03</td><td align="right" class='awrc'>38.33</td><td align="right" class='awrclb'>87.71</td><td align="right" class='awrc'>38.49</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrclb'>1,619.50</td><td align="right" class='awrc'>0.87</td><td align="right" class='awrc'>1,597.25</td><td align="right" class='awrc'>1.20</td><td align="right" class='awrc'>345.34</td><td align="right" class='awrc'>1,484.75</td><td align="right" class='awrclb'>0</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12032"></a>
<h3 class="awr">SysStat and Global Messaging (per Tx)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Tx)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedperTx">Blocks Received per Tx</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)perTx">CPU (seconds) per Tx</th>
<th class="awrbg" colspan=" 6" id="MessagesperTransaction">Messages per Transaction</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/Tx">Lost/Tx</th><th class="awrbg" scope="col" id="Fail/Tx">Fail/Tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrclb'>2.02</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrc'>0.76</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>0.36</td><td align="right" headers="BlocksServed GCCR" class='awrc'>0.03</td><td align="right" headers="CPU(seconds)perTx GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrclb'>78.72</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrc'>2.50</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrc'>109.27</td><td align="right" headers="MessagesperTransaction GESSent" class='awrc'>2.52</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrc'>13.39</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrc'>50.08</td><td align="right" headers="GCBlks Lost/Tx" class='awrclb'>0.00</td><td align="right" headers="GCCR Fail/Tx" class='awrcbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrnclb'>0.58</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrnc'>0.05</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>3.23</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>1.22</td><td align="right" headers="CPU(seconds)perTx GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrnclb'>174.58</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrnc'>3.95</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrnc'>125.88</td><td align="right" headers="MessagesperTransaction GESSent" class='awrnc'>3.99</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrnc'>10.89</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrnc'>34.90</td><td align="right" headers="GCBlks Lost/Tx" class='awrnclb'>0.00</td><td align="right" headers="GCCR Fail/Tx" class='awrncbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>1.30</td><td align="right" class='awrct'>0.41</td><td align="right" class='awrclbt'>1.80</td><td align="right" class='awrct'>0.63</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>126.65</td><td align="right" class='awrct'>3.22</td><td align="right" class='awrct'>117.57</td><td align="right" class='awrct'>3.25</td><td align="right" class='awrct'>12.14</td><td align="right" class='awrct'>42.49</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrcbbt'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="605"></a>
<h2 class="awr">
Global Cache and Enqueue Statistics Summary
</h2>
<ul>
<li class="awr"><a class="awr" href="#12019">Global Cache Efficiency Percentages</a></li>
<li class="awr"><a class="awr" href="#12020">Global Latency Characteristics</a></li>
<li class="awr"><a class="awr" href="#12021">Global Messaging Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12019"></a>
<h3 class="awr">Global Cache Efficiency Percentages</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Cache Efficiency Percentages"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="BufferAccess">Buffer Access</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Local%">Local %</th><th class="awrbg" scope="col" id="Remote%">Remote %</th><th class="awrbg" scope="col" id="Disk%">Disk %</th><th class="awrbg" scope="col">Locality %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BufferAccess Local%" class='awrclb'>39.43</td><td align="right" headers="BufferAccess Remote%" class='awrc'>1.77</td><td align="right" headers="BufferAccess Disk%" class='awrcrb'>58.80</td><td align="right" class='awrc'>58.72</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BufferAccess Local%" class='awrnclb'>46.89</td><td align="right" headers="BufferAccess Remote%" class='awrnc'>0.35</td><td align="right" headers="BufferAccess Disk%" class='awrncrb'>52.76</td><td align="right" class='awrnc'>69.65</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12020"></a>
<h3 class="awr">Global Latency Characteristics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Latency Characteristics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CUBlocks">CU Blocks</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">GE Get Time (us)</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Build|Time(us)">Build Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CRSrvd%">Log Flush CR Srvd %</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Pin|Time(us)">Pin Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CUSrvd%">Log Flush CU Srvd %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>84</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrclb'>1758</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrc'>144</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrc'>51739</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrc'>1.49</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrclb'>1121</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrc'>0</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrc'>72632</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrcrb'>0.11</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>249</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrnclb'>1861</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrnc'>114</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrnc'>27632</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrnc'>0.11</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrnclb'>956</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrnc'>10000</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrnc'>18846</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrncrb'>0.03</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12021"></a>
<h3 class="awr">Global Messaging Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="QueueTime(us)">Queue Time (us)</th>
<th class="awrbg" colspan=" 2" id="ProcessTime(us)">Process Time (us)</th>
<th class="awrbg" colspan=" 3" id="%MessagesSent">% Messages Sent</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Sent">Sent</th><th class="awrbg" scope="col" id="onksxp">on ksxp</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="GCSmsgs">GCS msgs</th><th class="awrbg" scope="col" id="GESmsgs">GES msgs</th><th class="awrbg" scope="col" id="Direct">Direct</th><th class="awrbg" scope="col" id="Indirect">Indirect</th><th class="awrbg" scope="col" id="FlowCtrl">Flow Ctrl</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="QueueTime(us) Sent" class='awrclb'>778</td><td align="right" headers="QueueTime(us) onksxp" class='awrc'>1361</td><td align="right" headers="QueueTime(us) Received" class='awrc'>14</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrclb'>24</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrc'>22</td><td align="right" headers="%MessagesSent Direct" class='awrclb'>20.96</td><td align="right" headers="%MessagesSent Indirect" class='awrc'>78.41</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrcrb'>0.62</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="QueueTime(us) Sent" class='awrnclb'>493</td><td align="right" headers="QueueTime(us) onksxp" class='awrnc'>1046</td><td align="right" headers="QueueTime(us) Received" class='awrnc'>14</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrnclb'>24</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrnc'>25</td><td align="right" headers="%MessagesSent Direct" class='awrnclb'>23.73</td><td align="right" headers="%MessagesSent Indirect" class='awrnc'>76.04</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrncrb'>0.22</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12033"></a>
<h3 class="awr">Global CR Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global CR Server Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 5" id="BlockRequests">Block Requests</th>
<th class="awrbg" colspan=" 5" id="Results">Results</th>
<th class="awrbg" colspan=" 1" id="Fairness">Fairness</th>
<th class="awrbg" colspan=" 1" id="Light">Light</th>
<th class="awrbg" colspan=" 3" id="Total">Total</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="CR">CR</th><th class="awrbg" scope="col" id="CU">CU</th><th class="awrbg" scope="col" id="Data">Data</th><th class="awrbg" scope="col" id="Undo">Undo</th><th class="awrbg" scope="col" id="TX">TX</th><th class="awrbg" scope="col" id="Current">Current</th><th class="awrbg" scope="col" id="Private">Private</th><th class="awrbg" scope="col" id="Zero">Zero</th><th class="awrbg" scope="col" id="DskRd">Dsk Rd</th><th class="awrbg" scope="col" id="Fail">Fail</th><th class="awrbg" scope="col" id="DownConv">Down Conv</th><th class="awrbg" scope="col" id="Works">Works</th><th class="awrbg" scope="col" id="Flushes">Flushes</th><th class="awrbg" scope="col" id="Builds">Builds</th><th class="awrbg" scope="col" id="Errors">Errors</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlockRequests CR" class='awrclb'>1,526</td><td align="right" headers="BlockRequests CU" class='awrc'>65</td><td align="right" headers="BlockRequests Data" class='awrc'>1,526</td><td align="right" headers="BlockRequests Undo" class='awrc'>0</td><td align="right" headers="BlockRequests TX" class='awrc'>8</td><td align="right" headers="Results Current" class='awrclb'>1,551</td><td align="right" headers="Results Private" class='awrc'>2</td><td align="right" headers="Results Zero" class='awrc'>1</td><td align="right" headers="Results DskRd" class='awrc'>38</td><td align="right" headers="Results Fail" class='awrc'>0</td><td align="right" headers="Fairness DownConv" class='awrclb'>1,432</td><td align="right" headers="Light Works" class='awrclb'>883</td><td align="right" headers="Total Flushes" class='awrclb'>23</td><td align="right" headers="Total Builds" class='awrc'>1,527</td><td align="right" headers="Total Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlockRequests CR" class='awrnclb'>33,737</td><td align="right" headers="BlockRequests CU" class='awrnc'>1,404</td><td align="right" headers="BlockRequests Data" class='awrnc'>33,737</td><td align="right" headers="BlockRequests Undo" class='awrnc'>0</td><td align="right" headers="BlockRequests TX" class='awrnc'>1,352</td><td align="right" headers="Results Current" class='awrnclb'>35,099</td><td align="right" headers="Results Private" class='awrnc'>0</td><td align="right" headers="Results Zero" class='awrnc'>0</td><td align="right" headers="Results DskRd" class='awrnc'>33</td><td align="right" headers="Results Fail" class='awrnc'>0</td><td align="right" headers="Fairness DownConv" class='awrnclb'>33,672</td><td align="right" headers="Light Works" class='awrnclb'>3,253</td><td align="right" headers="Total Flushes" class='awrnclb'>38</td><td align="right" headers="Total Builds" class='awrnc'>33,737</td><td align="right" headers="Total Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>35,263</td><td align="right" class='awrct'>1,469</td><td align="right" class='awrct'>35,263</td><td align="right" class='awrct'>0</td><td align="right" class='awrct'>1,360</td><td align="right" class='awrclbt'>36,650</td><td align="right" class='awrct'>2</td><td align="right" class='awrct'>1</td><td align="right" class='awrct'>71</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>35,104</td><td align="right" class='awrclbt'>4,136</td><td align="right" class='awrclbt'>61</td><td align="right" class='awrct'>35,264</td><td align="right" class='awrcrbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>17,632</td><td align="right" class='awrnc'>735</td><td align="right" class='awrnc'>17,632</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>680</td><td align="right" class='awrnclb'>18,325</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>17,552</td><td align="right" class='awrnclb'>2,068</td><td align="right" class='awrnclb'>31</td><td align="right" class='awrnc'>17,632</td><td align="right" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>22,777</td><td align="right" class='awrc'>947</td><td align="right" class='awrc'>22,777</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>950</td><td align="right" class='awrclb'>23,722</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>22,797</td><td align="right" class='awrclb'>1,676</td><td align="right" class='awrclb'>11</td><td align="right" class='awrc'>22,776</td><td align="right" class='awrcrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12034"></a>
<h3 class="awr">Global Current Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Current Server Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Pins</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th><th class="awrbg" scope="col">Flushes</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>36.84</td><td align="right" class='awrc'>57.89</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>42.31</td><td align="right" class='awrnc'>57.69</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrct'>45</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="607"></a>
<h2 class="awr">
Global Cache Transfer Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12035">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#12036">Global Cache Transfer (Immediate)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12035"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
<li class="awr"> Congested  (Cngst) - Block Transfer impacted by Remote System Load </li>
<li class="awr"> All - average time of All blocks (Immed,Busy,Cngst) in us </li>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer Statistics. . Immediate (Immed) - Block Transfer NOT impacted by Remote Processing Delays. Busy (Busy) - Block Transfer impacted by Remote Contention. Congested (Cngst) - Block Transfer impacted by Remote System Load. All - average time of All blocks (Immed,Busy,Cngst) in us. Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CurrentBlocks">Current Blocks</th>
<th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>data block</td><td align="right" headers="CRBlocks Received" class='awrclb'>33,620</td><td align="right" headers="CRBlocks %Immed" class='awrc'>98.51</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.01</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>1.48</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>91,697</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>83.51</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>16.06</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.42</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>1773</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>1708</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>6562</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>6035</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>1125</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>1182</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>752</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>3963</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrnclb'>1,334</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>97.38</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>2.55</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.07</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>3</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>66.67</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>33.33</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>1328</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>601</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>29087</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>2853</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>1069</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>730</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>1748</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="CRBlocks Received" class='awrclb'>16</td><td align="right" headers="CRBlocks %Immed" class='awrc'>93.75</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>6.25</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>768</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>94.79</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>5.21</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>1389</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>888</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>8913</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>749</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>632</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>2878</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclbt'>2</td><td align="right" headers="Instance# Src" class='awrnct'>1</td><td headers="Block Class" class='awrnclbt'>data block</td><td align="right" headers="CRBlocks Received" class='awrnclbt'>1,534</td><td align="right" headers="CRBlocks %Immed" class='awrnct'>97.78</td><td align="right" headers="CRBlocks %Busy" class='awrnct'>1.24</td><td align="right" headers="CRBlocks %Cngst" class='awrnct'>0.98</td><td align="right" headers="CurrentBlocks Received" class='awrnclbt'>16,691</td><td align="right" headers="CurrentBlocks %Immed" class='awrnct'>93.74</td><td align="right" headers="CurrentBlocks %Busy" class='awrnct'>6.12</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnct'>0.14</td><td align="right" headers="CRAvgTime(us) All" class='awrnclbt'>1865</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnct'>1080</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnct'>62954</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnct'>2965</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclbt'>945</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnct'>863</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnct'>2152</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrbt'>3653</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="CRBlocks Received" class='awrclb'>26</td><td align="right" headers="CRBlocks %Immed" class='awrc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>34</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>55.88</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>44.12</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>444</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>444</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>537</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>511</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>571</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrnclb'>11</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>63.64</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>36.36</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>8</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>25.00</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>75.00</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>4970</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>388</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>12990</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>12141</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>1019</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>15848</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12036"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer (Immediate). . Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 2" id="LostBlocks">Lost Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCRBlocks">Immediate CR Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCurrentBlocks">Immediate Current Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmedCRAvgTime(us)">Immed CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="ImmedCurrentAvgTime(us)">Immed Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Count">Count</th><th class="awrbg" scope="col" id="Time(us)">Time(us)</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>data block</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>33,120</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>76,577</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>1708</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>1708</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>1182</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>1182</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>1,299</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>2</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>601</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>601</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>730</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>730</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>15</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>728</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>888</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>888</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>632</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>632</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclbt'>2</td><td align="right" headers="Instance# Src" class='awrct'>1</td><td headers="Block Class" class='awrclbt'>data block</td><td align="right" headers="LostBlocks Count" class='awrclbt'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrct'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclbt'>1,500</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclbt'>15,646</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclbt'>1080</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrct'>1080</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrct'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclbt'>863</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrct'>863</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>others</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>26</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>19</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>444</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>444</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>511</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>511</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>7</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>2</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>388</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>388</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>1019</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>1019</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="608"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12040">Cluster Interconnect</a></li>
<li class="awr"><a class="awr" href="#12045">Ping Statistics</a></li>
<li class="awr"><a class="awr" href="#12041">Interconnect Client Statistics</a></li>
<li class="awr"><a class="awr" href="#12042">Interconnect Client Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12043">Interconnect Device Statistics</a></li>
<li class="awr"><a class="awr" href="#12044">Interconnect Device Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12078">Dynamic Remastering Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12040"></a>
<h3 class="awr">Cluster Interconnect</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 3" id="End(ifdifferentfromBegin)">End (if different from Begin)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.22.248</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrnclb'>169.254.31.173</td><td headers="Begin Pub" class='awrnc'>N</td><td headers="Begin Source" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrnclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12045"></a>
<h3 class="awr">Ping Statistics</h3>
<ul>
<li class="awr"> Latency of the roundtrip of a message from  Src Instance to the Target instances</li>
</ul>
<table border="0" class="tdiff" summary="Ping Statistics. . Latency of the roundtrip of a message from Src Instance to the Target instances"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 3" id="500bytes">500 bytes</th>
<th class="awrbg" colspan=" 3" id="8Kbytes">8 Kbytes</th>
</tr><tr>
<th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Target">Target</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th></tr>
<tr><td align="right" headers="Instance# Src" class='awrclb'>1</td><td align="right" headers="Instance# Target" class='awrc'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclb'>57</td><td align="right" headers="500bytes Avg|Time(us)" class='awrc'>566</td><td align="right" headers="500bytes Std|Dev" class='awrc'>0.24</td><td align="right" headers="8Kbytes Ping|Count" class='awrclb'>62</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrc'>547</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrb'>0.23</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>57</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>793</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.32</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>62</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>857</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.40</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrclbt'>2</td><td align="right" headers="Instance# Target" class='awrct'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclbt'>57</td><td align="right" headers="500bytes Avg|Time(us)" class='awrct'>953</td><td align="right" headers="500bytes Std|Dev" class='awrct'>0.76</td><td align="right" headers="8Kbytes Ping|Count" class='awrclbt'>62</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrct'>996</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrbt'>0.69</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>57</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>558</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.70</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>62</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>547</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.65</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12041"></a>
<h3 class="awr">Interconnect Client Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB)">Sent (MB)</th>
<th class="awrbg" colspan=" 6" id="Received(MB)">Received (MB)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB) Total" class='awrclb'>1,666.96</td><td align="right" headers="Sent(MB) Cache" class='awrc'>138.67</td><td align="right" headers="Sent(MB) IPQ" class='awrc'>1.07</td><td align="right" headers="Sent(MB) DLM" class='awrc'>1,344.37</td><td align="right" headers="Sent(MB) PNG" class='awrc'>1.04</td><td align="right" headers="Sent(MB) Misc" class='awrc'>181.81</td><td align="right" headers="Received(MB) Total" class='awrclb'>1,540.26</td><td align="right" headers="Received(MB) Cache" class='awrc'>706.66</td><td align="right" headers="Received(MB) IPQ" class='awrc'>0.15</td><td align="right" headers="Received(MB) DLM" class='awrc'>818.96</td><td align="right" headers="Received(MB) PNG" class='awrc'>1.04</td><td align="right" headers="Received(MB) Misc" class='awrcrb'>13.45</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB) Total" class='awrnclb'>1,549.39</td><td align="right" headers="Sent(MB) Cache" class='awrnc'>712.33</td><td align="right" headers="Sent(MB) IPQ" class='awrnc'>0.15</td><td align="right" headers="Sent(MB) DLM" class='awrnc'>822.42</td><td align="right" headers="Sent(MB) PNG" class='awrnc'>1.04</td><td align="right" headers="Sent(MB) Misc" class='awrnc'>13.45</td><td align="right" headers="Received(MB) Total" class='awrnclb'>1,675.40</td><td align="right" headers="Received(MB) Cache" class='awrnc'>140.32</td><td align="right" headers="Received(MB) IPQ" class='awrnc'>1.07</td><td align="right" headers="Received(MB) DLM" class='awrnc'>1,350.77</td><td align="right" headers="Received(MB) PNG" class='awrnc'>1.04</td><td align="right" headers="Received(MB) Misc" class='awrncrb'>182.20</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>3,216.36</td><td align="right" class='awrct'>851.00</td><td align="right" class='awrct'>1.23</td><td align="right" class='awrct'>2,166.78</td><td align="right" class='awrct'>2.08</td><td align="right" class='awrct'>195.27</td><td align="right" class='awrclbt'>3,215.66</td><td align="right" class='awrct'>846.98</td><td align="right" class='awrct'>1.23</td><td align="right" class='awrct'>2,169.73</td><td align="right" class='awrct'>2.08</td><td align="right" class='awrcrbt'>195.65</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>1,608.18</td><td align="right" class='awrnc'>425.50</td><td align="right" class='awrnc'>0.61</td><td align="right" class='awrnc'>1,083.39</td><td align="right" class='awrnc'>1.04</td><td align="right" class='awrnc'>97.63</td><td align="right" class='awrnclb'>1,607.83</td><td align="right" class='awrnc'>423.49</td><td align="right" class='awrnc'>0.61</td><td align="right" class='awrnc'>1,084.86</td><td align="right" class='awrnc'>1.04</td><td align="right" class='awrncrb'>97.82</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>83.14</td><td align="right" class='awrc'>405.64</td><td align="right" class='awrc'>0.65</td><td align="right" class='awrc'>369.08</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>119.05</td><td align="right" class='awrclb'>95.56</td><td align="right" class='awrc'>400.46</td><td align="right" class='awrc'>0.65</td><td align="right" class='awrc'>376.05</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>119.33</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12042"></a>
<h3 class="awr">Interconnect Client Statistics (per Second)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics (per Second)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB/s)">Sent (MB/s)</th>
<th class="awrbg" colspan=" 6" id="Received(MB/s)">Received (MB/s)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB/s) Total" class='awrclb'>2.70</td><td align="right" headers="Sent(MB/s) Cache" class='awrc'>0.22</td><td align="right" headers="Sent(MB/s) IPQ" class='awrc'>0.00</td><td align="right" headers="Sent(MB/s) DLM" class='awrc'>2.18</td><td align="right" headers="Sent(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrc'>0.29</td><td align="right" headers="Received(MB/s) Total" class='awrclb'>2.49</td><td align="right" headers="Received(MB/s) Cache" class='awrc'>1.14</td><td align="right" headers="Received(MB/s) IPQ" class='awrc'>0.00</td><td align="right" headers="Received(MB/s) DLM" class='awrc'>1.33</td><td align="right" headers="Received(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrcrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB/s) Total" class='awrnclb'>2.51</td><td align="right" headers="Sent(MB/s) Cache" class='awrnc'>1.15</td><td align="right" headers="Sent(MB/s) IPQ" class='awrnc'>0.00</td><td align="right" headers="Sent(MB/s) DLM" class='awrnc'>1.33</td><td align="right" headers="Sent(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrnc'>0.02</td><td align="right" headers="Received(MB/s) Total" class='awrnclb'>2.71</td><td align="right" headers="Received(MB/s) Cache" class='awrnc'>0.23</td><td align="right" headers="Received(MB/s) IPQ" class='awrnc'>0.00</td><td align="right" headers="Received(MB/s) DLM" class='awrnc'>2.19</td><td align="right" headers="Received(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrncrb'>0.30</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>5.21</td><td align="right" class='awrct'>1.38</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>3.51</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.32</td><td align="right" class='awrclbt'>5.21</td><td align="right" class='awrct'>1.37</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>3.51</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrcrbt'>0.32</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>2.60</td><td align="right" class='awrnc'>0.69</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.75</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnclb'>2.60</td><td align="right" class='awrnc'>0.69</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.76</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrncrb'>0.16</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>0.13</td><td align="right" class='awrc'>0.66</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.60</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrclb'>0.15</td><td align="right" class='awrc'>0.65</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.61</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>0.19</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12043"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> null means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics. . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. null means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>9,689.56</td><td align="right" headers="Sent Packets" class='awrc'>5,511,949</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>6,479.90</td><td align="right" headers="Received Packets" class='awrc'>5,597,791</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2,273.40</td><td align="right" headers="Sent Packets" class='awrnc'>2,773,376</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>2,231.47</td><td align="right" headers="Received Packets" class='awrnc'>3,916,854</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.24</td><td align="right" headers="Sent Packets" class='awrnc'>638</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.12</td><td align="right" headers="Received Packets" class='awrnc'>616</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.22</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.23</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:3</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.03</td><td align="right" headers="Sent Packets" class='awrnc'>3,056</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.17</td><td align="right" headers="Received Packets" class='awrnc'>3,099</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>45.74</td><td align="right" headers="Sent Packets" class='awrc'>451,412</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>45.74</td><td align="right" headers="Received Packets" class='awrc'>451,412</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>2</td><td headers="Interface NAME" class='awrnclb'>eth0</td><td headers="Interface IPAddress" class='awrnc'>10.1.5.4</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>6,542.70</td><td align="right" headers="Sent Packets" class='awrnc'>5,712,709</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>9,591.06</td><td align="right" headers="Received Packets" class='awrnc'>5,339,587</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv</td><td headers="Interface IPAddress" class='awrc'>192.168.2.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>2,211.00</td><td align="right" headers="Sent Packets" class='awrc'>3,110,277</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>2,283.25</td><td align="right" headers="Received Packets" class='awrc'>3,593,949</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrnc'>169.254.31.173</td><td headers="Interface IPMask" class='awrnc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub</td><td headers="Interface IPAddress" class='awrc'>192.168.1.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.12</td><td align="right" headers="Sent Packets" class='awrc'>616</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.24</td><td align="right" headers="Received Packets" class='awrc'>635</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.12</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrc'>192.168.1.21</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.03</td><td align="right" headers="Sent Packets" class='awrnc'>3,065</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.17</td><td align="right" headers="Received Packets" class='awrnc'>3,116</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>14.42</td><td align="right" headers="Sent Packets" class='awrc'>242,920</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>14.42</td><td align="right" headers="Received Packets" class='awrc'>242,920</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>20,781.24</td><td align="right" class='awrnct'>17,810,018</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>20,648.53</td><td align="right" class='awrnct'>19,149,979</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>1,222.43</td><td align="right" class='awrc'>1,047,648</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>1,214.62</td><td align="right" class='awrc'>1,126,469</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>2,753.98</td><td align="right" class='awrnc'>1,968,283</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>2,728.24</td><td align="right" class='awrnc'>2,043,214</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12044"></a>
<h3 class="awr">Interconnect Device Statistics (per Second)</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> Blank	means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics (per Second). . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. Blank means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>15.69</td><td align="right" headers="Sent Packets" class='awrc'>8,927</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>10.49</td><td align="right" headers="Received Packets" class='awrc'>9,066</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>3.68</td><td align="right" headers="Sent Packets" class='awrnc'>4,492</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>3.61</td><td align="right" headers="Received Packets" class='awrnc'>6,344</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>1</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>1</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.22</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.23</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:3</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>5</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>5</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.07</td><td align="right" headers="Sent Packets" class='awrc'>731</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.07</td><td align="right" headers="Received Packets" class='awrc'>731</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>2</td><td headers="Interface NAME" class='awrnclb'>eth0</td><td headers="Interface IPAddress" class='awrnc'>10.1.5.4</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>10.60</td><td align="right" headers="Sent Packets" class='awrnc'>9,252</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>15.53</td><td align="right" headers="Received Packets" class='awrnc'>8,647</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv</td><td headers="Interface IPAddress" class='awrc'>192.168.2.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>3.58</td><td align="right" headers="Sent Packets" class='awrc'>5,037</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>3.70</td><td align="right" headers="Received Packets" class='awrc'>5,820</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrnc'>169.254.31.173</td><td headers="Interface IPMask" class='awrnc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub</td><td headers="Interface IPAddress" class='awrc'>192.168.1.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>1</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>1</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.12</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrc'>192.168.1.21</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>5</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>5</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.02</td><td align="right" headers="Sent Packets" class='awrc'>393</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.02</td><td align="right" headers="Received Packets" class='awrc'>393</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>33.66</td><td align="right" class='awrnct'>28,844</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>33.44</td><td align="right" class='awrnct'>31,014</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>1.98</td><td align="right" class='awrc'>1,697</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>1.97</td><td align="right" class='awrc'>1,824</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>4.46</td><td align="right" class='awrnc'>3,188</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>4.42</td><td align="right" class='awrnc'>3,309</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12078"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Affinity Objects - Affinity objects remastered at the begin/end snapshot  </li>
<li class="awr"> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Affinity Objects - Affinity objects remastered at the begin/end snapshot . Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CountsperOps">Counts per Ops</th>
<th class="awrbg" colspan=" 6" id="TimeperOps(seconds)">Time per Ops (seconds)</th>
<th class="awrbg" colspan=" 2" id="AffinityObjects">Affinity Objects</th>
<th class="awrbg" colspan=" 3" id="ReadMostlyObjects">Read Mostly Objects</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Remaster Ops</th><th class="awrbg" scope="col" id="Remastered|Objects">Remastered Objects</th><th class="awrbg" scope="col" id="ReplayLocks|Received">Replay Locks Received</th><th class="awrbg" scope="col" id="ReplayLocks|Sent">Replay Locks Sent</th><th class="awrbg" scope="col" id="Resources|Cleaned">Resources Cleaned</th><th class="awrbg" scope="col" id="Remaster">Remaster</th><th class="awrbg" scope="col" id="Freeze">Freeze</th><th class="awrbg" scope="col" id="Cleanup">Cleanup</th><th class="awrbg" scope="col" id="Replay">Replay</th><th class="awrbg" scope="col" id="Fixwrite">Fixwrite</th><th class="awrbg" scope="col" id="Sync">Sync</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="Begin|(persistent)">Begin (persistent)</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrclb'>5.00</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrc'>0.00</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrc'>2,181.00</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrc'>0.00</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrclb'>0.89</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrc'>0.03</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrc'>0.17</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrc'>0.26</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrc'>0.11</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrc'>0.29</td><td align="right" headers="AffinityObjects Begin" class='awrclb'>10</td><td align="right" headers="AffinityObjects End" class='awrc'>9</td><td align="right" headers="ReadMostlyObjects Begin" class='awrclb'>1</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrc'>0</td><td align="right" headers="ReadMostlyObjects End" class='awrcrb'>1</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>1</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrnclb'>5.00</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrnc'>2,181.00</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrnc'>0.00</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrnc'>0.00</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrnclb'>0.86</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrnc'>0.01</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrnc'>0.16</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrnc'>0.26</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrnc'>0.21</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrnc'>0.19</td><td align="right" headers="AffinityObjects Begin" class='awrnclb'>10</td><td align="right" headers="AffinityObjects End" class='awrnc'>13</td><td align="right" headers="ReadMostlyObjects Begin" class='awrnclb'>1</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrnc'>0</td><td align="right" headers="ReadMostlyObjects End" class='awrncrb'>1</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>1</td><td align="right" class='awrclbt'>5.00</td><td align="right" class='awrct'>1,090.50</td><td align="right" class='awrct'>1,090.50</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>0.88</td><td align="right" class='awrct'>0.02</td><td align="right" class='awrct'>0.17</td><td align="right" class='awrct'>0.26</td><td align="right" class='awrct'>0.16</td><td align="right" class='awrct'>0.24</td><td align="right" class='awrclbt'>10</td><td align="right" class='awrct'>11</td><td align="right" class='awrclbt'>1</td><td align="right" class='awrct'>0</td><td align="right" class='awrcrbt'>1</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Max</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>2,181.00</td><td align="right" class='awrnc'>2,181.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnclb'>0.89</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.26</td><td align="right" class='awrnc'>0.21</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnclb'>10</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnclb'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>1</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="622"></a>
<h2 class="awr">
SQL Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12060">SQL ordered by Elapsed Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12061">SQL ordered by CPU Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12066">SQL ordered by User I/O Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12062">SQL ordered by Gets (Global)</a></li>
<li class="awr"><a class="awr" href="#12063">SQL ordered by Reads (Global)</a></li>
<li class="awr"><a class="awr" href="#12081">SQL ordered by UnOptimized Read Requests (Global)</a></li>
<li class="awr"><a class="awr" href="#12065">SQL ordered by Executions (Global)</a></li>
<li class="awr"><a class="awr" href="#12064">SQL ordered by Cluster Wait Time (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12060"></a>
<h3 class="awr">SQL ordered by Elapsed Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   98.7% of Total DB Time (s):		18,234</li>
<li class="awr">Captured PL/SQL account for   99.6% of Total DB Time (s):	   18,234</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Elapsed Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>10,653.64</td><td align="right" headers="Total CPU(s)" class='awrc'>649.57</td><td align="right" headers="Total IOWait(s)" class='awrc'>9,771.74</td><td align="right" headers="Total Gets" class='awrc'>7,585,528</td><td align="right" headers="Total Reads" class='awrc'>5,924,543</td><td align="right" headers="Total Rows" class='awrc'>420,679</td><td align="right" headers="Total Cluster(s)" class='awrc'>543.40</td><td align="right" headers="Total Execs" class='awrc'>420,666</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.03</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution Gets" class='awrc'>18.03</td><td align="right" headers="PerExecution Reads" class='awrc'>14.08</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>58.43</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>49.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.65</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>60.74</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.33</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>58.13</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>79.94</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>7,335.12</td><td align="right" headers="Total CPU(s)" class='awrnc'>558.17</td><td align="right" headers="Total IOWait(s)" class='awrnc'>5,181.68</td><td align="right" headers="Total Gets" class='awrnc'>2,957,090</td><td align="right" headers="Total Reads" class='awrnc'>1,045,646</td><td align="right" headers="Total Rows" class='awrnc'>1,113,150</td><td align="right" headers="Total Cluster(s)" class='awrnc'>369.79</td><td align="right" headers="Total Execs" class='awrnc'>74,210</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.10</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.07</td><td align="right" headers="PerExecution Gets" class='awrnc'>39.85</td><td align="right" headers="PerExecution Reads" class='awrnc'>14.09</td><td align="right" headers="PerExecution Rows" class='awrnc'>15.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>40.23</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>42.34</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.34</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>23.68</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.88</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>39.56</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.10</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#9f9w8g2xnb7pk">9f9w8g2xnb7pk</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>569.80</td><td align="right" headers="Total CPU(s)" class='awrc'>26.79</td><td align="right" headers="Total IOWait(s)" class='awrc'>542.14</td><td align="right" headers="Total Gets" class='awrc'>259,402</td><td align="right" headers="Total Reads" class='awrc'>203,383</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>12.27</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>569.80</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>26.79</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>542.14</td><td align="right" headers="PerExecution Gets" class='awrc'>259,402.00</td><td align="right" headers="PerExecution Reads" class='awrc'>203,383.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>12.27</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.03</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.04</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.08</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.89</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.31</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#bff19a1raa4vy">bff19a1raa4vy</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.88</td><td align="right" headers="Total CPU(s)" class='awrnc'>25.67</td><td align="right" headers="Total IOWait(s)" class='awrnc'>543.48</td><td align="right" headers="Total Gets" class='awrnc'>246,190</td><td align="right" headers="Total Reads" class='awrnc'>192,716</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>10.85</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.88</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>25.67</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>543.48</td><td align="right" headers="PerExecution Gets" class='awrnc'>246,190.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>192,716.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>10.85</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>1.95</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.04</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>1.97</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.74</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.16</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#dpnvk07hr10yx">dpnvk07hr10yx</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.68</td><td align="right" headers="Total CPU(s)" class='awrc'>33.70</td><td align="right" headers="Total IOWait(s)" class='awrc'>468.23</td><td align="right" headers="Total Gets" class='awrc'>222,245</td><td align="right" headers="Total Reads" class='awrc'>139,897</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>28.00</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.68</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>33.70</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>468.23</td><td align="right" headers="PerExecution Gets" class='awrc'>222,245.00</td><td align="right" headers="PerExecution Reads" class='awrc'>139,897.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>28.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.56</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>1.78</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>1.99</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#06y2j283phcdz">06y2j283phcdz</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.60</td><td align="right" headers="Total CPU(s)" class='awrnc'>28.03</td><td align="right" headers="Total IOWait(s)" class='awrnc'>552.79</td><td align="right" headers="Total Gets" class='awrnc'>330,091</td><td align="right" headers="Total Reads" class='awrnc'>255,451</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.60</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>28.03</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>552.79</td><td align="right" headers="PerExecution Gets" class='awrnc'>330,091.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>255,451.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.13</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.04</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.64</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.64</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#9c0dt5tks83kz">9c0dt5tks83kz</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>567.81</td><td align="right" headers="Total CPU(s)" class='awrc'>35.56</td><td align="right" headers="Total IOWait(s)" class='awrc'>515.03</td><td align="right" headers="Total Gets" class='awrc'>259,004</td><td align="right" headers="Total Reads" class='awrc'>202,693</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>33.05</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>567.81</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>35.56</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>515.03</td><td align="right" headers="PerExecution Gets" class='awrc'>259,004.00</td><td align="right" headers="PerExecution Reads" class='awrc'>202,693.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>33.05</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.70</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.07</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.89</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.54</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#gwvc8un8ww8mb">gwvc8un8ww8mb</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>567.79</td><td align="right" headers="Total CPU(s)" class='awrnc'>35.73</td><td align="right" headers="Total IOWait(s)" class='awrnc'>514.46</td><td align="right" headers="Total Gets" class='awrnc'>256,176</td><td align="right" headers="Total Reads" class='awrnc'>200,631</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>33.85</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>567.79</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>35.73</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>514.46</td><td align="right" headers="PerExecution Gets" class='awrnc'>256,176.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>200,631.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>33.85</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.71</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.05</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.86</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.62</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#a42c3p5zjh4yg">a42c3p5zjh4yg</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>567.54</td><td align="right" headers="Total CPU(s)" class='awrc'>35.57</td><td align="right" headers="Total IOWait(s)" class='awrc'>512.76</td><td align="right" headers="Total Gets" class='awrc'>256,111</td><td align="right" headers="Total Reads" class='awrc'>200,176</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.32</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>567.54</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>35.57</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>512.76</td><td align="right" headers="PerExecution Gets" class='awrc'>256,111.00</td><td align="right" headers="PerExecution Reads" class='awrc'>200,176.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.32</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.70</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.05</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.85</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.78</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#8p83bvqrm41hf">8p83bvqrm41hf</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>567.53</td><td align="right" headers="Total CPU(s)" class='awrnc'>25.10</td><td align="right" headers="Total IOWait(s)" class='awrnc'>553.56</td><td align="right" headers="Total Gets" class='awrnc'>287,752</td><td align="right" headers="Total Reads" class='awrnc'>224,278</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>567.53</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>25.10</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>553.56</td><td align="right" headers="PerExecution Gets" class='awrnc'>287,752.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>224,278.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>1.90</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.04</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.30</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12061"></a>
<h3 class="awr">SQL ordered by CPU Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   92.2% of Total CPU Time (s): 	  1,318</li>
<li class="awr">Captured PL/SQL account for   99.7% of Total CPU Time (s):	     1,318</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by CPU Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>649.57</td><td align="right" headers="Total Elapsed(s)" class='awrc'>10,653.64</td><td align="right" headers="Total IOWait(s)" class='awrc'>9,771.74</td><td align="right" headers="Total Gets" class='awrc'>7,585,528</td><td align="right" headers="Total Reads" class='awrc'>5,924,543</td><td align="right" headers="Total Rows" class='awrc'>420,679</td><td align="right" headers="Total Cluster(s)" class='awrc'>543.40</td><td align="right" headers="Total Execs" class='awrc'>420,666</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.03</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution Gets" class='awrc'>18.03</td><td align="right" headers="PerExecution Reads" class='awrc'>14.08</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>49.28</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>58.43</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>64.93</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>60.74</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.33</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>58.13</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>79.94</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>558.17</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>7,335.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>5,181.68</td><td align="right" headers="Total Gets" class='awrnc'>2,957,090</td><td align="right" headers="Total Reads" class='awrnc'>1,045,646</td><td align="right" headers="Total Rows" class='awrnc'>1,113,150</td><td align="right" headers="Total Cluster(s)" class='awrnc'>369.79</td><td align="right" headers="Total Execs" class='awrnc'>74,210</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.10</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.07</td><td align="right" headers="PerExecution Gets" class='awrnc'>39.85</td><td align="right" headers="PerExecution Reads" class='awrnc'>14.09</td><td align="right" headers="PerExecution Rows" class='awrnc'>15.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>42.34</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>40.23</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>34.43</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>23.68</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.88</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>39.56</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.10</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>83.09</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.53</td><td align="right" headers="Total IOWait(s)" class='awrc'>280.97</td><td align="right" headers="Total Gets" class='awrc'>764,908</td><td align="right" headers="Total Reads" class='awrc'>459,376</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>93.97</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>83.09</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.53</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>280.97</td><td align="right" headers="PerExecution Gets" class='awrc'>764,908.00</td><td align="right" headers="PerExecution Reads" class='awrc'>459,376.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>93.97</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>6.30</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>1.87</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>6.13</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>6.54</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>10.05</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>82.74</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.62</td><td align="right" headers="Total IOWait(s)" class='awrnc'>320.97</td><td align="right" headers="Total Gets" class='awrnc'>556,141</td><td align="right" headers="Total Reads" class='awrnc'>332,907</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>90.09</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>82.74</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.62</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>320.97</td><td align="right" headers="PerExecution Gets" class='awrnc'>556,141.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>332,907.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>90.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>6.28</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.13</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.45</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.74</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>9.64</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>75.86</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.60</td><td align="right" headers="Total IOWait(s)" class='awrc'>327.81</td><td align="right" headers="Total Gets" class='awrc'>501,156</td><td align="right" headers="Total Reads" class='awrc'>243,245</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>87.84</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>75.86</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.60</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>327.81</td><td align="right" headers="PerExecution Gets" class='awrc'>501,156.00</td><td align="right" headers="PerExecution Reads" class='awrc'>243,245.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>87.84</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>5.75</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.18</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.46</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>9.40</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>74.09</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.59</td><td align="right" headers="Total IOWait(s)" class='awrnc'>368.53</td><td align="right" headers="Total Gets" class='awrnc'>773,064</td><td align="right" headers="Total Reads" class='awrnc'>467,187</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>13.76</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>74.09</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.59</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>368.53</td><td align="right" headers="PerExecution Gets" class='awrnc'>773,064.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>467,187.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>13.76</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>5.62</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.45</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>6.19</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>6.65</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.47</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>66.22</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.41</td><td align="right" headers="Total IOWait(s)" class='awrc'>370.38</td><td align="right" headers="Total Gets" class='awrc'>553,622</td><td align="right" headers="Total Reads" class='awrc'>269,669</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>49.45</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>66.22</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.41</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>370.38</td><td align="right" headers="PerExecution Gets" class='awrc'>553,622.00</td><td align="right" headers="PerExecution Reads" class='awrc'>269,669.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>49.45</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>5.02</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.46</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.43</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.84</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>5.29</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>65.19</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>381.73</td><td align="right" headers="Total Gets" class='awrnc'>664,344</td><td align="right" headers="Total Reads" class='awrnc'>405,065</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>12.90</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>65.19</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.12</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>381.73</td><td align="right" headers="PerExecution Gets" class='awrnc'>664,344.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>405,065.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>12.90</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>4.95</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.10</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.54</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>5.32</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>5.77</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.38</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>57.12</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.41</td><td align="right" headers="Total IOWait(s)" class='awrc'>393.09</td><td align="right" headers="Total Gets" class='awrc'>358,419</td><td align="right" headers="Total Reads" class='awrc'>216,711</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>62.01</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>57.12</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.41</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>393.09</td><td align="right" headers="PerExecution Gets" class='awrc'>358,419.00</td><td align="right" headers="PerExecution Reads" class='awrc'>216,711.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>62.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>4.33</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.61</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.87</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.08</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>6.63</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#68bjwqddyrzp1">68bjwqddyrzp1</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>37.23</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.77</td><td align="right" headers="Total IOWait(s)" class='awrnc'>500.49</td><td align="right" headers="Total Gets" class='awrnc'>216,726</td><td align="right" headers="Total Reads" class='awrnc'>165,576</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>46.08</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>37.23</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.77</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>500.49</td><td align="right" headers="PerExecution Gets" class='awrnc'>216,726.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>165,576.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>46.08</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>2.82</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.33</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>1.74</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.36</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>4.93</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12066"></a>
<h3 class="awr">SQL ordered by User I/O Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   99.4% of Total User I/O Wait Time (s):	   15,049</li>
<li class="awr">Captured PL/SQL account for   99.6% of Total User I/O Wait Time (s):	      15,049</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by User I/O Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>9,771.74</td><td align="right" headers="Total Elapsed(s)" class='awrc'>10,653.64</td><td align="right" headers="Total CPU(s)" class='awrc'>649.57</td><td align="right" headers="Total Gets" class='awrc'>7,585,528</td><td align="right" headers="Total Reads" class='awrc'>5,924,543</td><td align="right" headers="Total Rows" class='awrc'>420,679</td><td align="right" headers="Total Cluster(s)" class='awrc'>543.40</td><td align="right" headers="Total Execs" class='awrc'>420,666</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>0.02</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.03</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>18.03</td><td align="right" headers="PerExecution Reads" class='awrc'>14.08</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>64.93</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>58.43</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>49.28</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>60.74</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.33</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>58.13</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>79.94</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>5,181.68</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>7,335.12</td><td align="right" headers="Total CPU(s)" class='awrnc'>558.17</td><td align="right" headers="Total Gets" class='awrnc'>2,957,090</td><td align="right" headers="Total Reads" class='awrnc'>1,045,646</td><td align="right" headers="Total Rows" class='awrnc'>1,113,150</td><td align="right" headers="Total Cluster(s)" class='awrnc'>369.79</td><td align="right" headers="Total Execs" class='awrnc'>74,210</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>0.07</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.10</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>39.85</td><td align="right" headers="PerExecution Reads" class='awrnc'>14.09</td><td align="right" headers="PerExecution Rows" class='awrnc'>15.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>34.43</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>40.23</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>42.34</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>23.68</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.88</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>39.56</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.10</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#68bjwqddyrzp1">68bjwqddyrzp1</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>500.49</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.77</td><td align="right" headers="Total CPU(s)" class='awrc'>37.23</td><td align="right" headers="Total Gets" class='awrc'>216,726</td><td align="right" headers="Total Reads" class='awrc'>165,576</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>46.08</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>500.49</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.77</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>37.23</td><td align="right" headers="PerExecution Gets" class='awrc'>216,726.00</td><td align="right" headers="PerExecution Reads" class='awrc'>165,576.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>46.08</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>3.33</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.82</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>1.74</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.36</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>4.93</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>393.09</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="Total CPU(s)" class='awrnc'>57.12</td><td align="right" headers="Total Gets" class='awrnc'>358,419</td><td align="right" headers="Total Reads" class='awrnc'>216,711</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>62.01</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>393.09</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>57.12</td><td align="right" headers="PerExecution Gets" class='awrnc'>358,419.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>216,711.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>62.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.61</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.33</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.87</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.08</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>6.63</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>381.73</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.12</td><td align="right" headers="Total CPU(s)" class='awrc'>65.19</td><td align="right" headers="Total Gets" class='awrc'>664,344</td><td align="right" headers="Total Reads" class='awrc'>405,065</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>12.90</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>381.73</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.12</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>65.19</td><td align="right" headers="PerExecution Gets" class='awrc'>664,344.00</td><td align="right" headers="PerExecution Reads" class='awrc'>405,065.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>12.90</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.54</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.10</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.95</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>5.32</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>5.77</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.38</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>370.38</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="Total CPU(s)" class='awrnc'>66.22</td><td align="right" headers="Total Gets" class='awrnc'>553,622</td><td align="right" headers="Total Reads" class='awrnc'>269,669</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>49.45</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>370.38</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>66.22</td><td align="right" headers="PerExecution Gets" class='awrnc'>553,622.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>269,669.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>49.45</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.46</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>5.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.43</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.84</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>5.29</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>368.53</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.59</td><td align="right" headers="Total CPU(s)" class='awrc'>74.09</td><td align="right" headers="Total Gets" class='awrc'>773,064</td><td align="right" headers="Total Reads" class='awrc'>467,187</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>13.76</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>368.53</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.59</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>74.09</td><td align="right" headers="PerExecution Gets" class='awrc'>773,064.00</td><td align="right" headers="PerExecution Reads" class='awrc'>467,187.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>13.76</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.45</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>5.62</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>6.19</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>6.65</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.47</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>327.81</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.60</td><td align="right" headers="Total CPU(s)" class='awrnc'>75.86</td><td align="right" headers="Total Gets" class='awrnc'>501,156</td><td align="right" headers="Total Reads" class='awrnc'>243,245</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>87.84</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>327.81</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.60</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>75.86</td><td align="right" headers="PerExecution Gets" class='awrnc'>501,156.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>243,245.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>87.84</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.18</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>5.75</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.46</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>9.40</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>320.97</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.62</td><td align="right" headers="Total CPU(s)" class='awrc'>82.74</td><td align="right" headers="Total Gets" class='awrc'>556,141</td><td align="right" headers="Total Reads" class='awrc'>332,907</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>90.09</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>320.97</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.62</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>82.74</td><td align="right" headers="PerExecution Gets" class='awrc'>556,141.00</td><td align="right" headers="PerExecution Reads" class='awrc'>332,907.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>90.09</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.13</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>6.28</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.45</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.74</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>9.64</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>280.97</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.53</td><td align="right" headers="Total CPU(s)" class='awrnc'>83.09</td><td align="right" headers="Total Gets" class='awrnc'>764,908</td><td align="right" headers="Total Reads" class='awrnc'>459,376</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>93.97</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>280.97</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.53</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>83.09</td><td align="right" headers="PerExecution Gets" class='awrnc'>764,908.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>459,376.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>93.97</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>1.87</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>6.30</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>6.13</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>6.54</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>10.05</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12062"></a>
<h3 class="awr">SQL ordered by Gets (Global)</h3>
<ul>
<li class="awr">Total Buffer Gets:	12,488,118</li>
<li class="awr">Captured SQL account for   85.3% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Gets (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Gets" class='awrclb'>7,585,528</td><td align="right" headers="Total Reads" class='awrc'>5,924,543</td><td align="right" headers="Total Elapsed(s)" class='awrc'>10,653.64</td><td align="right" headers="Total CPU(s)" class='awrc'>649.57</td><td align="right" headers="Total IOWait(s)" class='awrc'>9,771.74</td><td align="right" headers="Total Rows" class='awrc'>420,679</td><td align="right" headers="Total Cluster(s)" class='awrc'>543.40</td><td align="right" headers="Total Execs" class='awrc'>420,666</td><td align="right" headers="PerExecution Gets" class='awrclb'>18.03</td><td align="right" headers="PerExecution Reads" class='awrc'>14.08</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.03</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>60.74</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.33</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>58.43</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>49.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>64.93</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>58.13</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>79.94</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Gets" class='awrnclb'>2,957,090</td><td align="right" headers="Total Reads" class='awrnc'>1,045,646</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>7,335.12</td><td align="right" headers="Total CPU(s)" class='awrnc'>558.17</td><td align="right" headers="Total IOWait(s)" class='awrnc'>5,181.68</td><td align="right" headers="Total Rows" class='awrnc'>1,113,150</td><td align="right" headers="Total Cluster(s)" class='awrnc'>369.79</td><td align="right" headers="Total Execs" class='awrnc'>74,210</td><td align="right" headers="PerExecution Gets" class='awrnclb'>39.85</td><td align="right" headers="PerExecution Reads" class='awrnc'>14.09</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.10</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.07</td><td align="right" headers="PerExecution Rows" class='awrnc'>15.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>23.68</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.88</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>40.23</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>42.34</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>34.43</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>39.56</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.10</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td><td align="right" headers="Total Gets" class='awrclb'>773,064</td><td align="right" headers="Total Reads" class='awrc'>467,187</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.59</td><td align="right" headers="Total CPU(s)" class='awrc'>74.09</td><td align="right" headers="Total IOWait(s)" class='awrc'>368.53</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>13.76</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>773,064.00</td><td align="right" headers="PerExecution Reads" class='awrc'>467,187.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.59</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>74.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>368.53</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>13.76</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>6.19</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>6.65</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>5.62</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.45</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.47</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td><td align="right" headers="Total Gets" class='awrnclb'>764,908</td><td align="right" headers="Total Reads" class='awrnc'>459,376</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.53</td><td align="right" headers="Total CPU(s)" class='awrnc'>83.09</td><td align="right" headers="Total IOWait(s)" class='awrnc'>280.97</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>93.97</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>764,908.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>459,376.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.53</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>83.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>280.97</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>93.97</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>6.13</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>6.54</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>6.30</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>1.87</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>10.05</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td><td align="right" headers="Total Gets" class='awrclb'>664,344</td><td align="right" headers="Total Reads" class='awrc'>405,065</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.12</td><td align="right" headers="Total CPU(s)" class='awrc'>65.19</td><td align="right" headers="Total IOWait(s)" class='awrc'>381.73</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>12.90</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>664,344.00</td><td align="right" headers="PerExecution Reads" class='awrc'>405,065.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.12</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>65.19</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>381.73</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>12.90</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>5.32</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>5.77</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.10</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.95</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.54</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.38</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td><td align="right" headers="Total Gets" class='awrnclb'>556,141</td><td align="right" headers="Total Reads" class='awrnc'>332,907</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.62</td><td align="right" headers="Total CPU(s)" class='awrnc'>82.74</td><td align="right" headers="Total IOWait(s)" class='awrnc'>320.97</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>90.09</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>556,141.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>332,907.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.62</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>82.74</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>320.97</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>90.09</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>4.45</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.74</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>6.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.13</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>9.64</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td><td align="right" headers="Total Gets" class='awrclb'>553,622</td><td align="right" headers="Total Reads" class='awrc'>269,669</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.41</td><td align="right" headers="Total CPU(s)" class='awrc'>66.22</td><td align="right" headers="Total IOWait(s)" class='awrc'>370.38</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>49.45</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>553,622.00</td><td align="right" headers="PerExecution Reads" class='awrc'>269,669.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.41</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>66.22</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>370.38</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>49.45</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>4.43</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.84</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>5.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.46</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>5.29</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td><td align="right" headers="Total Gets" class='awrnclb'>501,156</td><td align="right" headers="Total Reads" class='awrnc'>243,245</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.60</td><td align="right" headers="Total CPU(s)" class='awrnc'>75.86</td><td align="right" headers="Total IOWait(s)" class='awrnc'>327.81</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>87.84</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>501,156.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>243,245.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.60</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>75.86</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>327.81</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>87.84</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>4.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.46</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>5.75</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.18</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>9.40</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#95x8tdmpy1k78">95x8tdmpy1k78</a></td><td align="right" headers="Total Gets" class='awrclb'>451,466</td><td align="right" headers="Total Reads" class='awrc'>342,429</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.49</td><td align="right" headers="Total CPU(s)" class='awrc'>36.08</td><td align="right" headers="Total IOWait(s)" class='awrc'>545.65</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>451,466.00</td><td align="right" headers="PerExecution Reads" class='awrc'>342,429.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.49</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>36.08</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>545.65</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>3.62</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.87</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.74</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.63</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td><td align="right" headers="Total Gets" class='awrnclb'>358,419</td><td align="right" headers="Total Reads" class='awrnc'>216,711</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="Total CPU(s)" class='awrnc'>57.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>393.09</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>62.01</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>358,419.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>216,711.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>57.12</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>393.09</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>62.01</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.87</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.08</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.33</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.61</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>6.63</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12063"></a>
<h3 class="awr">SQL ordered by Reads (Global)</h3>
<ul>
<li class="awr">Total Disk Reads:	7,025,468</li>
<li class="awr">Captured SQL account for   99.2% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Reads (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Reads" class='awrclb'>5,924,543</td><td align="right" headers="Total Gets" class='awrc'>7,585,528</td><td align="right" headers="Total Elapsed(s)" class='awrc'>10,653.64</td><td align="right" headers="Total CPU(s)" class='awrc'>649.57</td><td align="right" headers="Total IOWait(s)" class='awrc'>9,771.74</td><td align="right" headers="Total Rows" class='awrc'>420,679</td><td align="right" headers="Total Cluster(s)" class='awrc'>543.40</td><td align="right" headers="Total Execs" class='awrc'>420,666</td><td align="right" headers="PerExecution Reads" class='awrclb'>14.08</td><td align="right" headers="PerExecution Gets" class='awrc'>18.03</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.03</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>84.33</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>60.74</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>58.43</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>49.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>64.93</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>58.13</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>79.94</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Reads" class='awrnclb'>1,045,646</td><td align="right" headers="Total Gets" class='awrnc'>2,957,090</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>7,335.12</td><td align="right" headers="Total CPU(s)" class='awrnc'>558.17</td><td align="right" headers="Total IOWait(s)" class='awrnc'>5,181.68</td><td align="right" headers="Total Rows" class='awrnc'>1,113,150</td><td align="right" headers="Total Cluster(s)" class='awrnc'>369.79</td><td align="right" headers="Total Execs" class='awrnc'>74,210</td><td align="right" headers="PerExecution Reads" class='awrnclb'>14.09</td><td align="right" headers="PerExecution Gets" class='awrnc'>39.85</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.10</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.07</td><td align="right" headers="PerExecution Rows" class='awrnc'>15.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>14.88</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>23.68</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>40.23</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>42.34</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>34.43</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>39.56</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.10</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td><td align="right" headers="Total Reads" class='awrclb'>467,187</td><td align="right" headers="Total Gets" class='awrc'>773,064</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.59</td><td align="right" headers="Total CPU(s)" class='awrc'>74.09</td><td align="right" headers="Total IOWait(s)" class='awrc'>368.53</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>13.76</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>467,187.00</td><td align="right" headers="PerExecution Gets" class='awrc'>773,064.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.59</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>74.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>368.53</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>13.76</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>6.65</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>6.19</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>5.62</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.45</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.47</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td><td align="right" headers="Total Reads" class='awrnclb'>459,376</td><td align="right" headers="Total Gets" class='awrnc'>764,908</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.53</td><td align="right" headers="Total CPU(s)" class='awrnc'>83.09</td><td align="right" headers="Total IOWait(s)" class='awrnc'>280.97</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>93.97</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>459,376.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>764,908.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.53</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>83.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>280.97</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>93.97</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>6.54</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>6.13</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>6.30</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>1.87</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>10.05</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td><td align="right" headers="Total Reads" class='awrclb'>405,065</td><td align="right" headers="Total Gets" class='awrc'>664,344</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.12</td><td align="right" headers="Total CPU(s)" class='awrc'>65.19</td><td align="right" headers="Total IOWait(s)" class='awrc'>381.73</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>12.90</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>405,065.00</td><td align="right" headers="PerExecution Gets" class='awrc'>664,344.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.12</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>65.19</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>381.73</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>12.90</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>5.77</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>5.32</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.10</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.95</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.54</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.38</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#95x8tdmpy1k78">95x8tdmpy1k78</a></td><td align="right" headers="Total Reads" class='awrnclb'>342,429</td><td align="right" headers="Total Gets" class='awrnc'>451,466</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.49</td><td align="right" headers="Total CPU(s)" class='awrnc'>36.08</td><td align="right" headers="Total IOWait(s)" class='awrnc'>545.65</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>342,429.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>451,466.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.49</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>36.08</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>545.65</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>4.87</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>3.62</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.74</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.63</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td><td align="right" headers="Total Reads" class='awrclb'>332,907</td><td align="right" headers="Total Gets" class='awrc'>556,141</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.62</td><td align="right" headers="Total CPU(s)" class='awrc'>82.74</td><td align="right" headers="Total IOWait(s)" class='awrc'>320.97</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>90.09</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>332,907.00</td><td align="right" headers="PerExecution Gets" class='awrc'>556,141.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.62</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>82.74</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>320.97</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>90.09</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>4.74</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.45</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>6.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>9.64</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td><td align="right" headers="Total Reads" class='awrnclb'>269,669</td><td align="right" headers="Total Gets" class='awrnc'>553,622</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="Total CPU(s)" class='awrnc'>66.22</td><td align="right" headers="Total IOWait(s)" class='awrnc'>370.38</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>49.45</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>269,669.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>553,622.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>66.22</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>370.38</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>49.45</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>3.84</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.43</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>5.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.46</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>5.29</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#06y2j283phcdz">06y2j283phcdz</a></td><td align="right" headers="Total Reads" class='awrclb'>255,451</td><td align="right" headers="Total Gets" class='awrc'>330,091</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.60</td><td align="right" headers="Total CPU(s)" class='awrc'>28.03</td><td align="right" headers="Total IOWait(s)" class='awrc'>552.79</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>255,451.00</td><td align="right" headers="PerExecution Gets" class='awrc'>330,091.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.60</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>28.03</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>552.79</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>3.64</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.67</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td><td align="right" headers="Total Reads" class='awrnclb'>243,245</td><td align="right" headers="Total Gets" class='awrnc'>501,156</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.60</td><td align="right" headers="Total CPU(s)" class='awrnc'>75.86</td><td align="right" headers="Total IOWait(s)" class='awrnc'>327.81</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>87.84</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>243,245.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>501,156.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.60</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>75.86</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>327.81</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>87.84</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>3.46</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>5.75</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.18</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>9.40</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12081"></a>
<h3 class="awr">SQL ordered by UnOptimized Read Requests (Global)</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    7,025,142</li>
<li class="awr">Captured SQL account for    0.3% of Total</li>
<li class="awr">Total UnOptimized Read Requests:       7,025,142</li>
<li class="awr">Captured SQL account for    0.3% of Total</li>
<li class="awr">Total Optimized Read Requests:		     1</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by UnOptimized Read Requests (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 9" id="Total">Total</th>
<th class="awrbg" colspan=" 8" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 8" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#14g8z0zv8sq36">14g8z0zv8sq36</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>467,210</td><td align="right" headers="Total Requests" class='awrc'>467,210</td><td align="right" headers="Total Reads" class='awrc'>467,187</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.59</td><td align="right" headers="Total CPU(s)" class='awrc'>74.09</td><td align="right" headers="Total IOWait(s)" class='awrc'>368.53</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>13.76</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>467,210.00</td><td align="right" headers="PerExecution Requests" class='awrc'>467,210.00</td><td align="right" headers="PerExecution Reads" class='awrc'>467,187.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.59</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>74.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>368.53</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>13.76</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>6.65</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>6.65</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>6.65</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>5.62</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.45</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.47</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>459,445</td><td align="right" headers="Total Requests" class='awrnc'>459,445</td><td align="right" headers="Total Reads" class='awrnc'>459,376</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.53</td><td align="right" headers="Total CPU(s)" class='awrnc'>83.09</td><td align="right" headers="Total IOWait(s)" class='awrnc'>280.97</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>93.97</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>459,445.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>459,445.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>459,376.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.53</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>83.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>280.97</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>93.97</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>6.54</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>6.54</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>6.54</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>6.30</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>1.87</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>10.05</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6c0z4993ppn5s">6c0z4993ppn5s</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>405,134</td><td align="right" headers="Total Requests" class='awrc'>405,134</td><td align="right" headers="Total Reads" class='awrc'>405,065</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.12</td><td align="right" headers="Total CPU(s)" class='awrc'>65.19</td><td align="right" headers="Total IOWait(s)" class='awrc'>381.73</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>12.90</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>405,134.00</td><td align="right" headers="PerExecution Requests" class='awrc'>405,134.00</td><td align="right" headers="PerExecution Reads" class='awrc'>405,065.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.12</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>65.19</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>381.73</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>12.90</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>5.77</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>5.77</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>5.77</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.10</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.95</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.54</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.38</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#95x8tdmpy1k78">95x8tdmpy1k78</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>342,429</td><td align="right" headers="Total Requests" class='awrnc'>342,429</td><td align="right" headers="Total Reads" class='awrnc'>342,429</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.49</td><td align="right" headers="Total CPU(s)" class='awrnc'>36.08</td><td align="right" headers="Total IOWait(s)" class='awrnc'>545.65</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>342,429.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>342,429.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>342,429.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.49</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>36.08</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>545.65</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>4.87</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>4.87</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.87</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.74</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>3.63</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>332,930</td><td align="right" headers="Total Requests" class='awrc'>332,930</td><td align="right" headers="Total Reads" class='awrc'>332,907</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.62</td><td align="right" headers="Total CPU(s)" class='awrc'>82.74</td><td align="right" headers="Total IOWait(s)" class='awrc'>320.97</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>90.09</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>332,930.00</td><td align="right" headers="PerExecution Requests" class='awrc'>332,930.00</td><td align="right" headers="PerExecution Reads" class='awrc'>332,907.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.62</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>82.74</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>320.97</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>90.09</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>4.74</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>4.74</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.74</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>6.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>9.64</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>269,738</td><td align="right" headers="Total Requests" class='awrnc'>269,738</td><td align="right" headers="Total Reads" class='awrnc'>269,669</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="Total CPU(s)" class='awrnc'>66.22</td><td align="right" headers="Total IOWait(s)" class='awrnc'>370.38</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>49.45</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>269,738.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>269,738.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>269,669.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>66.22</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>370.38</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>49.45</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>3.84</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>3.84</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.84</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>5.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.46</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>5.29</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#06y2j283phcdz">06y2j283phcdz</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>255,451</td><td align="right" headers="Total Requests" class='awrc'>255,451</td><td align="right" headers="Total Reads" class='awrc'>255,451</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.60</td><td align="right" headers="Total CPU(s)" class='awrc'>28.03</td><td align="right" headers="Total IOWait(s)" class='awrc'>552.79</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>255,451.00</td><td align="right" headers="PerExecution Requests" class='awrc'>255,451.00</td><td align="right" headers="PerExecution Reads" class='awrc'>255,451.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.60</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>28.03</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>552.79</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>3.64</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>3.64</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.12</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.67</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>243,314</td><td align="right" headers="Total Requests" class='awrnc'>243,314</td><td align="right" headers="Total Reads" class='awrnc'>243,245</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.60</td><td align="right" headers="Total CPU(s)" class='awrnc'>75.86</td><td align="right" headers="Total IOWait(s)" class='awrnc'>327.81</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>87.84</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>243,314.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>243,314.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>243,245.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.60</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>75.86</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>327.81</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>87.84</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>3.46</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>3.46</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.46</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>5.75</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.18</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>9.40</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#8p83bvqrm41hf">8p83bvqrm41hf</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>224,278</td><td align="right" headers="Total Requests" class='awrc'>224,278</td><td align="right" headers="Total Reads" class='awrc'>224,278</td><td align="right" headers="Total Elapsed(s)" class='awrc'>567.53</td><td align="right" headers="Total CPU(s)" class='awrc'>25.10</td><td align="right" headers="Total IOWait(s)" class='awrc'>553.56</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>224,278.00</td><td align="right" headers="PerExecution Requests" class='awrc'>224,278.00</td><td align="right" headers="PerExecution Reads" class='awrc'>224,278.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>567.53</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>25.10</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>553.56</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>3.19</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>3.19</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.19</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>1.90</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.68</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>216,734</td><td align="right" headers="Total Requests" class='awrnc'>216,734</td><td align="right" headers="Total Reads" class='awrnc'>216,711</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="Total CPU(s)" class='awrnc'>57.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>393.09</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>62.01</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>216,734.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>216,734.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>216,711.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>57.12</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>393.09</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>62.01</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>3.09</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.08</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.33</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.61</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>6.63</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12065"></a>
<h3 class="awr">SQL ordered by Executions (Global)</h3>
<ul>
<li class="awr">Total Executions:	  526,196</li>
<li class="awr">Captured SQL account for   98.6% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Executions (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Execs" class='awrclb'>420,666</td><td align="right" headers="Total Elapsed(s)" class='awrc'>10,653.64</td><td align="right" headers="Total CPU(s)" class='awrc'>649.57</td><td align="right" headers="Total IOWait(s)" class='awrc'>9,771.74</td><td align="right" headers="Total Gets" class='awrc'>7,585,528</td><td align="right" headers="Total Reads" class='awrc'>5,924,543</td><td align="right" headers="Total Rows" class='awrc'>420,679</td><td align="right" headers="Total Cluster(s)" class='awrc'>543.40</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.03</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution Gets" class='awrc'>18.03</td><td align="right" headers="PerExecution Reads" class='awrc'>14.08</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>79.94</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>58.43</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>49.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>64.93</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>60.74</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.33</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>58.13</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Execs" class='awrnclb'>74,210</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>7,335.12</td><td align="right" headers="Total CPU(s)" class='awrnc'>558.17</td><td align="right" headers="Total IOWait(s)" class='awrnc'>5,181.68</td><td align="right" headers="Total Gets" class='awrnc'>2,957,090</td><td align="right" headers="Total Reads" class='awrnc'>1,045,646</td><td align="right" headers="Total Rows" class='awrnc'>1,113,150</td><td align="right" headers="Total Cluster(s)" class='awrnc'>369.79</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.10</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.07</td><td align="right" headers="PerExecution Gets" class='awrnc'>39.85</td><td align="right" headers="PerExecution Reads" class='awrnc'>14.09</td><td align="right" headers="PerExecution Rows" class='awrnc'>15.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>14.10</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>40.23</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>42.34</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>34.43</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>23.68</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.88</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>39.56</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#86708bvah4akq">86708bvah4akq</a></td><td align="right" headers="Total Execs" class='awrclb'>21,568</td><td align="right" headers="Total Elapsed(s)" class='awrc'>4.18</td><td align="right" headers="Total CPU(s)" class='awrc'>3.65</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>68,218</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>21,575</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>3.16</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>4.10</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.28</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.55</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>select name from undo$ where f...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td><td align="right" headers="Total Execs" class='awrnclb'>834</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.10</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.08</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>1,784</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Rows" class='awrnc'>816</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>2.14</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.98</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.16</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>update svcobj_access$ set acce...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td><td align="right" headers="Total Execs" class='awrclb'>181</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.83</td><td align="right" headers="Total CPU(s)" class='awrc'>0.05</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.02</td><td align="right" headers="Total Gets" class='awrc'>898</td><td align="right" headers="Total Reads" class='awrc'>12</td><td align="right" headers="Total Rows" class='awrc'>181</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.72</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>4.96</td><td align="right" headers="PerExecution Reads" class='awrc'>0.07</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.03</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.08</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td><td align="right" headers="Total Execs" class='awrnclb'>149</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.12</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.04</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.06</td><td align="right" headers="Total Gets" class='awrnc'>1,056</td><td align="right" headers="Total Reads" class='awrnc'>13</td><td align="right" headers="Total Rows" class='awrnc'>149</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.09</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.09</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.03</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td><td align="right" headers="Total Execs" class='awrclb'>142</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.03</td><td align="right" headers="Total CPU(s)" class='awrc'>0.03</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>857</td><td align="right" headers="Total Reads" class='awrc'>3</td><td align="right" headers="Total Rows" class='awrc'>142</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>6.04</td><td align="right" headers="PerExecution Reads" class='awrc'>0.02</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.03</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td><td align="right" headers="Total Execs" class='awrnclb'>119</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.06</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.03</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>60</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Rows" class='awrnc'>119</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>0.50</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.02</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#87gaftwrm2h68">87gaftwrm2h68</a></td><td align="right" headers="Total Execs" class='awrclb'>104</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.00</td><td align="right" headers="Total CPU(s)" class='awrc'>0.00</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>226</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>18</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>2.17</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>0.17</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.02</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>select o.owner#, o.name, o.nam...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#6xvp6nxs4a9n4">6xvp6nxs4a9n4</a></td><td align="right" headers="Total Execs" class='awrnclb'>45</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.01</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>46</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Rows" class='awrnc'>45</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>1.02</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>select nvl(sum(space), 0) from...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12064"></a>
<h3 class="awr">SQL ordered by Cluster Wait Time (Global)</h3>
<ul>
<li class="awr">Total Cluster Wait Time (s):		 935</li>
<li class="awr">Captured SQL account for   98.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Cluster Wait Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>543.40</td><td align="right" headers="Total Elapsed(s)" class='awrc'>10,653.64</td><td align="right" headers="Total CPU(s)" class='awrc'>649.57</td><td align="right" headers="Total IOWait(s)" class='awrc'>9,771.74</td><td align="right" headers="Total Gets" class='awrc'>7,585,528</td><td align="right" headers="Total Reads" class='awrc'>5,924,543</td><td align="right" headers="Total Rows" class='awrc'>420,679</td><td align="right" headers="Total Execs" class='awrc'>420,666</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.03</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.02</td><td align="right" headers="PerExecution Gets" class='awrc'>18.03</td><td align="right" headers="PerExecution Reads" class='awrc'>14.08</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>58.13</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>58.43</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>49.28</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>64.93</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>60.74</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.33</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>79.94</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>369.79</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>7,335.12</td><td align="right" headers="Total CPU(s)" class='awrnc'>558.17</td><td align="right" headers="Total IOWait(s)" class='awrnc'>5,181.68</td><td align="right" headers="Total Gets" class='awrnc'>2,957,090</td><td align="right" headers="Total Reads" class='awrnc'>1,045,646</td><td align="right" headers="Total Rows" class='awrnc'>1,113,150</td><td align="right" headers="Total Execs" class='awrnc'>74,210</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.10</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.07</td><td align="right" headers="PerExecution Gets" class='awrnc'>39.85</td><td align="right" headers="PerExecution Reads" class='awrnc'>14.09</td><td align="right" headers="PerExecution Rows" class='awrnc'>15.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>39.56</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>40.23</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>42.34</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>34.43</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>23.68</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.88</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.10</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0hk2wm946s76n">0hk2wm946s76n</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>93.97</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.53</td><td align="right" headers="Total CPU(s)" class='awrc'>83.09</td><td align="right" headers="Total IOWait(s)" class='awrc'>280.97</td><td align="right" headers="Total Gets" class='awrc'>764,908</td><td align="right" headers="Total Reads" class='awrc'>459,376</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>93.97</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.53</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>83.09</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>280.97</td><td align="right" headers="PerExecution Gets" class='awrc'>764,908.00</td><td align="right" headers="PerExecution Reads" class='awrc'>459,376.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>10.05</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>6.30</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>1.87</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>6.13</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>6.54</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#dg8wzzu89u0y0">dg8wzzu89u0y0</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>90.09</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.62</td><td align="right" headers="Total CPU(s)" class='awrnc'>82.74</td><td align="right" headers="Total IOWait(s)" class='awrnc'>320.97</td><td align="right" headers="Total Gets" class='awrnc'>556,141</td><td align="right" headers="Total Reads" class='awrnc'>332,907</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>90.09</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.62</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>82.74</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>320.97</td><td align="right" headers="PerExecution Gets" class='awrnc'>556,141.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>332,907.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>9.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>6.28</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.13</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>4.45</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.74</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#dxc8p6cu2bx5n">dxc8p6cu2bx5n</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>87.84</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.60</td><td align="right" headers="Total CPU(s)" class='awrc'>75.86</td><td align="right" headers="Total IOWait(s)" class='awrc'>327.81</td><td align="right" headers="Total Gets" class='awrc'>501,156</td><td align="right" headers="Total Reads" class='awrc'>243,245</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>87.84</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.60</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>75.86</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>327.81</td><td align="right" headers="PerExecution Gets" class='awrc'>501,156.00</td><td align="right" headers="PerExecution Reads" class='awrc'>243,245.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>9.40</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>5.75</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.18</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>4.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.46</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5pj15z95yy8bw">5pj15z95yy8bw</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>62.01</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="Total CPU(s)" class='awrnc'>57.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>393.09</td><td align="right" headers="Total Gets" class='awrnc'>358,419</td><td align="right" headers="Total Reads" class='awrnc'>216,711</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>62.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.41</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>57.12</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>393.09</td><td align="right" headers="PerExecution Gets" class='awrnc'>358,419.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>216,711.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>6.63</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.33</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.61</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.87</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>3.08</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#30nj40b6j5jjg">30nj40b6j5jjg</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>49.45</td><td align="right" headers="Total Elapsed(s)" class='awrc'>566.41</td><td align="right" headers="Total CPU(s)" class='awrc'>66.22</td><td align="right" headers="Total IOWait(s)" class='awrc'>370.38</td><td align="right" headers="Total Gets" class='awrc'>553,622</td><td align="right" headers="Total Reads" class='awrc'>269,669</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>49.45</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>566.41</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>66.22</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>370.38</td><td align="right" headers="PerExecution Gets" class='awrc'>553,622.00</td><td align="right" headers="PerExecution Reads" class='awrc'>269,669.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>5.29</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>5.02</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.46</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>4.43</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.84</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#68bjwqddyrzp1">68bjwqddyrzp1</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>46.08</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.77</td><td align="right" headers="Total CPU(s)" class='awrnc'>37.23</td><td align="right" headers="Total IOWait(s)" class='awrnc'>500.49</td><td align="right" headers="Total Gets" class='awrnc'>216,726</td><td align="right" headers="Total Reads" class='awrnc'>165,576</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>46.08</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.77</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>37.23</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>500.49</td><td align="right" headers="PerExecution Gets" class='awrnc'>216,726.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>165,576.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>4.93</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.82</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>3.33</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>1.74</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.36</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#ayb2zjspaq24n">ayb2zjspaq24n</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>39.70</td><td align="right" headers="Total Elapsed(s)" class='awrc'>565.58</td><td align="right" headers="Total CPU(s)" class='awrc'>35.87</td><td align="right" headers="Total IOWait(s)" class='awrc'>459.35</td><td align="right" headers="Total Gets" class='awrc'>206,356</td><td align="right" headers="Total Reads" class='awrc'>133,058</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>39.70</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>565.58</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>35.87</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>459.35</td><td align="right" headers="PerExecution Gets" class='awrc'>206,356.00</td><td align="right" headers="PerExecution Reads" class='awrc'>133,058.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>4.25</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.10</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.72</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>3.05</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>1.65</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>1.89</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#8thj2ffrw6hnr">8thj2ffrw6hnr</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>39.65</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>566.63</td><td align="right" headers="Total CPU(s)" class='awrnc'>36.88</td><td align="right" headers="Total IOWait(s)" class='awrnc'>461.46</td><td align="right" headers="Total Gets" class='awrnc'>213,730</td><td align="right" headers="Total Reads" class='awrnc'>133,688</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>39.65</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>566.63</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>36.88</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>461.46</td><td align="right" headers="PerExecution Gets" class='awrnc'>213,730.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>133,688.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>4.24</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.11</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.80</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>3.07</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>1.71</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>1.90</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="623"></a>
<h2 class="awr">
Global Activity Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12071">System Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12072">Global Messaging Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12073">System Statistics (Absolute Values)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12071"></a>
<h3 class="awr">System Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>1,233</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>1.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>1.00</td><td align="right" headers="perSecond Max" class='awrncrb'>1.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>300</td><td align="right" class='awrc'>0.49</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.24</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.21</td><td align="right" headers="perSecond Max" class='awrcrb'>0.27</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>989</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.78</td><td align="right" headers="perSecond Max" class='awrncrb'>0.82</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>178</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.09</td><td align="right" headers="perSecond Max" class='awrncrb'>0.20</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search all</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search hint</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search steal</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:bump HWM</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free block</td><td align="right" class='awrc'>935</td><td align="right" class='awrc'>1.51</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.76</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.73</td><td align="right" headers="perSecond Max" class='awrcrb'>0.79</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free data block</td><td align="right" class='awrnc'>765</td><td align="right" class='awrnc'>1.24</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.62</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.57</td><td align="right" headers="perSecond Max" class='awrncrb'>0.67</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free index block</td><td align="right" class='awrc'>170</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.12</td><td align="right" headers="perSecond Max" class='awrcrb'>0.16</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:good hint</td><td align="right" class='awrnc'>824</td><td align="right" class='awrnc'>1.33</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.67</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.62</td><td align="right" headers="perSecond Max" class='awrncrb'>0.72</td></tr>
<tr><td scope="row" class='awrc'>ASSM rsv:fill reserve</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM wasted db state change</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO (bound) vector count</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO block miss count</td><td align="right" class='awrnc'>5,228,938</td><td align="right" class='awrnc'>8,468.53</td><td align="right" class='awrnc'>69.88</td><td align="right" headers="perSecond Average" class='awrnclb'>4,234.27</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,316.36</td><td align="right" headers="perSecond Min" class='awrnc'>3,303.46</td><td align="right" headers="perSecond Max" class='awrncrb'>5,165.07</td></tr>
<tr><td scope="row" class='awrc'>Batched IO double miss count</td><td align="right" class='awrc'>418,617</td><td align="right" class='awrc'>677.97</td><td align="right" class='awrc'>5.59</td><td align="right" headers="perSecond Average" class='awrclb'>338.99</td><td align="right" headers="perSecond StdDev" class='awrc'>108.49</td><td align="right" headers="perSecond Min" class='awrc'>262.27</td><td align="right" headers="perSecond Max" class='awrcrb'>415.70</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO same unit count</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>Batched IO single block count</td><td align="right" class='awrc'>2,193</td><td align="right" class='awrc'>3.55</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>1.78</td><td align="right" headers="perSecond StdDev" class='awrc'>0.92</td><td align="right" headers="perSecond Min" class='awrc'>1.13</td><td align="right" headers="perSecond Max" class='awrcrb'>2.42</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector block count</td><td align="right" class='awrnc'>5,226,860</td><td align="right" class='awrnc'>8,465.17</td><td align="right" class='awrnc'>69.85</td><td align="right" headers="perSecond Average" class='awrnclb'>4,232.58</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,315.45</td><td align="right" headers="perSecond Min" class='awrnc'>3,302.42</td><td align="right" headers="perSecond Max" class='awrncrb'>5,162.75</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector read count</td><td align="right" class='awrc'>416,212</td><td align="right" class='awrc'>674.08</td><td align="right" class='awrc'>5.56</td><td align="right" headers="perSecond Average" class='awrclb'>337.04</td><td align="right" headers="perSecond StdDev" class='awrc'>107.51</td><td align="right" headers="perSecond Min" class='awrc'>261.02</td><td align="right" headers="perSecond Max" class='awrcrb'>413.06</td></tr>
<tr><td scope="row" class='awrnc'>Block Cleanout Optim referenced</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>CCursor + sql area evicted</td><td align="right" class='awrc'>67</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.05</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>CPU used by this session</td><td align="right" class='awrnc'>203,903</td><td align="right" class='awrnc'>330.23</td><td align="right" class='awrnc'>2.73</td><td align="right" headers="perSecond Average" class='awrnclb'>165.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>46.73</td><td align="right" headers="perSecond Min" class='awrnc'>132.07</td><td align="right" headers="perSecond Max" class='awrncrb'>198.16</td></tr>
<tr><td scope="row" class='awrc'>CPU used when call started</td><td align="right" class='awrc'>142,715</td><td align="right" class='awrc'>231.14</td><td align="right" class='awrc'>1.91</td><td align="right" headers="perSecond Average" class='awrclb'>115.57</td><td align="right" headers="perSecond StdDev" class='awrc'>59.55</td><td align="right" headers="perSecond Min" class='awrc'>73.46</td><td align="right" headers="perSecond Max" class='awrcrb'>157.68</td></tr>
<tr><td scope="row" class='awrnc'>CR blocks created</td><td align="right" class='awrnc'>2,204</td><td align="right" class='awrnc'>3.57</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>1.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.36</td><td align="right" headers="perSecond Min" class='awrnc'>0.82</td><td align="right" headers="perSecond Max" class='awrncrb'>2.75</td></tr>
<tr><td scope="row" class='awrc'>Cached Commit SCN referenced</td><td align="right" class='awrc'>5,911,907</td><td align="right" class='awrc'>9,574.62</td><td align="right" class='awrc'>79.01</td><td align="right" headers="perSecond Average" class='awrclb'>4,787.31</td><td align="right" headers="perSecond StdDev" class='awrc'>1,111.45</td><td align="right" headers="perSecond Min" class='awrc'>4,001.40</td><td align="right" headers="perSecond Max" class='awrcrb'>5,573.22</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Receive Window</td><td align="right" class='awrnc'>231</td><td align="right" class='awrnc'>0.37</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.16</td><td align="right" headers="perSecond Max" class='awrncrb'>0.22</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Send Window</td><td align="right" class='awrc'>231</td><td align="right" class='awrc'>0.37</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.16</td><td align="right" headers="perSecond Max" class='awrcrb'>0.22</td></tr>
<tr><td scope="row" class='awrnc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrnc'>1,265,465</td><td align="right" class='awrnc'>2,049.54</td><td align="right" class='awrnc'>16.91</td><td align="right" headers="perSecond Average" class='awrnclb'>1,024.77</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,402.75</td><td align="right" headers="perSecond Min" class='awrnc'>32.88</td><td align="right" headers="perSecond Max" class='awrncrb'>2,016.67</td></tr>
<tr><td scope="row" class='awrc'>Client Send Congestion Window</td><td align="right" class='awrc'>330</td><td align="right" class='awrc'>0.53</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.27</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.23</td><td align="right" headers="perSecond Max" class='awrcrb'>0.31</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Received</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.06</td><td align="right" headers="perSecond Max" class='awrncrb'>0.07</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrc'>73,857</td><td align="right" class='awrc'>119.61</td><td align="right" class='awrc'>0.99</td><td align="right" headers="perSecond Average" class='awrclb'>59.81</td><td align="right" headers="perSecond StdDev" class='awrc'>13.18</td><td align="right" headers="perSecond Min" class='awrc'>50.49</td><td align="right" headers="perSecond Max" class='awrcrb'>69.13</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrnc'>75,258</td><td align="right" class='awrnc'>121.88</td><td align="right" class='awrnc'>1.01</td><td align="right" headers="perSecond Average" class='awrnclb'>60.94</td><td align="right" headers="perSecond StdDev" class='awrnc'>14.35</td><td align="right" headers="perSecond Min" class='awrnc'>50.79</td><td align="right" headers="perSecond Max" class='awrncrb'>71.09</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Acked</td><td align="right" class='awrc'>510,755</td><td align="right" class='awrc'>827.19</td><td align="right" class='awrc'>6.83</td><td align="right" headers="perSecond Average" class='awrclb'>413.60</td><td align="right" headers="perSecond StdDev" class='awrc'>103.60</td><td align="right" headers="perSecond Min" class='awrc'>340.34</td><td align="right" headers="perSecond Max" class='awrcrb'>486.85</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Received</td><td align="right" class='awrnc'>200,519</td><td align="right" class='awrnc'>324.75</td><td align="right" class='awrnc'>2.68</td><td align="right" headers="perSecond Average" class='awrnclb'>162.38</td><td align="right" headers="perSecond StdDev" class='awrnc'>36.07</td><td align="right" headers="perSecond Min" class='awrnc'>136.87</td><td align="right" headers="perSecond Max" class='awrncrb'>187.88</td></tr>
<tr><td scope="row" class='awrc'>Client Total Number of Retransmitted Packets</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DB time</td><td align="right" class='awrnc'>1,922,759</td><td align="right" class='awrnc'>3,114.00</td><td align="right" class='awrnc'>25.70</td><td align="right" headers="perSecond Average" class='awrnclb'>1,557.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>411.11</td><td align="right" headers="perSecond Min" class='awrnc'>1,266.30</td><td align="right" headers="perSecond Max" class='awrncrb'>1,847.70</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoint buffers written</td><td align="right" class='awrc'>41,052</td><td align="right" class='awrc'>66.49</td><td align="right" class='awrc'>0.55</td><td align="right" headers="perSecond Average" class='awrclb'>33.24</td><td align="right" headers="perSecond StdDev" class='awrc'>12.36</td><td align="right" headers="perSecond Min" class='awrc'>24.50</td><td align="right" headers="perSecond Max" class='awrcrb'>41.98</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoints</td><td align="right" class='awrnc'>43,612</td><td align="right" class='awrnc'>70.63</td><td align="right" class='awrnc'>0.58</td><td align="right" headers="perSecond Average" class='awrnclb'>35.32</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>35.30</td><td align="right" headers="perSecond Max" class='awrncrb'>35.33</td></tr>
<tr><td scope="row" class='awrc'>DBWR fusion writes</td><td align="right" class='awrc'>169</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.10</td><td align="right" headers="perSecond Min" class='awrc'>0.07</td><td align="right" headers="perSecond Max" class='awrcrb'>0.21</td></tr>
<tr><td scope="row" class='awrnc'>DBWR object drop buffers written</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>DBWR transaction table writes</td><td align="right" class='awrc'>561</td><td align="right" class='awrc'>0.91</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.45</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.43</td><td align="right" headers="perSecond Max" class='awrcrb'>0.48</td></tr>
<tr><td scope="row" class='awrnc'>DBWR undo block writes</td><td align="right" class='awrnc'>50,325</td><td align="right" class='awrnc'>81.50</td><td align="right" class='awrnc'>0.67</td><td align="right" headers="perSecond Average" class='awrnclb'>40.75</td><td align="right" headers="perSecond StdDev" class='awrnc'>15.35</td><td align="right" headers="perSecond Min" class='awrnc'>29.90</td><td align="right" headers="perSecond Max" class='awrncrb'>51.61</td></tr>
<tr><td scope="row" class='awrc'>DFO trees parallelized</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>HSC Heap Segment Block Changes</td><td align="right" class='awrnc'>1,122,481</td><td align="right" class='awrnc'>1,817.92</td><td align="right" class='awrnc'>15.00</td><td align="right" headers="perSecond Average" class='awrnclb'>908.96</td><td align="right" headers="perSecond StdDev" class='awrnc'>293.42</td><td align="right" headers="perSecond Min" class='awrnc'>701.48</td><td align="right" headers="perSecond Max" class='awrncrb'>1,116.44</td></tr>
<tr><td scope="row" class='awrc'>Heap Segment Array Inserts</td><td align="right" class='awrc'>342</td><td align="right" class='awrc'>0.55</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.28</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.27</td><td align="right" headers="perSecond Max" class='awrcrb'>0.29</td></tr>
<tr><td scope="row" class='awrnc'>Heap Segment Array Updates</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc req</td><td align="right" class='awrc'>22,390</td><td align="right" class='awrc'>36.26</td><td align="right" class='awrc'>0.30</td><td align="right" headers="perSecond Average" class='awrclb'>18.13</td><td align="right" headers="perSecond StdDev" class='awrc'>25.57</td><td align="right" headers="perSecond Min" class='awrc'>0.05</td><td align="right" headers="perSecond Max" class='awrcrb'>36.21</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc space (block)</td><td align="right" class='awrnc'>8,111,194,112</td><td align="right" class='awrnc'>13,136,873.50</td><td align="right" class='awrnc'>108,400.74</td><td align="right" headers="perSecond Average" class='awrnclb'>6,568,436.75</td><td align="right" headers="perSecond StdDev" class='awrnc'>9,216,976.03</td><td align="right" headers="perSecond Min" class='awrnc'>51,050.50</td><td align="right" headers="perSecond Max" class='awrncrb'>13,085,823.00</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc time (ms)</td><td align="right" class='awrc'>361,147,838</td><td align="right" class='awrc'>584,914.47</td><td align="right" class='awrc'>4,826.50</td><td align="right" headers="perSecond Average" class='awrclb'>292,457.24</td><td align="right" headers="perSecond StdDev" class='awrc'>413,587.49</td><td align="right" headers="perSecond Min" class='awrc'>6.72</td><td align="right" headers="perSecond Max" class='awrcrb'>584,907.76</td></tr>
<tr><td scope="row" class='awrnc'>KTFB apply req</td><td align="right" class='awrnc'>44,163</td><td align="right" class='awrnc'>71.53</td><td align="right" class='awrnc'>0.59</td><td align="right" headers="perSecond Average" class='awrnclb'>35.76</td><td align="right" headers="perSecond StdDev" class='awrnc'>50.49</td><td align="right" headers="perSecond Min" class='awrnc'>0.06</td><td align="right" headers="perSecond Max" class='awrncrb'>71.46</td></tr>
<tr><td scope="row" class='awrc'>KTFB apply time (ms)</td><td align="right" class='awrc'>4,104,353</td><td align="right" class='awrc'>6,647.40</td><td align="right" class='awrc'>54.85</td><td align="right" headers="perSecond Average" class='awrclb'>3,323.70</td><td align="right" headers="perSecond StdDev" class='awrc'>4,696.99</td><td align="right" headers="perSecond Min" class='awrc'>2.43</td><td align="right" headers="perSecond Max" class='awrcrb'>6,644.98</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free req</td><td align="right" class='awrnc'>21,777</td><td align="right" class='awrnc'>35.27</td><td align="right" class='awrnc'>0.29</td><td align="right" headers="perSecond Average" class='awrnclb'>17.63</td><td align="right" headers="perSecond StdDev" class='awrnc'>24.92</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>35.25</td></tr>
<tr><td scope="row" class='awrc'>KTFB free space (block)</td><td align="right" class='awrc'>963,456</td><td align="right" class='awrc'>1,560.41</td><td align="right" class='awrc'>12.88</td><td align="right" headers="perSecond Average" class='awrclb'>780.21</td><td align="right" headers="perSecond StdDev" class='awrc'>1,100.72</td><td align="right" headers="perSecond Min" class='awrc'>1.88</td><td align="right" headers="perSecond Max" class='awrcrb'>1,558.53</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free time (ms)</td><td align="right" class='awrnc'>204,093,749</td><td align="right" class='awrnc'>330,549.92</td><td align="right" class='awrnc'>2,727.58</td><td align="right" headers="perSecond Average" class='awrnclb'>165,274.96</td><td align="right" headers="perSecond StdDev" class='awrnc'>233,732.48</td><td align="right" headers="perSecond Min" class='awrnc'>1.14</td><td align="right" headers="perSecond Max" class='awrncrb'>330,548.78</td></tr>
<tr><td scope="row" class='awrc'>PX local messages recv'd</td><td align="right" class='awrc'>88</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrc'>0.09</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>PX local messages sent</td><td align="right" class='awrnc'>88</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.09</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.14</td></tr>
<tr><td scope="row" class='awrc'>PX remote messages recv'd</td><td align="right" class='awrc'>96</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>PX remote messages sent</td><td align="right" class='awrnc'>96</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.13</td></tr>
<tr><td scope="row" class='awrc'>Parallel operations not downgraded</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Requests to/from client</td><td align="right" class='awrnc'>231</td><td align="right" class='awrnc'>0.37</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.13</td><td align="right" headers="perSecond Min" class='awrnc'>0.09</td><td align="right" headers="perSecond Max" class='awrncrb'>0.28</td></tr>
<tr><td scope="row" class='awrc'>SMON posted for undo segment shrink</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrnc'>199</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.14</td><td align="right" headers="perSecond Min" class='awrnc'>0.06</td><td align="right" headers="perSecond Max" class='awrncrb'>0.26</td></tr>
<tr><td scope="row" class='awrc'>TBS Extension: tasks created</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.07</td><td align="right" headers="perSecond Max" class='awrcrb'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>active txn count during cleanout</td><td align="right" class='awrnc'>433</td><td align="right" class='awrnc'>0.70</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.35</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.31</td><td align="right" headers="perSecond Max" class='awrncrb'>0.39</td></tr>
<tr><td scope="row" class='awrc'>application wait time</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>auto extends on undo tablespace</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.07</td><td align="right" headers="perSecond Max" class='awrncrb'>0.07</td></tr>
<tr><td scope="row" class='awrc'>background timeouts</td><td align="right" class='awrc'>10,955</td><td align="right" class='awrc'>17.74</td><td align="right" class='awrc'>0.15</td><td align="right" headers="perSecond Average" class='awrclb'>8.87</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>8.87</td><td align="right" headers="perSecond Max" class='awrcrb'>8.87</td></tr>
<tr><td scope="row" class='awrnc'>blocks cleaned out using minact</td><td align="right" class='awrnc'>323,405</td><td align="right" class='awrnc'>523.78</td><td align="right" class='awrnc'>4.32</td><td align="right" headers="perSecond Average" class='awrnclb'>261.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>205.64</td><td align="right" headers="perSecond Min" class='awrnc'>116.48</td><td align="right" headers="perSecond Max" class='awrncrb'>407.30</td></tr>
<tr><td scope="row" class='awrc'>branch node splits</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>buffer is not pinned count</td><td align="right" class='awrnc'>17,754,485</td><td align="right" class='awrnc'>28,754.30</td><td align="right" class='awrnc'>237.28</td><td align="right" headers="perSecond Average" class='awrnclb'>14,377.15</td><td align="right" headers="perSecond StdDev" class='awrnc'>4,548.88</td><td align="right" headers="perSecond Min" class='awrnc'>11,160.61</td><td align="right" headers="perSecond Max" class='awrncrb'>17,593.69</td></tr>
<tr><td scope="row" class='awrc'>buffer is pinned count</td><td align="right" class='awrc'>7,986,803</td><td align="right" class='awrc'>12,935.08</td><td align="right" class='awrc'>106.74</td><td align="right" headers="perSecond Average" class='awrclb'>6,467.54</td><td align="right" headers="perSecond StdDev" class='awrc'>2,898.98</td><td align="right" headers="perSecond Min" class='awrc'>4,417.65</td><td align="right" headers="perSecond Max" class='awrcrb'>8,517.43</td></tr>
<tr><td scope="row" class='awrnc'>bytes received via SQL*Net from client</td><td align="right" class='awrnc'>425,206</td><td align="right" class='awrnc'>688.61</td><td align="right" class='awrnc'>5.68</td><td align="right" headers="perSecond Average" class='awrnclb'>344.31</td><td align="right" headers="perSecond StdDev" class='awrnc'>443.93</td><td align="right" headers="perSecond Min" class='awrnc'>30.40</td><td align="right" headers="perSecond Max" class='awrncrb'>658.21</td></tr>
<tr><td scope="row" class='awrc'>bytes sent via SQL*Net to client</td><td align="right" class='awrc'>42,602</td><td align="right" class='awrc'>68.99</td><td align="right" class='awrc'>0.57</td><td align="right" headers="perSecond Average" class='awrclb'>34.50</td><td align="right" headers="perSecond StdDev" class='awrc'>26.00</td><td align="right" headers="perSecond Min" class='awrc'>16.12</td><td align="right" headers="perSecond Max" class='awrcrb'>52.88</td></tr>
<tr><td scope="row" class='awrnc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrnc'>653,365</td><td align="right" class='awrnc'>1,058.16</td><td align="right" class='awrnc'>8.73</td><td align="right" headers="perSecond Average" class='awrnclb'>529.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>236.52</td><td align="right" headers="perSecond Min" class='awrnc'>361.84</td><td align="right" headers="perSecond Max" class='awrncrb'>696.32</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgas</td><td align="right" class='awrc'>158,359</td><td align="right" class='awrc'>256.47</td><td align="right" class='awrc'>2.12</td><td align="right" headers="perSecond Average" class='awrclb'>128.24</td><td align="right" headers="perSecond StdDev" class='awrc'>49.82</td><td align="right" headers="perSecond Min" class='awrc'>93.00</td><td align="right" headers="perSecond Max" class='awrcrb'>163.47</td></tr>
<tr><td scope="row" class='awrnc'>calls to kcmgcs</td><td align="right" class='awrnc'>123,686</td><td align="right" class='awrnc'>200.32</td><td align="right" class='awrnc'>1.65</td><td align="right" headers="perSecond Average" class='awrnclb'>100.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>134.69</td><td align="right" headers="perSecond Min" class='awrnc'>4.92</td><td align="right" headers="perSecond Max" class='awrncrb'>195.40</td></tr>
<tr><td scope="row" class='awrc'>cell physical IO interconnect bytes</td><td align="right" class='awrc'>82,603,779,584</td><td align="right" class='awrc'>133,781,051.99</td><td align="right" class='awrc'>1,103,944.88</td><td align="right" headers="perSecond Average" class='awrclb'>66,890,525.99</td><td align="right" headers="perSecond StdDev" class='awrc'>20,560,730.44</td><td align="right" headers="perSecond Min" class='awrc'>52,351,894.07</td><td align="right" headers="perSecond Max" class='awrcrb'>81,429,157.92</td></tr>
<tr><td scope="row" class='awrnc'>change write time</td><td align="right" class='awrnc'>2,958</td><td align="right" class='awrnc'>4.79</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>2.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.23</td><td align="right" headers="perSecond Min" class='awrnc'>1.53</td><td align="right" headers="perSecond Max" class='awrncrb'>3.26</td></tr>
<tr><td scope="row" class='awrc'>cleanout - number of ktugct calls</td><td align="right" class='awrc'>4,631</td><td align="right" class='awrc'>7.50</td><td align="right" class='awrc'>0.06</td><td align="right" headers="perSecond Average" class='awrclb'>3.75</td><td align="right" headers="perSecond StdDev" class='awrc'>2.68</td><td align="right" headers="perSecond Min" class='awrc'>1.86</td><td align="right" headers="perSecond Max" class='awrcrb'>5.64</td></tr>
<tr><td scope="row" class='awrnc'>cleanouts and rollbacks - consistent read gets</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>cleanouts only - consistent read gets</td><td align="right" class='awrc'>44</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>cluster key scan block gets</td><td align="right" class='awrnc'>834</td><td align="right" class='awrnc'>1.35</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.56</td><td align="right" headers="perSecond Min" class='awrnc'>0.28</td><td align="right" headers="perSecond Max" class='awrncrb'>1.07</td></tr>
<tr><td scope="row" class='awrc'>cluster key scans</td><td align="right" class='awrc'>604</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.49</td><td align="right" headers="perSecond StdDev" class='awrc'>0.33</td><td align="right" headers="perSecond Min" class='awrc'>0.25</td><td align="right" headers="perSecond Max" class='awrcrb'>0.72</td></tr>
<tr><td scope="row" class='awrnc'>cluster wait time</td><td align="right" class='awrnc'>93,293</td><td align="right" class='awrnc'>151.09</td><td align="right" class='awrnc'>1.25</td><td align="right" headers="perSecond Average" class='awrnclb'>75.55</td><td align="right" headers="perSecond StdDev" class='awrnc'>41.48</td><td align="right" headers="perSecond Min" class='awrnc'>46.22</td><td align="right" headers="perSecond Max" class='awrncrb'>104.88</td></tr>
<tr><td scope="row" class='awrc'>commit batch/immediate performed</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit batch/immediate requested</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: block lost</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: buffer being written</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: callback failure</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanouts</td><td align="right" class='awrnc'>1,122,443</td><td align="right" class='awrnc'>1,817.85</td><td align="right" class='awrnc'>15.00</td><td align="right" headers="perSecond Average" class='awrnclb'>908.93</td><td align="right" headers="perSecond StdDev" class='awrnc'>293.91</td><td align="right" headers="perSecond Min" class='awrnc'>701.10</td><td align="right" headers="perSecond Max" class='awrncrb'>1,116.75</td></tr>
<tr><td scope="row" class='awrc'>commit cleanouts successfully completed</td><td align="right" class='awrc'>1,122,405</td><td align="right" class='awrc'>1,817.79</td><td align="right" class='awrc'>15.00</td><td align="right" headers="perSecond Average" class='awrclb'>908.90</td><td align="right" headers="perSecond StdDev" class='awrc'>293.92</td><td align="right" headers="perSecond Min" class='awrc'>701.06</td><td align="right" headers="perSecond Max" class='awrcrb'>1,116.73</td></tr>
<tr><td scope="row" class='awrnc'>commit immediate performed</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit immediate requested</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit txn count during cleanout</td><td align="right" class='awrnc'>238</td><td align="right" class='awrnc'>0.39</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.15</td><td align="right" headers="perSecond Max" class='awrncrb'>0.23</td></tr>
<tr><td scope="row" class='awrc'>concurrency wait time</td><td align="right" class='awrc'>74,868</td><td align="right" class='awrc'>121.26</td><td align="right" class='awrc'>1.00</td><td align="right" headers="perSecond Average" class='awrclb'>60.63</td><td align="right" headers="perSecond StdDev" class='awrc'>85.73</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>121.25</td></tr>
<tr><td scope="row" class='awrnc'>consistent changes</td><td align="right" class='awrnc'>1,665,945</td><td align="right" class='awrnc'>2,697.97</td><td align="right" class='awrnc'>22.26</td><td align="right" headers="perSecond Average" class='awrnclb'>1,348.98</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,814.99</td><td align="right" headers="perSecond Min" class='awrnc'>65.59</td><td align="right" headers="perSecond Max" class='awrncrb'>2,632.37</td></tr>
<tr><td scope="row" class='awrc'>consistent gets</td><td align="right" class='awrc'>9,753,047</td><td align="right" class='awrc'>15,795.45</td><td align="right" class='awrc'>130.34</td><td align="right" headers="perSecond Average" class='awrclb'>7,897.73</td><td align="right" headers="perSecond StdDev" class='awrc'>377.60</td><td align="right" headers="perSecond Min" class='awrc'>7,630.72</td><td align="right" headers="perSecond Max" class='awrcrb'>8,164.73</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets examination</td><td align="right" class='awrnc'>2,667,932</td><td align="right" class='awrnc'>4,320.74</td><td align="right" class='awrnc'>35.66</td><td align="right" headers="perSecond Average" class='awrnclb'>2,160.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,553.56</td><td align="right" headers="perSecond Min" class='awrnc'>1,061.83</td><td align="right" headers="perSecond Max" class='awrncrb'>3,258.90</td></tr>
<tr><td scope="row" class='awrc'>consistent gets examination (fastpath)</td><td align="right" class='awrc'>2,667,332</td><td align="right" class='awrc'>4,319.76</td><td align="right" class='awrc'>35.65</td><td align="right" headers="perSecond Average" class='awrclb'>2,159.88</td><td align="right" headers="perSecond StdDev" class='awrc'>1,553.61</td><td align="right" headers="perSecond Min" class='awrc'>1,061.31</td><td align="right" headers="perSecond Max" class='awrcrb'>3,258.45</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets from cache</td><td align="right" class='awrnc'>9,753,047</td><td align="right" class='awrnc'>15,795.45</td><td align="right" class='awrnc'>130.34</td><td align="right" headers="perSecond Average" class='awrnclb'>7,897.73</td><td align="right" headers="perSecond StdDev" class='awrnc'>377.60</td><td align="right" headers="perSecond Min" class='awrnc'>7,630.72</td><td align="right" headers="perSecond Max" class='awrncrb'>8,164.73</td></tr>
<tr><td scope="row" class='awrc'>consistent gets pin</td><td align="right" class='awrc'>7,085,115</td><td align="right" class='awrc'>11,474.72</td><td align="right" class='awrc'>94.69</td><td align="right" headers="perSecond Average" class='awrclb'>5,737.36</td><td align="right" headers="perSecond StdDev" class='awrc'>1,931.16</td><td align="right" headers="perSecond Min" class='awrc'>4,371.82</td><td align="right" headers="perSecond Max" class='awrcrb'>7,102.89</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets pin (fastpath)</td><td align="right" class='awrnc'>5,790,505</td><td align="right" class='awrnc'>9,378.03</td><td align="right" class='awrnc'>77.39</td><td align="right" headers="perSecond Average" class='awrnclb'>4,689.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,591.29</td><td align="right" headers="perSecond Min" class='awrnc'>3,563.80</td><td align="right" headers="perSecond Max" class='awrncrb'>5,814.22</td></tr>
<tr><td scope="row" class='awrc'>cursor authentications</td><td align="right" class='awrc'>101</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>cursor reload failures</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>db block changes</td><td align="right" class='awrnc'>2,753,448</td><td align="right" class='awrnc'>4,459.37</td><td align="right" class='awrnc'>36.80</td><td align="right" headers="perSecond Average" class='awrnclb'>2,229.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>972.30</td><td align="right" headers="perSecond Min" class='awrnc'>1,542.16</td><td align="right" headers="perSecond Max" class='awrncrb'>2,917.20</td></tr>
<tr><td scope="row" class='awrc'>db block gets</td><td align="right" class='awrc'>2,735,038</td><td align="right" class='awrc'>4,429.60</td><td align="right" class='awrc'>36.55</td><td align="right" headers="perSecond Average" class='awrclb'>2,214.80</td><td align="right" headers="perSecond StdDev" class='awrc'>1,891.69</td><td align="right" headers="perSecond Min" class='awrc'>877.17</td><td align="right" headers="perSecond Max" class='awrcrb'>3,552.43</td></tr>
<tr><td scope="row" class='awrnc'>db block gets direct</td><td align="right" class='awrnc'>210</td><td align="right" class='awrnc'>0.34</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.17</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.14</td><td align="right" headers="perSecond Min" class='awrnc'>0.07</td><td align="right" headers="perSecond Max" class='awrncrb'>0.27</td></tr>
<tr><td scope="row" class='awrc'>db block gets from cache</td><td align="right" class='awrc'>2,734,828</td><td align="right" class='awrc'>4,429.26</td><td align="right" class='awrc'>36.55</td><td align="right" headers="perSecond Average" class='awrclb'>2,214.63</td><td align="right" headers="perSecond StdDev" class='awrc'>1,891.55</td><td align="right" headers="perSecond Min" class='awrc'>877.10</td><td align="right" headers="perSecond Max" class='awrcrb'>3,552.16</td></tr>
<tr><td scope="row" class='awrnc'>db block gets from cache (fastpath)</td><td align="right" class='awrnc'>1,452,205</td><td align="right" class='awrnc'>2,351.98</td><td align="right" class='awrnc'>19.41</td><td align="right" headers="perSecond Average" class='awrnclb'>1,175.99</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,459.97</td><td align="right" headers="perSecond Min" class='awrnc'>143.63</td><td align="right" headers="perSecond Max" class='awrncrb'>2,208.35</td></tr>
<tr><td scope="row" class='awrc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrc'>327,005</td><td align="right" class='awrc'>529.61</td><td align="right" class='awrc'>4.37</td><td align="right" headers="perSecond Average" class='awrclb'>264.80</td><td align="right" headers="perSecond StdDev" class='awrc'>206.72</td><td align="right" headers="perSecond Min" class='awrc'>118.63</td><td align="right" headers="perSecond Max" class='awrcrb'>410.98</td></tr>
<tr><td scope="row" class='awrnc'>dirty buffers inspected</td><td align="right" class='awrnc'>953,018</td><td align="right" class='awrnc'>1,543.46</td><td align="right" class='awrnc'>12.74</td><td align="right" headers="perSecond Average" class='awrnclb'>771.73</td><td align="right" headers="perSecond StdDev" class='awrnc'>224.53</td><td align="right" headers="perSecond Min" class='awrnc'>612.96</td><td align="right" headers="perSecond Max" class='awrncrb'>930.50</td></tr>
<tr><td scope="row" class='awrc'>enqueue conversions</td><td align="right" class='awrc'>555,634</td><td align="right" class='awrc'>899.90</td><td align="right" class='awrc'>7.43</td><td align="right" headers="perSecond Average" class='awrclb'>449.95</td><td align="right" headers="perSecond StdDev" class='awrc'>535.96</td><td align="right" headers="perSecond Min" class='awrc'>70.97</td><td align="right" headers="perSecond Max" class='awrcrb'>828.93</td></tr>
<tr><td scope="row" class='awrnc'>enqueue releases</td><td align="right" class='awrnc'>1,619,445</td><td align="right" class='awrnc'>2,622.83</td><td align="right" class='awrnc'>21.64</td><td align="right" headers="perSecond Average" class='awrnclb'>1,311.42</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,549.32</td><td align="right" headers="perSecond Min" class='awrnc'>215.88</td><td align="right" headers="perSecond Max" class='awrncrb'>2,406.95</td></tr>
<tr><td scope="row" class='awrc'>enqueue requests</td><td align="right" class='awrc'>1,619,558</td><td align="right" class='awrc'>2,623.02</td><td align="right" class='awrc'>21.64</td><td align="right" headers="perSecond Average" class='awrclb'>1,311.51</td><td align="right" headers="perSecond StdDev" class='awrc'>1,549.47</td><td align="right" headers="perSecond Min" class='awrc'>215.87</td><td align="right" headers="perSecond Max" class='awrcrb'>2,407.15</td></tr>
<tr><td scope="row" class='awrnc'>enqueue timeouts</td><td align="right" class='awrnc'>185</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.15</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.19</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.28</td></tr>
<tr><td scope="row" class='awrc'>enqueue waits</td><td align="right" class='awrc'>111,768</td><td align="right" class='awrc'>181.02</td><td align="right" class='awrc'>1.49</td><td align="right" headers="perSecond Average" class='awrclb'>90.51</td><td align="right" headers="perSecond StdDev" class='awrc'>51.55</td><td align="right" headers="perSecond Min" class='awrc'>54.06</td><td align="right" headers="perSecond Max" class='awrcrb'>126.96</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>526,196</td><td align="right" class='awrnc'>852.20</td><td align="right" class='awrnc'>7.03</td><td align="right" headers="perSecond Average" class='awrnclb'>426.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>157.58</td><td align="right" headers="perSecond Min" class='awrnc'>314.68</td><td align="right" headers="perSecond Max" class='awrncrb'>537.53</td></tr>
<tr><td scope="row" class='awrc'>file io service time</td><td align="right" class='awrc'>210,364,594</td><td align="right" class='awrc'>340,700.06</td><td align="right" class='awrc'>2,811.38</td><td align="right" headers="perSecond Average" class='awrclb'>170,350.03</td><td align="right" headers="perSecond StdDev" class='awrc'>125,045.35</td><td align="right" headers="perSecond Min" class='awrc'>81,929.62</td><td align="right" headers="perSecond Max" class='awrcrb'>258,770.45</td></tr>
<tr><td scope="row" class='awrnc'>file io wait time</td><td align="right" class='awrnc'>75,351,429,676</td><td align="right" class='awrnc'>122,037,029.85</td><td align="right" class='awrnc'>1,007,022.02</td><td align="right" headers="perSecond Average" class='awrnclb'>61,018,514.92</td><td align="right" headers="perSecond StdDev" class='awrnc'>47,799,595.99</td><td align="right" headers="perSecond Min" class='awrnc'>27,219,096.46</td><td align="right" headers="perSecond Max" class='awrncrb'>94,817,933.39</td></tr>
<tr><td scope="row" class='awrc'>free buffer inspected</td><td align="right" class='awrc'>7,275,603</td><td align="right" class='awrc'>11,783.21</td><td align="right" class='awrc'>97.23</td><td align="right" headers="perSecond Average" class='awrclb'>5,891.61</td><td align="right" headers="perSecond StdDev" class='awrc'>1,854.86</td><td align="right" headers="perSecond Min" class='awrc'>4,580.02</td><td align="right" headers="perSecond Max" class='awrcrb'>7,203.19</td></tr>
<tr><td scope="row" class='awrnc'>free buffer requested</td><td align="right" class='awrnc'>7,222,931</td><td align="right" class='awrnc'>11,697.91</td><td align="right" class='awrnc'>96.53</td><td align="right" headers="perSecond Average" class='awrnclb'>5,848.95</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,833.97</td><td align="right" headers="perSecond Min" class='awrnc'>4,552.14</td><td align="right" headers="perSecond Max" class='awrncrb'>7,145.77</td></tr>
<tr><td scope="row" class='awrc'>gc blocks compressed</td><td align="right" class='awrc'>102,111</td><td align="right" class='awrc'>165.37</td><td align="right" class='awrc'>1.36</td><td align="right" headers="perSecond Average" class='awrclb'>82.68</td><td align="right" headers="perSecond StdDev" class='awrc'>104.21</td><td align="right" headers="perSecond Min" class='awrc'>9.00</td><td align="right" headers="perSecond Max" class='awrcrb'>156.37</td></tr>
<tr><td scope="row" class='awrnc'>gc blocks lost</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc cleanout saved</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks created</td><td align="right" class='awrnc'>74,373</td><td align="right" class='awrnc'>120.45</td><td align="right" class='awrnc'>0.99</td><td align="right" headers="perSecond Average" class='awrnclb'>60.22</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.06</td><td align="right" headers="perSecond Min" class='awrnc'>60.18</td><td align="right" headers="perSecond Max" class='awrncrb'>60.27</td></tr>
<tr><td scope="row" class='awrc'>gc cr block build time</td><td align="right" class='awrc'>408</td><td align="right" class='awrc'>0.66</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.33</td><td align="right" headers="perSecond StdDev" class='awrc'>0.42</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.63</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block flush time</td><td align="right" class='awrnc'>224</td><td align="right" class='awrnc'>0.36</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.17</td><td align="right" headers="perSecond Max" class='awrncrb'>0.19</td></tr>
<tr><td scope="row" class='awrc'>gc cr block receive time</td><td align="right" class='awrc'>6,450</td><td align="right" class='awrc'>10.45</td><td align="right" class='awrc'>0.09</td><td align="right" headers="perSecond Average" class='awrclb'>5.22</td><td align="right" headers="perSecond StdDev" class='awrc'>6.72</td><td align="right" headers="perSecond Min" class='awrc'>0.47</td><td align="right" headers="perSecond Max" class='awrcrb'>9.97</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks built</td><td align="right" class='awrnc'>35,312</td><td align="right" class='awrnc'>57.19</td><td align="right" class='awrnc'>0.47</td><td align="right" headers="perSecond Average" class='awrnclb'>28.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>36.94</td><td align="right" headers="perSecond Min" class='awrnc'>2.47</td><td align="right" headers="perSecond Max" class='awrncrb'>54.71</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks flushed</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks received</td><td align="right" class='awrnc'>36,605</td><td align="right" class='awrnc'>59.29</td><td align="right" class='awrnc'>0.49</td><td align="right" headers="perSecond Average" class='awrnclb'>29.64</td><td align="right" headers="perSecond StdDev" class='awrnc'>38.33</td><td align="right" headers="perSecond Min" class='awrnc'>2.54</td><td align="right" headers="perSecond Max" class='awrncrb'>56.74</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks served</td><td align="right" class='awrc'>36,707</td><td align="right" class='awrc'>59.45</td><td align="right" class='awrc'>0.49</td><td align="right" headers="perSecond Average" class='awrclb'>29.72</td><td align="right" headers="perSecond StdDev" class='awrc'>38.49</td><td align="right" headers="perSecond Min" class='awrc'>2.50</td><td align="right" headers="perSecond Max" class='awrcrb'>56.94</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multiblock grant time</td><td align="right" class='awrnc'>221,770</td><td align="right" class='awrnc'>359.17</td><td align="right" class='awrnc'>2.96</td><td align="right" headers="perSecond Average" class='awrnclb'>179.58</td><td align="right" headers="perSecond StdDev" class='awrnc'>81.32</td><td align="right" headers="perSecond Min" class='awrnc'>122.08</td><td align="right" headers="perSecond Max" class='awrncrb'>237.09</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grants received</td><td align="right" class='awrc'>2,652,001</td><td align="right" class='awrc'>4,295.05</td><td align="right" class='awrc'>35.44</td><td align="right" headers="perSecond Average" class='awrclb'>2,147.52</td><td align="right" headers="perSecond StdDev" class='awrc'>619.32</td><td align="right" headers="perSecond Min" class='awrc'>1,709.60</td><td align="right" headers="perSecond Max" class='awrcrb'>2,585.45</td></tr>
<tr><td scope="row" class='awrnc'>gc current block flush time</td><td align="right" class='awrnc'>187</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.15</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.10</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.22</td></tr>
<tr><td scope="row" class='awrc'>gc current block pin time</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block receive time</td><td align="right" class='awrnc'>12,000</td><td align="right" class='awrnc'>19.43</td><td align="right" class='awrnc'>0.16</td><td align="right" headers="perSecond Average" class='awrnclb'>9.72</td><td align="right" headers="perSecond StdDev" class='awrnc'>10.08</td><td align="right" headers="perSecond Min" class='awrnc'>2.59</td><td align="right" headers="perSecond Max" class='awrncrb'>16.84</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks flushed</td><td align="right" class='awrc'>48</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks pinned</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks received</td><td align="right" class='awrc'>109,503</td><td align="right" class='awrc'>177.35</td><td align="right" class='awrc'>1.46</td><td align="right" headers="perSecond Average" class='awrclb'>88.67</td><td align="right" headers="perSecond StdDev" class='awrc'>87.03</td><td align="right" headers="perSecond Min" class='awrc'>27.13</td><td align="right" headers="perSecond Max" class='awrcrb'>150.22</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks served</td><td align="right" class='awrnc'>109,727</td><td align="right" class='awrnc'>177.70</td><td align="right" class='awrnc'>1.47</td><td align="right" headers="perSecond Average" class='awrnclb'>88.85</td><td align="right" headers="perSecond StdDev" class='awrnc'>87.71</td><td align="right" headers="perSecond Min" class='awrnc'>26.83</td><td align="right" headers="perSecond Max" class='awrncrb'>150.87</td></tr>
<tr><td scope="row" class='awrc'>gc force cr read cr</td><td align="right" class='awrc'>140</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.11</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.11</td><td align="right" headers="perSecond Max" class='awrcrb'>0.12</td></tr>
<tr><td scope="row" class='awrnc'>gc force cr read current</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes saved</td><td align="right" class='awrc'>389,804</td><td align="right" class='awrc'>631.28</td><td align="right" class='awrc'>5.21</td><td align="right" headers="perSecond Average" class='awrclb'>315.64</td><td align="right" headers="perSecond StdDev" class='awrc'>383.29</td><td align="right" headers="perSecond Min" class='awrc'>44.61</td><td align="right" headers="perSecond Max" class='awrcrb'>586.67</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes sent</td><td align="right" class='awrnc'>781,669</td><td align="right" class='awrnc'>1,265.91</td><td align="right" class='awrnc'>10.45</td><td align="right" headers="perSecond Average" class='awrnclb'>632.95</td><td align="right" headers="perSecond StdDev" class='awrnc'>626.31</td><td align="right" headers="perSecond Min" class='awrnc'>190.09</td><td align="right" headers="perSecond Max" class='awrncrb'>1,075.82</td></tr>
<tr><td scope="row" class='awrc'>gc local grants</td><td align="right" class='awrc'>4,486,162</td><td align="right" class='awrc'>7,265.55</td><td align="right" class='awrc'>59.95</td><td align="right" headers="perSecond Average" class='awrclb'>3,632.77</td><td align="right" headers="perSecond StdDev" class='awrc'>663.62</td><td align="right" headers="perSecond Min" class='awrc'>3,163.52</td><td align="right" headers="perSecond Max" class='awrcrb'>4,102.02</td></tr>
<tr><td scope="row" class='awrnc'>gc merge pi fg</td><td align="right" class='awrnc'>65</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.07</td></tr>
<tr><td scope="row" class='awrc'>gc no change made</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass grants</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass waits</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc remote grants</td><td align="right" class='awrnc'>2,631,363</td><td align="right" class='awrnc'>4,261.65</td><td align="right" class='awrnc'>35.17</td><td align="right" headers="perSecond Average" class='awrnclb'>2,130.82</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,064.14</td><td align="right" headers="perSecond Min" class='awrnc'>1,378.36</td><td align="right" headers="perSecond Max" class='awrncrb'>2,883.29</td></tr>
<tr><td scope="row" class='awrc'>gc status messages received</td><td align="right" class='awrc'>708,163</td><td align="right" class='awrc'>1,146.91</td><td align="right" class='awrc'>9.46</td><td align="right" headers="perSecond Average" class='awrclb'>573.46</td><td align="right" headers="perSecond StdDev" class='awrc'>312.25</td><td align="right" headers="perSecond Min" class='awrc'>352.67</td><td align="right" headers="perSecond Max" class='awrcrb'>794.25</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages sent</td><td align="right" class='awrnc'>709,156</td><td align="right" class='awrnc'>1,148.49</td><td align="right" class='awrnc'>9.48</td><td align="right" headers="perSecond Average" class='awrnclb'>574.24</td><td align="right" headers="perSecond StdDev" class='awrnc'>314.61</td><td align="right" headers="perSecond Min" class='awrnc'>351.78</td><td align="right" headers="perSecond Max" class='awrncrb'>796.71</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity lock failures</td><td align="right" class='awrc'>376</td><td align="right" class='awrc'>0.61</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.30</td><td align="right" headers="perSecond StdDev" class='awrc'>0.43</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.61</td></tr>
<tr><td scope="row" class='awrnc'>gcs affinity lock grants</td><td align="right" class='awrnc'>2,982,777</td><td align="right" class='awrnc'>4,830.74</td><td align="right" class='awrnc'>39.86</td><td align="right" headers="perSecond Average" class='awrnclb'>2,415.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>325.89</td><td align="right" headers="perSecond Min" class='awrnc'>2,184.93</td><td align="right" headers="perSecond Max" class='awrncrb'>2,645.81</td></tr>
<tr><td scope="row" class='awrc'>gcs anti-locks created</td><td align="right" class='awrc'>74,394</td><td align="right" class='awrc'>120.48</td><td align="right" class='awrc'>0.99</td><td align="right" headers="perSecond Average" class='awrclb'>60.24</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>60.22</td><td align="right" headers="perSecond Max" class='awrcrb'>60.27</td></tr>
<tr><td scope="row" class='awrnc'>gcs data block access records</td><td align="right" class='awrnc'>7,254,854</td><td align="right" class='awrnc'>11,749.60</td><td align="right" class='awrnc'>96.96</td><td align="right" headers="perSecond Average" class='awrnclb'>5,874.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,749.17</td><td align="right" headers="perSecond Min" class='awrnc'>4,637.95</td><td align="right" headers="perSecond Max" class='awrncrb'>7,111.65</td></tr>
<tr><td scope="row" class='awrc'>gcs messages sent</td><td align="right" class='awrc'>7,945,980</td><td align="right" class='awrc'>12,868.92</td><td align="right" class='awrc'>106.19</td><td align="right" headers="perSecond Average" class='awrclb'>6,434.46</td><td align="right" headers="perSecond StdDev" class='awrc'>1,911.86</td><td align="right" headers="perSecond Min" class='awrc'>5,082.57</td><td align="right" headers="perSecond Max" class='awrcrb'>7,786.35</td></tr>
<tr><td scope="row" class='awrnc'>gcs read-mostly lock failures</td><td align="right" class='awrnc'>69,279</td><td align="right" class='awrnc'>112.20</td><td align="right" class='awrnc'>0.93</td><td align="right" headers="perSecond Average" class='awrnclb'>112.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>112.20</td><td align="right" headers="perSecond Max" class='awrncrb'>112.20</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly lock grants</td><td align="right" class='awrc'>391,614</td><td align="right" class='awrc'>634.26</td><td align="right" class='awrc'>5.23</td><td align="right" headers="perSecond Average" class='awrclb'>634.26</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>634.26</td><td align="right" headers="perSecond Max" class='awrcrb'>634.26</td></tr>
<tr><td scope="row" class='awrnc'>ges messages sent</td><td align="right" class='awrnc'>230,975</td><td align="right" class='awrnc'>374.07</td><td align="right" class='awrnc'>3.09</td><td align="right" headers="perSecond Average" class='awrnclb'>187.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.20</td><td align="right" headers="perSecond Min" class='awrnc'>186.19</td><td align="right" headers="perSecond Max" class='awrncrb'>187.88</td></tr>
<tr><td scope="row" class='awrc'>global enqueue get time</td><td align="right" class='awrc'>62,829</td><td align="right" class='awrc'>101.76</td><td align="right" class='awrc'>0.84</td><td align="right" headers="perSecond Average" class='awrclb'>50.88</td><td align="right" headers="perSecond StdDev" class='awrc'>64.86</td><td align="right" headers="perSecond Min" class='awrc'>5.02</td><td align="right" headers="perSecond Max" class='awrcrb'>96.74</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue gets sync</td><td align="right" class='awrnc'>7,262,748</td><td align="right" class='awrnc'>11,762.72</td><td align="right" class='awrnc'>97.06</td><td align="right" headers="perSecond Average" class='awrnclb'>5,881.36</td><td align="right" headers="perSecond StdDev" class='awrnc'>8,032.60</td><td align="right" headers="perSecond Min" class='awrnc'>201.46</td><td align="right" headers="perSecond Max" class='awrncrb'>11,561.26</td></tr>
<tr><td scope="row" class='awrc'>global enqueue releases</td><td align="right" class='awrc'>6,707,247</td><td align="right" class='awrc'>10,863.04</td><td align="right" class='awrc'>89.64</td><td align="right" headers="perSecond Average" class='awrclb'>5,431.52</td><td align="right" headers="perSecond StdDev" class='awrc'>7,496.66</td><td align="right" headers="perSecond Min" class='awrc'>130.58</td><td align="right" headers="perSecond Max" class='awrcrb'>10,732.46</td></tr>
<tr><td scope="row" class='awrnc'>global undo segment hints helped</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>global undo segment hints were stale</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>heap block compress</td><td align="right" class='awrnc'>4,158</td><td align="right" class='awrnc'>6.73</td><td align="right" class='awrnc'>0.06</td><td align="right" headers="perSecond Average" class='awrnclb'>3.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.46</td><td align="right" headers="perSecond Min" class='awrnc'>1.63</td><td align="right" headers="perSecond Max" class='awrncrb'>5.11</td></tr>
<tr><td scope="row" class='awrc'>hot buffers moved to head of LRU</td><td align="right" class='awrc'>294,985</td><td align="right" class='awrc'>477.74</td><td align="right" class='awrc'>3.94</td><td align="right" headers="perSecond Average" class='awrclb'>238.87</td><td align="right" headers="perSecond StdDev" class='awrc'>17.88</td><td align="right" headers="perSecond Min" class='awrc'>226.22</td><td align="right" headers="perSecond Max" class='awrcrb'>251.52</td></tr>
<tr><td scope="row" class='awrnc'>immediate (CR) block cleanout applications</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrc'>485</td><td align="right" class='awrc'>0.79</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.39</td><td align="right" headers="perSecond StdDev" class='awrc'>0.09</td><td align="right" headers="perSecond Min" class='awrc'>0.33</td><td align="right" headers="perSecond Max" class='awrcrb'>0.45</td></tr>
<tr><td scope="row" class='awrnc'>in call idle wait time</td><td align="right" class='awrnc'>10,029,395</td><td align="right" class='awrnc'>16,242.98</td><td align="right" class='awrnc'>134.04</td><td align="right" headers="perSecond Average" class='awrnclb'>8,121.49</td><td align="right" headers="perSecond StdDev" class='awrnc'>53.29</td><td align="right" headers="perSecond Min" class='awrnc'>8,083.81</td><td align="right" headers="perSecond Max" class='awrncrb'>8,159.17</td></tr>
<tr><td scope="row" class='awrc'>index crx upgrade (positioned)</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>index fast full scans (full)</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>index fetch by key</td><td align="right" class='awrc'>3,740</td><td align="right" class='awrc'>6.06</td><td align="right" class='awrc'>0.05</td><td align="right" headers="perSecond Average" class='awrclb'>3.03</td><td align="right" headers="perSecond StdDev" class='awrc'>1.72</td><td align="right" headers="perSecond Min" class='awrc'>1.81</td><td align="right" headers="perSecond Max" class='awrcrb'>4.25</td></tr>
<tr><td scope="row" class='awrnc'>index range scans</td><td align="right" class='awrnc'>500,946</td><td align="right" class='awrnc'>811.31</td><td align="right" class='awrnc'>6.69</td><td align="right" headers="perSecond Average" class='awrnclb'>405.65</td><td align="right" headers="perSecond StdDev" class='awrnc'>131.31</td><td align="right" headers="perSecond Min" class='awrnc'>312.81</td><td align="right" headers="perSecond Max" class='awrncrb'>498.50</td></tr>
<tr><td scope="row" class='awrc'>leaf node 90-10 splits</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>leaf node splits</td><td align="right" class='awrnc'>166</td><td align="right" class='awrnc'>0.27</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.13</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.12</td><td align="right" headers="perSecond Max" class='awrncrb'>0.15</td></tr>
<tr><td scope="row" class='awrc'>lob reads</td><td align="right" class='awrc'>277</td><td align="right" class='awrc'>0.45</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.45</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.45</td><td align="right" headers="perSecond Max" class='awrcrb'>0.45</td></tr>
<tr><td scope="row" class='awrnc'>lob writes</td><td align="right" class='awrnc'>3,241</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>2.62</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.65</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>5.21</td></tr>
<tr><td scope="row" class='awrc'>lob writes unaligned</td><td align="right" class='awrc'>3,241</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>0.04</td><td align="right" headers="perSecond Average" class='awrclb'>2.62</td><td align="right" headers="perSecond StdDev" class='awrc'>3.65</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>5.21</td></tr>
<tr><td scope="row" class='awrnc'>logical read bytes from cache</td><td align="right" class='awrnc'>102,300,672,000</td><td align="right" class='awrnc'>165,680,815.99</td><td align="right" class='awrnc'>1,367,180.82</td><td align="right" headers="perSecond Average" class='awrnclb'>82,840,407.99</td><td align="right" headers="perSecond StdDev" class='awrnc'>18,588,879.71</td><td align="right" headers="perSecond Min" class='awrnc'>69,696,085.09</td><td align="right" headers="perSecond Max" class='awrncrb'>95,984,730.89</td></tr>
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>max cf enq hold time</td><td align="right" class='awrnc'>1,629</td><td align="right" class='awrnc'>2.64</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>1.32</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.82</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>2.61</td></tr>
<tr><td scope="row" class='awrc'>messages received</td><td align="right" class='awrc'>238,513</td><td align="right" class='awrc'>386.28</td><td align="right" class='awrc'>3.19</td><td align="right" headers="perSecond Average" class='awrclb'>193.14</td><td align="right" headers="perSecond StdDev" class='awrc'>20.81</td><td align="right" headers="perSecond Min" class='awrc'>178.43</td><td align="right" headers="perSecond Max" class='awrcrb'>207.86</td></tr>
<tr><td scope="row" class='awrnc'>messages sent</td><td align="right" class='awrnc'>238,511</td><td align="right" class='awrnc'>386.28</td><td align="right" class='awrnc'>3.19</td><td align="right" headers="perSecond Average" class='awrnclb'>193.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>20.81</td><td align="right" headers="perSecond Min" class='awrnc'>178.42</td><td align="right" headers="perSecond Max" class='awrncrb'>207.85</td></tr>
<tr><td scope="row" class='awrc'>no work - consistent read gets</td><td align="right" class='awrc'>6,970,136</td><td align="right" class='awrc'>11,288.50</td><td align="right" class='awrc'>93.15</td><td align="right" headers="perSecond Average" class='awrclb'>5,644.25</td><td align="right" headers="perSecond StdDev" class='awrc'>1,822.45</td><td align="right" headers="perSecond Min" class='awrc'>4,355.58</td><td align="right" headers="perSecond Max" class='awrcrb'>6,932.91</td></tr>
<tr><td scope="row" class='awrnc'>non-idle wait count</td><td align="right" class='awrnc'>5,635,582</td><td align="right" class='awrnc'>9,127.14</td><td align="right" class='awrnc'>75.32</td><td align="right" headers="perSecond Average" class='awrnclb'>4,563.57</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,873.45</td><td align="right" headers="perSecond Min" class='awrnc'>3,238.84</td><td align="right" headers="perSecond Max" class='awrncrb'>5,888.30</td></tr>
<tr><td scope="row" class='awrc'>non-idle wait time</td><td align="right" class='awrc'>1,983,423</td><td align="right" class='awrc'>3,212.25</td><td align="right" class='awrc'>26.51</td><td align="right" headers="perSecond Average" class='awrclb'>1,606.13</td><td align="right" headers="perSecond StdDev" class='awrc'>452.60</td><td align="right" headers="perSecond Min" class='awrc'>1,286.09</td><td align="right" headers="perSecond Max" class='awrcrb'>1,926.17</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>601,224</td><td align="right" class='awrnc'>973.71</td><td align="right" class='awrnc'>8.03</td><td align="right" headers="perSecond Average" class='awrnclb'>486.86</td><td align="right" headers="perSecond StdDev" class='awrnc'>177.47</td><td align="right" headers="perSecond Min" class='awrnc'>361.37</td><td align="right" headers="perSecond Max" class='awrncrb'>612.35</td></tr>
<tr><td scope="row" class='awrc'>parse count (describe)</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>parse count (hard)</td><td align="right" class='awrnc'>199</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.16</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.27</td></tr>
<tr><td scope="row" class='awrc'>parse count (total)</td><td align="right" class='awrc'>25,321</td><td align="right" class='awrc'>41.01</td><td align="right" class='awrc'>0.34</td><td align="right" headers="perSecond Average" class='awrclb'>20.50</td><td align="right" headers="perSecond StdDev" class='awrc'>25.87</td><td align="right" headers="perSecond Min" class='awrc'>2.21</td><td align="right" headers="perSecond Max" class='awrcrb'>38.80</td></tr>
<tr><td scope="row" class='awrnc'>parse time cpu</td><td align="right" class='awrnc'>97</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.13</td></tr>
<tr><td scope="row" class='awrc'>parse time elapsed</td><td align="right" class='awrc'>220</td><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrc'>0.20</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.32</td></tr>
<tr><td scope="row" class='awrnc'>physical read IO requests</td><td align="right" class='awrnc'>7,025,142</td><td align="right" class='awrnc'>11,377.57</td><td align="right" class='awrnc'>93.89</td><td align="right" headers="perSecond Average" class='awrnclb'>5,688.79</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,697.48</td><td align="right" headers="perSecond Min" class='awrnc'>4,488.49</td><td align="right" headers="perSecond Max" class='awrncrb'>6,889.08</td></tr>
<tr><td scope="row" class='awrc'>physical read bytes</td><td align="right" class='awrc'>57,552,625,664</td><td align="right" class='awrc'>93,209,403.03</td><td align="right" class='awrc'>769,152.78</td><td align="right" headers="perSecond Average" class='awrclb'>46,604,701.52</td><td align="right" headers="perSecond StdDev" class='awrc'>13,906,381.81</td><td align="right" headers="perSecond Min" class='awrc'>36,771,404.63</td><td align="right" headers="perSecond Max" class='awrcrb'>56,437,998.40</td></tr>
<tr><td scope="row" class='awrnc'>physical read total IO requests</td><td align="right" class='awrnc'>7,035,452</td><td align="right" class='awrnc'>11,394.27</td><td align="right" class='awrnc'>94.02</td><td align="right" headers="perSecond Average" class='awrnclb'>5,697.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,697.39</td><td align="right" headers="perSecond Min" class='awrnc'>4,496.90</td><td align="right" headers="perSecond Max" class='awrncrb'>6,897.37</td></tr>
<tr><td scope="row" class='awrc'>physical read total bytes</td><td align="right" class='awrc'>59,579,852,288</td><td align="right" class='awrc'>96,492,542.48</td><td align="right" class='awrc'>796,245.32</td><td align="right" headers="perSecond Average" class='awrclb'>48,246,271.24</td><td align="right" headers="perSecond StdDev" class='awrc'>13,311,840.32</td><td align="right" headers="perSecond Min" class='awrc'>38,833,378.68</td><td align="right" headers="perSecond Max" class='awrcrb'>57,659,163.80</td></tr>
<tr><td scope="row" class='awrnc'>physical read total multi block requests</td><td align="right" class='awrnc'>1,834</td><td align="right" class='awrnc'>2.97</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>1.49</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.57</td><td align="right" headers="perSecond Min" class='awrnc'>1.08</td><td align="right" headers="perSecond Max" class='awrncrb'>1.89</td></tr>
<tr><td scope="row" class='awrc'>physical reads</td><td align="right" class='awrc'>7,025,468</td><td align="right" class='awrc'>11,378.10</td><td align="right" class='awrc'>93.89</td><td align="right" headers="perSecond Average" class='awrclb'>5,689.05</td><td align="right" headers="perSecond StdDev" class='awrc'>1,697.56</td><td align="right" headers="perSecond Min" class='awrc'>4,488.70</td><td align="right" headers="perSecond Max" class='awrcrb'>6,889.41</td></tr>
<tr><td scope="row" class='awrnc'>physical reads cache</td><td align="right" class='awrnc'>7,025,468</td><td align="right" class='awrnc'>11,378.10</td><td align="right" class='awrnc'>93.89</td><td align="right" headers="perSecond Average" class='awrnclb'>5,689.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,697.56</td><td align="right" headers="perSecond Min" class='awrnc'>4,488.70</td><td align="right" headers="perSecond Max" class='awrncrb'>6,889.41</td></tr>
<tr><td scope="row" class='awrc'>physical reads cache prefetch</td><td align="right" class='awrc'>4,738,597</td><td align="right" class='awrc'>7,674.40</td><td align="right" class='awrc'>63.33</td><td align="right" headers="perSecond Average" class='awrclb'>3,837.20</td><td align="right" headers="perSecond StdDev" class='awrc'>1,134.59</td><td align="right" headers="perSecond Min" class='awrc'>3,034.93</td><td align="right" headers="perSecond Max" class='awrcrb'>4,639.47</td></tr>
<tr><td scope="row" class='awrnc'>physical write IO requests</td><td align="right" class='awrnc'>1,066,707</td><td align="right" class='awrnc'>1,727.59</td><td align="right" class='awrnc'>14.26</td><td align="right" headers="perSecond Average" class='awrnclb'>863.79</td><td align="right" headers="perSecond StdDev" class='awrnc'>322.14</td><td align="right" headers="perSecond Min" class='awrnc'>636.00</td><td align="right" headers="perSecond Max" class='awrncrb'>1,091.59</td></tr>
<tr><td scope="row" class='awrc'>physical write bytes</td><td align="right" class='awrc'>9,204,424,704</td><td align="right" class='awrc'>14,907,062.48</td><td align="right" class='awrc'>123,011.05</td><td align="right" headers="perSecond Average" class='awrclb'>7,453,531.24</td><td align="right" headers="perSecond StdDev" class='awrc'>2,769,819.03</td><td align="right" headers="perSecond Min" class='awrc'>5,494,973.42</td><td align="right" headers="perSecond Max" class='awrcrb'>9,412,089.06</td></tr>
<tr><td scope="row" class='awrnc'>physical write total IO requests</td><td align="right" class='awrnc'>1,213,714</td><td align="right" class='awrnc'>1,965.67</td><td align="right" class='awrnc'>16.22</td><td align="right" headers="perSecond Average" class='awrnclb'>982.84</td><td align="right" headers="perSecond StdDev" class='awrnc'>355.07</td><td align="right" headers="perSecond Min" class='awrnc'>731.77</td><td align="right" headers="perSecond Max" class='awrncrb'>1,233.91</td></tr>
<tr><td scope="row" class='awrc'>physical write total bytes</td><td align="right" class='awrc'>11,500,974,080</td><td align="right" class='awrc'>18,626,456.63</td><td align="right" class='awrc'>153,702.91</td><td align="right" headers="perSecond Average" class='awrclb'>9,313,228.31</td><td align="right" headers="perSecond StdDev" class='awrc'>3,622,516.72</td><td align="right" headers="perSecond Min" class='awrc'>6,751,722.18</td><td align="right" headers="perSecond Max" class='awrcrb'>11,874,734.45</td></tr>
<tr><td scope="row" class='awrnc'>physical write total multi block requests</td><td align="right" class='awrnc'>2,967</td><td align="right" class='awrnc'>4.81</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>2.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.90</td><td align="right" headers="perSecond Min" class='awrnc'>1.77</td><td align="right" headers="perSecond Max" class='awrncrb'>3.04</td></tr>
<tr><td scope="row" class='awrc'>physical writes</td><td align="right" class='awrc'>1,123,587</td><td align="right" class='awrc'>1,819.71</td><td align="right" class='awrc'>15.02</td><td align="right" headers="perSecond Average" class='awrclb'>909.85</td><td align="right" headers="perSecond StdDev" class='awrc'>338.11</td><td align="right" headers="perSecond Min" class='awrc'>670.77</td><td align="right" headers="perSecond Max" class='awrcrb'>1,148.94</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct</td><td align="right" class='awrnc'>314</td><td align="right" class='awrnc'>0.51</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.25</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.17</td><td align="right" headers="perSecond Min" class='awrnc'>0.14</td><td align="right" headers="perSecond Max" class='awrncrb'>0.37</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct (lob)</td><td align="right" class='awrc'>104</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.06</td><td align="right" headers="perSecond Max" class='awrcrb'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct temporary tablespace</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.16</td><td align="right" headers="perSecond Max" class='awrncrb'>0.16</td></tr>
<tr><td scope="row" class='awrc'>physical writes from cache</td><td align="right" class='awrc'>1,123,273</td><td align="right" class='awrc'>1,819.20</td><td align="right" class='awrc'>15.01</td><td align="right" headers="perSecond Average" class='awrclb'>909.60</td><td align="right" headers="perSecond StdDev" class='awrc'>337.95</td><td align="right" headers="perSecond Min" class='awrc'>670.64</td><td align="right" headers="perSecond Max" class='awrcrb'>1,148.56</td></tr>
<tr><td scope="row" class='awrnc'>physical writes non checkpoint</td><td align="right" class='awrnc'>1,112,130</td><td align="right" class='awrnc'>1,801.15</td><td align="right" class='awrnc'>14.86</td><td align="right" headers="perSecond Average" class='awrnclb'>900.58</td><td align="right" headers="perSecond StdDev" class='awrnc'>326.95</td><td align="right" headers="perSecond Min" class='awrnc'>669.39</td><td align="right" headers="perSecond Max" class='awrncrb'>1,131.77</td></tr>
<tr><td scope="row" class='awrc'>pinned buffers inspected</td><td align="right" class='awrc'>3,119</td><td align="right" class='awrc'>5.05</td><td align="right" class='awrc'>0.04</td><td align="right" headers="perSecond Average" class='awrclb'>2.53</td><td align="right" headers="perSecond StdDev" class='awrc'>1.24</td><td align="right" headers="perSecond Min" class='awrc'>1.65</td><td align="right" headers="perSecond Max" class='awrcrb'>3.40</td></tr>
<tr><td scope="row" class='awrnc'>process last non-idle time</td><td align="right" class='awrnc'>728</td><td align="right" class='awrnc'>1.18</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.58</td><td align="right" headers="perSecond Min" class='awrnc'>0.18</td><td align="right" headers="perSecond Max" class='awrncrb'>1.00</td></tr>
<tr><td scope="row" class='awrc'>recursive calls</td><td align="right" class='awrc'>902,381</td><td align="right" class='awrc'>1,461.46</td><td align="right" class='awrc'>12.06</td><td align="right" headers="perSecond Average" class='awrclb'>730.73</td><td align="right" headers="perSecond StdDev" class='awrc'>429.56</td><td align="right" headers="perSecond Min" class='awrc'>426.99</td><td align="right" headers="perSecond Max" class='awrcrb'>1,034.47</td></tr>
<tr><td scope="row" class='awrnc'>recursive cpu usage</td><td align="right" class='awrnc'>193,475</td><td align="right" class='awrnc'>313.34</td><td align="right" class='awrnc'>2.59</td><td align="right" headers="perSecond Average" class='awrnclb'>156.67</td><td align="right" headers="perSecond StdDev" class='awrnc'>45.42</td><td align="right" headers="perSecond Min" class='awrnc'>124.55</td><td align="right" headers="perSecond Max" class='awrncrb'>188.79</td></tr>
<tr><td scope="row" class='awrc'>redo KB read</td><td align="right" class='awrc'>1,084,702</td><td align="right" class='awrc'>1,756.70</td><td align="right" class='awrc'>14.50</td><td align="right" headers="perSecond Average" class='awrclb'>878.35</td><td align="right" headers="perSecond StdDev" class='awrc'>321.96</td><td align="right" headers="perSecond Min" class='awrc'>650.69</td><td align="right" headers="perSecond Max" class='awrcrb'>1,106.01</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrnc'>691,016</td><td align="right" class='awrnc'>1,119.14</td><td align="right" class='awrnc'>9.23</td><td align="right" headers="perSecond Average" class='awrnclb'>559.57</td><td align="right" headers="perSecond StdDev" class='awrnc'>202.11</td><td align="right" headers="perSecond Min" class='awrnc'>416.65</td><td align="right" headers="perSecond Max" class='awrncrb'>702.48</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written</td><td align="right" class='awrc'>2,005,966</td><td align="right" class='awrc'>3,248.77</td><td align="right" class='awrc'>26.81</td><td align="right" headers="perSecond Average" class='awrclb'>1,624.38</td><td align="right" headers="perSecond StdDev" class='awrc'>582.43</td><td align="right" headers="perSecond Min" class='awrc'>1,212.55</td><td align="right" headers="perSecond Max" class='awrcrb'>2,036.22</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written (group 0)</td><td align="right" class='awrnc'>666,032</td><td align="right" class='awrnc'>1,078.70</td><td align="right" class='awrnc'>8.90</td><td align="right" headers="perSecond Average" class='awrnclb'>1,078.70</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>1,078.70</td><td align="right" headers="perSecond Max" class='awrncrb'>1,078.70</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written (group 1)</td><td align="right" class='awrc'>591,207</td><td align="right" class='awrc'>957.52</td><td align="right" class='awrc'>7.90</td><td align="right" headers="perSecond Average" class='awrclb'>957.52</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>957.52</td><td align="right" headers="perSecond Max" class='awrcrb'>957.52</td></tr>
<tr><td scope="row" class='awrnc'>redo entries</td><td align="right" class='awrnc'>1,574,074</td><td align="right" class='awrnc'>2,549.30</td><td align="right" class='awrnc'>21.04</td><td align="right" headers="perSecond Average" class='awrnclb'>1,274.65</td><td align="right" headers="perSecond StdDev" class='awrnc'>606.92</td><td align="right" headers="perSecond Min" class='awrnc'>845.50</td><td align="right" headers="perSecond Max" class='awrncrb'>1,703.81</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>976,510,424</td><td align="right" class='awrc'>1,581,510.85</td><td align="right" class='awrc'>13,050.42</td><td align="right" headers="perSecond Average" class='awrclb'>790,755.42</td><td align="right" headers="perSecond StdDev" class='awrc'>284,798.90</td><td align="right" headers="perSecond Min" class='awrc'>589,372.19</td><td align="right" headers="perSecond Max" class='awrcrb'>992,138.66</td></tr>
<tr><td scope="row" class='awrnc'>redo size for direct writes</td><td align="right" class='awrnc'>300</td><td align="right" class='awrnc'>0.49</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.24</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.19</td><td align="right" headers="perSecond Max" class='awrncrb'>0.29</td></tr>
<tr><td scope="row" class='awrc'>redo subscn max counts</td><td align="right" class='awrc'>193</td><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.12</td><td align="right" headers="perSecond Max" class='awrcrb'>0.20</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.10</td></tr>
<tr><td scope="row" class='awrc'>redo synch time (usec)</td><td align="right" class='awrc'>815,580</td><td align="right" class='awrc'>1,320.84</td><td align="right" class='awrc'>10.90</td><td align="right" headers="perSecond Average" class='awrclb'>660.42</td><td align="right" headers="perSecond StdDev" class='awrc'>429.89</td><td align="right" headers="perSecond Min" class='awrc'>356.44</td><td align="right" headers="perSecond Max" class='awrcrb'>964.40</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead (usec)</td><td align="right" class='awrnc'>31,895</td><td align="right" class='awrnc'>51.66</td><td align="right" class='awrnc'>0.43</td><td align="right" headers="perSecond Average" class='awrnclb'>25.83</td><td align="right" headers="perSecond StdDev" class='awrnc'>34.64</td><td align="right" headers="perSecond Min" class='awrnc'>1.33</td><td align="right" headers="perSecond Max" class='awrncrb'>50.32</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead count ( 32ms)</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch writes</td><td align="right" class='awrc'>35</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>redo wastage</td><td align="right" class='awrnc'>17,734,332</td><td align="right" class='awrnc'>28,721.63</td><td align="right" class='awrnc'>237.01</td><td align="right" headers="perSecond Average" class='awrnclb'>14,360.81</td><td align="right" headers="perSecond StdDev" class='awrnc'>3,791.51</td><td align="right" headers="perSecond Min" class='awrnc'>11,679.81</td><td align="right" headers="perSecond Max" class='awrncrb'>17,041.82</td></tr>
<tr><td scope="row" class='awrc'>redo write active strands</td><td align="right" class='awrc'>72,365</td><td align="right" class='awrc'>117.20</td><td align="right" class='awrc'>0.97</td><td align="right" headers="perSecond Average" class='awrclb'>58.60</td><td align="right" headers="perSecond StdDev" class='awrc'>15.89</td><td align="right" headers="perSecond Min" class='awrc'>47.36</td><td align="right" headers="perSecond Max" class='awrcrb'>69.84</td></tr>
<tr><td scope="row" class='awrnc'>redo write broadcast ack count</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>redo write broadcast ack time</td><td align="right" class='awrc'>595,971</td><td align="right" class='awrc'>965.21</td><td align="right" class='awrc'>7.96</td><td align="right" headers="perSecond Average" class='awrclb'>482.60</td><td align="right" headers="perSecond StdDev" class='awrc'>154.79</td><td align="right" headers="perSecond Min" class='awrc'>373.15</td><td align="right" headers="perSecond Max" class='awrcrb'>592.05</td></tr>
<tr><td scope="row" class='awrnc'>redo write finish time</td><td align="right" class='awrnc'>1,544,439,643</td><td align="right" class='awrnc'>2,501,311.30</td><td align="right" class='awrnc'>20,640.41</td><td align="right" headers="perSecond Average" class='awrnclb'>1,250,655.65</td><td align="right" headers="perSecond StdDev" class='awrnc'>615,821.16</td><td align="right" headers="perSecond Min" class='awrnc'>815,204.33</td><td align="right" headers="perSecond Max" class='awrncrb'>1,686,106.96</td></tr>
<tr><td scope="row" class='awrc'>redo write gather time</td><td align="right" class='awrc'>57,532,304</td><td align="right" class='awrc'>93,179.11</td><td align="right" class='awrc'>768.88</td><td align="right" headers="perSecond Average" class='awrclb'>46,589.55</td><td align="right" headers="perSecond StdDev" class='awrc'>63,607.80</td><td align="right" headers="perSecond Min" class='awrc'>1,612.05</td><td align="right" headers="perSecond Max" class='awrcrb'>91,567.06</td></tr>
<tr><td scope="row" class='awrnc'>redo write info find</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>redo write schedule time</td><td align="right" class='awrc'>58,380,087</td><td align="right" class='awrc'>94,552.14</td><td align="right" class='awrc'>780.21</td><td align="right" headers="perSecond Average" class='awrclb'>47,276.07</td><td align="right" headers="perSecond StdDev" class='awrc'>63,850.21</td><td align="right" headers="perSecond Min" class='awrc'>2,127.15</td><td align="right" headers="perSecond Max" class='awrcrb'>92,424.99</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (   4KB)</td><td align="right" class='awrnc'>7,865</td><td align="right" class='awrnc'>12.74</td><td align="right" class='awrnc'>0.11</td><td align="right" headers="perSecond Average" class='awrnclb'>6.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.35</td><td align="right" headers="perSecond Min" class='awrnc'>4.00</td><td align="right" headers="perSecond Max" class='awrncrb'>8.74</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (   8KB)</td><td align="right" class='awrc'>10,561</td><td align="right" class='awrc'>17.10</td><td align="right" class='awrc'>0.14</td><td align="right" headers="perSecond Average" class='awrclb'>8.55</td><td align="right" headers="perSecond StdDev" class='awrc'>1.13</td><td align="right" headers="perSecond Min" class='awrc'>7.75</td><td align="right" headers="perSecond Max" class='awrcrb'>9.35</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (  16KB)</td><td align="right" class='awrnc'>15,015</td><td align="right" class='awrnc'>24.32</td><td align="right" class='awrnc'>0.20</td><td align="right" headers="perSecond Average" class='awrnclb'>12.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.50</td><td align="right" headers="perSecond Min" class='awrnc'>11.10</td><td align="right" headers="perSecond Max" class='awrncrb'>13.22</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (  32KB)</td><td align="right" class='awrc'>12,835</td><td align="right" class='awrc'>20.79</td><td align="right" class='awrc'>0.17</td><td align="right" headers="perSecond Average" class='awrclb'>10.39</td><td align="right" headers="perSecond StdDev" class='awrc'>0.24</td><td align="right" headers="perSecond Min" class='awrc'>10.22</td><td align="right" headers="perSecond Max" class='awrcrb'>10.56</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 128KB)</td><td align="right" class='awrnc'>8,574</td><td align="right" class='awrnc'>13.89</td><td align="right" class='awrnc'>0.11</td><td align="right" headers="perSecond Average" class='awrnclb'>6.94</td><td align="right" headers="perSecond StdDev" class='awrnc'>4.64</td><td align="right" headers="perSecond Min" class='awrnc'>3.66</td><td align="right" headers="perSecond Max" class='awrncrb'>10.22</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 256KB)</td><td align="right" class='awrc'>133</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.11</td><td align="right" headers="perSecond StdDev" class='awrc'>0.12</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.19</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 512KB)</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (1024KB)</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write time</td><td align="right" class='awrnc'>154,630</td><td align="right" class='awrnc'>250.43</td><td align="right" class='awrnc'>2.07</td><td align="right" headers="perSecond Average" class='awrnclb'>125.22</td><td align="right" headers="perSecond StdDev" class='awrnc'>61.76</td><td align="right" headers="perSecond Min" class='awrnc'>81.55</td><td align="right" headers="perSecond Max" class='awrncrb'>168.88</td></tr>
<tr><td scope="row" class='awrc'>redo write time (usec)</td><td align="right" class='awrc'>1,546,308,856</td><td align="right" class='awrc'>2,504,338.65</td><td align="right" class='awrc'>20,665.40</td><td align="right" headers="perSecond Average" class='awrclb'>1,252,169.33</td><td align="right" headers="perSecond StdDev" class='awrc'>617,554.05</td><td align="right" headers="perSecond Min" class='awrc'>815,492.67</td><td align="right" headers="perSecond Max" class='awrcrb'>1,688,845.98</td></tr>
<tr><td scope="row" class='awrnc'>redo write total time</td><td align="right" class='awrnc'>1,601,706,055</td><td align="right" class='awrnc'>2,594,059.77</td><td align="right" class='awrnc'>21,405.74</td><td align="right" headers="perSecond Average" class='awrnclb'>1,297,029.88</td><td align="right" headers="perSecond StdDev" class='awrnc'>679,084.28</td><td align="right" headers="perSecond Min" class='awrnc'>816,844.78</td><td align="right" headers="perSecond Max" class='awrncrb'>1,777,214.98</td></tr>
<tr><td scope="row" class='awrc'>redo write worker delay (usec)</td><td align="right" class='awrc'>54,774,305</td><td align="right" class='awrc'>88,712.38</td><td align="right" class='awrc'>732.02</td><td align="right" headers="perSecond Average" class='awrclb'>88,712.38</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>88,712.38</td><td align="right" headers="perSecond Max" class='awrcrb'>88,712.38</td></tr>
<tr><td scope="row" class='awrnc'>redo write worker delay count</td><td align="right" class='awrnc'>30,983</td><td align="right" class='awrnc'>50.18</td><td align="right" class='awrnc'>0.41</td><td align="right" headers="perSecond Average" class='awrnclb'>50.18</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>50.18</td><td align="right" headers="perSecond Max" class='awrncrb'>50.18</td></tr>
<tr><td scope="row" class='awrc'>redo writes</td><td align="right" class='awrc'>54,996</td><td align="right" class='awrc'>89.07</td><td align="right" class='awrc'>0.73</td><td align="right" headers="perSecond Average" class='awrclb'>44.53</td><td align="right" headers="perSecond StdDev" class='awrc'>7.98</td><td align="right" headers="perSecond Min" class='awrc'>38.89</td><td align="right" headers="perSecond Max" class='awrcrb'>50.18</td></tr>
<tr><td scope="row" class='awrnc'>redo writes (group 0)</td><td align="right" class='awrnc'>15,924</td><td align="right" class='awrnc'>25.79</td><td align="right" class='awrnc'>0.21</td><td align="right" headers="perSecond Average" class='awrnclb'>25.79</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>25.79</td><td align="right" headers="perSecond Max" class='awrncrb'>25.79</td></tr>
<tr><td scope="row" class='awrc'>redo writes (group 1)</td><td align="right" class='awrc'>15,059</td><td align="right" class='awrc'>24.39</td><td align="right" class='awrc'>0.20</td><td align="right" headers="perSecond Average" class='awrclb'>24.39</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>24.39</td><td align="right" headers="perSecond Max" class='awrcrb'>24.39</td></tr>
<tr><td scope="row" class='awrnc'>redo writes adaptive all</td><td align="right" class='awrnc'>54,995</td><td align="right" class='awrnc'>89.07</td><td align="right" class='awrnc'>0.73</td><td align="right" headers="perSecond Average" class='awrnclb'>44.53</td><td align="right" headers="perSecond StdDev" class='awrnc'>7.99</td><td align="right" headers="perSecond Min" class='awrnc'>38.89</td><td align="right" headers="perSecond Max" class='awrncrb'>50.18</td></tr>
<tr><td scope="row" class='awrc'>redo writes adaptive worker</td><td align="right" class='awrc'>30,983</td><td align="right" class='awrc'>50.18</td><td align="right" class='awrc'>0.41</td><td align="right" headers="perSecond Average" class='awrclb'>50.18</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>50.18</td><td align="right" headers="perSecond Max" class='awrcrb'>50.18</td></tr>
<tr><td scope="row" class='awrnc'>rollbacks only - consistent read gets</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>rows fetched via callback</td><td align="right" class='awrc'>1,865</td><td align="right" class='awrc'>3.02</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>1.51</td><td align="right" headers="perSecond StdDev" class='awrc'>0.51</td><td align="right" headers="perSecond Min" class='awrc'>1.15</td><td align="right" headers="perSecond Max" class='awrcrb'>1.87</td></tr>
<tr><td scope="row" class='awrnc'>saved cleanout failures: callback failure</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>saved cleanouts</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile allocation bytes</td><td align="right" class='awrnc'>851,968</td><td align="right" class='awrnc'>1,379.81</td><td align="right" class='awrnc'>11.39</td><td align="right" headers="perSecond Average" class='awrnclb'>689.90</td><td align="right" headers="perSecond StdDev" class='awrnc'>225.19</td><td align="right" headers="perSecond Min" class='awrnc'>530.67</td><td align="right" headers="perSecond Max" class='awrncrb'>849.14</td></tr>
<tr><td scope="row" class='awrc'>securefile allocation chunks</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>securefile bytes non-transformed</td><td align="right" class='awrnc'>719,241</td><td align="right" class='awrnc'>1,164.85</td><td align="right" class='awrnc'>9.61</td><td align="right" headers="perSecond Average" class='awrnclb'>582.42</td><td align="right" headers="perSecond StdDev" class='awrnc'>189.21</td><td align="right" headers="perSecond Min" class='awrnc'>448.63</td><td align="right" headers="perSecond Max" class='awrncrb'>716.21</td></tr>
<tr><td scope="row" class='awrc'>securefile direct write bytes</td><td align="right" class='awrc'>851,968</td><td align="right" class='awrc'>1,379.81</td><td align="right" class='awrc'>11.39</td><td align="right" headers="perSecond Average" class='awrclb'>689.90</td><td align="right" headers="perSecond StdDev" class='awrc'>225.19</td><td align="right" headers="perSecond Min" class='awrc'>530.67</td><td align="right" headers="perSecond Max" class='awrcrb'>849.14</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct write ops</td><td align="right" class='awrnc'>39</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>securefile number of non-transformed flushes</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>segment cfs allocations</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.06</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>segment chunks allocation from dispenser</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser allocations</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>segment dispenser load empty</td><td align="right" class='awrc'>79</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.13</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.13</td><td align="right" headers="perSecond Max" class='awrcrb'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser load tasks</td><td align="right" class='awrnc'>80</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.13</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.13</td><td align="right" headers="perSecond Max" class='awrncrb'>0.13</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc ops</td><td align="right" class='awrc'>190</td><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.15</td><td align="right" headers="perSecond StdDev" class='awrc'>0.21</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.30</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc tasks</td><td align="right" class='awrnc'>184</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.30</td><td align="right" headers="perSecond Max" class='awrncrb'>0.30</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc time (ms)</td><td align="right" class='awrc'>700</td><td align="right" class='awrc'>1.13</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.57</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.52</td><td align="right" headers="perSecond Max" class='awrcrb'>0.61</td></tr>
<tr><td scope="row" class='awrnc'>session connect time</td><td align="right" class='awrnc'>652</td><td align="right" class='awrnc'>1.06</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>1.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>1.06</td><td align="right" headers="perSecond Max" class='awrncrb'>1.06</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache hits</td><td align="right" class='awrc'>599,678</td><td align="right" class='awrc'>971.21</td><td align="right" class='awrc'>8.01</td><td align="right" headers="perSecond Average" class='awrclb'>485.61</td><td align="right" headers="perSecond StdDev" class='awrc'>177.25</td><td align="right" headers="perSecond Min" class='awrc'>360.27</td><td align="right" headers="perSecond Max" class='awrcrb'>610.94</td></tr>
<tr><td scope="row" class='awrnc'>session logical reads</td><td align="right" class='awrnc'>12,488,118</td><td align="right" class='awrnc'>20,225.10</td><td align="right" class='awrnc'>166.90</td><td align="right" headers="perSecond Average" class='awrnclb'>10,112.55</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,269.31</td><td align="right" headers="perSecond Min" class='awrnc'>8,507.91</td><td align="right" headers="perSecond Max" class='awrncrb'>11,717.20</td></tr>
<tr><td scope="row" class='awrc'>shared hash latch upgrades - no wait</td><td align="right" class='awrc'>2,260,662</td><td align="right" class='awrc'>3,661.26</td><td align="right" class='awrc'>30.21</td><td align="right" headers="perSecond Average" class='awrclb'>1,830.63</td><td align="right" headers="perSecond StdDev" class='awrc'>566.12</td><td align="right" headers="perSecond Min" class='awrc'>1,430.32</td><td align="right" headers="perSecond Max" class='awrcrb'>2,230.94</td></tr>
<tr><td scope="row" class='awrnc'>shared hash latch upgrades - wait</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>shared io pool buffer get success</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>sorts (memory)</td><td align="right" class='awrnc'>914</td><td align="right" class='awrnc'>1.48</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.74</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.45</td><td align="right" headers="perSecond Min" class='awrnc'>0.42</td><td align="right" headers="perSecond Max" class='awrncrb'>1.06</td></tr>
<tr><td scope="row" class='awrc'>sorts (rows)</td><td align="right" class='awrc'>101,254</td><td align="right" class='awrc'>163.99</td><td align="right" class='awrc'>1.35</td><td align="right" headers="perSecond Average" class='awrclb'>81.99</td><td align="right" headers="perSecond StdDev" class='awrc'>51.63</td><td align="right" headers="perSecond Min" class='awrc'>45.49</td><td align="right" headers="perSecond Max" class='awrcrb'>118.50</td></tr>
<tr><td scope="row" class='awrnc'>sql area evicted</td><td align="right" class='awrnc'>69</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>sql area purged</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>summed dirty queue length</td><td align="right" class='awrnc'>5,822,369</td><td align="right" class='awrnc'>9,429.62</td><td align="right" class='awrnc'>77.81</td><td align="right" headers="perSecond Average" class='awrnclb'>4,714.81</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,397.56</td><td align="right" headers="perSecond Min" class='awrnc'>3,726.59</td><td align="right" headers="perSecond Max" class='awrncrb'>5,703.03</td></tr>
<tr><td scope="row" class='awrc'>switch current caused by our pin</td><td align="right" class='awrc'>94</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.05</td><td align="right" headers="perSecond Max" class='awrcrb'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>switch current to new buffer</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.12</td></tr>
<tr><td scope="row" class='awrc'>table fetch by rowid</td><td align="right" class='awrc'>11,597,187</td><td align="right" class='awrc'>18,782.24</td><td align="right" class='awrc'>154.99</td><td align="right" headers="perSecond Average" class='awrclb'>9,391.12</td><td align="right" headers="perSecond StdDev" class='awrc'>2,983.60</td><td align="right" headers="perSecond Min" class='awrc'>7,281.40</td><td align="right" headers="perSecond Max" class='awrcrb'>11,500.84</td></tr>
<tr><td scope="row" class='awrnc'>table fetch continued row</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>table scan blocks gotten</td><td align="right" class='awrc'>55,982</td><td align="right" class='awrc'>90.67</td><td align="right" class='awrc'>0.75</td><td align="right" headers="perSecond Average" class='awrclb'>45.33</td><td align="right" headers="perSecond StdDev" class='awrc'>52.86</td><td align="right" headers="perSecond Min" class='awrc'>7.95</td><td align="right" headers="perSecond Max" class='awrcrb'>82.71</td></tr>
<tr><td scope="row" class='awrnc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrnc'>5,584,137</td><td align="right" class='awrnc'>9,044.02</td><td align="right" class='awrnc'>74.63</td><td align="right" headers="perSecond Average" class='awrnclb'>4,522.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>5,691.44</td><td align="right" headers="perSecond Min" class='awrnc'>497.56</td><td align="right" headers="perSecond Max" class='awrncrb'>8,546.47</td></tr>
<tr><td scope="row" class='awrc'>table scan rows gotten</td><td align="right" class='awrc'>5,584,137</td><td align="right" class='awrc'>9,044.02</td><td align="right" class='awrc'>74.63</td><td align="right" headers="perSecond Average" class='awrclb'>4,522.01</td><td align="right" headers="perSecond StdDev" class='awrc'>5,691.44</td><td align="right" headers="perSecond Min" class='awrc'>497.56</td><td align="right" headers="perSecond Max" class='awrcrb'>8,546.47</td></tr>
<tr><td scope="row" class='awrnc'>table scans (short tables)</td><td align="right" class='awrnc'>22,276</td><td align="right" class='awrnc'>36.08</td><td align="right" class='awrnc'>0.30</td><td align="right" headers="perSecond Average" class='awrnclb'>18.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>24.85</td><td align="right" headers="perSecond Min" class='awrnc'>0.47</td><td align="right" headers="perSecond Max" class='awrncrb'>35.61</td></tr>
<tr><td scope="row" class='awrc'>total cf enq hold time</td><td align="right" class='awrc'>10,592</td><td align="right" class='awrc'>17.15</td><td align="right" class='awrc'>0.14</td><td align="right" headers="perSecond Average" class='awrclb'>8.58</td><td align="right" headers="perSecond StdDev" class='awrc'>2.92</td><td align="right" headers="perSecond Min" class='awrc'>6.52</td><td align="right" headers="perSecond Max" class='awrcrb'>10.64</td></tr>
<tr><td scope="row" class='awrnc'>total number of cf enq holders</td><td align="right" class='awrnc'>589</td><td align="right" class='awrnc'>0.95</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.48</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.42</td><td align="right" headers="perSecond Max" class='awrncrb'>0.53</td></tr>
<tr><td scope="row" class='awrc'>total number of times SMON posted</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>transaction tables consistent reads - undo records applied</td><td align="right" class='awrnc'>1,660,867</td><td align="right" class='awrnc'>2,689.74</td><td align="right" class='awrnc'>22.20</td><td align="right" headers="perSecond Average" class='awrnclb'>1,344.87</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,820.51</td><td align="right" headers="perSecond Min" class='awrnc'>57.58</td><td align="right" headers="perSecond Max" class='awrncrb'>2,632.17</td></tr>
<tr><td scope="row" class='awrc'>undo change vector size</td><td align="right" class='awrc'>401,228,316</td><td align="right" class='awrc'>649,810.66</td><td align="right" class='awrc'>5,362.15</td><td align="right" headers="perSecond Average" class='awrclb'>324,905.33</td><td align="right" headers="perSecond StdDev" class='awrc'>115,979.77</td><td align="right" headers="perSecond Min" class='awrc'>242,895.24</td><td align="right" headers="perSecond Max" class='awrcrb'>406,915.41</td></tr>
<tr><td scope="row" class='awrnc'>user I/O wait time</td><td align="right" class='awrnc'>1,505,116</td><td align="right" class='awrnc'>2,437.60</td><td align="right" class='awrnc'>20.11</td><td align="right" headers="perSecond Average" class='awrnclb'>1,218.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>144.45</td><td align="right" headers="perSecond Min" class='awrnc'>1,116.66</td><td align="right" headers="perSecond Max" class='awrncrb'>1,320.94</td></tr>
<tr><td scope="row" class='awrc'>user calls</td><td align="right" class='awrc'>435</td><td align="right" class='awrc'>0.70</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.35</td><td align="right" headers="perSecond StdDev" class='awrc'>0.12</td><td align="right" headers="perSecond Min" class='awrc'>0.27</td><td align="right" headers="perSecond Max" class='awrcrb'>0.44</td></tr>
<tr><td scope="row" class='awrnc'>user commits</td><td align="right" class='awrnc'>74,826</td><td align="right" class='awrnc'>121.18</td><td align="right" class='awrnc'>1.00</td><td align="right" headers="perSecond Average" class='awrnclb'>60.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>19.64</td><td align="right" headers="perSecond Min" class='awrnc'>46.70</td><td align="right" headers="perSecond Max" class='awrncrb'>74.48</td></tr>
<tr><td scope="row" class='awrc'>user logons cumulative</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>user logouts cumulative</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>workarea executions - optimal</td><td align="right" class='awrc'>987</td><td align="right" class='awrc'>1.60</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.80</td><td align="right" headers="perSecond StdDev" class='awrc'>0.39</td><td align="right" headers="perSecond Min" class='awrc'>0.52</td><td align="right" headers="perSecond Max" class='awrcrb'>1.07</td></tr>
<tr><td scope="row" class='awrnc'>write clones created in background</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>write clones created in foreground</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12072"></a>
<h3 class="awr">Global Messaging Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.06</td><td align="right" headers="perSecond Max" class='awrcrb'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>5,251,440</td><td align="right" class='awrnc'>8,505.22</td><td align="right" class='awrnc'>70.18</td><td align="right" headers="perSecond Average" class='awrnclb'>4,252.61</td><td align="right" headers="perSecond StdDev" class='awrnc'>6,001.98</td><td align="right" headers="perSecond Min" class='awrnc'>8.57</td><td align="right" headers="perSecond Max" class='awrncrb'>8,496.65</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>6,039</td><td align="right" class='awrnc'>9.78</td><td align="right" class='awrnc'>0.08</td><td align="right" headers="perSecond Average" class='awrnclb'>4.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.12</td><td align="right" headers="perSecond Min" class='awrnc'>4.81</td><td align="right" headers="perSecond Max" class='awrncrb'>4.97</td></tr>
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>13,009</td><td align="right" class='awrc'>21.07</td><td align="right" class='awrc'>0.17</td><td align="right" headers="perSecond Average" class='awrclb'>10.53</td><td align="right" headers="perSecond StdDev" class='awrc'>2.27</td><td align="right" headers="perSecond Min" class='awrc'>8.93</td><td align="right" headers="perSecond Max" class='awrcrb'>12.14</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>13,015</td><td align="right" class='awrnc'>21.08</td><td align="right" class='awrnc'>0.17</td><td align="right" headers="perSecond Average" class='awrnclb'>10.54</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.22</td><td align="right" headers="perSecond Min" class='awrnc'>8.97</td><td align="right" headers="perSecond Max" class='awrncrb'>12.11</td></tr>
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>54,733</td><td align="right" class='awrc'>88.64</td><td align="right" class='awrc'>0.73</td><td align="right" headers="perSecond Average" class='awrclb'>44.32</td><td align="right" headers="perSecond StdDev" class='awrc'>7.80</td><td align="right" headers="perSecond Min" class='awrc'>38.81</td><td align="right" headers="perSecond Max" class='awrcrb'>49.83</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>6,624</td><td align="right" class='awrnc'>10.73</td><td align="right" class='awrnc'>0.09</td><td align="right" headers="perSecond Average" class='awrnclb'>5.36</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.67</td><td align="right" headers="perSecond Min" class='awrnc'>3.48</td><td align="right" headers="perSecond Max" class='awrncrb'>7.25</td></tr>
<tr><td scope="row" class='awrc'>gcs assume no cvt</td><td align="right" class='awrc'>86,575</td><td align="right" class='awrc'>140.21</td><td align="right" class='awrc'>1.16</td><td align="right" headers="perSecond Average" class='awrclb'>70.10</td><td align="right" headers="perSecond StdDev" class='awrc'>76.01</td><td align="right" headers="perSecond Min" class='awrc'>16.35</td><td align="right" headers="perSecond Max" class='awrcrb'>123.85</td></tr>
<tr><td scope="row" class='awrnc'>gcs ast to fg</td><td align="right" class='awrnc'>708,669</td><td align="right" class='awrnc'>1,147.70</td><td align="right" class='awrnc'>9.47</td><td align="right" headers="perSecond Average" class='awrnclb'>573.85</td><td align="right" headers="perSecond StdDev" class='awrnc'>314.41</td><td align="right" headers="perSecond Min" class='awrnc'>351.53</td><td align="right" headers="perSecond Max" class='awrncrb'>796.17</td></tr>
<tr><td scope="row" class='awrc'>gcs bidless ast to lms</td><td align="right" class='awrc'>604</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.49</td><td align="right" headers="perSecond StdDev" class='awrc'>0.58</td><td align="right" headers="perSecond Min" class='awrc'>0.08</td><td align="right" headers="perSecond Max" class='awrcrb'>0.90</td></tr>
<tr><td scope="row" class='awrnc'>gcs blocked converts</td><td align="right" class='awrnc'>90,645</td><td align="right" class='awrnc'>146.80</td><td align="right" class='awrnc'>1.21</td><td align="right" headers="perSecond Average" class='awrnclb'>73.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>15.91</td><td align="right" headers="perSecond Min" class='awrnc'>62.15</td><td align="right" headers="perSecond Max" class='awrncrb'>84.65</td></tr>
<tr><td scope="row" class='awrc'>gcs blocked cr converts</td><td align="right" class='awrc'>36,683</td><td align="right" class='awrc'>59.41</td><td align="right" class='awrc'>0.49</td><td align="right" headers="perSecond Average" class='awrclb'>29.70</td><td align="right" headers="perSecond StdDev" class='awrc'>38.25</td><td align="right" headers="perSecond Min" class='awrc'>2.66</td><td align="right" headers="perSecond Max" class='awrcrb'>56.75</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible basts</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (global)</td><td align="right" class='awrc'>37</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (local)</td><td align="right" class='awrnc'>93,664</td><td align="right" class='awrnc'>151.69</td><td align="right" class='awrnc'>1.25</td><td align="right" headers="perSecond Average" class='awrnclb'>75.84</td><td align="right" headers="perSecond StdDev" class='awrnc'>48.79</td><td align="right" headers="perSecond Min" class='awrnc'>41.34</td><td align="right" headers="perSecond Max" class='awrncrb'>110.35</td></tr>
<tr><td scope="row" class='awrc'>gcs dbwr flush pi msgs</td><td align="right" class='awrc'>433,296</td><td align="right" class='awrc'>701.75</td><td align="right" class='awrc'>5.79</td><td align="right" headers="perSecond Average" class='awrclb'>350.88</td><td align="right" headers="perSecond StdDev" class='awrc'>228.44</td><td align="right" headers="perSecond Min" class='awrc'>189.34</td><td align="right" headers="perSecond Max" class='awrcrb'>512.41</td></tr>
<tr><td scope="row" class='awrnc'>gcs dbwr write request msgs</td><td align="right" class='awrnc'>168</td><td align="right" class='awrnc'>0.27</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.10</td><td align="right" headers="perSecond Min" class='awrnc'>0.07</td><td align="right" headers="perSecond Max" class='awrncrb'>0.20</td></tr>
<tr><td scope="row" class='awrc'>gcs force cr grant</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gcs grant ast</td><td align="right" class='awrnc'>709,273</td><td align="right" class='awrnc'>1,148.68</td><td align="right" class='awrnc'>9.48</td><td align="right" headers="perSecond Average" class='awrnclb'>574.34</td><td align="right" headers="perSecond StdDev" class='awrnc'>314.99</td><td align="right" headers="perSecond Min" class='awrnc'>351.61</td><td align="right" headers="perSecond Max" class='awrncrb'>797.07</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate (compatible) converts</td><td align="right" class='awrc'>19,765</td><td align="right" class='awrc'>32.01</td><td align="right" class='awrc'>0.26</td><td align="right" headers="perSecond Average" class='awrclb'>16.01</td><td align="right" headers="perSecond StdDev" class='awrc'>2.91</td><td align="right" headers="perSecond Min" class='awrc'>13.95</td><td align="right" headers="perSecond Max" class='awrcrb'>18.06</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate (null) converts</td><td align="right" class='awrnc'>545,109</td><td align="right" class='awrnc'>882.82</td><td align="right" class='awrnc'>7.29</td><td align="right" headers="perSecond Average" class='awrnclb'>441.41</td><td align="right" headers="perSecond StdDev" class='awrnc'>164.39</td><td align="right" headers="perSecond Min" class='awrnc'>325.17</td><td align="right" headers="perSecond Max" class='awrncrb'>557.65</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrc'>4,049</td><td align="right" class='awrc'>6.56</td><td align="right" class='awrc'>0.05</td><td align="right" headers="perSecond Average" class='awrclb'>3.28</td><td align="right" headers="perSecond StdDev" class='awrc'>2.56</td><td align="right" headers="perSecond Min" class='awrc'>1.47</td><td align="right" headers="perSecond Max" class='awrcrb'>5.09</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate cr (null) converts</td><td align="right" class='awrnc'>3,081,270</td><td align="right" class='awrnc'>4,990.19</td><td align="right" class='awrnc'>41.18</td><td align="right" headers="perSecond Average" class='awrnclb'>2,495.09</td><td align="right" headers="perSecond StdDev" class='awrnc'>921.67</td><td align="right" headers="perSecond Min" class='awrnc'>1,843.38</td><td align="right" headers="perSecond Max" class='awrncrb'>3,146.81</td></tr>
<tr><td scope="row" class='awrc'>gcs lms write request msgs</td><td align="right" class='awrc'>123</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrc'>0.11</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.18</td></tr>
<tr><td scope="row" class='awrnc'>gcs msgs process time(ms)</td><td align="right" class='awrnc'>192,897</td><td align="right" class='awrnc'>312.40</td><td align="right" class='awrnc'>2.58</td><td align="right" headers="perSecond Average" class='awrnclb'>156.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>49.07</td><td align="right" headers="perSecond Min" class='awrnc'>121.51</td><td align="right" headers="perSecond Max" class='awrncrb'>190.90</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs received</td><td align="right" class='awrc'>7,946,538</td><td align="right" class='awrc'>12,869.62</td><td align="right" class='awrc'>106.20</td><td align="right" headers="perSecond Average" class='awrclb'>6,434.81</td><td align="right" headers="perSecond StdDev" class='awrc'>1,931.74</td><td align="right" headers="perSecond Min" class='awrc'>5,068.86</td><td align="right" headers="perSecond Max" class='awrcrb'>7,800.76</td></tr>
<tr><td scope="row" class='awrnc'>gcs new served by master</td><td align="right" class='awrnc'>322</td><td align="right" class='awrnc'>0.52</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.26</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.11</td><td align="right" headers="perSecond Min" class='awrnc'>0.18</td><td align="right" headers="perSecond Max" class='awrncrb'>0.34</td></tr>
<tr><td scope="row" class='awrc'>gcs out-of-order msgs</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gcs pings refused</td><td align="right" class='awrnc'>15,603</td><td align="right" class='awrnc'>25.27</td><td align="right" class='awrnc'>0.21</td><td align="right" headers="perSecond Average" class='awrnclb'>12.63</td><td align="right" headers="perSecond StdDev" class='awrnc'>15.84</td><td align="right" headers="perSecond Min" class='awrnc'>1.43</td><td align="right" headers="perSecond Max" class='awrncrb'>23.84</td></tr>
<tr><td scope="row" class='awrc'>gcs queued converts</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant immediate</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gcs side channel msgs actual</td><td align="right" class='awrc'>8,619</td><td align="right" class='awrc'>13.96</td><td align="right" class='awrc'>0.12</td><td align="right" headers="perSecond Average" class='awrclb'>6.98</td><td align="right" headers="perSecond StdDev" class='awrc'>0.22</td><td align="right" headers="perSecond Min" class='awrc'>6.82</td><td align="right" headers="perSecond Max" class='awrcrb'>7.14</td></tr>
<tr><td scope="row" class='awrnc'>gcs side channel msgs logical</td><td align="right" class='awrnc'>855,046</td><td align="right" class='awrnc'>1,384.80</td><td align="right" class='awrnc'>11.43</td><td align="right" headers="perSecond Average" class='awrnclb'>692.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>438.54</td><td align="right" headers="perSecond Min" class='awrnc'>382.30</td><td align="right" headers="perSecond Max" class='awrncrb'>1,002.50</td></tr>
<tr><td scope="row" class='awrc'>gcs stale cr</td><td align="right" class='awrc'>140</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.11</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>gcs write notification msgs</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs writes refused</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges msgs process time(ms)</td><td align="right" class='awrnc'>5,378</td><td align="right" class='awrnc'>8.71</td><td align="right" class='awrnc'>0.07</td><td align="right" headers="perSecond Average" class='awrnclb'>4.35</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.50</td><td align="right" headers="perSecond Min" class='awrnc'>4.00</td><td align="right" headers="perSecond Max" class='awrncrb'>4.71</td></tr>
<tr><td scope="row" class='awrc'>ges msgs received</td><td align="right" class='awrc'>228,773</td><td align="right" class='awrc'>370.51</td><td align="right" class='awrc'>3.06</td><td align="right" headers="perSecond Average" class='awrclb'>185.25</td><td align="right" headers="perSecond StdDev" class='awrc'>0.87</td><td align="right" headers="perSecond Min" class='awrc'>184.64</td><td align="right" headers="perSecond Max" class='awrcrb'>185.87</td></tr>
<tr><td scope="row" class='awrnc'>implicit batch messages received</td><td align="right" class='awrnc'>123,753</td><td align="right" class='awrnc'>200.42</td><td align="right" class='awrnc'>1.65</td><td align="right" headers="perSecond Average" class='awrnclb'>100.21</td><td align="right" headers="perSecond StdDev" class='awrnc'>53.31</td><td align="right" headers="perSecond Min" class='awrnc'>62.52</td><td align="right" headers="perSecond Max" class='awrncrb'>137.90</td></tr>
<tr><td scope="row" class='awrc'>implicit batch messages sent</td><td align="right" class='awrc'>123,717</td><td align="right" class='awrc'>200.37</td><td align="right" class='awrc'>1.65</td><td align="right" headers="perSecond Average" class='awrclb'>100.18</td><td align="right" headers="perSecond StdDev" class='awrc'>53.23</td><td align="right" headers="perSecond Min" class='awrc'>62.54</td><td align="right" headers="perSecond Max" class='awrcrb'>137.82</td></tr>
<tr><td scope="row" class='awrnc'>messages flow controlled</td><td align="right" class='awrnc'>21,264</td><td align="right" class='awrnc'>34.44</td><td align="right" class='awrnc'>0.28</td><td align="right" headers="perSecond Average" class='awrnclb'>17.22</td><td align="right" headers="perSecond StdDev" class='awrnc'>17.55</td><td align="right" headers="perSecond Min" class='awrnc'>4.81</td><td align="right" headers="perSecond Max" class='awrncrb'>29.63</td></tr>
<tr><td scope="row" class='awrc'>messages queue sent actual</td><td align="right" class='awrc'>851,582</td><td align="right" class='awrc'>1,379.17</td><td align="right" class='awrc'>11.38</td><td align="right" headers="perSecond Average" class='awrclb'>689.58</td><td align="right" headers="perSecond StdDev" class='awrc'>13.34</td><td align="right" headers="perSecond Min" class='awrc'>680.15</td><td align="right" headers="perSecond Max" class='awrcrb'>699.02</td></tr>
<tr><td scope="row" class='awrnc'>messages queue sent logical</td><td align="right" class='awrnc'>825,677</td><td align="right" class='awrnc'>1,337.23</td><td align="right" class='awrnc'>11.03</td><td align="right" headers="perSecond Average" class='awrnclb'>668.62</td><td align="right" headers="perSecond StdDev" class='awrnc'>293.64</td><td align="right" headers="perSecond Min" class='awrnc'>460.98</td><td align="right" headers="perSecond Max" class='awrncrb'>876.25</td></tr>
<tr><td scope="row" class='awrc'>messages received actual</td><td align="right" class='awrc'>2,314,608</td><td align="right" class='awrc'>3,748.57</td><td align="right" class='awrc'>30.93</td><td align="right" headers="perSecond Average" class='awrclb'>1,874.29</td><td align="right" headers="perSecond StdDev" class='awrc'>459.95</td><td align="right" headers="perSecond Min" class='awrc'>1,549.05</td><td align="right" headers="perSecond Max" class='awrcrb'>2,199.52</td></tr>
<tr><td scope="row" class='awrnc'>messages received logical</td><td align="right" class='awrnc'>8,175,311</td><td align="right" class='awrnc'>13,240.13</td><td align="right" class='awrnc'>109.26</td><td align="right" headers="perSecond Average" class='awrnclb'>6,620.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,930.88</td><td align="right" headers="perSecond Min" class='awrnc'>5,254.73</td><td align="right" headers="perSecond Max" class='awrncrb'>7,985.40</td></tr>
<tr><td scope="row" class='awrc'>messages sent directly</td><td align="right" class='awrc'>929,802</td><td align="right" class='awrc'>1,505.87</td><td align="right" class='awrc'>12.43</td><td align="right" headers="perSecond Average" class='awrclb'>752.93</td><td align="right" headers="perSecond StdDev" class='awrc'>345.34</td><td align="right" headers="perSecond Min" class='awrc'>508.74</td><td align="right" headers="perSecond Max" class='awrcrb'>997.13</td></tr>
<tr><td scope="row" class='awrnc'>messages sent indirectly</td><td align="right" class='awrnc'>3,309,311</td><td align="right" class='awrnc'>5,359.63</td><td align="right" class='awrnc'>44.23</td><td align="right" headers="perSecond Average" class='awrnclb'>2,679.82</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,484.75</td><td align="right" headers="perSecond Min" class='awrnc'>1,629.94</td><td align="right" headers="perSecond Max" class='awrncrb'>3,729.69</td></tr>
<tr><td scope="row" class='awrc'>messages sent not implicit batched</td><td align="right" class='awrc'>57,125</td><td align="right" class='awrc'>92.52</td><td align="right" class='awrc'>0.76</td><td align="right" headers="perSecond Average" class='awrclb'>46.26</td><td align="right" headers="perSecond StdDev" class='awrc'>45.88</td><td align="right" headers="perSecond Min" class='awrc'>13.82</td><td align="right" headers="perSecond Max" class='awrcrb'>78.70</td></tr>
<tr><td scope="row" class='awrnc'>messages sent pbatched</td><td align="right" class='awrnc'>6,646,030</td><td align="right" class='awrnc'>10,763.57</td><td align="right" class='awrnc'>88.82</td><td align="right" headers="perSecond Average" class='awrnclb'>5,381.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,328.46</td><td align="right" headers="perSecond Min" class='awrnc'>4,442.42</td><td align="right" headers="perSecond Max" class='awrncrb'>6,321.15</td></tr>
<tr><td scope="row" class='awrc'>msgs received kernel queue time (ns)</td><td align="right" class='awrc'>228,380,379,683</td><td align="right" class='awrc'>369,866,706.19</td><td align="right" class='awrc'>3,052,152.72</td><td align="right" headers="perSecond Average" class='awrclb'>184,933,353.09</td><td align="right" headers="perSecond StdDev" class='awrc'>76,345,365.74</td><td align="right" headers="perSecond Min" class='awrc'>130,949,027.27</td><td align="right" headers="perSecond Max" class='awrcrb'>238,917,678.92</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queue time (ms)</td><td align="right" class='awrnc'>114,896</td><td align="right" class='awrnc'>186.08</td><td align="right" class='awrnc'>1.54</td><td align="right" headers="perSecond Average" class='awrnclb'>93.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>28.77</td><td align="right" headers="perSecond Min" class='awrnc'>72.70</td><td align="right" headers="perSecond Max" class='awrncrb'>113.38</td></tr>
<tr><td scope="row" class='awrc'>msgs received queued</td><td align="right" class='awrc'>8,175,311</td><td align="right" class='awrc'>13,240.13</td><td align="right" class='awrc'>109.26</td><td align="right" headers="perSecond Average" class='awrclb'>6,620.06</td><td align="right" headers="perSecond StdDev" class='awrc'>1,930.88</td><td align="right" headers="perSecond Min" class='awrc'>5,254.73</td><td align="right" headers="perSecond Max" class='awrcrb'>7,985.40</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time (ms)</td><td align="right" class='awrnc'>791,585</td><td align="right" class='awrnc'>1,282.02</td><td align="right" class='awrnc'>10.58</td><td align="right" headers="perSecond Average" class='awrnclb'>641.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>314.87</td><td align="right" headers="perSecond Min" class='awrnc'>418.36</td><td align="right" headers="perSecond Max" class='awrncrb'>863.66</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrc'>2,845,257</td><td align="right" class='awrc'>4,608.05</td><td align="right" class='awrc'>38.02</td><td align="right" headers="perSecond Average" class='awrclb'>2,304.03</td><td align="right" headers="perSecond StdDev" class='awrc'>962.52</td><td align="right" headers="perSecond Min" class='awrc'>1,623.42</td><td align="right" headers="perSecond Max" class='awrcrb'>2,984.63</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued</td><td align="right" class='awrnc'>1,209,212</td><td align="right" class='awrnc'>1,958.37</td><td align="right" class='awrnc'>16.16</td><td align="right" headers="perSecond Average" class='awrnclb'>979.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>185.88</td><td align="right" headers="perSecond Min" class='awrnc'>847.75</td><td align="right" headers="perSecond Max" class='awrncrb'>1,110.62</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued on ksxp</td><td align="right" class='awrc'>2,313,028</td><td align="right" class='awrc'>3,746.06</td><td align="right" class='awrc'>30.91</td><td align="right" headers="perSecond Average" class='awrclb'>1,873.03</td><td align="right" headers="perSecond StdDev" class='awrc'>453.06</td><td align="right" headers="perSecond Min" class='awrc'>1,552.67</td><td align="right" headers="perSecond Max" class='awrcrb'>2,193.39</td></tr>
<tr><td scope="row" class='awrnc'>number of directly freed master res</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.07</td><td align="right" headers="perSecond Max" class='awrncrb'>0.07</td></tr>
<tr><td scope="row" class='awrc'>process batch messages received</td><td align="right" class='awrc'>1,075,661</td><td align="right" class='awrc'>1,742.07</td><td align="right" class='awrc'>14.38</td><td align="right" headers="perSecond Average" class='awrclb'>871.04</td><td align="right" headers="perSecond StdDev" class='awrc'>48.72</td><td align="right" headers="perSecond Min" class='awrc'>836.59</td><td align="right" headers="perSecond Max" class='awrcrb'>905.48</td></tr>
<tr><td scope="row" class='awrnc'>process batch messages sent</td><td align="right" class='awrnc'>1,145,367</td><td align="right" class='awrnc'>1,854.97</td><td align="right" class='awrnc'>15.31</td><td align="right" headers="perSecond Average" class='awrnclb'>927.48</td><td align="right" headers="perSecond StdDev" class='awrnc'>70.69</td><td align="right" headers="perSecond Min" class='awrnc'>877.50</td><td align="right" headers="perSecond Max" class='awrncrb'>977.47</td></tr>
<tr><td scope="row" class='awrc'>receiver cycle time</td><td align="right" class='awrc'>714,134</td><td align="right" class='awrc'>1,156.56</td><td align="right" class='awrc'>9.54</td><td align="right" headers="perSecond Average" class='awrclb'>578.28</td><td align="right" headers="perSecond StdDev" class='awrc'>81.53</td><td align="right" headers="perSecond Min" class='awrc'>520.63</td><td align="right" headers="perSecond Max" class='awrcrb'>635.93</td></tr>
<tr><td scope="row" class='awrnc'>receiver loop count</td><td align="right" class='awrnc'>2,813,141</td><td align="right" class='awrnc'>4,555.98</td><td align="right" class='awrnc'>37.60</td><td align="right" headers="perSecond Average" class='awrnclb'>2,277.99</td><td align="right" headers="perSecond StdDev" class='awrnc'>218.67</td><td align="right" headers="perSecond Min" class='awrnc'>2,123.37</td><td align="right" headers="perSecond Max" class='awrncrb'>2,432.61</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12073"></a>
<h3 class="awr">System Statistics (Absolute Values)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Absolute Values)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Sessions">Sessions</th>
<th class="awrbg" colspan=" 2" id="OpenCursors">Open Cursors</th>
<th class="awrbg" colspan=" 2" id="SessionCachedCursors">Session Cached Cursors</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sessions Begin" class='awrclb'>108</td><td align="right" headers="Sessions End" class='awrc'>90</td><td align="right" headers="OpenCursors Begin" class='awrclb'>227</td><td align="right" headers="OpenCursors End" class='awrc'>130</td><td align="right" headers="SessionCachedCursors Begin" class='awrclb'>11,166</td><td align="right" headers="SessionCachedCursors End" class='awrcrb'>11,079</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sessions Begin" class='awrnclb'>104</td><td align="right" headers="Sessions End" class='awrnc'>92</td><td align="right" headers="OpenCursors Begin" class='awrnclb'>165</td><td align="right" headers="OpenCursors End" class='awrnc'>110</td><td align="right" headers="SessionCachedCursors Begin" class='awrnclb'>9,067</td><td align="right" headers="SessionCachedCursors End" class='awrncrb'>9,052</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>212</td><td align="right" class='awrct'>182</td><td align="right" class='awrclbt'>392</td><td align="right" class='awrct'>240</td><td align="right" class='awrclbt'>20,233</td><td align="right" class='awrcrbt'>20,131</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>106</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnclb'>196</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnclb'>10,117</td><td align="right" class='awrncrb'>10,066</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>3</td><td align="right" class='awrc'>1</td><td align="right" class='awrclb'>44</td><td align="right" class='awrc'>14</td><td align="right" class='awrclb'>1,484</td><td align="right" class='awrcrb'>1,433</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="630"></a>
<h2 class="awr">
I/O Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12097">IO Profile (Global)</a></li>
<li class="awr"><a class="awr" href="#12076">IOStat by Function</a></li>
<li class="awr"><a class="awr" href="#12077">IOStat by File Type</a></li>
<li class="awr"><a class="awr" href="#12070">Segment Statistics (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12097"></a>
<h3 class="awr">IO Profile (Global)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IO Profile (Global)"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Read+Write/s</th><th class="awrbg" scope="col">Reads/s</th><th class="awrbg" scope="col">Writes/s</th></tr>
<tr><td class='awrc'>Total Requests</td><td align="right" class='awrc'>13,359.19</td><td align="right" class='awrc'>11,393.63</td><td align="right" class='awrc'>1,965.56</td></tr>
<tr><td class='awrnc'>Database Requests</td><td align="right" class='awrnc'>13,104.42</td><td align="right" class='awrnc'>11,376.93</td><td align="right" class='awrnc'>1,727.49</td></tr>
<tr><td class='awrc'>Optimized Requests</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo Requests</td><td align="right" class='awrnc'>89.06</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>89.06</td></tr>
<tr><td class='awrc'>Total (MB)</td><td align="right" class='awrc'>109.78</td><td align="right" class='awrc'>92.02</td><td align="right" class='awrc'>17.76</td></tr>
<tr><td class='awrnc'>Database (MB)</td><td align="right" class='awrnc'>103.10</td><td align="right" class='awrnc'>88.89</td><td align="right" class='awrnc'>14.22</td></tr>
<tr><td class='awrc'>Optimized Total (MB)</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo (MB)</td><td align="right" class='awrnc'>1.51</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1.51</td></tr>
<tr><td class='awrc'>Database (blocks)</td><td align="right" class='awrc'>13,197.06</td><td align="right" class='awrc'>11,377.46</td><td align="right" class='awrc'>1,819.60</td></tr>
<tr><td class='awrnc'>Via Buffer Cache (blocks)</td><td align="right" class='awrnc'>13,196.56</td><td align="right" class='awrnc'>11,377.46</td><td align="right" class='awrnc'>1,819.10</td></tr>
<tr><td class='awrc'>Direct (blocks)</td><td align="right" class='awrc'>0.51</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.51</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12076"></a>
<h3 class="awr">IOStat by Function</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<td>&#160;</td><td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>8,203,221</td><td align="right" headers="Requests IOs/s" class='awrc'>13,284.78</td><td align="right" headers="Requests Reads/s" class='awrc'>11,327.93</td><td align="right" headers="Requests Writes/s" class='awrc'>1,956.85</td><td align="right" headers="MB Total" class='awrclb'>67,409</td><td align="right" headers="MB IOMB/s" class='awrc'>109.17</td><td align="right" headers="MB ReadMB/s" class='awrc'>91.51</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>17.66</td><td align="right" class='awrc'>2.3M</td><td align="right" class='awrc'>7.08ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrnclb'>6,984,571</td><td align="right" headers="Requests IOs/s" class='awrnc'>11,311.23</td><td align="right" headers="Requests Reads/s" class='awrnc'>11,311.23</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>54,571</td><td align="right" headers="MB IOMB/s" class='awrnc'>88.38</td><td align="right" headers="MB ReadMB/s" class='awrnc'>88.38</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>2.3M</td><td align="right" class='awrnc'>6.62ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>1,062,299</td><td align="right" headers="Requests IOs/s" class='awrc'>1,720.35</td><td align="right" headers="Requests Reads/s" class='awrc'>0.80</td><td align="right" headers="Requests Writes/s" class='awrc'>1,719.55</td><td align="right" headers="MB Total" class='awrclb'>8,732</td><td align="right" headers="MB IOMB/s" class='awrc'>14.14</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.01</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>14.13</td><td align="right" class='awrc'>492</td><td align="right" class='awrc'>271.77us</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>11,808</td><td align="right" headers="Requests IOs/s" class='awrnc'>19.12</td><td align="right" headers="Requests Reads/s" class='awrnc'>15.76</td><td align="right" headers="Requests Writes/s" class='awrnc'>3.36</td><td align="right" headers="MB Total" class='awrnclb'>2,155</td><td align="right" headers="MB IOMB/s" class='awrnc'>3.49</td><td align="right" headers="MB ReadMB/s" class='awrnc'>3.12</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.37</td><td align="right" class='awrnc'>7079</td><td align="right" class='awrnc'>2.73ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>LGWR</td><td align="right" headers="Requests Total" class='awrclb'>144,426</td><td align="right" headers="Requests IOs/s" class='awrc'>233.89</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>233.89</td><td align="right" headers="MB Total" class='awrclb'>1,950</td><td align="right" headers="MB IOMB/s" class='awrc'>3.16</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>3.16</td><td align="right" class='awrc'>54.8K</td><td align="right" class='awrc'>26.98ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrnclb'>112</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.18</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.13</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.05</td><td align="right" headers="MB Total" class='awrnclb'>1</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>65</td><td align="right" class='awrnc'>261.54us</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Streams AQ</td><td align="right" headers="Requests Total" class='awrclb'>5</td><td align="right" headers="Requests IOs/s" class='awrc'>0.01</td><td align="right" headers="Requests Reads/s" class='awrc'>0.01</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>0</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>600.00us</td></tr>
<tr><td align="right" scope="row" class='awrnct'>1</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>4,986,585</td><td align="right" headers="Requests IOs/s" class='awrnct'>8,075.57</td><td align="right" headers="Requests Reads/s" class='awrnct'>6,850.52</td><td align="right" headers="Requests Writes/s" class='awrnct'>1,225.06</td><td align="right" headers="MB Total" class='awrnclbt'>40,659</td><td align="right" headers="MB IOMB/s" class='awrnct'>65.85</td><td align="right" headers="MB ReadMB/s" class='awrnct'>54.62</td><td align="right" headers="MB WriteMB/s" class='awrncrbt'>11.22</td><td align="right" class='awrnct'>1.4M</td><td align="right" class='awrnct'>6.46ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrclb'>4,225,024</td><td align="right" headers="Requests IOs/s" class='awrc'>6,842.25</td><td align="right" headers="Requests Reads/s" class='awrc'>6,842.25</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>33,011</td><td align="right" headers="MB IOMB/s" class='awrc'>53.46</td><td align="right" headers="MB ReadMB/s" class='awrc'>53.46</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>1.4M</td><td align="right" class='awrc'>5.91ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>DBWR</td><td align="right" headers="Requests Total" class='awrnclb'>669,094</td><td align="right" headers="Requests IOs/s" class='awrnc'>1,083.57</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.40</td><td align="right" headers="Requests Writes/s" class='awrnc'>1,083.17</td><td align="right" headers="MB Total" class='awrnclb'>5,491</td><td align="right" headers="MB IOMB/s" class='awrnc'>8.89</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.01</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>8.89</td><td align="right" class='awrnc'>246</td><td align="right" class='awrnc'>253.59us</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>LGWR</td><td align="right" headers="Requests Total" class='awrclb'>86,090</td><td align="right" headers="Requests IOs/s" class='awrc'>139.42</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>139.42</td><td align="right" headers="MB Total" class='awrclb'>1,220</td><td align="right" headers="MB IOMB/s" class='awrc'>1.98</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>1.98</td><td align="right" class='awrc'>30.9K</td><td align="right" class='awrc'>31.65ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>6,351</td><td align="right" headers="Requests IOs/s" class='awrnc'>10.29</td><td align="right" headers="Requests Reads/s" class='awrnc'>7.86</td><td align="right" headers="Requests Writes/s" class='awrnc'>2.43</td><td align="right" headers="MB Total" class='awrnclb'>937</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.52</td><td align="right" headers="MB ReadMB/s" class='awrnc'>1.16</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.36</td><td align="right" class='awrnc'>3934</td><td align="right" class='awrnc'>3.18ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrclb'>22</td><td align="right" headers="Requests IOs/s" class='awrc'>0.04</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>0.04</td><td align="right" headers="MB Total" class='awrclb'>0</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Streams AQ</td><td align="right" headers="Requests Total" class='awrnclb'>4</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.01</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.01</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>0</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>750.00us</td></tr>
<tr><td align="right" scope="row" class='awrct'>2</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>3,216,636</td><td align="right" headers="Requests IOs/s" class='awrct'>5,209.21</td><td align="right" headers="Requests Reads/s" class='awrct'>4,477.42</td><td align="right" headers="Requests Writes/s" class='awrct'>731.80</td><td align="right" headers="MB Total" class='awrclbt'>26,750</td><td align="right" headers="MB IOMB/s" class='awrct'>43.32</td><td align="right" headers="MB ReadMB/s" class='awrct'>36.88</td><td align="right" headers="MB WriteMB/s" class='awrcrbt'>6.44</td><td align="right" class='awrct'>921.5K</td><td align="right" class='awrct'>8.03ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrnclb'>2,759,547</td><td align="right" headers="Requests IOs/s" class='awrnc'>4,468.97</td><td align="right" headers="Requests Reads/s" class='awrnc'>4,468.97</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>21,560</td><td align="right" headers="MB IOMB/s" class='awrnc'>34.92</td><td align="right" headers="MB ReadMB/s" class='awrnc'>34.92</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>894.1K</td><td align="right" class='awrnc'>7.70ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>393,205</td><td align="right" headers="Requests IOs/s" class='awrc'>636.78</td><td align="right" headers="Requests Reads/s" class='awrc'>0.40</td><td align="right" headers="Requests Writes/s" class='awrc'>636.38</td><td align="right" headers="MB Total" class='awrclb'>3,241</td><td align="right" headers="MB IOMB/s" class='awrc'>5.25</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.01</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>5.24</td><td align="right" class='awrc'>246</td><td align="right" class='awrc'>289.95us</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>5,457</td><td align="right" headers="Requests IOs/s" class='awrnc'>8.84</td><td align="right" headers="Requests Reads/s" class='awrnc'>7.91</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.93</td><td align="right" headers="MB Total" class='awrnclb'>1,218</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.97</td><td align="right" headers="MB ReadMB/s" class='awrnc'>1.96</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.01</td><td align="right" class='awrnc'>3145</td><td align="right" class='awrnc'>2.17ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>LGWR</td><td align="right" headers="Requests Total" class='awrclb'>58,336</td><td align="right" headers="Requests IOs/s" class='awrc'>94.47</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>94.47</td><td align="right" headers="MB Total" class='awrclb'>730</td><td align="right" headers="MB IOMB/s" class='awrc'>1.18</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>1.18</td><td align="right" class='awrc'>23.9K</td><td align="right" class='awrc'>20.93ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrnclb'>90</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.15</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.13</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.01</td><td align="right" headers="MB Total" class='awrnclb'>1</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>65</td><td align="right" class='awrnc'>261.54us</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Streams AQ</td><td align="right" headers="Requests Total" class='awrclb'>1</td><td align="right" headers="Requests IOs/s" class='awrc'>0.00</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>0</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>.00ns</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12077"></a>
<h3 class="awr">IOStat by File Type</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by File Type"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<th class="awrbg" colspan=" 2" id="ServiceTime">Service Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col" id="Small|Read">Small Read</th><th class="awrbg" scope="col" id="Large|Read">Large Read</th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>8,203,443</td><td align="right" headers="Requests IOs/s" class='awrc'>13,285.14</td><td align="right" headers="Requests Reads/s" class='awrc'>11,328.72</td><td align="right" headers="Requests Writes/s" class='awrc'>1,956.42</td><td align="right" headers="MB Total" class='awrclb'>67,205</td><td align="right" headers="MB IOMB/s" class='awrc'>108.84</td><td align="right" headers="MB ReadMB/s" class='awrc'>91.51</td><td align="right" headers="MB WriteMB/s" class='awrc'>17.33</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>1.73ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1524.10ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Data File</td><td align="right" headers="Requests Total" class='awrnclb'>8,047,013</td><td align="right" headers="Requests IOs/s" class='awrnc'>13,031.81</td><td align="right" headers="Requests Reads/s" class='awrnc'>11,312.09</td><td align="right" headers="Requests Writes/s" class='awrnc'>1,719.72</td><td align="right" headers="MB Total" class='awrnclb'>63,297</td><td align="right" headers="MB IOMB/s" class='awrnc'>102.51</td><td align="right" headers="MB ReadMB/s" class='awrnc'>88.38</td><td align="right" headers="MB WriteMB/s" class='awrnc'>14.13</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>1.73ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>146,635</td><td align="right" headers="Requests IOs/s" class='awrc'>237.47</td><td align="right" headers="Requests Reads/s" class='awrc'>3.61</td><td align="right" headers="Requests Writes/s" class='awrc'>233.86</td><td align="right" headers="MB Total" class='awrclb'>3,756</td><td align="right" headers="MB IOMB/s" class='awrc'>6.08</td><td align="right" headers="MB ReadMB/s" class='awrc'>2.93</td><td align="right" headers="MB WriteMB/s" class='awrc'>3.16</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>197.47us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1524.10ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>9,445</td><td align="right" headers="Requests IOs/s" class='awrnc'>15.30</td><td align="right" headers="Requests Reads/s" class='awrnc'>12.94</td><td align="right" headers="Requests Writes/s" class='awrnc'>2.36</td><td align="right" headers="MB Total" class='awrnclb'>148</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.24</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.20</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.04</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>66.34us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Temp File</td><td align="right" headers="Requests Total" class='awrclb'>104</td><td align="right" headers="Requests IOs/s" class='awrc'>0.17</td><td align="right" headers="Requests Reads/s" class='awrc'>0.08</td><td align="right" headers="Requests Writes/s" class='awrc'>0.09</td><td align="right" headers="MB Total" class='awrclb'>2</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>.00ns</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Other</td><td align="right" headers="Requests Total" class='awrnclb'>246</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.40</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.40</td><td align="right" headers="MB Total" class='awrnclb'>2</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>&#160;</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>1</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>4,986,775</td><td align="right" headers="Requests IOs/s" class='awrct'>8,075.88</td><td align="right" headers="Requests Reads/s" class='awrct'>6,851.25</td><td align="right" headers="Requests Writes/s" class='awrct'>1,224.63</td><td align="right" headers="MB Total" class='awrclbt'>40,457</td><td align="right" headers="MB IOMB/s" class='awrct'>65.52</td><td align="right" headers="MB ReadMB/s" class='awrct'>54.63</td><td align="right" headers="MB WriteMB/s" class='awrct'>10.89</td><td align="right" headers="ServiceTime Small|Read" class='awrclbt'>1.53ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrbt'>1351.66ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Data File</td><td align="right" headers="Requests Total" class='awrnclb'>4,894,451</td><td align="right" headers="Requests IOs/s" class='awrnc'>7,926.36</td><td align="right" headers="Requests Reads/s" class='awrnc'>6,843.05</td><td align="right" headers="Requests Writes/s" class='awrnc'>1,083.32</td><td align="right" headers="MB Total" class='awrnclb'>38,500</td><td align="right" headers="MB IOMB/s" class='awrnc'>62.35</td><td align="right" headers="MB ReadMB/s" class='awrnc'>53.46</td><td align="right" headers="MB WriteMB/s" class='awrnc'>8.89</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>1.54ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>86,883</td><td align="right" headers="Requests IOs/s" class='awrc'>140.70</td><td align="right" headers="Requests Reads/s" class='awrc'>1.31</td><td align="right" headers="Requests Writes/s" class='awrc'>139.39</td><td align="right" headers="MB Total" class='awrclb'>1,873</td><td align="right" headers="MB IOMB/s" class='awrc'>3.03</td><td align="right" headers="MB ReadMB/s" class='awrc'>1.06</td><td align="right" headers="MB WriteMB/s" class='awrc'>1.98</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>408.45us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1351.66ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>5,094</td><td align="right" headers="Requests IOs/s" class='awrnc'>8.25</td><td align="right" headers="Requests Reads/s" class='awrnc'>6.81</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.44</td><td align="right" headers="MB Total" class='awrnclb'>80</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.13</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.11</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.02</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>62.56us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Other</td><td align="right" headers="Requests Total" class='awrclb'>246</td><td align="right" headers="Requests IOs/s" class='awrc'>0.40</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>0.40</td><td align="right" headers="MB Total" class='awrclb'>2</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>&#160;</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Temp File</td><td align="right" headers="Requests Total" class='awrnclb'>101</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.16</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.08</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.08</td><td align="right" headers="MB Total" class='awrnclb'>2</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>.00ns</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>2</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>3,216,668</td><td align="right" headers="Requests IOs/s" class='awrct'>5,209.26</td><td align="right" headers="Requests Reads/s" class='awrct'>4,477.47</td><td align="right" headers="Requests Writes/s" class='awrct'>731.79</td><td align="right" headers="MB Total" class='awrclbt'>26,748</td><td align="right" headers="MB IOMB/s" class='awrct'>43.32</td><td align="right" headers="MB ReadMB/s" class='awrct'>36.88</td><td align="right" headers="MB WriteMB/s" class='awrct'>6.44</td><td align="right" headers="ServiceTime Small|Read" class='awrclbt'>2.03ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrbt'>1623.13ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Data File</td><td align="right" headers="Requests Total" class='awrnclb'>3,152,562</td><td align="right" headers="Requests IOs/s" class='awrnc'>5,105.45</td><td align="right" headers="Requests Reads/s" class='awrnc'>4,469.04</td><td align="right" headers="Requests Writes/s" class='awrnc'>636.40</td><td align="right" headers="MB Total" class='awrnclb'>24,797</td><td align="right" headers="MB IOMB/s" class='awrnc'>40.16</td><td align="right" headers="MB ReadMB/s" class='awrnc'>34.92</td><td align="right" headers="MB WriteMB/s" class='awrnc'>5.24</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>2.03ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>59,752</td><td align="right" headers="Requests IOs/s" class='awrc'>96.77</td><td align="right" headers="Requests Reads/s" class='awrc'>2.30</td><td align="right" headers="Requests Writes/s" class='awrc'>94.47</td><td align="right" headers="MB Total" class='awrclb'>1,883</td><td align="right" headers="MB IOMB/s" class='awrc'>3.05</td><td align="right" headers="MB ReadMB/s" class='awrc'>1.87</td><td align="right" headers="MB WriteMB/s" class='awrc'>1.18</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>79.05us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1623.13ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>4,351</td><td align="right" headers="Requests IOs/s" class='awrnc'>7.05</td><td align="right" headers="Requests Reads/s" class='awrnc'>6.13</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.92</td><td align="right" headers="MB Total" class='awrnclb'>68</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.11</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.10</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>70.54us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Temp File</td><td align="right" headers="Requests Total" class='awrclb'>3</td><td align="right" headers="Requests IOs/s" class='awrc'>0.00</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>0</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>.00ns</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12070"></a>
<h3 class="awr">Segment Statistics (Global)</h3>
<ul>
<li class="awr"> % Total shows % of statistic for each segment compared to the global cluster-wide total     (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants) </li>
<li class="awr"> % Capture shows % of statistic for each segment compared to the  total captured     by AWR for all segments during the snapshot interval</li>
<li class="awr">Captured Segments account for	72.3% of Total Logical Reads:	   12,488,118</li>
<li class="awr">Captured Segments account for  100.1% of Total Physical Reads:	     7,025,468</li>
<li class="awr">Captured Segments account for  100.1% of Total Physical Read Requests:	     7,025,142</li>
<li class="awr">Captured Segments account for  100.1% of Total UnOptimized Read Requests:	7,025,142</li>
<li class="awr">Captured Segments account for	 0.0% of Total Optimized  Read Requests:	       1</li>
<li class="awr">Captured Segments account for	 0.0% of Total Direct Physical Reads:		    1</li>
<li class="awr">Captured Segments account for	95.0% of Total Physical Writes:       1,123,587</li>
<li class="awr">Captured Segments account for	99.1% of Total Physical Write Requests:       1,066,707</li>
<li class="awr">Captured Segments account for	68.2% of Total Direct Physical Writes:		   314</li>
<li class="awr">Captured Segments account for	 0.0% of Total Table Scans:		  5</li>
<li class="awr">Captured Segments account for	94.7% of Total CR Blocks Received:	    36,605</li>
<li class="awr">Captured Segments account for	98.0% of Total Current Blocks Received: 	109,503</li>
<li class="awr">Captured Segments account for	94.5% of Total CR Blocks Served:	  36,707</li>
<li class="awr">Captured Segments account for	97.8% of Total Current Blocks Served:	      109,727</li>
<li class="awr">Captured Segments account for	99.0% of Total Global Cache Remote Grants:	 2,631,363</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="Segment Statistics (Global). . % Total shows % of statistic for each segment compared to the global cluster-wide total (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants). % Capture shows % of statistic for each segment compared to the total captured by AWR for all segments during the snapshot interval"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%Capture</th></tr>
<tr><td class='awrc'>buffer busy waits</td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000011139C00004$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>100.00</td></tr>
<tr><td class='awrnc'>db block changes</td><td class='awrnc'>USER12</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73464</td><td align="right" class='awrnc'>73460</td><td align="right" class='awrnc'>75,136</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>23.20</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>USER16</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>74,576</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>23.03</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>USER15</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73472</td><td align="right" class='awrnc'>73477</td><td align="right" class='awrnc'>64,576</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>19.94</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>USER14</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73470</td><td align="right" class='awrc'>73474</td><td align="right" class='awrc'>54,896</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>16.95</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>54,672</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>16.88</td></tr>
<tr><td class='awrc'>gc cr blocks received</td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>26,033</td><td align="right" class='awrc'>71.12</td><td align="right" class='awrc'>76.54</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>3,661</td><td align="right" class='awrnc'>10.00</td><td align="right" class='awrnc'>10.76</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>USER2</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>2,773</td><td align="right" class='awrc'>7.58</td><td align="right" class='awrc'>8.15</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>USER8</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73443</td><td align="right" class='awrnc'>73446</td><td align="right" class='awrnc'>1,208</td><td align="right" class='awrnc'>3.30</td><td align="right" class='awrnc'>3.55</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>USER3</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>337</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>0.99</td></tr>
<tr><td class='awrnc'>gc cr blocks served</td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>26,033</td><td align="right" class='awrnc'>70.92</td><td align="right" class='awrnc'>76.54</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>3,661</td><td align="right" class='awrc'>9.97</td><td align="right" class='awrc'>10.76</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>2,773</td><td align="right" class='awrnc'>7.55</td><td align="right" class='awrnc'>8.15</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>USER8</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73443</td><td align="right" class='awrc'>73446</td><td align="right" class='awrc'>1,208</td><td align="right" class='awrc'>3.29</td><td align="right" class='awrc'>3.55</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>337</td><td align="right" class='awrnc'>0.92</td><td align="right" class='awrnc'>0.99</td></tr>
<tr><td class='awrc'>gc cu blocks received</td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>41,072</td><td align="right" class='awrc'>37.51</td><td align="right" class='awrc'>61.87</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>10,826</td><td align="right" class='awrnc'>9.89</td><td align="right" class='awrnc'>16.31</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>USER2</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>6,933</td><td align="right" class='awrc'>6.33</td><td align="right" class='awrc'>10.44</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>USER8</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73443</td><td align="right" class='awrnc'>73446</td><td align="right" class='awrnc'>3,872</td><td align="right" class='awrnc'>3.54</td><td align="right" class='awrnc'>5.83</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>USER10</td><td class='awrc'>IOPS</td><td class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73462</td><td align="right" class='awrc'>73462</td><td align="right" class='awrc'>3,686</td><td align="right" class='awrc'>3.37</td><td align="right" class='awrc'>5.55</td></tr>
<tr><td class='awrnc'>gc cu blocks served</td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>41,072</td><td align="right" class='awrnc'>37.43</td><td align="right" class='awrnc'>61.87</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>10,826</td><td align="right" class='awrc'>9.87</td><td align="right" class='awrc'>16.31</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>USER2</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73409</td><td align="right" class='awrnc'>73415</td><td align="right" class='awrnc'>6,933</td><td align="right" class='awrnc'>6.32</td><td align="right" class='awrnc'>10.44</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>USER8</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73443</td><td align="right" class='awrc'>73446</td><td align="right" class='awrc'>3,872</td><td align="right" class='awrc'>3.53</td><td align="right" class='awrc'>5.83</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>USER10</td><td class='awrnc'>IOPS</td><td class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73462</td><td align="right" class='awrnc'>73462</td><td align="right" class='awrnc'>3,686</td><td align="right" class='awrnc'>3.36</td><td align="right" class='awrnc'>5.55</td></tr>
<tr><td class='awrc'>gc remote grants</td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>334,315</td><td align="right" class='awrc'>12.71</td><td align="right" class='awrc'>30.43</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>243,743</td><td align="right" class='awrnc'>9.26</td><td align="right" class='awrnc'>22.19</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>USER2</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>216,913</td><td align="right" class='awrc'>8.24</td><td align="right" class='awrc'>19.75</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>USER8</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73443</td><td align="right" class='awrnc'>73446</td><td align="right" class='awrnc'>166,256</td><td align="right" class='awrnc'>6.32</td><td align="right" class='awrnc'>15.14</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>USER3</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>137,253</td><td align="right" class='awrc'>5.22</td><td align="right" class='awrc'>12.49</td></tr>
<tr><td class='awrnc'>logical reads</td><td class='awrnc'>USER12</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73464</td><td align="right" class='awrnc'>73460</td><td align="right" class='awrnc'>503,472</td><td align="right" class='awrnc'>4.03</td><td align="right" class='awrnc'>23.21</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER16</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>496,864</td><td align="right" class='awrc'>3.98</td><td align="right" class='awrc'>22.91</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>USER15</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73472</td><td align="right" class='awrnc'>73477</td><td align="right" class='awrnc'>432,480</td><td align="right" class='awrnc'>3.46</td><td align="right" class='awrnc'>19.94</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>370,016</td><td align="right" class='awrc'>2.96</td><td align="right" class='awrc'>17.06</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>USER14</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73470</td><td align="right" class='awrnc'>73474</td><td align="right" class='awrnc'>366,112</td><td align="right" class='awrnc'>2.93</td><td align="right" class='awrnc'>16.88</td></tr>
<tr><td class='awrc'>physical reads</td><td class='awrc'>USER12</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>466,690</td><td align="right" class='awrc'>6.64</td><td align="right" class='awrc'>23.19</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>458,963</td><td align="right" class='awrnc'>6.53</td><td align="right" class='awrnc'>22.81</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>USER15</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>404,719</td><td align="right" class='awrc'>5.76</td><td align="right" class='awrc'>20.11</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>USER14</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73470</td><td align="right" class='awrnc'>73474</td><td align="right" class='awrnc'>342,868</td><td align="right" class='awrnc'>4.88</td><td align="right" class='awrnc'>17.04</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>339,269</td><td align="right" class='awrc'>4.83</td><td align="right" class='awrc'>16.86</td></tr>
<tr><td class='awrnc'>physical read requests</td><td class='awrnc'>USER12</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73464</td><td align="right" class='awrnc'>73460</td><td align="right" class='awrnc'>466,690</td><td align="right" class='awrnc'>6.64</td><td align="right" class='awrnc'>23.19</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>USER16</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>458,963</td><td align="right" class='awrc'>6.53</td><td align="right" class='awrc'>22.81</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>USER15</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73472</td><td align="right" class='awrnc'>73477</td><td align="right" class='awrnc'>404,719</td><td align="right" class='awrnc'>5.76</td><td align="right" class='awrnc'>20.11</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>USER14</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73470</td><td align="right" class='awrc'>73474</td><td align="right" class='awrc'>342,868</td><td align="right" class='awrc'>4.88</td><td align="right" class='awrc'>17.04</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>339,269</td><td align="right" class='awrnc'>4.83</td><td align="right" class='awrnc'>16.86</td></tr>
<tr><td class='awrc'>physical writes</td><td class='awrc'>USER16</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>74,335</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>23.67</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>USER12</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73464</td><td align="right" class='awrnc'>73460</td><td align="right" class='awrnc'>70,134</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>22.33</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>USER15</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>60,526</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>19.27</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>54,713</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>17.42</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>54,339</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>17.30</td></tr>
<tr><td class='awrnc'>physical writes direct</td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_ACTIVE_SESSION_HISTORY</td><td class='awrnc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_33</td><td class='awrnc'>TABLE PARTITION</td><td align="right" class='awrnc'>73801</td><td align="right" class='awrnc'>73801</td><td align="right" class='awrnc'>110</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>51.40</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes direct</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000011139C00004$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>11140</td><td align="right" class='awrc'>96</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>44.86</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes direct</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>SYS_LOB0000007451C00009$$</td><td class='awrnc'>SYS_LOB_P256</td><td class='awrnc'>LOB PARTITION</td><td align="right" class='awrnc'>73950</td><td align="right" class='awrnc'>73950</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>2.34</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes direct</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>SYS_LOB0000011147C00038$$</td><td class='awrc'>&#160;</td><td class='awrc'>LOB</td><td align="right" class='awrc'>11148</td><td align="right" class='awrc'>11148</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1.40</td></tr>
<tr><td class='awrnc'>physical write requests</td><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>74,144</td><td align="right" class='awrnc'>6.95</td><td align="right" class='awrnc'>23.90</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>USER12</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>69,027</td><td align="right" class='awrc'>6.47</td><td align="right" class='awrc'>22.25</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>USER15</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73472</td><td align="right" class='awrnc'>73477</td><td align="right" class='awrnc'>59,680</td><td align="right" class='awrnc'>5.59</td><td align="right" class='awrnc'>19.24</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>53,711</td><td align="right" class='awrc'>5.04</td><td align="right" class='awrc'>17.31</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>53,662</td><td align="right" class='awrnc'>5.03</td><td align="right" class='awrnc'>17.30</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12083"></a>
<h3 class="awr">Library Cache Activity</h3>
<ul>
<li class="awr"> Summarized for all instances in the report </li>
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
</ul>
<table border="0" class="tdiff" summary="Library Cache Activity. . Summarized for all instances in the report. &quot;Pct Misses&quot; should be very low "><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>ACCOUNT_STATUS</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>AUDIT POLICY</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>346</td><td align="right" class='awrc'>0.87</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>325</td><td align="right" class='awrc'>325</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>CLUSTER</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>DBLINK</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>EDITION</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>HINTSET OBJECT</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>17.95</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>17.95</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>INDEX</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>14.29</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>QUEUE</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SCHEMA</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA</td><td align="right" class='awrc'>1,203</td><td align="right" class='awrc'>7.65</td><td align="right" class='awrc'>551,369</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>132</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA BUILD</td><td align="right" class='awrnc'>189</td><td align="right" class='awrnc'>86.77</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA STATS</td><td align="right" class='awrc'>155</td><td align="right" class='awrc'>56.77</td><td align="right" class='awrc'>155</td><td align="right" class='awrc'>56.77</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TABLE/PROCEDURE</td><td align="right" class='awrnc'>702</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>4,081</td><td align="right" class='awrnc'>7.18</td><td align="right" class='awrnc'>188</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,069</td><td align="right" class='awrnc'>2,987</td><td align="right" class='awrnc'>2,987</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TRANSFORMATION</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>20.00</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>30.00</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="633"></a>
<h2 class="awr">
Memory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12074">PGA Aggregate Target Statistics</a></li>
<li class="awr"><a class="awr" href="#12075">Process Memory Summary</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12074"></a>
<h3 class="awr">PGA Aggregate Target Statistics</h3>
<ul>
<li class="awr"> all stats are reported in MegaBytes</li>
</ul>
<table border="0" class="tdiff" summary="PGA Aggregate Target Statistics. . all stats are reported in MegaBytes"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="PGAAggrTarget">PGA Aggr Target</th>
<th class="awrbg" colspan=" 2" id="AutoPGATarget">Auto PGA Target</th>
<th class="awrbg" colspan=" 2" id="PGAMemAlloc">PGA Mem Alloc</th>
<th class="awrbg" colspan=" 2" id="AutoWorkareas">Auto Workareas</th>
<th class="awrbg" colspan=" 2" id="ManualWorkarea">Manual Workarea</th>
<th class="awrbg" colspan=" 2" id="GlobalMemBound">Global Mem Bound</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="PGAAggrTarget Begin" class='awrclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrclb'>1,840.61</td><td align="right" headers="AutoPGATarget End" class='awrc'>1,922.85</td><td align="right" headers="PGAMemAlloc Begin" class='awrclb'>1,503.07</td><td align="right" headers="PGAMemAlloc End" class='awrc'>1,326.37</td><td align="right" headers="AutoWorkareas Begin" class='awrclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrcrb'>321.49</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="PGAAggrTarget Begin" class='awrnclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrnc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrnclb'>1,905.34</td><td align="right" headers="AutoPGATarget End" class='awrnc'>1,950.15</td><td align="right" headers="PGAMemAlloc Begin" class='awrnclb'>1,359.94</td><td align="right" headers="PGAMemAlloc End" class='awrnc'>1,269.72</td><td align="right" headers="AutoWorkareas Begin" class='awrnclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrnc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrnclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrnc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrnclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrncrb'>321.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12075"></a>
<h3 class="awr">Process Memory Summary</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap I#: Instance number  </li>
<li class="awr"> Max Alloc is Maximum PGA allocation size at snapshot time </li>
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>
<li class="awr"> ordered by instance, Begin/End snapshot, Alloc (MB) </li>
</ul>
<table border="0" class="tdiff" summary="Process Memory Summary. . B: Begin Snap E: End Snap I#: Instance number . Max Alloc is Maximum PGA allocation size at snapshot time. Hist Max Alloc is the Historical Max Allocation for still-connected processes. ordered by instance, Begin/End snapshot, Alloc (MB) "><tr><th class="awrbg" scope="col">I#</th><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>236.31</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.63</td><td align="right" class='awrc'>8.88</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>51</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>731.82</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.76</td><td align="right" class='awrnc'>7.98</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>127</td><td align="right" class='awrnc'>127</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>16.71</td><td align="right" class='awrc'>15.29</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.33</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>109</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>10.72</td><td align="right" class='awrnc'>6.63</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>49</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>995.55</td><td align="right" class='awrc'>21.92</td><td align="right" class='awrc'>10.72</td><td align="right" class='awrc'>17.50</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>63</td><td align="right" class='awrc'>348</td><td align="right" class='awrc'>336</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>195.19</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.91</td><td align="right" class='awrnc'>8.45</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>33</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>608.11</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.58</td><td align="right" class='awrc'>8.61</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>109</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>7.73</td><td align="right" class='awrnc'>6.42</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.33</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>90</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>3.39</td><td align="right" class='awrc'>2.33</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>31</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>814.42</td><td align="right" class='awrnc'>8.75</td><td align="right" class='awrnc'>11.66</td><td align="right" class='awrnc'>17.57</td><td align="right" class='awrnc'>73</td><td align="right" class='awrnc'>63</td><td align="right" class='awrnc'>275</td><td align="right" class='awrnc'>263</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>168.19</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.81</td><td align="right" class='awrc'>7.88</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>35</td><td align="right" class='awrc'>35</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>651.18</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>7.79</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>123</td><td align="right" class='awrnc'>123</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>17.44</td><td align="right" class='awrc'>16.14</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0.46</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>105</td><td align="right" class='awrc'>104</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>11.19</td><td align="right" class='awrnc'>9.29</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>46</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>847.99</td><td align="right" class='awrc'>25.44</td><td align="right" class='awrc'>10.47</td><td align="right" class='awrc'>16.51</td><td align="right" class='awrc'>71</td><td align="right" class='awrc'>56</td><td align="right" class='awrc'>318</td><td align="right" class='awrc'>308</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>169.75</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.14</td><td align="right" class='awrnc'>8.25</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>33</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>573.28</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.16</td><td align="right" class='awrc'>8.10</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>111</td><td align="right" class='awrc'>111</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>11.31</td><td align="right" class='awrnc'>10.10</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.47</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>93</td><td align="right" class='awrnc'>92</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>3.43</td><td align="right" class='awrc'>2.63</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>30</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>757.77</td><td align="right" class='awrnc'>12.73</td><td align="right" class='awrnc'>10.51</td><td align="right" class='awrnc'>17.06</td><td align="right" class='awrnc'>71</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>279</td><td align="right" class='awrnc'>266</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="638"></a>
<h2 class="awr">
Supplemental Information
</h2>
<ul>
<li class="awr"><a class="awr" href="#12080">init.ora Parameters</a></li>
<li class="awr"><a class="awr" href="#12084">init.ora Multi-valued Parameters</a></li>
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12080"></a>
<h3 class="awr">init.ora Parameters</h3>
<ul>
<li class="awr"> '*' indicates same value across all instances</li>
</ul>
<table border="0" class="tdiff" summary="This table displays values for init.ora parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>*</td><td class='awrc'>TRUE</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>*</td><td class='awrc'>DB</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>*</td><td class='awrnc'>TRUE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>*</td><td class='awrc'>19.0.0</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>*</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>*</td><td class='awrc'>8192</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>+DATA</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>*</td><td class='awrc'>example.com</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>*</td><td class='awrnc'>p30db</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>*</td><td class='awrc'>+FRA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>*</td><td class='awrnc'>274877906944</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>*</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>*</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>1</td><td class='awrc'>1</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">instance_number</div></td><td class='awrnc'>2</td><td class='awrnc'>2</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>listener_networks</td><td class='awrc'>*</td><td class='awrc'></td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>local_listener</td><td class='awrnc'>1</td><td class='awrnc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522))</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">local_listener</div></td><td class='awrc'>2</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522))</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>*</td><td class='awrnc'>AMERICAN</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>*</td><td class='awrc'>AMERICA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>*</td><td class='awrnc'>300</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>*</td><td class='awrc'>3371171840</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>*</td><td class='awrnc'>640</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>*</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>*</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>*</td><td class='awrc'>10133438464</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>1</td><td class='awrnc'>1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">thread</div></td><td class='awrc'>2</td><td class='awrc'>2</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>undo_tablespace</td><td class='awrnc'>1</td><td class='awrnc'>UNDOTBS1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">undo_tablespace</div></td><td class='awrc'>2</td><td class='awrc'>UNDOTBS2</td><td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12084"></a>
<h3 class="awr">init.ora Multi-valued Parameters</h3>
<ul>
<li class="awr"> This section only displays parameters that have more one value </li>
<li class="awr"> '*' indicates same value across all instances </li>
<li class="awr"> '(NULL)' indicates that the  parameter value was not set </li>
<li class="awr"> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="init.ora Multi-valued Parameters. . This section only displays parameters that have more one value. '*' indicates same value across all instances. '(NULL)' indicates that the parameter value was not set. A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td class='awrc'>control_files</td><td class='awrc'>*</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'></td></tr>
<tr><td class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>*</td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="06y2j283phcdz"></a>06y2j283phcdz</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '22';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="0hk2wm946s76n"></a>0hk2wm946s76n</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '16';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_c
nt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_h
ome_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :
= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_S
CHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-------------------------------------------------------------------------------------------------------
---------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upd
ate := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

       	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v
_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execu
ted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If t
his is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="14g8z0zv8sq36"></a>14g8z0zv8sq36</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '12';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="24djtk7r8fz33"></a>24djtk7r8fz33</td><td class='awrnc'><pre_sqltext class="awr">update svcobj_access$ set accesses = :5,  inc_no = :6 where name = :1 AND pdb = :2 AND tsn = :3 AND objid = :4</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="30nj40b6j5jjg"></a>30nj40b6j5jjg</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '3';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrnc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,  C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="3dbzmtf9ahvzt"></a>3dbzmtf9ahvzt</td><td class='awrc'><pre_sqltext class="awr">merge /* KSXM:OPTIM_DML_INF */  into sys.mon_mods_all$ m			using dual								   on (m.obj# = :objn and							  (:pobjn = 0 or							      m.obj# = :pobjn or							 m.obj# in (select obj# 							       from tabpart$								  where bo# = :pobjn and obj# = :objn					     union all									select obj#								   from tabcompart$							      where bo# = :pobjn and obj
# = :objn					 union all								    select tsp.obj#							       from tabsubpart$ tsp,  tabcompart$ tcp					   where tsp.pobj# = tcp.obj#							and (tcp.bo# = :pobjn or tcp.obj# = :pobjn)				   and tsp.obj# = :objn)))				    when matched then								 update 								    set inserts = decode(:reset,  1,  0,  inserts) + :ins,			       updates = decode(:reset,  1,  0,  updates) + :upd,			      deletes = decode(:reset,	1,  0,	deletes) + :del,			     flags =  decode(:reset,  1,  0,  flags - bitand(flags,  :flag)) + :flag,	     drop_segments = decode(:reset,  1,  0,  dro
p_segments) + :dropseg, 	    timestamp = :time							 when NOT matched then							      insert (obj#,  inserts,  updates,  deletes,					     timestamp,  flags,  drop_segments) 				  values (:objn,  :ins,  :upd,	:del,  :time,  :flag,  :dropseg)		   where :ins != 0 or :upd != 0 or :del != 0 or :flag != 0 or :dropseg !=0</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5pj15z95yy8bw"></a>5pj15z95yy8bw</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '2';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="68bjwqddyrzp1"></a>68bjwqddyrzp1</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '8';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6c0z4993ppn5s"></a>6c0z4993ppn5s</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '15';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_c
nt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_h
ome_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :
= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_S
CHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-------------------------------------------------------------------------------------------------------
---------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upd
ate := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

       	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v
_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execu
ted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If t
his is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6xvp6nxs4a9n4"></a>6xvp6nxs4a9n4</td><td class='awrc'><pre_sqltext class="awr">select nvl(sum(space), 0) from recyclebin$ where ts# = :1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="86708bvah4akq"></a>86708bvah4akq</td><td class='awrnc'><pre_sqltext class="awr">select name from undo$ where file#=:1 and block#=:2 and ts#=:3 and	status$ != 1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="87gaftwrm2h68"></a>87gaftwrm2h68</td><td class='awrc'><pre_sqltext class="awr">select o.owner#, o.name, o.namespace, o.remoteowner, o.linkname, o.subname from obj$ o where o.obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="8p83bvqrm41hf"></a>8p83bvqrm41hf</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '13';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_c
nt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_h
ome_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :
= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_S
CHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-------------------------------------------------------------------------------------------------------
---------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upd
ate := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

       	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v
_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execu
ted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If t
his is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="8thj2ffrw6hnr"></a>8thj2ffrw6hnr</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '10';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="95x8tdmpy1k78"></a>95x8tdmpy1k78</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '14';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_c
nt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_h
ome_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :
= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_S
CHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-------------------------------------------------------------------------------------------------------
---------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upd
ate := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

       	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v
_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execu
ted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If t
his is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9c0dt5tks83kz"></a>9c0dt5tks83kz</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '29';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="9f9w8g2xnb7pk"></a>9f9w8g2xnb7pk</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '9';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="a42c3p5zjh4yg"></a>a42c3p5zjh4yg</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '25';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="ayb2zjspaq24n"></a>ayb2zjspaq24n</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '23';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_c
nt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_h
ome_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :
= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_S
CHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-------------------------------------------------------------------------------------------------------
---------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upd
ate := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

       	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v
_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execu
ted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If t
his is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bff19a1raa4vy"></a>bff19a1raa4vy</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '24';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bhdvtsvjhgvrh"></a>bhdvtsvjhgvrh</td><td class='awrnc'><pre_sqltext class="awr">SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="dg8wzzu89u0y0"></a>dg8wzzu89u0y0</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '4';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="dpnvk07hr10yx"></a>dpnvk07hr10yx</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '17';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_c
nt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_h
ome_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :
= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_S
CHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-------------------------------------------------------------------------------------------------------
---------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upd
ate := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

       	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v
_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execu
ted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If t
his is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="dxc8p6cu2bx5n"></a>dxc8p6cu2bx5n</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '1';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f7xnvp44nukp7"></a>f7xnvp44nukp7</td><td class='awrnc'><pre_sqltext class="awr">insert into  wrm$_snapshot_details  (snap_id, dbid, instance_number, table_id, begin_time, end_time, step_id)	values (:snap_id, :dbid, :instance_number, :bind1, :bind2, :bind3, :step_id)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f80h0xb1qvbsk"></a>f80h0xb1qvbsk</td><td class='awrc'><pre_sqltext class="awr">SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fn5s5p6hr6702"></a>fn5s5p6hr6702</td><td class='awrnc'><pre_sqltext class="awr">INSERT INTO wri$_adv_message_groups (task_id, id, seq, message#, fac, hdr, lm, nl, p1, p2, p3, p4, p5) VALUES (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="gwvc8un8ww8mb"></a>gwvc8un8ww8mb</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '5';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '16' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
</table>
<p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="43"></a>
<h2 class="awr">
Active Session History(ASH) Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#9981">Top SQL with Top Events</a></li>
<li class="awr"><a class="awr" href="#9980">Top SQL with Top Row Sources</a></li>
<li class="awr"><a class="awr" href="#9984">Top Sessions</a></li>
<li class="awr"><a class="awr" href="#9983">Top Blocking Sessions</a></li>
<li class="awr"><a class="awr" href="#9982">Top PL/SQL Procedures</a></li>
<li class="awr"><a class="awr" href="#9979">Top Events</a></li>
<li class="awr"><a class="awr" href="#9985">Top Event P1/P2/P3 Values</a></li>
<li class="awr"><a class="awr" href="#9978">Top DB Objects</a></li>
<li class="awr"><a class="awr" href="#9977">Activity Over Time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9981"></a>
<h3 class="awr">Top SQL with Top Events</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>1082</td><td align="right" class='awrc'>49.95</td>
<td class='awrc'>db file parallel read</td><td align="right" class='awrc'>23.89</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>23.89</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrnc'><div class="hidden">1497866750</div></td><td align="right" class='awrnc'><div class="hidden">1082</div></td><td align="right" class='awrnc'><div class="hidden">49.95387453874538745387453874538745387454</div></td>
<td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>21.82</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>21.63</td>
<td class='awrnc'></td></tr>
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">1082</div></td><td align="right" class='awrc'><div class="hidden">49.95387453874538745387453874538745387454</div></td>
<td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>1.48</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>1.01</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>768</td><td align="right" class='awrnc'>35.42</td>
<td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>25.88</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>25.83</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrc'><div class="hidden">203653710</div></td><td align="right" class='awrc'><div class="hidden">768</div></td><td align="right" class='awrc'><div class="hidden">35.42435424354243542435424354243542435424</div></td>
<td class='awrc'>buffer busy waits</td><td align="right" class='awrc'>3.37</td><td class='awrc'>UPDATE STATEMENT</td><td align="right" class='awrc'>3.37</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrnc'><div class="hidden">203653710</div></td><td align="right" class='awrnc'><div class="hidden">768</div></td><td align="right" class='awrnc'><div class="hidden">35.42435424354243542435424354243542435424</div></td>
<td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>1.71</td><td class='awrnc'>UPDATE STATEMENT</td><td align="right" class='awrnc'>1.01</td>
<td class='awrnc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9980"></a>
<h3 class="awr">Top SQL with Top Row Sources</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>1082</td><td align="right" class='awrc'>49.95</td>
<td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>49.03</td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>23.89</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>768</td><td align="right" class='awrnc'>35.42</td>
<td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>28.32</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>25.83</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrc'><div class="hidden">203653710</div></td><td align="right" class='awrc'><div class="hidden">768</div></td><td align="right" class='awrc'><div class="hidden">35.42435424354243542435424354243542435424</div></td>
<td class='awrc'>UPDATE STATEMENT</td><td align="right" class='awrc'>7.01</td><td class='awrc'>buffer busy waits</td><td align="right" class='awrc'>3.37</td>
<td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9984"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>9,16277</td><td align="right" class='awrc'>2.68</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>1.75</td>
<td class='awrc'>USER17</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>38/62 [ 62%]</td><td align="right" class='awrc'>17</td></tr>
<tr><td align="right" scope="row" class='awrnc'>15, 3416</td><td align="right" class='awrnc'>2.68</td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>0.83</td>
<td class='awrnc'>USER15</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>18/62 [ 29%]</td><td align="right" class='awrnc'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>22,45631</td><td align="right" class='awrc'>2.68</td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>0.88</td>
<td class='awrc'>USER1</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>19/62 [ 31%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>25,26846</td><td align="right" class='awrnc'>2.68</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>1.66</td>
<td class='awrnc'>USER19</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>36/62 [ 58%]</td><td align="right" class='awrnc'>19</td></tr>
<tr><td align="right" scope="row" class='awrc'>25,31913</td><td align="right" class='awrc'>2.68</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.03</td>
<td class='awrc'>USER24</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>44/62 [ 71%]</td><td align="right" class='awrc'>20</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9983"></a>
<h3 class="awr">Top Blocking Sessions</h3>
<ul>
<li class="awr"> Blocking session activity percentages are calculated with respect to	     waits on enqueues, latches and &quot;buffer busy&quot; only  </li>
<li class="awr"> '% Activity' represents the load on the database caused by	   a particular blocking session </li>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the	blocking session was found active. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the blocking session was found active.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top sessions that are blocking other sessions."><tr><th class="awrbg" scope="col">Blocking Sid (Inst)</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event Caused</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>374,41238(     1)</td><td align="right" class='awrc'>2.31</td><td class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>2.17</td>
<td class='awrc'>SYS</td><td class='awrc'>oracle@mcracpo...le.com (LG00)</td><td align="right" class='awrc'>54/62 [ 88%]</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9982"></a>
<h3 class="awr">Top PL/SQL Procedures</h3>
<ul>
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>35.52</td>
<td class='awrc'>SQL</td><td align="right" class='awrc'>35.52</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9979"></a>
<h3 class="awr">Top Events</h3>
<ul>
<li class="awr"> Top Events by DB Time </li>
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>47.69</td><td align="right" class='awrc'>16.76</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td class='awrnc'>User I/O</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>23.89</td><td align="right" class='awrnc'>8.40</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td class='awrc'>System I/O</td><td class='awrc'>BACKGROUND</td>
<td align="right" class='awrc'>7.33</td><td align="right" class='awrc'>2.58</td></tr>
<tr><td scope="row" class='awrnc'>CPU + Wait for CPU</td><td class='awrnc'>CPU</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>3.41</td><td align="right" class='awrnc'>1.20</td></tr>
<tr><td scope="row" class='awrc'>buffer busy waits</td><td class='awrc'>Concurrency</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>3.37</td><td align="right" class='awrc'>1.18</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9985"></a>
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
<ul>
<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>47.69</td><td align="right" class='awrc'>&quot;2&quot;,&quot;24942388&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.05</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>23.89</td><td align="right" class='awrnc'>&quot;1&quot;,&quot;13&quot;,&quot;13&quot;</td><td align="right" class='awrnc'>22.05</td>
<td class='awrnc'>files</td><td class='awrnc'>blocks</td><td class='awrnc'>requests</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>7.33</td><td align="right" class='awrc'>&quot;2&quot;,&quot;4&quot;,&quot;2&quot;</td><td align="right" class='awrc'>0.28</td>
<td class='awrc'>files</td><td class='awrc'>blocks</td><td class='awrc'>requests</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>3.41</td><td align="right" class='awrnc'>&quot;4&quot;,&quot;2&quot;,&quot;13&quot;</td><td align="right" class='awrnc'>3.41</td>
<td class='awrnc'>file#</td><td class='awrnc'>block#</td><td class='awrnc'>class#</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>1.43</td><td align="right" class='awrc'>&quot;4&quot;,&quot;0&quot;,&quot;2147483647&quot;</td><td align="right" class='awrc'>0.42</td>
<td class='awrc'>requests</td><td class='awrc'>interrupt</td><td class='awrc'>timeout</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9978"></a>
<h3 class="awr">Top DB Objects</h3>
<ul>
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
<tr><td align="right" scope="row" class='awrc'>73439</td><td align="right" class='awrc'>2.68</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>1.66</td>
<td class='awrc'>USER9.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">73439</div></td><td align="right" class='awrnc'><div class="hidden">2.67527675276752767527675276752767527675</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>1.01</td>
<td class='awrnc'><div class="hidden">USER9.CF1 (TABLE)</div></td><td class='awrnc'><div class="hidden">IOPS</div></td></tr>
<tr><td align="right" scope="row" class='awrc'>73443</td><td align="right" class='awrc'>2.68</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>1.75</td>
<td class='awrc'>USER8.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73458</td><td align="right" class='awrnc'>2.68</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>1.85</td>
<td class='awrnc'>USER13.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73501</td><td align="right" class='awrc'>2.63</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>1.52</td>
<td class='awrc'>USER20.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">73501</div></td><td align="right" class='awrnc'><div class="hidden">2.62915129151291512915129151291512915129</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>1.11</td>
<td class='awrnc'><div class="hidden">USER20.CF1 (TABLE)</div></td><td class='awrnc'><div class="hidden">IOPS</div></td></tr>
<tr><td align="right" scope="row" class='awrc'>73520</td><td align="right" class='awrc'>2.63</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>1.98</td>
<td class='awrc'>USER24.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9977"></a>
<h3 class="awr">Activity Over Time</h3>
<ul>
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
<li class="awr"> Top 3 events are reported in each of those slots </li>
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
</ul>
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
<tr><td align="right" class='awrc'>10:27:31   (2.5 min)</td><td align="right" class='awrc'>598</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>284</td><td align="right" class='awrc'>13.10</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">10:27:31   (2.5 min)</div></td><td align="right" class='awrnc'><div class="hidden">598</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>119</td><td align="right" class='awrnc'>5.49</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">10:27:31   (2.5 min)</div></td><td align="right" class='awrc'><div class="hidden">598</div></td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>2.35</td></tr>
<tr><td align="right" class='awrnc'>10:30:00   (5.0 min)</td><td align="right" class='awrnc'>1,114</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>543</td><td align="right" class='awrnc'>25.05</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">10:30:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">1114</div></td><td class='awrc'>db file parallel read</td><td align="right" class='awrc'>286</td><td align="right" class='awrc'>13.19</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">10:30:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">1114</div></td><td class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>3.83</td></tr>
<tr><td align="right" class='awrc'>10:35:00   (2.8 min)</td><td align="right" class='awrc'>456</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>207</td><td align="right" class='awrc'>9.55</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">10:35:00   (2.8 min)</div></td><td align="right" class='awrnc'><div class="hidden">456</div></td><td class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>113</td><td align="right" class='awrnc'>5.21</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">10:35:00   (2.8 min)</div></td><td align="right" class='awrc'><div class="hidden">456</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>1.66</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99994"></a>
<h2>ADDM Task ADDM:3393773525_69</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_69&apos;
	  -----------------------------------------

Analysis Period
---------------
AWR snapshot range from 68 to 69.
Time period starts at 08-FEB-20 10.27.31 AM
Time period ends at 08-FEB-20 10.37.49 AM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 18234 seconds.
The average number of active sessions was 29.51.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendations
					     Percent of Activity
   ----------------------------------------  -------------------  ---------------
1  Top SQL Statements			     29.41 | 99.68	  2
2  &quot;User I/O&quot; wait Class		       24.33 | 82.47	    0
3  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  4.51 | 15.28	      5
4  Global Cache Messaging		     1.35 | 4.59	  1
5  Buffer Busy - Hot Objects		     1.27 | 4.31	  5
6  &quot;Other&quot; Wait Class 		       .97 | 3.27	    0


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 29.46 active sessions, 99.68% of total activity.
----------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  59.32	    ADDM:3393773525_1_69
    2	    p30db2  40.68	    ADDM:3393773525_2_69

   Recommendation 1: SQL Tuning
   Estimated benefit is 17.19 active sessions, 58.27% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      &quot;bhdvtsvjhgvrh&quot;.
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND
	 (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 99% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;bhdvtsvjhgvrh&quot; was executed 420666 times and
      had an average elapsed time of 0.025 seconds.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER9.CF1&quot; with object ID 73439 consumed
      3% of the database time spent on this SQL statement.

   Recommendation 2: SQL Tuning
   Estimated benefit is 10.12 active sessions, 34.3% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
	 AND (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 82% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 74210 times and
      had an average elapsed time of 0.098 seconds.


Finding 2: &quot;User I/O&quot; wait Class
Impact is 24.37 active sessions, 82.47% of total activity.
----------------------------------------------------------
Wait class &quot;User I/O&quot; was consuming significant database time.
The throughput of the I/O subsystem was not significantly lower than expected.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  54.2	    ADDM:3393773525_1_69
    2	    p30db2  45.8	    ADDM:3393773525_2_69

   No recommendations are available.


Finding 3: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 4.51 active sessions, 15.28% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_69

   Recommendation 1: Segment Tuning
   Estimated benefit is .91 active sessions, 3.08% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER9.CF1&quot; with
      object ID 73439.
      Related Object
	 Database object with ID 73439.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the SELECT statement with
      SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 71% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 202542
      physical reads, 28338 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .91 active sessions, 3.08% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER8.CF1&quot; with
      object ID 73443.
      Related Object
	 Database object with ID 73443.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 169267
      physical reads, 24255 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .91 active sessions, 3.08% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER13.CF1&quot; with
      object ID 73458.
      Related Object
	 Database object with ID 73458.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 224040
      physical reads, 32568 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .89 active sessions, 3.02% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER20.CF1&quot; with
      object ID 73501.
      Related Object
	 Database object with ID 73501.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the SELECT statement with
      SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 78% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 195608
      physical reads, 27146 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .89 active sessions, 3.02% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER24.CF1&quot; with
      object ID 73520.
      Related Object
	 Database object with ID 73520.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 192506
      physical reads, 26756 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 24.33 active sessions, 82.47% of total activity.


Finding 4: Global Cache Messaging
Impact is 1.36 active sessions, 4.59% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  83.84	    ADDM:3393773525_1_69
    2	    p30db2  16.16	    ADDM:3393773525_2_69

   Recommendation 1: Application Analysis
   Estimated benefit is 1.35 active sessions, 4.59% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 69% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is 1.5 active sessions, 5.1% of total activity.


Finding 5: Buffer Busy - Hot Objects
Impact is 1.27 active sessions, 4.31% of total activity.
--------------------------------------------------------
Read and write contention on database blocks was consuming significant
database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  100 	    ADDM:3393773525_1_69

   Recommendation 1: Schema Changes
   Estimated benefit is .15 active sessions, .5% of total activity.
   ----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE &quot;USER16.CF1&quot; with object ID 73481 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73481.

   Recommendation 2: Schema Changes
   Estimated benefit is .12 active sessions, .39% of total activity.
   -----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE &quot;USER1.CF1&quot; with object ID 73402 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73402.

   Recommendation 3: Schema Changes
   Estimated benefit is .1 active sessions, .34% of total activity.
   ----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE &quot;USER15.CF1&quot; with object ID 73472 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73472.

   Recommendation 4: Schema Changes
   Estimated benefit is .08 active sessions, .28% of total activity.
   -----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE &quot;USER12.CF1&quot; with object ID 73464 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73464.

   Recommendation 5: Schema Changes
   Estimated benefit is .08 active sessions, .28% of total activity.
   -----------------------------------------------------------------
   Action
      Consider rebuilding the TABLE &quot;USER27.CF1&quot; with object ID 73535 using a
      higher value for PCTFREE.
      Related Object
	 Database object with ID 73535.

   Symptoms That Led to the Finding:
   ---------------------------------
      Read and write contention on database blocks was consuming significant
      database time.
      Impact is 1.27 active sessions, 4.31% of total activity.
	 Inter-instance messaging was consuming significant database time.
	 Impact is 1.35 active sessions, 4.59% of total activity.
	    Wait class &quot;Cluster&quot; was consuming significant database time.
	    Impact is 1.5 active sessions, 5.1% of total activity.
	 Wait class &quot;Concurrency&quot; was consuming significant database time.
	 Impact is 1.21 active sessions, 4.11% of total activity.


Finding 6: &quot;Other&quot; Wait Class
Impact is .97 active sessions, 3.27% of total activity.
-------------------------------------------------------
Wait class &quot;Other&quot; was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  99.29	    ADDM:3393773525_1_69

   No recommendations are available.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    1	    p30db1  mcracpoc1.example.com  17.52	    59.27
    2	    p30db2  mcracpoc2.example.com  12.04	    40.73

Miscellaneous Information
-------------------------
Wait class &quot;Application&quot; was not consuming significant database time.
Wait class &quot;Commit&quot; was not consuming significant database time.
Wait class &quot;Configuration&quot; was not consuming significant database time.
Wait class &quot;Network&quot; was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

The database&apos;s maintenance windows were active during 100% of the analysis
period.

</pre>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>
Report written to awr_rac.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0
NOTIFY  : 2020.02.08-10:38:05 : Compressing file: "awr.html".
NOTIFY  : 2020.02.08-10:38:05 : Compressing file: "awr_rac.html".
