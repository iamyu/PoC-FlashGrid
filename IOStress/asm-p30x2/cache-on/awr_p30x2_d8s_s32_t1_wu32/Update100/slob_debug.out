


































PL/SQL procedure successfully completed.

PL/SQL procedure successfully completed.PL/SQL procedure successfully completed.




PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.




PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.PL/SQL procedure successfully completed.



PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


SQL*Plus: Release 19.0.0.0.0 - Production on Sat Feb 8 17:43:44 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.


SQL*Plus: Release 19.0.0.0.0 - Production on Sat Feb 8 17:43:44 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.

Last Successful login time: Sat Feb 08 2020 17:43:25 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

Last Successful login time: Sat Feb 08 2020 17:43:25 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5  SQL>   6  SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5    6  
   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		2 p30db2

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> 
   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		2 p30db2

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> 
Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report


Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report






Type Specified: html

Type Specified: text


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using	       2 for instance number
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using	       2 for instance number


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.




Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.



Listing the last day's Completed Snapshots

Listing the last day's Completed Snapshots
Instance     DB Name	  Snap Id	Snap Started	Snap Level
------------ ------------ ---------- ------------------ ----------

p30db2	     P30DB		 48  08 Feb 2020 07:54	  1
				 49  08 Feb 2020 08:04	  1
				 50  08 Feb 2020 08:13	  1
				 51  08 Feb 2020 08:23	  1
				 52  08 Feb 2020 08:25	  1
				 53  08 Feb 2020 08:35	  1
				 54  08 Feb 2020 08:38	  1
				 55  08 Feb 2020 08:48	  1
				 56  08 Feb 2020 08:50	  1
				 57  08 Feb 2020 09:00	  1
				 58  08 Feb 2020 09:03	  1
				 59  08 Feb 2020 09:13	  1
				 60  08 Feb 2020 09:17	  1
				 61  08 Feb 2020 09:27	  1
				 62  08 Feb 2020 09:33	  1
				 63  08 Feb 2020 09:43	  1
				 64  08 Feb 2020 09:53	  1
				 65  08 Feb 2020 10:03	  1
Instance     DB Name	  Snap Id	Snap Started	Snap Level
				 66  08 Feb 2020 10:08	  1
				 67  08 Feb 2020 10:18	  1
------------ ------------ ---------- ------------------ ----------
				 68  08 Feb 2020 10:27	  1

				 69  08 Feb 2020 10:37	  1
p30db2	     P30DB		 48  08 Feb 2020 07:54	  1
				 70  08 Feb 2020 10:44	  1
				 49  08 Feb 2020 08:04	  1
				 71  08 Feb 2020 10:54	  1
				 50  08 Feb 2020 08:13	  1
				 72  08 Feb 2020 11:36	  1
				 51  08 Feb 2020 08:23	  1
				 73  08 Feb 2020 11:46	  1
				 52  08 Feb 2020 08:25	  1
				 74  08 Feb 2020 13:00	  1
				 53  08 Feb 2020 08:35	  1
				 54  08 Feb 2020 08:38	  1
				 55  08 Feb 2020 08:48	  1
				 56  08 Feb 2020 08:50	  1
				 57  08 Feb 2020 09:00	  1
				 58  08 Feb 2020 09:03	  1
				 59  08 Feb 2020 09:13	  1
				 75  08 Feb 2020 14:00	  1
				 76  08 Feb 2020 14:20	  1
				 77  08 Feb 2020 14:30	  1
				 78  08 Feb 2020 15:55	  1
				 79  08 Feb 2020 16:05	  1
				 80  08 Feb 2020 17:00	  1
				 81  08 Feb 2020 17:33	  1
				 82  08 Feb 2020 17:43	  1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 81

				 60  08 Feb 2020 09:17	  1
End   Snapshot Id specified: 82
				 61  08 Feb 2020 09:27	  1

				 62  08 Feb 2020 09:33	  1
				 63  08 Feb 2020 09:43	  1
				 64  08 Feb 2020 09:53	  1
				 65  08 Feb 2020 10:03	  1
				 66  08 Feb 2020 10:08	  1
				 67  08 Feb 2020 10:18	  1
				 68  08 Feb 2020 10:27	  1
				 69  08 Feb 2020 10:37	  1
				 70  08 Feb 2020 10:44	  1
				 71  08 Feb 2020 10:54	  1
				 72  08 Feb 2020 11:36	  1
				 73  08 Feb 2020 11:46	  1
				 74  08 Feb 2020 13:00	  1
				 75  08 Feb 2020 14:00	  1
				 76  08 Feb 2020 14:20	  1
				 77  08 Feb 2020 14:30	  1
				 78  08 Feb 2020 15:55	  1
				 79  08 Feb 2020 16:05	  1
				 80  08 Feb 2020 17:00	  1
				 81  08 Feb 2020 17:33	  1
				 82  08 Feb 2020 17:43	  1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 81

End   Snapshot Id specified: 82




Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_2_81_82.html.  To use this name,
press <return> to continue, otherwise enter an alternative.


Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_2_81_82.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr.html

Using the report name awr.txt

<html lang="en"><head><title>AWR Report for DB: P30DB, Inst: p30db2, Snaps: 81-82</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY report for

</h1>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">DB Name</th><th class="awrbg" scope="col">DB Id</th><th class="awrbg" scope="col">Unique Name</th><th class="awrbg" scope="col">Role</th><th class="awrbg" scope="col">Edition</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">RAC</th><th class="awrbg" scope="col">CDB</th></tr>
<tr><td scope="row" class='awrnc'>P30DB</td><td align="right" class='awrnc'>3393773525</td><td class='awrnc'>p30db</td><td class='awrnc'>PRIMARY</td><td class='awrnc'>EE</td><td class='awrnc'>19.0.0.0.0</td><td class='awrnc'>YES</td><td class='awrnc'>NO</td></tr>
</table>
<p />
<p />
<table border="0" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Inst Num</th><th class="awrbg" scope="col">Startup Time</th></tr>
<tr><td scope="row" class='awrnc'>p30db2</td><td align="right" class='awrnc'>2</td><td class='awrnc'>08-Feb-20 07:52</td></tr>
</table>
<p />
<p />
<table border="0" width="600" class="tdiff" summary="This table displays host information">
<tr><th class="awrbg" scope="col">Host Name</th><th class="awrbg" scope="col">Platform</th><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Memory (GB)</th></tr>
<tr><td scope="row" class='awrnc'>mcracpoc2.example.com</td><td class='awrnc'>Linux x86 64-bit</td><td align="right" class='awrnc'>   8</td><td align="right" class='awrnc'>   4</td><td align="right" class='awrnc'>	1</td><td align="right" class='awrnc'>	 31.40</td></tr>
</table>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays snapshot information">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Snap Id</th><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Sessions</th><th class="awrbg" scope="col">Cursors/Session</th><th class="awrbg" scope="col">Instances</th></tr>
<tr><td scope="row" class='awrnc'>Begin Snap:</td><td align="right" class='awrnc'>81</td><td align="center" class='awrnc'>08-Feb-20 17:33:14</td><td align="right" class='awrnc'>108</td><td align="right" class='awrnc'>      2.0</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>End Snap:</td><td align="right" class='awrc'>82</td><td align="center" class='awrc'>08-Feb-20 17:43:25</td><td align="right" class='awrc'>91</td><td align="right" class='awrc'>      1.5</td><td align="right" class='awrc'>2</td></tr>
<tr><td scope="row" class='awrnc'>Elapsed:</td><td class='awrnc'>&#160;</td><td align="center" class='awrnc'>		   10.19 (mins)</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB Time:</td><td class='awrc'>&#160;</td><td align="center" class='awrc'>	       171.06 (mins)</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>16.80</td><td align="right" class='awrc'>99.62</td><td scope="row" class='awrc'>ADDM:3393773525_2_82</td><td class='awrc'>08-Feb-20 17:33</td><td class='awrc'>08-Feb-20 17:43</td></tr>
<tr><td class='awrnc'>&quot;User I/O&quot; wait Class</td><td align="right" class='awrnc'>16.80</td><td align="right" class='awrnc'>90.88</td><td scope="row" class='awrnc'>ADDM:3393773525_2_82</td><td class='awrnc'>08-Feb-20 17:33</td><td class='awrnc'>08-Feb-20 17:43</td></tr>
<tr><td class='awrc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrc'>16.80</td><td align="right" class='awrc'>27.57</td><td scope="row" class='awrc'>ADDM:3393773525_2_82</td><td class='awrc'>08-Feb-20 17:33</td><td class='awrc'>08-Feb-20 17:43</td></tr>
<tr><td class='awrnc'>Undersized SGA</td><td align="right" class='awrnc'>16.80</td><td align="right" class='awrnc'>8.16</td><td scope="row" class='awrnc'>ADDM:3393773525_2_82</td><td class='awrnc'>08-Feb-20 17:33</td><td class='awrnc'>08-Feb-20 17:43</td></tr>
<tr><td class='awrc'>Global Cache Messaging</td><td align="right" class='awrc'>16.80</td><td align="right" class='awrc'>5.56</td><td scope="row" class='awrc'>ADDM:3393773525_2_82</td><td class='awrc'>08-Feb-20 17:33</td><td class='awrc'>08-Feb-20 17:43</td></tr>
</table><p />
<p />Load Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays load profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th><th class="awrbg" scope="col">Per Exec</th><th class="awrbg" scope="col">Per Call</th></tr>
<tr><td scope="row" class='awrc'>DB Time(s):</td><td align="right" class='awrc'>	      16.8</td><td align="right" class='awrc'>		     0.3</td><td align="right" class='awrc'>	  0.19</td><td align="right" class='awrc'>	9.36</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU(s):</td><td align="right" class='awrnc'>		0.8</td><td align="right" class='awrnc'>	       0.0</td><td align="right" class='awrnc'>      0.01</td><td align="right" class='awrnc'>	    0.42</td></tr>
<tr><td scope="row" class='awrc'>Background CPU(s):</td><td align="right" class='awrc'> 	      0.6</td><td align="right" class='awrc'>		    0.0</td><td align="right" class='awrc'>	 0.01</td><td align="right" class='awrc'>      0.00</td></tr>
<tr><td scope="row" class='awrnc'>Redo size (bytes):</td><td align="right" class='awrnc'>	1,554,927.3</td><td align="right" class='awrnc'>	  25,859.7</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logical read (blocks):</td><td align="right" class='awrc'>	      2,510.2</td><td align="right" class='awrc'>	       41.8</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Block changes:</td><td align="right" class='awrnc'>		3,949.5</td><td align="right" class='awrnc'>		  65.7</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Physical read (blocks):</td><td align="right" class='awrc'>	       1,790.8</td><td align="right" class='awrc'>		29.8</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Physical write (blocks):</td><td align="right" class='awrnc'> 	  1,228.3</td><td align="right" class='awrnc'>		    20.4</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO requests:</td><td align="right" class='awrc'>		 1,789.5</td><td align="right" class='awrc'>		  29.8</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO requests:</td><td align="right" class='awrnc'>	    1,137.9</td><td align="right" class='awrnc'>	      18.9</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO (MB):</td><td align="right" class='awrc'>		14.0</td><td align="right" class='awrc'>	       0.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO (MB):</td><td align="right" class='awrnc'>		    9.6</td><td align="right" class='awrnc'>		   0.2</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM scan rows:</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Session Logical Read IM:</td><td align="right" class='awrnc'> 	      0.0</td><td align="right" class='awrnc'>		     0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Global Cache blocks received:</td><td align="right" class='awrc'>		51.8</td><td align="right" class='awrc'>	       0.9</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Global Cache blocks served:</td><td align="right" class='awrnc'>		12.3</td><td align="right" class='awrnc'>		0.2</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>User calls:</td><td align="right" class='awrc'>	       1.8</td><td align="right" class='awrc'>		     0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parses (SQL):</td><td align="right" class='awrnc'>		   8.2</td><td align="right" class='awrnc'>		  0.1</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Hard parses (SQL):</td><td align="right" class='awrc'> 	      1.6</td><td align="right" class='awrc'>		    0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL Work Area (MB):</td><td align="right" class='awrnc'>		 0.6</td><td align="right" class='awrnc'>		0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logons:</td><td align="right" class='awrc'>		   0.3</td><td align="right" class='awrc'>		 0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>User logons:</td><td align="right" class='awrnc'>		  0.0</td><td align="right" class='awrnc'>		 0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Executes (SQL):</td><td align="right" class='awrc'>		  89.2</td><td align="right" class='awrc'>		 1.5</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Rollbacks:</td><td align="right" class='awrnc'>		0.0</td><td align="right" class='awrnc'>	       0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Transactions:</td><td align="right" class='awrc'>		60.1</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
Instance Efficiency Percentages (Target 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays instance efficiency percentages">
<tr><td scope="row" class='awrc'>Buffer Nowait %:</td><td align="right" class='awrc'>		100.00</td><td class='awrc'>Redo NoWait %:</td><td align="right" class='awrc'>		 100.00</td></tr>
<tr><td scope="row" class='awrnc'>Buffer  Hit	%:</td><td align="right" class='awrnc'> 	   28.62</td><td class='awrnc'>In-memory Sort %:</td><td align="right" class='awrnc'>		100.00</td></tr>
<tr><td scope="row" class='awrc'>Library Hit   %:</td><td align="right" class='awrc'>		 94.97</td><td class='awrc'>Soft Parse %:</td><td align="right" class='awrc'>		 80.27</td></tr>
<tr><td scope="row" class='awrnc'>Execute to Parse %:</td><td align="right" class='awrnc'>	      90.82</td><td class='awrnc'>Latch Hit %:</td><td align="right" class='awrnc'>	       99.98</td></tr>
<tr><td scope="row" class='awrc'>Parse CPU to Parse Elapsd %:</td><td align="right" class='awrc'>	     32.25</td><td class='awrc'>% Non-Parse CPU:</td><td align="right" class='awrc'>		99.70</td></tr>
<tr><td scope="row" class='awrnc'>Flash Cache Hit %:</td><td align="right" class='awrnc'>	      0.00</td></tr>
</table>

<p />Top 10 Foreground Events by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top 10 wait events by total wait time"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Wait Class</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>1,091,168</td><td align="right" class='awrc'>9327.2</td><td align="right" class='awrc'>8.55ms</td><td align="right" class='awrc'>90.9</td><td class='awrc'>User I/O</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>674,859</td><td align="right" class='awrnc'>468.3</td><td align="right" class='awrnc'>693.86us</td><td align="right" class='awrnc'>4.6</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>DB CPU</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>464.3</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>4.5</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>53,538</td><td align="right" class='awrnc'>76.6</td><td align="right" class='awrnc'>1.43ms</td><td align="right" class='awrnc'>.7</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>47,389</td><td align="right" class='awrc'>64.3</td><td align="right" class='awrc'>1.36ms</td><td align="right" class='awrc'>.6</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>18,348</td><td align="right" class='awrnc'>19.5</td><td align="right" class='awrnc'>1.06ms</td><td align="right" class='awrnc'>.2</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>buffer exterminate</td><td align="right" class='awrc'>926</td><td align="right" class='awrc'>9.2</td><td align="right" class='awrc'>9.95ms</td><td align="right" class='awrc'>.1</td><td class='awrc'>Other</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>10,251</td><td align="right" class='awrnc'>7.3</td><td align="right" class='awrnc'>713.45us</td><td align="right" class='awrnc'>.1</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>1,176</td><td align="right" class='awrc'>6.5</td><td align="right" class='awrc'>5.54ms</td><td align="right" class='awrc'>.1</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current block lost</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>2.3</td><td align="right" class='awrnc'>458.50ms</td><td align="right" class='awrnc'>.0</td><td class='awrnc'>Cluster</td></tr>
</table><p />
<p />Wait Classes by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays wait class statistics ordered by total wait time"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait Time</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>1,149,813</td><td align="right" class='awrc'>9,343</td><td align="right" class='awrc'>8.13ms</td><td align="right" class='awrc'>91.0</td><td align="right" class='awrc'>15.3</td></tr>
<tr><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>131,350</td><td align="right" class='awrnc'>754</td><td align="right" class='awrnc'>5.74ms</td><td align="right" class='awrnc'>7.3</td><td align="right" class='awrnc'>1.2</td></tr>
<tr><td scope="row" class='awrc'>Cluster</td><td align="right" class='awrc'>811,102</td><td align="right" class='awrc'>656</td><td align="right" class='awrc'>809.27us</td><td align="right" class='awrc'>6.4</td><td align="right" class='awrc'>1.1</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>464</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>4.5</td><td align="right" class='awrnc'>0.8</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>62,289</td><td align="right" class='awrc'>176</td><td align="right" class='awrc'>2.82ms</td><td align="right" class='awrc'>1.7</td><td align="right" class='awrc'>0.3</td></tr>
<tr><td scope="row" class='awrnc'>Application</td><td align="right" class='awrnc'>296</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>52.37ms</td><td align="right" class='awrnc'>.2</td><td align="right" class='awrnc'>0.0</td></tr>
<tr><td scope="row" class='awrc'>Commit</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>60.32ms</td><td align="right" class='awrc'>.0</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Concurrency</td><td align="right" class='awrnc'>1,289</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>136.42us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
<tr><td scope="row" class='awrc'>Network</td><td align="right" class='awrc'>652</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>54.98us</td><td align="right" class='awrc'>.0</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Configuration</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>940.00us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
</table><p />

Host CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays system load statistics">
<tr><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Load Average Begin</th><th class="awrbg" scope="col">Load Average End</th><th class="awrbg" scope="col">%User</th><th class="awrbg" scope="col">%System</th><th class="awrbg" scope="col">%WIO</th><th class="awrbg" scope="col">%Idle</th></tr>
<tr><td align="right" class='awrc'>    8</td><td align="right" class='awrc'>	4</td><td align="right" class='awrc'>	 1</td><td align="right" class='awrc'>	 7.99</td><td align="right" class='awrc'>  10.54</td><td align="right" class='awrc'>   7.2</td><td align="right" class='awrc'>	14.2</td><td align="right" class='awrc'>  57.0</td><td align="right" class='awrc'>  70.5</td></tr>
</table>
<p />
Instance CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays CPU usage and wait statistics">
<tr><th class="awrbg" scope="col">%Total CPU</th><th class="awrbg" scope="col">%Busy CPU</th><th class="awrbg" scope="col">%DB time waiting for CPU (Resource Manager)</th></tr>
<tr><td align="right" class='awrc'>	 17.8</td><td align="right" class='awrc'>      60.2</td><td align="right" class='awrc'>       0.0</td></tr>
</table>
<p />IO Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays IO profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Read+Write Per Second</th><th class="awrbg" scope="col">Read per Second</th><th class="awrbg" scope="col">Write Per Second</th></tr>
<tr><td scope="row" class='awrc'>Total Requests:</td><td align="right" class='awrc'>	       3,092.5</td><td align="right" class='awrc'>	     1,798.2</td><td align="right" class='awrc'>	   1,294.3</td></tr>
<tr><td scope="row" class='awrnc'>Database Requests:</td><td align="right" class='awrnc'>	    2,927.4</td><td align="right" class='awrnc'>	   1,789.5</td><td align="right" class='awrnc'> 	  1,137.9</td></tr>
<tr><td scope="row" class='awrc'>Optimized Requests:</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td><td align="right" class='awrc'>		   0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo Requests:</td><td align="right" class='awrnc'>		  156.5</td><td align="right" class='awrnc'>		   2.7</td><td align="right" class='awrnc'>		153.8</td></tr>
<tr><td scope="row" class='awrc'>Total (MB):</td><td align="right" class='awrc'>	      29.1</td><td align="right" class='awrc'>		    16.4</td><td align="right" class='awrc'>		  12.7</td></tr>
<tr><td scope="row" class='awrnc'>Database (MB):</td><td align="right" class='awrnc'>		   23.6</td><td align="right" class='awrnc'>		  14.0</td><td align="right" class='awrnc'>		  9.6</td></tr>
<tr><td scope="row" class='awrc'>Optimized Total (MB):</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo (MB):</td><td align="right" class='awrnc'>		5.3</td><td align="right" class='awrnc'>	       2.3</td><td align="right" class='awrnc'> 	      3.1</td></tr>
<tr><td scope="row" class='awrc'>Database (blocks):</td><td align="right" class='awrc'> 	  3,019.1</td><td align="right" class='awrc'>		1,790.8</td><td align="right" class='awrc'>	      1,228.3</td></tr>
<tr><td scope="row" class='awrnc'>Via Buffer Cache (blocks):</td><td align="right" class='awrnc'>	    3,017.5</td><td align="right" class='awrnc'>	   1,790.7</td><td align="right" class='awrnc'> 	  1,226.8</td></tr>
<tr><td scope="row" class='awrc'>Direct (blocks):</td><td align="right" class='awrc'>		    1.6</td><td align="right" class='awrc'>		  0.1</td><td align="right" class='awrc'>		1.5</td></tr>
</table>
<p />
Memory Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays memory statistics">
<tr><th class="awrbg" scope="col"> </th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Host Mem (MB):</td><td align="right" class='awrc'>    32,156.0</td><td align="right" class='awrc'>    32,156.0</td></tr>
<tr><td scope="row" class='awrnc'>SGA use (MB):</td><td align="right" class='awrnc'>	 9,664.0</td><td align="right" class='awrnc'>	  9,664.0</td></tr>
<tr><td scope="row" class='awrc'>PGA use (MB):</td><td align="right" class='awrc'>     1,393.6</td><td align="right" class='awrc'>     1,312.5</td></tr>
<tr><td scope="row" class='awrc'>% Host Mem used for SGA+PGA:</td><td align="right" class='awrc'>   34.39</td><td align="right" class='awrc'>	34.14</td></tr>
</table>
<p />
Cache Sizes
<p />
<table border="0" width="600" class="tdiff" summary="This table displays cache sizes and other statistics for
		    different types of cache">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th><th class="awrnobg" scope="col"></th></tr>
<tr><td scope="row" class='awrnc'>Buffer Cache:</td><td align="right" class='awrnc'>	 7,872M</td><td align="right" class='awrnc'>	 7,840M</td><td class='awrnc'>Std Block Size:</td><td align="right" class='awrnc'>	   8K</td></tr>
<tr><td scope="row" class='awrc'>Shared Pool Size:</td><td align="right" class='awrc'>	   1,188M</td><td align="right" class='awrc'>	  1,236M</td><td class='awrc'>Log Buffer:</td><td align="right" class='awrc'>	 20,612K</td></tr>
<tr><td scope="row" class='awrnc'>In-Memory Area:</td><td align="right" class='awrnc'>	       0M</td><td align="right" class='awrnc'>	       0M</td></tr>
</table>
<p />
Shared Pool Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays shared pool statistics">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Memory Usage %:</td><td align="right" class='awrc'>		91.20</td><td align="right" class='awrc'>	     67.40</td></tr>
<tr><td scope="row" class='awrnc'>% SQL with executions&gt;1:</td><td align="right" class='awrnc'>	      86.88</td><td align="right" class='awrnc'>	    66.20</td></tr>
<tr><td scope="row" class='awrc'>% Memory for SQL w/exec&gt;1:</td><td align="right" class='awrc'>	      91.64</td><td align="right" class='awrc'> 	   40.96</td></tr>
</table>
<p />
<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#21">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#22">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#23">Instance Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#24">IO Stats</a></li>
<li class="awr"><a class="awr" href="#25">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#26">Advisory Statistics</a></li>
<li class="awr"><a class="awr" href="#27">Wait Statistics</a></li>
<li class="awr"><a class="awr" href="#28">Undo Statistics</a></li>
<li class="awr"><a class="awr" href="#29">Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#30">Segment Statistics</a></li>
<li class="awr"><a class="awr" href="#31">Dictionary Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#32">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#33">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#39">Replication Statistics (GoldenGate, XStream)</a></li>
<li class="awr"><a class="awr" href="#34">Advanced Queuing</a></li>
<li class="awr"><a class="awr" href="#6700">Resource Limit Statistics</a></li>
<li class="awr"><a class="awr" href="#37">Shared Server Statistics</a></li>
<li class="awr"><a class="awr" href="#36">Initialization Parameters</a></li>
<li class="awr"><a class="awr" href="#42">Active Session History (ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99995">ADDM Reports</a></li>
</ul>
<h2 class="awr">
RAC Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<p />
<a class="awr" name="21"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1500">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#1600">Operating System Statistics</a></li>
<li class="awr"><a class="awr" href="#1610">Operating System Statistics - Detail</a></li>
<li class="awr"><a class="awr" href="#210">Foreground Wait Class</a></li>
<li class="awr"><a class="awr" href="#100">Foreground Wait Events</a></li>
<li class="awr"><a class="awr" href="#300">Background Wait Events</a></li>
<li class="awr"><a class="awr" href="#7400">Wait Event Histogram</a></li>
<li class="awr"><a class="awr" href="#7405">Wait Event Histogram (up to 64 us)</a></li>
<li class="awr"><a class="awr" href="#7410">Wait Event Histogram (up to 32 ms)</a></li>
<li class="awr"><a class="awr" href="#7420">Wait Event Histogram (up to 2 sec)</a></li>
<li class="awr"><a class="awr" href="#7430">Wait Event Histogram (up to 2 min)</a></li>
<li class="awr"><a class="awr" href="#7440">Wait Event Histogram (up to 1 hr)</a></li>
<li class="awr"><a class="awr" href="#5800">Service Statistics</a></li>
<li class="awr"><a class="awr" href="#5820">Service Wait Class Stats</a></li>
<li class="awr"><a class="awr" href="#5840">Top 10 Channel Waits</a></li>
<li class="awr"><a class="awr" href="#2310">Top Process Types by Wait Class</a></li>
<li class="awr"><a class="awr" href="#2320">Top Process Types by CPU Used</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1500"></a>
<h3 class="awr">Time Model Statistics</h3>
<ul>
<li class="awr">DB Time represents total time in user calls</li>
<li class="awr">DB CPU represents CPU time of foreground processes</li>
<li class="awr">Total CPU Time represents foreground and background processes</li>
<li class="awr">Statistics including the word "background" measure background process
   time, therefore do not contribute to the DB time statistic</li>
<li class="awr">Ordered by % of DB time in descending order, followed by Statistic Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays different time model statistics. For each statistic, time and % of DB time are displayed"><tr><th class="awrbg" scope="col">Statistic Name</th><th class="awrbg" scope="col">Time (s)</th><th class="awrbg" scope="col">% of  DB Time</th><th class="awrbg" scope="col">% of Total CPU Time</th></tr>
<tr><td scope="row" class='awrc'>sql execute elapsed time</td><td align="right" class='awrc'>10,260.82</td><td align="right" class='awrc'>99.97</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>464.29</td><td align="right" class='awrnc'>4.52</td><td align="right" class='awrnc'>58.09</td></tr>
<tr><td scope="row" class='awrc'>parse time elapsed</td><td align="right" class='awrc'>5.86</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>hard parse elapsed time</td><td align="right" class='awrnc'>5.67</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PL/SQL execution elapsed time</td><td align="right" class='awrc'>2.68</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>hard parse (sharing criteria) elapsed time</td><td align="right" class='awrnc'>1.90</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hard parse (bind mismatch) elapsed time</td><td align="right" class='awrc'>1.73</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PL/SQL compilation elapsed time</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>repeated bind elapsed time</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>connection management call elapsed time</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB time</td><td align="right" class='awrc'>10,263.44</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>background elapsed time</td><td align="right" class='awrnc'>1,242.54</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>background cpu time</td><td align="right" class='awrc'>334.94</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>41.91</td></tr>
<tr><td scope="row" class='awrnc'>total CPU time</td><td align="right" class='awrnc'>799.23</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1600"></a>
<h3 class="awr">Operating System Statistics</h3>
<ul>
<li class="awr"> *TIME statistic values are diffed.	 All others display actual values.  End Value is displayed if different </li>
<li class="awr"> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays operating systems statistics. For each statistic, actual value is displayed. If the end value is different, it is also displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>FREE_MEMORY_BYTES</td><td align="right" class='awrc'>5,703,483,392</td><td align="right" class='awrc'>5,836,189,696</td></tr>
<tr><td scope="row" class='awrnc'>INACTIVE_MEMORY_BYTES</td><td align="right" class='awrnc'>1,445,244,928</td><td align="right" class='awrnc'>1,446,404,096</td></tr>
<tr><td scope="row" class='awrc'>BUSY_TIME</td><td align="right" class='awrc'>132,731</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IDLE_TIME</td><td align="right" class='awrnc'>316,853</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IOWAIT_TIME</td><td align="right" class='awrc'>256,214</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SYS_TIME</td><td align="right" class='awrnc'>63,894</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>USER_TIME</td><td align="right" class='awrc'>32,149</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LOAD</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>11</td></tr>
<tr><td scope="row" class='awrc'>RSRC_MGR_CPU_WAIT_TIME</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PHYSICAL_MEMORY_BYTES</td><td align="right" class='awrnc'>33,717,977,088</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>NUM_CPUS</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>NUM_CPU_CORES</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>NUM_CPU_SOCKETS</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GLOBAL_RECEIVE_SIZE_MAX</td><td align="right" class='awrnc'>4,194,304</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GLOBAL_SEND_SIZE_MAX</td><td align="right" class='awrc'>1,048,576</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_RECEIVE_SIZE_DEFAULT</td><td align="right" class='awrnc'>87,380</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_RECEIVE_SIZE_MAX</td><td align="right" class='awrc'>6,291,456</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_RECEIVE_SIZE_MIN</td><td align="right" class='awrnc'>4,096</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_SEND_SIZE_DEFAULT</td><td align="right" class='awrc'>16,384</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_SEND_SIZE_MAX</td><td align="right" class='awrnc'>4,194,304</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_SEND_SIZE_MIN</td><td align="right" class='awrc'>4,096</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1610"></a>
<h3 class="awr">Operating System Statistics - Detail</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays some detailed operating systems statistics. load, % busy , % user, % sys, % idle, % iowait are displayed for begin and end snap time"><tr><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Load</th><th class="awrbg" scope="col">%busy</th><th class="awrbg" scope="col">%user</th><th class="awrbg" scope="col">%sys</th><th class="awrbg" scope="col">%idle</th><th class="awrbg" scope="col">%iowait</th></tr>
<tr><td scope="row" class='awrc'>08-Feb 17:33:14</td><td align="right" class='awrc'>7.99</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>08-Feb 17:43:25</td><td align="right" class='awrnc'>10.54</td><td align="right" class='awrnc'>29.52</td><td align="right" class='awrnc'>7.15</td><td align="right" class='awrnc'>14.21</td><td align="right" class='awrnc'>70.48</td><td align="right" class='awrnc'>56.99</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="210"></a>
<h3 class="awr">Foreground Wait Class</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> ordered by wait time desc, waits desc </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
<li class="awr">Captured Time accounts for	  101.8%  of Total DB time	10,263.44 (s)</li>
<li class="awr">Total FG Wait Time:		9,986.58 (s)  DB CPU time:	   464.29 (s)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait class statistics"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">%DB time</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>1,091,181</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>9,327</td><td align="right" class='awrc'>8.55ms</td><td align="right" class='awrc'>90.88</td></tr>
<tr><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>807,605</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>648</td><td align="right" class='awrnc'>801.79us</td><td align="right" class='awrnc'>6.31</td></tr>
<tr><td scope="row" class='awrc'>DB CPU</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>464</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>4.52</td></tr>
<tr><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>3,075</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>3.48ms</td><td align="right" class='awrnc'>0.10</td></tr>
<tr><td scope="row" class='awrc'>Commit</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>60.32ms</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Application</td><td align="right" class='awrnc'>122</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>80.60us</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Concurrency</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>645.67us</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>206.00us</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Network</td><td align="right" class='awrc'>163</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5.99us</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Configuration</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="100"></a>
<h3 class="awr">Foreground Wait Events</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Foreground Wait Events and their wait statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% DB time</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>1,091,168</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>9,327</td><td align="right" class='awrc'>8.55ms</td><td align="right" class='awrc'>29.69</td><td align="right" class='awrc'>90.88</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>674,859</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>468</td><td align="right" class='awrnc'>693.86us</td><td align="right" class='awrnc'>18.36</td><td align="right" class='awrnc'>4.56</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>53,538</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>77</td><td align="right" class='awrc'>1.43ms</td><td align="right" class='awrc'>1.46</td><td align="right" class='awrc'>0.75</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>47,389</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>1.36ms</td><td align="right" class='awrnc'>1.29</td><td align="right" class='awrnc'>0.63</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>18,348</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>1.06ms</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>0.19</td></tr>
<tr><td scope="row" class='awrnc'>buffer exterminate</td><td align="right" class='awrnc'>926</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>9.95ms</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>10,251</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>713.45us</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>1,176</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>5.54ms</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gc current block lost</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>458.50ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>1,720</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>708.39us</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc current block congested</td><td align="right" class='awrc'>77</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>15.52ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>60.32ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs drm freeze in enter server mode</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>94.20ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>1,043</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>409.40us</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>223</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.12ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>172</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.22ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>kksfbc child completion</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>49.65ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>275.58us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>72</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>362.67us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc remaster</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8.39ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>433.70us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>39</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>478.64us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8.01ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>812.13us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant congested</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3.79ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net break/reset to client</td><td align="right" class='awrnc'>122</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>80.60us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: TO - contention</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.08ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>279</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>28.23us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>304.14us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.05ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.17ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.37ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>library cache lock</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.28ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>206.00us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>897.25us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>library cache pin</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>576.80us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>315.11us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX qref latch</td><td align="right" class='awrnc'>157</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>17.97us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current retry</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>938.33us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>662.33us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>46</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>41.70us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: undo global data</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>420.00us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>408.33us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>db file scattered read</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>359.67us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: shared pool</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>535.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>watchdog main loop</td><td align="right" class='awrnc'>815</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>2,448</td><td align="right" class='awrnc'>3003.69ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message from client</td><td align="right" class='awrc'>158</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>610</td><td align="right" class='awrc'>3861.37ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execution Msg</td><td align="right" class='awrnc'>516</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>9.37ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Msg Fragment</td><td align="right" class='awrc'>296</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>630.75us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq Credit: send blkd</td><td align="right" class='awrnc'>129</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.27ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq Credit: need buffer</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>572.29us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="300"></a>
<h3 class="awr">Background Wait Events</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait events statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% bg time</th></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>27,770</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>635</td><td align="right" class='awrc'>22.86ms</td><td align="right" class='awrc'>0.76</td><td align="right" class='awrc'>51.10</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>8,968</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>118</td><td align="right" class='awrnc'>13.13ms</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>9.48</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>49,446</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>111</td><td align="right" class='awrc'>2.24ms</td><td align="right" class='awrc'>1.35</td><td align="right" class='awrc'>8.89</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>3,043</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>6.34ms</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>1.55</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>172</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>85.60ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>1.18</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2,051</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>3.95ms</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.65</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>223</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>29.61ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.53</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>363</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>13.30ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.39</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>281</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>15.76ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.36</td></tr>
<tr><td scope="row" class='awrnc'>SGA: allocation forcing component growth</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>534.76ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.26</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>856</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3.64ms</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.25</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>1,658</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>1.86ms</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.25</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>3,447</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>882.47us</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.24</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>1,830</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>1.31ms</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.19</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>2,374</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>932.55us</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.18</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>3,568</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>549.06us</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.16</td></tr>
<tr><td scope="row" class='awrc'>Parameter File I/O</td><td align="right" class='awrc'>56</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>33.18ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.15</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>37.24ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.15</td></tr>
<tr><td scope="row" class='awrc'>ASM IO for non-blocking poll</td><td align="right" class='awrc'>54,991</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>29.26us</td><td align="right" class='awrc'>1.50</td><td align="right" class='awrc'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>1,727</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>688.81us</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.10</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>553</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>2.11ms</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>253</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.30ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>16.51ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>direct path write temp</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>15.51ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>113.67ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>385.13ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy acquire</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>232.25ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>335</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1.90ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>16,831</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>27.47us</td><td align="right" class='awrc'>0.46</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>49,812</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8.92us</td><td align="right" class='awrnc'>1.36</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>687</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>559.36us</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>34.24ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>ges message buffer allocation</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>299.75ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>2,126</td><td align="right" class='awrnc'>98</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>132.53us</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>376</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>688.50us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6.36ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>6,693</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28.31us</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>213</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>858.91us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>6,100</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>29.36us</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>294</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>556.36us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>578</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>258.39us</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>296</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>459.18us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>626</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>193.33us</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>77</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.44ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs remastering wait for read latch</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>25.20ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>171</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>535.53us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>27.82ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>784</td><td align="right" class='awrnc'>78</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>104.17us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.17ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>96</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>749.36us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>335</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>204.44us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>334.29us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>96</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>663.91us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>direct path write</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8.71ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>187</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>270.38us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5.78ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>755.03us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>read by other session</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>19.38ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>471</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>73.83us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>1,203</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>28.52us</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>direct path read</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>429.92us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data query</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.46ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>69</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>350.28us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>591.55us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>row cache lock</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.32ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: TO - contention</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>799.35us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>335</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>54.26us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>870.20us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data update</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>863.75us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: CO - master slave det</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.31ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>666.79us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>47</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>258.94us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>928.17us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current multi block request</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>866.00us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block grant</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.04ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>357.17us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: WT - contention</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.01ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>1,066</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6.70us</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>os thread creation</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.29ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>163</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>40.65us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>421.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.77ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.14ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: RA - RT ADDM flood control</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>727.50us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: PE - contention</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.18ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>529.50us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>rdbms ipc message</td><td align="right" class='awrc'>52,990</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>13,423</td><td align="right" class='awrc'>253.32ms</td><td align="right" class='awrc'>1.44</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Idle Wait</td><td align="right" class='awrnc'>172</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10,375</td><td align="right" class='awrnc'>60.32 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Space Manager: slave idle wait</td><td align="right" class='awrc'>2,582</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>9,735</td><td align="right" class='awrc'>3770.32ms</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>class slave wait</td><td align="right" class='awrnc'>8,091</td><td align="right" class='awrnc'>75</td><td align="right" class='awrnc'>4,817</td><td align="right" class='awrnc'>595.38ms</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>wait for unread message on broadcast channel</td><td align="right" class='awrc'>938</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>1,834</td><td align="right" class='awrc'>1954.74ms</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pmon timer</td><td align="right" class='awrnc'>408</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>1,224</td><td align="right" class='awrnc'>2999.93ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges remote message</td><td align="right" class='awrc'>18,684</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,221</td><td align="right" class='awrc'>65.37ms</td><td align="right" class='awrc'>0.51</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR sleep</td><td align="right" class='awrnc'>4,068</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,221</td><td align="right" class='awrnc'>300.14ms</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DIAG idle wait</td><td align="right" class='awrc'>7,699</td><td align="right" class='awrc'>83</td><td align="right" class='awrc'>1,220</td><td align="right" class='awrc'>158.40ms</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs yield cpu</td><td align="right" class='awrnc'>41,420</td><td align="right" class='awrnc'>99</td><td align="right" class='awrnc'>1,218</td><td align="right" class='awrnc'>29.42ms</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remote message</td><td align="right" class='awrc'>823,655</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,116</td><td align="right" class='awrc'>1.36ms</td><td align="right" class='awrc'>22.41</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group idle</td><td align="right" class='awrnc'>11,050</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>827</td><td align="right" class='awrnc'>74.86ms</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>616</td><td align="right" class='awrc'>13.69 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>616</td><td align="right" class='awrnc'>26.78 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM cluster membership changes</td><td align="right" class='awrc'>350</td><td align="right" class='awrc'>83</td><td align="right" class='awrc'>613</td><td align="right" class='awrc'>1750.36ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM background timer</td><td align="right" class='awrnc'>2,242</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>612</td><td align="right" class='awrnc'>273.02ms</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OFS idle</td><td align="right" class='awrc'>204</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>612</td><td align="right" class='awrc'>2999.99ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pman timer</td><td align="right" class='awrnc'>204</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>612</td><td align="right" class='awrnc'>2999.67ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat redo informer</td><td align="right" class='awrc'>611</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>611</td><td align="right" class='awrc'>1000.14ms</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>611</td><td align="right" class='awrnc'>61.10 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SCM slave idle</td><td align="right" class='awrc'>6,131</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>611</td><td align="right" class='awrc'>99.61ms</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PING</td><td align="right" class='awrnc'>557</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>610</td><td align="right" class='awrnc'>1095.68ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lreg timer</td><td align="right" class='awrc'>203</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>610</td><td align="right" class='awrc'>3002.62ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher timer</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>60.01 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQPC idle</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>30.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Gap Manager</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>60.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Data Guard: Timer</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>600.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>smon timer</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>300.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Parse Reply</td><td align="right" class='awrc'>335</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>17.99ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execute Reply</td><td align="right" class='awrnc'>710</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>936.29us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq Credit: send blkd</td><td align="right" class='awrc'>296</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>695.84us</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>RMA: IPC0 completion sync</td><td align="right" class='awrnc'>667</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>21.96us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message from client</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>758.61us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7400"></a>
<h3 class="awr">Wait Event Histogram</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (idle events last)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Total Waits</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&lt;128us">&lt;128us</th><th class="awrbg" scope="col" id="&lt;256us">&lt;256us</th><th class="awrbg" scope="col" id="&lt;512us">&lt;512us</th><th class="awrbg" scope="col" id="&gt;=512us">&gt;=512us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>6091</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>81.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>56.3K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>70.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>15.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.5</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>3443</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>14.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>14.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>17.7</td></tr>
<tr><td scope="row" class='awrnc'>AWR Flush</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>6685</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>70.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data query</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>94.4</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data update</td><td align="right" class='awrc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>95.0</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>294</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>58.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>40.8</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>69</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>21.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>65.2</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>862</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>582</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>16.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>49.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>22.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>8.4</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group query</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group update</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>94.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>1830</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>20.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>13.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>30.5</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>474</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>16.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>38.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>35.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.4</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>798</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>65.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>5.6</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>3162</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>23.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>19.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>18.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>20.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>7.7</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>1658</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>14.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>12.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>19.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>39.2</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>226</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>8968</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>97.0</td></tr>
<tr><td scope="row" class='awrc'>LGWR wait for redo copy</td><td align="right" class='awrc'>199</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>24.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>17.6</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>3043</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>94.5</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>442</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>34.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>36.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>335</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>97.0</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>335</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>66.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.9</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>507</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>11.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>13.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>38.1</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>16.9K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>66.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>PX qref latch</td><td align="right" class='awrnc'>159</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>56.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>39.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Parameter File I/O</td><td align="right" class='awrc'>56</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>19.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>67.9</td></tr>
<tr><td scope="row" class='awrnc'>SGA: allocation forcing component growth</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net break/reset to client</td><td align="right" class='awrc'>122</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>41.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>39.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>1.6</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message to client</td><td align="right" class='awrnc'>176</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>90.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>54</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>48.1</td></tr>
<tr><td scope="row" class='awrnc'>asynch descriptor resize</td><td align="right" class='awrnc'>22</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>72.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>buffer exterminate</td><td align="right" class='awrc'>926</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>99.8</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>281</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>3597</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>35.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>27.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>11.4</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>51K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>92.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.1</td></tr>
<tr><td scope="row" class='awrc'>db file parallel read</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>50.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>15.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>13.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>54.0</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>37</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>16.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>43.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>40.5</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>1.1M</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>18.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>80.9</td></tr>
<tr><td scope="row" class='awrc'>direct path read</td><td align="right" class='awrc'>64</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>14.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>28.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>7.8</td></tr>
<tr><td scope="row" class='awrnc'>direct path write</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>direct path write temp</td><td align="right" class='awrc'>52</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: AF - task serialization</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>49</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>93.9</td></tr>
<tr><td scope="row" class='awrnc'>enq: CO - master slave det</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>90.0</td></tr>
<tr><td scope="row" class='awrc'>enq: FB - contention</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: HW - contention</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>30.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>69.2</td></tr>
<tr><td scope="row" class='awrc'>enq: PE - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: PG - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>218</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>21.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>64.2</td></tr>
<tr><td scope="row" class='awrnc'>enq: RA - RT ADDM flood control</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>172</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>93.6</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TK - Auto Task Serialization</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TO - contention</td><td align="right" class='awrc'>32</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>93.8</td></tr>
<tr><td scope="row" class='awrnc'>enq: TT - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>15.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>85.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: WT - contention</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy acquire</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>399</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>38.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>56.9</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>2406</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>44.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.7</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>265</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>15.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>84.5</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block grant</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>87.5</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block mixed</td><td align="right" class='awrnc'>81</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>95.1</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>20.2K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>13.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>86.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>10.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>37.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>62.0</td></tr>
<tr><td scope="row" class='awrc'>gc current block congested</td><td align="right" class='awrc'>85</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current block lost</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>669.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>40.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>56.1</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>47.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>7.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>91.8</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>1167</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>53.2K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>98.3</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current retry</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc remaster</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gcs drm freeze in enter server mode</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>1974</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>13.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>40.0</td></tr>
<tr><td scope="row" class='awrnc'>gcs remastering wait for read latch</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>ges enter server mode</td><td align="right" class='awrc'>111</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>73.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>22.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges ipc enter server mode</td><td align="right" class='awrnc'>135</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>95.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrc'>37</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>8.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>89.2</td></tr>
<tr><td scope="row" class='awrnc'>ges message buffer allocation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>296</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>37.8</td></tr>
<tr><td scope="row" class='awrnc'>kksfbc child completion</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>1203</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>84.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>696</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>23.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>43.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>5.6</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>56</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>1.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>16.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>21.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>12.5</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>20.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>23</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>34.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>17.4</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>62</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>16.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>19.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>14.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>24.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>19.4</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>233</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>23.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>17.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>14.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>18.0</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>168</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>22.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>23.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>12.5</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: shared pool</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>33.3</td></tr>
<tr><td scope="row" class='awrc'>latch: undo global data</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>25.0</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>1076</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>93.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache load lock</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>104</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>79.8</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>105</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>59.0</td></tr>
<tr><td scope="row" class='awrnc'>lock deadlock retry</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>27.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>552</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>13.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>60.5</td></tr>
<tr><td scope="row" class='awrc'>log file sync</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>oracle thread bootstrap</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>os thread creation</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>read by other session</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>253</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>99.6</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>23</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>undo_retention publish retry</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AQPC idle</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>ASM background timer</td><td align="right" class='awrc'>2238</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>87.7</td></tr>
<tr><td scope="row" class='awrnc'>ASM cluster membership changes</td><td align="right" class='awrnc'>348</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>DIAG idle wait</td><td align="right" class='awrc'>7664</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>95.1</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Gap Manager</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>Data Guard: Timer</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>GCR sleep</td><td align="right" class='awrnc'>4062</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group idle</td><td align="right" class='awrc'>11.1K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>5.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>9.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>66.2</td></tr>
<tr><td scope="row" class='awrnc'>OFS idle</td><td align="right" class='awrnc'>203</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>PING</td><td align="right" class='awrc'>557</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>19.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>21.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>14.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>34.3</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq Credit: need buffer</td><td align="right" class='awrnc'>17</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>29.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>17.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>47.1</td></tr>
<tr><td scope="row" class='awrc'>PX Deq Credit: send blkd</td><td align="right" class='awrc'>425</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>25.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>70.1</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execute Reply</td><td align="right" class='awrnc'>710</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>25.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>10.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>22.7</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Execution Msg</td><td align="right" class='awrc'>516</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>17.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>80.4</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Msg Fragment</td><td align="right" class='awrnc'>296</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>12.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>14.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>61.1</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Parse Reply</td><td align="right" class='awrc'>335</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>88.1</td></tr>
<tr><td scope="row" class='awrnc'>PX Idle Wait</td><td align="right" class='awrnc'>172</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>RMA: IPC0 completion sync</td><td align="right" class='awrnc'>664</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>35.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>55.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SCM slave idle</td><td align="right" class='awrc'>6123</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>99.8</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message from client</td><td align="right" class='awrnc'>176</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>62.5</td></tr>
<tr><td scope="row" class='awrc'>Space Manager: slave idle wait</td><td align="right" class='awrc'>2581</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>96.9</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrnc'>45</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>2.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>31.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>48.9</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrc'>23</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>4.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>95.7</td></tr>
<tr><td scope="row" class='awrnc'>class slave wait</td><td align="right" class='awrnc'>8079</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>86.9</td></tr>
<tr><td scope="row" class='awrc'>dispatcher timer</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gcs remote message</td><td align="right" class='awrnc'>817.4K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>17.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>48.9</td></tr>
<tr><td scope="row" class='awrc'>gcs yield cpu</td><td align="right" class='awrc'>41.4K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>98.5</td></tr>
<tr><td scope="row" class='awrnc'>ges remote message</td><td align="right" class='awrnc'>18.8K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>91.4</td></tr>
<tr><td scope="row" class='awrc'>heartbeat monitor sleep</td><td align="right" class='awrc'>64</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>93.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat redo informer</td><td align="right" class='awrnc'>610</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>lreg timer</td><td align="right" class='awrc'>204</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>pman timer</td><td align="right" class='awrnc'>203</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>pmon timer</td><td align="right" class='awrc'>406</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>rdbms ipc message</td><td align="right" class='awrnc'>53K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>66.4</td></tr>
<tr><td scope="row" class='awrc'>smon timer</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>wait for unread message on broadcast channel</td><td align="right" class='awrnc'>935</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>watchdog main loop</td><td align="right" class='awrc'>812</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7405"></a>
<h3 class="awr">Wait Event Histogram (up to 64 us)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds  </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1us  - 64us</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&gt;=64us">&gt;=64us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>5790</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>81.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>12.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>4.9</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>51.9K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>70.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>15.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>7.7</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>2389</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>14.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>14.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>30.6</td></tr>
<tr><td scope="row" class='awrnc'>AWR Flush</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>6367</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>70.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>4.8</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>21.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>73.9</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>97.4</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group query</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>83.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group update</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>94.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>496</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>72.9</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>266</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>16.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>38.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>43.9</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>599</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>65.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>24.9</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>1917</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>23.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>19.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>18.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>39.4</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>416</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>14.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>74.9</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>77</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>24.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>61.3</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>48</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>98.4</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>385</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>34.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>36.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>12.9</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>98.8</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrnc'>283</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>66.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>15.5</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>113</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>77.7</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>16K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>66.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>5.0</td></tr>
<tr><td scope="row" class='awrc'>PX qref latch</td><td align="right" class='awrc'>155</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>56.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>39.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>2.5</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net break/reset to client</td><td align="right" class='awrnc'>62</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>41.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>49.2</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>176</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>88.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>24</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>55.6</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>22</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>72.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer exterminate</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.8</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>828</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>15.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>77.0</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>50.2K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>91.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>1.5</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>8885</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>15.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>82.4</td></tr>
<tr><td scope="row" class='awrnc'>direct path read</td><td align="right" class='awrnc'>16</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>75.0</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>98.2</td></tr>
<tr><td scope="row" class='awrnc'>enq: RO - fast object reuse</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.4</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.8</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.9</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>2151</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.7</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>52</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>14</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>280</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>85.8</td></tr>
<tr><td scope="row" class='awrnc'>ges enter server mode</td><td align="right" class='awrnc'>110</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>70.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>22.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>.9</td></tr>
<tr><td scope="row" class='awrc'>ges ipc enter server mode</td><td align="right" class='awrc'>135</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>95.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>103</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>65.2</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>1140</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>84.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>5.2</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>55</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>92.1</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>75.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>14</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>75.0</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>80.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>82.6</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>16.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>77.4</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>62</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>73.4</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>75.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>37</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>78.0</td></tr>
<tr><td scope="row" class='awrc'>latch: undo global data</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>75.0</td></tr>
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>1068</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>89.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>.7</td></tr>
<tr><td scope="row" class='awrc'>library cache load lock</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>library cache pin</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.0</td></tr>
<tr><td scope="row" class='awrc'>lock deadlock retry</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>20.0</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>120</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>17.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>78.3</td></tr>
<tr><td scope="row" class='awrc'>undo_retention publish retry</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7410"></a>
<h3 class="awr">Wait Event Histogram (up to 32 ms)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds,	ms is 1024 microseconds (approximately 1 millisecond) </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1ms  to 32ms</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms">&lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms">&lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&gt;=32ms">&gt;=32ms</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>255</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>605</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>82.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>14</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>17</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>5.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>27.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>5.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>70.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>120</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>59.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>36.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>45</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>34.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>39.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>23.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>850</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>51.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>14.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>1.4</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>49</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>91.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>547</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>69.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>16.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.7</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>45</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>94.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>242</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>92.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>649</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>60.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>13.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.1</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>157</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>27.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>36.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>30.5</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>7655</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>3.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>26.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>16.6</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>11.7</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>35</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>82.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>2793</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>5.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>52.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>21.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>2.8</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>325</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>3.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>29.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>26.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>35.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>193</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>61.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>19.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>27</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parameter File I/O</td><td align="right" class='awrnc'>15</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>32.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>17.9</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>41.1</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net break/reset to client</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>98.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>19</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>51.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>13.0</td></tr>
<tr><td scope="row" class='awrc'>buffer exterminate</td><td align="right" class='awrc'>924</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>99.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>233</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>15.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>17.1</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>401</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>88.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.3</td></tr>
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>39</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file parallel read</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>26.8K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>46.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>21.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>17.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>1.1</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>59.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>27.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>2.7</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>788.6K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>19.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>33.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>14.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>8.4</td></tr>
<tr><td scope="row" class='awrc'>direct path read</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>92.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path write</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>direct path write temp</td><td align="right" class='awrc'>43</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>28.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>19.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>17.3</td></tr>
<tr><td scope="row" class='awrnc'>enq: AF - task serialization</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>39</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>6.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>53.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>14.3</td></tr>
<tr><td scope="row" class='awrnc'>enq: CO - master slave det</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>10.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: FB - contention</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: HW - contention</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>30.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>46.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: PE - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>140</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>35.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>37.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>23.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: RA - RT ADDM flood control</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: RO - fast object reuse</td><td align="right" class='awrnc'>76</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>6.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>31.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>49.4</td></tr>
<tr><td scope="row" class='awrc'>enq: TD - KTF dump entries</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TK - Auto Task Serialization</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TM - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: TO - contention</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>6.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>15.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TT - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>17</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>15.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>55.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: WT - contention</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy acquire</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>25.0</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>33.3</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>227</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>43.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>45.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>66.7</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>1220</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>49.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>37.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>224</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>15.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>28.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant congested</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block grant</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>77</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>4.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>55.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>17.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>17.4K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>14.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>60.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>22.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>6513</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>38.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>48.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>84</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>28.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>12.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>1.2</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>375.9K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>43.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>43.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>43.7K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>8.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>54.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>30.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>1158</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>18.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>48.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>25.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.8</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>52.2K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>1.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>33.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>52.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>21</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>76.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>23.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current retry</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc remaster</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs drm freeze in enter server mode</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>85.7</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>789</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>60.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs remastering wait for read latch</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>25.0</td></tr>
<tr><td scope="row" class='awrc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrc'>33</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>10.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>32.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>29.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>112</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>62.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>29.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>39</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>94.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>87.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: checkpoint queue latch</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>80.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>82.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>80.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>42</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>82.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>87.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: shared pool</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>66.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: undo global data</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>75.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>83</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>20.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>64.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache pin</td><td align="right" class='awrc'>62</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>41.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>46.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>21K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>21.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>30.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>24.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>24.1</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>331</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>39.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>29.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.5</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>83.3</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>33.3</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>read by other session</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>250</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>41.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>23.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.8</td></tr>
<tr><td scope="row" class='awrc'>row cache lock</td><td align="right" class='awrc'>23</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>21.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>73.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7420"></a>
<h3 class="awr">Wait Event Histogram (up to 2 sec)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 ms is milliseconds    s is 1024 milliseconds (approximately 1 second) </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 64ms  to 2s</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms">&lt;64ms</th><th class="awrbg" scope="col" id="&lt;1/8s">&lt;1/8s</th><th class="awrbg" scope="col" id="&lt;1/4s">&lt;1/4s</th><th class="awrbg" scope="col" id="&lt;1/2s">&lt;1/2s</th><th class="awrbg" scope="col" id="&lt;1s">  &lt;1s</th><th class="awrbg" scope="col" id="&lt;2s">  &lt;2s</th><th class="awrbg" scope="col" id="&gt;=2s">&gt;=2s</th></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>98.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>69</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>69.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>1048</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>88.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>84</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>97.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Parameter File I/O</td><td align="right" class='awrc'>23</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>58.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>32.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA: allocation forcing component growth</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>87.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>48</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>82.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>15.7</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>537</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>98.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>97.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>91.3K</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>91.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>direct path write temp</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>82.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>17.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>85.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>85</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>50.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>33.7</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy acquire</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>75.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>66.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>33.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>41.7</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>16</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>98.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block lost</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>17</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs drm freeze in enter server mode</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>14.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remastering wait for read latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>75.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges message buffer allocation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kksfbc child completion</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>6674</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>75.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>15</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>16.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>66.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7430"></a>
<h3 class="awr">Wait Event Histogram (up to 2 min)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7440"></a>
<h3 class="awr">Wait Event Histogram (up to 1 hr)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5800"></a>
<h3 class="awr">Service Statistics</h3>
<ul>
<li class="awr"> ordered by DB Time</li>
</ul>
<table border="0" class="tdiff" summary="This table displays service statistics. It displays service names and corresponding DB time, DB CPU, Physical reads, logical reads."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">DB Time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">Physical Reads (K)</th><th class="awrbg" scope="col">Logical Reads (K)</th></tr>
<tr><td scope="row" class='awrc'>p30db.example.com</td><td align="right" class='awrc'>10,184</td><td align="right" class='awrc'>456</td><td align="right" class='awrc'>1,079</td><td align="right" class='awrc'>1,408</td></tr>
<tr><td scope="row" class='awrnc'>SYS$USERS</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td></tr>
<tr><td scope="row" class='awrc'>SYS$BACKGROUND</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>113</td></tr>
<tr><td scope="row" class='awrnc'>p30dbXDB</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5820"></a>
<h3 class="awr">Service Wait Class Stats</h3>
<ul>
<li class="awr"> Wait Class info for services in the Service Statistics section.  </li>
<li class="awr"> Total Waits and Time Waited displayed for the following wait	  classes:  User I/O, Concurrency, Administrative, Network </li>
<li class="awr"> Time Waited (Wt Time) in seconds</li>
</ul>
<table border="0" class="tdiff" summary="This table displays service wait class statistics. It displays user I/O total wait, user I/O wait time, concurrency total wait, concurrency wait time, etc."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">User I/O Total Wts</th><th class="awrbg" scope="col">User I/O Wt Time</th><th class="awrbg" scope="col">Concurcy Total Wts</th><th class="awrbg" scope="col">Concurcy Wt Time</th><th class="awrbg" scope="col">Admin Total Wts</th><th class="awrbg" scope="col">Admin Wt Time</th><th class="awrbg" scope="col">Network Total Wts</th><th class="awrbg" scope="col">Network Wt Time</th></tr>
<tr><td scope="row" class='awrc'>p30db.example.com</td>
<td align="right" class='awrc'>1078757</td><td align="right" class='awrc'>9251</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>37</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SYS$USERS</td>
<td align="right" class='awrnc'>177</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SYS$BACKGROUND</td>
<td align="right" class='awrc'>60837</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>1313</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>473</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5840"></a>
<h3 class="awr">Top 10 Channel Waits</h3>
<ul>
<li class="awr"> Top 10 Channel Waits by wait time </li>
</ul>
<table border="0" class="tdiff" summary="This table displays top 10 Channel Watis by wait time."><tr><th class="awrbg" scope="col">Channel</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Wait</th></tr>
<tr><td scope="row" class='awrc'>kxfp control signal channel</td>
<td align="right" class='awrc'>168</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.09ms</td></tr>
<tr><td scope="row" class='awrnc'>obj broadcast channel</td>
<td align="right" class='awrnc'>85</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>10.58ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2310"></a>
<h3 class="awr">Top Process Types by Wait Class</h3>
<ul>
<li class="awr"> This table displays top process types ordered by wait class</li>
</ul>
<table border="0" class="tdiff" summary="Top Process Types by Wait Class. . This table displays top process types ordered by wait class"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">Wait Class Type</th><th class="awrbg" scope="col">Wait Time (sec)</th></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>9,280.43</td></tr>
<tr><td scope="row" class='awrnc'>&#160;</td><td scope="row" class='awrnc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>641.28</td></tr>
<tr><td scope="row" class='awrc'>LG</td><td scope="row" class='awrc'>Log Writer Slave</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>426.10</td></tr>
<tr><td scope="row" class='awrnc'>LGWR</td><td scope="row" class='awrnc'>Redo etc.</td><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>208.05</td></tr>
<tr><td scope="row" class='awrc'>LGWR</td><td scope="row" class='awrc'>Redo etc.</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>124.42</td></tr>
<tr><td scope="row" class='awrnc'>DBW0</td><td scope="row" class='awrnc'>db writer process 0</td><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>112.30</td></tr>
<tr><td scope="row" class='awrc'>LG</td><td scope="row" class='awrc'>Log Writer Slave</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>19.33</td></tr>
<tr><td scope="row" class='awrnc'>M</td><td scope="row" class='awrnc'>MMON slave class 1</td><td scope="row" class='awrnc'>Application</td><td align="right" class='awrnc'>15.49</td></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>10.49</td></tr>
<tr><td scope="row" class='awrnc'>RMS0</td><td scope="row" class='awrnc'>rac management server</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>7.39</td></tr>
<tr><td scope="row" class='awrc'>M</td><td scope="row" class='awrc'>MMON slave class 1</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>6.88</td></tr>
<tr><td scope="row" class='awrnc'>M</td><td scope="row" class='awrnc'>MMON slave class 1</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>6.73</td></tr>
<tr><td scope="row" class='awrc'>CKPT</td><td scope="row" class='awrc'>checkpoint</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>5.13</td></tr>
<tr><td scope="row" class='awrnc'>MMON</td><td scope="row" class='awrnc'>Manageability Monitor Process</td><td scope="row" class='awrnc'>User I/O</td><td align="right" class='awrnc'>3.31</td></tr>
<tr><td scope="row" class='awrc'>M</td><td scope="row" class='awrc'>MMON slave class 1</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>2.83</td></tr>
<tr><td scope="row" class='awrnc'>LMON</td><td scope="row" class='awrnc'>global enqueue service monitor</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>2.82</td></tr>
<tr><td scope="row" class='awrc'>O</td><td scope="row" class='awrc'>ASM Connection Pool</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>2.75</td></tr>
<tr><td scope="row" class='awrnc'>LM</td><td scope="row" class='awrnc'>global cache service process</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>2.36</td></tr>
<tr><td scope="row" class='awrc'>RMS0</td><td scope="row" class='awrc'>rac management server</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>2.15</td></tr>
<tr><td scope="row" class='awrnc'>IMR</td><td scope="row" class='awrnc'>CGS IMR Slave</td><td scope="row" class='awrnc'>User I/O</td><td align="right" class='awrnc'>1.94</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2320"></a>
<h3 class="awr">Top Process Types by CPU Used</h3>
<ul>
<li class="awr"> This table displays top process types ordered by CPU time</li>
</ul>
<table border="0" class="tdiff" summary="Top Process Types by CPU Used. . This table displays top process types ordered by CPU time"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">CPU Time (sec)</th></tr>
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td align="right" class='awrc'>457.16</td></tr>
<tr><td scope="row" class='awrnc'>LM</td><td scope="row" class='awrnc'>global cache service process</td><td align="right" class='awrnc'>211.53</td></tr>
<tr><td scope="row" class='awrc'>DBW0</td><td scope="row" class='awrc'>db writer process 0</td><td align="right" class='awrc'>47.20</td></tr>
<tr><td scope="row" class='awrnc'>VKTM</td><td scope="row" class='awrnc'>Virtual Keeper of TiMe process</td><td align="right" class='awrnc'>34.26</td></tr>
<tr><td scope="row" class='awrc'>M</td><td scope="row" class='awrc'>MMON slave class 1</td><td align="right" class='awrc'>14.58</td></tr>
<tr><td scope="row" class='awrnc'>LGWR</td><td scope="row" class='awrnc'>Redo etc.</td><td align="right" class='awrnc'>13.72</td></tr>
<tr><td scope="row" class='awrc'>LG</td><td scope="row" class='awrc'>Log Writer Slave</td><td align="right" class='awrc'>12.35</td></tr>
<tr><td scope="row" class='awrnc'>RS*</td><td scope="row" class='awrnc'>GCS RM Slave</td><td align="right" class='awrnc'>4.89</td></tr>
<tr><td scope="row" class='awrc'>P</td><td scope="row" class='awrc'>Parallel query slave</td><td align="right" class='awrc'>4.57</td></tr>
<tr><td scope="row" class='awrnc'>GCR</td><td scope="row" class='awrnc'>GCR Slaves (LMHB)</td><td align="right" class='awrnc'>4.41</td></tr>
<tr><td scope="row" class='awrc'>RMS0</td><td scope="row" class='awrc'>rac management server</td><td align="right" class='awrc'>3.59</td></tr>
<tr><td scope="row" class='awrnc'>VKRM</td><td scope="row" class='awrnc'>Virtual sKeduler for Resource Manager</td><td align="right" class='awrnc'>3.43</td></tr>
<tr><td scope="row" class='awrc'>MMAN</td><td scope="row" class='awrc'>Memory Manager</td><td align="right" class='awrc'>3.22</td></tr>
<tr><td scope="row" class='awrnc'>IPC0</td><td scope="row" class='awrnc'>IPC Service 0</td><td align="right" class='awrnc'>3.02</td></tr>
<tr><td scope="row" class='awrc'>DIA0</td><td scope="row" class='awrc'>diagnosibility process 0</td><td align="right" class='awrc'>2.54</td></tr>
<tr><td scope="row" class='awrnc'>LMD0</td><td scope="row" class='awrnc'>global enqueue service daemon 0</td><td align="right" class='awrnc'>1.44</td></tr>
<tr><td scope="row" class='awrc'>LMON</td><td scope="row" class='awrc'>global enqueue service monitor</td><td align="right" class='awrc'>1.41</td></tr>
<tr><td scope="row" class='awrnc'>LMHB</td><td scope="row" class='awrnc'>lm heartbeat monitor</td><td align="right" class='awrnc'>1.34</td></tr>
<tr><td scope="row" class='awrc'>LMD1</td><td scope="row" class='awrc'>global enqueue service daemon 1</td><td align="right" class='awrc'>1.20</td></tr>
<tr><td scope="row" class='awrnc'>O</td><td scope="row" class='awrnc'>ASM Connection Pool</td><td align="right" class='awrnc'>1.15</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="22"></a>
<h2 class="awr">
SQL Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#400">SQL ordered by Elapsed Time</a></li>
<li class="awr"><a class="awr" href="#500">SQL ordered by CPU Time</a></li>
<li class="awr"><a class="awr" href="#550">SQL ordered by User I/O Wait Time</a></li>
<li class="awr"><a class="awr" href="#600">SQL ordered by Gets</a></li>
<li class="awr"><a class="awr" href="#700">SQL ordered by Reads</a></li>
<li class="awr"><a class="awr" href="#740">SQL ordered by Physical Reads (UnOptimized)</a></li>
<li class="awr"><a class="awr" href="#800">SQL ordered by Executions</a></li>
<li class="awr"><a class="awr" href="#900">SQL ordered by Parse Calls</a></li>
<li class="awr"><a class="awr" href="#1000">SQL ordered by Sharable Memory</a></li>
<li class="awr"><a class="awr" href="#1100">SQL ordered by Version Count</a></li>
<li class="awr"><a class="awr" href="#1150">SQL ordered by Cluster Wait Time</a></li>
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="400"></a>
<h3 class="awr">SQL ordered by Elapsed Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> % Total DB Time is the Elapsed Time of the SQL statement divided     into the Total Database Time multiplied by 100 </li>
<li class="awr"> %Total - Elapsed Time	as a percentage of Total DB time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   98.4% of Total DB Time (s):		10,263</li>
<li class="awr">Captured PL/SQL account for   99.2% of Total DB Time (s):	   10,263</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by elapsed time"><tr><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Elapsed Time per Exec (s) </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">	SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>10,022.16</td><td align="right" class='awrc'>35,802</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>97.65</td><td align="right" class='awrc'>4.32</td><td align="right" class='awrc'>91.37</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>563.94</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>563.94</td><td align="right" class='awrnc'>5.49</td><td align="right" class='awrnc'>4.43</td><td align="right" class='awrnc'>90.67</td><td scope="row" class='awrnc'><a class="awr" href="#d49x1sm5j34ms">d49x1sm5j34ms</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>2.50</td><td align="right" class='awrc'>98.06</td><td scope="row" class='awrc'><a class="awr" href="#gp2af7qaws3yq">gp2af7qaws3yq</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>5.49</td><td align="right" class='awrnc'>4.17</td><td align="right" class='awrnc'>92.55</td><td scope="row" class='awrnc'><a class="awr" href="#bcmft1hf3v16j">bcmft1hf3v16j</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>4.51</td><td align="right" class='awrc'>92.37</td><td scope="row" class='awrc'><a class="awr" href="#d7m0vnz9zpwju">d7m0vnz9zpwju</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>5.49</td><td align="right" class='awrnc'>5.45</td><td align="right" class='awrnc'>88.37</td><td scope="row" class='awrnc'><a class="awr" href="#129d7r965xakz">129d7r965xakz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>563.77</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>563.77</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>4.10</td><td align="right" class='awrc'>93.21</td><td scope="row" class='awrc'><a class="awr" href="#1s34w34a21n9p">1s34w34a21n9p</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>563.74</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>563.74</td><td align="right" class='awrnc'>5.49</td><td align="right" class='awrnc'>4.94</td><td align="right" class='awrnc'>89.64</td><td scope="row" class='awrnc'><a class="awr" href="#g5wjwfs93z517">g5wjwfs93z517</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>563.72</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>563.72</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>4.64</td><td align="right" class='awrc'>90.27</td><td scope="row" class='awrc'><a class="awr" href="#4p0za9517qhty">4p0za9517qhty</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>563.71</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>563.71</td><td align="right" class='awrnc'>5.49</td><td align="right" class='awrnc'>4.12</td><td align="right" class='awrnc'>93.13</td><td scope="row" class='awrnc'><a class="awr" href="#b1nsgh4u6gc3q">b1nsgh4u6gc3q</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>563.70</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>563.70</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>4.99</td><td align="right" class='awrc'>89.43</td><td scope="row" class='awrc'><a class="awr" href="#7huzc5jc2tyyr">7huzc5jc2tyyr</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>563.67</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>563.67</td><td align="right" class='awrnc'>5.49</td><td align="right" class='awrnc'>4.90</td><td align="right" class='awrnc'>89.70</td><td scope="row" class='awrnc'><a class="awr" href="#3uawgw8gknfx7">3uawgw8gknfx7</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>563.67</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>563.67</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>5.43</td><td align="right" class='awrc'>88.54</td><td scope="row" class='awrc'><a class="awr" href="#7qdskga9a98tt">7qdskga9a98tt</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>563.65</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>563.65</td><td align="right" class='awrnc'>5.49</td><td align="right" class='awrnc'>5.37</td><td align="right" class='awrnc'>88.72</td><td scope="row" class='awrnc'><a class="awr" href="#c863fngb197rm">c863fngb197rm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>563.55</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>563.55</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>4.55</td><td align="right" class='awrc'>82.95</td><td scope="row" class='awrc'><a class="awr" href="#crcf813m8k6q0">crcf813m8k6q0</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>563.50</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>563.50</td><td align="right" class='awrnc'>5.49</td><td align="right" class='awrnc'>3.85</td><td align="right" class='awrnc'>93.65</td><td scope="row" class='awrnc'><a class="awr" href="#drhdgsbjxfacu">drhdgsbjxfacu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>563.50</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>563.50</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>4.34</td><td align="right" class='awrc'>92.92</td><td scope="row" class='awrc'><a class="awr" href="#6bzqp0g9nrnfz">6bzqp0g9nrnfz</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>563.48</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>563.48</td><td align="right" class='awrnc'>5.49</td><td align="right" class='awrnc'>4.13</td><td align="right" class='awrnc'>93.03</td><td scope="row" class='awrnc'><a class="awr" href="#4kmfwdxs245tu">4kmfwdxs245tu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>563.48</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>563.48</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>4.05</td><td align="right" class='awrc'>93.22</td><td scope="row" class='awrc'><a class="awr" href="#bnm8uw9y0ubhg">bnm8uw9y0ubhg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="500"></a>
<h3 class="awr">SQL ordered by CPU Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - CPU Time	as a percentage of Total DB CPU </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   97.0% of Total CPU Time (s): 	    464</li>
<li class="awr">Captured PL/SQL account for   99.5% of Total CPU Time (s):	       464</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by CPU time"><tr><th class="awrbg" scope="col">CPU    Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">CPU per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>432.96</td><td align="right" class='awrc'>35,802</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>93.25</td><td align="right" class='awrc'>10,022.16</td><td align="right" class='awrc'>4.32</td><td align="right" class='awrc'>91.37</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>30.75</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>30.75</td><td align="right" class='awrnc'>6.62</td><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>5.45</td><td align="right" class='awrnc'>88.37</td><td scope="row" class='awrnc'><a class="awr" href="#129d7r965xakz">129d7r965xakz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>30.58</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>30.58</td><td align="right" class='awrc'>6.59</td><td align="right" class='awrc'>563.67</td><td align="right" class='awrc'>5.43</td><td align="right" class='awrc'>88.54</td><td scope="row" class='awrc'><a class="awr" href="#7qdskga9a98tt">7qdskga9a98tt</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>30.29</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>30.29</td><td align="right" class='awrnc'>6.52</td><td align="right" class='awrnc'>563.65</td><td align="right" class='awrnc'>5.37</td><td align="right" class='awrnc'>88.72</td><td scope="row" class='awrnc'><a class="awr" href="#c863fngb197rm">c863fngb197rm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>28.14</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>28.14</td><td align="right" class='awrc'>6.06</td><td align="right" class='awrc'>563.70</td><td align="right" class='awrc'>4.99</td><td align="right" class='awrc'>89.43</td><td scope="row" class='awrc'><a class="awr" href="#7huzc5jc2tyyr">7huzc5jc2tyyr</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>27.85</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>27.85</td><td align="right" class='awrnc'>6.00</td><td align="right" class='awrnc'>563.74</td><td align="right" class='awrnc'>4.94</td><td align="right" class='awrnc'>89.64</td><td scope="row" class='awrnc'><a class="awr" href="#g5wjwfs93z517">g5wjwfs93z517</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>27.64</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>27.64</td><td align="right" class='awrc'>5.95</td><td align="right" class='awrc'>563.67</td><td align="right" class='awrc'>4.90</td><td align="right" class='awrc'>89.70</td><td scope="row" class='awrc'><a class="awr" href="#3uawgw8gknfx7">3uawgw8gknfx7</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>26.14</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>26.14</td><td align="right" class='awrnc'>5.63</td><td align="right" class='awrnc'>563.72</td><td align="right" class='awrnc'>4.64</td><td align="right" class='awrnc'>90.27</td><td scope="row" class='awrnc'><a class="awr" href="#4p0za9517qhty">4p0za9517qhty</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>25.65</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>25.65</td><td align="right" class='awrc'>5.52</td><td align="right" class='awrc'>563.55</td><td align="right" class='awrc'>4.55</td><td align="right" class='awrc'>82.95</td><td scope="row" class='awrc'><a class="awr" href="#crcf813m8k6q0">crcf813m8k6q0</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>25.44</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>25.44</td><td align="right" class='awrnc'>5.48</td><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>4.51</td><td align="right" class='awrnc'>92.37</td><td scope="row" class='awrnc'><a class="awr" href="#d7m0vnz9zpwju">d7m0vnz9zpwju</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>24.98</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>24.98</td><td align="right" class='awrc'>5.38</td><td align="right" class='awrc'>563.94</td><td align="right" class='awrc'>4.43</td><td align="right" class='awrc'>90.67</td><td scope="row" class='awrc'><a class="awr" href="#d49x1sm5j34ms">d49x1sm5j34ms</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>24.44</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>24.44</td><td align="right" class='awrnc'>5.26</td><td align="right" class='awrnc'>563.50</td><td align="right" class='awrnc'>4.34</td><td align="right" class='awrnc'>92.92</td><td scope="row" class='awrnc'><a class="awr" href="#6bzqp0g9nrnfz">6bzqp0g9nrnfz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>23.50</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>23.50</td><td align="right" class='awrc'>5.06</td><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>4.17</td><td align="right" class='awrc'>92.55</td><td scope="row" class='awrc'><a class="awr" href="#bcmft1hf3v16j">bcmft1hf3v16j</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>23.30</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>23.30</td><td align="right" class='awrnc'>5.02</td><td align="right" class='awrnc'>563.48</td><td align="right" class='awrnc'>4.13</td><td align="right" class='awrnc'>93.03</td><td scope="row" class='awrnc'><a class="awr" href="#4kmfwdxs245tu">4kmfwdxs245tu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>23.21</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>23.21</td><td align="right" class='awrc'>5.00</td><td align="right" class='awrc'>563.71</td><td align="right" class='awrc'>4.12</td><td align="right" class='awrc'>93.13</td><td scope="row" class='awrc'><a class="awr" href="#b1nsgh4u6gc3q">b1nsgh4u6gc3q</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>23.12</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>23.12</td><td align="right" class='awrnc'>4.98</td><td align="right" class='awrnc'>563.77</td><td align="right" class='awrnc'>4.10</td><td align="right" class='awrnc'>93.21</td><td scope="row" class='awrnc'><a class="awr" href="#1s34w34a21n9p">1s34w34a21n9p</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>22.84</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>22.84</td><td align="right" class='awrc'>4.92</td><td align="right" class='awrc'>563.48</td><td align="right" class='awrc'>4.05</td><td align="right" class='awrc'>93.22</td><td scope="row" class='awrc'><a class="awr" href="#bnm8uw9y0ubhg">bnm8uw9y0ubhg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>21.72</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>21.72</td><td align="right" class='awrnc'>4.68</td><td align="right" class='awrnc'>563.50</td><td align="right" class='awrnc'>3.85</td><td align="right" class='awrnc'>93.65</td><td scope="row" class='awrnc'><a class="awr" href="#drhdgsbjxfacu">drhdgsbjxfacu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>14.09</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>14.09</td><td align="right" class='awrc'>3.04</td><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>2.50</td><td align="right" class='awrc'>98.06</td><td scope="row" class='awrc'><a class="awr" href="#gp2af7qaws3yq">gp2af7qaws3yq</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>7.75</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3.87</td><td align="right" class='awrnc'>1.67</td><td align="right" class='awrnc'>31.22</td><td align="right" class='awrnc'>24.82</td><td align="right" class='awrnc'>18.51</td><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrc'>7.50</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3.75</td><td align="right" class='awrc'>1.62</td><td align="right" class='awrc'>30.52</td><td align="right" class='awrc'>24.57</td><td align="right" class='awrc'>17.86</td><td scope="row" class='awrc'><a class="awr" href="#5k5207588w9ry">5k5207588w9ry</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>SELECT DBMS_REPORT.GET_REPORT(...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="550"></a>
<h3 class="awr">SQL ordered by User I/O Wait Time</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - User I/O Time as a percentage of Total User I/O Wait time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   98.2% of Total User I/O Wait Time (s):	    9,343</li>
<li class="awr">Captured PL/SQL account for   99.0% of Total User I/O Wait Time (s):	       9,343</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by user I/O time"><tr><th class="awrbg" scope="col">User I/O Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">UIO per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>9,157.71</td><td align="right" class='awrc'>35,802</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>98.02</td><td align="right" class='awrc'>10,022.16</td><td align="right" class='awrc'>4.32</td><td align="right" class='awrc'>91.37</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>552.89</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>552.89</td><td align="right" class='awrnc'>5.92</td><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>2.50</td><td align="right" class='awrnc'>98.06</td><td scope="row" class='awrnc'><a class="awr" href="#gp2af7qaws3yq">gp2af7qaws3yq</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>527.70</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>527.70</td><td align="right" class='awrc'>5.65</td><td align="right" class='awrc'>563.50</td><td align="right" class='awrc'>3.85</td><td align="right" class='awrc'>93.65</td><td scope="row" class='awrc'><a class="awr" href="#drhdgsbjxfacu">drhdgsbjxfacu</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>525.51</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>525.51</td><td align="right" class='awrnc'>5.62</td><td align="right" class='awrnc'>563.77</td><td align="right" class='awrnc'>4.10</td><td align="right" class='awrnc'>93.21</td><td scope="row" class='awrnc'><a class="awr" href="#1s34w34a21n9p">1s34w34a21n9p</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>525.26</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>525.26</td><td align="right" class='awrc'>5.62</td><td align="right" class='awrc'>563.48</td><td align="right" class='awrc'>4.05</td><td align="right" class='awrc'>93.22</td><td scope="row" class='awrc'><a class="awr" href="#bnm8uw9y0ubhg">bnm8uw9y0ubhg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>524.96</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>524.96</td><td align="right" class='awrnc'>5.62</td><td align="right" class='awrnc'>563.71</td><td align="right" class='awrnc'>4.12</td><td align="right" class='awrnc'>93.13</td><td scope="row" class='awrnc'><a class="awr" href="#b1nsgh4u6gc3q">b1nsgh4u6gc3q</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>524.21</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>524.21</td><td align="right" class='awrc'>5.61</td><td align="right" class='awrc'>563.48</td><td align="right" class='awrc'>4.13</td><td align="right" class='awrc'>93.03</td><td scope="row" class='awrc'><a class="awr" href="#4kmfwdxs245tu">4kmfwdxs245tu</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>523.62</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>523.62</td><td align="right" class='awrnc'>5.60</td><td align="right" class='awrnc'>563.50</td><td align="right" class='awrnc'>4.34</td><td align="right" class='awrnc'>92.92</td><td scope="row" class='awrnc'><a class="awr" href="#6bzqp0g9nrnfz">6bzqp0g9nrnfz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>521.82</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>521.82</td><td align="right" class='awrc'>5.59</td><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>4.17</td><td align="right" class='awrc'>92.55</td><td scope="row" class='awrc'><a class="awr" href="#bcmft1hf3v16j">bcmft1hf3v16j</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>520.82</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>520.82</td><td align="right" class='awrnc'>5.57</td><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>4.51</td><td align="right" class='awrnc'>92.37</td><td scope="row" class='awrnc'><a class="awr" href="#d7m0vnz9zpwju">d7m0vnz9zpwju</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>511.30</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>511.30</td><td align="right" class='awrc'>5.47</td><td align="right" class='awrc'>563.94</td><td align="right" class='awrc'>4.43</td><td align="right" class='awrc'>90.67</td><td scope="row" class='awrc'><a class="awr" href="#d49x1sm5j34ms">d49x1sm5j34ms</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>508.84</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>508.84</td><td align="right" class='awrnc'>5.45</td><td align="right" class='awrnc'>563.72</td><td align="right" class='awrnc'>4.64</td><td align="right" class='awrnc'>90.27</td><td scope="row" class='awrnc'><a class="awr" href="#4p0za9517qhty">4p0za9517qhty</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>505.64</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>505.64</td><td align="right" class='awrc'>5.41</td><td align="right" class='awrc'>563.67</td><td align="right" class='awrc'>4.90</td><td align="right" class='awrc'>89.70</td><td scope="row" class='awrc'><a class="awr" href="#3uawgw8gknfx7">3uawgw8gknfx7</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>505.35</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>505.35</td><td align="right" class='awrnc'>5.41</td><td align="right" class='awrnc'>563.74</td><td align="right" class='awrnc'>4.94</td><td align="right" class='awrnc'>89.64</td><td scope="row" class='awrnc'><a class="awr" href="#g5wjwfs93z517">g5wjwfs93z517</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>504.12</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>504.12</td><td align="right" class='awrc'>5.40</td><td align="right" class='awrc'>563.70</td><td align="right" class='awrc'>4.99</td><td align="right" class='awrc'>89.43</td><td scope="row" class='awrc'><a class="awr" href="#7huzc5jc2tyyr">7huzc5jc2tyyr</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>500.09</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>500.09</td><td align="right" class='awrnc'>5.35</td><td align="right" class='awrnc'>563.65</td><td align="right" class='awrnc'>5.37</td><td align="right" class='awrnc'>88.72</td><td scope="row" class='awrnc'><a class="awr" href="#c863fngb197rm">c863fngb197rm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>499.06</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>499.06</td><td align="right" class='awrc'>5.34</td><td align="right" class='awrc'>563.67</td><td align="right" class='awrc'>5.43</td><td align="right" class='awrc'>88.54</td><td scope="row" class='awrc'><a class="awr" href="#7qdskga9a98tt">7qdskga9a98tt</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>498.23</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>498.23</td><td align="right" class='awrnc'>5.33</td><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>5.45</td><td align="right" class='awrnc'>88.37</td><td scope="row" class='awrnc'><a class="awr" href="#129d7r965xakz">129d7r965xakz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>467.46</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>467.46</td><td align="right" class='awrc'>5.00</td><td align="right" class='awrc'>563.55</td><td align="right" class='awrc'>4.55</td><td align="right" class='awrc'>82.95</td><td scope="row" class='awrc'><a class="awr" href="#crcf813m8k6q0">crcf813m8k6q0</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="600"></a>
<h3 class="awr">SQL ordered by Gets</h3>
<ul>
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> %Total - Buffer Gets	as a percentage of Total Buffer Gets </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Buffer Gets:	 1,534,097</li>
<li class="awr">Captured SQL account for   97.4% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by buffer gets"><tr><th class="awrbg" scope="col">Buffer Gets </th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Gets     per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">	%IO</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>1,352,449</td><td align="right" class='awrc'>35,802</td><td align="right" class='awrc'>37.78</td><td align="right" class='awrc'>88.16</td><td align="right" class='awrc'>10,022.16</td><td class='awrc'>4.3</td><td class='awrc'>91.4</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>90,648</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>90,648.00</td><td align="right" class='awrnc'>5.91</td><td align="right" class='awrnc'>563.82</td><td class='awrnc'>4.5</td><td class='awrnc'>92.4</td><td scope="row" class='awrnc'><a class="awr" href="#d7m0vnz9zpwju">d7m0vnz9zpwju</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>86,704</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>86,704.00</td><td align="right" class='awrc'>5.65</td><td align="right" class='awrc'>563.50</td><td class='awrc'>4.3</td><td class='awrc'>92.9</td><td scope="row" class='awrc'><a class="awr" href="#6bzqp0g9nrnfz">6bzqp0g9nrnfz</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>82,785</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>82,785.00</td><td align="right" class='awrnc'>5.40</td><td align="right" class='awrnc'>563.71</td><td class='awrnc'>4.1</td><td class='awrnc'>93.1</td><td scope="row" class='awrnc'><a class="awr" href="#b1nsgh4u6gc3q">b1nsgh4u6gc3q</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>82,247</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>82,247.00</td><td align="right" class='awrc'>5.36</td><td align="right" class='awrc'>563.48</td><td class='awrc'>4.1</td><td class='awrc'>93</td><td scope="row" class='awrc'><a class="awr" href="#4kmfwdxs245tu">4kmfwdxs245tu</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>82,109</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>82,109.00</td><td align="right" class='awrnc'>5.35</td><td align="right" class='awrnc'>563.82</td><td class='awrnc'>4.2</td><td class='awrnc'>92.6</td><td scope="row" class='awrnc'><a class="awr" href="#bcmft1hf3v16j">bcmft1hf3v16j</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>81,673</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>81,673.00</td><td align="right" class='awrc'>5.32</td><td align="right" class='awrc'>563.77</td><td class='awrc'>4.1</td><td class='awrc'>93.2</td><td scope="row" class='awrc'><a class="awr" href="#1s34w34a21n9p">1s34w34a21n9p</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>81,662</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>81,662.00</td><td align="right" class='awrnc'>5.32</td><td align="right" class='awrnc'>563.82</td><td class='awrnc'>5.5</td><td class='awrnc'>88.4</td><td scope="row" class='awrnc'><a class="awr" href="#129d7r965xakz">129d7r965xakz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>81,416</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>81,416.00</td><td align="right" class='awrc'>5.31</td><td align="right" class='awrc'>563.48</td><td class='awrc'>4.1</td><td class='awrc'>93.2</td><td scope="row" class='awrc'><a class="awr" href="#bnm8uw9y0ubhg">bnm8uw9y0ubhg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>81,379</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>81,379.00</td><td align="right" class='awrnc'>5.30</td><td align="right" class='awrnc'>563.67</td><td class='awrnc'>5.4</td><td class='awrnc'>88.5</td><td scope="row" class='awrnc'><a class="awr" href="#7qdskga9a98tt">7qdskga9a98tt</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>81,225</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>81,225.00</td><td align="right" class='awrc'>5.29</td><td align="right" class='awrc'>563.65</td><td class='awrc'>5.4</td><td class='awrc'>88.7</td><td scope="row" class='awrc'><a class="awr" href="#c863fngb197rm">c863fngb197rm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>75,287</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>75,287.00</td><td align="right" class='awrnc'>4.91</td><td align="right" class='awrnc'>563.82</td><td class='awrnc'>2.5</td><td class='awrnc'>98.1</td><td scope="row" class='awrnc'><a class="awr" href="#gp2af7qaws3yq">gp2af7qaws3yq</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>74,995</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>74,995.00</td><td align="right" class='awrc'>4.89</td><td align="right" class='awrc'>563.67</td><td class='awrc'>4.9</td><td class='awrc'>89.7</td><td scope="row" class='awrc'><a class="awr" href="#3uawgw8gknfx7">3uawgw8gknfx7</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>74,922</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>74,922.00</td><td align="right" class='awrnc'>4.88</td><td align="right" class='awrnc'>563.50</td><td class='awrnc'>3.9</td><td class='awrnc'>93.6</td><td scope="row" class='awrnc'><a class="awr" href="#drhdgsbjxfacu">drhdgsbjxfacu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>74,031</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>74,031.00</td><td align="right" class='awrc'>4.83</td><td align="right" class='awrc'>563.74</td><td class='awrc'>4.9</td><td class='awrc'>89.6</td><td scope="row" class='awrc'><a class="awr" href="#g5wjwfs93z517">g5wjwfs93z517</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>73,517</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>73,517.00</td><td align="right" class='awrnc'>4.79</td><td align="right" class='awrnc'>563.70</td><td class='awrnc'>5</td><td class='awrnc'>89.4</td><td scope="row" class='awrnc'><a class="awr" href="#7huzc5jc2tyyr">7huzc5jc2tyyr</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>68,964</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>68,964.00</td><td align="right" class='awrc'>4.50</td><td align="right" class='awrc'>563.72</td><td class='awrc'>4.6</td><td class='awrc'>90.3</td><td scope="row" class='awrc'><a class="awr" href="#4p0za9517qhty">4p0za9517qhty</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>68,848</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>68,848.00</td><td align="right" class='awrnc'>4.49</td><td align="right" class='awrnc'>563.55</td><td class='awrnc'>4.6</td><td class='awrnc'>82.9</td><td scope="row" class='awrnc'><a class="awr" href="#crcf813m8k6q0">crcf813m8k6q0</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>64,060</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>64,060.00</td><td align="right" class='awrc'>4.18</td><td align="right" class='awrc'>563.94</td><td class='awrc'>4.4</td><td class='awrc'>90.7</td><td scope="row" class='awrc'><a class="awr" href="#d49x1sm5j34ms">d49x1sm5j34ms</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>48,148</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>24,074.00</td><td align="right" class='awrnc'>3.14</td><td align="right" class='awrnc'>31.22</td><td class='awrnc'>24.8</td><td class='awrnc'>18.5</td><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrc'>43,040</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>21,520.00</td><td align="right" class='awrc'>2.81</td><td align="right" class='awrc'>30.52</td><td class='awrc'>24.6</td><td class='awrc'>17.9</td><td scope="row" class='awrc'><a class="awr" href="#5k5207588w9ry">5k5207588w9ry</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>SELECT DBMS_REPORT.GET_REPORT(...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="700"></a>
<h3 class="awr">SQL ordered by Reads</h3>
<ul>
<li class="awr"> %Total - Physical Reads as a percentage of Total Disk Reads </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Disk Reads:	1,094,434</li>
<li class="awr">Captured SQL account for   97.7% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by physical reads"><tr><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Reads	  per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>1,064,041</td><td align="right" class='awrc'>35,802</td><td align="right" class='awrc'>29.72</td><td align="right" class='awrc'>97.22</td><td align="right" class='awrc'>10,022.16</td><td align="right" class='awrc'>4.32</td><td align="right" class='awrc'>91.37</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>69,831</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>69,831.00</td><td align="right" class='awrnc'>6.38</td><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>4.51</td><td align="right" class='awrnc'>92.37</td><td scope="row" class='awrnc'><a class="awr" href="#d7m0vnz9zpwju">d7m0vnz9zpwju</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>67,683</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>67,683.00</td><td align="right" class='awrc'>6.18</td><td align="right" class='awrc'>563.50</td><td align="right" class='awrc'>4.34</td><td align="right" class='awrc'>92.92</td><td scope="row" class='awrc'><a class="awr" href="#6bzqp0g9nrnfz">6bzqp0g9nrnfz</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>63,621</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>63,621.00</td><td align="right" class='awrnc'>5.81</td><td align="right" class='awrnc'>563.71</td><td align="right" class='awrnc'>4.12</td><td align="right" class='awrnc'>93.13</td><td scope="row" class='awrnc'><a class="awr" href="#b1nsgh4u6gc3q">b1nsgh4u6gc3q</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>63,414</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>63,414.00</td><td align="right" class='awrc'>5.79</td><td align="right" class='awrc'>563.67</td><td align="right" class='awrc'>5.43</td><td align="right" class='awrc'>88.54</td><td scope="row" class='awrc'><a class="awr" href="#7qdskga9a98tt">7qdskga9a98tt</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>63,242</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>63,242.00</td><td align="right" class='awrnc'>5.78</td><td align="right" class='awrnc'>563.48</td><td align="right" class='awrnc'>4.13</td><td align="right" class='awrnc'>93.03</td><td scope="row" class='awrnc'><a class="awr" href="#4kmfwdxs245tu">4kmfwdxs245tu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>63,141</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>63,141.00</td><td align="right" class='awrc'>5.77</td><td align="right" class='awrc'>563.77</td><td align="right" class='awrc'>4.10</td><td align="right" class='awrc'>93.21</td><td scope="row" class='awrc'><a class="awr" href="#1s34w34a21n9p">1s34w34a21n9p</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>62,669</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>62,669.00</td><td align="right" class='awrnc'>5.73</td><td align="right" class='awrnc'>563.48</td><td align="right" class='awrnc'>4.05</td><td align="right" class='awrnc'>93.22</td><td scope="row" class='awrnc'><a class="awr" href="#bnm8uw9y0ubhg">bnm8uw9y0ubhg</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>62,092</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>62,092.00</td><td align="right" class='awrc'>5.67</td><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>5.45</td><td align="right" class='awrc'>88.37</td><td scope="row" class='awrc'><a class="awr" href="#129d7r965xakz">129d7r965xakz</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>61,621</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>61,621.00</td><td align="right" class='awrnc'>5.63</td><td align="right" class='awrnc'>563.65</td><td align="right" class='awrnc'>5.37</td><td align="right" class='awrnc'>88.72</td><td scope="row" class='awrnc'><a class="awr" href="#c863fngb197rm">c863fngb197rm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>60,759</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>60,759.00</td><td align="right" class='awrc'>5.55</td><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>4.17</td><td align="right" class='awrc'>92.55</td><td scope="row" class='awrc'><a class="awr" href="#bcmft1hf3v16j">bcmft1hf3v16j</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>57,983</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>57,983.00</td><td align="right" class='awrnc'>5.30</td><td align="right" class='awrnc'>563.50</td><td align="right" class='awrnc'>3.85</td><td align="right" class='awrnc'>93.65</td><td scope="row" class='awrnc'><a class="awr" href="#drhdgsbjxfacu">drhdgsbjxfacu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>57,951</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>57,951.00</td><td align="right" class='awrc'>5.30</td><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>2.50</td><td align="right" class='awrc'>98.06</td><td scope="row" class='awrc'><a class="awr" href="#gp2af7qaws3yq">gp2af7qaws3yq</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>56,952</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>56,952.00</td><td align="right" class='awrnc'>5.20</td><td align="right" class='awrnc'>563.70</td><td align="right" class='awrnc'>4.99</td><td align="right" class='awrnc'>89.43</td><td scope="row" class='awrnc'><a class="awr" href="#7huzc5jc2tyyr">7huzc5jc2tyyr</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>56,802</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>56,802.00</td><td align="right" class='awrc'>5.19</td><td align="right" class='awrc'>563.74</td><td align="right" class='awrc'>4.94</td><td align="right" class='awrc'>89.64</td><td scope="row" class='awrc'><a class="awr" href="#g5wjwfs93z517">g5wjwfs93z517</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>54,912</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>54,912.00</td><td align="right" class='awrnc'>5.02</td><td align="right" class='awrnc'>563.67</td><td align="right" class='awrnc'>4.90</td><td align="right" class='awrnc'>89.70</td><td scope="row" class='awrnc'><a class="awr" href="#3uawgw8gknfx7">3uawgw8gknfx7</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>53,821</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>53,821.00</td><td align="right" class='awrc'>4.92</td><td align="right" class='awrc'>563.55</td><td align="right" class='awrc'>4.55</td><td align="right" class='awrc'>82.95</td><td scope="row" class='awrc'><a class="awr" href="#crcf813m8k6q0">crcf813m8k6q0</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>52,329</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>52,329.00</td><td align="right" class='awrnc'>4.78</td><td align="right" class='awrnc'>563.72</td><td align="right" class='awrnc'>4.64</td><td align="right" class='awrnc'>90.27</td><td scope="row" class='awrnc'><a class="awr" href="#4p0za9517qhty">4p0za9517qhty</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>49,358</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>49,358.00</td><td align="right" class='awrc'>4.51</td><td align="right" class='awrc'>563.94</td><td align="right" class='awrc'>4.43</td><td align="right" class='awrc'>90.67</td><td scope="row" class='awrc'><a class="awr" href="#d49x1sm5j34ms">d49x1sm5j34ms</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="740"></a>
<h3 class="awr">SQL ordered by Physical Reads (UnOptimized)</h3>
<ul>
<li class="awr"> UnOptimized Read Reqs = Physical Read Reqs -	    (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile) </li>
<li class="awr"> %Opt	- Optimized Reads as percentage of SQL Read Requests </li>
<li class="awr"> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs</li>
<li class="awr">Total Physical Read Requests:	    1,093,641</li>
<li class="awr">Captured SQL account for    5.0% of Total</li>
<li class="awr">Total UnOptimized Read Requests:       1,093,641</li>
<li class="awr">Captured SQL account for    5.0% of Total</li>
<li class="awr">Total Optimized Read Requests:		     1</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by unoptimized read requests"><tr><th class="awrbg" scope="col">UnOptimized Read Reqs</th><th class="awrbg" scope="col">Physical  Read Reqs</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">UnOptimized Reqs per Exec</th><th class="awrbg" scope="col">%Opt</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>69,831</td><td align="right" class='awrc'>69,831</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>69,831.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6.39</td><td scope="row" class='awrc'><a class="awr" href="#d7m0vnz9zpwju">d7m0vnz9zpwju</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>67,683</td><td align="right" class='awrnc'>67,683</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>67,683.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>6.19</td><td scope="row" class='awrnc'><a class="awr" href="#6bzqp0g9nrnfz">6bzqp0g9nrnfz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>63,621</td><td align="right" class='awrc'>63,621</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>63,621.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.82</td><td scope="row" class='awrc'><a class="awr" href="#b1nsgh4u6gc3q">b1nsgh4u6gc3q</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>63,414</td><td align="right" class='awrnc'>63,414</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>63,414.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.80</td><td scope="row" class='awrnc'><a class="awr" href="#7qdskga9a98tt">7qdskga9a98tt</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>63,242</td><td align="right" class='awrc'>63,242</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>63,242.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.78</td><td scope="row" class='awrc'><a class="awr" href="#4kmfwdxs245tu">4kmfwdxs245tu</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>63,141</td><td align="right" class='awrnc'>63,141</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>63,141.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.77</td><td scope="row" class='awrnc'><a class="awr" href="#1s34w34a21n9p">1s34w34a21n9p</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>62,669</td><td align="right" class='awrc'>62,669</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>62,669.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.73</td><td scope="row" class='awrc'><a class="awr" href="#bnm8uw9y0ubhg">bnm8uw9y0ubhg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>62,092</td><td align="right" class='awrnc'>62,092</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>62,092.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.68</td><td scope="row" class='awrnc'><a class="awr" href="#129d7r965xakz">129d7r965xakz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>61,621</td><td align="right" class='awrc'>61,621</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>61,621.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.63</td><td scope="row" class='awrc'><a class="awr" href="#c863fngb197rm">c863fngb197rm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>60,759</td><td align="right" class='awrnc'>60,759</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>60,759.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.56</td><td scope="row" class='awrnc'><a class="awr" href="#bcmft1hf3v16j">bcmft1hf3v16j</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>57,983</td><td align="right" class='awrc'>57,983</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>57,983.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.30</td><td scope="row" class='awrc'><a class="awr" href="#drhdgsbjxfacu">drhdgsbjxfacu</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>57,951</td><td align="right" class='awrnc'>57,951</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>57,951.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.30</td><td scope="row" class='awrnc'><a class="awr" href="#gp2af7qaws3yq">gp2af7qaws3yq</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>56,952</td><td align="right" class='awrc'>56,952</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>56,952.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.21</td><td scope="row" class='awrc'><a class="awr" href="#7huzc5jc2tyyr">7huzc5jc2tyyr</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>56,802</td><td align="right" class='awrnc'>56,802</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>56,802.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.19</td><td scope="row" class='awrnc'><a class="awr" href="#g5wjwfs93z517">g5wjwfs93z517</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>54,912</td><td align="right" class='awrc'>54,912</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>54,912.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.02</td><td scope="row" class='awrc'><a class="awr" href="#3uawgw8gknfx7">3uawgw8gknfx7</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>53,821</td><td align="right" class='awrnc'>53,821</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>53,821.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.92</td><td scope="row" class='awrnc'><a class="awr" href="#crcf813m8k6q0">crcf813m8k6q0</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>52,329</td><td align="right" class='awrc'>52,329</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>52,329.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.78</td><td scope="row" class='awrc'><a class="awr" href="#4p0za9517qhty">4p0za9517qhty</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>51,020</td><td align="right" class='awrnc'>51,020</td><td align="right" class='awrnc'>35,802</td><td align="right" class='awrnc'>1.43</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.67</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>49,358</td><td align="right" class='awrc'>49,358</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>49,358.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.51</td><td scope="row" class='awrc'><a class="awr" href="#d49x1sm5j34ms">d49x1sm5j34ms</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="800"></a>
<h3 class="awr">SQL ordered by Executions</h3>
<ul>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Total Executions:	   54,484</li>
<li class="awr">Captured SQL account for   97.3% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by number of executions"><tr><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Rows Processed</th><th class="awrbg" scope="col">Rows per Exec</th><th class="awrbg" scope="col">Elapsed	Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">  %IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>35,802</td><td align="right" class='awrc'>1,109,862</td><td align="right" class='awrc'>31.00</td><td align="right" class='awrc'>10,022.16</td><td class='awrc'>4.3</td><td class='awrc'>91.4</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>4,538</td><td align="right" class='awrnc'>4,229</td><td align="right" class='awrnc'>0.93</td><td align="right" class='awrnc'>1.74</td><td class='awrnc'>20.2</td><td class='awrnc'>28</td><td scope="row" class='awrnc'><a class="awr" href="#0sbbcuruzd66f">0sbbcuruzd66f</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select /*+ rule */ bucket_cnt,...</td></tr>
<tr><td align="right" class='awrc'>3,708</td><td align="right" class='awrc'>378</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.19</td><td class='awrc'>83.2</td><td class='awrc'>0</td><td scope="row" class='awrc'><a class="awr" href="#87gaftwrm2h68">87gaftwrm2h68</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select o.owner#, o.name, o.nam...</td></tr>
<tr><td align="right" class='awrnc'>2,762</td><td align="right" class='awrnc'>44,066</td><td align="right" class='awrnc'>15.95</td><td align="right" class='awrnc'>4.20</td><td class='awrnc'>12.5</td><td class='awrnc'>42.6</td><td scope="row" class='awrnc'><a class="awr" href="#2sxqgx5hx76qr">2sxqgx5hx76qr</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select /*+ rule */ bucket, end...</td></tr>
<tr><td align="right" class='awrc'>865</td><td align="right" class='awrc'>732</td><td align="right" class='awrc'>0.85</td><td align="right" class='awrc'>0.81</td><td class='awrc'>18</td><td class='awrc'>64.6</td><td scope="row" class='awrc'><a class="awr" href="#acmvv4fhdc9zh">acmvv4fhdc9zh</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select obj#, type#, ctime, mti...</td></tr>
<tr><td align="right" class='awrnc'>686</td><td align="right" class='awrnc'>684</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.23</td><td class='awrnc'>38.9</td><td class='awrnc'>35.5</td><td scope="row" class='awrnc'><a class="awr" href="#9tgj4g8y4rwy8">9tgj4g8y4rwy8</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select type#, blocks, extents,...</td></tr>
<tr><td align="right" class='awrc'>372</td><td align="right" class='awrc'>945</td><td align="right" class='awrc'>2.54</td><td align="right" class='awrc'>0.19</td><td class='awrc'>29.3</td><td class='awrc'>64.6</td><td scope="row" class='awrc'><a class="awr" href="#5n1fs4m2n2y0r">5n1fs4m2n2y0r</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select pos#, intcol#, col#, sp...</td></tr>
<tr><td align="right" class='awrnc'>341</td><td align="right" class='awrnc'>152</td><td align="right" class='awrnc'>0.45</td><td align="right" class='awrnc'>0.04</td><td class='awrnc'>86.6</td><td class='awrnc'>5.4</td><td scope="row" class='awrnc'><a class="awr" href="#asvzxj61dc5vs">asvzxj61dc5vs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select timestamp, flags from f...</td></tr>
<tr><td align="right" class='awrc'>326</td><td align="right" class='awrc'>326</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.09</td><td class='awrc'>68.6</td><td class='awrc'>4.8</td><td scope="row" class='awrc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrnc'>314</td><td align="right" class='awrnc'>4,187</td><td align="right" class='awrnc'>13.33</td><td align="right" class='awrnc'>0.32</td><td class='awrnc'>36.9</td><td class='awrnc'>50.4</td><td scope="row" class='awrnc'><a class="awr" href="#g0t052az3rx44">g0t052az3rx44</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select name, intcol#, segcol#,...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="900"></a>
<h3 class="awr">SQL ordered by Parse Calls</h3>
<ul>
<li class="awr">Total Parse Calls:	     5,002</li>
<li class="awr">Captured SQL account for   61.5% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by number of parse calls"><tr><th class="awrbg" scope="col">Parse Calls</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total Parses</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>341</td><td align="right" class='awrc'>341</td><td align="right" class='awrc'>6.82</td><td scope="row" class='awrc'><a class="awr" href="#asvzxj61dc5vs">asvzxj61dc5vs</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select timestamp, flags from f...</td></tr>
<tr><td align="right" class='awrnc'>240</td><td align="right" class='awrnc'>240</td><td align="right" class='awrnc'>4.80</td><td scope="row" class='awrnc'><a class="awr" href="#8swypbbr0m372">8swypbbr0m372</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select order#, columns, types ...</td></tr>
<tr><td align="right" class='awrc'>231</td><td align="right" class='awrc'>231</td><td align="right" class='awrc'>4.62</td><td scope="row" class='awrc'><a class="awr" href="#3un99a0zwp4vd">3un99a0zwp4vd</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select owner#, name, namespace...</td></tr>
<tr><td align="right" class='awrnc'>182</td><td align="right" class='awrnc'>182</td><td align="right" class='awrnc'>3.64</td><td scope="row" class='awrnc'><a class="awr" href="#5u7g54s63p4ts">5u7g54s63p4ts</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select toid from type$ where p...</td></tr>
<tr><td align="right" class='awrc'>162</td><td align="right" class='awrc'>162</td><td align="right" class='awrc'>3.24</td><td scope="row" class='awrc'><a class="awr" href="#grwydz59pu6mc">grwydz59pu6mc</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select text from view$ where r...</td></tr>
<tr><td align="right" class='awrnc'>145</td><td align="right" class='awrnc'>145</td><td align="right" class='awrnc'>2.90</td><td scope="row" class='awrnc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td align="right" class='awrc'>144</td><td align="right" class='awrc'>144</td><td align="right" class='awrc'>2.88</td><td scope="row" class='awrc'><a class="awr" href="#afx304d90ps3z">afx304d90ps3z</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select rowcnt, blkcnt, empcnt,...</td></tr>
<tr><td align="right" class='awrnc'>134</td><td align="right" class='awrnc'>326</td><td align="right" class='awrnc'>2.68</td><td scope="row" class='awrnc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrc'>103</td><td align="right" class='awrc'>103</td><td align="right" class='awrc'>2.06</td><td scope="row" class='awrc'><a class="awr" href="#03guhbfpak0w7">03guhbfpak0w7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select /*+ index(idl_ub1$ i_id...</td></tr>
<tr><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>2.06</td><td scope="row" class='awrnc'><a class="awr" href="#9tt2m0mpc2qqp">9tt2m0mpc2qqp</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select /*+ index(idl_char$ i_i...</td></tr>
<tr><td align="right" class='awrc'>103</td><td align="right" class='awrc'>103</td><td align="right" class='awrc'>2.06</td><td scope="row" class='awrc'><a class="awr" href="#a3jpjzh7mtwwp">a3jpjzh7mtwwp</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select /*+ index(idl_ub2$ i_id...</td></tr>
<tr><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>2.06</td><td scope="row" class='awrnc'><a class="awr" href="#fh5ufah919kun">fh5ufah919kun</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select /*+ index(idl_sb4$ i_id...</td></tr>
<tr><td align="right" class='awrc'>89</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>1.78</td><td scope="row" class='awrc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>66</td><td align="right" class='awrnc'>1.32</td><td scope="row" class='awrnc'><a class="awr" href="#35ra2cdwvqg1w">35ra2cdwvqg1w</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select parttype, partcnt, part...</td></tr>
<tr><td align="right" class='awrc'>64</td><td align="right" class='awrc'>64</td><td align="right" class='awrc'>1.28</td><td scope="row" class='awrc'><a class="awr" href="#gp8yk87v5n0d0">gp8yk87v5n0d0</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>SELECT session_id, process, se...</td></tr>
<tr><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>1.22</td><td scope="row" class='awrnc'><a class="awr" href="#dycmpuj6apqjs">dycmpuj6apqjs</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select pc.intcol#, pc.col# , p...</td></tr>
<tr><td align="right" class='awrc'>59</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>1.18</td><td scope="row" class='awrc'><a class="awr" href="#b1wc53ddd6h3p">b1wc53ddd6h3p</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select audit$, options from pr...</td></tr>
<tr><td align="right" class='awrnc'>59</td><td align="right" class='awrnc'>59</td><td align="right" class='awrnc'>1.18</td><td scope="row" class='awrnc'><a class="awr" href="#gngtvs38t0060">gngtvs38t0060</a></td>
<td class='awrnc'>
oraagent.bin@mcracpoc2.example.com (TNS V1-V3)
</td>
<td class='awrnc'>SELECT /*+ CONNECT_BY_FILTERIN...</td></tr>
<tr><td align="right" class='awrc'>58</td><td align="right" class='awrc'>3,708</td><td align="right" class='awrc'>1.16</td><td scope="row" class='awrc'><a class="awr" href="#87gaftwrm2h68">87gaftwrm2h68</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select o.owner#, o.name, o.nam...</td></tr>
<tr><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>1.06</td><td scope="row" class='awrnc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>INSERT INTO wri$_adv_message_g...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1000"></a>
<h3 class="awr">SQL ordered by Sharable Memory</h3>
<ul>
<li class="awr">Only Statements with Sharable Memory greater than 1048576 are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by amount of shared memory used"><tr><th class="awrbg" scope="col">Sharable Mem (b)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>2,785,220</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.21</td><td scope="row" class='awrc'><a class="awr" href="#2xfg27zhudyay">2xfg27zhudyay</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>WITH binds as (select :dbid as...</td></tr>
<tr><td align="right" class='awrnc'>1,962,624</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.15</td><td scope="row" class='awrnc'><a class="awr" href="#9sq9djzzhr19y">9sq9djzzhr19y</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>WITH binds as (select :dbid as...</td></tr>
<tr><td align="right" class='awrc'>1,466,458</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.11</td><td scope="row" class='awrc'><a class="awr" href="#c15gnn7knr6rj">c15gnn7knr6rj</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>WITH ash as (SELECT round((cas...</td></tr>
<tr><td align="right" class='awrnc'>1,192,636</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.09</td><td scope="row" class='awrnc'><a class="awr" href="#fg11facbfjwvx">fg11facbfjwvx</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'> SELECT /*+ no_monitor leading...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1100"></a>
<h3 class="awr">SQL ordered by Version Count</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1150"></a>
<h3 class="awr">SQL ordered by Cluster Wait Time</h3>
<ul>
<li class="awr"> %Total - Cluster Time	as a percentage of Total Cluster Wait Time </li>
<li class="awr"> %Clu	- Cluster Time	as a percentage of Elapsed Time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time </li>
<li class="awr"> Only SQL with Cluster Wait Time &gt; .005 seconds is reported</li>
<li class="awr">Total Cluster Wait Time (s):		 656</li>
<li class="awr">Captured SQL account for   96.5% of Total</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by cluster wait time"><tr><th class="awrbg" scope="col">Cluster Wait Time (s)</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed Time(s)</th><th class="awrbg" scope="col">%Clu</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>623.67</td><td align="right" class='awrc'>35,802</td><td align="right" class='awrc'>95.01</td><td align="right" class='awrc'>10,022.16</td><td align="right" class='awrc'>6.22</td><td align="right" class='awrc'>4.32</td><td align="right" class='awrc'>91.37</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'>81.82</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>12.46</td><td align="right" class='awrnc'>563.55</td><td align="right" class='awrnc'>14.52</td><td align="right" class='awrnc'>4.55</td><td align="right" class='awrnc'>82.95</td><td scope="row" class='awrnc'><a class="awr" href="#crcf813m8k6q0">crcf813m8k6q0</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>48.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>7.31</td><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>8.51</td><td align="right" class='awrc'>5.45</td><td align="right" class='awrc'>88.37</td><td scope="row" class='awrc'><a class="awr" href="#129d7r965xakz">129d7r965xakz</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>46.88</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>7.14</td><td align="right" class='awrnc'>563.67</td><td align="right" class='awrnc'>8.32</td><td align="right" class='awrnc'>5.43</td><td align="right" class='awrnc'>88.54</td><td scope="row" class='awrnc'><a class="awr" href="#7qdskga9a98tt">7qdskga9a98tt</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>45.64</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>6.95</td><td align="right" class='awrc'>563.65</td><td align="right" class='awrc'>8.10</td><td align="right" class='awrc'>5.37</td><td align="right" class='awrc'>88.72</td><td scope="row" class='awrc'><a class="awr" href="#c863fngb197rm">c863fngb197rm</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>43.61</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>6.64</td><td align="right" class='awrnc'>563.70</td><td align="right" class='awrnc'>7.74</td><td align="right" class='awrnc'>4.99</td><td align="right" class='awrnc'>89.43</td><td scope="row" class='awrnc'><a class="awr" href="#7huzc5jc2tyyr">7huzc5jc2tyyr</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>42.75</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>6.51</td><td align="right" class='awrc'>563.67</td><td align="right" class='awrc'>7.58</td><td align="right" class='awrc'>4.90</td><td align="right" class='awrc'>89.70</td><td scope="row" class='awrc'><a class="awr" href="#3uawgw8gknfx7">3uawgw8gknfx7</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>42.50</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>6.47</td><td align="right" class='awrnc'>563.74</td><td align="right" class='awrnc'>7.54</td><td align="right" class='awrnc'>4.94</td><td align="right" class='awrnc'>89.64</td><td scope="row" class='awrnc'><a class="awr" href="#g5wjwfs93z517">g5wjwfs93z517</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>40.49</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>6.17</td><td align="right" class='awrc'>563.72</td><td align="right" class='awrc'>7.18</td><td align="right" class='awrc'>4.64</td><td align="right" class='awrc'>90.27</td><td scope="row" class='awrc'><a class="awr" href="#4p0za9517qhty">4p0za9517qhty</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>38.05</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>5.80</td><td align="right" class='awrnc'>563.94</td><td align="right" class='awrnc'>6.75</td><td align="right" class='awrnc'>4.43</td><td align="right" class='awrnc'>90.67</td><td scope="row" class='awrnc'><a class="awr" href="#d49x1sm5j34ms">d49x1sm5j34ms</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>28.12</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.28</td><td align="right" class='awrc'>563.82</td><td align="right" class='awrc'>4.99</td><td align="right" class='awrc'>4.51</td><td align="right" class='awrc'>92.37</td><td scope="row" class='awrc'><a class="awr" href="#d7m0vnz9zpwju">d7m0vnz9zpwju</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>27.91</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.25</td><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>4.95</td><td align="right" class='awrnc'>4.17</td><td align="right" class='awrnc'>92.55</td><td scope="row" class='awrnc'><a class="awr" href="#bcmft1hf3v16j">bcmft1hf3v16j</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>25.51</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3.89</td><td align="right" class='awrc'>563.48</td><td align="right" class='awrc'>4.53</td><td align="right" class='awrc'>4.13</td><td align="right" class='awrc'>93.03</td><td scope="row" class='awrc'><a class="awr" href="#4kmfwdxs245tu">4kmfwdxs245tu</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>25.22</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>3.84</td><td align="right" class='awrnc'>563.71</td><td align="right" class='awrnc'>4.47</td><td align="right" class='awrnc'>4.12</td><td align="right" class='awrnc'>93.13</td><td scope="row" class='awrnc'><a class="awr" href="#b1nsgh4u6gc3q">b1nsgh4u6gc3q</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>25.18</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3.84</td><td align="right" class='awrc'>563.77</td><td align="right" class='awrc'>4.47</td><td align="right" class='awrc'>4.10</td><td align="right" class='awrc'>93.21</td><td scope="row" class='awrc'><a class="awr" href="#1s34w34a21n9p">1s34w34a21n9p</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>24.99</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>3.81</td><td align="right" class='awrnc'>563.50</td><td align="right" class='awrnc'>4.44</td><td align="right" class='awrnc'>4.34</td><td align="right" class='awrnc'>92.92</td><td scope="row" class='awrnc'><a class="awr" href="#6bzqp0g9nrnfz">6bzqp0g9nrnfz</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>24.42</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3.72</td><td align="right" class='awrc'>563.48</td><td align="right" class='awrc'>4.33</td><td align="right" class='awrc'>4.05</td><td align="right" class='awrc'>93.22</td><td scope="row" class='awrc'><a class="awr" href="#bnm8uw9y0ubhg">bnm8uw9y0ubhg</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>22.92</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>3.49</td><td align="right" class='awrnc'>563.50</td><td align="right" class='awrnc'>4.07</td><td align="right" class='awrnc'>3.85</td><td align="right" class='awrnc'>93.65</td><td scope="row" class='awrnc'><a class="awr" href="#drhdgsbjxfacu">drhdgsbjxfacu</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>2.05</td><td align="right" class='awrc'>2,762</td><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>4.20</td><td align="right" class='awrc'>48.71</td><td align="right" class='awrc'>12.48</td><td align="right" class='awrc'>42.59</td><td scope="row" class='awrc'><a class="awr" href="#2sxqgx5hx76qr">2sxqgx5hx76qr</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select /*+ rule */ bucket, end...</td></tr>
<tr><td align="right" class='awrnc'>1.97</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>563.82</td><td align="right" class='awrnc'>0.35</td><td align="right" class='awrnc'>2.50</td><td align="right" class='awrnc'>98.06</td><td scope="row" class='awrnc'><a class="awr" href="#gp2af7qaws3yq">gp2af7qaws3yq</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>1.79</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>2.06</td><td align="right" class='awrc'>86.60</td><td align="right" class='awrc'>3.87</td><td align="right" class='awrc'>9.73</td><td scope="row" class='awrc'><a class="awr" href="#8vnjxtfyy84as">8vnjxtfyy84as</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select flags from system.aq$_q...</td></tr>
<tr><td align="right" class='awrnc'>1.68</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0.26</td><td align="right" class='awrnc'>1.75</td><td align="right" class='awrnc'>96.36</td><td align="right" class='awrnc'>1.61</td><td align="right" class='awrnc'>1.99</td><td scope="row" class='awrnc'><a class="awr" href="#32bhha21dkv0v">32bhha21dkv0v</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select col#, intcol#, charseti...</td></tr>
<tr><td align="right" class='awrc'>0.99</td><td align="right" class='awrc'>4,538</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>1.74</td><td align="right" class='awrc'>56.90</td><td align="right" class='awrc'>20.16</td><td align="right" class='awrc'>28.00</td><td scope="row" class='awrc'><a class="awr" href="#0sbbcuruzd66f">0sbbcuruzd66f</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select /*+ rule */ bucket_cnt,...</td></tr>
<tr><td align="right" class='awrnc'>0.82</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>31.22</td><td align="right" class='awrnc'>2.64</td><td align="right" class='awrnc'>24.82</td><td align="right" class='awrnc'>18.51</td><td scope="row" class='awrnc'><a class="awr" href="#fhf8upax5cxsz">fhf8upax5cxsz</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.dbms_auto_report_int...</td></tr>
<tr><td align="right" class='awrc'>0.70</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>30.52</td><td align="right" class='awrc'>2.29</td><td align="right" class='awrc'>24.57</td><td align="right" class='awrc'>17.86</td><td scope="row" class='awrc'><a class="awr" href="#5k5207588w9ry">5k5207588w9ry</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>SELECT DBMS_REPORT.GET_REPORT(...</td></tr>
<tr><td align="right" class='awrnc'>0.66</td><td align="right" class='awrnc'>89</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.70</td><td align="right" class='awrnc'>94.88</td><td align="right" class='awrnc'>4.96</td><td align="right" class='awrnc'>1.61</td><td scope="row" class='awrnc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.75</td><td align="right" class='awrc'>47.68</td><td align="right" class='awrc'>44.15</td><td align="right" class='awrc'>2.08</td><td scope="row" class='awrc'><a class="awr" href="#a95n8p4vpxmps">a95n8p4vpxmps</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>begin prvt_hdm.execute_slave_a...</td></tr>
<tr><td align="right" class='awrnc'>0.36</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>47.79</td><td align="right" class='awrnc'>44.07</td><td align="right" class='awrnc'>2.09</td><td scope="row" class='awrnc'><a class="awr" href="#drktaf71uygnb">drktaf71uygnb</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>BEGIN sys.prvt_hdm.auto_execut...</td></tr>
<tr><td align="right" class='awrc'>0.19</td><td align="right" class='awrc'>865</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.81</td><td align="right" class='awrc'>23.66</td><td align="right" class='awrc'>17.96</td><td align="right" class='awrc'>64.57</td><td scope="row" class='awrc'><a class="awr" href="#acmvv4fhdc9zh">acmvv4fhdc9zh</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select obj#, type#, ctime, mti...</td></tr>
<tr><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>3.37</td><td align="right" class='awrnc'>5.55</td><td align="right" class='awrnc'>7.73</td><td align="right" class='awrnc'>90.37</td><td scope="row" class='awrnc'><a class="awr" href="#03guhbfpak0w7">03guhbfpak0w7</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select /*+ index(idl_ub1$ i_id...</td></tr>
<tr><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>231</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.65</td><td align="right" class='awrc'>24.50</td><td align="right" class='awrc'>18.70</td><td align="right" class='awrc'>61.22</td><td scope="row" class='awrc'><a class="awr" href="#3un99a0zwp4vd">3un99a0zwp4vd</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select owner#, name, namespace...</td></tr>
<tr><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>3.86</td><td align="right" class='awrnc'>2.74</td><td align="right" class='awrnc'>27.47</td><td align="right" class='awrnc'>14.54</td><td scope="row" class='awrnc'><a class="awr" href="#2xfg27zhudyay">2xfg27zhudyay</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>WITH binds as (select :dbid as...</td></tr>
<tr><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>278</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>37.23</td><td align="right" class='awrc'>54.22</td><td align="right" class='awrc'>13.91</td><td scope="row" class='awrc'><a class="awr" href="#9zbjgq87hy6uv">9zbjgq87hy6uv</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select t.ts#, t.file#, t.block...</td></tr>
<tr><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>686</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.23</td><td align="right" class='awrnc'>34.89</td><td align="right" class='awrnc'>38.86</td><td align="right" class='awrnc'>35.51</td><td scope="row" class='awrnc'><a class="awr" href="#9tgj4g8y4rwy8">9tgj4g8y4rwy8</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select type#, blocks, extents,...</td></tr>
<tr><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>103</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.82</td><td align="right" class='awrc'>9.26</td><td align="right" class='awrc'>9.52</td><td align="right" class='awrc'>85.13</td><td scope="row" class='awrc'><a class="awr" href="#a3jpjzh7mtwwp">a3jpjzh7mtwwp</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select /*+ index(idl_ub2$ i_id...</td></tr>
<tr><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>23.94</td><td align="right" class='awrnc'>21.44</td><td align="right" class='awrnc'>61.79</td><td scope="row" class='awrnc'><a class="awr" href="#fh5ufah919kun">fh5ufah919kun</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select /*+ index(idl_sb4$ i_id...</td></tr>
<tr><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>28.25</td><td align="right" class='awrc'>63.79</td><td align="right" class='awrc'>8.20</td><td scope="row" class='awrc'><a class="awr" href="#c6108cmanwd01">c6108cmanwd01</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'> select xmlagg(nvl2(event, xml...</td></tr>
<tr><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.34</td><td align="right" class='awrnc'>12.88</td><td align="right" class='awrnc'>23.10</td><td align="right" class='awrnc'>67.47</td><td scope="row" class='awrnc'><a class="awr" href="#1rpgk59t8pvs6">1rpgk59t8pvs6</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'> begin dbms_output.get_line(:l...</td></tr>
<tr><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>3,708</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrc'>22.73</td><td align="right" class='awrc'>83.19</td><td align="right" class='awrc'>0.00</td><td scope="row" class='awrc'><a class="awr" href="#87gaftwrm2h68">87gaftwrm2h68</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select o.owner#, o.name, o.nam...</td></tr>
<tr><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>3.55</td><td align="right" class='awrnc'>1.18</td><td align="right" class='awrnc'>22.87</td><td align="right" class='awrnc'>17.32</td><td scope="row" class='awrnc'><a class="awr" href="#grjtn5w5y8jfj">grjtn5w5y8jfj</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT XMLELEMENT( &quot;spot_addm&quot;...</td></tr>
<tr><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>255</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.55</td><td align="right" class='awrc'>7.48</td><td align="right" class='awrc'>53.01</td><td align="right" class='awrc'>34.82</td><td scope="row" class='awrc'><a class="awr" href="#121ffmrc95v7g">121ffmrc95v7g</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select i.obj#, i.ts#, i.file#,...</td></tr>
<tr><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>314</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>10.83</td><td align="right" class='awrnc'>36.86</td><td align="right" class='awrnc'>50.44</td><td scope="row" class='awrnc'><a class="awr" href="#g0t052az3rx44">g0t052az3rx44</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select name, intcol#, segcol#,...</td></tr>
<tr><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>240</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>11.60</td><td align="right" class='awrc'>21.19</td><td align="right" class='awrc'>69.57</td><td scope="row" class='awrc'><a class="awr" href="#8swypbbr0m372">8swypbbr0m372</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select order#, columns, types ...</td></tr>
<tr><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>3.31</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>21.13</td><td align="right" class='awrnc'>15.38</td><td scope="row" class='awrnc'><a class="awr" href="#9wk0gqnd4ng50">9wk0gqnd4ng50</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>SELECT XMLCONCAT(XMLELEMENT( &quot;...</td></tr>
<tr><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>20.80</td><td align="right" class='awrc'>49.44</td><td align="right" class='awrc'>24.26</td><td scope="row" class='awrc'><a class="awr" href="#g42nd3t1t35kb">g42nd3t1t35kb</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select nvl(min(value), 10) fro...</td></tr>
<tr><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.37</td><td align="right" class='awrnc'>7.86</td><td align="right" class='awrnc'>38.93</td><td align="right" class='awrnc'>50.21</td><td scope="row" class='awrnc'><a class="awr" href="#1d25xwrbnv4ub">1d25xwrbnv4ub</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'> with base_data as( select buc...</td></tr>
<tr><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>145</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>16.65</td><td align="right" class='awrc'>70.67</td><td align="right" class='awrc'>6.69</td><td scope="row" class='awrc'><a class="awr" href="#3dbzmtf9ahvzt">3dbzmtf9ahvzt</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>merge /* KSXM:OPTIM_DML_INF */...</td></tr>
<tr><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>11.15</td><td align="right" class='awrnc'>18.43</td><td align="right" class='awrnc'>74.70</td><td scope="row" class='awrnc'><a class="awr" href="#9tt2m0mpc2qqp">9tt2m0mpc2qqp</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select /*+ index(idl_char$ i_i...</td></tr>
<tr><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>326</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>24.60</td><td align="right" class='awrc'>68.60</td><td align="right" class='awrc'>4.79</td><td scope="row" class='awrc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>20.17</td><td align="right" class='awrnc'>31.91</td><td align="right" class='awrnc'>49.40</td><td scope="row" class='awrnc'><a class="awr" href="#0fr8zhn4ymu3v">0fr8zhn4ymu3v</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select intcol#, type, flags, l...</td></tr>
<tr><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>1.38</td><td align="right" class='awrc'>1.11</td><td align="right" class='awrc'>12.22</td><td align="right" class='awrc'>10.59</td><td scope="row" class='awrc'><a class="awr" href="#6t44kht0nhjs9">6t44kht0nhjs9</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'> WITH instances as (SELECT hos...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>7.36</td><td align="right" class='awrnc'>83.34</td><td align="right" class='awrnc'>5.82</td><td scope="row" class='awrnc'><a class="awr" href="#gyv3savxpszuj">gyv3savxpszuj</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'> WITH iometric as ( select buc...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>8.73</td><td align="right" class='awrc'>21.80</td><td align="right" class='awrc'>70.65</td><td scope="row" class='awrc'><a class="awr" href="#9fjf75a1s4y19">9fjf75a1s4y19</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select procedure#, procedurena...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.23</td><td align="right" class='awrnc'>5.63</td><td align="right" class='awrnc'>50.86</td><td align="right" class='awrnc'>37.17</td><td scope="row" class='awrnc'><a class="awr" href="#3kqrku32p6sfn">3kqrku32p6sfn</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>MERGE /*+ OPT_PARAM('_parallel...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>19.13</td><td align="right" class='awrc'>38.69</td><td align="right" class='awrc'>40.49</td><td scope="row" class='awrc'><a class="awr" href="#9g485acn2n30m">9g485acn2n30m</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select col#, intcol#, reftyp, ...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>372</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>5.95</td><td align="right" class='awrnc'>29.32</td><td align="right" class='awrnc'>64.58</td><td scope="row" class='awrnc'><a class="awr" href="#5n1fs4m2n2y0r">5n1fs4m2n2y0r</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select pos#, intcol#, col#, sp...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>40.69</td><td align="right" class='awrc'>55.48</td><td align="right" class='awrc'>6.35</td><td scope="row" class='awrc'><a class="awr" href="#b1wc53ddd6h3p">b1wc53ddd6h3p</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select audit$, options from pr...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>44</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>48.47</td><td align="right" class='awrnc'>62.77</td><td align="right" class='awrnc'>2.07</td><td scope="row" class='awrnc'><a class="awr" href="#0m78skf1mudnb">0m78skf1mudnb</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select audit$, properties from...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>30.19</td><td align="right" class='awrc'>74.97</td><td align="right" class='awrc'>4.13</td><td scope="row" class='awrc'><a class="awr" href="#dycmpuj6apqjs">dycmpuj6apqjs</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select pc.intcol#, pc.col# , p...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>43.00</td><td align="right" class='awrnc'>52.67</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#brk04qfvsb4bb">brk04qfvsb4bb</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select current_value from hang...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.55</td><td align="right" class='awrc'>1.33</td><td align="right" class='awrc'>13.83</td><td align="right" class='awrc'>17.98</td><td scope="row" class='awrc'><a class="awr" href="#3s008f5ragg5n">3s008f5ragg5n</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>WITH names as (SELECT metric_n...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>144</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>21.65</td><td align="right" class='awrnc'>79.16</td><td align="right" class='awrnc'>0.00</td><td scope="row" class='awrnc'><a class="awr" href="#afx304d90ps3z">afx304d90ps3z</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select rowcnt, blkcnt, empcnt,...</td></tr>
<tr><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>3.49</td><td align="right" class='awrc'>72.54</td><td align="right" class='awrc'>21.38</td><td scope="row" class='awrc'><a class="awr" href="#4p5vv6tqbtqjy">4p5vv6tqbtqjy</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'> with rmmetrics_data as (-- ma...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>6.67</td><td align="right" class='awrnc'>51.38</td><td align="right" class='awrnc'>27.35</td><td scope="row" class='awrnc'><a class="awr" href="#965qvk5xttdbw">965qvk5xttdbw</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>WITH inst_data as (SELECT inst...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="03guhbfpak0w7"></a>03guhbfpak0w7</td><td class='awrc'><pre_sqltext class="awr">select /*+ index(idl_ub1$ i_idl_ub11) */ piece#, length, piece from idl_ub1$ where obj#=:1 and part=:2 and version=:3 order by piece#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="0fr8zhn4ymu3v"></a>0fr8zhn4ymu3v</td><td class='awrnc'><pre_sqltext class="awr">select intcol#, type, flags, lobcol, objcol, extracol, schemaoid,   elemnum from opqtype$ where obj# = :1 order by intcol# asc</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="0m78skf1mudnb"></a>0m78skf1mudnb</td><td class='awrc'><pre_sqltext class="awr">select audit$, properties from type_misc$ where obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="0sbbcuruzd66f"></a>0sbbcuruzd66f</td><td class='awrnc'><pre_sqltext class="awr">select /*+ rule */ bucket_cnt,  row_cnt,  cache_cnt,  null_cnt,	timestamp#,  sample_size,  minimum,  maximum,  distcnt,  lowval,  hival,  density,  col#,  spare1,  spare2,  avgcln,  minimum_enc,  maximum_enc from hist_head$ where obj#=:1 and intcol#=:2</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="121ffmrc95v7g"></a>121ffmrc95v7g</td><td class='awrc'><pre_sqltext class="awr">select i.obj#, i.ts#, i.file#, i.block#, i.intcols, i.type#, i.flags, i.property, i.pctfree$, i.initrans, i.maxtrans, i.blevel, i.leafcnt, i.distkey, i.lblkkey, i.dblkkey, i.clufac, i.cols, i.analyzetime, i.samplesize, i.dataobj#, nvl(i.degree, 1), nvl(i.instances, 1), i.rowcnt, mod(i.pctthres$, 256), i.indmethod#, i.trunccnt, nvl(c.unicols, 0), nvl(c.deferrable#+c.valid#, 0), nvl(i.spare1, i.intcols), i.spare4, i.spare2, i.spare6, decode(i.pctthres$, null, null, mod(trunc(i.pctthres$/256), 256)), nvl(i.evaledition#, 1), nvl(i.unusablebefore#, 0), nvl(i.unusablebeginning#, 0),  ist.cachedblk, ist.cachehit, ist.logicalread from ind$ i,  ind_stats$ ist,  (select enabled,  min(intcols) unicols, min(to_number(bitand(defer, 1))) deferrable#, min(to_number(bitand(defer, 4))) valid# from cdef$ where obj#=:1 and enabled &gt; 1 group by enabled) c where i.obj#=c.enabled(+) and i.obj# = ist.obj#(+) and i.bo#=:1 order by i.obj#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="129d7r965xakz"></a>129d7r965xakz</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '30';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="1d25xwrbnv4ub"></a>1d25xwrbnv4ub</td><td class='awrc'><pre_sqltext class="awr">
      with base_data as(
      select bucket_id,
	     sum(case when name='Average Active Sessions' then aas else 0 end)
									  dbt,
	     sum(case when name='CPU Usage Per Sec' then aas else 0 end)
									  cpu,
	     sum(case when name='User I/O' then aas else 0 end)
									  uio
	from (
	  select id,  name,  bucket_id,  sum(aas) aas
	    from table(sys.gv$(cursor(
	      -- get first data point per bucket
	      select userenv('INSTANCE') inst_id,
		     id,  name,  bucket_id,  aas
		from (
		  -- only get first data point per bucket
		  select bucket_id,  id,  name,  aas,
			 row_number() over (partition by bucket_id,  id
					 order by aas desc nulls last,	id) rn
		    from ( -- union of sysmetric and waitclass
		      select metric_id id,  metric_name name,
			      trunc(
			       ( (extract(day from
				 (cast(trunc(end_time, 'mi') as timestamp) -
				  cast(
				   trunc(
				    to_date(:b_start_time, :date_fmt), 'mi')
						     as timestamp))) * 86400 +
				  extract(hour from
				 (cast(trunc(end_time, 'mi') as timestamp) -
				  cast(
				   trunc(
				    to_date(:b_start_time, :date_fmt), 'mi')
						      as timestamp))) * 3600 +
				  extract(minute from
				 (cast(trunc(end_time, 'mi') as timestamp) -
				  cast(
				   trunc(to_date(:b_start_time, :date_fmt), 'mi')
							as timestamp))) * 60 +
				  extract(second from
				 (cast(trunc(end_time, 'mi') as timestamp) -
				  cast(
				   trunc(to_date(:b_start_time, :date_fmt), 'mi')
							    as timestamp))) )
				/ :p_bucket_interval)) + 1	     bucket_id,
			      decode(metric_name, 'CPU Usage Per Sec',
				     value/100,  value) 		   aas
			from v$sysmetric_history
		       where group_id = :b_minute_group_id
			 and end_time &gt;= to_date(:b_start_time, :date_fmt)
			 and end_time &lt;  to_date(:b_end_time, :date_fmt)
			 and metric_name in ('CPU Usage Per Sec',
					     'Average Active Sessions')
		      union all
		      select wc.wait_class# id,  e.wait_class name,
			trunc(
			 ((extract(day from
			   (cast(trunc(end_time, 'mi') as timestamp) -
			      cast(
			       trunc(
				    to_date(:b_start_time, :date_fmt), 'mi')
						     as timestamp))) * 86400 +
			   extract(hour from
			    (cast(trunc(end_time, 'mi') as timestamp) -
			     cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
						      as timestamp))) * 3600 +
			   extract(minute from
			    (cast(trunc(end_time, 'mi') as timestamp) -
			     cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
							 as timestamp))) * 60 +
			   extract(second from
			    (cast(trunc(end_time, 'mi') as timestamp) -
			     cast(trunc(to_date(:b_start_time, :date_fmt), 'mi')
							    as timestamp))) )
				/ :p_bucket_interval)) + 1	     bucket_id,
			      wc.time_waited/intsize_csec		   aas
			 from v$waitclassmetric_history wc,
			      v$system_wait_class e
		       where wc.wait_class# = e.wait_class#
			 and e.wait_class = 'User I/O'
			 and wc.end_time &gt;= to_date(:b_start_time, :date_fmt)
			 and wc.end_time &lt;  to_date(:b_end_time, :date_fmt)))
	       where rn = 1))) gvtf
	   where inst_id between :p_inst_id_low and :p_inst_id_high
	   group by id,  name,	bucket_id)
       group by bucket_id)
      select xmlelement(&quot;timepicker&quot;,
	      xmlelement(&quot;buckets&quot;,
		 xmlattributes(:p_bucket_interval as &quot;bucket_interval&quot;,
			       :p_bucket_count	  as &quot;bucket_count&quot;,
			       :b_start_time	  as &quot;start_time&quot;,
			       :b_end_time	  as &quot;end_time&quot;,
			       :b_duration	  as &quot;duration&quot;),
		 xmlagg(xmlelement(&quot;sd&quot;,
		  xmlforest(bucket_id as
&quot;time&quot;,
			    round(dbt, 6) as &quot;dbt&quot;,
			    round(cpu, 6) as &quot;cpu&quot;,
			    round(uio, 6) as &quot;uio&quot;))
		  order by bucket_id)),
	      nvl2(:l_awr_min_availtime,
		   xmlelement(&quot;firstAvailableDate&quot;, :l_awr_min_availtime),
		   null),
	      nvl2(:l_awr_max_availtime,
		   xmlelement(&quot;lastAvailableDate&quot;, :l_awr_max_availtime),
		   null),
	      nvl2(:l_tzr,
		   xmlelement(&quot;TZOffset&quot;, :l_tzr),
		   null),
	      nvl2(:l_options, xmltype(:l_options), null))
	from base_data
       where nvl(dbt, 0) + nvl(cpu, 0) + nvl(uio, 0) &gt; 0</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="1rpgk59t8pvs6"></a>1rpgk59t8pvs6</td><td class='awrnc'><pre_sqltext class="awr">      begin
	 dbms_output.get_line(:line,  :status);
      end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="1s34w34a21n9p"></a>1s34w34a21n9p</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '21';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="2sxqgx5hx76qr"></a>2sxqgx5hx76qr</td><td class='awrnc'><pre_sqltext class="awr">select /*+ rule */ bucket,  endpoint,  col#,  epvalue,  epvalue_raw,  ep_repeat_count,  endpoint_enc from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by bucket</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="2xfg27zhudyay"></a>2xfg27zhudyay</td><td class='awrc'><pre_sqltext class="awr">WITH binds as
	 (select :dbid			as dbid
	       ,  :inst_id_low		 as instIdLow
	       ,  :inst_id_high 	 as instIdHigh
	       ,  :begin_snap		 as beginSnap
	       ,  :end_snap		 as endSnap
	       ,  :begin_time		 as beginTime
	       ,  :end_time		 as endTime
	       ,  :disk_begin_time	 as diskBeginTime
	       ,  :disk_end_time	 as diskEndTime
	       ,  :mem_begin_time	 as memBeginTime
	       ,  :mem_end_time 	 as memEndTime
	       ,  :bucket_count 	 as bucketCount
	       ,  :bucket_interval	 as bucketInterval
	       ,  :mem_enable		 as memEnable
	       ,  :disk_enable		 as diskEnable
	       ,  :disk_filter_ratio	 as filterRatio,  :filter_action as filter_action,  :filter_blocking_session as filter_blocking_session,  :filter_capture_id as filter_capture_id,  :filter_client_id as filter_client_id,  :filter_consumer_group_id as filter_consumer_group_id,  :filter_dbop as filter_dbop,  :filter_ecid as filter_ecid,	:filter_event as filter_event,	:filter_instance_number as filter_instance_number,  :filter_is_captured as filter_is_captured,	:filter_is_filtered_out as filter_is_filtered_out,  :filter_is_nc_background as filter_is_nc_background,  :filter_is_replayed as filter_is_replayed,  :filter_machine as filter_machine,  :filter_machine_port as filter_machine_port,	:filter_module as filter_module,  :filter_object as filter_object,  :filter_pdb as filter_pdb,	:filter_physical_session as filter_physical_session,  :filter_pl_sql as filter_pl_sql,	:filter_pl_sql_top as filter_pl_sql_top,  :filter_program as filter_program,  :filter_px_process as filter_px_process,	:filter_service_hash as filter_service_hash,  :filter_session_type as filter_session_type,  :filter_sql_fms as filter_sql_fms,	:filter_sql_id_top as filter_sql_id_top,  :filter_sql_opcode as filter_sql_opcode,  :filter_sql_opcode_top as filter_sql_opcode_top,  :filter_sql_rws as filter_sql_rws,  :filter_sql_rws_line as filter_sql_rws_line,	:filter_sqlid as filter_sqlid,	:filter_sqlid_fullphv as filter_sqlid_fullphv,	:filter_sqlid_phv as filter_sqlid_phv,	:filter_user_id as filter_user_id,  :filter_wait_class as filter_wait_class,  :filter_xid as filter_xid from sys.dual)	,  unified_ash as
	     (SELECT a.sample_id
       ,  a.sample_time
       ,  a.session_id
       ,  a.session_serial#
       ,  a.session_type
       ,  a.session_state
       ,  a.flags
       ,  a.user_id
       ,  a.sql_id
       ,  a.sql_opcode
       ,  a.sql_opname
       ,  a.top_level_sql_id
       ,  a.top_level_sql_opcode
       ,  a.sql_child_number
       ,  a.sql_plan_hash_value
       ,  a.sql_full_plan_hash_value
       ,  a.sql_plan_line_id
       ,  a.sql_plan_operation
       ,  a.sql_plan_options
       ,  a.sql_exec_id
       ,  a.force_matching_signature
       ,  a.plsql_entry_object_id
       ,  a.plsql_entry_subprogram_id
       ,  a.plsql_object_id
       ,  a.plsql_subprogram_id
       ,  a.service_hash
       ,  a.qc_session_id
       ,  a.qc_instance_id
       ,  a.qc_session_serial#
       ,  nvl(a.event,
	    CASE WHEN bitand(a.time_model,  power(2, 19)) &gt; 0
		 THEN 'CPU: IM Populate'
		 WHEN bitand(a.time_model,  power(2, 20)) &gt; 0
		 THEN 'CPU: IM Prepopulate'
		 WHEN bitand(a.time_model,  power(2, 21)) &gt; 0
		 THEN 'CPU: IM Repopulate'
		 WHEN bitand(a.time_model,  power(2, 22)) &gt; 0
		 THEN 'CPU: IM Trickle Repop'
		 WHEN bitand(a.time_model,  power(2, 18)) &gt; 0
		 THEN 'CPU: IM Query'
	     ELSE 'CPU + Wait for CPU' END) as event
       ,  nvl(a.event_id,  1)
	   as event_id	
       ,  nvl(a.wait_class,  'CPU')
	   as wait_class	
       ,  nvl(a.wait_class_id,	9999)
	   as wait_class_id
       ,  a.seq#
       ,  a.p1
       ,  a.p1text
       ,  a.p2
       ,  a.p2text	
       ,  a.p3
       ,  a.p3text	
       ,  a.wait_time
       ,  a.time_waited	
       ,  rawtohex(a.xid) as xid	
       ,  a.blocking_session
       ,  a.blocking_session_serial#
       ,  a.blocking_session_status
       ,  a.blocking_inst_id
       ,  a.current_obj#
       ,  a.current_file#
       ,  a.current_block#	
       ,  a.top_level_call#
       ,  a.top_level_call_name
       ,  a.program
       ,  a.module
       ,  a.action
       ,  a.client_id
       ,  a.remote_instance#	
       ,  a.ecid
       ,  a.consumer_group_id
       ,  a.machine
       ,  a.port
       ,  a.in_connection_mgmt
       ,  a.in_parse
       ,  a.in_hard_parse	
       ,  a.in_sql_execution
       ,  a.in_plsql_execution
       ,  a.in_plsql_rpc	
       ,  a.in_plsql_compilation
       ,  a.in_java_execution
       ,  a.in_bind
       ,  a.in_cursor_close
       ,  a.in_sequence_load
       ,  a.is_captured
       ,  a.is_replayed
       ,  a.dbreplay_file_id
       ,  a.dbop_name
       ,  a.con_dbid,  decode(binds.diskEnable, 0, 1, binds.filterRatio)
		       as sample_count
		   ,  inst_id as instance_number
		FROM sys.gv_$active_session_history a,	binds
	       WHERE binds.memEnable = 1
		 AND (	binds.diskEnable = 0
		     OR (  binds.diskEnable = 1
		       AND a.is_awr_sample = 'Y'
		       AND bitand(a.flags,  128) = 0 ) )
		 AND a.inst_id between
			  binds.instIdLow
		      and binds.instIdHigh
		 AND a.sample_time between
			  binds.beginTime
		      and binds.endTime
	      UNION ALL
	      SELECT a.sample_id
       ,  a.sample_time
       ,  a.session_id
       ,  a.session_serial#
       ,  a.session_type
       ,  a.session_state
       ,  a.flags
       ,  a.user_id
       ,  a.sql_id
       ,  a.sql_opcode
       ,  a.sql_opname
       ,  a.top_level_sql_id
       ,  a.top_level_sql_opcode
       ,  a.sql_child_number
       ,  a.sql_plan_hash_value
       ,  a.sql_full_plan_hash_value
       ,  a.sql_plan_line_id
       ,  a.sql_plan_operation
       ,  a.sql_plan_options
       ,  a.sql_exec_id
       ,  a.force_matching_signature
       ,  a.plsql_entry_object_id
       ,  a.plsql_entry_subprogram_id
       ,  a.plsql_object_id
       ,  a.plsql_subprogram_id
       ,  a.service_hash
       ,  a.qc_session_id
       ,  a.qc_instance_id
       ,  a.qc_session_serial#
       ,  nvl(a.event,
	    CASE WHEN bitand(a.time_model,  power(2, 19)) &gt; 0
		 THEN 'CPU: IM Populate'
		 WHEN bitand(a.time_model,  power(2, 20)) &gt; 0
		 THEN 'CPU: IM Prepopulate'
		 WHEN bitand(a.time_model,  power(2, 21)) &gt; 0
		 THEN 'CPU: IM Repopulate'
		 WHEN bitand(a.time_model,  power(2, 22)) &gt; 0
		 THEN 'CPU: IM Trickle Repop'
		 WHEN bitand(a.time_model,  power(2, 18)) &gt; 0
		 THEN 'CPU: IM Query'
	     ELSE 'CPU + Wait for CPU' END) as event
       ,  nvl(a.event_id,  1)
	   as event_id	
       ,  nvl(a.wait_class,  'CPU')
	   as wait_class	
       ,  nvl(a.wait_class_id,	9999)
	   as wait_class_id
       ,  a.seq#
       ,  a.p1
       ,  a.p1text
       ,  a.p2
       ,  a.p2text	
       ,  a.p3
       ,  a.p3text	
       ,  a.wait_time
       ,  a.time_waited	
       ,  rawtohex(a.xid) as xid	
       ,  a.blocking_session
       ,  a.blocking_session_serial#
       ,  a.blocking_session_status
       ,  a.blocking_inst_id
       ,  a.current_obj#
       ,  a.current_file#
       ,  a.current_block#	
       ,  a.top_level_call#
       ,  a.top_level_call_name
       ,  a.program
       ,  a.module
       ,  a.action
       ,  a.client_id
       ,  a.remote_instance#	
       ,  a.ecid
       ,  a.consumer_group_id
       ,  a.machine
       ,  a.port
       ,  a.in_connection_mgmt
       ,  a.in_parse
       ,  a.in_hard_parse	
       ,  a.in_sql_execution
       ,  a.in_plsql_execution
       ,  a.in_plsql_rpc	
       ,  a.in_plsql_compilation
       ,  a.in_java_execution
       ,  a.in_bind
       ,  a.in_cursor_close
       ,  a.in_sequence_load
       ,  a.is_captured
       ,  a.is_replayed
       ,  a.dbreplay_file_id
       ,  a.dbop_name
       ,  a.con_dbid,  binds.filterRatio as sample_count
		   ,  instance_number as instance_number
		FROM AWR_ROOT_active_sess_history a,
		     binds
	       WHERE binds.diskEnable = 1
		 AND a.dbid = binds.dbid
		 AND a.instance_number between
			  binds.instIdLow
		      and binds.instIdHigh
		 AND a.snap_id between
			  binds.beginSnap
		      and binds.endSnap + 1
		 AND a.sample_time between
			  binds.beginTime
		      and binds.endTime
	     ),  logical_ash as
	     (select sample_id
		   ,  sample_time
		   ,  sample_count
		   ,  instance_number as inst_id, action as action, event as event, instance_number as instance_number, module as module, instance_number || ':' || session_id || ', ' || session_serial# as physical_session, service_hash as service_hash, sql_id as sqlid, wait_class as wait_class,  xid as xid,  user_id as user_id,  program as program from unified_ash) ,  bucketized_ash as
	   (SELECT ash0.*,
		  (case when binds.bucketCount &gt; 1
			then trunc( ( (24 * 60 * 60 *
				       extract(day from sample_time
						      - binds.beginTime))
				    + (60 * 60 *
				       extract(hour from sample_time
						      - binds.beginTime))
				    + (60 *
				       extract(minute from sample_time
						      - binds.beginTime))
				    + (1 *
				       extract(second from sample_time
						      - binds.beginTime))
				     ) / binds.bucketInterval
				   ) + 1
			else 1
		   end) as bucket_number
	   FROM logical_ash ash0,  binds),  filter_xml as
	 (SELECT xmlconcat(xmlelement(&quot;filters&quot; )
	 ,  xmlelement(&quot;report_time&quot;, xmlattributes(
	     to_char(o.begintime,  'HH24:MI:SS MM/DD/YYYY') as &quot;begin_time&quot;,
	     to_char(o.endtime,  'HH24:MI:SS MM/DD/YYYY') as &quot;end_time&quot;))) as xml_frag FROM
    (select binds.*,  nvl(to_number(filter_pdb), 0) as con_dbid from binds) o) ,  filtered_ash as
	      (SELECT ash.*,
		      1  filtered
	       FROM bucketized_ash ash,  binds WHERE 1=1 ),  grouped_ash as
		   (SELECT ash.*,   0 AS bucket_type  FROM (SELECT sqlid, physical_session, action, module, service_hash, instance_number, event, wait_class	  ,  grouping_id(sqlid, physical_session, action, module, service_hash, instance_number, event, wait_class) as gid  , max(inst_id)	      as inst_id
			     , sum(sample_count)       as sample_count
			     , count(distinct sqlid)   as uniq_sqlids
			     , count(distinct xid)     as uniq_xids
			     , count(distinct physical_session)
						      as uniq_sessions
			     , count(distinct instance_number)
						      as uniq_instances, max(user_id) as user_id, max(program) as program from	filtered_ash
		     group by  grouping sets( (wait_class),  (sqlid),  (module),  (event),  (action),  (instance_number),  (physical_session),	(service_hash)) ) ash ),  component_1_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket


		    from (select max(case when mem_rank &lt;= 13
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 13
				   then mem_rank
				   else (13 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 13
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 13
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 13
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 13
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select wait_class as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , wait_class) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 254
			      and wait_class is not null)
		    group by (case when mem_rank &lt;= 13
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_1_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('wait_class' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 13
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       )
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 13
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 13
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_1_treemap) t
		   ) topmems),	component_2_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket


		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select event as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , event) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 253
			      and event is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_2_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('event' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       )
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_2_treemap) t
		   ) topmems),	component_3_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket

			 , NVL((SELECT instance_name
	FROM sys.gv_$instance v
	WHERE v.instance_number = left.dim_val
	  AND rownum &lt; 2  ), ( SELECT instance_name
	FROM AWR_ROOT_database_instance v,  binds b
	WHERE v.dbid = b.dbid
	  AND v.instance_number = left.dim_val
	  AND rownum &lt; 2)) as instance_name
		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select instance_number as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , instance_number) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 251
			      and instance_number is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_3_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('instance_number' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       , instance_name)
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_3_treemap) t
		   ) topmems),	component_4_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket

			 , NVL((SELECT name
       FROM sys.gv_$active_services v
       WHERE v.name_hash = left.dim_val
	     AND v.inst_id = left.inst_id
	     AND rownum &lt; 2 ), ( SELECT service_name
       FROM AWR_ROOT_service_name v,  binds b
       WHERE v.dbid = b.dbid
	     AND v.service_name_hash = left.dim_val
	     AND rownum &lt; 2)) as service_name
		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select service_hash as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , service_hash) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 247
			      and service_hash is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_4_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('service_hash' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       , service_name)
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_4_treemap) t
		   ) topmems),	component_5_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket


		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select module as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , module) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 239
			      and module is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_5_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('module' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       )
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_5_treemap) t
		   ) topmems),	component_6_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket


		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select action as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , action) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 223
			      and action is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_6_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('action' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)

				       )
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_6_treemap) t
		   ) topmems),	component_7_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket
			 , user_id, program

		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id

			 , max(case when mem_rank &lt;= 5
			  then user_id		else null
		     end)		      as user_id, max(case when mem_rank &lt;= 5
			  then program		else null
		     end)		      as program
		     from (select physical_session as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , physical_session) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id

				 , user_id, program
			     from grouped_ash
			    where gid = 191
			      and physical_session is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_7_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('physical_session' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as &quot;uniq_instances&quot;)
				       , xmlconcat(xmlelement(&quot;info&quot;, xmlattributes('user_id' as &quot;name&quot;), user_id), xmlelement(&quot;info&quot;, xmlattributes('program' as
&quot;name&quot;), program))
				       )
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_7_treemap) t
		   ) topmems),	component_8_treemap as
		  (select dim_val
			 , inst_id

			 , sample_count
			 , num_mem
			 , mem_rank
			 , uniq_sqlids
			 , uniq_xids
			 , uniq_sessions
			 , uniq_instances
			 , 0 AS bucket_type --target(not global)/filtered bucket

			 , NVL((SELECT replace(substr(v.sql_text,  1,  100), CHR(0), '') as sql_text
	 FROM sys.gv_$sql v
	 WHERE v.sql_id = left.dim_val
	       AND v.inst_id = left.inst_id

	       AND rownum &lt; 2 ), ( SELECT replace(sys.dbms_lob.substr(v.sql_text,  100,  1), CHR(0), '')
	   as sql_text
	 FROM AWR_ROOT_sqltext v,  binds b
	 WHERE v.dbid = b.dbid
	   AND v.sql_id = left.dim_val

	   AND rownum &lt; 2)) as sql_text
		    from (select max(case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)			as dim_val
			 , sum(sample_count)		 as sample_count
			 , count(*)			 as num_mem
			 , max(case when mem_rank &lt;= 5
				   then mem_rank
				   else (5 + 1)
			       end)			as mem_rank
			 , max(case when mem_rank &lt;= 5
				   then uniq_sqlids
				   else 0
			       end)			as uniq_sqlids
			 , max(case when mem_rank &lt;= 5
				   then uniq_xids
				   else 0
			       end)			as uniq_xids
			 , max(case when mem_rank &lt;= 5
				   then uniq_sessions
				   else 0
			       end)			as uniq_sessions
			 , max(case when mem_rank &lt;= 5
				   then uniq_instances
				   else 0
			       end)			as uniq_instances
			 , max(inst_id) 		 as inst_id


		     from (select sqlid as dim_val
				 , sample_count
				 , dense_rank() over
				    (order by sample_count desc
					     , sqlid) as mem_rank
				 , uniq_sqlids
				 , uniq_xids
				 , uniq_sessions
				 , uniq_instances
				 , inst_id


			     from grouped_ash
			    where gid = 127
			      and sqlid is not null)
		    group by (case when mem_rank &lt;= 5
				   then dim_val
				   else null
			       end)

		  ) left   ) ,	component_8_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('sqlid' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , topmems.topmems_frag) as dim_frag from (select xmlelement(
			   &quot;top_mems&quot;
			  , xmlattributes(sum(case when mem_rank &lt;= 5
						  then sample_count
						  else 0
					      end) as &quot;count&quot;)
			     , xmlagg(xmlelement(
					&quot;mem&quot;
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
						     , dim_val		 as &quot;name&quot;

						     , sample_count	 as &quot;count&quot;
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
						     , uniq_xids	 as &quot;uniq_xids&quot;
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
						     , uniq_instances	 as
&quot;uniq_instances&quot;)

				       , sql_text)
				order by sample_count desc))
						 as topmems_frag
			  , sum(case when mem_rank &lt;= 5
				    then 1
				    else 0
				end)		 as num_mem
			  , sum(sample_count)	  as cnt_all
			  , max(case when mem_rank &lt;= 5
				    then 0
				    else num_mem
				end)		 as num_others
		     from (component_8_treemap) t
		   ) topmems)select
		   xmlconcat((select xml_frag from filter_xml),
		      xmlelement(&quot;dim_list&quot;,
			xmlelement(&quot;item&quot;,
			  xmlattributes('top_dimensions' as &quot;id&quot;),
			  xmlelement(&quot;subdim&quot;,  xmlconcat((select dim_frag from component_1_xml), (select dim_frag from component_2_xml), (select dim_frag from component_3_xml), (select dim_frag from component_4_xml), (select dim_frag from component_5_xml), (select dim_frag from component_6_xml), (select dim_frag from component_7_xml), (select dim_frag from component_8_xml)))),
	 xmltype('
	   &lt;item type=&quot;separator&quot; /&gt;'),
	 xmltype('
	   &lt;item id=&quot;sql_cat&quot;&gt;
	     &lt;subdim&gt;
	       &lt;item id=&quot;sqlid&quot; /&gt;
	       &lt;item id=&quot;sql_id_top&quot; /&gt;
	       &lt;item id=&quot;sql_fms&quot; /&gt;
	       &lt;item id=&quot;sqlid_phv&quot; /&gt;
	       &lt;item id=&quot;sqlid_fullphv&quot;/&gt;
	       &lt;item id=&quot;sql_rws&quot; /&gt;
	       &lt;item id=&quot;sql_rws_line&quot; /&gt;
	       &lt;item id=&quot;sql_opcode&quot; /&gt;
	       &lt;item id=&quot;sql_opcode_top&quot; /&gt;
	     &lt;/subdim&gt;
	   &lt;/item&gt;'),
	 xmltype('
	   &lt;item id=&quot;pl_sql_cat&quot;&gt;
	     &lt;subdim&gt;
	       &lt;item id=&quot;pl_sql&quot; /&gt;
	       &lt;item id=&quot;pl_sql_top&quot; /&gt;
	     &lt;/subdim&gt;
	   &lt;/item&gt;'),
	 xmltype('
	   &lt;item id=&quot;resource_consumption_cat&quot;&gt;
	     &lt;subdim&gt;
	       &lt;item id=&quot;wait_class&quot; /&gt;
	       &lt;item id=&quot;event&quot; /&gt;
	       &lt;item id=&quot;object&quot; /&gt;
	       &lt;item id=&quot;blocking_session&quot; /&gt;
	     &lt;/subdim&gt;
	   &lt;/item&gt;'),
	 xmltype('
	   &lt;item id=&quot;session_identifiers_cat&quot;&gt;
	     &lt;subdim&gt;
	       &lt;item id=&quot;instance_number&quot; /&gt; &lt;item id=&quot;service_hash&quot; /&gt;
	       &lt;item id=&quot;physical_session&quot; /&gt;
	       &lt;item id=&quot;px_process&quot; /&gt;
	       &lt;item id=&quot;user_id&quot; /&gt;
	       &lt;item id=&quot;program&quot; /&gt;
	       &lt;item id=&quot;session_type&quot; /&gt;
	     &lt;/subdim&gt;
	    &lt;/item&gt;'),
	 xmltype('
	   &lt;item id=&quot;session_attributes_cat&quot;&gt;
	     &lt;subdim&gt;
	       &lt;item id=&quot;consumer_group_id&quot; /&gt;
	       &lt;item id=&quot;module&quot; /&gt;
	       &lt;item id=&quot;action&quot; /&gt;
	       &lt;item id=&quot;client_id&quot; /&gt;
	       &lt;item id=&quot;machine&quot; /&gt;
	       &lt;item id=&quot;machine_port&quot; /&gt;
	       &lt;item id=&quot;xid&quot; /&gt;
	       &lt;item id=&quot;ecid&quot; /&gt;
	       &lt;item id=&quot;dbop
&quot; /&gt;
	     &lt;/subdim&gt;
	   &lt;/item&gt;'))
		  ) from sys.dual</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="32bhha21dkv0v"></a>32bhha21dkv0v</td><td class='awrnc'><pre_sqltext class="awr">select col#, intcol#, charsetid, charsetform from col$ where obj#=:1 order by intcol# asc</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,	C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="35ra2cdwvqg1w"></a>35ra2cdwvqg1w</td><td class='awrnc'><pre_sqltext class="awr">select parttype,  partcnt,  partkeycols,  flags,  defts#,  defpctfree,  defpctused,  definitrans,  defmaxtrans,	deftiniexts,  defextsize,  defminexts,	defmaxexts,  defextpct,  deflists,  defgroups,	deflogging,  spare1,  mod(spare2,  256) subparttype,  mod(trunc(spare2/256),  256) subpartkeycols,  mod(trunc(spare2/65536),  65536) defsubpartcnt,  mod(trunc(spare2/4294967296),  256) defhscflags,  mod(trunc(spare2/1099511627776),  4096) defimcflags,  mod(trunc(spare2/4503599627370496),  8) defimcpl,	mod(spare3,  256) interval_dty,  rowid,  defmaxsize,  mod(trunc(spare3/256),  256) subptn_interval_dty,  mod(trunc(spare3/65536),  256) defccflags,  mod(trunc(spare3/16777216),  256) defimcflags2,  mod(trunc(spare3/4294967296),  256) defhscflags2 from partobj$ where obj# = :1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="3dbzmtf9ahvzt"></a>3dbzmtf9ahvzt</td><td class='awrc'><pre_sqltext class="awr">merge /* KSXM:OPTIM_DML_INF */  into sys.mon_mods_all$ m			using dual								   on (m.obj# = :objn and							  (:pobjn = 0 or							      m.obj# = :pobjn or							 m.obj# in (select obj# 							       from tabpart$								  where bo# = :pobjn and obj# = :objn					     union all									select obj#								   from tabcompart$							      where bo# = :pobjn and obj# = :objn					 union all								    select tsp.obj#							       from tabsubpart$ tsp,  tabcompart$ tcp					   where tsp.pobj# = tcp.obj#							and (tcp.bo# = :pobjn or tcp.obj# = :pobjn)				   and tsp.obj# = :objn)))				    when matched then								 update 								    set inserts = decode(:reset,  1,  0,  inserts) + :ins,			       updates = decode(:reset,  1,  0,  updates) + :upd,			      deletes = decode(:reset,	1,  0,	deletes) + :del,			     flags =  decode(:reset,  1,  0,  flags - bitand(flags,  :flag)) + :flag,	     drop_segments = decode(:reset,  1,  0,  drop_segments) + :dropseg, 	    timestamp = :time							 when NOT matched then							      insert (obj#,  inserts,  updates,  deletes,					     timestamp,  flags,  drop_segments) 				  values (:objn,  :ins,  :upd,	:del,  :time,  :flag,  :dropseg)		   where :ins != 0 or :upd != 0 or :del != 0 or :flag != 0 or :dropseg !=0</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="3kqrku32p6sfn"></a>3kqrku32p6sfn</td><td class='awrnc'><pre_sqltext class="awr">MERGE /*+ OPT_PARAM('_parallel_syspls_obey_force' 'false') */ INTO OPTSTAT_USER_PREFS$ D USING ( SELECT * FROM (SELECT O.OBJ#,  SYSTIMESTAMP CHGTIME,  ROUND(MAX(S.DELTA_READ_IO_BYTES/S.DELTA_TIME),  3) SCANRATE FROM GV$ACTIVE_SESSION_HISTORY S,  GV$SQL_PLAN P,  OBJ$ O,  USER$ U WHERE S.INST_ID = P.INST_ID AND S.SQL_ID = P.SQL_ID AND S.SQL_PLAN_HASH_VALUE = P.PLAN_HASH_VALUE AND S.SQL_PLAN_LINE_ID = P.ID AND P.OBJECT_NAME = O.NAME AND (:B4 IS NULL OR O.OBJ# = :B4 ) AND O.OWNER# = U.USER# AND P.OBJECT_OWNER = U.NAME AND O.TYPE# = 2 AND S.CON_ID = SYS_CONTEXT('userenv',  'con_id') AND P.CON_ID = SYS_CONTEXT('userenv',  'con_id') AND S.SQL_PLAN_OPERATION = 'TABLE ACCESS' AND P.OPERATION = 'TABLE ACCESS' AND S.DELTA_TIME &gt; 0 AND S.DELTA_READ_IO_BYTES &gt; 0 AND FROM_TZ(S.SAMPLE_TIME,  :B3 ) &gt; :B2 AND (:B1 = 'ON' OR (:B1 = 'HADOOP_ONLY' AND EXISTS ( SELECT NULL FROM SYS.EXTERNAL_TAB$ ET WHERE ET.OBJ# = O.OBJ# AND TYPE$ IN ('ORACLE_HIVE',	'ORACLE_HDFS',	'ORACLE_BIGDATA')))) GROUP BY O.OBJ#) C WHERE NOT EXISTS (SELECT NULL FROM OPTSTAT_USER_PREFS$ PR WHERE PNAME = 'SCAN_RATE' AND C.OBJ# = PR.OBJ# AND (PR.SPARE1 IS NULL OR C.SCANRATE &lt;= TO_NUMBER(PR.VALCHAR))) ) SRC ON (D.OBJ#=SRC.OBJ# AND D.PNAME = 'SCAN_RATE') WHEN MATCHED THEN UPDATE SET D.VALCHAR= TO_CHAR(SRC.SCANRATE),  D.CHGTIME=SRC.CHGTIME,  D.SPARE1=1 WHEN NOT MATCHED THEN INSERT (OBJ#,  PNAME,  VALCHAR,  CHGTIME,  SPARE1) VALUES(SRC.OBJ#,  'SCAN_RATE',  TO_CHAR(SRC.SCANRATE),  SRC.CHGTIME,  1)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="3s008f5ragg5n"></a>3s008f5ragg5n</td><td class='awrc'><pre_sqltext class="awr">WITH
  names as
  (SELECT metric_name,	metric_unit,  rownum as met_id
   FROM   sys.v_$metricname
   WHERE  group_name = 'System Metrics Long Duration'
     AND  metric_name IN ( 'Average Synchronous Single-Block Read Latency',
'Background CPU Usage Per Sec',
'CPU Usage Per Sec',
'Current Logons Count',
'Current Open Cursors Count',
'Current OS Load',
'Database Time Per Sec',
'Executions Per Sec',
'GC CR Block Received Per Second',
'GC Current Block Received Per Second',
'Global Cache Average CR Get Time',
'Global Cache Average Current Get Time',
'Global Cache Blocks Lost',
'Host CPU Utilization (%)',
'Logons Per Sec',
'Network Traffic Volume Per Sec',
'Physical Read Total Bytes Per Sec',
'Physical Write Total Bytes Per Sec',
'Process Limit %',
'Session Limit %',
'Total PGA Allocated',
'User Commits Per Sec',
'User Rollbacks Per Sec',
'User Transaction Per Sec',
'VM in bytes Per Sec',
'VM out bytes Per Sec',
'Run Queue Per Sec' )) , data as
  (SELECT metric_name,	inst_id,
	  avg(value) as value,	min(value) as mi,  max(value) as ma
   FROM   sys.gv_$metric_history
   WHERE  end_time &gt;= :1
     AND  group_id = 2
     AND  intsize_csec &gt;= 4000
     AND  metric_name in ( 'Average Synchronous Single-Block Read Latency',
'Background CPU Usage Per Sec',
'CPU Usage Per Sec',
'Current Logons Count',
'Current Open Cursors Count',
'Current OS Load',
'Database Time Per Sec',
'Executions Per Sec',
'GC CR Block Received Per Second',
'GC Current Block Received Per Second',
'Global Cache Average CR Get Time',
'Global Cache Average Current Get Time',
'Global Cache Blocks Lost',
'Host CPU Utilization (%)',
'Logons Per Sec',
'Network Traffic Volume Per Sec',
'Physical Read Total Bytes Per Sec',
'Physical Write Total Bytes Per Sec',
'Process Limit %',
'Session Limit %',
'Total PGA Allocated',
'User Commits Per Sec',
'User Rollbacks Per Sec',
'User Transaction Per Sec',
'VM in bytes Per Sec',
'VM out bytes Per Sec',
'Run Queue Per Sec' )	GROUP BY metric_name,  inst_id
  ) , names_xml as
  (SELECT xmlagg(
	     xmlelement(&quot;map&quot;,
		xmlattributes(
		   metric_name as &quot;name&quot;,
		   metric_unit as &quot;unit&quot;,
		   met_id as &quot;id&quot;
	  ))) as x
   FROM names)
 , data_xml as
  (SELECT xmlagg(
	    xmlelement(&quot;m&quot;,
		xmlattributes(
		   d.inst_id as &quot;i&quot;,
		   round(d.value, 3) as &quot;v&quot;,
		   round(d.ma, 3) as &quot;ma&quot;,
		   round(d.mi, 3) as &quot;mi&quot;,
		   n.met_id as &quot;id&quot;
	  ))) as x
   FROM    data d,  names n
   WHERE   d.metric_name = n.metric_name)
 , final_xml as
  (SELECT xmlelement(&quot;metrics&quot;,
	     xmlelement(&quot;metric_names&quot;,  n.x),
		xmlelement(&quot;data&quot;,  d.x)) as x
   FROM   names_xml n,	data_xml d)
 , avg_as as
  (SELECT sum(value)/100 as v
   FROM data
   WHERE  metric_name = 'Database Time Per Sec'
  )
 SELECT avg_as.v,  final_xml.x
 FROM	avg_as,  final_xml</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="3uawgw8gknfx7"></a>3uawgw8gknfx7</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '15';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="3un99a0zwp4vd"></a>3un99a0zwp4vd</td><td class='awrc'><pre_sqltext class="awr">select owner#, name, namespace, remoteowner, linkname, p_timestamp, p_obj#,  nvl(property, 0), subname, type#, flags, d_attrs from dependency$ d,	obj$ o where d_obj#=:1 and p_obj#=obj#(+) order by order#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="4kmfwdxs245tu"></a>4kmfwdxs245tu</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '13';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="4p0za9517qhty"></a>4p0za9517qhty</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '31';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;


WORKLOAD REPOSITORY report for
v_end_time := v_now ;

DB Name 	DB Id	 Unique Name DB Role	      Edition Release	 RAC CDB
------------ ----------- ----------- ---------------- ------- ---------- --- ---
P30DB	      3393773525 p30db	     PRIMARY	      EE      19.0.0.0.0 YES NO

Instance     Inst Num Startup Time
v_now := DBMS_UTILITY.GET_TIME();
------------ -------- ---------------
p30db2		    2 08-Feb-20 07:52

Host Name	 Platform			  CPUs Cores Sockets Memory(GB)
---------------- -------------------------------- ---- ----- ------- ----------
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
mcracpoc2.exampl Linux x86 64-bit		     8	   4	   1	  31.40

	      Snap Id	   Snap Time	  Sessions Curs/Sess Instances

	    --------- ------------------- -------- --------- ---------
Begin Snap:	   81 08-Feb-20 17:33:14       108	 2.0	     2
v_total_time := v_end_time - v_begin_time ;
  End Snap:	   82 08-Feb-20 17:43:25	91	 1.5	     2
   Elapsed:		  10.19 (mins)
   DB Time:		 171.06 (mins)

v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
---------------------------------------- ------- ------ ------------------------
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;
Top SQL Statements			   16.80  99.62 ADDM:3393773525_2_82
"User I/O" wait Class			   16.80  90.88 ADDM:3393773525_2_82

Top Segments by "User I/O" and "Cluster"   16.80  27.57 ADDM:3393773525_2_82
END;</pre_sqltext></td></tr>
Undersized SGA				   16.80   8.16 ADDM:3393773525_2_82
Global Cache Messaging			   16.80   5.56 ADDM:3393773525_2_82
<tr><td scope="row" class='awrnc'><a class="awr" name="4p5vv6tqbtqjy"></a>4p5vv6tqbtqjy</td><td class='awrnc'><pre_sqltext class="awr">
Load Profile			Per Second   Per Transaction  Per Exec	Per Call
      with rmmetrics_data as (-- main query
~~~~~~~~~~~~~~~ 	   ---------------   --------------- --------- ---------
	     DB Time(s):	      16.8		 0.3	  0.19	    9.36
	      DB CPU(s):	       0.8		 0.0	  0.01	    0.42
	select bucket_id,
      Background CPU(s):	       0.6		 0.0	  0.01	    0.00
      Redo size (bytes):       1,554,927.3	    25,859.7
  Logical read (blocks):	   2,510.2		41.8
	       new_id consumer_group_id,
	  Block changes:	   3,949.5		65.7
 Physical read (blocks):	   1,790.8		29.8
Physical write (blocks):	   1,228.3		20.4
	       case
       Read IO requests:	   1,789.5		29.8
      Write IO requests:	   1,137.9		18.9
	   Read IO (MB):	      14.0		 0.2
	  Write IO (MB):	       9.6		 0.2
		 when rn = 1 and :is_awr = 1
	   IM scan rows:	       0.0		 0.0
Session Logical Read IM:	       0.0		 0.0
 RAC GC blocks received:	      51.8		 0.9
		  and consumer_group_id =  0
   RAC GC blocks served:	      12.3		 0.2
	     User calls:	       1.8		 0.0
	   Parses (SQL):	       8.2		 0.1
		 then 'other'
      Hard parses (SQL):	       1.6		 0.0
     SQL Work Area (MB):	       0.6		 0.0
		 Logons:	       0.3		 0.0
	    User logons:	       0.0		 0.0
		 when rn = 1 and :is_awr = 1
	 Executes (SQL):	      89.2		 1.5
	      Rollbacks:	       0.0		 0.0
	   Transactions:	      60.1

		  and consumer_group_id &lt;&gt;  0
Instance Efficiency Percentages (Target 100%)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	    Buffer Nowait %:  100.00	   Redo NoWait %:  100.00
		 then (select /*+ cardinality(t 1) */ instance_name
	    Buffer  Hit   %:   28.62	In-memory Sort %:  100.00
	    Library Hit   %:   94.97	    Soft Parse %:   80.27
	 Execute to Parse %:   90.82	     Latch Hit %:   99.98
			 from table(
Parse CPU to Parse Elapsd %:   32.25	 % Non-Parse CPU:   99.70
	  Flash Cache Hit %:	0.00

			       cast(
Top 10 Foreground Events by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					   Total Wait	    Avg   % DB Wait
Event				     Waits Time (sec)	   Wait   time Class
				:p_contTab as sys.prvt_awrv_instTab)) t
------------------------------ ----------- ---------- --------- ------ --------
			where t.inst_id = consumer_group_id)
db file sequential read 	 1,091,168     9327.2	 8.55ms   90.9 User I/O
gc current grant 2-way		   674,859	468.3  693.86us    4.6 Cluster
DB CPU						464.3		   4.5
gc current grant read-mostly i	    53,538	 76.6	 1.43ms     .7 Cluster
gc current grant busy		    47,389	 64.3	 1.36ms     .6 Cluster
gc current block 2-way		    18,348	 19.5	 1.06ms     .2 Cluster
buffer exterminate		       926	  9.2	 9.95ms     .1 Other
gc current block busy		    10,251	  7.3  713.45us     .1 Cluster
gc current grant congested	     1,176	  6.5	 5.54ms     .1 Cluster
gc current block lost			 5	  2.3  458.50ms     .0 Cluster
		 when rn = 1 then

Wait Classes by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
							  Avg		  Avg
		   consumer_group_name
					Total Wait	 Wait	% DB   Active
Wait Class		    Waits	Time (sec)	 Time	time Sessions
		 else null
---------------- ---------------- ---------------- ---------- ------ --------
User I/O		1,149,813	     9,343     8.13ms	91.0	 15.3
System I/O		  131,350	       754     5.74ms	 7.3	  1.2
	       end consumer_group_name,
Cluster 		  811,102	       656   809.27us	 6.4	  1.1
DB CPU					       464		 4.5	  0.8
Other			   62,289	       176     2.82ms	 1.7	  0.3
Application		      296		16    52.37ms	  .2	  0.0
	       cpu_consumed_time,  cpu_wait_time,
Commit			       18		 1    60.32ms	  .0	  0.0
Concurrency		    1,289		 0   136.42us	  .0	  0.0
Network 		      652		 0    54.98us	  .0	  0.0
	       io_requests,  io_megabytes,
Configuration		       15		 0   940.00us	  .0	  0.0

Host CPU
~~~~~~~~		  Load Average
	       avg_cpu_utilization,
 CPUs Cores Sockets	Begin	    End     %User   %System	 %WIO	  %Idle
----- ----- ------- --------- --------- --------- --------- --------- ---------
    8	  4	  1	 7.99	  10.54       7.2      14.2	 57.0	   70.5
	       avg_waiting_sessions,

Instance CPU
~~~~~~~~~~~~
	      % of total CPU for Instance:	17.8
	       avg_active_parallel_servers,
	      % of busy  CPU for Instance:	60.2
  %DB time waiting for CPU - Resource Mgr:	 0.0

	       avg_queued_parallel_stmts,
IO Profile		    Read+Write/Second	  Read/Second	 Write/Second
~~~~~~~~~~		    ----------------- --------------- ---------------
	    Total Requests:	      3,092.5	      1,798.2	      1,294.3
	       avg_queued_parallel_servers,
	 Database Requests:	      2,927.4	      1,789.5	      1,137.9
	Optimized Requests:		  0.0		  0.0		  0.0
	     Redo Requests:		156.5		  2.7		153.8
		Total (MB):		 29.1		 16.4		 12.7
	       pga_used,
	     Database (MB):		 23.6		 14.0		  9.6
      Optimized Total (MB):		  0.0		  0.0		  0.0
		 Redo (MB):		  5.3		  2.3		  3.1
	       sga_used,
	 Database (blocks):	      3,019.1	      1,790.8	      1,228.3
 Via Buffer Cache (blocks):	      3,017.5	      1,790.7	      1,226.8
	   Direct (blocks):		  1.6		  0.1		  1.5

	       spool_used,
Memory Statistics
~~~~~~~~~~~~~~~~~			Begin	       End
				 ------------ ------------
	       bcache_used
		  Host Mem (MB):     32,156.0	  32,156.0
		   SGA use (MB):      9,664.0	   9,664.0
		   PGA use (MB):      1,393.6	   1,312.5
    % Host Mem used for SGA+PGA:	34.39	     34.14
	  from ( -- generate an id since default ids can be high numbers

Cache Sizes			  Begin        End
~~~~~~~~~~~		     ---------- ----------
	    select bucket_id,
	       Buffer Cache:	 7,872M     7,840M  Std Block Size:	    8K
	   Shared Pool Size:	 1,188M     1,236M	Log Buffer:    20,612K
		   consumer_group_id,
	     In-Memory Area:	     0M 	0M

 Shared Pool Statistics        Begin	End
~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ------  ------
		   consumer_group_name,
	     Memory Usage %:   91.20   67.40
    % SQL with executions>1:   86.88   66.20
  % Memory for SQL w/exec>1:   91.64   40.96

		   cpu_consumed_time,  cpu_wait_time,

Time Model Statistics			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> DB Time represents total time in user calls
		   io_requests,  io_megabytes,
-> DB CPU represents CPU time of foreground processes
-> Total CPU Time represents foreground and background processes
-> Statistics including the word "background" measure background process
		   avg_cpu_utilization,
   time, therefore do not contribute to the DB time statistic
-> Ordered by % of DB time in descending order, followed by Statistic Name

								% of  % of Total
		   avg_waiting_sessions,
Statistic Name					     Time (s) DB Time	CPU Time
------------------------------------------ ------------------ ------- ----------
sql execute elapsed time			     10,260.8	100.0
		   avg_active_parallel_servers,
DB CPU							464.3	  4.5	    58.1
parse time elapsed					  5.9	   .1
hard parse elapsed time 				  5.7	   .1
PL/SQL execution elapsed time				  2.7	   .0
		   avg_queued_parallel_stmts,
hard parse (sharing criteria) elapsed time		  1.9	   .0
hard parse (bind mismatch) elapsed time 		  1.7	   .0
		   avg_queued_parallel_servers,
PL/SQL compilation elapsed time 			  0.2	   .0
repeated bind elapsed time				  0.0	   .0
connection management call elapsed time 		  0.0	   .0
		   pga_used,
DB time 					     10,263.4
background elapsed time 			      1,242.5
background cpu time					334.9		    41.9
total CPU time						799.2
		   sga_used,
			  ------------------------------------------------------

Operating System Statistics		   DB/Inst: P30DB/p30db2  Snaps: 81-82
		   spool_used,
-> *TIME statistic values are diffed.
   All others display actual values.  End Value is displayed if different
-> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name

		   bcache_used,
Statistic				   Value	End Value
------------------------- ---------------------- ----------------
FREE_MEMORY_BYTES		   5,703,483,392    5,836,189,696
		   row_number()
INACTIVE_MEMORY_BYTES		   1,445,244,928    1,446,404,096
BUSY_TIME				 132,731
		     over (partition by consumer_group_id,
IDLE_TIME				 316,853
IOWAIT_TIME				 256,214
SYS_TIME				  63,894
USER_TIME				  32,149
					consumer_group_name
LOAD					       8	       11
RSRC_MGR_CPU_WAIT_TIME			       1
PHYSICAL_MEMORY_BYTES		  33,717,977,088
NUM_CPUS				       8
			       order by bucket_id,
NUM_CPU_CORES				       4
NUM_CPU_SOCKETS 			       1
GLOBAL_RECEIVE_SIZE_MAX 	       4,194,304
GLOBAL_SEND_SIZE_MAX		       1,048,576
					consumer_group_id,
TCP_RECEIVE_SIZE_DEFAULT		  87,380
TCP_RECEIVE_SIZE_MAX		       6,291,456
TCP_RECEIVE_SIZE_MIN			   4,096
TCP_SEND_SIZE_DEFAULT			  16,384
					consumer_group_name) rn,
TCP_SEND_SIZE_MAX		       4,194,304
TCP_SEND_SIZE_MIN			   4,096
			  ------------------------------------------------------

Operating System Statistics - Detail	   DB/Inst: P30DB/p30db2  Snaps: 81-82

Snap Time	    Load    %busy    %user     %sys    %idle  %iowait
--------------- -------- -------- -------- -------- -------- --------
08-Feb 17:33:14      8.0      N/A      N/A	N/A	 N/A	  N/A
08-Feb 17:43:25     10.5     29.5      7.2     14.2	70.5	 57.0
			  ------------------------------------------------------

Foreground Wait Class			   DB/Inst: P30DB/p30db2  Snaps: 81-82
		   -- generate an id
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
-> ordered by wait time desc, waits desc
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0
-> Captured Time accounts for	     101.8%  of Total DB time	   10,263.44 (s)
		   dense_rank() over (order by consumer_group_id,
-> Total FG Wait Time:		   9,986.58 (s)  DB CPU time:	      464.29 (s)

				     %Time	Total Wait
Wait Class		       Waits -outs	  Time (s)   Avg wait  %DB time
					       consumer_group_name) new_id
-------------------- --------------- ----- --------------- ---------- ---------
User I/O		   1,091,181	 0	     9,327     8.55ms	   90.9
Cluster 		     807,605	 0	       648   801.79us	    6.3
	      from (
DB CPU						       464		    4.5
Other			       3,075	37		11     3.48ms	    0.1
    select bucket_id,
Commit				  18	 0		 1    60.32ms	    0.0
Application			 122	 0		 0    80.60us	    0.0
Concurrency			  15	 0		 0   645.67us	    0.0
	   consumer_group_id,  consumer_group_name,
System I/O			  22	 0		 0   206.00us	    0.0
	   sum(cpu_consumed_time)    cpu_consumed_time,
	   sum(cpu_wait_time)	     cpu_wait_time,
	   sum(io_requests)	     io_requests,
	   sum(io_megabytes)	     io_megabytes,
Network 			 163	 0		 0     5.99us	    0.0
Configuration			   0			 0		    0.0
	   avg(avg_cpu_utilization)  avg_cpu_utilization,
			  ------------------------------------------------------

	   sum(avg_waiting_sessions) avg_waiting_sessions,

Foreground Wait Events			   DB/Inst: P30DB/p30db2  Snaps: 81-82
	   sum(avg_active_parallel_servers)
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
				     avg_active_parallel_servers,
-> Only events with Total Wait Time (s) >= .001 are shown
-> ordered by wait time desc, waits desc (idle events last)
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0
	   sum(avg_queued_parallel_stmts)

						Total
				       %Time	 Wait		   Waits   % DB
Event				 Waits -outs Time (s)  Avg wait     /txn   time
				     avg_queued_parallel_stmts,
-------------------------- ----------- ----- -------- --------- -------- ------
db file sequential read      1,091,168		9,327	 8.55ms     29.7   90.9
gc current grant 2-way	       674,859		  468  693.86us     18.4    4.6
	   sum(avg_queued_parallel_servers)
gc current grant read-most	53,538		   77	 1.43ms      1.5     .7
gc current grant busy		47,389		   64	 1.36ms      1.3     .6
gc current block 2-way		18,348		   20	 1.06ms      0.5     .2
				     avg_queued_parallel_servers,
buffer exterminate		   926	 100	    9	 9.95ms      0.0     .1
gc current block busy		10,251		    7  713.45us      0.3     .1
gc current grant congested	 1,176		    7	 5.54ms      0.0     .1
gc current block lost		     5		    2  458.50ms      0.0     .0
	   sum(pga_used) pga_used,
gc cr grant 2-way		 1,720		    1  708.39us      0.0     .0
gc current block congested	    77		    1	15.52ms      0.0     .0
log file sync			    18		    1	60.32ms      0.0     .0
gcs drm freeze in enter se	     7		    1	94.20ms      0.0     .0
KJC: Wait for msg sends to	 1,043		    0  409.40us      0.0     .0
gc cr grant busy		   223		    0	 1.12ms      0.0     .0
PX Deq: Slave Session Stat	   172		    0	 1.22ms      0.0     .0
kksfbc child completion 	     1	 100	    0	49.65ms      0.0     .0
latch: redo allocation		   100		    0  275.58us      0.0     .0
latch free			    72		    0  362.67us      0.0     .0
gc remaster			     3		    0	 8.39ms      0.0     .0
latch: gcs resource hash	    47		    0  433.70us      0.0     .0
	   sum(sga_used) sga_used,
latch: gc element		    39		    0  478.64us      0.0     .0
gc cr block congested		     2		    0	 8.01ms      0.0     .0
IPC send completion sync	    15		    0  812.13us      0.0     .0
	   sum(spool_used) spool_used,
gc cr grant congested		     3		    0	 3.79ms      0.0     .0
SQL*Net break/reset to cli	   122		    0	80.60us      0.0     .0
enq: TO - contention		     9		    0	 1.08ms      0.0     .0
	   sum(bcache_used) bcache_used
PGA memory operation		   279		    0	28.23us      0.0     .0
latch: enqueue hash chains	    21		    0  304.14us      0.0     .0
Disk file Mirror Read		     6		    0	 1.05ms      0.0     .0
enq: PS - contention		     5		    0	 1.17ms      0.0     .0
       from (
gc cr multi block mixed 	     4		    0	 1.37ms      0.0     .0
library cache lock		     4		    0	 1.28ms      0.0     .0
control file sequential re	    22		    0  206.00us      0.0     .0
      select bucket_id,
DLM cross inst call comple	     4		    0  897.25us      0.0     .0
library cache pin		     5		    0  576.80us      0.0     .0
latch: cache buffers lru c	     9		    0  315.11us      0.0     .0
PX qref latch			   157	 100	    0	17.97us      0.0     .0
	     case
gc current retry		     3		    0  938.33us      0.0     .0
gc cr block 2-way		     3		    0  662.33us      0.0     .0
PX Deq: reap credit		    46	 100	    0	41.70us      0.0     .0
latch: undo global data 	     4		    0  420.00us      0.0     .0
	     when (tcpu_rnk &gt; 10 and twsess_rnk &gt; 10 and
latch: object queue header	     3		    0  408.33us      0.0     .0
db file scattered read		     3		    0  359.67us      0.0     .0
latch: shared pool		     2		    0  535.50us      0.0     .0
		   taserv_rnk &gt; 10 and  tqserv_rnk &gt; 10)
watchdog main loop		   815		2,448 3003.69ms      0.0
SQL*Net message from clien	   158		  610 3861.37ms      0.0
PX Deq: Execution Msg		   516		    5	 9.37ms      0.0
PX Deq: Msg Fragment		   296		    0  630.75us      0.0
PX Deq Credit: send blkd	   129		    0	 1.27ms      0.0
PX Deq Credit: need buffer	    17		    0  572.29us      0.0
			  ------------------------------------------------------


Background Wait Events			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % bg
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
log file parallel write 	27,770	   0	  635	22.86ms      0.8   51.1
LGWR any worker group		 8,968	   0	  118	13.13ms      0.2    9.5
db file parallel write		49,446	   0	  111	 2.24ms      1.3    8.9
LGWR worker group ordering	 3,043	   0	   19	 6.34ms      0.1    1.6
enq: RO - fast object reus	   172	   0	   15	85.60ms      0.0    1.2
db file sequential read 	 2,051	   0	    8	 3.95ms      0.1     .7
LGWR all worker groups		   223	   0	    7	29.61ms      0.0     .5
gc current block busy		   363	   0	    5	13.30ms      0.0     .4
control file parallel writ	   281	   0	    4	15.76ms      0.0     .4
SGA: allocation forcing co	     6	   0	    3  534.76ms      0.0     .3
Disk file Mirror Read		   856	   0	    3	 3.64ms      0.0     .3
KSV master wait 		 1,658	  27	    3	 1.86ms      0.0     .2
ASM file metadata operatio	 3,447	   0	    3  882.47us      0.1     .2
IMR slave acknowledgement	 1,830	   0	    2	 1.31ms      0.0     .2
gcs log flush sync		 2,374	   0	    2  932.55us      0.1     .2
control file sequential re	 3,568	   0	    2  549.06us      0.1     .2
Parameter File I/O		    56	   0	    2	33.18ms      0.0     .1
enq: CF - contention		    49	  57	    2	37.24ms      0.0     .1
ASM IO for non-blocking po	54,991	   0	    2	29.26us      1.5     .1
gc current block 2-way		 1,727	   0	    1  688.81us      0.0     .1
log file sequential read	   553	   0	    1	 2.11ms      0.0     .1
reliable message		   253	   0	    1	 4.30ms      0.0     .1
Sync ASM rebalance		    54	   0	    1	16.51ms      0.0     .1
direct path write temp		    52	   0	    1	15.51ms      0.0     .1
gc cr block busy		     7	   0	    1  113.67ms      0.0     .1
enq: TM - contention		     2	   0	    1  385.13ms      0.0     .1
gc buffer busy acquire		     3	   0	    1  232.25ms      0.0     .1
PX Deq: Join ACK		   335	   0	    1	 1.90ms      0.0     .1
PX Deq: reap credit		16,831	 100	    0	27.47us      0.5     .0
db file async I/O submit	49,812	   0	    0	 8.92us      1.4     .0
gc cr grant 2-way		   687	   0	    0  559.36us      0.0     .0
gc buffer busy release		    10	   0	    0	34.24ms      0.0     .0
ges message buffer allocat	     1	   0	    0  299.75ms      0.0     .0
KJC: Wait for msg sends to	 2,126	  98	    0  132.53us      0.1     .0
gc cr block 2-way		   376	   0	    0  688.50us      0.0     .0
ges lms sync during dynami	    37	  22	    0	 6.36ms      0.0     .0
CGS wait for IPC msg		 6,693	 100	    0	28.31us      0.2     .0
enq: PS - contention		   213	   3	    0  858.91us      0.0     .0
AQ: RAC AQ Network		 6,100	 100	    0	29.36us      0.2     .0
DFS lock handle 		   294	 100	    0  556.36us      0.0     .0
Disk file operations I/O	   578	   0	    0  258.39us      0.0     .0
kjctssqmg: quick message s	   296	 100	    0  459.18us      0.0     .0
latch free			   626	   0	    0  193.33us      0.0     .0
gc cr multi block mixed 	    77	   0	    0	 1.44ms      0.0     .0
gcs remastering wait for r	     4	   0	    0	25.20ms      0.0     .0
gc current grant busy		   171	   0	    0  535.53us      0.0     .0
oracle thread bootstrap 	     3	   0	    0	27.82ms      0.0     .0
IPC send completion sync	   784	  78	    0  104.17us      0.0     .0
db file scattered read		    34	   0	    0	 2.17ms      0.0     .0
library cache lock		    96	   0	    0  749.36us      0.0     .0
PX Deq: Slave Session Stat	   335	   0	    0  204.44us      0.0     .0
LGWR wait for redo copy 	   202	   0	    0  334.29us      0.0     .0
library cache pin		    96	   0	    0  663.91us      0.0     .0
direct path write		     6	   0	    0	 8.71ms      0.0     .0
latch: gcs resource hash	   187	   0	    0  270.38us      0.0     .0
gc current block congested	     8	   0	    0	 5.78ms      0.0     .0
DLM cross inst call comple	    59	   0	    0  755.03us      0.0     .0
read by other session		     2	   0	    0	19.38ms      0.0     .0
IPC group service call		   471	   0	    0	73.83us      0.0     .0
ksxr poll remote instances	 1,203	 100	    0	28.52us      0.0     .0

Background Wait Events			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % bg
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
direct path read		    64	   0	    0  429.92us      0.0     .0
CSS operation: data query	    18	   0	    0	 1.46ms      0.0     .0
latch: redo allocation		    69	   0	    0  350.28us      0.0     .0
gc current grant 2-way		    40	   0	    0  591.55us      0.0     .0
row cache lock			    17	 100	    0	 1.32ms      0.0     .0
enq: TO - contention		    23	   0	    0  799.35us      0.0     .0
PX Deq: Signal ACK EXT		   335	   0	    0	54.26us      0.0     .0
enq: WF - contention		    20	   0	    0  870.20us      0.0     .0
CSS operation: data update	    20	   0	    0  863.75us      0.0     .0
enq: CO - master slave det	    10	 100	    0	 1.31ms      0.0     .0
gc cr grant busy		    19	   0	    0  666.79us      0.0     .0
latch: cache buffers lru c	    47	   0	    0  258.94us      0.0     .0
enq: HW - contention		    12	   0	    0  928.17us      0.0     .0
gc current multi block req	    10	   0	    0  866.00us      0.0     .0
gc cr multi block grant 	     8	   0	    0	 1.04ms      0.0     .0
latch: gc element		    23	   0	    0  357.17us      0.0     .0
enq: WT - contention		     8	   0	    0	 1.01ms      0.0     .0
libcache interrupt action	 1,066	   0	    0	 6.70us      0.0     .0
os thread creation		     3	   0	    0	 2.29ms      0.0     .0
PGA memory operation		   163	   0	    0	40.65us      0.0     .0
latch: checkpoint queue la	    10	   0	    0  421.50us      0.0     .0
gc cr grant congested		     1	   0	    0	 2.77ms      0.0     .0
latch: redo writing		     2	   0	    0	 1.14ms      0.0     .0
enq: RA - RT ADDM flood co	     2	 100	    0  727.50us      0.0     .0
enq: PE - contention		     1	 100	    0	 1.18ms      0.0     .0
db file parallel read		     2	   0	    0  529.50us      0.0     .0
rdbms ipc message		52,990	  21   13,423  253.32ms      1.4
PX Idle Wait			   172	   0   10,375	60.32 s      0.0
Space Manager: slave idle	 2,582	   0	9,735 3770.32ms      0.1
class slave wait		 8,091	  75	4,817  595.38ms      0.2
wait for unread message on	   938	 100	1,834 1954.74ms      0.0
pmon timer			   408	 100	1,224 2999.93ms      0.0
ges remote message		18,684	   0	1,221	65.37ms      0.5
GCR sleep			 4,068	   0	1,221  300.14ms      0.1
DIAG idle wait			 7,699	  83	1,220  158.40ms      0.2
gcs yield cpu			41,420	  99	1,218	29.42ms      1.1
gcs remote message	       823,655	   0	1,116	 1.36ms     22.4
LGWR worker group idle		11,050	   0	  827	74.86ms      0.3
Streams AQ: qmn coordinato	    45	   0	  616	13.69 s      0.0
Streams AQ: qmn slave idle	    23	   0	  616	26.78 s      0.0
ASM cluster membership cha	   350	  83	  613 1750.36ms      0.0
ASM background timer		 2,242	   0	  612  273.02ms      0.1
OFS idle			   204	 100	  612 2999.99ms      0.0
pman timer			   204	 100	  612 2999.67ms      0.0
heartbeat redo informer 	   611	   0	  611 1000.14ms      0.0
REPL Capture/Apply: RAC AQ	    10	 100	  611	61.10 s      0.0
SCM slave idle			 6,131	   0	  611	99.61ms      0.2
PING				   557	  20	  610 1095.68ms      0.0
lreg timer			   203	 100	  610 3002.62ms      0.0
dispatcher timer		    10	 100	  600	60.01 s      0.0
AQPC idle			    20	 100	  600	30.00 s      0.0
Data Guard: Gap Manager 	    10	   0	  600	60.00 s      0.0
Data Guard: Timer		     1	   0	  600  600.00 s      0.0
smon timer			     2	 100	  600  300.00 s      0.0
PX Deq: Parse Reply		   335	   0	    6	17.99ms      0.0
PX Deq: Execute Reply		   710	   0	    1  936.29us      0.0
PX Deq Credit: send blkd	   296	   0	    0  695.84us      0.0
RMA: IPC0 completion sync	   667	   0	    0	21.96us      0.0
SQL*Net message from clien	    18	   0	    0  758.61us      0.0
			  ------------------------------------------------------


Wait Event Histogram			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)

						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	    6091	 1.0  81.7  12.3   3.1	 1.3	.4    .2
ASM IO for non-blocking p  56.3K    .6	70.9  15.6   5.1   3.3	 3.0   1.0    .5
ASM file metadata operati   3443  14.4	 2.7  37.5  14.8   3.0	 5.3   4.6  17.7
AWR Flush		       3 100.0
CGS wait for IPC msg	    6685	13.9  70.7  10.7   2.8	 1.3	.4    .2
CSS operation: data query     18				       5.6  94.4
CSS operation: data updat     20				       5.0  95.0
DFS lock handle 	     294				  .7  58.5  40.8
DLM cross inst call compl     69	      21.7   4.3   2.9	 1.4   4.3  65.2
Disk file Mirror Read	     862					   100.0
Disk file operations I/O     582    .9	 1.2	.2    .3  16.8	49.7  22.5   8.4
GCR CSS group query	      18	83.3  11.1   5.6
GCR CSS group update	      18	94.4   5.6
IMR slave acknowledgement   1830	 8.6  12.5   6.0  20.2	13.1   9.1  30.5
IPC group service call	     474    .6	 1.1  16.0  38.4  35.4	 6.1   1.9    .4
IPC send completion sync     798	  .8  65.5   8.8   1.0	 9.9   8.4   5.6
KJC: Wait for msg sends t   3162	23.2  19.0  18.5  20.8	 5.2   5.7   7.7
KSV master wait 	    1658    .1	 8.0  14.5   2.6  12.1	19.4   4.3  39.2
LGWR all worker groups	     226					   100.0
LGWR any worker group	    8968	  .0	      .1    .5	  .6   1.7  97.0
LGWR wait for redo copy      199  24.6	 3.5   1.0   9.5  20.6	12.1  11.1  17.6
LGWR worker group orderin   3043    .4	  .3	.1    .8   1.3	 1.3   1.2  94.5
PGA memory operation	     442  34.2	36.7  14.3   2.0   4.3	 6.8   1.8
PX Deq: Join ACK	     335	  .6	.6		       1.8  97.0
PX Deq: Signal ACK EXT	     335	 7.5  66.3  10.7   6.6	 4.2   3.9    .9
PX Deq: Slave Session Sta    507    .2	11.2   7.7   3.2  11.0	13.4  15.2  38.1
	     then
	       0
	     else
	       consumer_group_id
	     end consumer_group_id,
	     case
	     when (tcpu_rnk &gt; 10 and twsess_rnk &gt; 10 and
		   taserv_rnk &gt; 10 and  tqserv_rnk &gt; 10)
	     then
	       'other'
	     else
	       consumer_group_name
	     end consumer_group_name,
	     cpu_consumed_time,
	     cpu_wait_time,
	     io_requests,
	     io_megabytes,
	     avg_cpu_utilization,
	     avg_waiting_sessions,
	     avg_active_parallel_servers,
	     avg_queued_parallel_stmts,
	     avg_queued_parallel_servers,
	     pga_used,
	     sga_used,
	     spool_used,
	     bcache_used
      from (-- v2
      select v1.*,
	     dense_rank()
	       over (order by tcpu desc,  consumer_group_id) tcpu_rnk,
	     dense_rank()
	       over (order by twsess desc,  consumer_group_id) twsess_rnk,
	     dense_rank()
	       over (order by taserv desc,  consumer_group_id) taserv_rnk,
	     dense_rank()
	       over (order by tqserv desc,  consumer_group_id) tqserv_rnk
       from (-- v1
	select v0.*,
	   --
	   sum(avg_cpu_utilization)
	     over(partition by consumer_group_id)  tcpu,
	   sum(avg_waiting_sessions)
	     over(partition by consumer_group_id) twsess,
	   sum(avg_active_parallel_servers)
	     over(partition by consumer_group_id) taserv,
	   sum(avg_queued_parallel_stmts)
	     over(partition by consumer_group_id) tqserv
      from table(sys.gv$(cursor(
	   select
	     trunc(
	     ((extract(day from
		(cast(trunc(end_time, 'mi') as timestamp) -
		 cast(
		   trunc(
		     to_date(:b_start_time,  :date_fmt), 'mi')
				 as timestamp))) * 86400 +
	       extract(hour from
		(cast(trunc(end_time, 'mi') as timestamp) -
PX Deq: reap credit	   16.9K    .0	18.2  66.3  10.4   3.5	 1.0	.4    .2
		 cast(
PX qref latch		     159	56.0  39.0   2.5   1.3	  .6	.6
Parameter File I/O	      56				12.5  19.6  67.9
SGA: allocation forcing c      6					   100.0
		   trunc(
SQL*Net break/reset to cl    122  41.8	 8.2	      .8  39.3	 6.6   1.6   1.6
SQL*Net message to client    176  90.3	 8.5	.6    .6
Sync ASM rebalance	      54	38.9   5.6		       7.4  48.1
		     to_date(:b_start_time,  :date_fmt), 'mi')
asynch descriptor resize      22  72.7	18.2   9.1
buffer exterminate	     926	  .1	.1			    99.8
control file parallel wri    281					   100.0
		    as timestamp))) * 3600 +
control file sequential r   3597	 6.6  15.2   1.3   2.2	35.5  27.9  11.4
db file async I/O submit     51K  92.6	 2.4   1.8   1.6    .9	  .4	.2    .1
db file parallel read	       2				      50.0  50.0
	       extract(minute from
db file parallel write	   50.5K	  .0   2.0  15.6   6.9	 8.1  13.5  54.0
db file scattered read	      37				16.2  43.2  40.5
		(cast(trunc(end_time, 'mi') as timestamp) -
db file sequential read     1.1M			    .0	  .4  18.7  80.9
direct path read	      64	10.9   6.3   7.8  14.1	25.0  28.1   7.8
direct path write	       6					   100.0
		 cast(
direct path write temp	      52					   100.0
enq: AF - task serializat      1					   100.0
enq: CF - contention	      49				       6.1  93.9
enq: CO - master slave de     10				      10.0  90.0
		   trunc(
enq: FB - contention	       3					   100.0
enq: HW - contention	      13				      30.8  69.2
enq: PE - contention	       1					   100.0
enq: PG - contention	       1				     100.0
enq: PS - contention	     218	 1.4	.5	   2.8	10.1  21.1  64.2
enq: RA - RT ADDM flood c      2				      50.0  50.0
enq: RO - fast object reu    172		      .6	       5.8  93.6
		     to_date(:b_start_time,  :date_fmt), 'mi')
enq: TD - KTF dump entrie      1					   100.0
enq: TK - Auto Task Seria      1					   100.0
enq: TM - contention	       2					   100.0
enq: TO - contention	      32				       6.3  93.8
enq: TT - contention	       1					   100.0

				 as timestamp))) * 60 +
Wait Event Histogram			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
	       extract(second from
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
		(cast(trunc(end_time, 'mi') as timestamp) -
   value of null is truly 0
-> Ordered by Event (idle events last)
		 cast(

						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
		   trunc(
enq: WF - contention	      20				      15.0  85.0
enq: WT - contention	       8					   100.0
gc buffer busy acquire	       4					   100.0
gc buffer busy release	       6					   100.0
gc cr block 2-way	     399			    .5	 3.8  38.8  56.9
gc cr block busy	      12					   100.0
		     to_date(:b_start_time,  :date_fmt), 'mi')
gc cr block congested	       2					   100.0
gc cr grant 2-way	    2406		      .2   1.0	 3.7  44.4  50.7
gc cr grant busy	     265				      15.5  84.5
gc cr grant congested	       4					   100.0
gc cr multi block grant        8				      12.5  87.5
gc cr multi block mixed       81				 1.2   3.7  95.1
gc current block 2-way	   20.2K		      .1    .4	  .5  13.1  86.0
gc current block busy	   10.5K		      .1    .4	  .5  37.0  62.0
gc current block congeste     85					   100.0
gc current block lost	       5					   100.0
gc current grant 2-way	  669.7K		.0    .3    .6	 2.3  40.6  56.1
gc current grant busy	   47.6K	  .0	.1    .0    .1	  .3   7.8  91.8
gc current grant congeste   1167					   100.0
gc current grant read-mos  53.2K		.0    .0    .0	  .1   1.6  98.3
			    as timestamp))) )
gc current multi block re     21					   100.0
gc current retry	       3					   100.0
gc remaster		       3					   100.0
gcs drm freeze in enter s      7					   100.0
gcs log flush sync	    1974	 1.9   3.7   8.6  13.4	13.9  18.5  40.0
		/ :p_bucket_interval)) + 1	   bucket_id,
gcs remastering wait for       4			  25.0	      25.0  50.0
ges enter server mode	     111  73.0	22.5   1.8   1.8    .9
ges ipc enter server mode    135  95.6	  .7   3.7
ges lms sync during dynam     37			   2.7	       8.1  89.2
	     case
ges message buffer alloca      1					   100.0
ges resource directory to      2 100.0
ges2 LMON to wake up LMD       2	      50.0		50.0
	       when :is_cdb_root = 1
kjctssqmg: quick message     296	15.5  15.9   3.4   3.7	 2.7  20.9  37.8
kksfbc child completion        1					   100.0
ksxr poll remote instance   1203	 3.1  84.5   7.1   3.3	 1.3	.5    .1
	       then c.name
latch free		     696	 4.5   1.3   2.2  23.6	43.5  19.4   5.6
latch: cache buffers chai      4		    25.0	25.0  50.0
latch: cache buffers lru      56   1.8	14.3   3.6   5.4  25.0	16.1  21.4  12.5
latch: checkpoint queue l     10	20.0		  10.0	      50.0  20.0
	       else consumer_group_name
latch: enqueue hash chain     23	17.4		  13.0	17.4  34.8  17.4
latch: gc element	      62	 1.6   4.8  16.1  19.4	14.5  24.2  19.4
latch: gcs resource hash     233	11.2   5.6   9.9  23.2	17.6  14.6  18.0
latch: ges resource hash       4		    25.0  25.0	25.0  25.0
latch: messages 	       1			 100.0
latch: object queue heade      4				     100.0
latch: redo allocation	     168	12.5   2.4   7.1  22.6	23.2  19.6  12.5
latch: redo writing	       2				50.0	    50.0
	     end consumer_group_name,
latch: shared pool	       3			  33.3	      33.3  33.3
latch: undo global data        4	      25.0		      50.0  25.0
libcache interrupt action   1076  93.2	 3.0   1.6   1.5    .7	  .1
library cache load lock        2	50.0		  50.0
library cache lock	     104				      20.2  79.8
library cache pin	     105		     1.0	      40.0  59.0
	     case
lock deadlock retry	       5	40.0  40.0		      20.0
log file parallel write    27.6K					   100.0
log file sequential read     552	       4.3  17.4   2.5	 1.3  13.9  60.5
log file sync		      18					   100.0
	       when :is_cdb_root = 1
oracle thread bootstrap        3					   100.0
os thread creation	       3					   100.0
read by other session	       2					   100.0

Wait Event Histogram			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)

	       then c.con_id
						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
	       else consumer_group_id
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
reliable message	     253					.4  99.6
row cache lock		      23					   100.0
undo_retention publish re      2 100.0
AQPC idle		      20					   100.0
ASM background timer	    2238				 4.6   7.7  87.7
ASM cluster membership ch    348					   100.0
DIAG idle wait		    7664		      .1    .8	 1.0   3.1  95.1
	     end consumer_group_id,
Data Guard: Gap Manager       10					   100.0
Data Guard: Timer	       1					   100.0
GCR sleep		    4062					   100.0
LGWR worker group idle	   11.1K   5.1	 3.7   1.7   5.7   9.2	 4.9   3.5  66.2
	     cpu_consumed_time,
OFS idle		     203					   100.0
PING			     557	       2.5  19.7  21.4	14.4   7.7  34.3
PX Deq Credit: need buffe     17			   5.9	29.4  17.6  47.1
PX Deq Credit: send blkd     425    .2		.2	    .9	 3.3  25.2  70.1
	     cpu_wait_time,
PX Deq: Execute Reply	     710    .1	25.8  11.0   8.0  10.6	11.8  10.0  22.7
PX Deq: Execution Msg	     516		.2    .4	 1.9  17.1  80.4
PX Deq: Msg Fragment	     296  12.2	 7.1   1.4	    .7	 2.7  14.9  61.1
	     io_requests,
PX Deq: Parse Reply	     335	 1.5   1.5	    .9	 2.7   5.4  88.1
PX Idle Wait		     172					   100.0
REPL Capture/Apply: RAC A     10					   100.0
RMA: IPC0 completion sync    664	35.2  55.7   6.3   1.5	 1.1	.2
	     io_megabytes,
SCM slave idle		    6123			    .0	  .0	.1  99.8
SQL*Net message from clie    176			   1.1	27.3   9.1  62.5
Space Manager: slave idle   2581	 1.0	.2    .5    .8	  .5	.2  96.9
	     avg_cpu_utilization,
Streams AQ: qmn coordinat     45   2.2			   6.7	31.1  11.1  48.9
Streams AQ: qmn slave idl     23   4.3					    95.7
class slave wait	    8079    .0	 3.5	.4   1.7   2.9	 2.2   2.6  86.9
dispatcher timer	      10					   100.0
	     avg_waiting_sessions,
gcs remote message	  817.4K	 1.8   3.4   7.4   9.9	11.2  17.4  48.9
gcs yield cpu		   41.4K    .0	  .9	.1    .1    .1	  .1	.3  98.5
ges remote message	   18.8K	  .3	.3    .3    .4	 2.7   4.7  91.4
	     avg_active_parallel_servers,
heartbeat monitor sleep       64  93.8	 4.7   1.6
heartbeat redo informer      610					   100.0
lreg timer		     204					   100.0
pman timer		     203					   100.0
	     avg_queued_parallel_stmts,
pmon timer		     406					   100.0
rdbms ipc message	     53K    .0	11.8   1.2   7.5   6.5	 3.4   3.1  66.4
smon timer		       2					   100.0
wait for unread message o    935					   100.0
	     avg_queued_parallel_servers,
watchdog main loop	     812					   100.0
			  ------------------------------------------------------


	     pga_used,
Wait Event Histogram (up to 64 us)	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
	     sga_used,
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)
	     spool_used,

						 % of Total Waits
				 -----------------------------------------------
			   Waits
	     bcache_used
			    1us
Event			  - 64us  <1us	<2us  <4us  <8us <16us <32us <64us >=64u
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	    5790			   1.0	81.7  12.3   4.9
	from (select m.*,
ASM IO for non-blocking p  51.9K		      .6  70.9	15.6   5.1   7.7
ASM file metadata operati   2389		.3  14.1   2.7	37.5  14.8  30.6
AWR Flush		       3		   100.0
			0 pga_used,
CGS wait for IPC msg	    6367			  13.9	70.7  10.7   4.8
DLM cross inst call compl     18				21.7   4.3  73.9
Disk file operations I/O      15		      .9   1.2	  .2	.3  97.4
			0 sga_used,
GCR CSS group query	      18			  83.3	11.1   5.6
GCR CSS group update	      18			  94.4	 5.6
IMR slave acknowledgement    496			   8.6	12.5   6.0  72.9
IPC group service call	     266		      .6   1.1	16.0  38.4  43.9
			0 spool_used,
IPC send completion sync     599			    .8	65.5   8.8  24.9
KJC: Wait for msg sends t   1917			  23.2	19.0  18.5  39.4
KSV master wait 	     416		      .1   8.0	14.5   2.6  74.9
			0 bcache_used
LGWR any worker group	      10			    .0		.1  99.9
LGWR wait for redo copy       77		    24.6   3.5	 1.0   9.5  61.3
LGWR worker group orderin     48		      .4    .3	  .1	.8  98.4
PGA memory operation	     385		    34.2  36.7	14.3   2.0  12.9
		   from v$rsrcmgrmetric_history m
PX Deq: Join ACK	       4			    .6	  .6	    98.8
PX Deq: Signal ACK EXT	     283			   7.5	66.3  10.7  15.5
PX Deq: Slave Session Sta    113		      .2  11.2	 7.7   3.2  77.7
PX Deq: reap credit	     16K		      .0  18.2	66.3  10.4   5.0
		  where plan_name = nvl(:b_plan_name,  plan_name)
PX qref latch		     155			  56.0	39.0   2.5   2.5
SQL*Net break/reset to cl     62		    41.8   8.2		.8  49.2
SQL*Net message to client    176	       1.7  88.6   8.5	  .6	.6
Sync ASM rebalance	      24			  38.9	 5.6	    55.6
		    and end_time &gt;= to_date(:b_start_time, :date_fmt)
asynch descriptor resize      22		    72.7  18.2	 9.1
buffer exterminate	       2			    .1	  .1	    99.8
control file sequential r    828			   6.6	15.2   1.3  77.0
db file async I/O submit   50.2K	       1.1  91.5   2.4	 1.8   1.6   1.5
		    and end_time &lt;  to_date(:b_end_time, :date_fmt)) h,
db file parallel write	    8885			    .0	 2.0  15.6  82.4
direct path read	      16			  10.9	 6.3   7.8  75.0
enq: PS - contention	       4			   1.4	  .5	    98.2
enq: RO - fast object reu      1					.6  99.4
	     v$containers c
gc cr grant 2-way	       5					.2  99.8
gc current block 2-way	      21					.1  99.9
gc current block busy	      14					.1  99.9
gc current grant 2-way	    2151				  .0	.3  99.7
       where userenv('INSTANCE') between :p_inst_id_low and :p_inst_id_high
gc current grant busy	      52			    .0	  .1	.0  99.9
gc current grant read-mos     14				  .0	.0 100.0
gcs log flush sync	     280			   1.9	 3.7   8.6  85.8
	 and c.con_id = h.con_id))) v0
ges enter server mode	     110	       2.7  70.3  22.5	 1.8   1.8    .9
ges ipc enter server mode    135		    95.6    .7	 3.7
ges resource directory to      2		   100.0
ges2 LMON to wake up LMD       1				50.0	    50.0
       )v1 )v2 )
kjctssqmg: quick message     103			  15.5	15.9   3.4  65.2
ksxr poll remote instance   1140			   3.1	84.5   7.1   5.2
latch free		      55			   4.5	 1.3   2.2  92.1
latch: cache buffers chai      1				      25.0  75.0
       group by bucket_id,  consumer_group_id,	consumer_group_name) rsrc
latch: cache buffers lru      14		     1.8  14.3	 3.6   5.4  75.0
latch: checkpoint queue l      2			  20.0		    80.0
latch: enqueue hash chain      4			  17.4		    82.6
latch: gc element	      14			   1.6	 4.8  16.1  77.4
	      where cpu_consumed_time + cpu_wait_time +
latch: gcs resource hash      62			  11.2	 5.6   9.9  73.4
latch: ges resource hash       1				      25.0  75.0
latch: redo allocation	      37			  12.5	 2.4   7.1  78.0
latch: undo global data        1				25.0	    75.0
		    io_requests + io_megabytes +  avg_waiting_sessions +
libcache interrupt action   1068	       3.6  89.6   3.0	 1.6   1.5    .7
library cache load lock        1			  50.0		    50.0
library cache pin	       1				       1.0  99.0

		    avg_active_parallel_servers + avg_queued_parallel_servers +
Wait Event Histogram (up to 64 us)	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
		    pga_used +	sga_used +  spool_used +   bcache_used &gt; 0)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)
       )

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1us
      -- construct xml
Event			  - 64us  <1us	<2us  <4us  <8us <16us <32us <64us >=64u
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
lock deadlock retry	       4			  40.0	40.0	    20.0
      select xmlagg(
log file sequential read     120				 4.3  17.4  78.3
undo_retention publish re      2		   100.0
			  ------------------------------------------------------

	       nvl2(buckets,

Wait Event Histogram (up to 32 ms)	   DB/Inst: P30DB/p30db2  Snaps: 81-82
		    xmlelement(&quot;stattype&quot;,
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
		     xmlattributes('rsrcmgrmetric' as &quot;name&quot;),
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
		     xmlelement(&quot;stat_info&quot;,
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
		       nvl(stat_id,
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)
			   xmlelement(&quot;stat&quot;,

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1ms
			     xmlattributes(
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	      11  99.8	  .2	.0
ASM IO for non-blocking p    255  99.5	  .4	.1    .0    .0
			       consumer_group_id as &quot;id&quot;,
ASM file metadata operati    605  82.3	 1.0   3.8   5.2   6.9	  .6	.0    .1
CGS wait for IPC msg	      14  99.8	  .1	.1
CSS operation: data query     17   5.6	33.3  27.8  33.3
CSS operation: data updat     19   5.0	70.0  25.0
			       consumer_group_id as &quot;name&quot;)))),
DFS lock handle 	     120  59.2	36.1   4.1    .3    .3
DLM cross inst call compl     45  34.8	39.1  23.2   2.9
Disk file Mirror Read	     850	20.0  51.3  14.4   7.0	 3.8   2.2   1.4
Disk file operations I/O      49  91.6	 7.4	.9    .2
IMR slave acknowledgement    547  69.5	 4.9  16.0   4.5   2.3	 1.5	.7    .7
		     nvl2(buckets,  xmlelement(&quot;buckets&quot;,  xmlattributes( :p_bucket_interval as &quot;bucket_interval&quot;,	:p_bucket_count as &quot;bucket_count&quot;,  :b_min_time as &quot;start_time&quot;,  :b_max_time as &quot;end_time&quot;,  :b_duration as &quot;duration&quot;), buckets),  null)),
IPC group service call	       2  99.6	  .4
IPC send completion sync      45  94.4	 4.1   1.3    .3
KJC: Wait for msg sends t    242  92.3	 6.6	.9    .1    .0		      .0
KSV master wait 	     649  60.8	 1.3   8.2  13.4  15.0	 1.3	      .1
		    null))
LGWR all worker groups	     157		      .4   5.8	27.0  36.3  30.5
LGWR any worker group	    7655   3.0	 3.0   7.4  26.1  19.2	13.0  16.6  11.7
LGWR wait for redo copy       35  82.4	 8.5   6.0   2.5    .5
LGWR worker group orderin   2793   5.5	 2.8   4.2  52.1  21.1	 4.1   7.5   2.8
	from ( -- aggregate buckets
PX Deq: Join ACK	     325   3.0	29.0  26.9  35.5   5.7
PX Deq: Signal ACK EXT	       3  99.1	  .9
PX Deq: Slave Session Sta    193  61.9	19.1  15.8   3.0    .2
PX Deq: reap credit	      27  99.8	  .1	.0
Parameter File I/O	      15  32.1	 1.8		   1.8	 5.4  17.9  41.1
	  select xmlagg(xmlelement(&quot;bucket&quot;,	xmlattributes(bucket_id as &quot;bucket_id&quot;),  stats) order by bucket_id) buckets,
SQL*Net break/reset to cl      2  98.4	       1.6
Sync ASM rebalance	      19  51.9	 9.3   5.6		 9.3  11.1  13.0
buffer exterminate	     924    .2				99.8
control file parallel wri    233		     3.2  50.5	13.5  15.7  17.1
		 xmlagg(stat_id)  stat_id,
control file sequential r    401  88.6	 8.8   1.1    .3    .2	  .1	.7    .3
db file async I/O submit      39  99.9	  .1	.0    .0
db file parallel read	       1  50.0	50.0
		 max(consumer_group_id) consumer_group_id
db file parallel write	   26.8K  46.0	21.2  17.6   8.3   1.7	  .4   3.7   1.1
db file scattered read	      14  59.5	27.0   2.7	   8.1		     2.7
db file sequential read   788.6K  19.1	12.2   1.0  33.2  14.6	 1.4  10.0   8.4
direct path read	       5  92.2	 6.3			 1.6
	    from ( -- aggregate stats in each bucket
direct path write	       6	33.3			50.0  16.7
direct path write temp	      43	 1.9	     9.6  28.8	23.1  19.2  17.3
enq: AF - task serializat      1       100.0
enq: CF - contention	      39   6.1	53.1  18.4   2.0   2.0	       4.1  14.3
	      select bucket_id,
enq: CO - master slave de      9  10.0	30.0  40.0  20.0
enq: FB - contention	       3       100.0
enq: HW - contention	       9  30.8	46.2  23.1
enq: PE - contention	       1	     100.0
		     max(consumer_group_id) consumer_group_id,
enq: PS - contention	     140  35.8	37.2  23.9   2.8	  .5
enq: RA - RT ADDM flood c      1  50.0	50.0
enq: RO - fast object reu     76   6.4	31.4  10.5   1.7    .6		    49.4
enq: TD - KTF dump entrie      1       100.0
		     xmlagg(stat_id order by consumer_group_id) stat_id,
enq: TK - Auto Task Seria      1       100.0
enq: TM - contention	       1	      50.0			    50.0
		     xmlagg(xmlelement(&quot;stat&quot;,
enq: TO - contention	      30   6.3	75.0  15.6   3.1
enq: TT - contention	       1       100.0
		      xmlattributes(consumer_group_id as &quot;id&quot;,
enq: WF - contention	      17  15.0	55.0  30.0
enq: WT - contention	       8	50.0  50.0
gc buffer busy acquire	       3	25.0  25.0	  25.0		    25.0
gc buffer busy release	       4		    16.7	33.3  16.7  33.3
			    round(cpu_consumed_time,  6) as &quot;cctm&quot;,
gc cr block 2-way	     227  43.1	45.1  10.3   1.5
gc cr block busy	       4		     8.3   8.3	      16.7  66.7
gc cr block congested	       2			  50.0	50.0
gc cr grant 2-way	    1220  49.3	37.8  11.0   1.4    .4	  .1
gc cr grant busy	     224  15.5	50.9  28.3   3.4   1.9

Wait Event Histogram (up to 32 ms)	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
			    round(cpu_wait_time,  6) as &quot;cwtm&quot;,
-> Units for % of Total Waits:
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
			    round(io_requests,	6)   as &quot;io_reqs&quot;,
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1ms
			    round(io_megabytes,  6)  as &quot;io_mb&quot;,
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
gc cr grant congested	       4		    50.0  50.0
gc cr multi block grant        7  12.5	37.5  50.0
			    round(avg_cpu_utilization,	6)	   as &quot;cpu&quot;,
gc cr multi block mixed       77   4.9	22.2  55.6  17.3
gc current block 2-way	   17.4K  14.0	60.3  22.3   2.8    .4	  .0	      .0
gc current block busy	    6513  38.0	48.1  11.7   1.6    .2	  .1	.1    .2
gc current block congeste     84	       4.7  28.2  50.6	12.9   2.4   1.2
			    round(avg_waiting_sessions,  6)	   as &quot;ws&quot;,
gc current grant 2-way	  375.9K  43.9	43.1  11.0   1.7    .4	  .0	.0    .0
gc current grant busy	   43.7K   8.2	54.7  30.4   5.7    .8	  .2	.0    .0
gc current grant congeste   1158	      18.5  48.2  25.3	 6.9	.3    .8
gc current grant read-mos  52.2K   1.7	33.7  52.2  10.9   1.2	  .2	.1    .0
			    round(avg_queued_parallel_stmts,  6)   as &quot;qpst&quot;,
gc current multi block re     21	76.2  23.8
gc current retry	       3       100.0
gc remaster		       3	      33.3  33.3	      33.3
gcs drm freeze in enter s      1		    14.3		    85.7
gcs log flush sync	     789  60.0	16.3  12.3   5.6   3.9	 1.5	.5
			    round(avg_queued_parallel_servers,	6) as &quot;qpsr&quot;,
gcs remastering wait for       1  50.0	25.0				    25.0
ges lms sync during dynam     33  10.8	13.5  10.8	  32.4	29.7   2.7
kjctssqmg: quick message     112  62.2	29.1   6.4   2.4
			    round(avg_active_parallel_servers,	6) as &quot;apsr&quot;,
ksxr poll remote instance      1  99.9	  .1
latch free		      39  94.4	 4.9	.7
latch: cache buffers lru       7  87.5	 8.9   3.6
latch: checkpoint queue l      2  80.0	10.0  10.0
			    round(pga_used,  6) 		   as &quot;upga&quot;,
latch: enqueue hash chain      4  82.6	17.4
latch: gc element	      12  80.6	 4.8   9.7   4.8
latch: gcs resource hash      42  82.0	10.7   6.4    .9
latch: redo allocation	      21  87.5	 8.9   1.8    .6   1.2
			    round(sga_used,  6) 		   as &quot;usga&quot;,
latch: redo writing	       1  50.0		    50.0
latch: shared pool	       1  66.7	33.3
latch: undo global data        1  75.0	25.0
library cache lock	      83  20.2	64.4  13.5   1.9
library cache pin	      62  41.0	46.7  11.4   1.0
			    round(spool_used,  6)		   as &quot;usp&quot;,
log file parallel write      21K		      .1  21.0	30.1  24.7  24.1
log file sequential read     331  39.5	29.5   7.1  15.9   2.7	 2.5   2.2    .5
			    round(bcache_used,	6)		   as &quot;ubc&quot;
log file sync		       3				11.1   5.6  83.3
oracle thread bootstrap        2				      66.7  33.3
			)
os thread creation	       3	      66.7  33.3
read by other session	       2				50.0  50.0
reliable message	     250    .4	41.1  23.7  27.3   5.9	  .4	.4    .8
row cache lock		      23	21.7  73.9   4.3
		      )
			  ------------------------------------------------------


		      order by consumer_group_id)  stats
Wait Event Histogram (up to 2 sec)	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
		from ( -- generate id name map
-> Units for % of Total Waits:
   ms is milliseconds
   s is 1024 milliseconds (approximately 1 second)
		  select bucket_id,  consumer_group_id,
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
			 nvl2(consumer_group_name,
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			      xmlelement(&quot;stat&quot;,
			   Waits
			   64ms
Event			   to 2s <32ms <64ms <1/8s <1/4s <1/2s	 <1s   <2s  >=2s
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
			       xmlattributes(consumer_group_id as &quot;id&quot;,
ASM file metadata operati      3  99.9	  .1		    .0
Disk file Mirror Read	      12  98.6	  .8	.5    .1
IMR slave acknowledgement     12  99.3	  .5	.1    .1
KJC: Wait for msg sends t      1 100.0			    .0
KSV master wait 	       1  99.9			    .1
				 consumer_group_name as &quot;name&quot;)),
LGWR all worker groups	      69  69.5	23.5   6.6    .4
LGWR any worker group	    1048  88.3	10.5   1.1    .1
LGWR worker group orderin     84  97.2	 2.7	.1
Parameter File I/O	      23  58.9	32.1   5.4   1.8   1.8
			      null)	 stat_id,
SGA: allocation forcing c      6			  33.3	66.7
Sync ASM rebalance	       7  87.0	 1.9   9.3   1.9
control file parallel wri     48  82.9	15.7   1.4
control file sequential r     10  99.7	  .3
db file parallel write	     537  98.9	 1.1	.0
			 cpu_consumed_time,  cpu_wait_time,
db file scattered read	       1  97.3	 2.7
db file sequential read    91.3K  91.6	 7.7	.7    .0
direct path write temp	       9  82.7	17.3
enq: CF - contention	       7  85.7	       2.0   6.1   6.1
enq: RO - fast object reu     85  50.6	 1.7  10.5  33.7   3.5
			 io_requests,  io_megabytes,
enq: TM - contention	       1  50.0				50.0
gc buffer busy acquire	       1  75.0				25.0
gc buffer busy release	       2  66.7	16.7	    16.7
gc cr block busy	       8  33.3	      41.7  25.0
gc current block 2-way	       3 100.0				  .0
			 avg_cpu_utilization,
gc current block busy	      16  99.8	  .0	.0    .1    .0
gc current block congeste      1  98.8				 1.2
gc current block lost	       5			 100.0
gc current grant 2-way	      12 100.0	  .0	.0		  .0	.0
			 avg_waiting_sessions,
gc current grant busy	      13 100.0				  .0	.0
gc current grant congeste      9  99.2	  .3	.3		  .2
gc current grant read-mos     17 100.0	  .0	.0    .0    .0
			 avg_active_parallel_servers,
gcs drm freeze in enter s      6  14.3	28.6  14.3  42.9
			 avg_queued_parallel_stmts,
			 avg_queued_parallel_servers,
			 pga_used,
			 sga_used,
			 spool_used,
			 bcache_used
		   from rmmetrics_data)
	       group by bucket_id))</pre_sqltext></td>
</tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5k5207588w9ry"></a>5k5207588w9ry</td><td class='awrc'><pre_sqltext class="awr">SELECT DBMS_REPORT.GET_REPORT(:B1 ) FROM DUAL</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5n1fs4m2n2y0r"></a>5n1fs4m2n2y0r</td><td class='awrnc'><pre_sqltext class="awr">select pos#, intcol#, col#, spare1, bo#, spare2, spare3 from icol$ where obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5u7g54s63p4ts"></a>5u7g54s63p4ts</td><td class='awrc'><pre_sqltext class="awr">select toid from type$ where package_obj#=:1 and typ_name=:2</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6bzqp0g9nrnfz"></a>6bzqp0g9nrnfz</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '7';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
gcs remastering wait for       1  75.0	      25.0
ges message buffer alloca      1			 100.0
kksfbc child completion        1       100.0
log file parallel write     6674  75.9	20.6   3.4    .1    .0
log file sequential read       3  99.5	  .5
log file sync		      15  16.7	50.0  33.3
oracle thread bootstrap        1  66.7	33.3
reliable message	       2  99.2	  .4			  .4
			  ------------------------------------------------------


Wait Event Histogram (up to 2 min)	   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------


Wait Event Histogram (up to 1 hr)	   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------


Service Statistics			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> ordered by DB Time

							   Physical	 Logical
Service Name		      DB Time (s)   DB CPU (s)	  Reads (K)    Reads (K)
---------------------------- ------------ ------------ ------------ ------------
p30db.example.com		   10,184	   456	      1,079	   1,408
SYS$USERS				4	     1		  0	       7
SYS$BACKGROUND				4	     3		  3	     113
p30dbXDB				0	     0		  0	       0
			  ------------------------------------------------------

Service Wait Class Stats		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Wait Class info for services in the Service Statistics section.
-> Total Waits and Time Waited displayed for the following wait
   classes:  User I/O, Concurrency, Administrative, Network
-> Time Waited (Wt Time) in seconds

Service Name
----------------------------------------------------------------
 User I/O  User I/O  Concurcy  Concurcy     Admin     Admin   Network	Network
Total Wts   Wt Time Total Wts	Wt Time Total Wts   Wt Time Total Wts	Wt Time
--------- --------- --------- --------- --------- --------- --------- ---------
p30db.example.com
  1078757      9251	    9	      0 	0	  0	   37	      0
SYS$USERS
      177	  1	    2	      0 	0	  0	  120	      0
SYS$BACKGROUND
    60837	 16	 1313	      0 	0	  0	  473	      0
			  ------------------------------------------------------

Top 10 Channel Waits			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Top 10 Channel Waits by wait time

Channel
----------------------------------------------------------------
	       Total
		Wait
      Waits Time (s)  Avg Wait
----------- -------- ---------
kxfp control signal channel
	168	   0	1.09ms
obj broadcast channel
	 85	   1   10.58ms
			  ------------------------------------------------------


Top Process Types by Wait Class 	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> This table displays top process types ordered by wait class

Proce Description		     Wait Class Type  Wait Time (sec
----- ------------------------------ ---------------- --------------
      Others (foregrounds + unclassi User I/O		     9,280.4
      Others (foregrounds + unclassi Cluster		       641.3
LG    Log Writer Slave		     System I/O 	       426.1
LGWR  Redo etc. 		     System I/O 	       208.0
LGWR  Redo etc. 		     Other		       124.4
DBW0  db writer process 0	     System I/O 	       112.3
LG    Log Writer Slave		     Other			19.3
M     MMON slave class 1	     Application		15.5
      Others (foregrounds + unclassi Other			10.5
RMS0  rac management server	     Other			 7.4
M     MMON slave class 1	     User I/O			 6.9
M     MMON slave class 1	     Cluster			 6.7
CKPT  checkpoint		     System I/O 		 5.1
MMON  Manageability Monitor Process  User I/O			 3.3
M     MMON slave class 1	     Other			 2.8
LMON  global enqueue service monitor Other			 2.8
O     ASM Connection Pool	     Other			 2.8
LM    global cache service process   Other			 2.4
RMS0  rac management server	     System I/O 		 2.1
IMR   CGS IMR Slave		     User I/O			 1.9
			  ------------------------------------------------------

	v_do_sleeps := TRUE;

Top Process Types by CPU Used		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> This table displays top process types ordered by CPU time

Proces Description		      CPU Time (sec)
------ ------------------------------ --------------
       Others (foregrounds + unclassi	       457.2
LM     global cache service process	       211.5
DBW0   db writer process 0			47.2
VKTM   Virtual Keeper of TiMe process		34.3
END IF;
M      MMON slave class 1			14.6
LGWR   Redo etc.				13.7
LG     Log Writer Slave 			12.4
RS*    GCS RM Slave				 4.9
P      Parallel query slave			 4.6
GCR    GCR Slaves (LMHB)			 4.4
RMS0   rac management server			 3.6

VKRM   Virtual sKeduler for Resource		 3.4
MMAN   Memory Manager				 3.2
IPC0   IPC Service 0				 3.0
DIA0   diagnosibility process 0 		 2.5
LMD0   global enqueue service daemon		 1.4
LMON   global enqueue service monitor		 1.4
LMHB   lm heartbeat monitor			 1.3
LMD1   global enqueue service daemon		 1.2
O      ASM Connection Pool			 1.1
IF ( v_max_loop_iterations &gt; 0 )  THEN
			  ------------------------------------------------------


SQL ordered by Elapsed Time		   DB/Inst: P30DB/p30db2  Snaps: 81-82
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
-> Resources reported for PL/SQL code includes the resources used by all SQL
END IF;
   statements called by the code.

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);
-> % Total DB Time is the Elapsed Time of the SQL statement divided

   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-> Captured SQL account for   98.4% of Total DB Time (s):	   10,263
-> Captured PL/SQL account for	 99.2% of Total DB Time (s):	      10,263

-- DBMS_RANDOM.seed (val =&gt; v_seed);
	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------

	10,022.2	 35,802 	 0.28	97.6	4.3   91.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )
v_begin_time := DBMS_UTILITY.GET_TIME();

	   563.9	      1        563.94	 5.5	4.4   90.7 d49x1sm5j34ms
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
v_now := v_begin_time ;
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
v_brick_wall := v_now + v_seconds_to_run ;

	   563.8	      1        563.82	 5.5	2.5   98.1 gp2af7qaws3yq
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re

do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

----------------------------------------------------------------------------------------------------------------------
	   563.8	      1        563.82	 5.5	4.2   92.6 bcmft1hf3v16j
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
-- The following WHILE loop is the master work loop control
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	   563.8	      1        563.82	 5.5	4.5   92.4 d7m0vnz9zpwju
----------------------------------------------------------------------------------------------------------------------
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	   563.8	      1        563.82	 5.5	5.5   88.4 129d7r965xakz

Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	   563.8	      1        563.77	 5.5	4.1   93.2 1s34w34a21n9p
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	   563.7	      1        563.74	 5.5	4.9   89.6 g5wjwfs93z517
Module: SQL*Plus
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
			DBMS_LOCK.SLEEP(v_num_tmp);
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	   563.7	      1        563.72	 5.5	4.6   90.3 4p0za9517qhty
Module: SQL*Plus
		END IF;
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
	END IF;
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

SQL ordered by Elapsed Time		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Resources reported for PL/SQL code includes the resources used by all SQL

   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
-> Captured SQL account for   98.4% of Total DB Time (s):	   10,263
-> Captured PL/SQL account for	 99.2% of Total DB Time (s):	      10,263
			v_sharing_schema := TRUE ;

	Elapsed 		 Elapsed Time
		ELSE
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
			IF ( v_sharing_schema = TRUE ) THEN
---------------- -------------- ------------- ------ ------ ------ -------------

	   563.7	      1        563.71	 5.5	4.1   93.1 b1nsgh4u6gc3q
Module: SQL*Plus
				EXECUTE IMMEDIATE v_home_schema_str;
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
				v_sharing_schema := FALSE;
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	   563.7	      1        563.70	 5.5	5.0   89.4 7huzc5jc2tyyr
Module: SQL*Plus
			END IF;
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
		END IF;
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	   563.7	      1        563.67	 5.5	4.9   89.7 3uawgw8gknfx7
Module: SQL*Plus
	END IF;
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r

edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	   563.7	      1        563.67	 5.5	5.4   88.5 7qdskga9a98tt
Module: SQL*Plus
	-- Choose the random block. The v_do_hotspot handler that follows can override.
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	   563.6	      1        563.65	 5.5	5.4   88.7 c863fngb197rm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=

'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
	   563.6	      1        563.55	 5.5	4.6   82.9 crcf813m8k6q0
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	   563.5	      1        563.50	 5.5	3.9   93.6 drhdgsbjxfacu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	   563.5	      1        563.50	 5.5	4.3   92.9 6bzqp0g9nrnfz
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	END IF;
	   563.5	      1        563.48	 5.5	4.1   93.0 4kmfwdxs245tu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=


SQL ordered by Elapsed Time		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
----------------------------------------------------------------------------------------------------------------------
   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
-> Captured SQL account for   98.4% of Total DB Time (s):	   10,263
-> Captured PL/SQL account for	 99.2% of Total DB Time (s):	      10,263

	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
----------------------------------------------------------------------------------------------------------------------
---------------- -------------- ------------- ------ ------ ------ -------------
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r

edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	   563.5	      1        563.48	 5.5	4.1   93.2 bnm8uw9y0ubhg
Module: SQL*Plus
	IF  ( v_select_only_workload = TRUE ) THEN
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
		-- handle case where user specified zero pct updates (a SELECT-only workload)
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

			  ------------------------------------------------------


		v_do_update := FALSE;
SQL ordered by CPU Time 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
		v_update_quota := TRUE ;
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   97.0% of Total CPU Time (s):	       464
	ELSE
-> Captured PL/SQL account for	 99.5% of Total CPU Time (s):		  464

    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
		IF ( v_update_only_workload = TRUE ) THEN
---------- ------------ ---------- ------ ---------- ------ ------ -------------
     433.0	 35,802       0.01   93.3   10,022.2	4.3   91.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
			-- handle case where user specified 100% updates
< :B1 )

      30.8	      1      30.75    6.6      563.8	5.5   88.4 129d7r965xakz
Module: SQL*Plus
			v_do_update := TRUE;
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d
			v_update_quota := FALSE;

      30.6	      1      30.58    6.6      563.7	5.4   88.5 7qdskga9a98tt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
		ELSE
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES

      30.3	      1      30.29    6.5      563.6	5.4   88.7 c863fngb197rm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			IF ( v_update_quota = FALSE ) THEN
      28.1	      1      28.14    6.1      563.7	5.0   89.4 7huzc5jc2tyyr
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
				-- Handle case where user has set UPDATE_PCT to a valid value
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      27.9	      1      27.85    6.0      563.7	4.9   89.6 g5wjwfs93z517
				--
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
				-- We are doing updates during this run and quota has not been met yet
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

      27.6	      1      27.64    6.0      563.7	4.9   89.7 3uawgw8gknfx7
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
				-- We still vacillate until update quota has been met
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d


      26.1	      1      26.14    5.6      563.7	4.6   90.3 4p0za9517qhty
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
				IF ( MOD(v_random_block,  2) = 0 ) THEN
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

					v_do_update := TRUE;
      25.6	      1      25.65    5.5      563.6	4.6   82.9 crcf813m8k6q0
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
				ELSE
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

SQL ordered by CPU Time 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
					v_do_update := FALSE;
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
				END IF;
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   97.0% of Total CPU Time (s):	       464
-> Captured PL/SQL account for	 99.5% of Total CPU Time (s):		  464

			ELSE
    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------

      25.4	      1      25.44    5.5      563.8	4.5   92.4 d7m0vnz9zpwju
				-- UPDATE quota has been filled,  force drain some SELECTs
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
				v_do_update := FALSE;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      25.0	      1      24.98    5.4      563.9	4.4   90.7 d49x1sm5j34ms
			END IF;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
		END IF;
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

      24.4	      1      24.44    5.3      563.5	4.3   92.9 6bzqp0g9nrnfz
Module: SQL*Plus
	END IF;
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do


      23.5	      1      23.50    5.1      563.8	4.2   92.6 bcmft1hf3v16j
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

      23.3	      1      23.30    5.0      563.5	4.1   93.0 4kmfwdxs245tu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
----------------------------------------------------------------------------------------------------------------------
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

      23.2	      1      23.21    5.0      563.7	4.1   93.1 b1nsgh4u6gc3q
Module: SQL*Plus
-- The type of SQL is now determined...execute it in the following section
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

      23.1	      1      23.12    5.0      563.8	4.1   93.2 1s34w34a21n9p
Module: SQL*Plus
----------------------------------------------------------------------------------------------------------------------
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r

edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

      22.8	      1      22.84    4.9      563.5	4.1   93.2 bnm8uw9y0ubhg
Module: SQL*Plus
	IF ( v_do_update != TRUE ) THEN
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d
		--

      21.7	      1      21.72    4.7      563.5	3.9   93.6 drhdgsbjxfacu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=

		-- Do a SELECT statement
SQL ordered by CPU Time 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
		-- Work out scan or random
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
		IF  ( v_random_workload_only = TRUE ) THEN
-> Captured SQL account for   97.0% of Total CPU Time (s):	       464
-> Captured PL/SQL account for	 99.5% of Total CPU Time (s):		  464

    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
---------- ------------ ---------- ------ ---------- ------ ------ -------------
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
			v_do_scan_query := FALSE;

      14.1	      1      14.09    3.0      563.8	2.5   98.1 gp2af7qaws3yq
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
			v_scan_query_quota := TRUE ;
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

		ELSE
       7.7	      2       3.87    1.7	31.2   24.8   18.5 fhf8upax5cxsz
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

			IF ( v_scan_workload_only = TRUE ) THEN
       7.5	      2       3.75    1.6	30.5   24.6   17.9 5k5207588w9ry
SELECT DBMS_REPORT.GET_REPORT(:B1 ) FROM DUAL

			  ------------------------------------------------------


				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
SQL ordered by User I/O Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
				v_do_scan_query := TRUE;
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   98.2% of Total User I/O Wait Time (s):	       9
-> Captured PL/SQL account for	 99.0% of Total User I/O Wait Time (s):
				v_scan_query_quota := FALSE;

  User I/O		  UIO per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
			ELSE
   9,157.7	 35,802       0.26   98.0   10,022.2	4.3   91.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

				IF ( v_scan_query_quota = FALSE ) THEN
     552.9	      1     552.89    5.9      563.8	2.5   98.1 gp2af7qaws3yq
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     527.7	      1     527.70    5.6      563.5	3.9   93.6 drhdgsbjxfacu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN

     525.5	      1     525.51    5.6      563.8	4.1   93.2 1s34w34a21n9p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
						v_do_scan_query := TRUE;
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     525.3	      1     525.26    5.6      563.5	4.1   93.2 bnm8uw9y0ubhg
					ELSE
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d
						v_do_scan_query := FALSE;

     525.0	      1     524.96    5.6      563.7	4.1   93.1 b1nsgh4u6gc3q
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
					END IF;
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d
				ELSE

     524.2	      1     524.21    5.6      563.5	4.1   93.0 4kmfwdxs245tu
					-- Scan quota has been filled,	force drain some random access SELECTS
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
					v_do_scan_query := FALSE;
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     523.6	      1     523.62    5.6      563.5	4.3   92.9 6bzqp0g9nrnfz
Module: SQL*Plus
				END IF;
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
			END IF;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

		END IF;
     521.8	      1     521.82    5.6      563.8	4.2   92.6 bcmft1hf3v16j
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r

edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

SQL ordered by User I/O Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Resources reported for PL/SQL code includes the resources used by all SQL
		IF ( v_do_scan_query != TRUE ) THEN
   statements called by the code.
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
			SELECT COUNT(c2) INTO v_rowcnt
-> Captured SQL account for   98.2% of Total User I/O Wait Time (s):	       9
-> Captured PL/SQL account for	 99.0% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
			FROM cf1
---------- ------------ ---------- ------ ---------- ------ ------ -------------

			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6t44kht0nhjs9"></a>6t44kht0nhjs9</td><td class='awrc'><pre_sqltext class="awr"> WITH
	    instances as
	    (SELECT host_name,
		    instance_number
	     FROM sys.gv_$instance
	     WHERE instance_number between :inst_id_low and :inst_id_high)
	   ,  num_cpus as
	    (SELECT i.host_name,
		    i.instance_number,
		    sum(decode(o.stat_name,  'NUM_CPU_CORES',  o.value,  0))
		    num_cpu_cores,
		    sum(decode(o.stat_name,  'NUM_CPUS',  o.value,  0)) num_cpus
	     FROM instances i,	sys.gv_$osstat o
	     WHERE o.inst_id = i.instance_number
	     GROUP BY i.instance_number,  i.host_name)
	   ,  inst_caging_cpu_count as
	    (SELECT i.host_name,
		    i.instance_number,
		    max(nvl(to_number(p.value),  0))
		    cpu_count
	     FROM instances i,	sys.gv_$system_parameter p,
		  sys.gv_$rsrc_plan r
	     WHERE p.name= 'cpu_count'
	       AND i.instance_number = p.inst_id
	       AND r.inst_id = p.inst_id
	       AND r.is_top_plan = 'TRUE'
	       AND r.cpu_managed = 'ON'
	       AND r.instance_caging = 'ON'
	     GROUP BY host_name,  instance_number)
       SELECT xmlelement(&quot;cpu_info&quot;,
		 xmlagg(
		 xmlelement(&quot;host&quot;,
		 xmlattributes(host_name as &quot;name&quot;,
			       max(num_cpus) as &quot;num_cores&quot;,
			       max(num_cpu_cores) as &quot;num_cpus&quot;),
		 xmlagg(
		    xmlelement(&quot;instance&quot;,
		       xmlattributes(instance_number as &quot;id&quot;,
				     cpu_count as &quot;cpu_count&quot;))
		 order by instance_number))))
		 as xml
       FROM (SELECT c.host_name,  c.instance_number,
		    nvl(c.num_cpus, c.num_cpu_cores) as num_cpus,
		    nvl(c.num_cpu_cores,  c.num_cpus) as num_cpu_cores,
		    p.cpu_count
	     FROM  num_cpus c,	inst_caging_cpu_count p
	     WHERE p.instance_number(+) = c.instance_number)
       GROUP BY host_name</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="7huzc5jc2tyyr"></a>7huzc5jc2tyyr</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '4';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';

     520.8	      1     520.82    5.6      563.8	4.5   92.4 d7m0vnz9zpwju

Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;
     511.3	      1     511.30    5.5      563.9	4.4   90.7 d49x1sm5j34ms
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=

'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
v_num_tmp NUMBER := 0;

     508.8	      1     508.84    5.4      563.7	4.6   90.3 4p0za9517qhty
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
v_loop_cnt PLS_INTEGER := 0;
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     505.6	      1     505.64    5.4      563.7	4.9   89.7 3uawgw8gknfx7
v_rowcnt PLS_INTEGER := 0;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
v_updates_cnt PLS_INTEGER := 0;
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

v_selects_cnt PLS_INTEGER := 0;
     505.4	      1     505.35    5.4      563.7	4.9   89.6 g5wjwfs93z517
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=

 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

v_random_access_queries_cnt PLS_INTEGER := 0;
     504.1	      1     504.12    5.4      563.7	5.0   89.4 7huzc5jc2tyyr
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
v_scan_queries_cnt PLS_INTEGER := 0;
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do


     500.1	      1     500.09    5.4      563.6	5.4   88.7 c863fngb197rm
Module: SQL*Plus
v_do_scan_query BOOLEAN :=FALSE;
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
v_scan_query_quota  BOOLEAN := FALSE;
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     499.1	      1     499.06    5.3      563.7	5.4   88.5 7qdskga9a98tt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
v_scan_workload_only BOOLEAN := FALSE;
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     498.2	      1     498.23    5.3      563.8	5.5   88.4 129d7r965xakz
Module: SQL*Plus
v_random_workload_only BOOLEAN := FALSE;
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=

SQL ordered by User I/O Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 81-82

-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - User I/O Time as a percentage of Total User I/O Wait time

-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   98.2% of Total User I/O Wait Time (s):	       9
v_random_block PLS_INTEGER := 1;
-> Captured PL/SQL account for	 99.0% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed
v_tmp PLS_INTEGER;
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
v_now PLS_INTEGER;
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

v_brick_wall PLS_INTEGER;
     467.5	      1     467.46    5.0      563.6	4.6   82.9 crcf813m8k6q0
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=

 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d
v_begin_time PLS_INTEGER;

			  ------------------------------------------------------


v_end_time PLS_INTEGER;
SQL ordered by Gets			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
v_total_time PLS_INTEGER;
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    1,534,097
v_begin_cpu_tm PLS_INTEGER;
-> Captured SQL account for   97.4% of Total

     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------
  1,352,449	 35,802 	37.8   88.2   10,022.2	 4.3  91.4 35dumc2tpr9dv
Module: SQL*Plus
v_end_cpu_tm PLS_INTEGER;
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

     90,648	      1     90,648.0	5.9	 563.8	 4.5  92.4 d7m0vnz9zpwju
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
v_total_cpu_tm PLS_INTEGER;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do


     86,704	      1     86,704.0	5.7	 563.5	 4.3  92.9 6bzqp0g9nrnfz
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
v_do_sleeps BOOLEAN := FALSE;
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

v_loop_control BOOLEAN := FALSE;
     82,785	      1     82,785.0	5.4	 563.7	 4.1  93.1 b1nsgh4u6gc3q
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
v_update_quota BOOLEAN := FALSE;
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     82,247	      1     82,247.0	5.4	 563.5	 4.1	93 4kmfwdxs245tu
v_select_only_workload BOOLEAN := FALSE;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
v_update_only_workload BOOLEAN := FALSE;
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     82,109	      1     82,109.0	5.4	 563.8	 4.2  92.6 bcmft1hf3v16j
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
v_do_update BOOLEAN := FALSE;
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d
v_do_hot_schema BOOLEAN := FALSE;

     81,673	      1     81,673.0	5.3	 563.8	 4.1  93.2 1s34w34a21n9p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     81,662	      1     81,662.0	5.3	 563.8	 5.5  88.4 129d7r965xakz
v_home_schema_str VARCHAR2(80);
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
v_scratch VARCHAR2(200) ;
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d


     81,416	      1     81,416.0	5.3	 563.5	 4.1  93.2 bnm8uw9y0ubhg
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
v_cpu_pct NUMBER(6, 3);
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d
v_my_serial NUMBER(16);

SQL ordered by Gets			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Resources reported for PL/SQL code includes the resources used by all SQL

   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    1,534,097
-> Captured SQL account for   97.4% of Total

     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------

BEGIN
     81,379	      1     81,379.0	5.3	 563.7	 5.4  88.5 7qdskga9a98tt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :

= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     81,225	      1     81,225.0	5.3	 563.6	 5.4  88.7 c863fngb197rm
v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
EXECUTE IMMEDIATE v_home_schema_str;
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     75,287	      1     75,287.0	4.9	 563.8	 2.5  98.1 gp2af7qaws3yq

Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     74,995	      1     74,995.0	4.9	 563.7	 4.9  89.7 3uawgw8gknfx7
IF ( v_hot_schema_modulus != 0 ) THEN
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
	v_do_hot_schema := TRUE;
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     74,922	      1     74,922.0	4.9	 563.5	 3.9  93.6 drhdgsbjxfacu
END IF;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     74,031	      1     74,031.0	4.8	 563.7	 4.9  89.6 g5wjwfs93z517
IF ( v_sleep_modulus != 0 )	  THEN
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
	v_do_sleeps := TRUE;
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     73,517	      1     73,517.0	4.8	 563.7	   5  89.4 7huzc5jc2tyyr
END IF;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

IF ( v_max_loop_iterations &gt; 0 )  THEN
     68,964	      1     68,964.0	4.5	 563.7	 4.6  90.3 4p0za9517qhty
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
	v_loop_control := TRUE ;
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

END IF;
     68,848	      1     68,848.0	4.5	 563.6	 4.6  82.9 crcf813m8k6q0
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=


SQL ordered by Gets			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
IF ( v_update_pct = 0 ) 	  THEN
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    1,534,097
	v_select_only_workload := TRUE;
-> Captured SQL account for   97.4% of Total

     Buffer		    Gets	      Elapsed
END IF;
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :

= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     64,060	      1     64,060.0	4.2	 563.9	 4.4  90.7 d49x1sm5j34ms
IF ( v_update_pct = 100 )	  THEN
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
	v_update_only_workload := TRUE;
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     48,148	      2     24,074.0	3.1	  31.2	24.8  18.5 fhf8upax5cxsz
END IF;
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

     43,040	      2     21,520.0	2.8	  30.5	24.6  17.9 5k5207588w9ry

SELECT DBMS_REPORT.GET_REPORT(:B1 ) FROM DUAL

			  ------------------------------------------------------

IF ( v_scan_query_pct = 0 ) 	THEN

SQL ordered by Reads			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
	v_random_workload_only := TRUE;
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   1,094,434
-> Captured SQL account for   97.7% of Total

END IF;
   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------

  1,064,041	 35,802       29.7   97.2   10,022.2	4.3   91.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )
IF ( v_scan_query_pct = 100 ) 	THEN

     69,831	      1   69,831.0    6.4      563.8	4.5   92.4 d7m0vnz9zpwju
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
	v_scan_workload_only := TRUE;
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

END IF;
     67,683	      1   67,683.0    6.2      563.5	4.3   92.9 6bzqp0g9nrnfz
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=

'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

v_seconds_to_run := v_seconds_to_run * 100 ;
     63,621	      1   63,621.0    5.8      563.7	4.1   93.1 b1nsgh4u6gc3q
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=

 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d
SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

     63,414	      1   63,414.0    5.8      563.7	5.4   88.5 7qdskga9a98tt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=

 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
     63,242	      1   63,242.0    5.8      563.5	4.1   93.0 4kmfwdxs245tu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
-- DBMS_RANDOM.seed (val =&gt; v_seed);
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d


     63,141	      1   63,141.0    5.8      563.8	4.1   93.2 1s34w34a21n9p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
v_begin_time := DBMS_UTILITY.GET_TIME();
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     62,669	      1   62,669.0    5.7      563.5	4.1   93.2 bnm8uw9y0ubhg
v_now := v_begin_time ;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
v_brick_wall := v_now + v_seconds_to_run ;
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     62,092	      1   62,092.0    5.7      563.8	5.5   88.4 129d7r965xakz
Module: SQL*Plus
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r

edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

SQL ordered by Reads			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
----------------------------------------------------------------------------------------------------------------------
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   1,094,434
-> Captured SQL account for   97.7% of Total

-- The following WHILE loop is the master work loop control
   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------

     61,621	      1   61,621.0    5.6      563.6	5.4   88.7 c863fngb197rm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
----------------------------------------------------------------------------------------------------------------------
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     60,759	      1   60,759.0    5.6      563.8	4.2   92.6 bcmft1hf3v16j
Module: SQL*Plus
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d


     57,983	      1   57,983.0    5.3      563.5	3.9   93.6 drhdgsbjxfacu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN

     57,951	      1   57,951.0    5.3      563.8	2.5   98.1 gp2af7qaws3yq
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
		END IF;

     56,952	      1   56,952.0    5.2      563.7	5.0   89.4 7huzc5jc2tyyr
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
	END IF;
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do


     56,802	      1   56,802.0    5.2      563.7	4.9   89.6 g5wjwfs93z517
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     54,912	      1   54,912.0    5.0      563.7	4.9   89.7 3uawgw8gknfx7
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     53,821	      1   53,821.0    4.9      563.6	4.6   82.9 crcf813m8k6q0
Module: SQL*Plus
			v_sharing_schema := TRUE ;
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d
		ELSE

     52,329	      1   52,329.0    4.8      563.7	4.6   90.3 4p0za9517qhty
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=

			IF ( v_sharing_schema = TRUE ) THEN
SQL ordered by Reads			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
				EXECUTE IMMEDIATE v_home_schema_str;
-> Total Disk Reads:	   1,094,434
-> Captured SQL account for   97.7% of Total

   Physical		 Reads		    Elapsed
				v_sharing_schema := FALSE;
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
			END IF;
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     49,358	      1   49,358.0    4.5      563.9	4.4   90.7 d49x1sm5j34ms
Module: SQL*Plus
		END IF;
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
	END IF;
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			  ------------------------------------------------------



SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db2  Snaps: 81-82
-> UnOptimized Read Reqs = Physical Read Reqs -
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
	-- Choose the random block. The v_do_hotspot handler that follows can override.
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       1,093,641
-> Captured SQL account for    5.0% of Total
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);
-> Total UnOptimized Read Requests:	  1,093,641
-> Captured SQL account for    5.0% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total


UnOptimized   Physical		    UnOptimized
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
     69,831	 69,831 	 1     69,831.0    0.0	  6.4 d7m0vnz9zpwju
	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     67,683	 67,683 	 1     67,683.0    0.0	  6.2 6bzqp0g9nrnfz
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     63,621	 63,621 	 1     63,621.0    0.0	  5.8 b1nsgh4u6gc3q
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
	END IF;
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     63,414	 63,414 	 1     63,414.0    0.0	  5.8 7qdskga9a98tt
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

----------------------------------------------------------------------------------------------------------------------
     63,242	 63,242 	 1     63,242.0    0.0	  5.8 4kmfwdxs245tu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     63,141	 63,141 	 1     63,141.0    0.0	  5.8 1s34w34a21n9p
Module: SQL*Plus
----------------------------------------------------------------------------------------------------------------------
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d


     62,669	 62,669 	 1     62,669.0    0.0	  5.7 bnm8uw9y0ubhg
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
	IF  ( v_select_only_workload = TRUE ) THEN
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     62,092	 62,092 	 1     62,092.0    0.0	  5.7 129d7r965xakz
		-- handle case where user specified zero pct updates (a SELECT-only workload)
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
		v_do_update := FALSE;
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     61,621	 61,621 	 1     61,621.0    0.0	  5.6 c863fngb197rm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
		v_update_quota := TRUE ;
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db2  Snaps: 81-82
-> UnOptimized Read Reqs = Physical Read Reqs -
	ELSE
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
		IF ( v_update_only_workload = TRUE ) THEN
-> Total Physical Read Requests:       1,093,641
-> Captured SQL account for    5.0% of Total
-> Total UnOptimized Read Requests:	  1,093,641
-> Captured SQL account for    5.0% of Total
-> Total Optimized Read Requests:		1
			-- handle case where user specified 100% updates
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
			v_do_update := TRUE;
----------- ----------- ---------- ------------ ------ ------ -------------
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			v_update_quota := FALSE;
     60,759	 60,759 	 1     60,759.0    0.0	  5.6 bcmft1hf3v16j
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
		ELSE
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     57,983	 57,983 	 1     57,983.0    0.0	  5.3 drhdgsbjxfacu
Module: SQL*Plus
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			-- Work out whether this loop iteration is a SELECT or UPDATE here:
     57,951	 57,951 	 1     57,951.0    0.0	  5.3 gp2af7qaws3yq
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
			IF ( v_update_quota = FALSE ) THEN
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     56,952	 56,952 	 1     56,952.0    0.0	  5.2 7huzc5jc2tyyr
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
				-- Handle case where user has set UPDATE_PCT to a valid value
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

     56,802	 56,802 	 1     56,802.0    0.0	  5.2 g5wjwfs93z517
				--
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
				-- We are doing updates during this run and quota has not been met yet
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     54,912	 54,912 	 1     54,912.0    0.0	  5.0 3uawgw8gknfx7
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
				-- We still vacillate until update quota has been met
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d


     53,821	 53,821 	 1     53,821.0    0.0	  4.9 crcf813m8k6q0
Module: SQL*Plus
				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
				v_scan_query_quota := TRUE;
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     52,329	 52,329 	 1     52,329.0    0.0	  4.8 4p0za9517qhty
			END IF;
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

     51,020	 51,020     35,802	    1.4    0.0	  4.7 35dumc2tpr9dv

SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db2  Snaps: 81-82
-> UnOptimized Read Reqs = Physical Read Reqs -
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
		--
-> Total Physical Read Requests:       1,093,641
-> Captured SQL account for    5.0% of Total
-> Total UnOptimized Read Requests:	  1,093,641
		-- Do an UPDATE statement
-> Captured SQL account for    5.0% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

		--
UnOptimized   Physical		    UnOptimized
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id

----------- ----------- ---------- ------------ ------ ------ -------------
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )
		v_my_serial := v_my_serial + v_loop_cnt ;

     49,358	 49,358 	 1     49,358.0    0.0	  4.5 d49x1sm5j34ms
Module: SQL*Plus

DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			  ------------------------------------------------------


SQL ordered by Executions		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Executions:	      54,484
-> Captured SQL account for   97.3% of Total

					      Elapsed
 Executions   Rows Processed  Rows per Exec   Time (s)	%CPU   %IO    SQL Id
------------ --------------- -------------- ---------- ----- ----- -------------
		v_updates_cnt := v_updates_cnt + 1;
      35,802	   1,109,862	       31.0   10,022.2	 4.3  91.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

       4,538	       4,229		0.9	   1.7	20.2	28 0sbbcuruzd66f
select /*+ rule */ bucket_cnt, row_cnt, cache_cnt, null_cnt, timestamp#, sample_
size, minimum, maximum, distcnt, lowval, hival, density, col#, spare1, spare2, a
vgcln, minimum_enc, maximum_enc from hist_head$ where obj#=:1 and intcol#=:2

       3,708		 378		0.1	   0.2	83.2	 0 87gaftwrm2h68
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$
o where o.obj#=:1

       2,762	      44,066	       16.0	   4.2	12.5  42.6 2sxqgx5hx76qr

select /*+ rule */ bucket, endpoint, col#, epvalue, epvalue_raw, ep_repeat_count
, endpoint_enc from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by b
ucket

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
	 865		 732		0.8	   0.8	  18  64.6 acmvv4fhdc9zh
select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spar
e2, spare3, signature, spare7, spare8, spare9, nvl(dflcollid, 16382), creappid,
			v_update_quota := TRUE;
creverid, modappid, modverid, crepatchid, modpatchid from obj$ where owner#=:1 a
nd name=:2 and namespace=:3 and remoteowner is null and linkname is null and sub

		END IF;
	 686		 684		1.0	   0.2	38.9  35.5 9tgj4g8y4rwy8
select type#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,NVL(lis
ts,65535),NVL(groups,65535),cachehint,hwmincr, NVL(spare1,0),NVL(scanhint,0),NVL
	END IF ;
(bitmapranges,0) from seg$ where ts#=:1 and file#=:2 and block#=:3

	 372		 945		2.5	   0.2	29.3  64.6 5n1fs4m2n2y0r
select pos#,intcol#,col#,spare1,bo#,spare2,spare3 from icol$ where obj#=:1
----------------------------------------------------------------------------------------------------------------------

	 341		 152		0.4	   0.0	86.6   5.4 asvzxj61dc5vs
select timestamp, flags from fixed_obj$ where obj#=:1
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	 326		 326		1.0	   0.1	68.6   4.8 f3ww8rgva3hrs
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

	 314	       4,187	       13.3	   0.3	36.9  50.4 g0t052az3rx44

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
select name,intcol#,segcol#,type#,length,nvl(precision#,0),decode(type#,2,nvl(sc
ale,-127/*MAXSB1MINAL*/),178,scale,179,scale,180,scale,181,scale,182,scale,183,s
cale,231,scale,0),null$,fixedstorage,nvl(deflength,0),default$,rowid,col#,proper
ty, nvl(charsetid,0),nvl(charsetform,0),spare1,spare2,nvl(spare3,0), nvl(evaledi

		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
			  ------------------------------------------------------


SQL ordered by Parse Calls		   DB/Inst: P30DB/p30db2  Snaps: 81-82
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
-> Total Parse Calls:		5,002
-> Captured SQL account for   61.5% of Total

		-- so reset flags and counters
			    % Total
 Parse Calls  Executions     Parses    SQL Id
------------ ------------ --------- -------------
	 341	      341      6.82 asvzxj61dc5vs
		v_scan_query_quota := FALSE;
select timestamp, flags from fixed_obj$ where obj#=:1

	 240	      240      4.80 8swypbbr0m372
		v_scan_queries_cnt := 0;
select order#,columns,types from access$ where d_obj#=:1

	 231	      231      4.62 3un99a0zwp4vd
select owner#,name,namespace,remoteowner,linkname,p_timestamp,p_obj#, nvl(proper
		v_random_access_queries_cnt := 0;
ty,0),subname,type#,flags,d_attrs from dependency$ d, obj$ o where d_obj#=:1 and
 p_obj#=obj#(+) order by order#
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;

	 182	      182      3.64 5u7g54s63p4ts
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
select toid from type$ where package_obj#=:1 and typ_name=:2

	 162	      162      3.24 grwydz59pu6mc
		-- iterations then set exit flag
select text from view$ where rowid=:1

	 145	      145      2.90 3dbzmtf9ahvzt
		v_stop_immediate := TRUE ;
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn
	END IF;

	 144	      144      2.88 afx304d90ps3z
select rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, analyzetime, samplesize,
END LOOP;
avgspc_flb, flbcnt, flags from tab_stats$ where obj#=:1

	 134	      326      2.68 f3ww8rgva3hrs
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds

 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds
v_end_time := v_now ;

	 103	      103      2.06 03guhbfpak0w7
select /*+ index(idl_ub1$ i_idl_ub11) */ piece#,length,piece from idl_ub1$ where
v_now := DBMS_UTILITY.GET_TIME();
 obj#=:1 and part=:2 and version=:3 order by piece#

	 103	      103      2.06 9tt2m0mpc2qqp
select /*+ index(idl_char$ i_idl_char1) */ piece#,length,piece from idl_char$ wh
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();
ere obj#=:1 and part=:2 and version=:3 order by piece#

	 103	      103      2.06 a3jpjzh7mtwwp

select /*+ index(idl_ub2$ i_idl_ub21) */ piece#,length,piece from idl_ub2$ where
 obj#=:1 and part=:2 and version=:3 order by piece#

	 103	      103      2.06 fh5ufah919kun
v_total_time := v_end_time - v_begin_time ;
select /*+ index(idl_sb4$ i_idl_sb41) */ piece#,length,piece from idl_sb4$ where
 obj#=:1 and part=:2 and version=:3 order by piece#

v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
	  89	       89      1.78 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;

	  66	       66      1.32 35ra2cdwvqg1w
select parttype, partcnt, partkeycols, flags, defts#, defpctfree, defpctused, de
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;
finitrans, defmaxtrans, deftiniexts, defextsize, defminexts, defmaxexts, defextp
ct, deflists, defgroups, deflogging, spare1, mod(spare2, 256) subparttype, mod(t
runc(spare2/256), 256) subpartkeycols, mod(trunc(spare2/65536), 65536) defsubpar



SQL ordered by Parse Calls		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total Parse Calls:		5,002
END;</pre_sqltext></td></tr>
-> Captured SQL account for   61.5% of Total

			    % Total
 Parse Calls  Executions     Parses    SQL Id
<tr><td scope="row" class='awrc'><a class="awr" name="7qdskga9a98tt"></a>7qdskga9a98tt</td><td class='awrc'><pre_sqltext class="awr">DECLARE
------------ ------------ --------- -------------
	  64	       64      1.28 gp8yk87v5n0d0
SELECT session_id, process, session_serial_num, 100*(cpu/intsize_csec) FROM
 v$sessmetric sm JOIN v$session s on (sm.session_id=s.sid) ORDER BY
cpu desc

	  61	       61      1.22 dycmpuj6apqjs
select pc.intcol#, pc.col# , pc.type#, pc.spare1, pc.segcol#, pc.charsetform,
nvl(c.collintcol#, 0), nvl(c2.type#, 0), nvl(c2.charsetid, 0), nvl(c2.charset
form , 0), nvl(c2.collid, 0) from partcol$ pc, col$ c, col$ c2 where pc.obj# = :
1 and pc.obj# = c.obj#(+) and pc.intcol# = c.intcol#(+) and c.obj# = c2.obj#(+)

	  59	       59      1.18 b1wc53ddd6h3p
select audit$,options from procedure$ where obj#=:1

	  59	       59      1.18 gngtvs38t0060
Module: oraagent.bin@mcracpoc2.example.com (TNS V1-V3)
SELECT /*+ CONNECT_BY_FILTERING */ s.privilege# FROM sys.sysauth$ s CONNE
CT BY s.grantee# = PRIOR s.privilege# AND (s.pri
vilege# > 0 OR s.privilege# = -352) START WITH (s.p
rivilege# > 0 OR s.privilege# = -352) AND s.grantee# IN (SELECT c1.privilege

	  58	    3,708      1.16 87gaftwrm2h68
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$
o where o.obj#=:1

	  53	       53      1.06 fn5s5p6hr6702
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

			  ------------------------------------------------------


SQL ordered by Sharable Memory		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Only Statements with Sharable Memory greater than 1048576 are displayed

Sharable Mem (b)  Executions   % Total	  SQL Id
---------------- ------------ -------- -------------
       2,785,220	    1	  0.21 2xfg27zhudyay
WITH binds as (select :dbid as dbid ,
:inst_id_low as instIdLow , :inst_id_high as i
nstIdHigh , :begin_snap as beginSnap ,
:end_snap as endSnap , :begin_time as beg

       1,962,624	    1	  0.15 9sq9djzzhr19y
WITH binds as (select :dbid as dbid ,
:inst_id_low as instIdLow , :inst_id_high as i
nstIdHigh , :begin_snap as beginSnap ,
:end_snap as endSnap , :begin_time as beg

       1,466,458	    1	  0.11 c15gnn7knr6rj
WITH ash as (SELECT round((cast(sample_time as date) - :1) * 24 * 60 * 60,0) a
s t, inst_id || '_' || session_id || '_' || session_serial# as sid,
 decode(session_type, 'FOREGROUND', 1, 0) as session_type, nvl(
sql_id,'null') as sql_id, nvl(sql_opcode,0) as sql_opcode, n

       1,192,636	    1	  0.09 fg11facbfjwvx
 SELECT /*+ no_monitor leading(mo_px) use_hash(mo_px) */ xm
lelement( "sql_monitor_list_report", xmlattributes(
 :report_version as "version",
 :total_count as "total_count", to

			  ------------------------------------------------------


SQL ordered by Version Count		   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------


SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    656
-> Captured SQL account for   96.5% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
	 623.7	     35,802   95.0   10,022.2	 6.2	4.3   91.4 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	  81.8		  1   12.5	563.6	14.5	4.6   82.9 crcf813m8k6q0
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	  48.0		  1    7.3	563.8	 8.5	5.5   88.4 129d7r965xakz
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	  46.9		  1    7.1	563.7	 8.3	5.4   88.5 7qdskga9a98tt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	  45.6		  1    7.0	563.6	 8.1	5.4   88.7 c863fngb197rm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	  43.6		  1    6.6	563.7	 7.7	5.0   89.4 7huzc5jc2tyyr
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	  42.8		  1    6.5	563.7	 7.6	4.9   89.7 3uawgw8gknfx7
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	  42.5		  1    6.5	563.7	 7.5	4.9   89.6 g5wjwfs93z517
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	  40.5		  1    6.2	563.7	 7.2	4.6   90.3 4p0za9517qhty
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    656
-> Captured SQL account for   96.5% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------

	  38.1		  1    5.8	563.9	 6.7	4.4   90.7 d49x1sm5j34ms
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '8'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	  28.1		  1    4.3	563.8	 5.0	4.5   92.4 d7m0vnz9zpwju
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '9'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	  27.9		  1    4.3	563.8	 5.0	4.2   92.6 bcmft1hf3v16j
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '19'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	  25.5		  1    3.9	563.5	 4.5	4.1   93.0 4kmfwdxs245tu
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	  25.2		  1    3.8	563.7	 4.5	4.1   93.1 b1nsgh4u6gc3q
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	  25.2		  1    3.8	563.8	 4.5	4.1   93.2 1s34w34a21n9p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	  25.0		  1    3.8	563.5	 4.4	4.3   92.9 6bzqp0g9nrnfz
Module: SQL*Plus
v_default_schema_number PLS_INTEGER := '12';
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

v_update_pct PLS_INTEGER := '100';
	  24.4		  1    3.7	563.5	 4.3	4.1   93.2 bnm8uw9y0ubhg
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
v_max_loop_iterations PLS_INTEGER := '0';
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

	  22.9		  1    3.5	563.5	 4.1	3.9   93.6 drhdgsbjxfacu
Module: SQL*Plus
v_seconds_to_run PLS_INTEGER := '600';
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=

SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
v_scale PLS_INTEGER := '1048576';
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
v_work_unit PLS_INTEGER := '32' ;
-> Total Cluster Wait Time (s): 	    656
-> Captured SQL account for   96.5% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
v_redo_stress  VARCHAR2(12) := 'LITE';
-------------- ------------ ------ ---------- ------ ------ ------ -------------
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
v_hot_schema_modulus PLS_INTEGER := '0';
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

	   2.0	      2,762    0.3	  4.2	48.7   12.5   42.6 2sxqgx5hx76qr
select /*+ rule */ bucket, endpoint, col#, epvalue, epvalue_raw, ep_repeat_count
v_do_hotspot   VARCHAR(7) := 'FALSE';
, endpoint_enc from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by b
ucket

	   2.0		  1    0.3	563.8	 0.3	2.5   98.1 gp2af7qaws3yq
Module: SQL*Plus
v_hotspot_mb  NUMBER := '8';
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do
v_hotspot_offset_mb NUMBER := '16';

	   1.8		 12    0.3	  2.1	86.6	3.9    9.7 8vnjxtfyy84as
select flags from system.aq$_queues q, system.aq$_queue_tables t where q.tabl
e_objno = t.objno and t.schema= :1 and q.name= :2

v_hotspot_modulus  PLS_INTEGER := '3';
	   1.7		 31    0.3	  1.7	96.4	1.6    2.0 32bhha21dkv0v
select col#,intcol#,charsetid,charsetform from col$ where obj#=:1 order by intco
l# asc


	   1.0	      4,538    0.2	  1.7	56.9   20.2   28.0 0sbbcuruzd66f
select /*+ rule */ bucket_cnt, row_cnt, cache_cnt, null_cnt, timestamp#, sample_
size, minimum, maximum, distcnt, lowval, hival, density, col#, spare1, spare2, a
vgcln, minimum_enc, maximum_enc from hist_head$ where obj#=:1 and intcol#=:2
v_sleep_modulus PLS_INTEGER := '0';

	    .8		  2    0.1	 31.2	 2.6   24.8   18.5 fhf8upax5cxsz
BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref, :snap_id, :pr_class
, :rep_id, :suc); END;

v_sleep_min NUMBER := '.1';
	    .7		  2    0.1	 30.5	 2.3   24.6   17.9 5k5207588w9ry
SELECT DBMS_REPORT.GET_REPORT(:B1 ) FROM DUAL

	    .7		 89    0.1	  0.7	94.9	5.0    1.6 f7xnvp44nukp7
v_sleep_max NUMBER := '.5';
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

	    .4		  1    0.1	  0.7	47.7   44.2    2.1 a95n8p4vpxmps
v_scan_query_pct PLS_INTEGER := '0';
begin prvt_hdm.execute_slave_actions; end;

	    .4		  1    0.1	  0.7	47.8   44.1    2.1 drktaf71uygnb
BEGIN sys.prvt_hdm.auto_execute( db_id => :bind_dbid,
 inst_id => :bind_inst, end_snap => :bind_snap, t
v_obfuscate VARCHAR(5)	:= 'FALSE';
ime_left_in_secs => :bind_time); END;

	    .2		865    0.0	  0.8	23.7   18.0   64.6 acmvv4fhdc9zh

select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spar
e2, spare3, signature, spare7, spare8, spare9, nvl(dflcollid, 16382), creappid,

creverid, modappid, modverid, crepatchid, modpatchid from obj$ where owner#=:1 a
nd name=:2 and namespace=:3 and remoteowner is null and linkname is null and sub
v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;

	    .2		103    0.0	  3.4	 5.5	7.7   90.4 03guhbfpak0w7
select /*+ index(idl_ub1$ i_idl_ub11) */ piece#,length,piece from idl_ub1$ where
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;
 obj#=:1 and part=:2 and version=:3 order by piece#

	    .2		231    0.0	  0.6	24.5   18.7   61.2 3un99a0zwp4vd


SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
v_num_tmp NUMBER := 0;
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported

-> Total Cluster Wait Time (s): 	    656
-> Captured SQL account for   96.5% of Total

       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
v_loop_cnt PLS_INTEGER := 0;
-------------- ------------ ------ ---------- ------ ------ ------ -------------
select owner#,name,namespace,remoteowner,linkname,p_timestamp,p_obj#, nvl(proper
ty,0),subname,type#,flags,d_attrs from dependency$ d, obj$ o where d_obj#=:1 and
 p_obj#=obj#(+) order by order#
v_rowcnt PLS_INTEGER := 0;

	    .1		  1    0.0	  3.9	 2.7   27.5   14.5 2xfg27zhudyay
WITH binds as (select :dbid as dbid ,
:inst_id_low as instIdLow , :inst_id_high as i
v_updates_cnt PLS_INTEGER := 0;
nstIdHigh , :begin_snap as beginSnap ,
:end_snap as endSnap , :begin_time as beg

	    .1		278    0.0	  0.2	37.2   54.2   13.9 9zbjgq87hy6uv
select t.ts#,t.file#,t.block#,nvl(t.bobj#,0),nvl(t.tab#,0),t.intcols,nvl(t.cluco
v_selects_cnt PLS_INTEGER := 0;
ls,0),t.flags,t.pctfree$,t.pctused$,t.initrans,t.maxtrans,t.rowcnt,t.blkcnt,t.em
pcnt,t.avgspc,t.chncnt,t.avgrln,t.analyzetime,t.samplesize,t.cols,t.property,nvl
(t.degree,1),nvl(t.instances,1),t.avgspc_flb,t.flbcnt,t.kernelcols,nvl(t.trigfla


	    .1		686    0.0	  0.2	34.9   38.9   35.5 9tgj4g8y4rwy8
select type#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,NVL(lis
ts,65535),NVL(groups,65535),cachehint,hwmincr, NVL(spare1,0),NVL(scanhint,0),NVL
(bitmapranges,0) from seg$ where ts#=:1 and file#=:2 and block#=:3

v_random_access_queries_cnt PLS_INTEGER := 0;
	    .1		103    0.0	  0.8	 9.3	9.5   85.1 a3jpjzh7mtwwp
select /*+ index(idl_ub2$ i_idl_ub21) */ piece#,length,piece from idl_ub2$ where
 obj#=:1 and part=:2 and version=:3 order by piece#

v_scan_queries_cnt PLS_INTEGER := 0;
	    .0		103    0.0	  0.2	23.9   21.4   61.8 fh5ufah919kun
select /*+ index(idl_sb4$ i_idl_sb41) */ piece#,length,piece from idl_sb4$ where
 obj#=:1 and part=:2 and version=:3 order by piece#

	    .0		  1    0.0	  0.2	28.2   63.8    8.2 c6108cmanwd01

 select xmlagg(nvl2(event, xmlelement("events",
 xmlattributes(type as "type", description as "desc"),
 event), null)) from ( select type, descr
iption, xmlagg(xmlelement("event", xmlattributes(to_char(max_time,:date_fmt
v_do_scan_query BOOLEAN :=FALSE;

	    .0		 37    0.0	  0.3	12.9   23.1   67.5 1rpgk59t8pvs6
 begin dbms_output.get_line(:line, :status); end;

	    .0	      3,708    0.0	  0.2	22.7   83.2	.0 87gaftwrm2h68
v_scan_query_quota  BOOLEAN := FALSE;
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$
o where o.obj#=:1

	    .0		  2    0.0	  3.5	 1.2   22.9   17.3 grjtn5w5y8jfj
SELECT XMLELEMENT( "spot_addm", XMLPARSE(DOCUMENT DBMS_REPORT.GET_REPORT('/orare
v_scan_workload_only BOOLEAN := FALSE;
p/rtaddm/main?spotonly=y'))) FROM DUAL

	    .0		255    0.0	  0.5	 7.5   53.0   34.8 121ffmrc95v7g
select i.obj#,i.ts#,i.file#,i.block#,i.intcols,i.type#,i.flags,i.property,i.pctf
ree$,i.initrans,i.maxtrans,i.blevel,i.leafcnt,i.distkey,i.lblkkey,i.dblkkey,i.cl
v_random_workload_only BOOLEAN := FALSE;
ufac,i.cols,i.analyzetime,i.samplesize,i.dataobj#,nvl(i.degree,1),nvl(i.instance
s,1),i.rowcnt,mod(i.pctthres$,256),i.indmethod#,i.trunccnt,nvl(c.unicols,0),nvl(

	    .0		314    0.0	  0.3	10.8   36.9   50.4 g0t052az3rx44

select name,intcol#,segcol#,type#,length,nvl(precision#,0),decode(type#,2,nvl(sc
ale,-127/*MAXSB1MINAL*/),178,scale,179,scale,180,scale,181,scale,182,scale,183,s
cale,231,scale,0),null$,fixedstorage,nvl(deflength,0),default$,rowid,col#,proper
ty, nvl(charsetid,0),nvl(charsetform,0),spare1,spare2,nvl(spare3,0), nvl(evaledi


	    .0		240    0.0	  0.3	11.6   21.2   69.6 8swypbbr0m372
select order#,columns,types from access$ where d_obj#=:1

SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 81-82
v_random_block PLS_INTEGER := 1;
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
v_tmp PLS_INTEGER;
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    656
-> Captured SQL account for   96.5% of Total

       Cluster			      Elapsed
v_now PLS_INTEGER;
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------

	    .0		  2    0.0	  3.3	 1.0   21.1   15.4 9wk0gqnd4ng50
SELECT XMLCONCAT(XMLELEMENT( "sql_data", SYS.PRVT_RTADDM.GETSECTIONS(:B2 , :B1 ,
v_brick_wall PLS_INTEGER;
'all'))) FROM SYS.DUAL

	    .0		  3    0.0	  0.2	20.8   49.4   24.3 g42nd3t1t35kb
select nvl(min(value), 10) from (select to_number(value) value
 from sys.gv_$parameter where inst_id between :inst_id_low
 and :inst_id_high and name = '_ash_disk_filter_ratio'
 union all select to_number(value) value f


	    .0		  1    0.0	  0.4	 7.9   38.9   50.2 1d25xwrbnv4ub
 with base_data as( select bucket_id, sum(case when nam
e='Average Active Sessions' then aas else 0 end)
 dbt, sum(case when name=
v_begin_time PLS_INTEGER;
'CPU Usage Per Sec' then aas else 0 end)

	    .0		145    0.0	  0.2	16.6   70.7    6.7 3dbzmtf9ahvzt
merge /* KSXM:OPTIM_DML_INF */ into sys.mon_mods_all$ m using
 dual on (m.obj#
v_end_time PLS_INTEGER;
 = :objn and (:pobjn = 0
 or m.obj# = :pobjn

	    .0		103    0.0	  0.2	11.2   18.4   74.7 9tt2m0mpc2qqp
select /*+ index(idl_char$ i_idl_char1) */ piece#,length,piece from idl_char$ wh
v_total_time PLS_INTEGER;
ere obj#=:1 and part=:2 and version=:3 order by piece#

	    .0		326    0.0	  0.1	24.6   68.6    4.8 f3ww8rgva3hrs
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
v_begin_cpu_tm PLS_INTEGER;
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

	    .0		 31    0.0	  0.1	20.2   31.9   49.4 0fr8zhn4ymu3v
v_end_cpu_tm PLS_INTEGER;
select intcol#,type,flags,lobcol,objcol,extracol,schemaoid, elemnum from opqtyp
e$ where obj# = :1 order by intcol# asc

	    .0		  3    0.0	  1.4	 1.1   12.2   10.6 6t44kht0nhjs9
 WITH instances as (SELECT host_name,
v_total_cpu_tm PLS_INTEGER;
 instance_number FROM sys.gv_$instance WHERE instanc
e_number between :inst_id_low and :inst_id_high) , num_cpus as
 (SELECT i.host_name, i.instance_number,

	    .0		  1    0.0	  0.2	 7.4   83.3    5.8 gyv3savxpszuj

 WITH iometric as ( select bucket_id, inst_id, function_id,
 case when rn = 1 then function_name else null end function_name, ca
se when inst_rn = 1 then inst_name else null end inst_name, small_re
ad_mbps, small_write_mbps, large_read_mbps, large_write_mbps,

v_do_sleeps BOOLEAN := FALSE;
	    .0		 15    0.0	  0.1	 8.7   21.8   70.7 9fjf75a1s4y19
select procedure#,procedurename,properties,itypeobj#, properties2 from procedure
info$ where obj#=:1 order by procedurename desc, overload# desc

	    .0		  0    0.0	  0.2	 5.6   50.9   37.2 3kqrku32p6sfn
v_loop_control BOOLEAN := FALSE;
MERGE /*+ OPT_PARAM('_parallel_syspls_obey_force' 'false') */ INTO OPTSTAT_USER_
PREFS$ D USING ( SELECT * FROM (SELECT O.OBJ#, SYSTIMESTAMP CHGTIME, ROUND(MAX(S
.DELTA_READ_IO_BYTES/S.DELTA_TIME), 3) SCANRATE FROM GV$ACTIVE_SESSION_HISTORY S
, GV$SQL_PLAN P, OBJ$ O, USER$ U WHERE S.INST_ID = P.INST_ID AND S.SQL_ID = P.SQ
v_update_quota BOOLEAN := FALSE;

	    .0		 31    0.0	  0.1	19.1   38.7   40.5 9g485acn2n30m

SQL ordered by Cluster Wait Time	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
v_select_only_workload BOOLEAN := FALSE;
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    656
v_update_only_workload BOOLEAN := FALSE;
-> Captured SQL account for   96.5% of Total

       Cluster			      Elapsed
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
				--
select col#,intcol#,reftyp,stabid,expctoid from refcon$ where obj#=:1 order by i
ntcol# asc

	    .0		372    0.0	  0.2	 5.9   29.3   64.6 5n1fs4m2n2y0r
				-- We are doing updates during this run and quota has not been met yet
select pos#,intcol#,col#,spare1,bo#,spare2,spare3 from icol$ where obj#=:1

	    .0		 59    0.0	  0.0	40.7   55.5    6.3 b1wc53ddd6h3p
select audit$,options from procedure$ where obj#=:1
				-- We still vacillate until update quota has been met

	    .0		 44    0.0	  0.0	48.5   62.8    2.1 0m78skf1mudnb
select audit$,properties from type_misc$ where obj#=:1


	    .0		 61    0.0	  0.0	30.2   75.0    4.1 dycmpuj6apqjs
select pc.intcol#, pc.col# , pc.type#, pc.spare1, pc.segcol#, pc.charsetform,
				IF ( MOD(v_random_block,  2) = 0 ) THEN
nvl(c.collintcol#, 0), nvl(c2.type#, 0), nvl(c2.charsetid, 0), nvl(c2.charset
					v_do_update := TRUE;
form , 0), nvl(c2.collid, 0) from partcol$ pc, col$ c, col$ c2 where pc.obj# = :
				ELSE
1 and pc.obj# = c.obj#(+) and pc.intcol# = c.intcol#(+) and c.obj# = c2.obj#(+)

					v_do_update := FALSE;
	    .0		  6    0.0	  0.0	43.0   52.7	.0 brk04qfvsb4bb
select current_value from hang_manager_parameters where name = :1
				END IF;

	    .0		  2    0.0	  0.6	 1.3   13.8   18.0 3s008f5ragg5n
			ELSE
WITH names as (SELECT metric_name, metric_unit, rownum as met_id FROM s
ys.v_$metricname WHERE group_name = 'System Metrics Long Duration' AND
				-- UPDATE quota has been filled,  force drain some SELECTs
 metric_name IN ( 'Average Synchronous Single-Block Read Latency', 'Background C
PU Usage Per Sec', 'CPU Usage Per Sec', 'Current Logons Count', 'Current Open Cu

				v_do_update := FALSE;
	    .0		144    0.0	  0.0	21.7   79.2	.0 afx304d90ps3z
select rowcnt, blkcnt, empcnt, avgspc, chncnt, avgrln, analyzetime, samplesize,
avgspc_flb, flbcnt, flags from tab_stats$ where obj#=:1
			END IF;

	    .0		  1    0.0	  0.2	 3.5   72.5   21.4 4p5vv6tqbtqjy
 with rmmetrics_data as (-- main query select bucket_id,
		END IF;
 new_id consumer_group_id, case when rn =
 1 and :is_awr = 1 and consumer_group_id = 0
 then 'other' when rn = 1 and :is_awr = 1

	END IF;
	    .0		  2    0.0	  0.1	 6.7   51.4   27.4 965qvk5xttdbw
WITH inst_data as (SELECT instance_number, instance_name,
 host_name, version, startup_time, status,

 logins, shutdown_pending, instance_role, activ
e_state FROM sys.GV_$INSTANCE ) ,ver as (SELECT max(version) as version

			  ------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN


		--
Key Instance Activity Stats		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
		-- Do a SELECT statement
-------------------------------- ------------------ -------------- -------------
db block changes			  2,413,735	   3,949.5	    65.7
execute count				     54,484	      89.2	     1.5
		-- Work out scan or random
gc cr block receive time			132	       0.2	     0.0
gc cr blocks received				463	       0.8	     0.0
gc current block receive time		      3,467	       5.7	     0.1
		IF  ( v_random_workload_only = TRUE ) THEN
gc current blocks received		     31,218	      51.1	     0.9
logons cumulative				175	       0.3	     0.0
opened cursors cumulative		     91,113	     149.1	     2.5
parse count (total)			      5,002	       8.2	     0.1
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
parse time elapsed				741	       1.2	     0.0
physical reads				  1,094,434	   1,790.8	    29.8
physical writes 			    750,663	   1,228.3	    20.4
			v_do_scan_query := FALSE;
redo size				950,293,820    1,554,927.3	25,859.7
session cursor cache hits		     89,183	     145.9	     2.4
session logical reads			  1,534,097	   2,510.2	    41.8
user calls				      1,096	       1.8	     0.0
			v_scan_query_quota := TRUE ;
user commits				     36,748	      60.1	     1.0
workarea executions - optimal		      2,242	       3.7	     0.1
			  ------------------------------------------------------
		ELSE


Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Ordered by statistic name
			IF ( v_scan_workload_only = TRUE ) THEN

				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
				v_do_scan_query := TRUE;
ASSM bg: segment fix monitor			  1	       0.0	     0.0
				v_scan_query_quota := FALSE;
ASSM cbk:blocks examined			550	       0.9	     0.0
ASSM cbk:blocks marked full			130	       0.2	     0.0
			ELSE
ASSM gsp:L1 bitmaps examined			462	       0.8	     0.0
ASSM gsp:L2 bitmap full 			 24	       0.0	     0.0
				IF ( v_scan_query_quota = FALSE ) THEN
ASSM gsp:L2 bitmaps examined			125	       0.2	     0.0
ASSM gsp:Search all				 25	       0.0	     0.0
ASSM gsp:Search hint				 16	       0.0	     0.0
ASSM gsp:Search steal				 22	       0.0	     0.0
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
ASSM gsp:bump HWM				 22	       0.0	     0.0
ASSM gsp:get free block 			420	       0.7	     0.0
ASSM gsp:get free data block			332	       0.5	     0.0
ASSM gsp:get free index block			 88	       0.1	     0.0
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
ASSM gsp:good hint				396	       0.7	     0.0
ASSM rsv:fill reserve				  4	       0.0	     0.0
ASSM wasted db state change			  3	       0.0	     0.0
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
Batched IO (bound) vector count 		  0	       0.0	     0.0
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
Batched IO block miss count			  1	       0.0	     0.0
Batched IO buffer defrag count			  0	       0.0	     0.0
				END IF;
Batched IO double miss count			  1	       0.0	     0.0
Batched IO same unit count			  0	       0.0	     0.0
Batched IO single block count			  1	       0.0	     0.0
			END IF;
Batched IO vector block count			  0	       0.0	     0.0
Batched IO vector read count			  0	       0.0	     0.0
Block Cleanout Optim referenced 	    135,822	     222.2	     3.7
		END IF;
CCursor + sql area evicted		      1,969	       3.2	     0.1
CPU used by this session		     71,473	     117.0	     1.9
CPU used when call started		     52,701	      86.2	     1.4
CR blocks created				 15	       0.0	     0.0

Cached Commit SCN referenced		    168,076	     275.0	     4.6
Client Advertised Receive Window		126	       0.2	     0.0
Client Advertised Send Window			126	       0.2	     0.0

Client Path Maximum Transmission	     26,100	      42.7	     0.7
Client Send Congestion Window			180	       0.3	     0.0
Client Time (usec) Last Ack Rece		 21	       0.0	     0.0
Client Time (usec) Last Data Rec		  8	       0.0	     0.0
		IF ( v_do_scan_query != TRUE ) THEN
Client Time (usec) Last Data Sen		139	       0.2	     0.0
Client Time (usec) Round Trip Ti	     51,772	      84.7	     1.4
Client Time (usec) Round Trip Ti	     50,100	      82.0	     1.4
			SELECT COUNT(c2) INTO v_rowcnt
Client Total Bytes Acked		    284,793	     466.0	     7.8
Client Total Bytes Received		    109,899	     179.8	     3.0
Client Total Number of Retransmi		  0	       0.0	     0.0
Commit SCN cached				  0	       0.0	     0.0
			FROM cf1
DBWR checkpoint buffers written 	    286,863	     469.4	     7.8
DBWR checkpoints				 85	       0.1	     0.0
DBWR fusion writes				103	       0.2	     0.0
DBWR object drop buffers written		 24	       0.0	     0.0
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);
DBWR parallel query checkpoint b		  0	       0.0	     0.0
DBWR thread checkpoint buffers w		  0	       0.0	     0.0
DBWR transaction table writes		      1,751	       2.9	     0.1

DBWR undo block writes			     33,048	      54.1	     0.9
DFO trees parallelized				108	       0.2	     0.0
Effective IO time			     40,288	      65.9	     1.1
HSC Heap Segment Block Changes		  1,138,855	   1,863.5	    31.0
			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
Heap Segment Array Inserts			221	       0.4	     0.0
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

Heap Segment Array Updates			  1	       0.0	     0.0
			v_scan_queries_cnt := v_scan_queries_cnt + 1;
Heatmap Blklevel Flush Task Coun		  0	       0.0	     0.0
KTFB alloc req					137	       0.2	     0.0
KTFB alloc space (block)		123,011,072	 201,278.0	 3,347.4

KTFB alloc time (ms)			     35,485	      58.1	     1.0

Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
				v_scan_query_quota := TRUE;
KTFB apply req					116	       0.2	     0.0
KTFB apply time (ms)			      4,114	       6.7	     0.1
KTFB free req					  0	       0.0	     0.0
			END IF;
KTFB free space (block) 			  0	       0.0	     0.0
KTFB free time (ms)				  0	       0.0	     0.0
LOB table id lookup cache misses		  0	       0.0	     0.0
PX local messages recv'd		      1,183	       1.9	     0.0
		END IF;
PX local messages sent			      1,183	       1.9	     0.0
PX remote messages recv'd			502	       0.8	     0.0
PX remote messages sent 			642	       1.1	     0.0

Parallel operations not downgrad		168	       0.3	     0.0
Requests to/from client 			176	       0.3	     0.0
SMON posted for instance recover		  0	       0.0	     0.0
SMON posted for undo segment shr		  0	       0.0	     0.0
		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
SQL*Net roundtrips to/from clien		158	       0.3	     0.0
TBS Extension: tasks created			  0	       0.0	     0.0
TBS Extension: tasks executed			  0	       0.0	     0.0
active txn count during cleanout		230	       0.4	     0.0
	ELSE
auto extends on undo tablespace 		  0	       0.0	     0.0
background checkpoints completed		  0	       0.0	     0.0
background checkpoints started			  0	       0.0	     0.0
		--
background timeouts			      5,424	       8.9	     0.2
blocks cleaned out using minact 	    496,886	     813.0	    13.5
branch node splits				  0	       0.0	     0.0
buffer is not pinned count		    100,282	     164.1	     2.7
		-- Do an UPDATE statement
buffer is pinned count			  1,146,669	   1,876.3	    31.2
bytes received via SQL*Net from 	    401,718	     657.3	    10.9
bytes sent via SQL*Net to client	     30,348	      49.7	     0.8
		--
calls to get snapshot scn: kcmgs	    101,110	     165.4	     2.8
calls to kcmgas 			     66,705	     109.2	     1.8
calls to kcmgcs 			      4,120	       6.7	     0.1
cell physical IO interconnect by     26,801,853,952   43,854,788.4     729,341.8

change write time			      2,359	       3.9	     0.1
cleanout - number of ktugct call		256	       0.4	     0.0
cleanouts and rollbacks - consis		  0	       0.0	     0.0
cleanouts only - consistent read		 37	       0.1	     0.0
		v_my_serial := v_my_serial + v_loop_cnt ;
cluster key scan block gets		      6,030	       9.9	     0.2
cluster key scans			      4,480	       7.3	     0.1
commit batch/immediate performed		  0	       0.0	     0.0

commit batch/immediate requested		  0	       0.0	     0.0
commit cleanout failures: block 		  3	       0.0	     0.0
		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
commit cleanout failures: buffer		 10	       0.0	     0.0
commit cleanout failures: callba		 21	       0.0	     0.0
commit cleanout failures: cannot		  0	       0.0	     0.0
commit cleanouts			  1,139,078	   1,863.8	    31.0
commit cleanouts successfully co	  1,139,044	   1,863.8	    31.0
commit immediate performed			  0	       0.0	     0.0
		--
commit immediate requested			  0	       0.0	     0.0
commit txn count during cleanout		130	       0.2	     0.0
consistent changes			      2,687	       4.4	     0.1
consistent gets 			    203,235	     332.6	     5.5
		v_updates_cnt := v_updates_cnt + 1;
consistent gets examination		    111,592	     182.6	     3.0
consistent gets examination (fas	    110,636	     181.0	     3.0
consistent gets from cache		    203,235	     332.6	     5.5
consistent gets pin			     91,643	     150.0	     2.5
consistent gets pin (fastpath)		     65,644	     107.4	     1.8
cursor authentications				242	       0.4	     0.0
cursor reload failures				 33	       0.1	     0.0
data blocks consistent reads - u		 27	       0.0	     0.0
db block changes			  2,413,735	   3,949.5	    65.7

Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 81-82

-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
db block gets				  1,330,851	   2,177.6	    36.2
db block gets direct				838	       1.4	     0.0
db block gets from cache		  1,330,013	   2,176.3	    36.2
db block gets from cache (fastpa	    173,436	     283.8	     4.7
		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
deferred (CURRENT) block cleanou	    503,291	     823.5	    13.7
dirty buffers inspected 		     19,920	      32.6	     0.5
enqueue conversions			      1,306	       2.1	     0.0
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
enqueue releases			     86,454	     141.5	     2.4
enqueue requests			     86,415	     141.4	     2.4
enqueue timeouts				 14	       0.0	     0.0
enqueue waits					532	       0.9	     0.0
exchange deadlocks				  0	       0.0	     0.0
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
execute count				     54,484	      89.2	     1.5
fastpath consistent get quota li		  0	       0.0	     0.0
file io service time			149,907,140	 245,287.0	 4,079.3
free buffer inspected			    720,481	   1,178.9	    19.6
----------------------------------------------------------------------------------------------------------------------
free buffer requested			  1,169,942	   1,914.3	    31.8
gc blocks compressed			      6,695	      11.0	     0.2
gc blocks lost					  5	       0.0	     0.0
gc cleanout applied				  0	       0.0	     0.0

gc cleanout saved				  1	       0.0	     0.0
	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
gc cr anti locks created		     27,915	      45.7	     0.8
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
gc cr anti locks shrunk 			151	       0.3	     0.0
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
gc cr block build time				  0	       0.0	     0.0
gc cr block flush time				186	       0.3	     0.0
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;
gc cr block receive time			132	       0.2	     0.0

gc cr blocks built				125	       0.2	     0.0
gc cr blocks flushed				 74	       0.1	     0.0
END;</pre_sqltext></td></tr>
gc cr blocks received				463	       0.8	     0.0
<tr><td scope="row" class='awrnc'><a class="awr" name="87gaftwrm2h68"></a>87gaftwrm2h68</td><td class='awrnc'><pre_sqltext class="awr">select o.owner#, o.name, o.namespace, o.remoteowner, o.linkname, o.subname from obj$ o where o.obj#=:1</pre_sqltext></td></tr>
gc cr blocks served			      1,482	       2.4	     0.0
gc cr multiblock grant time			  5	       0.0	     0.0
<tr><td scope="row" class='awrc'><a class="awr" name="8swypbbr0m372"></a>8swypbbr0m372</td><td class='awrc'><pre_sqltext class="awr">select order#, columns, types from access$ where d_obj#=:1</pre_sqltext></td></tr>
gc cr multiblock grants received		 75	       0.1	     0.0
gc current block flush time			 73	       0.1	     0.0
gc current block pin time			  0	       0.0	     0.0
<tr><td scope="row" class='awrnc'><a class="awr" name="8vnjxtfyy84as"></a>8vnjxtfyy84as</td><td class='awrnc'><pre_sqltext class="awr">select flags from   system.aq$_queues q,  system.aq$_queue_tables t where  q.table_objno = t.objno and t.schema= :1 and q.name= :2 </pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="965qvk5xttdbw"></a>965qvk5xttdbw</td><td class='awrc'><pre_sqltext class="awr">WITH
  inst_data as
  (SELECT instance_number,
	  instance_name,
	  host_name,
	  version,
	  startup_time,
	  status,
	  logins,
	  shutdown_pending,
	  instance_role,
	  active_state
gc current block receive time		      3,467	       5.7	     0.1
gc current blocks flushed			 32	       0.1	     0.0
gc current blocks pinned			  2	       0.0	     0.0
gc current blocks received		     31,218	      51.1	     0.9
gc current blocks served		      6,054	       9.9	     0.2
gc force cr read cr				 24	       0.0	     0.0
gc force cr read current			  0	       0.0	     0.0
gc kbytes saved 			     29,910	      48.9	     0.8
gc kbytes sent				     30,378	      49.7	     0.8
gc local grants 			    360,644	     590.1	     9.8
gc merge pi bg					  1	       0.0	     0.0
gc merge pi fg					 46	       0.1	     0.0
gc no change made				  8	       0.0	     0.0
gc read time waited				  6	       0.0	     0.0
gc read wait timeouts				  0	       0.0	     0.0
gc read waits					  2	       0.0	     0.0
gc reader bypass grants 			 18	       0.0	     0.0
gc reader bypass waits				  4	       0.0	     0.0
gc remote grants			    779,624	   1,275.7	    21.2
gc status messages received		    701,807	   1,148.3	    19.1
gc status messages sent 		    482,511	     789.5	    13.1
gcs affinity lock failures			156	       0.3	     0.0
gcs affinity lock grants		    101,866	     166.7	     2.8
gcs anti-locks created			     27,916	      45.7	     0.8
gcs data block access records		  1,126,595	   1,843.4	    30.7
gcs messages sent			  2,079,573	   3,402.7	    56.6

Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
gcs read-mostly lock failures		     54,555	      89.3	     1.5
gcs read-mostly lock grants			  0	       0.0	     0.0
gcs stats management (SCM) proce		  0	       0.0	     0.0
ges messages sent			     11,048	      18.1	     0.3
global enqueue get time 		      2,020	       3.3	     0.1
   FROM   sys.GV_$INSTANCE  )
global enqueue gets async			  0	       0.0	     0.0
global enqueue gets sync		    122,793	     200.9	     3.3
global enqueue releases 		    121,637	     199.0	     3.3
global undo segment hints helped		  0	       0.0	     0.0
 , ver as
global undo segment hints were s		  0	       0.0	     0.0
heap block compress			     14,907	      24.4	     0.4
hot buffers moved to head of LRU	     37,601	      61.5	     1.0
immediate (CR) block cleanout ap		 37	       0.1	     0.0
  (SELECT max(version) as version
immediate (CURRENT) block cleano		225	       0.4	     0.0
index crx state invalidation			  0	       0.0	     0.0
index crx upgrade (positioned)			 61	       0.1	     0.0
index fast full scans (full)			  1	       0.0	     0.0
   FROM   inst_data)
index fetch by key			     11,564	      18.9	     0.3
index range scans			     48,276	      79.0	     1.3
index reclamation/extension swit		  0	       0.0	     0.0
 , inst_xml as
leaf node 90-10 splits				 10	       0.0	     0.0
leaf node splits				 83	       0.1	     0.0
lob reads					400	       0.7	     0.0
lob writes					908	       1.5	     0.0
  (SELECT xmlagg(
lob writes unaligned				907	       1.5	     0.0
logical read bytes from cache	     12,560,367,616   20,552,021.0     341,797.3
logons cumulative				175	       0.3	     0.0
max cf enq hold time				  0	       0.0	     0.0
	    xmlelement(&quot;instance&quot;,
messages received			     84,009	     137.5	     2.3
messages sent				     84,009	     137.5	     2.3
min active SCN optimization appl		  0	       0.0	     0.0
no work - consistent read gets		     85,907	     140.6	     2.3
	       xmlattributes(
non-idle wait count			  3,022,712	   4,945.9	    82.3
opened cursors cumulative		     91,113	     149.1	     2.5
parse count (describe)				  6	       0.0	     0.0
parse count (failures)				  0	       0.0	     0.0
		  instance_number as &quot;number&quot;,
parse count (hard)				987	       1.6	     0.0
parse count (total)			      5,002	       8.2	     0.1
parse time cpu					239	       0.4	     0.0
parse time elapsed				741	       1.2	     0.0
physical read IO requests		  1,093,641	   1,789.5	    29.8
physical read bytes		      8,965,603,328   14,670,053.7     243,975.3
physical read total IO requests 	  1,098,967	   1,798.2	    29.9
physical read total bytes	     10,501,441,024   17,183,082.8     285,769.1
physical read total multi block 	      1,418	       2.3	     0.0
physical reads				  1,094,434	   1,790.8	    29.8
physical reads cache			  1,094,366	   1,790.7	    29.8
physical reads cache prefetch			802	       1.3	     0.0
physical reads direct				 68	       0.1	     0.0
physical reads direct (lob)			 68	       0.1	     0.0
physical reads direct temporary 		  0	       0.0	     0.0
physical reads prefetch warmup			  0	       0.0	     0.0
physical write IO requests		    695,441	   1,137.9	    18.9
physical write bytes		      6,149,431,296   10,062,065.4     167,340.6
physical write total IO requests	    791,027	   1,294.3	    21.5
physical write total bytes	      8,145,636,352   13,328,375.0     221,662.0
physical write total multi block	      1,140	       1.9	     0.0
physical writes 			    750,663	   1,228.3	    20.4
		  instance_name as &quot;name&quot;,
physical writes direct				909	       1.5	     0.0
		  host_name as &quot;host&quot;,
		  version as &quot;version&quot;,
physical writes direct (lob)			 71	       0.1	     0.0

Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
physical writes direct temporary		777	       1.3	     0.0
physical writes from cache		    749,754	   1,226.8	    20.4
physical writes non checkpoint		    729,093	   1,193.0	    19.8
pinned buffers inspected			  2	       0.0	     0.0
prefetch warmup blocks aged out 		  0	       0.0	     0.0
prefetched blocks aged out befor		  0	       0.0	     0.0
process last non-idle time			614	       1.0	     0.0
		  to_char(startup_time, 'HH24:MI:SS MM/DD/YYYY') as &quot;startup_time&quot;,
recursive calls 			    167,038	     273.3	     4.6
recursive cpu usage			     56,934	      93.2	     1.6
redo KB read				    876,544	   1,434.3	    23.9
redo blocks checksummed by FG (e	    725,304	   1,186.8	    19.7
redo blocks written			  1,940,496	   3,175.2	    52.8
		  status as &quot;status&quot;,
redo blocks written (group 0)		    683,640	   1,118.6	    18.6
redo blocks written (group 1)		    406,847	     665.7	    11.1
redo buffer allocation retries			  0	       0.0	     0.0
		  logins as &quot;logins&quot;,
redo entries				  1,236,904	   2,023.9	    33.7
redo log space requests 			  0	       0.0	     0.0
redo size				950,293,820    1,554,927.3	25,859.7
redo size for direct writes			120	       0.2	     0.0
redo subscn max counts				139	       0.2	     0.0
redo synch time 				111	       0.2	     0.0
redo synch time (usec)			  1,086,439	   1,777.7	    29.6
		  shutdown_pending as &quot;shutdown_pending&quot;,
redo synch time overhead (usec) 	      3,022	       4.9	     0.1
redo synch time overhead count (		 18	       0.0	     0.0
redo synch writes				 19	       0.0	     0.0
redo wastage				 11,574,200	  18,938.4	   315.0
redo write active strands		     47,376	      77.5	     1.3
redo write broadcast ack count			  0	       0.0	     0.0
redo write broadcast ack time			  0	       0.0	     0.0
redo write finish time			656,804,509    1,074,702.6	17,873.2
		  instance_role as &quot;role&quot;,
redo write gather time			 20,470,273	  33,494.7	   557.0
redo write info find				 18	       0.0	     0.0
redo write info find fail			  0	       0.0	     0.0
redo write schedule time		 20,914,192	  34,221.1	   569.1
redo write size count (   4KB)			680	       1.1	     0.0
redo write size count (   8KB)		      1,187	       1.9	     0.0
redo write size count (  16KB)		      3,861	       6.3	     0.1
redo write size count (  32KB)		      9,235	      15.1	     0.3
redo write size count ( 128KB)		     12,588	      20.6	     0.3
redo write size count ( 256KB)			177	       0.3	     0.0
redo write size count ( 512KB)			 24	       0.0	     0.0
redo write size count (1024KB)			  4	       0.0	     0.0
redo write time 			     65,773	     107.6	     1.8
redo write time (usec)			657,733,894    1,076,223.3	17,898.5
redo write total time			678,176,555    1,109,672.8	18,454.8
redo write worker delay (usec)		 18,172,995	  29,735.7	   494.5
redo write worker delay count		     16,709	      27.3	     0.5
redo writes				     27,756	      45.4	     0.8
redo writes (group 0)			      9,087	      14.9	     0.3
redo writes (group 1)			      7,622	      12.5	     0.2
redo writes adaptive all		     27,756	      45.4	     0.8
redo writes adaptive worker		     16,709	      27.3	     0.5
remote Oradebug requests			  0	       0.0	     0.0
rollback changes - undo records 		  0	       0.0	     0.0
rollbacks only - consistent read		 11	       0.0	     0.0
root node splits				  0	       0.0	     0.0
		  active_state as &quot;active&quot;
rows fetched via callback		      5,627	       9.2	     0.2
saved cleanouts 				  0	       0.0	     0.0
saved cleanouts successfully com		  0	       0.0	     0.0
securefile allocation bytes		    581,632	     951.7	    15.8

Instance Activity Stats 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
securefile allocation chunks			 20	       0.0	     0.0
securefile bytes non-transformed	    505,108	     826.5	    13.8
securefile direct read bytes		    557,056	     911.5	    15.2
securefile direct read ops			 68	       0.1	     0.0
securefile direct write bytes		    581,632	     951.7	    15.8
securefile direct write ops			 20	       0.0	     0.0
securefile number of non-transfo		 20	       0.0	     0.0
segment cfs allocations 			  0	       0.0	     0.0
segment chunks allocation from d		 20	       0.0	     0.0
segment dispenser allocations			 20	       0.0	     0.0
segment dispenser load empty			  0	       0.0	     0.0
segment dispenser load tasks			  0	       0.0	     0.0
segment prealloc bytes				  0	       0.0	     0.0
segment prealloc ops				  1	       0.0	     0.0
segment prealloc tasks				  0	       0.0	     0.0
	  ))) as x
segment prealloc time (ms)			 12	       0.0	     0.0
segment total chunk allocation			  0	       0.0	     0.0
session cursor cache hits		     89,183	     145.9	     2.4
session logical reads			  1,534,097	   2,510.2	    41.8
   FROM   inst_data)
shared hash latch upgrades - no 	      7,762	      12.7	     0.2
shared hash latch upgrades - wai		  0	       0.0	     0.0
shared io pool buffer get succes		 88	       0.1	     0.0
sorts (memory)				      4,543	       7.4	     0.1
SELECT dbid,
sorts (rows)				    987,442	   1,615.7	    26.9
sql area evicted			      2,139	       3.5	     0.1
sql area purged 				 47	       0.1	     0.0
       xmlconcat(
summed dirty queue length		    127,043	     207.9	     3.5
switch current caused by our pin		 10	       0.0	     0.0
       xmlelement(&quot;report_metadata&quot;,
	  xmlattributes(
switch current to new buffer			 19	       0.0	     0.0
	     :1 as &quot;instance_number&quot;,
table fetch by rowid			     19,774	      32.4	     0.5
table fetch continued row			635	       1.0	     0.0
table scan blocks gotten		     11,882	      19.4	     0.3
table scan disk non-IMC rows got	    615,025	   1,006.3	    16.7
table scan rows gotten			    615,025	   1,006.3	    16.7
table scans (short tables)		      1,038	       1.7	     0.0
temp space allocated (bytes)			  0	       0.0	     0.0
	     'HH24:MI:SS MM/DD/YYYY' as &quot;date_format&quot;,
	     to_char(:2,  'HH24:MI:SS MM/DD/YYYY') as &quot;start_time&quot;,
	     to_char(:3,  'HH24:MI:SS MM/DD/YYYY') as &quot;report_time&quot;
       ))
      , xmlelement(&quot;system_config&quot;,
	  xmlelement(&quot;database&quot;,
	     xmlattributes(
		d.DBID as &quot;dbid&quot;,
		d.NAME as &quot;name&quot;,
		d.LOG_MODE as &quot;log_mode&quot;,
		d.OPEN_MODE as &quot;open_mode&quot;,
		d.DATABASE_ROLE as &quot;role&quot;,
		d.FORCE_LOGGING as &quot;force_log&quot;,
		d.PLATFORM_NAME as &quot;platform&quot;,
		d.FLASHBACK_ON as &quot;flashback_on&quot;,
		d.DB_UNIQUE_NAME as &quot;unique_name&quot;,
		v.version as &quot;version&quot;
	  )),
	  xmlelement(&quot;instances&quot;,  i.x)
       ))
FROM   sys.v_$database d,  inst_xml i,	ver v</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="9fjf75a1s4y19"></a>9fjf75a1s4y19</td><td class='awrnc'><pre_sqltext class="awr">select procedure#, procedurename, properties, itypeobj#,  properties2 from procedureinfo$ where obj#=:1 order by procedurename desc,  overload# desc</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9g485acn2n30m"></a>9g485acn2n30m</td><td class='awrc'><pre_sqltext class="awr">select col#, intcol#, reftyp, stabid, expctoid from refcon$ where obj#=:1 order by intcol# asc</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="9sq9djzzhr19y"></a>9sq9djzzhr19y</td><td class='awrnc'><pre_sqltext class="awr">WITH binds as
	 (select :dbid			as dbid
	       ,  :inst_id_low		 as instIdLow
	       ,  :inst_id_high 	 as instIdHigh
	       ,  :begin_snap		 as beginSnap
	       ,  :end_snap		 as endSnap
	       ,  :begin_time		 as beginTime
	       ,  :end_time		 as endTime
	       ,  :disk_begin_time	 as diskBeginTime
	       ,  :disk_end_time	 as diskEndTime
	       ,  :mem_begin_time	 as memBeginTime
	       ,  :mem_end_time 	 as memEndTime
	       ,  :bucket_count 	 as bucketCount
	       ,  :bucket_interval	 as bucketInterval
	       ,  :mem_enable		 as memEnable
	       ,  :disk_enable		 as diskEnable
	       ,  :disk_filter_ratio	 as filterRatio,  :filter_action as filter_action,  :filter_blocking_session as filter_blocking_session,  :filter_capture_id as filter_capture_id,  :filter_client_id as filter_client_id,  :filter_consumer_group_id as filter_consumer_group_id,  :filter_dbop as filter_dbop,  :filter_ecid as filter_ecid,	:filter_event as filter_event,	:filter_instance_number as filter_instance_number,  :filter_is_captured as filter_is_captured,	:filter_is_filtered_out as filter_is_filtered_out,  :filter_is_nc_background as filter_is_nc_background,  :filter_is_replayed as filter_is_replayed,  :filter_machine as filter_machine,  :filter_machine_port as filter_machine_port,	:filter_module as filter_module,  :filter_object as filter_object,  :filter_pdb as filter_pdb,	:filter_physical_session as filter_physical_session,  :filter_pl_sql as filter_pl_sql,	:filter_pl_sql_top as filter_pl_sql_top,  :filter_program as filter_program,  :filter_px_process as filter_px_process,	:filter_service_hash as filter_service_hash,  :filter_session_type as filter_session_type,  :filter_sql_fms as filter_sql_fms,	:filter_sql_id_top as filter_sql_id_top,  :filter_sql_opcode as filter_sql_opcode,  :filter_sql_opcode_top as filter_sql_opcode_top,  :filter_sql_rws as filter_sql_rws,  :filter_sql_rws_line as filter_sql_rws_line,	:filter_sqlid as filter_sqlid,	:filter_sqlid_fullphv as filter_sqlid_fullphv,	:filter_sqlid_phv as filter_sqlid_phv,	:filter_user_id as filter_user_id,  :filter_wait_class as filter_wait_class,  :filter_xid as filter_xid from sys.dual)	,  unified_ash as
	     (SELECT a.sample_id
       ,  a.sample_time
       ,  a.session_id
       ,  a.session_serial#
       ,  a.session_type
       ,  a.session_state
       ,  a.flags
       ,  a.user_id
       ,  a.sql_id
       ,  a.sql_opcode
       ,  a.sql_opname
       ,  a.top_level_sql_id
       ,  a.top_level_sql_opcode
       ,  a.sql_child_number
       ,  a.sql_plan_hash_value
       ,  a.sql_full_plan_hash_value
       ,  a.sql_plan_line_id
       ,  a.sql_plan_operation
       ,  a.sql_plan_options
       ,  a.sql_exec_id
       ,  a.force_matching_signature
       ,  a.plsql_entry_object_id
       ,  a.plsql_entry_subprogram_id
       ,  a.plsql_object_id
       ,  a.plsql_subprogram_id
       ,  a.service_hash
       ,  a.qc_session_id
       ,  a.qc_instance_id
       ,  a.qc_session_serial#
       ,  nvl(a.event,
	    CASE WHEN bitand(a.time_model,  power(2, 19)) &gt; 0
		 THEN 'CPU: IM Populate'
		 WHEN bitand(a.time_model,  power(2, 20)) &gt; 0
		 THEN 'CPU: IM Prepopulate'
		 WHEN bitand(a.time_model,  power(2, 21)) &gt; 0
		 THEN 'CPU: IM Repopulate'
		 WHEN bitand(a.time_model,  power(2, 22)) &gt; 0
		 THEN 'CPU: IM Trickle Repop'
		 WHEN bitand(a.time_model,  power(2, 18)) &gt; 0
		 THEN 'CPU: IM Query'
	     ELSE 'CPU + Wait for CPU' END) as event
       ,  nvl(a.event_id,  1)
	   as event_id	
       ,  nvl(a.wait_class,  'CPU')
	   as wait_class	
       ,  nvl(a.wait_class_id,	9999)
	   as wait_class_id
       ,  a.seq#
       ,  a.p1
       ,  a.p1text
       ,  a.p2
total cf enq hold time			      3,540	       5.8	     0.1
       ,  a.p2text	
total number of cf enq holders			227	       0.4	     0.0
total number of times SMON poste		  0	       0.0	     0.0
       ,  a.p3
transaction lock background get 		  0	       0.0	     0.0
transaction lock background gets		  0	       0.0	     0.0
       ,  a.p3text	
       ,  a.wait_time
       ,  a.time_waited	
       ,  rawtohex(a.xid) as xid	
       ,  a.blocking_session
       ,  a.blocking_session_serial#
       ,  a.blocking_session_status
       ,  a.blocking_inst_id
       ,  a.current_obj#
transaction lock foreground requ		  0	       0.0	     0.0
transaction rollbacks				  0	       0.0	     0.0
transaction tables consistent re		  0	       0.0	     0.0
transaction tables consistent re		  0	       0.0	     0.0
undo change vector size 		394,801,084	 645,997.0	10,743.5
user calls				      1,096	       1.8	     0.0
       ,  a.current_file#
user commits				     36,748	      60.1	     1.0
user logons cumulative				  0	       0.0	     0.0
user logouts cumulative 			 18	       0.0	     0.0
       ,  a.current_block#	
workarea executions - optimal		      2,242	       3.7	     0.1
write clones created in backgrou		  0	       0.0	     0.0
write clones created in foregrou		 94	       0.2	     0.0
       ,  a.top_level_call#
			  ------------------------------------------------------


Instance Activity Stats - Absolute Values  DB/Inst: P30DB/p30db2  Snaps: 81-82
       ,  a.top_level_call_name
-> Statistics with absolute values (should not be diffed)

Statistic			     Begin Value       End Value
       ,  a.program
-------------------------------- --------------- ---------------
logons current				     108	      91
opened cursors current			     218	     133
       ,  a.module
session cursor cache count		  14,077	  14,560
session pga memory		     671,378,456     597,733,744
session pga memory max		     865,777,976     765,263,504
session uga memory		     814,063,824     830,833,800
       ,  a.action
session uga memory max		  10,515,302,120  11,032,319,424
			  ------------------------------------------------------

Instance Activity Stats - Thread Activity  DB/Inst: P30DB/p30db2  Snaps: 81-82
       ,  a.client_id
-> Statistics identified by '(derived)' come from sources other than SYSSTAT

Statistic				      Total  per Hour
       ,  a.remote_instance#	
-------------------------------- ------------------ ---------
log switches (derived)				  0	  .00
			  ------------------------------------------------------

       ,  a.ecid
IOStat by Function summary		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
    other columns suffixed with K,M,G,T,P are in multiples of 1000
       ,  a.consumer_group_id
-> ordered by (Data Read + Write) desc

		 Reads:  Reqs	 Data	Writes:  Reqs	 Data	 Waits:    Avg
       ,  a.machine
Function Name	   Data per sec per sec    Data per sec per sec   Count    Time
--------------- ------- ------- ------- ------- ------- ------- ------- --------
       ,  a.port
Buffer Cache Re    8.2G  1767.0 13.817M      0M     0.0      0M    1.1M   8.59ms
DBWR		     0M     0.0      0M    5.8G  1150.3  9.688M       0
LGWR		     0M     0.0      0M    1.8G   153.8  3.066M   27.5K  22.94ms
       ,  a.in_connection_mgmt
Others		   1.4G     8.6   2.35M     12M     1.2    .02M    3370   3.10ms
       ,  a.in_parse
Direct Reads	     0M     0.1      0M      3M     0.0   .005M       0
Direct Writes	     0M     0.0      0M      2M     0.0   .003M       0
       ,  a.in_hard_parse	
Streams AQ	     0M     0.0      0M      0M     0.0      0M       1  24.00ms
TOTAL:		   9.6G  1775.7 16.166M    7.6G  1305.3 12.782M    1.1M   8.93ms
			  ------------------------------------------------------

       ,  a.in_sql_execution
IOStat by Filetype summary		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
    other columns suffixed with K,M,G,T,P are in multiples of 1000
       ,  a.in_plsql_execution
-> Small Read and Large Read are average service times
-> Ordered by (Data Read + Write) desc

       ,  a.in_plsql_rpc	
       ,  a.in_plsql_compilation
		Reads:	Reqs	Data   Writes:	Reqs	Data	  Small    Large
       ,  a.in_java_execution
Filetype Name	  Data per sec per sec	  Data per sec per sec	   Read     Read
-------------- ------- ------- ------- ------- ------- ------- -------- --------
Data File	  8.2G	1767.5 13.808M	  5.8G	1150.5	9.695M	 8.10ms
       ,  a.in_bind
Log File	  1.3G	   2.7	2.258M	  1.8G	 153.8	3.066M 733.58us 1743.64m
Control File	   56M	   5.9	 .092M	    9M	   0.9	 .015M 306.92us
       ,  a.in_cursor_close
Temp File	    6M	   0.2	  .01M	    6M	   0.2	  .01M 292.68us    .00ns
Other		    0M	   0.0	    0M	    0M	   0.2	    0M	 1.33ms
TOTAL:		  9.6G	1776.2 16.168M	  7.6G	1305.5 12.786M	 8.07ms 1731.09m
       ,  a.in_sequence_load
			  ------------------------------------------------------

IOStat by Function/Filetype summary	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
       ,  a.is_captured
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> Ordered by (Data Read + Write) desc for each function

       ,  a.is_replayed
  Reads:  Reqs	  Data	 Writes:  Reqs	  Data	  Waits:      Avg
    Data per sec per sec    Data per sec per sec   Count     Time
 ------- ------- ------- ------- ------- ------- ------- ----------
       ,  a.dbreplay_file_id
Buffer Cache Reads
    8.2G  1766.8 13.815M      0M     0.0      0M    1.1M     8.59ms
 Buffer Cache Reads (Data File)
       ,  a.dbop_name
    8.2G  1766.7 13.805M      0M     0.0      0M    1.1M     8.59ms
 Buffer Cache Reads (Temp File)
      6M     0.2    .01M      0M     0.0      0M      92   576.09us
 DBWR (Data File)
       ,  a.con_dbid,  decode(binds.diskEnable, 0, 1, binds.filterRatio)
      0M     0.0      0M    5.8G  1150.8  9.693M       0
DBWR
      0M     0.0      0M    5.8G  1150.9  9.693M       0
 DBWR (Temp File)
		       as sample_count
      0M     0.0      0M      0M     0.1      0M       0
 LGWR (Log File)
      0M     0.0      0M    1.8G   153.8  3.065M       0
		   ,  inst_id as instance_number
LGWR
      0M     0.0      0M    1.8G   153.8  3.065M       0
Others
    1.4G     8.6   2.35M     11M     1.0   .018M    2999   780.05us
		FROM sys.gv_$active_session_history a,	binds
 Others (Log File)
    1.3G     2.7  2.258M      0M     0.0      0M     274     1.29ms
 Others (Control File)
     56M     5.9   .092M      9M     0.9   .015M    2725   728.98us
 Others (Temp File)
	       WHERE binds.memEnable = 1
      0M     0.0      0M      2M     0.1   .003M       0
 Others (Data File)
      0M     0.0      0M      0M     0.0      0M       0
 Direct Reads (Temp File)
		 AND (	binds.diskEnable = 0
      0M     0.0      0M      3M     0.0   .005M       0
Direct Reads
      0M     0.1      0M      3M     0.0   .005M       0
		     OR (  binds.diskEnable = 1
 Direct Reads (Data File)
      0M     0.1      0M      0M     0.0      0M       0
Direct Writes
		       AND a.is_awr_sample = 'Y'
      0M     0.0      0M      2M     0.0   .003M       0
 Direct Writes (Data File)
      0M     0.0      0M      1M     0.0   .002M       0
 Direct Writes (Temp File)
      0M     0.0      0M      1M     0.0   .002M       0
 Streams AQ (Data File)
      0M     0.0      0M      0M     0.0      0M       1    24.00ms
Streams AQ
      0M     0.0      0M      0M     0.0      0M       1    24.00ms
TOTAL:
    9.6G  1775.5 16.165M    7.6G  1305.7 12.784M    1.1M     8.57ms
			  ------------------------------------------------------


Tablespace IO Stats			   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------


File IO Stats				   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------


Buffer Pool Statistics			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Standard block size Pools  D: default,  K: keep,  R: recycle
-> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k

							    Free   Writ   Buffer
     Number of Pool	  Buffer     Physical	 Physical   Buff   Comp     Busy
P      Buffers Hit%	    Gets	Reads	   Writes   Wait   Wait    Waits
--- ---------- ---- ------------ ------------ ----------- ------ ------ --------
D      913,360	 28    1,530,386    1,094,495	  747,444      0      0        7
			  ------------------------------------------------------

Checkpoint Activity			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total Physical Writes:		       750,663

					  Other    Autotune	 Thread
       MTTR    Log Size    Log Ckpt    Settings        Ckpt	   Ckpt
     Writes	 Writes      Writes	 Writes      Writes	 Writes
----------- ----------- ----------- ----------- ----------- -----------
	  0	      0 	  0	      0     286,603	      0
			  ------------------------------------------------------

Instance Recovery Stats 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> B: Begin Snapshot,  E: End Snapshot

									    Estd
  Targt  Estd					  Log Ckpt Log Ckpt    Opt   RAC
  MTTR	 MTTR Recovery	Actual	 Target   Log Sz   Timeout Interval    Log Avail
   (s)	  (s) Estd IOs RedoBlks RedoBlks RedoBlks RedoBlks RedoBlks  Sz(M)  Time
- ----- ----- -------- -------- -------- -------- -------- -------- ------ -----
B     0    95	156286	 259483 1.70E+07 1.70E+07      N/A	N/A    N/A    31
E     0   519	574472	1248200   741102 1.70E+07   741102	N/A    N/A   493
			  ------------------------------------------------------

MTTR Advisory				       DB/Inst: P30DB/p30db2  Snap: 82

		  No data exists for this section of the report.
			  ------------------------------------------------------

Buffer Pool Advisory			       DB/Inst: P30DB/p30db2  Snap: 82
-> Only rows with estimated physical reads >0 are displayed
-> ordered by Block Size, Buffers For Estimate
		       AND bitand(a.flags,  128) = 0 ) )

				    Est
				   Phys      Estimated			Est
    Size for   Size	 Buffers   Read     Phys Reads	   Est Phys %DBtime
		 AND a.inst_id between
P    Est (M) Factor  (thousands) Factor    (thousands)	  Read Time for Rds
--- -------- ------ ------------ ------ -------------- ------------ -------
D	 768	 .1	      89    1.2 	51,518		  1 1.5E+05
			  binds.instIdLow
D      1,536	 .2	     179    1.2 	49,686		  1 1.5E+05
D      2,304	 .3	     268    1.1 	48,369		  1 1.4E+05
D      3,072	 .4	     358    1.1 	47,293		  1 1.4E+05
D      3,840	 .5	     447    1.1 	46,371		  1 1.4E+05
		      and binds.instIdHigh
D      4,608	 .6	     537    1.1 	45,549		  1 1.3E+05
D      5,376	 .7	     626    1.0 	44,799		  1 1.3E+05
D      6,144	 .8	     716    1.0 	44,095		  1 1.3E+05
D      6,912	 .9	     805    1.0 	43,435		  1 1.3E+05
		 AND a.sample_time between
D      7,680	1.0	     895    1.0 	42,816		  1 1.3E+05
D      7,840	1.0	     913    1.0 	42,695		  1 1.3E+05
D      8,448	1.1	     984    1.0 	42,235		  1 1.2E+05
			  binds.beginTime
D      9,216	1.2	   1,074    1.0 	41,680		  1 1.2E+05
D      9,984	1.3	   1,163    1.0 	41,148		  1 1.2E+05
D     10,752	1.4	   1,253    1.0 	40,645		  1 1.2E+05
		      and binds.endTime
D     11,520	1.5	   1,342    0.9 	40,179		  1 1.2E+05
D     12,288	1.6	   1,432    0.9 	39,730		  1 1.2E+05
D     13,056	1.7	   1,521    0.9 	39,309		  1 1.2E+05
D     13,824	1.8	   1,610    0.9 	38,899		  1 1.2E+05
	      UNION ALL
D     14,592	1.9	   1,700    0.9 	38,517		  1 1.1E+05
D     15,360	2.0	   1,789    0.9 	38,158		  1 1.1E+05
			  ------------------------------------------------------

	      SELECT a.sample_id

PGA Aggr Summary			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory

       ,  a.sample_time
PGA Cache Hit %   W/A MB Processed  Extra W/A MB Read/Written
--------------- ------------------ --------------------------
	  100.0 	       345			    0
       ,  a.session_id
			  ------------------------------------------------------

PGA Aggr Target Stats			   DB/Inst: P30DB/p30db2  Snaps: 81-82
       ,  a.session_serial#
-> B: Begin Snap   E: End Snap (rows dentified with B or E contain data
   which is absolute i.e. not diffed over the interval)
-> Auto PGA Target - actual workarea memory target
-> W/A PGA Used    - amount of memory used for all Workareas (manual + auto)
       ,  a.session_type
-> %PGA W/A Mem    - percentage of PGA memory allocated to workareas
-> %Auto W/A Mem   - percentage of workarea memory controlled by Auto Mem Mgmt
-> %Man W/A Mem    - percentage of workarea memory under manual control
       ,  a.session_state

						%PGA  %Auto   %Man
    PGA Aggr   Auto PGA   PGA Mem    W/A PGA	 W/A	W/A    W/A Global Mem
   Target(M)  Target(M)  Alloc(M)    Used(M)	 Mem	Mem    Mem   Bound(K)
       ,  a.flags
- ---------- ---------- ---------- ---------- ------ ------ ------ ----------
B      3,215	  1,865    1,393.6	  0.0	  .0	 .0	.0    329,210
E      3,215	  1,917    1,312.5	  0.0	  .0	 .0	.0    329,210
       ,  a.user_id
			  ------------------------------------------------------

PGA Aggr Target Histogram		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Optimal Executions are purely in-memory operations
       ,  a.sql_id

  Low	  High
Optimal Optimal    Total Execs	Optimal Execs 1-Pass Execs M-Pass Execs
------- ------- -------------- -------------- ------------ ------------
       ,  a.sql_opcode
     2K      4K 	 1,774		1,774		 0	      0
    64K    128K 	   101		  101		 0	      0
   128K    256K 	    26		   26		 0	      0
   256K    512K 	    16		   16		 0	      0
       ,  a.sql_opname
   512K   1024K 	   134		  134		 0	      0
     1M      2M 	   161		  161		 0	      0
     2M      4M 	    10		   10		 0	      0
			  ------------------------------------------------------
       ,  a.top_level_sql_id

PGA Memory Advisory			       DB/Inst: P30DB/p30db2  Snap: 82
-> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value
   where Estd PGA Overalloc Count is 0
       ,  a.top_level_sql_opcode

				       Estd Extra    Estd P Estd PGA
PGA Target    Size	     W/A MB   W/A MB Read/    Cache Overallo	Estd
  Est (MB)   Factr	  Processed Written to Disk   Hit %    Count	Time
       ,  a.sql_child_number
---------- ------- ---------------- ---------------- ------ -------- -------
       402     0.1	   17,930.2	       965.7   95.0	  73 7.8E+07
       804     0.3	   17,930.2	       901.3   95.0	  59 7.8E+07
       ,  a.sql_plan_hash_value
     1,608     0.5	   17,930.2	       532.6   97.0	   0 7.7E+07
     2,411     0.8	   17,930.2		 0.0  100.0	   0 7.4E+07
     3,215     1.0	   17,930.2		 0.0  100.0	   0 7.4E+07
     3,858     1.2	   17,930.2		 0.0  100.0	   0 7.4E+07
       ,  a.sql_full_plan_hash_value
     4,501     1.4	   17,930.2		 0.0  100.0	   0 7.4E+07
     5,144     1.6	   17,930.2		 0.0  100.0	   0 7.4E+07
     5,787     1.8	   17,930.2		 0.0  100.0	   0 7.4E+07
     6,430     2.0	   17,930.2		 0.0  100.0	   0 7.4E+07
       ,  a.sql_plan_line_id
     9,645     3.0	   17,930.2		 0.0  100.0	   0 7.4E+07
    12,860     4.0	   17,930.2		 0.0  100.0	   0 7.4E+07
    19,290     6.0	   17,930.2		 0.0  100.0	   0 7.4E+07
       ,  a.sql_plan_operation
    25,720     8.0	   17,930.2		 0.0  100.0	   0 7.4E+07
			  ------------------------------------------------------


       ,  a.sql_plan_options
Shared Pool Advisory			       DB/Inst: P30DB/p30db2  Snap: 82
-> SP: Shared Pool     Est LC: Estimated Library Cache	 Factr: Factor
-> Note there is often a 1:Many correlation between a single logical object
   in the Library Cache, and the physical number of memory objects associated
       ,  a.sql_exec_id
   with it.  Therefore comparing the number of Lib Cache objects (e.g. in
   v$librarycache), with the number of Lib Cache Memory Objects is invalid.

				       Est LC Est LC  Est LC Est LC
       ,  a.force_matching_signature
  Shared    SP	 Est LC 		 Time	Time	Load   Load	  Est LC
    Pool  Size	   Size       Est LC	Saved  Saved	Time   Time	 Mem Obj
       ,  a.plsql_entry_object_id
 Size(M) Factr	    (M)      Mem Obj	  (s)  Factr	 (s)  Factr	Hits (K)
-------- ----- -------- ------------ -------- ------ ------- ------ ------------
   1,280    .8	     37        1,290	6,339	  .0 1.2E+05  897.8	     276
   1,312    .8	     68        2,517   10,529	  .1 1.2E+05  867.7	     395
       ,  a.plsql_entry_subprogram_id
   1,344    .8	     99        3,431   14,360	  .1 1.2E+05  840.1	     500
   1,376    .9	    130        3,788   19,313	  .1 1.1E+05  804.5	     684
   1,408    .9	    162        4,238  113,442	  .9  17,692  127.3	   5,326
       ,  a.plsql_object_id
   1,440    .9	    193        5,259  115,275	  .9  15,859  114.1	   5,387
   1,472    .9	    224        5,856  119,352	  .9  11,782   84.8	   5,511
   1,504    .9	    255        6,578  123,243	  .9   7,891   56.8	   5,621
   1,536   1.0	    286        7,048  127,084	 1.0   4,050   29.1	   5,729
       ,  a.plsql_subprogram_id
   1,568   1.0	    317        7,513  130,916	 1.0	 218	1.6	   5,837
   1,600   1.0	    348        8,327  130,995	 1.0	 139	1.0	   5,840
   1,632   1.0	    379        9,475  131,000	 1.0	 134	1.0	   5,841
       ,  a.service_hash
   1,664   1.0	    411       10,465  131,006	 1.0	 128	 .9	   5,841
   1,696   1.1	    440       11,356  131,008	 1.0	 126	 .9	   5,841
   1,728   1.1	    440       11,356  131,010	 1.0	 124	 .9	   5,842
   1,760   1.1	    440       11,356  131,014	 1.0	 120	 .9	   5,842
       ,  a.qc_session_id
   1,792   1.1	    440       11,356  131,014	 1.0	 120	 .9	   5,842
   1,824   1.1	    440       11,356  131,014	 1.0	 120	 .9	   5,842
   1,856   1.2	    440       11,356  131,014	 1.0	 120	 .9	   5,842
   1,888   1.2	    440       11,356  131,014	 1.0	 120	 .9	   5,842
       ,  a.qc_instance_id
   1,920   1.2	    440       11,356  131,014	 1.0	 120	 .9	   5,842
   2,080   1.3	    440       11,356  131,014	 1.0	 120	 .9	   5,842
   2,240   1.4	    440       11,356  131,014	 1.0	 120	 .9	   5,842
   2,400   1.5	    440       11,356  131,014	 1.0	 120	 .9	   5,842
       ,  a.qc_session_serial#
   2,560   1.6	    440       11,356  131,014	 1.0	 120	 .9	   5,842
   2,720   1.7	    440       11,356  131,014	 1.0	 120	 .9	   5,842
   2,880   1.8	    440       11,356  131,014	 1.0	 120	 .9	   5,842
       ,  nvl(a.event,
   3,040   1.9	    440       11,356  131,014	 1.0	 120	 .9	   5,842
   3,200   2.0	    440       11,356  131,014	 1.0	 120	 .9	   5,842
			  ------------------------------------------------------

SGA Target Advisory			       DB/Inst: P30DB/p30db2  Snap: 82
	    CASE WHEN bitand(a.time_model,  power(2, 19)) &gt; 0

SGA Target   SGA Size	    Est DB     Est Physical
  Size (M)     Factor	  Time (s)	      Reads
---------- ---------- ------------ ----------------
		 THEN 'CPU: IM Populate'
     2,416	  0.3	   183,540	 51,519,766
     3,624	  0.4	   162,374	 49,683,891
     4,832	  0.5	   155,290	 47,292,985
     6,040	  0.6	   152,556	 46,370,778
     7,248	  0.8	   147,909	 44,799,611
		 WHEN bitand(a.time_model,  power(2, 20)) &gt; 0
     8,456	  0.9	   143,871	 43,433,378
     9,664	  1.0	   141,675	 42,694,759
    10,872	  1.1	   138,671	 41,678,624
    12,080	  1.3	   135,611	 40,645,411
		 THEN 'CPU: IM Prepopulate'
    13,288	  1.4	   134,223	 40,180,038
    14,496	  1.5	   131,644	 39,309,065
    15,704	  1.6	   129,307	 38,519,212
    16,912	  1.8	   128,244	 38,160,576
		 WHEN bitand(a.time_model,  power(2, 21)) &gt; 0
    18,120	  1.9	   128,244	 38,160,576
    19,328	  2.0	   128,244	 38,160,576
			  ------------------------------------------------------

		 THEN 'CPU: IM Repopulate'
Streams Pool Advisory			       DB/Inst: P30DB/p30db2  Snap: 82

		  No data exists for this section of the report.
			  ------------------------------------------------------

		 WHEN bitand(a.time_model,  power(2, 22)) &gt; 0
Java Pool Advisory			       DB/Inst: P30DB/p30db2  Snap: 82

		  No data exists for this section of the report.
		 THEN 'CPU: IM Trickle Repop'
			  ------------------------------------------------------

Buffer Wait Statistics			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> ordered by wait time desc, waits desc

		 WHEN bitand(a.time_model,  power(2, 18)) &gt; 0
Class			 Waits Total Wait Time (s)  Avg Time (ms)
------------------ ----------- ------------------- --------------
data block		     7			 1	      106
			  ------------------------------------------------------
		 THEN 'CPU: IM Query'


Enqueue Activity			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> only enqueues with requests are shown
	     ELSE 'CPU + Wait for CPU' END) as event
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
-> ordered by Wait Time desc, Waits desc, Requests desc

Enqueue Type (Request Reason)
------------------------------------------------------------------------------
       ,  nvl(a.event_id,  1)
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
------------ ------------ ----------- ----------- ------------ --------------
RO-Multiple Object Reuse (fast object reuse)
	   as event_id	
	 850	      850	    0	      172	    15		85.74
CF-Controlfile Transaction
       1,562	    1,558	    4	       48	     2		37.98
TM-DML
      37,024	   37,023	    0		2	     1	       385.50
       ,  nvl(a.wait_class,  'CPU')
PS-PX Process Reservation
       1,177	    1,177	    0	      218	     0		 1.00
TO-Temp Object
	 184	      184	    0	       32	     0		  .97
	   as wait_class	
WF-AWR Flush
	  20	       20	    0	       20	     0		  .85
CO-KTUCLO Master Slave enq (master slave det)
	  10		0	   10	       10	     0		 1.50
HW-Segment High Water Mark
       ,  nvl(a.wait_class_id,	9999)
	 300	      300	    0	       12	     0		  .83
WT-AWR CDB-Wide Table Lock
	  18	       18	    0		8	     0		 1.25
FB-Format Block
	   as wait_class_id
	  28	       28	    0		3	     0		  .67
RA-Real-Time ADDM Flood Control (RT ADDM flood control)
	   2		2	    0		2	     0		 1.00
TT-Tablespace
       ,  a.seq#
	 207	      207	    0		1	     0		 1.00
PE-Parameter
	  14	       14	    0		1	     0		 1.00
AF-Advisor Framework (task serialization)
	   7		7	    0		1	     0		 1.00
       ,  a.p1
TD-KTF map table enqueue (KTF dump entries)
	   1		1	    0		1	     0		 1.00
TK-Auto Task Serialization (Auto Task Serialization)
	   1		1	    0		1	     0		 1.00
       ,  a.p1text
PG-Global Parameter
	   7		7	    0		1	     0		  .00
TX-Transaction
      36,946	   36,945	    0		0	     0		  N/A
JG-Job Scheduler1
       ,  a.p2
       2,541	    2,541	    0		0	     0		  N/A
JG-Job Scheduler1 (queue lock)
       2,541	    2,541	    0		0	     0		  N/A
CU-Cursor
       ,  a.p2text	
	 919	      919	    0		0	     0		  N/A
DD-ASM Local Disk Group
	 765	      765	    0		0	     0		  N/A
SJ-KTSJ Slave Task Cancel (Slave Task Cancel)
	 416	      420	    0		0	     0		  N/A
       ,  a.p3
FP-File Object (global fob contention)
	 274	      274	    0		0	     0		  N/A
JG-Job Scheduler1 (q mem clnup lck)
	 242	      242	    0		0	     0		  N/A
       ,  a.p3text	
SE-Session Migration
	 204	      204	    0		0	     0		  N/A
BU-Buddy Instance Context (recovery set construct)
	 198	      198	    0		0	     0		  N/A
IT-In-Mem Temp Table Meta Creation
       ,  a.wait_time
	 168	      168	    0		0	     0		  N/A
DA-Instance DP Array (Slave Process Array)
       ,  a.time_waited	
	 167	      167	    0		0	     0		  N/A
IS-Instance State
	  87	       87	    0		0	     0		  N/A

Enqueue Activity			   DB/Inst: P30DB/p30db2  Snaps: 81-82
       ,  rawtohex(a.xid) as xid	
-> only enqueues with requests are shown
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
-> ordered by Wait Time desc, Waits desc, Requests desc

       ,  a.blocking_session
Enqueue Type (Request Reason)
------------------------------------------------------------------------------
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
------------ ------------ ----------- ----------- ------------ --------------
       ,  a.blocking_session_serial#
TH-Threshold Chain (metric threshold evaluation)
	  10	       10	    0		0	     0		  N/A
MR-Media Recovery
	   8		8	    0		0	     0		  N/A
SQ-Sequence Cache
       ,  a.blocking_session_status
	   5		5	    0		0	     0		  N/A
RS-Reclaimable Space (write alert level)
	   4		4	    0		0	     0		  N/A
PR-Process Startup
	   3		3	    0		0	     0		  N/A
       ,  a.blocking_inst_id
PV-KSV slave startup (syncstart)
	   3		3	    0		0	     0		  N/A
AE-Edition Lock (lock)
	   2		2	    0		0	     0		  N/A
PW-Buffer Cache PreWarm (flush prewarm buffers)
       ,  a.current_obj#
	   2		2	    0		0	     0		  N/A
RS-Reclaimable Space (read alert level)
	   2		2	    0		0	     0		  N/A
SH-Active Session History Flushing
	   2		2	    0		0	     0		  N/A
       ,  a.current_file#
TA-Instance Undo
	   2		2	    0		0	     0		  N/A
XR-Quiesce / Force Logging (database force logging)
	   2		2	    0		0	     0		  N/A
DW-In memory Dispenser
       ,  a.current_block#	
	   1		1	    0		0	     0		  N/A
			  ------------------------------------------------------


Undo Segment Summary			   DB/Inst: P30DB/p30db2  Snaps: 81-82
       ,  a.top_level_call#
-> Min/Max TR (mins) - Min and Max Tuned Retention (minutes)
-> STO - Snapshot Too Old count,  OOS - Out of Space count
-> Undo segment block stats:
-> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed
       ,  a.top_level_call_name
-> eS - expired   Stolen,   eR - expired   Released,   eU - expired   reUsed

Undo   Num Undo       Number of  Max Qry   Max Tx Min/Max   STO/     uS/uR/uU/
 TS# Blocks (K)    Transactions  Len (s) Concurcy TR (mins) OOS      eS/eR/eU
       ,  a.program
---- ---------- --------------- -------- -------- --------- ----- --------------
   5	   56.2 	 41,885      961       21 39.1/39.1 0/0   0/0/0/0/0/0
			  ------------------------------------------------------

       ,  a.module
Undo Segment Stats			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Most recent 35 Undostat rows, ordered by Time desc

		Num Undo    Number of Max Qry  Max Tx Tun Ret STO/    uS/uR/uU/
       ,  a.action
End Time	  Blocks Transactions Len (s)	Concy  (mins) OOS     eS/eR/eU
------------ ----------- ------------ ------- ------- ------- ----- ------------
08-Feb 17:42	  56,156       41,885	  961	   21	   39 0/0   0/0/0/0/0/0
			  ------------------------------------------------------
       ,  a.client_id


Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
       ,  a.remote_instance#	
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
       ,  a.ecid
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
       ,  a.consumer_group_id
AQ Background: interrupt	      1    0.0		   0	       22    0.0
AQ Coord jobx_kwsbgsgn l	     20    0.0		   0		0    N/A
AQ Message drive state o	      1    0.0		   0		0    N/A
AQ Sharded master pool l	     20    0.0		   0		0    N/A
       ,  a.machine
AQ deq hash table latch 	      1    0.0		   0		0    N/A
ASM Keyed state latch		     23    0.0		   0		0    N/A
ASM allocation			 37,901    0.0		   0		0    N/A
ASM connection state lat	  5,925    0.0		   0		0    N/A
       ,  a.port
ASM db client latch		    677    0.0		   0		0    N/A
ASM map headers 		  1,960    0.0		   0		0    N/A
ASM map load waiting lis	    555    0.0		   0		0    N/A
ASM map operation freeli	    110    0.0		   0		0    N/A
       ,  a.in_connection_mgmt
ASM map operation hash t      4,922,357    0.0	  0.1	   0		0    N/A
ASM network background l	  5,206    0.0		   0		0    N/A
       ,  a.in_parse
       ,  a.in_hard_parse	
       ,  a.in_sql_execution
       ,  a.in_plsql_execution
       ,  a.in_plsql_rpc	
       ,  a.in_plsql_compilation
       ,  a.in_java_execution
       ,  a.in_bind
       ,  a.in_cursor_close
       ,  a.in_sequence_load
       ,  a.is_captured
       ,  a.is_replayed
       ,  a.dbreplay_file_id
       ,  a.dbop_name
       ,  a.con_dbid,  binds.filterRatio as sample_count
		   ,  instance_number as instance_number
		FROM AWR_ROOT_active_sess_history a,
		     binds
	       WHERE binds.diskEnable = 1
		 AND a.dbid = binds.dbid
		 AND a.instance_number between
			  binds.instIdLow
		      and binds.instIdHigh
		 AND a.snap_id between
			  binds.beginSnap
		      and binds.endSnap + 1
		 AND a.sample_time between
			  binds.beginTime
		      and binds.endTime
	     ),  logical_ash as
	     (select sample_id
		   ,  sample_time
		   ,  sample_count
		   ,  instance_number as inst_id,  wait_class as global_hist_wc, event as event, instance_number || ':' || session_id || ', ' || session_serial# as physical_session, sql_id as sqlid, wait_class as wait_class,  xid as xid,  instance_number as instance_number,  user_id as user_id,  program as program from unified_ash) ,  bucketized_ash as
	   (SELECT ash0.*,
		  (case when binds.bucketCount &gt; 1
			then trunc( ( (24 * 60 * 60 *
				       extract(day from sample_time
						      - binds.beginTime))
				    + (60 * 60 *
				       extract(hour from sample_time
						      - binds.beginTime))
				    + (60 *
				       extract(minute from sample_time
						      - binds.beginTime))
				    + (1 *
				       extract(second from sample_time
						      - binds.beginTime))
				     ) / binds.bucketInterval
				   ) + 1
			else 1
		   end) as bucket_number
	   FROM logical_ash ash0,  binds),  filter_xml as
	 (SELECT xmlconcat(xmlelement(&quot;filters&quot; )
	 ,  xmlelement(&quot;report_time&quot;, xmlattributes(
	     to_char(o.begintime,  'HH24:MI:SS MM/DD/YYYY') as &quot;begin_time&quot;,
	     to_char(o.endtime,  'HH24:MI:SS MM/DD/YYYY') as &quot;end_time&quot;))) as xml_frag FROM
    (select binds.*,  nvl(to_number(filter_pdb), 0) as con_dbid from binds) o) ,  filtered_ash as
	      (SELECT ash.*,
		      (case when 1=1  then 1 else 0 end) filtered
	       FROM bucketized_ash ash,  binds),  grouped_ash as
		   (SELECT ash.*,   (CASE WHEN nvl(filtered,  2) = 1
ASM network state latch 	    572    0.0		   0		0    N/A
				      THEN 0  -- target / no histogram
ASM remote client latch 	     10    0.0		   0		0    N/A
AWR Alerted Metric Eleme	  5,508    0.0		   0		0    N/A
Autotask management		     10    0.0		   0		0    N/A
				      ELSE 1  -- totals/global
Change Notification Hash	    256    0.0		   0		0    N/A
Column stats entry latch	      1    0.0		   0		0    N/A
Consistent RBA			 27,775    0.0	  0.1	   0		0    N/A
DML lock allocation		 74,944    0.0	  0.0	   0		0    N/A
Event Group Locks		    179    0.0		   0		0    N/A
FIB s.o chain latch		    562    0.0		   0		0    N/A
FOB consolidated s.o lis	    562    0.0		   0		0    N/A
File State Object Pool P	      1    0.0		   0		0    N/A
GCS logfile block		      1    0.0		   0		0    N/A
GCS logfile write queue 	      1    0.0		   0		0    N/A
Hang Manager wait event 	     40    0.0		   0	    7,165    0.0
				 END) AS bucket_type  FROM (SELECT filtered,  event, physical_session, sqlid, wait_class, bucket_number      ,	grouping_id(filtered,  event, physical_session, sqlid, wait_class, bucket_number) as gid , global_hist_wc  , max(inst_id)	     as inst_id
I/O Staticstics latch		      1    0.0		   0		0    N/A
ILM Stats Stripe Latch		      1    0.0		   0		0    N/A
ILM Stats main anchor la	    374    0.0		   0		0    N/A
ILM access tracking exte	      1    0.0		   0		0    N/A
ILM activity tracking la	      1    0.0		   0		0    N/A
IM Global dictionary lat	      1    0.0		   0		0    N/A
			     , sum(sample_count)       as sample_count
IM Global dictionary que	      1    0.0		   0		0    N/A
IM Global dictionary rw 	      1    0.0		   0		0    N/A
IM area sb latch		      1    0.0		   0		0    N/A
			     , count(distinct sqlid)   as uniq_sqlids
IM area scb latch		      1    0.0		   0		0    N/A
IM emb latch			      1    0.0		   0		0    N/A
IM seg hdr latch		      1    0.0		   0		0    N/A
			     , count(distinct xid)     as uniq_xids
IMFS defer write list		      1    0.0		   0		0    N/A
IMXT hash table latch		      1    0.0		   0		0    N/A
IPC other latch 		      7    0.0		   0		0    N/A
			     , count(distinct physical_session)
IPC stats buffer allocat	      1    0.0		   0		0    N/A
In memory undo latch		      1    0.0		   0		0    N/A
JS Sh mem access		    123    0.0		   0		0    N/A
						      as uniq_sessions
JS broadcast add buf lat	    139    0.0		   0		0    N/A
JS broadcast drop buf la	    139    0.0		   0		0    N/A
			     , count(distinct instance_number)
JS broadcast load blnc l	    139    0.0		   0		0    N/A
JS queue access latch		      1    0.0		   0		0    N/A
JS queue state obj latch	  5,124    0.0		   0		0    N/A
						      as uniq_instances, max(user_id) as user_id, max(program) as program from	filtered_ash
JS slv state obj latch		      1    0.0		   0		0    N/A
KCNIBR - invalid block r	      1    0.0		   0		0    N/A
KDCStatHash latch		      1    0.0		   0		0    N/A
KDFI Buffer Latch		      1    0.0		   0		0    N/A
		     group by  grouping sets(  (bucket_number,	global_hist_wc) ,  ( bucket_number,  wait_class,  filtered),  (wait_class,  filtered),	(sqlid,  wait_class,  filtered),  (physical_session,  wait_class,  filtered),  (wait_class,  event,  filtered)) ) ash  -- eliminate rows with filtered = 0
KDFI Hash Bucket Latch		      1    0.0		   0		0    N/A
KDFI Hash Elem Latch		      1    0.0		   0		0    N/A
KDMADO action list latch	      1    0.0		   0		0    N/A
KDMADO bll latch		      1    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
		     -- keep filtered and from global/total
KDMADO latch			      1    0.0		   0		0    N/A
KFC FX Hash Latch		      1    0.0		   0		0    N/A
KFC Hash Latch			      1    0.0		   0		0    N/A
KFCL LE Freelist		      1    0.0		   0		0    N/A
		     WHERE (nvl(filtered,  2) != 0)),  component_1_treemap as
KFIAS client latch		      1    0.0		   0		0    N/A
KFIAS cluster latch		      1    0.0		   0		0    N/A
KFIAS endpoint latch		      1    0.0		   0		0    N/A
		  (select dim_val
KFIAS node latch		      1    0.0		   0		0    N/A
KFIAS process latch		      1    0.0		   0		0    N/A
KFIAS queue latch		      1    0.0		   0		0    N/A
			 , inst_id
KFK SGA Libload latch		  4,448    0.0		   0		0    N/A
KFMD SGA			    350    0.0		   0		0    N/A
KGNFS-NFS:SHM structure 	      1    0.0		   0		0    N/A

KGNFS-NFS:SVR LIST		    205    0.0		   0		0    N/A
KJC message pool KGH cal	  1,582    0.0		   0		5    0.0
KJC message pool free li	 76,191    0.1	  0.1	   0	  469,558    0.4
			 , sample_count
			 , num_mem
KJC message pool pending	      1    0.0		   0		0    N/A
KJCT flow control latch       1,795,863    0.1	  0.0	   0		0    N/A
			 , mem_rank
KMG MMAN ready and start	    209    0.0		   0		0    N/A
			 , uniq_sqlids
KMG resize request state	     10    0.0		   0		0    N/A
KSFS OFS ctx level paren	      1    0.0		   0		0    N/A
KSFS OFS req layer paren	      1    0.0		   0		0    N/A
			 , uniq_xids
KSFS OFS sess layer pare	      1    0.0		   0		0    N/A
KSFS Receive and Send Qu	      1    0.0		   0		0    N/A
KSFS id table parent lat	      1    0.0		   0		0    N/A
			 , uniq_sessions
KSFS ksfs_node latch		      1    0.0		   0		0    N/A
KSFSD name cache parent 	      1    0.0		   0		0    N/A
KSGL LS Segment latch		      1    0.0		   0		0    N/A
			 , uniq_instances
KSGL SGA anchor latch		      1    0.0		   0		0    N/A
KSIPC ASPC anchor latch 	      1    0.0		   0		0    N/A
KSIPC SGA allocation par	     94    0.0		   0		0    N/A
KSIPCGSN Hash Table latc	      1    0.0		   0		0    N/A
			 , 0 AS bucket_type --target(not global)/filtered bucket
KSIPCGSN Namespace latch	      1    0.0		   0		0    N/A
KSK PDB IO STAT 		      1    0.0		   0		0    N/A

KSRMA SGA anchor latch		      1    0.0		   0		0    N/A
KSRMF SGA anchor latch		      1    0.0		   0		0    N/A
KSWL SGA anchor latch		      1    0.0		   0		0    N/A

KSXR hang analysis phase	    507    0.0		   0		1    0.0
KSXR hang analysis phase	    197    0.0		   0		0    N/A
KTF sga latch			      2    0.0		   0	      251    0.0
		    from (select max(case when mem_rank &lt;= 13
KTILM latch			      1    0.0		   0		0    N/A
KTU in-memory txn table 	      1    0.0		   0		0    N/A
KTURMA ODPSCN latch		      1    0.0		   0		0    N/A
KTURMA SGA allocation pa	      1    0.0		   0		0    N/A
				   then dim_val
KWQMN job cache list lat	    103    0.0		   0		0    N/A
Latch for NonceHistory		      1    0.0		   0		0    N/A
Locator state objects po	      1    0.0		   0		0    N/A
Lost write change tracki	      1    0.0		   0		0    N/A
Lsod array latch		     23    0.0		   0		0    N/A
MGA asr alloc latch		     10    0.0		   0		0    N/A
MGA heap latch			     47    0.0		   0		0    N/A
				   else null
MGA shared context latch	  1,951    0.0		   0		0    N/A
MGA shared context root 	     56    0.0		   0		0    N/A
MQL Tracking Latch		      0    N/A		   0	       12    0.0
			       end)			as dim_val
Memory Management Latch 	    132    0.0		   0	      208    0.0
Memory Queue			      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
			 , sum(sample_count)		 as sample_count
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
			 , count(*)			 as num_mem
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
			 , max(case when mem_rank &lt;= 13
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
				   then mem_rank
Memory Queue Subscriber 	      1    0.0		   0		0    N/A
Message cache latch		      1    0.0		   0		0    N/A
MinActiveScn Latch		     30    0.0		   0		0    N/A
				   else (13 + 1)
Mutex				      1    0.0		   0		0    N/A
Mutex Stats			      1    0.0		   0		0    N/A
Nologging Standby SCN Ti	    203    0.0		   0		0    N/A
OS process			    487    0.0		   0		0    N/A
			       end)			as mem_rank
OS process allocation		  1,253    0.0		   0		0    N/A
OS process: request allo	     23    0.0		   0		0    N/A
PDB Hash Table Latch		      1    0.0		   0		0    N/A
			 , max(case when mem_rank &lt;= 13
PDB LRU structure		      1    0.0		   0		0    N/A
PL/SQL warning settings 	    175    0.0		   0		0    N/A
PX hash array latch		      1    0.0		   0		0    N/A
Parent latch for depende	      1    0.0		   0		0    N/A
				   then uniq_sqlids
Parent latch for query h	      1    0.0		   0		0    N/A
				   else 0
Parent latch for segment	      1    0.0		   0		0    N/A
QMT				      1    0.0		   0		0    N/A
Real-time descriptor lat	  3,346    0.0		   0		0    N/A
			       end)			as uniq_sqlids
Report Request stats lat	     30    0.0		   0		0    N/A
Report Request struct la	      4    0.0		   0		0    N/A
			 , max(case when mem_rank &lt;= 13
Request holder compeltio	      7    0.0		   0		0    N/A
Retry Ht elm latch		      1    0.0		   0		0    N/A
				   then uniq_xids
Retry bkt latch 		      1    0.0		   0		0    N/A
SGA IO buffer pool latch	      7    0.0		   0		7    0.0
				   else 0
SGA Logging Bkt Latch		      1    0.0		   0		0    N/A
SGA Logging Log Latch		  2,885    0.0		   0		0    N/A
SGA blob parent 		      1    0.0		   0		0    N/A
			       end)			as uniq_xids
SGA bucket locks		      1    0.0		   0		0    N/A
SGA heap locks			      1    0.0		   0		0    N/A
			 , max(case when mem_rank &lt;= 13
SGA pool locks			      1    0.0		   0		0    N/A
SO private so latch		    114    0.0		   0	       59    0.0
				   then uniq_sessions
SQL memory manager latch	      1    0.0		   0	      204    0.0
				   else 0
SQL memory manager worka	 16,374    0.0		   0		0    N/A
SR Stats Stripe Latch		      1    0.0		   0		0    N/A
Sched IM Job latch		     11    0.0		   0		0    N/A
Sched InMem Job Cache		      1    0.0		   0		0    N/A
Shared B-Tree			     23    0.0		   0		0    N/A
Streams Generic 		      1    0.0		   0		0    N/A
Subscriber Ht elm latch 	      1    0.0		   0		0    N/A
Testing 			      1    0.0		   0		0    N/A
Token Manager			      1    0.0		   0		0    N/A
Txn Ht elm latch		      1    0.0		   0		0    N/A
			       end)			as uniq_sessions
Txn bkt latch			      1    0.0		   0		0    N/A
UM object latch 		      1    0.0		   0		0    N/A
WCR: sync			      1    0.0		   0		0    N/A
Write State Object Pool 	      1    0.0		   0		0    N/A
			 , max(case when mem_rank &lt;= 13
X$KSFQP 			      1    0.0		   0		0    N/A
XDB NFS Security Latch		      1    0.0		   0		0    N/A
				   then uniq_instances
XDB unused session pool 	      1    0.0		   0		0    N/A
XDB used session pool		      1    0.0		   0		0    N/A
active checkpoint queue 	 55,232    0.0		   0		0    N/A
active service list		  4,438    0.0		   0	      794    0.0
				   else 0
archive destination		     20    0.0		   0		0    N/A
begin backup scn array		     22    0.0		   0		0    N/A
buffer pool			      6    0.0		   0		0    N/A
			       end)			as uniq_instances
business card			    337    0.0		   0		0    N/A
cache buffer handles		      1    0.0		   0		0    N/A
cache buffers chains	     12,487,191    0.0	  0.0	   0	8,741,590    0.0
cache buffers lru chain       3,896,992    0.0	  0.0	   0	1,929,656    0.2
			 , max(inst_id) 		 as inst_id
cache table scan latch		     37    0.0		   0	       37    0.0

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 81-82

-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests

-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
		     from (select wait_class as dim_val
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
call allocation 		  2,123    0.0		   0		0    N/A
				 , sample_count
change notification clie	      1    0.0		   0		0    N/A
				 , dense_rank() over
channel handle pool latc	     47    0.0		   0		0    N/A
channel operations paren	  3,778    0.0	  0.0	   0		2    0.0
checkpoint queue latch	      2,097,604    0.0	  0.1	   0	1,706,233    0.0
				    (order by sample_count desc
client/application info 	     64    0.0		   0		0    N/A
compile environment latc	    175    0.0		   0		0    N/A
cp handoff latch		      1    0.0		   0		0    N/A
cp pool latch			      1    0.0		   0		0    N/A
					     , wait_class) as mem_rank
cp server hash latch		      1    0.0		   0		0    N/A
cp sga latch			     10    0.0		   0		0    N/A
cp srv type state latch 	    613    0.0		   0		0    N/A
cp srv type wait latch		      1    0.0		   0		0    N/A
				 , uniq_sqlids
cr slave free list		      1    0.0		   0		0    N/A
cvmap freelist lock		      1    0.0		   0		0    N/A
deferred cleanup latch		     10    0.0		   0		0    N/A
				 , uniq_xids
dispatcher info 		      8    0.0		   0		0    N/A
dml lock allocation		     10    0.0		   0		0    N/A
done queue latch		      1    0.0		   0		0    N/A
dtp latch			     23    0.0		   0		0    N/A
				 , uniq_sessions
dummy allocation		    368    0.0		   0		0    N/A
eighth spare latch - X p	      1    0.0		   0		0    N/A
eleventh spare latch - c	      1    0.0		   0		0    N/A
				 , uniq_instances
enqueue freelist latch		      1    0.0		   0	   22,754    0.0
enqueue hash chains		254,142    0.0	  0.2	   0	       53    0.0
enqueues			     96    0.0		   0		0    N/A
error message lists		    838    0.0		   0		0    N/A
				 , inst_id
fast space usage latch		     20    0.0		   0		0    N/A
fifteenth spare latch - 	      1    0.0		   0		0    N/A
file cache latch		    193    0.0		   0		0    N/A

flash file access latch 	      1    0.0		   0		0    N/A
flashback copy			      1    0.0		   0		0    N/A
fourteenth spare latch -	      1    0.0		   0		0    N/A
fourth Audit Vault latch	      1    0.0		   0		0    N/A

gc element		      6,118,700    0.0	  0.1	   0	5,186,649    0.0
gc imc list			     48    0.0		   0		0    N/A
gc xid list			     86    0.0		   0		0    N/A
gcr global ctx			    193    0.0		   0		0    N/A
			     from grouped_ash
gcs affinity object free	      1    0.0		   0		0    N/A
gcs commit scn state		      1    0.0		   0		0    N/A
gcs nodemap pool		 52,655    0.0	  0.0	   0		0    N/A
			    where gid = 29
gcs opaque info freelist	 86,219    0.0	  0.0	   0		0    N/A
gcs partitioned table ha      4,202,311    0.0	  0.0	   0	  166,667    0.0
gcs pcm hashed value buc	      1    0.0		   0		0    N/A
gcs remaster request que	      2    0.0		   0		0    N/A
			      and wait_class is not null)
gcs remastering latch		 14,265    0.1	  0.0	   0	    1,838    0.0
gcs resource freelist		773,071    0.0	  0.1	   0	  285,087    0.1
gcs resource hash	      6,733,147    0.0	  0.3	   0	      282    0.0
		    group by (case when mem_rank &lt;= 13
gcs resource scan list		      9    0.0		   0		0    N/A
gcs resource timerq list	      1    0.0		   0		0    N/A
gcs resource validate li	      1    0.0		   0		0    N/A
gcs shadows freelist		494,738    0.0		   0		0    N/A
				   then dim_val
ges cached resource list	 90,710    0.0	  0.0	   0	   26,041    0.0
ges deadlock list		    406    0.0		   0		0    N/A
ges domain table		240,715    0.0		   0		0    N/A
				   else null
ges enqueue table freeli	 79,279    0.0	  0.2	   0		0    N/A
ges group table 		243,056    0.0		   0		0    N/A
ges process hash list		  2,679    0.0		   0		0    N/A
ges process parent latch	486,023    0.0	  0.5	   0		0    N/A
			       end)
ges process table freeli	     23    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 81-82

-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0
		  ) left   ) ,	component_1_histogram as

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
		  (select bucket_number
------------------------ -------------- ------ ------ ------ ------------ ------
ges remote lock freelist	    850    0.0		   0		0    N/A
			 , sum(sample_count)		as sample_count
ges resource hash list		329,964    0.0	  0.3	   0	    7,484    0.0
ges resource scan list		      1    0.0		   0		0    N/A
			 , max(case when mem_rank &lt;= 13
ges resource table freel	 14,648    0.0	  0.0	   0		0    N/A
ges s-lock bitvec freeli	  4,536    0.0		   0		0    N/A
ges timeout list		    867    0.0		   0	      141    0.0
ges value block free lis	      1    0.0		   0		0    N/A
global tx hash mapping		      1    0.0		   0		0    N/A
granule from data transf	      1    0.0		   0		0    N/A
				   then mem_rank
gws:Sharding global desc	     42    0.0		   0		0    N/A
hash table Sql Plan Find	     27    0.0		   0	      268    0.0
hash table column usage 	    140    0.0		   0	   28,614    0.0
				   when mem_rank is not null
hash table expression us	      1    0.0		   0		0    N/A
hash table sql contorl l	      1    0.0		   0		0    N/A
heartbeat check 		      1    0.0		   0	      278    0.0
heartbeat structure mana	      0    N/A		   0	      324    0.0
				   then (13 + 1)
imc buf hdl lat 		      1    0.0		   0		0    N/A
imc cr clone buf		      1    0.0		   0		0    N/A
imc hash lat			      1    0.0		   0		0    N/A
imc sj lat			      1    0.0		   0		0    N/A
			       end)			as mem_rank
imc srchsp lat			      1    0.0		   0		0    N/A
imc-txn-wrk-lat 		      1    0.0		   0		0    N/A
in-memory area latch		      1    0.0		   0		0    N/A
in-memory columnar segme	      1    0.0		   0		0    N/A
			 , bucket_type
in-memory columnar ts ex	      1    0.0		   0		0    N/A
in-memory global pool la	      1    0.0		   0		0    N/A
internal temp table obje	    477    0.0		   0		0    N/A
interrupt manipulation		    856    0.0		   0		0    N/A

intra txn parallel recov	      1    0.0		   0		0    N/A
io pool granule list		    174    0.0		   0		0    N/A
io pool granule metadata	    351    0.0		   0		0    N/A
		    from (select g1.bucket_number
job workq parent latch		      1    0.0		   0		0    N/A
job_queue_processes para	     10    0.0		   0		0    N/A
k2q global data latch		    409    0.0		   0		0    N/A
k2q lock allocation		      1    0.0		   0		0    N/A
				, g1.sample_count	 as sample_count
kKCN Cqn SGA			      1    0.0		   0		0    N/A
kcb DW scan objtemp hash	      1    0.0		   0		0    N/A
kcn buffer chains		      1    0.0		   0		0    N/A
kdlx hb parent latch		      1    0.0		   0		0    N/A
				, (case when g1.wait_class = g2.dim_val
kgb parent			      1    0.0		   0		0    N/A
kgnfs mount latch		      1    0.0		   0		0    N/A
kjbr roi instance map		      1    0.0		   0		0    N/A
kjci objects freelist la	  1,057    0.0		   0		0    N/A

kjci process context lat	    719    0.7	  0.0	   0	   60,300    0.0
kjci process list latch 	    483    0.0		   0		0    N/A
kjci request sequence la	     64    0.0		   0		0    N/A
kjcipctx state object fr	     19    0.0		   0		0    N/A
				       then to_char(g2.dim_val)
kjoedcso state object fr	     10    0.0		   0		0    N/A
kjoeq omni enqueue hash 	      1    0.0		   0		0    N/A
kjoer owner hash bucket 	      1    0.0		   0		0    N/A
kjpm my inst data		     20    0.0		   0		0    N/A
				       -- global/totals
kjsc Request obj freelis	     46    0.0		   0		0    N/A
kjsc Ring Buffer obj fre	     23    0.0		   0		0    N/A
kjsc protect control req	     23    0.0		   0	    6,133    0.0
kjsc protect warm up con	    155    0.0		   0		0    N/A
				       when g1.bucket_type = 1
kjsca protect pkey hash 	  6,134    0.0		   0		0    N/A
kjsca protect service ha	      1    0.0		   0		0    N/A
kjscpss state object fre	     23    0.0		   0		0    N/A
kokc descriptor allocati	    590    0.0		   0		0    N/A
				       then g1.global_hist_wc
kpoxft latch			      0    N/A		   0	       18    0.0

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
				       else null
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
krso process			     21    0.0		   0		0    N/A
ksevn object root latch 	    204    0.0		   0		0    N/A
ksfv messages			      1    0.0		   0		0    N/A
				   end) 		as dim_val
ksi resource reuse count	      1    0.0		   0		0    N/A
ksim group membership ca	  2,563    0.0		   0		0    N/A
ksim membership request 	      0    N/A		   0	      272    0.0
ksns object latch		      1    0.0		   0		0    N/A
kss move lock			      7    0.0		   0		0    N/A
ksuosstats global area		     85    0.0		   0	      234    0.0
ksutcpistat latch		      1    0.0		   0		0    N/A
ksv allocation latch		     21    0.0		   0		0    N/A
				, (case when g1.wait_class = g2.dim_val
ksv class latch 		 17,833    0.0	  0.3	   0		0    N/A
ksv msg queue latch		    683    0.0		   0	      682    0.0
ksxp shared latch		     23    0.0		   0		0    N/A
ksxp so latch			     23    0.0		   0		0    N/A
ksz_so allocation latch 	     23    0.0		   0		0    N/A
ktfbn latch			    131    0.0		   0		0    N/A

ktm adg jrnls			      1    0.0		   0		0    N/A
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
ktm adg space			      1    0.0		   0		0    N/A
ktm adg stages			      1    0.0		   0		0    N/A
ktm adg worklink		      1    0.0		   0		0    N/A
ktm global data 		     11    0.0		   0		0    N/A
				       then g2.mem_rank
ktm prv jrnls			      1    0.0		   0		0    N/A
ktmpj HT ls			      1    0.0		   0		0    N/A
kwqbsn:qsga			     22    0.0		   0		0    N/A
kwslbmdl: metadata latch	     21    0.0		   0		0    N/A
kwslbql: queue latch		      1    0.0		   0		0    N/A
				       when g1.bucket_type = 1 then NULL
kwslbutl: uncommitted tx	      1    0.0		   0		0    N/A
kwsptQcachLt: queue cach	      1    0.0		   0		0    N/A
kwsptTrncTsksLt: trunc t	      1    0.0		   0		0    N/A
kwsptjobAdPtLt: AdPt lis	     15    0.0		   0		0    N/A
kwsslLat: skiplist latch	      1    0.0		   0		0    N/A
				       else (13 + 1)
kxfxscanrate_latch		      1    0.0		   0		0    N/A
lgwr LWN SCN			 28,018    0.1	  0.3	   0		0    N/A
list of block allocation	     59    0.0		   0		0    N/A
loader state object free	    106    0.0		   0		0    N/A
lob segment dispenser la	     77    0.0		   0		0    N/A
lob segment hash table l	     75    0.0		   0		0    N/A
lob segment query latch 	      1    0.0		   0		0    N/A
lock DBA buffer during m	      1    0.0		   0		0    N/A
log write info			      0    N/A		   0	   28,348    2.9
				   end) 		as mem_rank
log write worker phase		  6,087    0.0		   0		0    N/A
logical standby cache		      1    0.0		   0		0    N/A
logminer context allocat	      1    0.0		   0		0    N/A
logminer local			      1    0.0		   0		0    N/A
				,  g1.bucket_type
logminer work area		      1    0.0		   0		0    N/A
longop free list parent 	      1    0.0		   0		0    N/A
managed standby 		     20    0.0		   0		0    N/A
message bitmap latch		      1    0.0		   0		0    N/A

message pool operations 	  1,280    0.0		   0		0    N/A
messages			256,069    0.0	  0.0	   0		0    N/A
msg queue latch 		      1    0.0		   0		0    N/A
multiblock read objects 	    292    0.0		   0		0    N/A
name-service memory obje	    226    0.0		   0		0    N/A
			   from grouped_ash g1,
name-service namespace b	  4,139    0.0		   0		0    N/A
name-service pending que	    162    0.0		   0		0    N/A
name-service request que	  6,538    0.0		   0		0    N/A
ncodef allocation latch 	     10    0.0		   0		0    N/A
				component_1_treemap g2

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
			  where -- both filtered and global
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				(g1.gid = 28  AND
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
ninth spare latch - X pa	      1    0.0		   0		0    N/A
				 g1.wait_class is not null OR
object queue header free	  2,785    0.0		   0	  537,729    0.0
object queue header oper      4,466,853    0.0	  0.0	   0	  551,385    0.0
				 g1.bucket_type = 1)
object queue memory		      1    0.0		   0		0    N/A
object stats modificatio	     45    0.0		   0		0    N/A
			    and g1.wait_class = g2.dim_val(+)
parallel query alloc buf	  2,779    0.0		   0	       90    0.0
parallel query stats		    617    0.0		   0		0    N/A

parallel txn reco latch 	    636    0.0		   0		0    N/A
parameter table manageme	  1,878    0.0		   0		0    N/A
			    -- join filtered rows only
pdb enqueue hash chains 	      1    0.0		   0		0    N/A
peshm				      1    0.0		   0		0    N/A
			    and g1.bucket_type = g2.bucket_type(+)
pesom_free_list 		      1    0.0		   0		0    N/A
pesom_hash_node 		      1    0.0		   0		0    N/A
pkey global statistics		      1    0.0		   0		0    N/A
pmon dead latch 		     10    0.0		   0		0    N/A
			  )
		 group by bucket_number
			 , dim_val

			 , bucket_type
		  ) ,  component_1_xml as
		(select xmlelement(&quot;item&quot;
			 , xmlattributes('wait_class' as &quot;id&quot;
				       , topmems.cnt_all as &quot;count&quot;
				       , topmems.num_mem as &quot;num_mem&quot;
				       , topmems.num_others as &quot;num_others&quot;)		   , xmlconcat(
			    topmems.topmems_frag
			   , histogram.histogram_xml)) as dim_frag from (select xmlelement(
post/wait queue 		 40,865    0.1	  0.0	   0	   41,023    0.1
			   &quot;top_mems&quot;
process allocation		  3,044    0.0		   0		0    N/A
process group creation		     23    0.0		   0		0    N/A
process memory detail		      1    0.0		   0		0    N/A
process pkey statistics 	      1    0.0		   0		0    N/A
			  , xmlattributes(sum(case when mem_rank &lt;= 13
process queue			  1,188    0.0		   0		0    N/A
process queue reference 	 33,495    0.0	  0.0	   0	    3,548    4.5
qmn task queue latch		     91    0.0		   0		0    N/A
						  then sample_count
quarantine object		     10    0.0		   0		0    N/A
query server freelists		  1,519    0.0		   0		0    N/A
query server process		    441    0.0		   0		0    N/A
						  else 0
queued dump request		      2    0.0		   0		0    N/A
queuing load statistics 	      1    0.0		   0		0    N/A
read-moslty lock queue u	      1    0.0		   0		0    N/A
recovery domain hash buc	  2,268    0.0		   0		0    N/A
					      end) as &quot;count&quot;)
redo allocation 		106,009    1.6	  0.1	   0	1,234,448    0.8
redo copy			      1    0.0		   0	1,237,107    0.1
redo transport task		      1    0.0		   0		0    N/A
			     , xmlagg(xmlelement(
redo writing			158,634    0.0	  0.1	   0		0    N/A
remote tool request latc	    192    0.0		   0		0    N/A
resmgr group change latc	    450    0.0		   0		0    N/A
resmgr:active threads		    585    0.0		   0	    6,031    0.0
					&quot;mem&quot;
resmgr:actses change gro	    231    0.0		   0		0    N/A
resmgr:actses change sta	      3    0.0		   0		0    N/A
resmgr:free threads list	    469    0.2	  0.0	   0		0    N/A
				       , xmlattributes(mem_rank 	 as &quot;id&quot;
resmgr:plan CPU method		      1    0.0		   0		0    N/A
resmgr:plan change alloc	      1    0.0		   0		0    N/A
resmgr:plan change latch	      1    0.0		   0		0    N/A
resmgr:resource group CP	     61    0.0		   0		0    N/A
resmgr:schema config		    148    0.0		   0	       10    0.0
resmgr:session queuing		      1    0.0		   0		0    N/A
row cache objects		      1    0.0		   0		0    N/A
rt rmv count latch		      0    N/A		   0	      305    0.0
second Audit Vault latch	      1    0.0		   0		0    N/A
segmented array pool		    562    0.0		   0		0    N/A
sequence cache			    152    0.0		   0		0    N/A
service drain list		    611    0.0		   0		0    N/A
session allocation		 19,795    0.0		   0	   19,344    0.0
session idle bit		 40,756    0.0	  0.0	   0		0    N/A
session queue latch		      1    0.0		   0		0    N/A
session state list latch	    484    0.0		   0		0    N/A
session statistics		    368    0.0		   0		0    N/A
session switching		     31    0.0		   0		0    N/A
						     , dim_val		 as &quot;name&quot;
session timer			    204    0.0		   0		0    N/A
seventh spare latch - X 	      1    0.0		   0		0    N/A

Latch Activity				   DB/Inst: P30DB/p30db2  Snaps: 81-82

-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
						     , sample_count	 as &quot;count&quot;
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
						     , uniq_sqlids	 as &quot;uniq_sqlids&quot;
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
sga hash table parent la	      1    0.0		   0		0    N/A
shard latch			      1    0.0		   0		0    N/A
shardgroup list latch		    800    0.0		   0		0    N/A
shared pool			126,931    0.0	  0.3	   0	    1,564    0.0
shared pool sim alloc		     15    0.0		   0		0    N/A
shared pool simulator		  9,954    0.0		   0		0    N/A
shared server configurat	    205    0.0		   0		0    N/A
sim partition latch		      1    0.0		   0		0    N/A
simulator hash latch		310,037    0.0	  0.0	   0		0    N/A
simulator lru latch		    406    0.0		   0	  170,560    0.0
sixth spare latch - X pa	      1    0.0		   0		0    N/A
						     , uniq_xids	 as &quot;uniq_xids&quot;
sort extent pool		    343    0.0		   0		0    N/A
space background task la	  1,530   48.2	  0.8	   0	      392    5.4
state object free list		      2    0.0		   0		0    N/A
statistics aggregation		    145    0.0		   0		0    N/A
subscriber Ht bkt		      1    0.0		   0		0    N/A
tablespace key chain		      1    0.0		   0		0    N/A
temp lob duration state 	      8    0.0		   0		0    N/A
						     , uniq_sessions	 as &quot;uniq_sessions&quot;
temporary table state ob	    154    0.0		   0		0    N/A
tenth spare latch - X pa	      1    0.0		   0		0    N/A
test excl. parent l0		      1    0.0		   0		0    N/A
test excl. parent2 l0		      1    0.0		   0		0    N/A
						     , uniq_instances	 as &quot;uniq_instances&quot;)
test excl. parent2 lmid 	      1    0.0		   0		0    N/A
test mixed exclusive		      1    0.0		   0		0    N/A
test mode exclusive		      1    0.0		   0		0    N/A
test open exclusive		      1    0.0		   0		0    N/A

test pdb exclusive		      1    0.0		   0		0    N/A
test shared parent2 lmid	      1    0.0		   0		0    N/A
				       )
thirteenth spare latch -	      1    0.0		   0		0    N/A
threshold alerts latch		     20    0.0		   0		0    N/A
transaction allocation		    356    0.0		   0		0    N/A
twelfth spare latch - ch	      1    0.0		   0		0    N/A
				order by sample_count desc))
twenty-fifth spare latch	      1    0.0		   0		0    N/A
twenty-first spare latch	      1    0.0		   0		0    N/A
twenty-fourth spare latc	      1    0.0		   0		0    N/A
						 as topmems_frag
twenty-second spare latc	      1    0.0		   0		0    N/A
twenty-third spare latch	      1    0.0		   0		0    N/A
undo global data		163,631    0.0	  0.2	   0		0    N/A
virtual circuit buffers 	      1    0.0		   0		0    N/A
			  , sum(case when mem_rank &lt;= 13
virtual circuit holder		      1    0.0		   0		0    N/A
virtual circuit queues		      1    0.0		   0		0    N/A
			  ------------------------------------------------------

				    then 1

Latch Sleep Breakdown			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> ordered by misses desc

				    else 0
				       Get				   Spin
Latch Name			  Requests	 Misses      Sleeps	   Gets
-------------------------- --------------- ------------ ----------- -----------
				end)		 as num_mem
KJCT flow control latch 	 1,795,863	  2,596 	106	  2,498
redo allocation 		   106,009	  1,682 	176	  1,514
cache buffers lru chain 	 3,896,992	  1,486 	 60	  1,430
gc element			 6,118,700	    994 	 67	    932
			  , sum(sample_count)	  as cnt_all
gcs resource hash		 6,733,147	    895 	246	    662
space background task latc	     1,530	    737 	588	    207
gcs resource freelist		   773,071	    270 	 40	    237
enqueue hash chains		   254,142	    107 	 25	     84
object queue header operat	 4,466,853	     93 	  4	     89
cache buffers chains		12,487,191	     83 	  4	     79
checkpoint queue latch		 2,097,604	     78 	 11	     68
			  , max(case when mem_rank &lt;= 13
ASM map operation hash tab	 4,922,357	     75 	  6	     69
messages			   256,069	     60 	  1	     59
KJC message pool free list	    76,191	     59 	  7	     52
redo writing			   158,634	     29 	  2	     27
lgwr LWN SCN			    28,018	     28 	  7	     21
undo global data		   163,631	     22 	  4	     18
shared pool			   126,931	     20 	  6	     17
				    then 0
ges enqueue table freelist	    79,279	     19 	  3	     16
ges resource hash list		   329,964	     14 	  4	     10
Consistent RBA			    27,775	     10 	  1	      9
ges process parent latch	   486,023	      4 	  2	      2
ksv class latch 		    17,833	      4 	  1	      3
			  ------------------------------------------------------

				    else num_mem

Latch Miss Sources			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> only latches with sleeps are shown
-> ordered by name, sleeps desc
				end)		 as num_others

						     NoWait		 Waiter
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
		     from (component_1_treemap) t
ASM map operation hash t kffmTranslate			  0	     5	      5
ASM map operation hash t kffmDoDone_1			  0	     1	      0
KJC message pool free li kjcspfmbq: free vector of	  0	     4	      0
		   ) topmems , (SELECT xmlagg(
KJC message pool free li kjcsmpav: allocate a msg b	  0	     3	      7
KJCT flow control latch  kjcts_sedeqv3: dequeue a v	  0	    36	     12
			  xmlelement(
KJCT flow control latch  kjctcsnd: send normal mess	  0	    32	     39
KJCT flow control latch  kjcts_sqenq: queue a messa	  0	    23	     42
KJCT flow control latch  kjcts_adjtkt: adjust send	  0	     9	      5
KJCT flow control latch  kjctr_updatetkt: update ti	  0	     4	      3
			   &quot;histogram&quot;
KJCT flow control latch  kjcts_sqenq2: queue a mess	  0	     2	      5
cache buffers chains	 kcbbic2			  0	     2	      0
cache buffers chains	 kcbbic1			  0	     1	      0
			  , xmlattributes(
cache buffers chains	 kcbzwb 			  0	     1	      0
cache buffers lru chain  kcbzgb_2			  0	    31	     10
cache buffers lru chain  kcbzgws			  0	    15	      0
cache buffers lru chain  kcbw_activate_granule		  0	     9	      1
cache buffers lru chain  kcbbwlru			  0	     3	      1
cache buffers lru chain  kcbbxsv: move to being wri	  0	     1	      0
			     (case when bucket_type = 1 then 'all'
cache buffers lru chain  kcbw_quiesce_granule		  0	     1	      5
checkpoint queue latch	 kcbklbc_cql			  0	    11	      0
				   else 'target'
gc element		 kclnfndnewm			  0	    42	     16
gc element		 kclfwrite1			  0	     9	      3
gc element		 kclpdcl			  0	     3	      2
gc element		 kclplz 			  0	     3	      0
gc element		 KCLUNLNK			  0	     2	     15
gc element		 kcl_get_le_latch		  0	     2	      0
gc element		 kclrwrite			  0	     2	      3
gc element		 kclulb 			  0	     2	     11
gc element		 kclchkping			  0	     1	      0
			      end) AS &quot;type&quot;
gc element		 kclplz_1			  0	     1	      1
gcs remastering latch	 kjfcdrmrfg beginning		  0	     1	      0
gcs resource freelist	 kjbralc: check freelist no	  0	    28	      0
gcs resource freelist	 kjbralc add resource		  0	     6	     22
			    , max(binds.bucketCount)	as &quot;bucket_count&quot;
gcs resource freelist	 kjbrralc: reserve allocati	  0	     4	      4
gcs resource freelist	 kjbrfr_bg2			  0	     2	     14
gcs resource hash	 kclfwrite1			  0	   137	     25
gcs resource hash	 kjbopen			  0	    52	     33
			    , max(binds.bucketInterval) as &quot;bucket_interval&quot;)
gcs resource hash	 kjbrrcfwst			  0	    13	      0
gcs resource hash	 kclpdc 			  0	    12	     95
gcs resource hash	 kjbassume			  0	    10	     11
gcs resource hash	 kjbmpopen			  0	     5	     10
			  , xmlagg(bucket_xml
gcs resource hash	 kclrwrite			  0	     4	      6
gcs resource hash	 kjbcropen			  0	     3	      1
gcs resource hash	 kjblocalobj_nolock		  0	     3	      5
gcs resource hash	 kjbmpflushpi			  0	     2	     18
				    order by
gcs resource hash	 kjbrrcres_99			  0	     2	      0
gcs resource hash	 kjbclose_remaster		  0	     1	      7
gcs resource hash	 kjblpast			  0	     1	      0
gcs resource hash	 kjbmpclose			  0	     1	     17
				      bucket_type,
ges enqueue table freeli kjlalc: lock allocation	  0	     3	      2
ges process parent latch kjata_fg			  0	     2	      0
ges resource hash list	 kjakcai: search for resp b	  0	     2	      0
				      bucket_number asc)
ges resource hash list	 kjlmfnd: search for lockp	  0	     1	      1
ges resource hash list	 kjrmas1: lookup master nod	  0	     1	      0
ksv class latch 	 ksvclsl: checkpool		  0	     1	      0
				     )
messages		 ksarcv 			  0	     1	      0
mostly latch-free SCN	 kcs024 			  0	     4	      0
mostly latch-free SCN	 kcslcu3			  0	     3	      7
				 ) as histogram_xml
mostly latch-free SCN	 kcsnew_scn_rba 		  0	     1	      0
object queue header oper kcbo_unlink_q			  0	     3	      3

Latch Miss Sources			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> only latches with sleeps are shown
-> ordered by name, sleeps desc

						     NoWait		 Waiter
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
object queue header oper kcbo_switch_cq 		  0	     1	      0
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	   160	      0
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	     6	    109
redo allocation 	 kcrfw_post: more space 	  0	     5	     32
redo allocation 	 kcrfw_redo_write: before w	  0	     3	     35
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	     2	      0
		  FROM (SELECT	bucket_type
redo writing		 kcrfw_post: rba scn pair	  0	     1	      0
redo writing		 kcrfwcr			  0	     1	      1
space background task la ktsj_grab_task 		  0	   431	    569
space background task la ktsj_detach_task		  0	   102	     19
			       , bucket_number
space background task la ktsj_smco_purgeexpired 	  0	    49	      0
space background task la ktsj_smco_movetasks		  0	     6	      0
undo global data	 ktusmupst: KSLBEGIN		  0	     3	      3
undo global data	 ktudba: KSLBEGIN		  0	     1	      0
			       , xmlelement(
unknown latch		 ksqcmi: if lk mode not req	  0	    11	      1
unknown latch		 ksqgtl3			  0	     8	      9
unknown latch		 ksqrcl 			  0	     5	     14
unknown latch		 kghalo 			  0	     4	      3
				&quot;bucket&quot;
unknown latch		 kghfrunp: alloc: wait		  0	     2	      0
unknown latch		 ksqcmi: if lk mode request	  0	     1	      0
			  ------------------------------------------------------

			       , xmlattributes(bucket_number	 as &quot;number&quot;
Mutex Sleep Summary			   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------

					     , sum(sample_count) as &quot;count&quot;)

Parent Latch Statistics 		   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			       , (case
			  ------------------------------------------------------

Child Latch Statistics			   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------


Segments by Logical Reads		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total Logical Reads:       1,534,097
-> Captured Segments account for   81.3% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				 Logical
				 when bucket_type = 0 then -- filtered rows
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER9		     IOPS
CF1				TABLE	   73439      73445	  72,480    4.72
USER7		     IOPS
CF1				TABLE	   73433      73436	  69,392    4.52
USER18		     IOPS
CF1				TABLE	   73492      73497	  66,128    4.31
USER13		     IOPS
				   xmlelement(
CF1				TABLE	   73458      73466	  65,824    4.29
USER19		     IOPS
CF1				TABLE	   73485      73498	  65,664    4.28
			  ------------------------------------------------------
				    &quot;top_mems&quot;

Segments by Physical Reads		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total Physical Reads:       1,094,434
-> Captured Segments account for   98.4% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
				   , xmlattributes(
		     Subobject	Obj.				Physical
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
				     sum(case when mem_rank &lt;= 13
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER9		     IOPS
CF1				TABLE	   73439      73445	  69,595    6.36
USER7		     IOPS
CF1				TABLE	   73433      73436	  66,689    6.09
					      then sample_count
USER18		     IOPS
CF1				TABLE	   73492      73497	  63,397    5.79
USER13		     IOPS
CF1				TABLE	   73458      73466	  62,981    5.75
USER21		     IOPS
					      else 0
CF1				TABLE	   73503      73505	  62,893    5.75
			  ------------------------------------------------------

Segments by Physical Read Requests	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total Physical Read Requests:       1,093,641
-> Captured Segments account for   98.5% of Total
					  end) as &quot;count&quot;)
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			       Phys Read
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER9		     IOPS
CF1				TABLE	   73439      73445	  69,595    6.36
USER7		     IOPS
CF1				TABLE	   73433      73436	  66,689    6.10
USER18		     IOPS
CF1				TABLE	   73492      73497	  63,397    5.80
USER13		     IOPS
CF1				TABLE	   73458      73466	  62,981    5.76
USER21		     IOPS
CF1				TABLE	   73503      73505	  62,893    5.75
			  ------------------------------------------------------

				   , xmlagg(
Segments by UnOptimized Reads		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total UnOptimized Read Requests:	  1,093,641
-> Captured Segments account for   98.5% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available
				     xmlelement(

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			     UnOptimized
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER9		     IOPS
CF1				TABLE	   73439      73445	  69,595    6.36
				       &quot;mem&quot;
USER7		     IOPS
CF1				TABLE	   73433      73436	  66,689    6.10
USER18		     IOPS
CF1				TABLE	   73492      73497	  63,397    5.80
USER13		     IOPS
				       , xmlattributes(
CF1				TABLE	   73458      73466	  62,981    5.76
USER21		     IOPS
CF1				TABLE	   73503      73505	  62,893    5.75
			  ------------------------------------------------------

					  mem_rank     as &quot;id&quot;
Segments by Optimized Reads		   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------

					 , sample_count as &quot;count&quot;))
Segments by Direct Physical Reads	   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------
				     order by mem_rank asc))

Segments by Physical Writes		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total Physical Writes:	  750,663
-> Captured Segments account for   96.4% of Total
				 end)) as bucket_xml
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
			 FROM (component_1_histogram)
		     Subobject	Obj.				Physical
Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
CF1				TABLE	   73481      73483	  55,879    7.44
			 GROUP BY bucket_number,  bucket_type),  binds
USER9		     IOPS
CF1				TABLE	   73439      73445	  44,377    5.91
USER7		     IOPS
CF1				TABLE	   73433      73436	  43,328    5.77
USER1		     IOPS
		  GROUP by bucket_type) histogram ),  component_2_xml as
CF1				TABLE	   73402      73404	  41,838    5.57
USER13		     IOPS
CF1				TABLE	   73458      73466	  41,198    5.49
			  ------------------------------------------------------

	     (select xmlelement(
Segments by Physical Write Requests	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total Physical Write Requests:	  695,441
-> Captured Segments account for   99.9% of Total
			&quot;item&quot;
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.			      Phys Write
		       , xmlattributes(
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
CF1				TABLE	   73481      73483	  55,757    8.02
USER9		     IOPS
CF1				TABLE	   73439      73445	  42,170    6.06
USER7		     IOPS
CF1				TABLE	   73433      73436	  41,404    5.95
USER1		     IOPS
			   'sqlid, wait_class' as &quot;item&quot;)
CF1				TABLE	   73402      73404	  40,019    5.75
USER13		     IOPS
CF1				TABLE	   73458      73466	  39,414    5.67
			  ------------------------------------------------------

			  , xmlelement(
Segments by Direct Physical Writes	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total Direct Physical Writes:	     909
-> Captured Segments account for    8.6% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

			      &quot;top_mems&quot;
		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				  Direct
Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
			     , xmlagg(
-------------------- ---------- ----- ---------- ---------- ------------ -------
SYS		     SYSAUX
WRH$_ACTIVE_SESSION_ 3773525_79 TABLE	   74079      74079	      61    6.71
SYS		     SYSAUX
				xmlelement(
SYS_LOB0000007451C00 S_LOB_P256 LOB P	   73950      73950	      17    1.87
			  ------------------------------------------------------

Segments by Table Scans 		   DB/Inst: P30DB/p30db2  Snaps: 81-82

				  &quot;mem&quot;
		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by DB Blocks Changes		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> % of Capture shows % of DB Block Changes for each top segment compared
				 , xmlattributes(
-> with total DB Block Changes for all segments captured by the Snapshot
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
				    dim1_value		   as &quot;dim1_value&quot;
-------------------- ----------
		     Subobject	Obj.				DB Block    % of
Object Name	       Name	Type	    Obj#   Dataobj#	 Changes Capture
				   , dim1_nummem	    as
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER9		     IOPS
CF1				TABLE	   73439      73445	  72,464    6.42
USER7		     IOPS
CF1				TABLE	   73433      73436	  69,376    6.15
&quot;dim1_nummem&quot;
USER18		     IOPS
CF1				TABLE	   73492      73497	  66,096    5.86
USER13		     IOPS
				   , dim1_rank		    as &quot;dim1_rank&quot;
CF1				TABLE	   73458      73466	  65,808    5.83
USER19		     IOPS
				   , dim2_value 	    as &quot;dim2_value&quot;
CF1				TABLE	   73485      73498	  65,680    5.82
			  ------------------------------------------------------


Segments by Row Lock Waits		   DB/Inst: P30DB/p30db2  Snaps: 81-82
				   , dim12_nummem	    as &quot;dim2_nummem&quot;

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by ITL Waits			   DB/Inst: P30DB/p30db2  Snaps: 81-82
				   , dim12_rank 	    as &quot;dim2_rank&quot;

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by Buffer Busy Waits		   DB/Inst: P30DB/p30db2  Snaps: 81-82
				   , dim12_count	    as &quot;count&quot;

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by Global Cache Buffer Busy	   DB/Inst: P30DB/p30db2  Snaps: 81-82
				   , uniq_sqlids	    as &quot;uniq_sqlids&quot;
-> % of Capture shows % of GC Buffer Busy for each top segment compared
-> with GC Buffer Busy for all segments captured by the Snapshot
-> When ** MISSING ** occurs, some of the object attributes may not be available

				   , uniq_xids		    as &quot;uniq_xids&quot;
		     Tablespace
Owner			Name
-------------------- ----------
								      GC
		     Subobject	Obj.				  Buffer    % of
Object Name	       Name	Type	    Obj#   Dataobj#	    Busy Capture
-------------------- ---------- ----- ---------- ---------- ------------ -------
SYS		     SYSTEM
I_HH_OBJ#_INTCOL#		INDEX	      70	 70	       1  100.00
			  ------------------------------------------------------
				   , uniq_sessions	    as &quot;uniq_sessions&quot;


Segments by CR Blocks Received		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total CR Blocks Received:		 463
-> Captured Segments account for   24.0% of Total
				   , uniq_instances	    as &quot;uniq_instances&quot;
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
								   CR

		     Subobject	Obj.				 Blocks
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
SYS		     SYSAUX
				  )
WRH$_PARAMETER_PK    3773525_79 INDEX	   74065      74065	      19    4.10
SYS		     SYSAUX
WRH$_PARAMETER	     3773525_79 TABLE	   74063      74063	      12    2.59
SYS		     SYSAUX
WRH$_SYSTEM_EVENT    3773525_79 TABLE	   74031      74031	      11    2.38
				, NVL2(sql_text1,
SYS		     SYSTEM
I_HH_OBJ#_INTCOL#		INDEX	      70	 70	       9    1.94
SYS		     SYSAUX
WRH$_ACTIVE_SESSION_ 3773525_79 INDEX	   74081      74081	       8    1.73
			  ------------------------------------------------------
				      xmlelement(&quot;info&quot;

Segments by Current Blocks Received	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total Current Blocks Received:	   31,218
-> Captured Segments account for   81.4% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available
				       , xmlattributes('dim1_name' as &quot;type&quot;)

		     Tablespace
Owner			Name
-------------------- ----------
								 Current
				       , sql_text1),  NULL)
		     Subobject	Obj.				 Blocks
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER15		     IOPS
				, NVL2(NULL,
CF1				TABLE	   73472      73477	   2,869    9.19
USER19		     IOPS
CF1				TABLE	   73485      73498	   2,751    8.81
USER31		     IOPS
CF1				TABLE	   73552      73557	   1,338    4.29
USER30		     IOPS
				      xmlelement(&quot;info&quot;
I_CF1				INDEX	   73561      73561	   1,319    4.23
USER19		     IOPS
I_CF1				INDEX	   73500      73500	   1,269    4.06
			  ------------------------------------------------------

					, xmlattributes('dim2_name' as &quot;type&quot;)
Segments by Global Cache Remote Grants	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Total Global Cache Remote Grants:	     779,624
-> Captured Segments account for   98.5% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

					, NULL),  NULL)
		     Tablespace
Owner			Name
-------------------- ----------
								      GC
		     Subobject	Obj.				  Remote
				)
			       order by dim1_rank, dim12_rank
			      )
			   )
		     ) as dim_frag
		from
		 (select  dim_data.*
			  , NVL((SELECT replace(substr(v.sql_text,  1,	100), CHR(0), '') as sql_text
	 FROM sys.gv_$sql v
	 WHERE v.sql_id = dim_data.dim1_value
	       AND v.inst_id = dim_data.inst_id

	       AND rownum &lt; 2 ), ( SELECT replace(sys.dbms_lob.substr(v.sql_text,  100,  1), CHR(0), '')
	   as sql_text
	 FROM AWR_ROOT_sqltext v,  binds b
	 WHERE v.dbid = b.dbid
	   AND v.sql_id = dim_data.dim1_value

	   AND rownum &lt; 2)) as sql_text1

		  from (select
			     max(case when dim1_rank &lt;= 10
				      then dim1_val
				      else null
				  end)			   as dim1_value
			    , max(case when dim1_rank &lt;= 10
				      then dim2_val
				      else null
				  end)			   as dim2_value
			    , sum(dim12_count) as dim12_count
			    , max(case when dim1_rank &lt;= 10
				      then uniq_sqlids
				      else 0
				  end)			   as uniq_sqlids
			    , max(case when dim1_rank &lt;= 10
				      then uniq_xids
				      else 0
				  end)			   as uniq_xids
			    , max(case when dim1_rank &lt;= 10
				      then uniq_sessions
				      else 0
				  end)			   as uniq_sessions
			    , max(case when dim1_rank &lt;= 10
				      then uniq_instances
				      else 0
				  end)			   as uniq_instances
			    , count(distinct dim1_val)	    as dim1_nummem
			    , sum(dim12_nummem) 	    as dim12_nummem
			    , max(case when dim1_rank &lt;= 10
				      then dim1_rank
				      else (10 + 1)
				  end)			   as dim1_rank
			    , max(case when dim1_rank &lt;= 10
				      then dim12_rank
				      else (10 + 1)
				  end)			   as dim12_rank
			    , max(inst_id)	    as inst_id

			from (select dim1_val
				    , max(case when dim12_rank &lt;= 13
					      then dim2_val
					      else null
					  end)		   as dim2_val
				    , dim1_count
				    , sum(dim12_count)	    as dim12_count
				    , max(case when dim12_rank &lt;= 13
					      then uniq_sqlids
					      else 0
					  end)		   as uniq_sqlids
				    , max(case when dim12_rank &lt;= 13
					      then uniq_xids
					      else 0
					  end)		   as uniq_xids
				    , max(case when dim12_rank &lt;= 13
					      then uniq_sessions
Object Name	       Name	Type	    Obj#   Dataobj#	  Grants  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
					      else 0
USER12		     IOPS
CF1				TABLE	   73464      73460	  62,321    7.99
					  end)		   as uniq_sessions
USER30		     IOPS
CF1				TABLE	   73550      73554	  62,103    7.97
USER1		     IOPS
				    , max(case when dim12_rank &lt;= 13
CF1				TABLE	   73402      73404	  61,924    7.94
USER4		     IOPS
CF1				TABLE	   73424      73420	  56,891    7.30
USER24		     IOPS
					      then uniq_instances
CF1				TABLE	   73520      73529	  56,844    7.29
			  ------------------------------------------------------


					      else 0
Dictionary Cache Stats			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> "Pct Misses"  should be very low (< 2% in most cases)
-> "Final Usage" is the number of cache entries being used
					  end)		   as uniq_instances

				   Get	  Pct	 Scan	Pct	 Mod	  Final
Cache			      Requests	 Miss	 Reqs  Miss	Reqs	  Usage
				    , count(*) as dim12_nummem
------------------------- ------------ ------ ------- ----- -------- ----------
dc_awr_control			    14	 50.0	    0	N/A	   0	      1
dc_global_oids			12,319	  0.9	    0	N/A	   0	     82
				    , dense_rank() over
dc_histogram_data		17,800	 12.6	    0	N/A	   0	  1,644
dc_histogram_defs		18,110	 15.4	    0	N/A	 363	  2,364
dc_object_grants		     2	 50.0	    0	N/A	   0	      1
dc_objects			23,737	  3.1	    0	N/A	 184	    876
				       (order by dim1_count desc
dc_props			   494	  0.2	    0	N/A	   0	      1
dc_rollback_segments		   958	  0.0	    0	N/A	   0	    320
dc_segments			 1,027	 44.8	    0	N/A	  10	    351
						, dim1_val
dc_sequences			     7	 42.9	    0	N/A	   7	      1
dc_tablespaces			   983	  0.8	    0	N/A	   0	      7
dc_users			   958	  2.7	    0	N/A	   0	     23
				       ) as dim1_rank
outstanding_alerts		     3	100.0	    0	N/A	   0	      3
			  ------------------------------------------------------

Dictionary Cache Stats (RAC)		   DB/Inst: P30DB/p30db2  Snaps: 81-82
				    , max(case when dim12_rank &lt;= 13

		  No data exists for this section of the report.
			  ------------------------------------------------------

					      then dim12_rank
Library Cache Activity			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> "Pct Misses"  should be very low

					      else (13 + 1)
			 Get	Pct	       Pin    Pct	      Invali-
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations
					  end)		   as dim12_rank
--------------- ------------ ------ -------------- ------ ---------- --------
BODY			 178	1.1	       550    6.0	  28	    0
CLUSTER 		 170	1.8	       170    1.8	   0	    0
				    , max(inst_id)	    as inst_id
EDITION 		   2   50.0		 4   50.0	   0	    0
HINTSET OBJECT		 177   16.4	       177   16.4	   0	    0
INDEX			  42	9.5		42   28.6	   8	    0

OBJECT ID		  46  100.0		 0    N/A	   0	    0
QUEUE			  61   21.3		61   21.3	   0	    0
SCHEMA			 756	0.0		 0    N/A	   0	    0
				 from (select sqlid   as dim1_val
SQL AREA	       3,510   47.8	    58,745    3.3	 282	   47
					     , wait_class   as dim2_val
					     , sample_count as dim12_count
					     , dense_rank() over
SQL AREA BUILD		 734   73.4		 0    N/A	   0	    0
SQL AREA STATS		 570   95.4	       570   95.4	   0	    0
TABLE/PROCEDURE        4,635   12.3	    21,548    7.0	 433	    0
TRANSFORMATION		  61   21.3		61   21.3	   0	    0
TRIGGER 		   3	0.0		 3    0.0	   0	    0
			  ------------------------------------------------------

Library Cache Activity (RAC)		   DB/Inst: P30DB/p30db2  Snaps: 81-82

		    GES Lock	  GES Pin      GES Pin	 GES Inval GES Invali-
Namespace	    Requests	 Requests     Releases	  Requests     dations
--------------- ------------ ------------ ------------ ----------- -----------
BODY			 352	      540	   540		 0	     0
CLUSTER 		 170	      170	   170		 0	     0
EDITION 		   2		2	     2		 0	     0
						(partition by sqlid
HINTSET OBJECT		 177	      177	   177		 0	     0
INDEX			  42	       42	    42		 0	     0
QUEUE			  61	       61	    61		 0	     0
SCHEMA			  46		0	     0		 0	     0

TABLE/PROCEDURE        8,440	   16,634	16,634		 0	     0
TRANSFORMATION		  61	       61	    61		 0	     0
TRIGGER 		   0		3	     3		 0	     0
			  ------------------------------------------------------

						     order by sample_count desc

Memory Dynamic Components		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Min/Max sizes since instance startup
							     , wait_class
-> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred
-> ordered by Component

		 Begin Snap	Current 	Min	    Max   Oper Last Op

Component	  Size (Mb)   Size (Mb)   Size (Mb)   Size (Mb)  Count Typ/Mod
--------------- ----------- ----------- ----------- ----------- ------ -------
ASM Buffer Cach 	.00	    .00 	.00	    .00      0 STA/
						) as dim12_rank
DEFAULT 16K buf 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 2K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 32K buf 	.00	    .00 	.00	    .00      0 STA/
					     , sum(sample_count) over
DEFAULT 4K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 8K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT buffer	   7,872.00    7,840.00    7,808.00    7,872.00      5 SHR/IMM
						(partition by sqlid
Data Transfer C 	.00	    .00 	.00	    .00      0 STA/

						) as dim1_count
In Memory RO Ex 	.00	    .00 	.00	    .00      0 STA/
In Memory RW Ex 	.00	    .00 	.00	    .00      0 STA/
In-Memory Area		.00	    .00 	.00	    .00      0 STA/
KEEP buffer cac 	.00	    .00 	.00	    .00      0 STA/
PGA Target	   3,232.00    3,232.00    3,232.00    3,232.00      0 STA/
RECYCLE buffer		.00	    .00 	.00	    .00      0 STA/
SGA Target	   9,664.00    9,664.00    9,664.00    9,664.00      0 STA/
Shared IO Pool	     128.00	 128.00      128.00	 128.00      0 STA/
					     , uniq_sqlids
java pool		.00	    .00 	.00	    .00      0 STA/
large pool	      64.00	  64.00       64.00	  64.00      0 STA/
memoptimize buf 	.00	    .00 	.00	    .00      0 STA/
shared pool	   1,568.00    1,600.00    1,568.00    1,632.00      5 GRO/IMM
streams pool		.00	    .00 	.00	    .00      0 STA/
unified pga poo 	.00	    .00 	.00	    .00      0 STA/
			  ------------------------------------------------------

Memory Resize Operations Summary	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Resizes, Grows, Shrinks - Operations captured by AWR
   if there are operations on the same component for the same
					     , uniq_xids
					     , uniq_sessions
					     , uniq_instances
   operation_type, target_size, and with the same start_time
   only one operation is captured
-> ordered by Component

			Min	    Max 	Avg    Re-
					     , inst_id
Component	  Size (Mb)   Size (Mb)   Size (Mb)  Sizes  Grows Shrink
--------------- ----------- ----------- ----------- ------ ------ ------
DEFAULT buffer	   7,872.00    7,872.00    7,872.00	 4	0      4

shared pool	   1,568.00    1,600.00    1,576.00	 4	4      0
			  ------------------------------------------------------

Memory Resize Ops			   DB/Inst: P30DB/p30db2  Snaps: 81-82
					from grouped_ash
-> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred
				       where gid = 25
					 and sqlid is not null
					 and wait_class is not null )
   Delta       : change in size of the component
   Target Delta: displayed only if final size <> target_size
-> Status: COMplete/CANcelled/INActive/PENding/ERRor
-> ordered by start_time desc,component

		 Ela		 Oper	    Init	Target	Final
Start		 (s) Component	 Typ/Mod Size (M  Delta  Delta	  (M) Sta
-------------- ----- ----------- ------- ------- ------ ------ ------ ---
02/08 17:34:51	   0 bufcache	 SHR/IMM   7,872      0    -32	7,872 ERR
02/08 17:34:51	   0 shared	 GRO/IMM   1,568     32    N/A	1,600 ERR
02/08 17:34:50	   0 bufcache	 SHR/IMM   7,872      0    -32	7,872 ERR
02/08 17:34:50	   0 shared	 GRO/IMM   1,568      0     32	1,568 ERR
02/08 17:34:49	   0 bufcache	 SHR/IMM   7,872      0    -32	7,872 ERR
02/08 17:34:49	   0 shared	 GRO/IMM   1,568      0     32	1,568 ERR
02/08 17:34:48	   1 bufcache	 SHR/IMM   7,872      0    -32	7,872 ERR
02/08 17:34:48	   1 shared	 GRO/IMM   1,568      0     32	1,568 ERR
			     group by dim1_val
			  ------------------------------------------------------

				     , dim1_count
				     , (case when dim12_rank &lt;= 13
					    then dim2_val
Process Memory Summary			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> B: Begin Snap   E: End Snap
-> All rows below contain absolute values (i.e. not diffed over the interval)
-> Max Alloc is Maximum PGA Allocation size at snapshot time
-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
-> ordered by Begin/End snapshot, Alloc (MB) desc
-> Top 10 containers by Alloc (MB) at end snapshot time are displayed

							     Hist
				     Avg  Std Dev     Max     Max
		Alloc	   Used    Alloc    Alloc   Alloc   Alloc    Num    Num
   Category	 (MB)	   (MB)     (MB)     (MB)    (MB)    (MB)   Proc  Alloc
 - -------- --------- --------- -------- -------- ------- ------- ------ ------
B Freeable     184.3	    .0	    4.1      7.3      28     N/A     45     45
  Other        669.5	   N/A	    5.3      7.9      42      42    127    127
					    else null
  PL/SQL	20.3	  18.5	     .2       .5       2       4    109    108
  SQL		 7.6	   5.1	     .1       .3       2      11     59     50
  Total        881.6	  23.5	    9.7     16.0      74      57    340    330
					end)
E Freeable     177.1	    .0	    5.7      8.8      27     N/A     31     31
  Other        605.1	   N/A	    5.5      8.7      42      42    110    110

  PL/SQL	11.8	  10.0	     .1       .5       2       4     92     92
  SQL		 6.6	   4.9	     .2       .4       2      11     42     33
  Total        800.5	  15.0	   11.5     18.3      73      57    275    266
			     )
			  ------------------------------------------------------

SGA Memory Summary			   DB/Inst: P30DB/p30db2  Snaps: 81-82

		    group by (case when dim1_rank &lt;= 10
						      End Size (Bytes)
SGA regions			Begin Size (Bytes)	(if different)
------------------------------ ------------------- -------------------
Database Buffers		     8,388,608,000	 8,355,053,568
				   then dim1_val
Fixed Size				12,445,928
Redo Buffers				21,106,688
Variable Size			     1,711,276,032	 1,744,830,464
			       -------------------
				   else null
sum				    10,133,436,648
			  ------------------------------------------------------

SGA breakdown difference by Pool and Name  DB/Inst: P30DB/p30db2  Snaps: 81-82
			       end)
-> ordered by Pool, Name
-> N/A value for Begin MB or End MB indicates the size of that Pool/Name was
   insignificant, or zero in that snapshot

			    , (case when dim1_rank &lt;= 10
Pool   Name				    Begin MB	     End MB  % Diff
------ ------------------------------ -------------- -------------- -------
large  PX msg pool				15.0	       15.0    0.00
				   then dim2_val
large  free memory				48.6	       48.6    0.00
shared ASH buffers				16.0	       16.0    0.00
				   else null
shared KCRAHT Free Blocks			32.5	       53.8   65.38
shared KGLH0					40.2		N/A -100.00
shared KJSC rnb slots				21.2	       17.6  -17.17
shared SO private sga				29.0	       29.0    0.00
			       end)
shared SQLA				       256.0	       28.3  -88.96
shared db_block_hash_buckets			32.0	       32.0    0.00
shared free memory			       104.6	      403.0  285.45

shared gc name table				32.0	       32.0    0.00
shared gcs dynamic resources			25.4	       25.4    0.00
shared gcs dynamic resources for		91.3	       91.3    0.00
shared gcs resources			       264.5	      264.5    0.00
			   ) dim_data
shared gcs resv res hash bucket 		48.0	       48.0    0.00
shared gcs shadows			       144.3	      144.3    0.00
shared ges big msg buffers			26.3	       26.3    0.00
			) t
shared ksunfy_meta 1				25.0	       25.0    0.00
shared row cache				  .0		 .0    0.00
       buffer_cache			     7,872.0	    7,840.0   -0.41
       fixed_sga				11.9	       11.9    0.00
		     ),  component_3_xml as
       log_buffer				20.1	       20.1    0.00
       shared_io_pool			       128.0	      128.0    0.00
			  ------------------------------------------------------

	     (select xmlelement(

Replication System Resource Usage	   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			&quot;item&quot;
			  ------------------------------------------------------

Replication SGA Usage			   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
		       , xmlattributes(
			  ------------------------------------------------------


GoldenGate Capture			   DB/Inst: P30DB/p30db2  Snaps: 81-82

			   'physical_session, wait_class' as &quot;item&quot;)
		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Capture Rate 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
			  , xmlelement(

		  No data exists for this section of the report.
			  ------------------------------------------------------
			      &quot;top_mems&quot;

GoldenGate Apply Reader 		   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			     , xmlagg(
			  ------------------------------------------------------

GoldenGate Apply Coordinator		   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
				xmlelement(
			  ------------------------------------------------------

GoldenGate Apply Server 		   DB/Inst: P30DB/p30db2  Snaps: 81-82

				  &quot;mem&quot;
		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Coordinator Rate	   DB/Inst: P30DB/p30db2  Snaps: 81-82

				 , xmlattributes(
		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Reader and Server Rate    DB/Inst: P30DB/p30db2  Snaps: 81-82
				    dim1_value		   as &quot;dim1_value&quot;

		  No data exists for this section of the report.
			  ------------------------------------------------------


				   , dim1_nummem	    as &quot;dim1_nummem&quot;
XStream Capture 			   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------

				   , dim1_rank		    as &quot;dim1_rank&quot;
XStream Capture Rate			   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------
				   , dim2_value 	    as &quot;dim2_value&quot;

XStream Apply Reader			   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------
				   , dim12_nummem	    as &quot;dim2_nummem&quot;

XStream Apply Coordinator		   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
				   , dim12_rank 	    as &quot;dim2_rank&quot;
			  ------------------------------------------------------

XStream Apply Server			   DB/Inst: P30DB/p30db2  Snaps: 81-82

				   , dim12_count	    as &quot;count&quot;
		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Coordinator Rate		   DB/Inst: P30DB/p30db2  Snaps: 81-82

				   , uniq_sqlids	    as &quot;uniq_sqlids&quot;
		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Reader and Server Rate	   DB/Inst: P30DB/p30db2  Snaps: 81-82

				   , uniq_xids		    as &quot;uniq_xids&quot;
		  No data exists for this section of the report.
			  ------------------------------------------------------


				   , uniq_sessions	    as &quot;uniq_sessions&quot;
Table Statistics by DML Operations	   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
				   , uniq_instances	    as &quot;uniq_instances&quot;
			  ------------------------------------------------------

Table Statistics by Conflict Resolutions   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------


Replication Large Transaction Statistics   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------

				  )
Replication Long Running Transaction StatisticsDB/Inst: P30DB/p30db2  Snaps: 8

		  No data exists for this section of the report.
			  ------------------------------------------------------
				, NVL2(NULL,


Advanced Queue CPU/IO Usage		   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
				      xmlelement(&quot;info&quot;
			  ------------------------------------------------------

Buffered Queues 			   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
				       , xmlattributes('dim1_name' as &quot;type&quot;)
			  ------------------------------------------------------

Buffered Queue Subscribers		   DB/Inst: P30DB/p30db2  Snaps: 81-82
				       , NULL),  NULL)

				, NVL2(NULL,
				      xmlelement(
&quot;info&quot;
		  No data exists for this section of the report.
			  ------------------------------------------------------

Rule Set				   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queues			   DB/Inst: P30DB/p30db2  Snaps: 81-82

					, xmlattributes('dim2_name' as &quot;type&quot;)
					, NULL),  NULL)
				)
			       order by dim1_rank, dim12_rank
			      )
			   )
		     ) as dim_frag
		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queues Rate			   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
		from
			  ------------------------------------------------------

		 (select  dim_data.*


Persistent Queue Subscribers		   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------
		  from (select


Resource Limit Stats			       DB/Inst: P30DB/p30db2  Snap: 82
-> Only rows with Current or Maximum Utilization > 80% of Limit are shown
			     max(case when dim1_rank &lt;= 10
				      then dim1_val
				      else null
				  end)			   as dim1_value
			    , max(case when dim1_rank &lt;= 10
				      then dim2_val
				      else null
-> For "UNLIMITED" resources, rows whose Current or Maximum Utilization
   exceeds 2*Initial Allocation are shown
-> Ordered by Resource Name

				  Current      Maximum	   Initial
Resource Name			Utilization  Utilization Allocation   Limit
------------------------------ ------------ ------------ ---------- ----------
ges_cache_ress			      3,138	   3,572	  0  UNLIMITED
			  ------------------------------------------------------

				  end)			   as dim2_value
			    , sum(dim12_count) as dim12_count
			    , max(case when dim1_rank &lt;= 10
				      then uniq_sqlids
				      else 0
Shared Servers Activity 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Values represent averages for all samples

   Avg Total   Avg Active    Avg Total	 Avg Active    Avg Total   Avg Active
 Connections  Connections Shared Srvrs Shared Srvrs  Dispatchers  Dispatchers
				  end)			   as uniq_sqlids
			    , max(case when dim1_rank &lt;= 10
				      then uniq_xids
------------ ------------ ------------ ------------ ------------ ------------
	   0		0	     1		  0	       1	    0
			  ------------------------------------------------------

Shared Servers Rates			   DB/Inst: P30DB/p30db2  Snaps: 81-82

  Common     Disp			 Common       Disp     Server
   Queue    Queue   Server    Server	  Queue      Queue	Total	  Server
 Per Sec  Per Sec Msgs/Sec    KB/Sec	  Total      Total	 Msgs  Total(KB)
-------- -------- -------- --------- ---------- ---------- ---------- ----------
       0	0	 0	 0.0	      0 	 0	    0	       0
			  ------------------------------------------------------

Shared Servers Utilization		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Statistics are combined for all servers
-> Incoming and Outgoing Net % are included in %Busy

				      else 0
  Total Server			  Incoming  Outgoing
      Time (s)	  %Busy    %Idle     Net %     Net %
-------------- -------- -------- --------- ---------
				  end)			   as uniq_xids
			    , max(case when dim1_rank &lt;= 10
				      then uniq_sessions
	   609	    0.0    100.0       0.0	 0.0
			  ------------------------------------------------------

Shared Servers Common Queue		   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------

				      else 0
Shared Servers Dispatchers		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Ordered by %Busy, descending
-> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue
-> Name suffixes:
				  end)			   as uniq_sessions
     "(N)" - dispatcher started between begin and end snapshots
     "(R)" - dispatcher re-started between begin and end snapshots

	      Avg Total Disp			    Total Total Queue  Avg Queue
			    , max(case when dim1_rank &lt;= 10
Name	    Conns   Time (s)	%Busy	 %Idle	   Queued    Wait (s)  Wait (ms)
------- --------- ---------- -------- -------- ---------- ----------- ----------
				      then uniq_instances
D000	      0.0	 609	  0.0	 100.0		0	    0
			  ------------------------------------------------------


				      else 0
Modified Parameters			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> This section shows all the modified initialization parameters that
were in effect during the entire snapshot interval
-> End Value is displayed only if the parameter value was modified within
				  end)			   as uniq_instances
the snapshot interval

								End value
Parameter Name		      Begin value			(if different)
----------------------------- --------------------------------- --------------
			    , count(distinct dim1_val)	    as dim1_nummem
_ipddb_enable		      TRUE
audit_file_dest 	      /u01/app/oracle/admin/p30db/adump
audit_trail		      DB
cluster_database	      TRUE
compatible		      19.0.0
			    , sum(dim12_nummem) 	    as dim12_nummem
control_files		      +DATA/P30DB/CONTROLFILE/current.2
db_block_size		      8192
db_create_file_dest	      +DATA
db_domain		      example.com
db_name 		      p30db
			    , max(case when dim1_rank &lt;= 10
db_recovery_file_dest	      +FRA
db_recovery_file_dest_size    274877906944
diagnostic_dest 	      /u01/app/oracle
dispatchers		      (PROTOCOL=TCP) (SERVICE=p30dbXDB)
				      then dim1_rank
instance_number 	      2
listener_networks
local_listener		       (ADDRESS=(PROTOCOL=TCP)(HOST=192
nls_language		      AMERICAN
nls_territory		      AMERICA
				      else (10 + 1)
open_cursors		      300
pga_aggregate_target	      3371171840
processes		      640
remote_listener 	       mcracpoc-scan.example.com:1521
remote_login_passwordfile     EXCLUSIVE
				  end)			   as dim1_rank
sga_target		      10133438464
thread			      2
undo_tablespace 	      UNDOTBS2
			  ------------------------------------------------------
			    , max(case when dim1_rank &lt;= 10


Modified Multi-Valued Parameters	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> This section only displays parameters that have more than one value
				      then dim12_rank
->'(NULL)' indicates a missing parameter value
-> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot

								End value
Parameter Name		      Begin value			(if different)
				      else (10 + 1)
----------------------------- --------------------------------- --------------
control_files		      +DATA/P30DB/CONTROLFILE/current.2
			      +FRA/P30DB/CONTROLFILE/current.25
			  ------------------------------------------------------
				  end)			   as dim12_rank

Top SQL with Top Events 		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Top SQL statements by DB Time along with the top events by DB Time
   for those SQLs.
			    , max(inst_id)	    as inst_id
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the

   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
			from (select dim1_val
----------------------- -------------------- -------------------- --------------
									   % Row
Event			       % Event Top Row Source			  Source
------------------------------ ------- --------------------------------- -------
	  35dumc2tpr9dv 	   203653710		     1041	   89.59
				    , max(case when dim12_rank &lt;= 13
db file sequential read 	 78.83 UPDATE				   78.57
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )


					      then dim2_val
gc current grant 2-way		  4.99 UPDATE				    4.99


CPU + Wait for CPU		  2.58 UPDATE				    2.32

					      else null
			  ------------------------------------------------------

Top SQL with Top Row Sources		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Top SQL statements by DB Time along with the top row sources by DB Time
					  end)		   as dim2_val
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
   that SQL.
				    , dim1_count
-> % Event is the percentage of DB Time spent on the event by the
   SQL executing the row source.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
				    , sum(dim12_count)	    as dim12_count
----------------------- -------------------- -------------------- --------------
					   % Row
Row Source				  Source Top Event		 % Event
---------------------------------------- ------- ----------------------- -------
				    , max(case when dim12_rank &lt;= 13
	  35dumc2tpr9dv 	   203653710		     1041	   89.59
UPDATE					   88.81 db file sequential read   78.57
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

					      then uniq_sqlids
			  ------------------------------------------------------

Top Sessions				   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> '# Samples Active' shows the number of ASH samples in which the session
					      else 0
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
      and not total database activity.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
					  end)		   as uniq_sqlids
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
				    , max(case when dim12_rank &lt;= 13
-------------------- ------------------------------ ------------------ --------
       11,11821       4.99 db file sequential read		4.65
USER13		     sqlplus@mcracp...m (TNS V1-V3)	  54/61 [ 88%]	     53

					      then uniq_xids
       16, 6218       4.99 db file sequential read		4.65
USER30		     sqlplus@mcracp...m (TNS V1-V3)	  54/61 [ 88%]	     51

       20,34915       4.99 db file sequential read		4.39
					      else 0
USER19		     sqlplus@mcracp...m (TNS V1-V3)	  51/61 [ 83%]	     49

      135,48890       4.99 db file sequential read		4.73
USER3		     sqlplus@mcracp...m (TNS V1-V3)	  55/61 [ 90%]	     53

					  end)		   as uniq_xids
      139,34033       4.99 db file sequential read		4.48
USER28		     sqlplus@mcracp...m (TNS V1-V3)	  52/61 [ 85%]	     49

			  ------------------------------------------------------

				    , max(case when dim12_rank &lt;= 13
Top Blocking Sessions			   DB/Inst: P30DB/p30db2  Snaps: 81-82

		  No data exists for this section of the report.
			  ------------------------------------------------------

					      then uniq_sessions
Top PL/SQL Procedures			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
					      else 0
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
      at the point of sampling . If the value is 'SQL', it represents
      the percentage of time spent executing SQL for the particular
					  end)		   as uniq_sessions
				    , max(case when dim12_rank &lt;= 13
					      then uniq_instances
      PL/SQL entry subprogram

PL/SQL Entry Subprogram 					  % Activity
					      else 0
----------------------------------------------------------------- ----------
PL/SQL Current Subprogram					   % Current
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       89.85
   SQL								       89.85
					  end)		   as uniq_instances
				    , count(*) as dim12_nummem
				    , dense_rank() over
				       (order by dim1_count desc
						, dim1_val
				       ) as dim1_rank
				    , max(case when dim12_rank &lt;= 13
					      then dim12_rank
					      else (13 + 1)
					  end)		   as dim12_rank
				    , max(inst_id)	    as inst_id

				 from (select physical_session	 as dim1_val
					     , wait_class   as dim2_val
					     , sample_count as dim12_count
					     , dense_rank() over
						(partition by physical_session

						     order by sample_count desc
							     , wait_class

						) as dim12_rank
					     , sum(sample_count) over
						(partition by physical_session

						) as dim1_count
					     , uniq_sqlids
					     , uniq_xids
					     , uniq_sessions
					     , uniq_instances
					     , inst_id

					from grouped_ash
				       where gid = 21
					 and physical_session is not null
					 and wait_class is not null )
			     group by dim1_val
				     , dim1_count
				     , (case when dim12_rank &lt;= 13
					    then dim2_val
					    else null
					end)

			     )
		    group by (case when dim1_rank &lt;= 10
				   then dim1_val
				   else null
			       end)
			    , (case when dim1_rank &lt;= 10
				   then dim2_val
				   else null
			       end)

			   ) dim_data
			) t
		     ),  component_4_xml as
	     (select xmlelement(
			&quot;item&quot;
		       , xmlattributes(
			   'wait_class, event' as &quot;item&quot;)
			  , xmlelement(
			      &quot;top_mems&quot;
			     , xmlagg(
				xmlelement(
				  &quot;mem&quot;
				 , xmlattributes(
				    dim1_value		   as &quot;dim1_value&quot;
				   , dim1_nummem	    as &quot;dim1_nummem&quot;
				   , dim1_rank		    as &quot;dim1_rank&quot;
				   , dim2_value 	    as &quot;dim2_value&quot;
				   , dim12_nummem	    as &quot;dim2_nummem&quot;
				   , dim12_rank 	    as &quot;dim2_rank&quot;
				   , dim12_count	    as &quot;count&quot;
				   , uniq_sqlids	    as &quot;uniq_sqlids&quot;
				   , uniq_xids		    as &quot;uniq_xids&quot;
				   , uniq_sessions	    as &quot;uniq_sessions&quot;
				   , uniq_instances	    as &quot;uniq_instances&quot;

				  )
				, NVL2(NULL,
				      xmlelement(&quot;info&quot;
				       , xmlattributes('dim1_name' as &quot;type&quot;)
				       , NULL),  NULL)
				, NVL2(NULL,
				      xmlelement(&quot;info&quot;
					, xmlattributes('dim2_name' as &quot;type&quot;)
					, NULL),  NULL)
				)
			  ------------------------------------------------------
			       order by dim1_rank, dim12_rank

			      )
Top Events				   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Top Events by DB Time
-> % Activity is the percentage of DB Time due to the event
			   )

Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
		     ) as dim_frag
	   Avg Active
% Activity   Sessions
---------- ----------
		from
db file sequential read 	    User I/O	    FOREGROUND
     78.83	14.99
log file parallel write 	    System I/O	    BACKGROUND
      5.16	 0.98
		 (select  dim_data.*
gc current grant 2-way		    Cluster	    FOREGROUND
      4.99	 0.95
CPU + Wait for CPU		    CPU 	    FOREGROUND

      2.75	 0.52
CPU + Wait for CPU		    CPU 	    BACKGROUND
      2.32	 0.44

			  ------------------------------------------------------

Top Event P1/P2/P3 Values		   DB/Inst: P30DB/p30db2  Snaps: 81-82
		  from (select
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
-> % Event is the percentage of DB Time due to the event
-> % Activity is the percentage of DB Time due to the event with the given
			     max(case when dim1_rank &lt;= 13
   P1,P2,P3 Values.

Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
				      then dim1_val
Parameter 1		   Parameter 2		      Parameter 3
-------------------------- -------------------------- --------------------------
db file sequential read 	 78.83		  "2","24933777","1"	   0.09
				      else null
file#			   block#		      blocks

log file parallel write 	  5.16		       "2","112","4"	   0.26
				  end)			   as dim1_value
files			   blocks		      requests

			  ------------------------------------------------------

			    , max(case when dim1_rank &lt;= 13
Top DB Objects				   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Top DB Objects by DB Time with respect to Application, Cluster,
   User I/O,  buffer busy waits and In-Memory DB events only.
				      then dim2_val
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available
				      else null

      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
				  end)			   as dim2_value
Object Name (Type)				      Tablespace
----------------------------------------------------- --------------------------
	  73472       4.99 db file sequential read		4.73
			    , sum(dim12_count) as dim12_count
USER15.CF1 (TABLE)				      IOPS
	  73550       4.99 db file sequential read		4.65
USER30.CF1 (TABLE)				      IOPS
	  73413       4.91 db file sequential read		4.73
			    , max(case when dim1_rank &lt;= 13
USER3.CF1 (TABLE)				      IOPS
	  73503       4.91 db file sequential read		4.65
USER21.CF1 (TABLE)				      IOPS
				      then uniq_sqlids
	  73439       4.82 db file sequential read		4.04
USER9.CF1 (TABLE)				      IOPS
			  ------------------------------------------------------

				      else 0
Activity Over Time			   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Analysis period is divided into smaller time slots as indicated
   in the 'Slot Time (Duration)'.
				  end)			   as uniq_sqlids
-> Top 3 events are reported in each of those slots
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
			    , max(case when dim1_rank &lt;= 13
   that event in that slot
-> '% Event' is 'Event Count' over all ASH samples in the analysis period

			 Slot					Event
				      then uniq_xids
Slot Time (Duration)	Count Event				Count % Event
-------------------- -------- ------------------------------ -------- -------
17:33:14   (1.8 min)	  239 db file sequential read		  167	14.37
				      else 0
			      CPU + Wait for CPU		   22	 1.89
			      gc current grant 2-way		   19	 1.64
				  end)			   as uniq_xids
17:35:00   (5.0 min)	  585 db file sequential read		  482	41.48
			      CPU + Wait for CPU		   27	 2.32
			      gc current grant 2-way		   27	 2.32
17:40:00   (3.4 min)	  338 db file sequential read		  267	22.98
			    , max(case when dim1_rank &lt;= 13
			      log file parallel write		   26	 2.24
			      gc current grant 2-way		   12	 1.03
			  ------------------------------------------------------
				      then uniq_sessions



	  ADDM Report for Task 'ADDM:3393773525_2_82'
				      else 0
	  -------------------------------------------

Analysis Period
---------------
				  end)			   as uniq_sessions
AWR snapshot range from 81 to 82.
Time period starts at 08-FEB-20 05.33.14 PM
Time period ends at 08-FEB-20 05.43.26 PM

			    , max(case when dim1_rank &lt;= 13
Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
				      then uniq_instances
Database version 19.0.0.0.0.
ADDM performed an analysis of instance p30db2, numbered 2 and hosted at
mcracpoc2.example.com.

				      else 0
Activity During the Analysis Period
-----------------------------------
Total database time was 10263 seconds.
				  end)			   as uniq_instances
The average number of active sessions was 16.77.

Summary of Findings
-------------------
			    , count(distinct dim1_val)	    as dim1_nummem
   Description				     Active Sessions	  Recommendation
s
					     Percent of Activity
   ----------------------------------------  -------------------  --------------
			    , sum(dim12_nummem) 	    as dim12_nummem
-
1  Top SQL Statements			     16.71 | 99.62	  1
2  "User I/O" wait Class		     15.24 | 90.88	  0
			    , max(case when dim1_rank &lt;= 13
3  Top Segments by "User I/O" and "Cluster"  4.62 | 27.57	  5
4  Undersized SGA			     1.37 | 8.16	  1
5  Global Cache Messaging		     .93 | 5.56 	  1

				      then dim1_rank

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

				      else (13 + 1)

	  Findings and Recommendations
	  ----------------------------

				  end)			   as dim1_rank
Finding 1: Top SQL Statements
Impact is 16.73 active sessions, 99.62% of total activity.
----------------------------------------------------------
			    , max(case when dim1_rank &lt;= 13
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

   Recommendation 1: SQL Tuning
				      then dim12_rank
   Estimated benefit is 16.64 active sessions, 99.23% of total activity.
				      else (13 + 1)
   ---------------------------------------------------------------------
				  end)			   as dim12_rank
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
			    , max(inst_id)	    as inst_id
      "35dumc2tpr9dv".
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.

	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
			from (select dim1_val
      The SQL spent 99% of its database time on CPU, I/O and Cluster waits.
				    , max(case when dim12_rank &lt;= 10
					      then dim2_val
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
					      else null
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
					  end)		   as dim2_val
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 35802 times and
      had an average elapsed time of 0.27 seconds.
   Rationale
      I/O and Cluster wait for TABLE "USER9.CF1" with object ID 73439 consumed
				    , dim1_count
      5% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE "USER15.CF1" with object ID 73472
				    , sum(dim12_count)	    as dim12_count
      consumed 5% of the database time spent on this SQL statement.


Finding 2: "User I/O" wait Class
				    , max(case when dim12_rank &lt;= 10
Impact is 15.27 active sessions, 90.88% of total activity.
----------------------------------------------------------
Wait class "User I/O" was consuming significant database time.
					      then uniq_sqlids
Waits for I/O to temporary tablespaces were not consuming significant database
time.
The throughput of the I/O subsystem was not significantly lower than expected.

					      else 0
   No recommendations are available.


Finding 3: Top Segments by "User I/O" and "Cluster"
					  end)		   as uniq_sqlids
Impact is 4.63 active sessions, 27.57% of total activity.
---------------------------------------------------------
				    , max(case when dim12_rank &lt;= 10
Individual database segments responsible for significant "User I/O" and
					      then uniq_xids
					      else 0
					  end)		   as uniq_xids
"Cluster" waits were found.

   Recommendation 1: Segment Tuning
   Estimated benefit is .94 active sessions, 5.59% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER15.CF1" with
      object ID 73472.
      Related Object
	 Database object with ID 73472.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
				    , max(case when dim12_rank &lt;= 10
      SQL_ID "35dumc2tpr9dv" is responsible for 99% of "User I/O" and
					      then uniq_sessions
					      else 0
					  end)		   as uniq_sessions
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 54874
      physical reads, 37396 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
				    , max(case when dim12_rank &lt;= 10
   Estimated benefit is .94 active sessions, 5.59% of total activity.
					      then uniq_instances
					      else 0
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER30.CF1" with
      object ID 73550.
      Related Object
	 Database object with ID 73550.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 62012
      physical reads, 40576 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .92 active sessions, 5.5% of total activity.
					  end)		   as uniq_instances
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER3.CF1" with
      object ID 73413.
				    , count(*) as dim12_nummem
      Related Object
	 Database object with ID 73413.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
				    , dense_rank() over
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID "35dumc2tpr9dv" is responsible for 100% of "User I/O" and
      "Cluster" waits for this segment.
				       (order by dim1_count desc
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 57884
      physical reads, 38228 physical writes and 0 direct reads.

						, dim1_val
   Recommendation 4: Segment Tuning
   Estimated benefit is .92 active sessions, 5.5% of total activity.
   -----------------------------------------------------------------
				       ) as dim1_rank
   Action
      Investigate application logic involving I/O on TABLE "USER21.CF1" with
      object ID 73503.
      Related Object
				    , max(case when dim12_rank &lt;= 10
	 Database object with ID 73503.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 62893
      physical reads, 41113 physical writes and 0 direct reads.
					      then dim12_rank

   Recommendation 5: Segment Tuning
   Estimated benefit is .91 active sessions, 5.4% of total activity.
					      else (10 + 1)
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER9.CF1" with
      object ID 73439.
					  end)		   as dim12_rank
      Related Object
	 Database object with ID 73439.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
				    , max(inst_id)	    as inst_id
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID "35dumc2tpr9dv" is responsible for 100% of "User I/O" and
      "Cluster" waits for this segment.

   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 69595
      physical reads, 44377 physical writes and 0 direct reads.

				 from (select wait_class   as dim1_val
   Symptoms That Led to the Finding:
   ---------------------------------
					     , event   as dim2_val
      Wait class "User I/O" was consuming significant database time.
					     , sample_count as dim12_count
      Impact is 15.24 active sessions, 90.88% of total activity.


					     , dense_rank() over
Finding 4: Undersized SGA
Impact is 1.37 active sessions, 8.16% of total activity.
						(partition by wait_class
--------------------------------------------------------
The SGA was inadequately sized, causing additional I/O or hard parses.

The value of parameter "sga_target" was "9664 M" during the analysis period.

						     order by sample_count desc
   Recommendation 1: Database Configuration
   Estimated benefit is .4 active sessions, 2.38% of total activity.
							     , event
   -----------------------------------------------------------------
   Action
      Increase the size of the SGA by setting the parameter "sga_target" to
      10872 M.


   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
						) as dim12_rank
      Impact is 15.24 active sessions, 90.88% of total activity.


Finding 5: Global Cache Messaging
					     , sum(sample_count) over
Impact is .93 active sessions, 5.56% of total activity.
-------------------------------------------------------
Inter-instance messaging was consuming significant database time on this
instance.
						(partition by wait_class

   Recommendation 1: Application Analysis
   Estimated benefit is .93 active sessions, 5.56% of total activity.

   ------------------------------------------------------------------
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on Cluster waits. For example, the UPDATE statement
						) as dim1_count
      with SQL_ID "35dumc2tpr9dv" is responsible for 100% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
					     , uniq_sqlids
   ---------------------------------
      Wait class "Cluster" was consuming significant database time.
      Impact is 1.06 active sessions, 6.31% of total activity.

					     , uniq_xids


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					     , uniq_sessions

	  Additional Information
	  ----------------------

					     , uniq_instances
Miscellaneous Information
-------------------------
Wait class "Application" was not consuming significant database time.
Wait class "Commit" was not consuming significant database time.
					     , inst_id
Wait class "Concurrency" was not consuming significant database time.
Wait class "Configuration" was not consuming significant database time.
CPU was not a bottleneck for the instance.

Wait class "Network" was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
					from grouped_ash
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.
Hard parsing of SQL statements was not consuming significant database time.
				       where gid = 13

The database's maintenance windows were active during 100% of the analysis
period.

					 and wait_class is not null
RAC Statistics  DB/Inst: P30DB/p30db2	Snaps: 81-82

				Begin	End
				----- -----
					 and event is not null )
	   Number of Instances:     2	  2
	       Number of LMS's:     2	  2
      Number of realtime LMS's:     2	  2  (0 priority changes)

			     group by dim1_val

Global Cache Load Profile
				     , dim1_count
				     , (case when dim12_rank &lt;= 10
					    then dim2_val
~~~~~~~~~~~~~~~~~~~~~~~~~		   Per Second	    Per Transaction
				      ---------------	    ---------------
					    else null
  Global Cache blocks received: 		51.84		       0.86
    Global Cache blocks served: 		12.33		       0.21
					end)

			     )
     GCS/GES messages received: 	     3,811.57		      63.39
	 GCS/GES messages sent: 	     4,210.31		      70.02
	    DBWR Fusion writes: 		 0.17		       0.00
 Estd Interconnect traffic (KB) 	     2,080.13


Global Cache Efficiency Percentages (Target local+remote 100%)
		    group by (case when dim1_rank &lt;= 13
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				   then dim1_val
				   else null
Buffer access -  local cache %:   26.56
			       end)
Buffer access - remote cache %:    2.07
Buffer access - 	disk %:   71.38
Global Cache Locality	     %:   31.63


Global Cache and Enqueue Services - Workload Characteristics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	  Avg global cache cr block receive time (us):		2,851.0
			    , (case when dim1_rank &lt;= 13
     Avg global cache current block receive time (us):		1,110.6
			       Avg LMS process busy %:		    8.7

	    Avg global cache cr block build time (us):		    0.0
      Global cache log flushes for cr blocks served %:		    5.0
	    Avg global cache cr block flush time (us):	       25,135.1

	 Avg global cache current block pin time (us):		    0.0
 Global cache log flushes for current blocks served %:		    0.5
       Avg global cache current block flush time (us):	       22,121.2

		     Avg global enqueue get time (us):		  164.5

Global Cache and Enqueue Services - Messaging Statistics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Avg message sent queue time (us):		4,060.1
	     Avg message sent queue time on ksxp (us):		4,671.8
	  Avg message received kernel queue time (us):		   31.7
		 Avg message received queue time (us):		   73.3
		    Avg GCS message process time (us):		   34.2
		    Avg GES message process time (us):		   27.2

			    % of direct sent messages:		  38.04
			  % of indirect sent messages:		  61.26
			% of flow controlled messages:		   0.70
	  -------------------------------------------------------------

Cluster Interconnect
-> if Public/Source at End snap is different a '*' is displayed
~~~~~~~~~~~~~~~~~~~~
				    Begin			    End
	     --------------------------------------------------   -------
Interface    IP Address      Pub Source 			  Pub Src
----------   --------------- --- ------------------------------   --- ---
fg-priv:1    169.254.31.173  N

Global Messaging Statistics		   DB/Inst: P30DB/p30db2  Snaps: 81-82

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
Cluster reconfiguration count			 0	    0.0 	 0.0
Domain reconfiguration count			 0	    0.0 	 0.0
Global Enqueue S-optim Broadcasts		30	    0.0 	 0.0
Global Enqueue S-optim S-lock get	    79,309	  129.8 	 2.2
Global Enqueue S-optim anti-locks		45	    0.1 	 0.0
KA local message waits				 0	    0.0 	 0.0
KA local messages received			 0	    0.0 	 0.0
KA messages received actual			 0	    0.0 	 0.0
KA messages received logical			 0	    0.0 	 0.0
KA requests failed				 0	    0.0 	 0.0
KA requests succeeded				 0	    0.0 	 0.0
Pseudo reconfiguration count			 0	    0.0 	 0.0
Pseudo rm reconfig count			 0	    0.0 	 0.0
acks for commit broadcast(actual)	       311	    0.5 	 0.0
acks for commit broadcast(logical	       852	    1.4 	 0.0
broadcast msgs on commit(actual)	    13,661	   22.4 	 0.4
broadcast msgs on commit(logical)	    27,740	   45.4 	 0.8
broadcast msgs on commit(wasted)	     5,694	    9.3 	 0.2
dynamically allocated gcs resourc		 0	    0.0 	 0.0
dynamically allocated gcs shadows		 0	    0.0 	 0.0
flow control messages received			 4	    0.0 	 0.0
flow control messages sent			 6	    0.0 	 0.0
gcs assume cvt					 0	    0.0 	 0.0
gcs assume no cvt			     3,188	    5.2 	 0.1
gcs ast to fg				   481,849	  788.4 	13.1
gcs ast xid					 0	    0.0 	 0.0
gcs bidless ast to lms			       304	    0.5 	 0.0
gcs blocked converts			    32,264	   52.8 	 0.9
gcs blocked cr converts 		     1,641	    2.7 	 0.0
gcs compatible basts				 9	    0.0 	 0.0
gcs compatible cr basts (global)		21	    0.0 	 0.0
gcs compatible cr basts (local) 	    10,746	   17.6 	 0.3
gcs cr basts to PIs				 0	    0.0 	 0.0
gcs cr requests to slave			 0	    0.0 	 0.0
gcs cr serve without current lock		 0	    0.0 	 0.0
gcs dbwr flush pi msgs			   487,878	  798.3 	13.3
gcs dbwr write request msgs		       102	    0.2 	 0.0
gcs error msgs					 0	    0.0 	 0.0
gcs flash read serve requests to		 0	    0.0 	 0.0
gcs force cr block only 			 3	    0.0 	 0.0
gcs force cr grant				 1	    0.0 	 0.0
gcs force cr no current 			 0	    0.0 	 0.0
gcs forward cr to pinged instance		 0	    0.0 	 0.0
gcs grant ast				   482,153	  788.9 	13.1
gcs grant request in partial open		 0	    0.0 	 0.0
gcs immediate (compatible) conver	     2,804	    4.6 	 0.1
gcs immediate (null) converts		   744,265	1,217.8 	20.3
gcs immediate cr (compatible) con		79	    0.1 	 0.0
gcs immediate cr (null) converts	     4,971	    8.1 	 0.1
gcs lms flush pi msgs				 0	    0.0 	 0.0
gcs lms write request msgs			40	    0.1 	 0.0
gcs msgs process time(ms)		    55,628	   91.0 	 1.5
gcs msgs received			 1,624,546	2,658.2 	44.2
gcs new served by master		       145	    0.2 	 0.0
gcs out-of-order msgs				 7	    0.0 	 0.0
gcs pings refused			     2,710	    4.4 	 0.1
gcs pkey conflicts retry			 0	    0.0 	 0.0
gcs queued converts				 2	    0.0 	 0.0
gcs read-mostly failure unmount d		 0	    0.0 	 0.0
gcs reader bypass N->Xw ping loca		 0	    0.0 	 0.0

Global Messaging Statistics		   DB/Inst: P30DB/p30db2  Snaps: 81-82

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
gcs reader bypass N->Xw ping remo		 0	    0.0 	 0.0
gcs reader bypass grant X on assu		 0	    0.0 	 0.0
gcs reader bypass grant ast			 0	    0.0 	 0.0
gcs reader bypass grant fg ast			 0	    0.0 	 0.0
gcs reader bypass grant immediate		18	    0.0 	 0.0
gcs recovery claim msgs 			 0	    0.0 	 0.0
gcs refuse xid					 1	    0.0 	 0.0
gcs refuse xid to fg				 1	    0.0 	 0.0
gcs refuse xid to lms				 0	    0.0 	 0.0
gcs refuse xid to master			 0	    0.0 	 0.0
gcs regular cr					 0	    0.0 	 0.0
gcs resources for dynamic sga			 0	    0.0 	 0.0
gcs retry convert request			 0	    0.0 	 0.0
gcs shadows for dynamic sga			 0	    0.0 	 0.0
gcs share recovery bast 			 0	    0.0 	 0.0
gcs side channel msgs actual		     4,271	    7.0 	 0.1
gcs side channel msgs logical		   733,999	1,201.0 	20.0
gcs stale cr					52	    0.1 	 0.0
gcs undo cr					53	    0.1 	 0.0
gcs write notification msgs			 0	    0.0 	 0.0
gcs writes refused				 0	    0.0 	 0.0
ges msgs process time(ms)			84	    0.1 	 0.0
ges msgs received			     3,088	    5.1 	 0.1
ges remote lock allocation		       -59	   -0.1 	 0.0
global posts dropped				 0	    0.0 	 0.0
global posts queue time 			 0	    0.0 	 0.0
global posts queued				 0	    0.0 	 0.0
global posts requested				 0	    0.0 	 0.0
global posts sent				 0	    0.0 	 0.0
implicit batch messages received	    51,320	   84.0 	 1.4
implicit batch messages sent		    62,233	  101.8 	 1.7
lmd msg send time(ms)				 0	    0.0 	 0.0
lms(s) msg send time(ms)			 0	    0.0 	 0.0
messages flow controlled		    14,690	   24.0 	 0.4
messages queue sent actual		   192,417	  314.8 	 5.2
messages queue sent logical		   591,742	  968.2 	16.1
messages received actual		   726,061	1,188.0 	19.8
messages received logical		 1,627,634	2,663.2 	44.3
messages sent directly			   794,428	1,299.9 	21.6
messages sent indirectly		 1,279,355	2,093.4 	34.8
messages sent not implicit batche	    35,605	   58.3 	 1.0
messages sent pbatched			   743,065	1,215.8 	20.2
msgs causing lmd to send msgs			 0	    0.0 	 0.0
msgs causing lms(s) to send msgs		 0	    0.0 	 0.0
msgs received kernel queue time (   51,672,907,311 8.455029E+07  1,406,142.0
msgs received queue time (ms)		   119,366	  195.3 	 3.2
msgs received queued			 1,627,634	2,663.2 	44.3
msgs sent queue time (ms)		 2,564,206	4,195.7 	69.8
msgs sent queue time on ksxp (ms)	 4,619,835	7,559.2        125.7
msgs sent queued			   631,569	1,033.4 	17.2
msgs sent queued on ksxp		   988,874	1,618.1 	26.9
number of broadcasted resources 		 0	    0.0 	 0.0
number of directly freed master r		 0	    0.0 	 0.0
number of ges deadlock detected 		 0	    0.0 	 0.0
number of lock borrowed by LMD			 0	    0.0 	 0.0
number of received ODPS messages		 0	    0.0 	 0.0
number of received RBA messages 		 0	    0.0 	 0.0
number of resource borrowed by LM		 0	    0.0 	 0.0
number of sent ODPS messages			 0	    0.0 	 0.0
number of sent RBA messages			 0	    0.0 	 0.0

Global Messaging Statistics		   DB/Inst: P30DB/p30db2  Snaps: 81-82

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
process batch messages received 	   106,403	  174.1 	 2.9
process batch messages sent		    81,411	  133.2 	 2.2
receiver cycle time			   203,689	  333.3 	 5.5
receiver loop count			   843,646	1,380.4 	23.0
			  ------------------------------------------------------


Global CR Server Statistics		   DB/Inst: P30DB/p30db2  Snaps: 81-82

Statistic				    Total
------------------------------ ------------------
CR Block Requests			      126
CURRENT Block Requests			    1,388
Data Block Requests			      126
Undo Block Requests				0
TX Block Requests			    1,341
Current Results 			    1,482
Private results 				0
Zero Results					0
Disk Read Results			       32
Fail Results					0
Fairness Down Converts			       61
Light Works					4
Flushes 				       74
Builds					      126
Errors						0
			  ------------------------------------------------------

Global Current Server Statistics	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Pins    = CURRENT Block Pin Operations
-> Flushes = Redo Flush before CURRENT Block Served Operations

Statistic	  Total % <100us   % <1ms  % <10ms % <100ms    % <1s   % <10s
---------- ------------ -------- -------- -------- -------- -------- --------
Pins		      2    50.00    50.00
Flushes 	     33 		     57.58    39.39	3.03
			  ------------------------------------------------------

Global Cache Transfer Statistics	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested (Congst) - Block Transfer impacted by Remote System Load
-> ordered by CR + Current Blocks Received desc

			       CR			  Current
		 ----------------------------- -----------------------------
				   then dim2_val
Inst Block	   Blocks      %      %      %	 Blocks      %	    %	   %
  No Class	 Received  Immed   Busy Congst Received  Immed	 Busy Congst
---- ----------- -------- ------ ------ ------ -------- ------ ------ ------
   1 data block       389   98.2    1.0     .8	 30,691   65.7	 34.0	  .3
				   else null
   1 Others	       64  100.0     .0     .0	    551   80.8	 19.2	  .0
   1 undo header       18   55.6   44.4     .0	      5   40.0	 60.0	  .0
			  ------------------------------------------------------

Global Cache Transfer Times (us)	   DB/Inst: P30DB/p30db2  Snaps: 81-82
			       end)
-> Avg Time - average time of all blocks (Immed,Busy,Congst) in us
-> Immed, Busy, Congst -  Average times in us
-> ordered by CR + Current Blocks Received desc


		    CR Avg Time (us)	     Current Avg Time (us)
	      --------------------------- ---------------------------
Inst Block
  No Class	 All  Immed   Busy Congst    All  Immed   Busy Congst
---- -------- ------ ------ ------ ------ ------ ------ ------ ------
			   ) dim_data
   1 data blo	1694	806  83373   5969   1085   1043   1056	14189
   1 others	 495	495    N/A    N/A   1139    628   3281	  N/A
   1 undo hea  36409	441  81369    N/A   1159   1764    756	  N/A
			) t
   1 undo blo	 N/A	N/A    N/A    N/A    N/A    N/A    N/A	  N/A
			  ------------------------------------------------------

Global Cache Transfer (Immediate)	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
		     )select xmlconcat((select xml_frag from filter_xml),
-> % of Blocks Received requiring 2 or 3 hops
-> ordered by CR + Current Blocks Received desc

				   CR			    Current
		      --------------------------- ---------------------------
		      xmlelement(&quot;dim_list&quot;,
 Src Block     Blocks  Immed Blks	%	%  Immed Blks	    %	    %
				 xmlconcat((select dim_frag from component_1_xml), (select dim_frag from component_2_xml), (select dim_frag from component_3_xml), (select dim_frag from component_4_xml)))
		) from sys.dual</pre_sqltext></td>
</tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9tgj4g8y4rwy8"></a>9tgj4g8y4rwy8</td><td class='awrc'><pre_sqltext class="awr">select type#, blocks, extents, minexts, maxexts, extsize, extpct, user#, iniexts, NVL(lists, 65535), NVL(groups, 65535), cachehint, hwmincr,  NVL(spare1, 0), NVL(scanhint, 0), NVL(bitmapranges, 0) from seg$ where ts#=:1 and file#=:2 and block#=:3</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="9tt2m0mpc2qqp"></a>9tt2m0mpc2qqp</td><td class='awrnc'><pre_sqltext class="awr">select /*+ index(idl_char$ i_idl_char1) */ piece#, length, piece from idl_char$ where obj#=:1 and part=:2 and version=:3 order by piece#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9wk0gqnd4ng50"></a>9wk0gqnd4ng50</td><td class='awrc'><pre_sqltext class="awr">SELECT XMLCONCAT(XMLELEMENT( &quot;sql_data&quot;,  SYS.PRVT_RTADDM.GETSECTIONS(:B2 ,  :B1 , 'all'))) FROM SYS.DUAL</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="9zbjgq87hy6uv"></a>9zbjgq87hy6uv</td><td class='awrnc'><pre_sqltext class="awr">select t.ts#, t.file#, t.block#, nvl(t.bobj#, 0), nvl(t.tab#, 0), t.intcols, nvl(t.clucols, 0), t.flags, t.pctfree$, t.pctused$, t.initrans, t.maxtrans, t.rowcnt, t.blkcnt, t.empcnt, t.avgspc, t.chncnt, t.avgrln, t.analyzetime, t.samplesize, t.cols, t.property, nvl(t.degree, 1), nvl(t.instances, 1), t.avgspc_flb, t.flbcnt, t.kernelcols, nvl(t.trigflag,  0), nvl(t.spare1, 0), nvl(t.spare2, 0), t.spare4, t.spare6, ts.cachedblk, ts.cachehit, ts.logicalread, ts.im_imcu_count, ts.im_block_count, ts.im_sys_incarnation, ts.im_stat_update_time, ts.scanrate, nvl(t.acdrflags,  0), nvl(t.acdrtsobj#,  0), t.acdrdefaulttime,  nvl(t.acdrrowtsintcol#,  0) from tab$ t, tab_stats$ ts where t.obj#= :1 and t.obj# = ts.obj# (+)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="a3jpjzh7mtwwp"></a>a3jpjzh7mtwwp</td><td class='awrc'><pre_sqltext class="awr">select /*+ index(idl_ub2$ i_idl_ub21) */ piece#, length, piece from idl_ub2$ where obj#=:1 and part=:2 and version=:3 order by piece#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="a95n8p4vpxmps"></a>a95n8p4vpxmps</td><td class='awrnc'><pre_sqltext class="awr">begin prvt_hdm.execute_slave_actions; end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="acmvv4fhdc9zh"></a>acmvv4fhdc9zh</td><td class='awrc'><pre_sqltext class="awr">select obj#, type#, ctime, mtime, stime,  status,	dataobj#,  flags,  oid$,  spare1,  spare2,  spare3,  signature,  spare7,  spare8,  spare9,  nvl(dflcollid,  16382),  creappid,	creverid,  modappid,  modverid,  crepatchid,  modpatchid from obj$ where owner#=:1 and name=:2 and namespace=:3 and remoteowner is null and linkname is null and subname is null</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="afx304d90ps3z"></a>afx304d90ps3z</td><td class='awrnc'><pre_sqltext class="awr">select rowcnt,  blkcnt,	empcnt,  avgspc,  chncnt,  avgrln,  analyzetime,  samplesize,  avgspc_flb,  flbcnt,  flags from tab_stats$ where obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="asvzxj61dc5vs"></a>asvzxj61dc5vs</td><td class='awrc'><pre_sqltext class="awr">select timestamp,	flags from fixed_obj$ where obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="b1nsgh4u6gc3q"></a>b1nsgh4u6gc3q</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '18';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;
Inst Class	 Lost	 Received    2hop    3hop    Received	 2hop	 3hop
---- -------- ------- ----------- ------- ------- ----------- ------- -------

   1 data blo		      382   100.0     0.0      20,155	100.0	  0.0
   1 others		       64   100.0     0.0	  445	100.0	  0.0
   1 undo hea		       10   100.0     0.0	    2	100.0	  0.0
v_do_scan_query BOOLEAN :=FALSE;
   1 undo blo		      N/A     N/A     N/A	  N/A	  N/A	  N/A
			  ------------------------------------------------------

v_scan_query_quota  BOOLEAN := FALSE;
Global Cache Times (Immediate)		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Blocks Lost, 2-hop and 3-hop Average times in (us)
v_scan_workload_only BOOLEAN := FALSE;
-> ordered by CR + Current Blocks Received desc

		       CR Avg Time (us)   Current Avg Time (us)
		     -------------------- --------------------
v_random_workload_only BOOLEAN := FALSE;
 Src Block	Lost
Inst Class	Time  Immed   2hop   3hop  Immed   2hop   3hop
---- -------- ------ ------ ------ ------ ------ ------ ------

   1 data blo		806    806    N/A   1043   1043    N/A
   1 others		495    495    N/A    628    628    N/A
   1 undo hea		441    441    N/A   1764   1764    N/A

   1 undo blo		N/A    N/A    N/A    N/A    N/A    N/A
			  ------------------------------------------------------

Interconnect Ping Latency Statistics	   DB/Inst: P30DB/p30db2  Snaps: 81-82
v_random_block PLS_INTEGER := 1;
-> Ping latency of the roundtrip of a message from this instance to -> target in
-> The target instance is identified by an instance number.
-> Average and standard deviation of ping latency is given in microseconds
v_tmp PLS_INTEGER;
-> for message sizes of 500 bytes and 8K.
-> Note that latency of a message from the instance to itself is used as
-> control, since message latency can include wait for CPU
v_now PLS_INTEGER;

   Target 500B Pin Avg La      Stddev  8K Ping Avg La	   Stddev
 Instance    Count 500B m    500B msg	 Count 8K msg	   8K msg
v_brick_wall PLS_INTEGER;
--------- -------- ------ ----------- -------- ------ -----------
	1	56    956	  .55	    61	  972	      .54
	2	56    496	  .52	    61	  478	      .49

			  ------------------------------------------------------

Interconnect Throughput by Client	   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Throughput of interconnect usage by major consumers
v_begin_time PLS_INTEGER;
-> All throughput numbers are megabytes per second

			Send	 Receive
Used By 	  Mbytes/sec  Mbytes/sec
v_end_time PLS_INTEGER;
---------------- ----------- -----------
Global Cache		 .13	     .45
Parallel Query		 .01	     .01
v_total_time PLS_INTEGER;
DB Locks		 .91	     .69
DB Streams		 N/A	     N/A
Other			 .00	     .00
			  ------------------------------------------------------
v_begin_cpu_tm PLS_INTEGER;

Interconnect Device Statistics		   DB/Inst: P30DB/p30db2  Snaps: 81-82
-> Throughput and errors of interconnect devices (at OS level)
v_end_cpu_tm PLS_INTEGER;
-> All throughput numbers are megabytes per second

Device Name	IP Address	 Public Source
--------------- ---------------- ------ -------------------------------
v_total_cpu_tm PLS_INTEGER;
				  Send	   Send
       Send	Send	 Send	Buffer	Carrier
 Mbytes/sec   Errors  Dropped  Overrun	   Lost

----------- -------- -------- -------- --------
			       Receive	Receive
    Receive  Receive  Receive	Buffer	  Frame
 Mbytes/sec   Errors  Dropped  Overrun	 Errors
v_do_sleeps BOOLEAN := FALSE;
----------- -------- -------- -------- --------
fg-priv:1	169.254.31.173	 NO
	.00	   0	    0	     0	      0
	.00	   0	    0	     0	      0
v_loop_control BOOLEAN := FALSE;
			  ------------------------------------------------------

Dynamic Remastering Statistics		   DB/Inst: P30DB/p30db2  Snaps: 81-82
v_update_quota BOOLEAN := FALSE;
-> Times are in seconds
-> Affinity objects - Affinity objects mastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot

							per    Begin	  End
v_select_only_workload BOOLEAN := FALSE;
Name					Total	Remaster Op	Snap	 Snap
-------------------------------- ------------ ------------- -------- --------
remaster ops				    1	       1.00
remastered objects			    1	       1.00
v_update_only_workload BOOLEAN := FALSE;
replayed locks received 	       26,771	  26,771.00
replayed locks sent			6,991	   6,991.00
resources cleaned			    0	       0.00
v_do_update BOOLEAN := FALSE;
remaster time (s)			  1.5	       1.46
freeze time (s) 			  0.0	       0.01
cleanup time (s)			  0.1	       0.07
v_do_hot_schema BOOLEAN := FALSE;
replay time (s) 			  0.1	       0.05
fixwrite time (s)			  0.1	       0.11
sync time (s)				  1.2	       1.20
affinity objects					N/A	   3	    3
v_stop_immediate BOOLEAN := FALSE;
read-mostly objects					N/A	   1	    1
affinity objects (other inst)				N/A	  15	   14
read-mostly objects (persistent)			N/A	   0	    0
			  ------------------------------------------------------
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

End of Report

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);
Report written to awr.txt

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
SQL> 		--
SQL> SQL> SQL> 		-- Do an UPDATE statement
SQL> 		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
SQL> SQL> 		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="b1wc53ddd6h3p"></a>b1wc53ddd6h3p</td><td class='awrc'><pre_sqltext class="awr">select audit$, options from procedure$ where obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bcmft1hf3v16j"></a>bcmft1hf3v16j</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '19';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;





IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;

Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt.  Default value is 'html'.

'html'		HTML format (default)
'text'		Text format
'active-html'	Includes Performance Hub active report

	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--

		-- Increment count of UPDATES and set UPDATE quota flag if needed
Type Specified:  text

		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bnm8uw9y0ubhg"></a>bnm8uw9y0ubhg</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '28';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="brk04qfvsb4bb"></a>brk04qfvsb4bb</td><td class='awrnc'><pre_sqltext class="awr">select current_value from hang_manager_parameters where name = :1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="c15gnn7knr6rj"></a>c15gnn7knr6rj</td><td class='awrc'><pre_sqltext class="awr">WITH ash as
  (SELECT round((cast(sample_time as date) - :1) * 24 * 60 * 60, 0) as t,
	  inst_id || '_' || session_id || '_' || session_serial# as sid,
	  decode(session_type,	'FOREGROUND',  1,  0) as session_type,
	  nvl(sql_id, 'null') as sql_id,
	  nvl(sql_opcode, 0) as sql_opcode,
	  nvl(force_matching_signature, 0) as fms,
	  QC_INSTANCE_ID || '_' || QC_SESSION_ID || '_' || qc_session_serial# as qsid,
	  decode(session_state,  'ON CPU',  'CPU',  event) as wait_event,
	  decode(session_state,  'ON CPU',  'CPU',  wait_class) as wait_class,
	  decode(blocking_session_status,  'VALID',  blocking_inst_id || '_' || BLOCKING_SESSION || '_' || BLOCKING_SESSION_SERIAL#,  '__') as bsid,
	  nvl(service_hash, 0) as service_hash,
	  nvl(program, '__') as program,
	  nvl(module, '__') as module,
	  nvl(action, '__') as action,	 nvl(pga_allocated, 0) as pga ,  decode(in_connection_mgmt,  'Y',  1,  0)
		     + decode(in_parse,  'Y',  2,  0)
		     + decode(in_hard_parse,  'Y',  4,	0)
		     + decode(in_sql_execution,  'Y',  8,  0)
		     + decode(in_plsql_execution,  'Y',  16,  0)
		     + decode(in_plsql_rpc,  'Y',  32,	0)
		     + decode(in_plsql_compilation,  'Y',  64,	0)
		     + decode(in_java_execution,  'Y',	128,  0)
		     + decode(in_bind,	'Y',  256,  0)
		     + decode(in_cursor_close,	'Y',  512,  0) as tm   FROM   sys.gv_$active_session_history
   WHERE  sample_time &gt;= :2 and sample_time &lt;= :3
     AND  (session_state = 'ON CPU' or wait_class &lt;&gt; 'Idle')   AND
       ora_hash(inst_id || '_' || session_id || '_' || sample_id
	       , 100000, 0) &lt;= (100000 / 35.11075868356197073333333333333333333333)	 ),
  map_op as ( SELECT xmlelement(&quot;op&quot;, xmlagg(xmlelement(&quot;m&quot;,  xmlattributes(
	   v.command_type as &quot;i&quot;,  v.command_name as &quot;n&quot;
	 )))) as x
  FROM	 (SELECT distinct sql_opcode FROM ash WHERE sql_opcode &lt;&gt; 0) a ,
	 sys.v_$sqlcommand v
  WHERE  a.sql_opcode = v.command_type	),
  map_sql as
  (SELECT fms,	sql_opcode,  sql_id,  rownum as id
   FROM   (SELECT fms,	sql_opcode,  max(sql_id) as sql_id
	   FROM ash GROUP BY fms,  sql_opcode)
  ),
  map_sql_xml as
  (SELECT xmlelement(&quot;sql&quot;, xmlagg(xmlelement(&quot;m&quot;,	xmlattributes(
	    fms as &quot;f&quot;,  sql_opcode as &quot;o&quot;,  sql_id as &quot;s&quot;,  id as &quot;i&quot;
	  )))) as x
   FROM   map_sql
  ),
  map_sid as
  (SELECT a,  rownum as id
   FROM   (SELECT sid as a FROM ash
	   UNION
	   SELECT qsid as a FROM ash
	   UNION
	   SELECT bsid as a FROM ash)
  ),
  map_sid_xml as
  (SELECT xmlelement(&quot;sid&quot;, xmlagg(xmlelement(&quot;m&quot;,	xmlattributes(
	     a as &quot;v&quot;,  id as &quot;i&quot;
	   )))) as x
   FROM   map_sid
  ),
  map_event as
  (SELECT wait_class,  wait_event,  rownum as id
   FROM  (SELECT DISTINCT wait_class , wait_event FROM ash)
  ),
  map_event_xml as
  (SELECT xmlelement(&quot;evt&quot;, xmlagg(xmlelement(&quot;m&quot;,	xmlattributes(
	     wait_class as &quot;c&quot;,  wait_event as &quot;e&quot;,  id as &quot;i&quot;
	   )))) as x
   FROM   map_event
  ),
  map_service as
  (SELECT a.service_hash as sh,  s.service_id as id,  s.name as name
   FROM  (SELECT distinct service_hash from ash) a,
	 sys.v_$services s
   WHERE s.name_hash = a.service_hash
  ),
  map_service_xml as
  (SELECT xmlelement(&quot;service&quot;, xmlagg(xmlelement(&quot;m&quot;,  xmlattributes(
	     sh as &quot;h&quot;,  name as &quot;n&quot;,  id as &quot;i&quot;
	   )))) as x
   FROM   map_service
  ),
  map_program as
  (SELECT program,  rownum as id
   FROM  (SELECT distinct program FROM ash)
  ),
  map_program_xml as
  (SELECT xmlelement(&quot;program&quot;, xmlagg(xmlelement(&quot;m&quot;,  xmlattributes(
	     program as &quot;v&quot;,	id as &quot;i&quot;
	  )))) as x
   FROM   map_program
  ),
  map_module as
  (SELECT module,  rownum as id
   FROM  (SELECT distinct module FROM ash)
  ),
  map_module_xml as
  (SELECT xmlelement(&quot;module&quot;, xmlagg(xmlelement(&quot;m&quot;,  xmlattributes(
	     module as &quot;v&quot;,  id as &quot;i&quot;
	  )))) as x
   FROM   map_module
  ),
  map_action as
  (SELECT action,  rownum as id
   FROM  (SELECT distinct action FROM ash)
  ),
  map_action_xml as
  (SELECT xmlelement(&quot;action&quot;, xmlagg(xmlelement(&quot;m&quot;,  xmlattributes(
	     action as &quot;v&quot;,  id as &quot;i&quot;
	  )))) as x
   FROM   map_action
  ),
  ash_xml as
  (SELECT xmlelement(&quot;data&quot;, xmlagg(xmlelement(&quot;a&quot;,
	    ash.t || ', ' ||
	    ms1.id || ', ' ||
	    ash.session_type || ', ' ||
	    ms2.id || ', ' ||
	    ms3.id  || ', ' ||
	    msql.id  || ', ' ||
	    trunc(ash.pga/(1024*1024)) || ', ' ||
	    mp.id  || ', ' ||
	    ms.id  || ', ' ||



	    mm.id  || ', ' ||
	    ma.id  || ', ' ||
	    me.id  || ', ' ||
	    ash.tm
	  ))) as x
   FROM   ash,
	  map_sid ms1,	map_sid ms2,  map_sid ms3,
	  map_event me,
	  map_service ms,
	  map_program mp,
	  map_module mm,
	  map_action ma,
	  map_sql    msql
   WHERE  ash.sid = ms1.a
     AND  ash.qsid = ms2.a
     AND  ash.bsid = ms3.a
     AND  ash.wait_class = me.wait_class
     AND  ash.wait_event = me.wait_event
     AND  ash.service_hash = ms.sh
     AND  ash.program = mp.program
     AND  ash.module = mm.module
     AND  ash.action = ma.action
     AND  ash.fms = msql.fms
  )
SELECT xmlelement(&quot;ash_data&quot;,
	  xmlattributes(round(:4, 4) as &quot;sampling_ratio&quot;,
			round(:5, 4) as &quot;avg_active_sessions&quot;,
			round((:6 - :7) * (24 * 60 * 60), 0) as &quot;secs&quot;),
	  map_op.x,
	  map_sid_xml.x,
	  map_event_xml.x,
	  map_service_xml.x,
	  map_program_xml.x,
	  map_module_xml.x,
	  map_action_xml.x,
	  map_sql_xml.x,
	  ash_xml.x
       ) as data
FROM   map_op,	map_sid_xml,  map_event_xml,  map_service_xml,
       map_program_xml,  map_module_xml,  map_action_xml,
       map_sql_xml,  ash_xml </pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="c6108cmanwd01"></a>c6108cmanwd01</td><td class='awrnc'><pre_sqltext class="awr">
      select xmlagg(nvl2(event,
		   xmlelement(&quot;events&quot;,
    		     xmlattributes(type as &quot;type&quot;,
				   description as &quot;desc&quot;),
		   event),
		   null))
	from (
	 select type,  description,
		xmlagg(xmlelement(&quot;event&quot;,
		 xmlattributes(to_char(max_time, :date_fmt) as &quot;time&quot;,
			       max_id as &quot;id&quot;,
			       decode(cnt, 1, null, cnt) as &quot;count&quot;,
			       decode(cnt, 1, null,
				 to_char(min_time, :date_fmt)) as &quot;min_time&quot;,
			       decode(cnt, 1, null, min_id) as &quot;min_id&quot;))
		 order by max_time) event
	   from (
	     -- group events
	     select type,  description,  next_head,
		    min(end_time) min_time,  max(end_time) max_time,
		    min(id)  min_id,  max(id) max_id,
		    count(*) cnt
	       from (
		 -- addm tasks + instance startups - train grouping
		 -- find the next head
		 select type,  description,  id,  end_time,  pos,
			case when pos is null
			  then lead(pos) ignore nulls
				 over(partition by type
					  order by end_time)
			  else pos
			 end next_head
		   from ( -- determine head/tail
		     select type,  description,  id,  end_time,
			    case when (type = 'addm'
				  and next_delta &gt; :l_bucket_interval)
				   or (type = 'startup'
				  and next_delta &gt; 60)
				 then 'HEAD' ||
				   to_char(
				     (row_number()
					over (partition by type
						  order by end_time)),
				     '000000009')
				 else null
			     end		       pos
		      from ( -- compute distance
			select type,  description,  id,  end_time,
			       ( (cast(
				    lead(end_time)
				     over (partition by type
					       order by type,  end_time)
				     as date) -
				 (cast(end_time as date)))*86400)
							    next_delta
			  from ( -- retrieve tasks

			    select 'addm' type,  end_time,  task_name id,
				   'task_name' description
			      from dba_addm_tasks t,
				  (select min(snap_id) min_snap_id,
					  max(snap_id) max_snap_id,
					  max(instance_number) max_inst
				     from awr_root_snapshot
				    where dbid = :m_dbid
				      and end_interval_time between
					    to_timestamp(:p_start_time,
							 :date_fmt)
					and to_timestamp(:p_end_time,
							 :date_fmt)) s
			     where t.dbid = :m_dbid
			       and begin_snap_id &gt;= s.min_snap_id - 1
			       and begin_snap_id &lt; s.max_snap_id
			       and how_created = 'AUTO'
			       and ( s.max_inst = 1 or
				     requested_analysis = 'DATABASE')

			     union all


			    select 'startup' type,  startup_time,
				   instance_name id,
				   'instance_name' description
			     from awr_root_database_instance di
			    where di.dbid = :m_dbid
			      and instance_number
				    between :m_inst_id_low
					and :m_inst_id_high
			      and startup_time between
				    to_date(:p_start_time, :date_fmt)
				    and to_date(:p_end_time, :date_fmt))))
		 union all
		 -- rt addm tasks,  bucketize
		 -- compute buckets
		 select type,  description,  id,  time,
			to_char(bid) pos,  to_char(bid) next_head
		   from ( -- compute bucket id
		     select type,  time,  id,  description,
			    trunc(
			      ((extract(day from
				  (time -
				   to_timestamp(:p_start_time, :date_fmt)))
								      *86400) +
			      (extract(hour from
				  (time -
				   to_timestamp(:p_start_time, :date_fmt)))
								       *3600) +
			      (extract(minute from
				  (time -
				   to_timestamp(:p_start_time, :date_fmt)))
									 *60) +
			      (extract(second from
				  (time -
				   to_timestamp(:p_start_time, :date_fmt)))) ) /
			      :l_bucket_interval) + 1 bid
		       from ( -- rt addm tasks
			      -- convert to timestamps in case we have other
			      -- events that are timestamp based
			 select 'perf' type,
				cast(report_generation_time as timestamp) time,
				to_char(report_id) id,
				'report_id' description
			   from dba_hist_reports_timebands t
			  where t.component_name = 'perf'
			    and t.instance_number between :m_inst_id_low
						      and :m_inst_id_high
			    and t.band_start_time &gt;=
				  trunc(to_date(:p_start_time, :date_fmt))
			    and t.band_start_time &lt;=
				  trunc(to_date(:p_end_time, :date_fmt))
			    and t.period_start_time &gt;=
				  to_date(:p_start_time, :date_fmt)
			    and t.period_end_time &lt;=
				  to_date(:p_end_time, :date_fmt))))
	      group by type, description, next_head)
	  group by type, description)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="c863fngb197rm"></a>c863fngb197rm</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '1';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="crcf813m8k6q0"></a>crcf813m8k6q0</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '16';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="d49x1sm5j34ms"></a>d49x1sm5j34ms</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '8';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="d7m0vnz9zpwju"></a>d7m0vnz9zpwju</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '9';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="drhdgsbjxfacu"></a>drhdgsbjxfacu</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '3';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="drktaf71uygnb"></a>drktaf71uygnb</td><td class='awrnc'><pre_sqltext class="awr">BEGIN
	  sys.prvt_hdm.auto_execute(
	    db_id =&gt; :bind_dbid,
	    inst_id =&gt; :bind_inst,
	    end_snap =&gt; :bind_snap,
	    time_left_in_secs =&gt; :bind_time);
	END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="dycmpuj6apqjs"></a>dycmpuj6apqjs</td><td class='awrc'><pre_sqltext class="awr">select pc.intcol#,  pc.col# ,  pc.type#,  pc.spare1,  pc.segcol#,	pc.charsetform,    nvl(c.collintcol#,  0),  nvl(c2.type#,  0),	nvl(c2.charsetid,  0),	   nvl(c2.charsetform ,  0),  nvl(c2.collid,  0) from partcol$ pc,  col$ c,  col$ c2 where pc.obj# = :1 and pc.obj# = c.obj#(+) and pc.intcol# = c.intcol#(+) and c.obj# = c2.obj#(+) and c.collintcol# = c2.intcol#(+) order by pc.pos#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f3ww8rgva3hrs"></a>f3ww8rgva3hrs</td><td class='awrnc'><pre_sqltext class="awr">update /* KSXM:FLUSH COL */ sys.col_usage$ set		       equality_preds	 = equality_preds    + decode(bitand(:flag, 1), 0, 0, 1),    equijoin_preds    = equijoin_preds    + decode(bitand(:flag, 2), 0, 0, 1),    nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag, 4), 0, 0, 1),	 range_preds	   = range_preds       + decode(bitand(:flag, 8), 0, 0, 1),    like_preds	 = like_preds	     + decode(bitand(:flag, 16), 0, 0, 1),    null_preds	= null_preds	    + decode(bitand(:flag, 32), 0, 0, 1),    flags	       = flags + :flag - bitand(flags, :flag),	   timestamp = :time where obj# = :objn and intcol# = :coln</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f7xnvp44nukp7"></a>f7xnvp44nukp7</td><td class='awrc'><pre_sqltext class="awr">insert into  wrm$_snapshot_details  (snap_id, dbid, instance_number, table_id, begin_time, end_time, step_id)    values (:snap_id, :dbid, :instance_number, :bind1, :bind2, :bind3, :step_id)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fg11facbfjwvx"></a>fg11facbfjwvx</td><td class='awrnc'><pre_sqltext class="awr">
	  SELECT  /*+ no_monitor leading(mo_px) use_hash(mo_px) */
	  xmlelement(
	    &quot;sql_monitor_list_report&quot;,
	    xmlattributes(
	      :report_version				  as &quot;version&quot;,
	      :total_count				  as &quot;total_count&quot;,
	      to_char(:new_last_refresh_time,
		      :date_fmt)			  as &quot;sysdate&quot;,
	      :auto_refresh				  as &quot;auto_refresh&quot;,
	      :base_path				  as &quot;base_path&quot;),
	    case
	      when :debug_xml is NULL
	      then NULL
	      else xmltype(:debug_xml)
	    end,
	    xmlagg(
	      case
	       when mo.dbop_name is not NULL
	       then
	       xmlelement(
		 &quot;dbop&quot;,
		  xmlattributes(mo.detail_level 	as &quot;detail&quot;,
				mo.report_ref		as &quot;report_ref&quot;,
				mo.dbop_name		as &quot;dbop_name&quot;,
				to_char(mo.sql_exec_start,
					:date_fmt)	as &quot;dbop_exec_start&quot;,
				mo.dbop_exec_id 	as &quot;dbop_exec_id&quot;),
		 decode(
		   mo.detail_level,
		   'P',
		   xmlforest(
		     mo.status			   as &quot;status&quot;,
		     to_char(mo.last_refresh_time,
			     :date_fmt) 	   as &quot;last_refresh_time&quot;,
		     mo.refresh_count		   as &quot;refresh_count&quot;)),
		 decode(
		   mo.detail_level,
		   'F',
		   xmlforest(
		     mo.status			   as &quot;status&quot;,
		     to_char(mo.first_refresh_time,
			     :date_fmt) 	   as &quot;first_refresh_time&quot;,
		     to_char(mo.last_refresh_time,
			     :date_fmt) 	   as &quot;last_refresh_time&quot;,
		     mo.refresh_count		   as &quot;refresh_count&quot;,
		     mo.inst_id 		   as &quot;inst_id&quot;,
		     mo.sid			   as &quot;session_id&quot;,
		     mo.session_serial# 	   as &quot;session_serial&quot;,
		     mo.user#			   as &quot;user_id&quot;,
		     mo.username		   as &quot;user&quot;,
		     decode(mo.con_id,	0,  NULL,  mo.con_id)
						   as &quot;con_id&quot;,
		     mo.con_name		   as &quot;con_name&quot;,
		     mo.module			   as &quot;module&quot;,
		     mo.action			   as &quot;action&quot;,
		     mo.service_name		   as &quot;service&quot;,
		     mo.client_identifier	   as &quot;client_id&quot;,
		     mo.client_info		   as &quot;client_info&quot;,
		     mo.program 		   as &quot;program&quot;,
		     mo.plsql_entry_object_id	   as &quot;plsql_entry_object_id&quot;,
		     mo.plsql_entry_subprogram_id
						as &quot;plsql_entry_subprogram_id&quot;,
		     mo.plsql_object_id 	as &quot;plsql_object_id&quot;,
		     mo.plsql_subprogram_id	as &quot;plsql_subprogram_id&quot;,
		     mo.rm_consumer_group	as &quot;rm_consumer_group&quot;,
		     mo.px_is_cross_instance	as &quot;is_cross_instance&quot;,
		     mo.px_maxdop		as &quot;dop&quot;,
		     mo.px_maxdop_instances	as &quot;instances&quot;,
		     mo.ecid			as &quot;ecid&quot;)),
		 case
		   when mo.error_number is null or
			mo.detail_level = 'N'
		   then null
		   else
		     xmlelement(&quot;error&quot;,
			      xmlattributes(mo.error_number   as &quot;number&quot;,
					    mo.error_facility as &quot;facility&quot;),
			      mo.error_message)
		 end,
		 case
		   when mo.rm_last_action is not null
		   then
		     xmlelement(&quot;rm_action&quot;,
		       xmlattributes(mo.rm_last_action	 as &quot;name&quot;,
				     mo.rm_last_action_reason as &quot;reason&quot;))
		 end,
		 decode(mo.detail_level,  'N',	null,
		  xmlelement(&quot;stats&quot;,
		   xmlattributes('monitor' as &quot;type&quot;),
		   xmlelement(&quot;stat&quot;,
			      xmlattributes('duration' as &quot;name&quot;),
			      greatest(mo.duration,
				       least(mo.elapsed_time/1000000,  1),
				       ceil(mo.queuing_time/1000000))),
		   decode(mo.elapsed_time,  0,	NULL,
			  xmlelement(&quot;stat&quot;,
				   xmlattributes('elapsed_time' as &quot;name&quot;),
				   mo.elapsed_time)),
		   decode(mo.queuing_time,  0,	NULL,
			  xmlelement(&quot;stat&quot;,
				   xmlattributes('queuing_time' as &quot;name&quot;),
				   mo.queuing_time)),
		   decode(mo.cpu_time,	0,  NULL,
			  xmlelement(&quot;stat&quot;,
				    xmlattributes('cpu_time' as &quot;name&quot;),
				    mo.cpu_time)),
		   decode(mo.user_io_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('user_io_wait_time' as &quot;name&quot;),
				mo.user_io_wait_time)),
		   decode(mo.application_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
			      xmlattributes('application_wait_time' as &quot;name&quot;),
			      mo.application_wait_time)),
		   decode(mo.concurrency_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
			      xmlattributes('concurrency_wait_time' as &quot;name&quot;),
			      mo.concurrency_wait_time)),
		   decode(mo.cluster_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('cluster_wait_time' as &quot;name&quot;),
				mo.cluster_wait_time)),
		   decode(mo.plsql_exec_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('plsql_exec_time' as &quot;name&quot;),
				mo.plsql_exec_time)),
		   decode(mo.java_exec_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('java_exec_time' as &quot;name&quot;),
				mo.java_exec_time)),
		   decode(mo.other_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('other_wait_time' as &quot;name&quot;),
				mo.other_wait_time)),
		   decode(mo.fetches,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('user_fetch_count' as &quot;name&quot;),
				mo.fetches)),
		   decode(mo.buffer_gets,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('buffer_gets' as &quot;name&quot;),
				mo.buffer_gets)),
		   decode(mo.read_reqs,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('read_reqs' as &quot;name&quot;),
				mo.read_reqs)),
		   decode(mo.read_bytes,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('read_bytes' as &quot;name&quot;),
				mo.read_bytes)),
		   decode(mo.write_reqs,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('write_reqs' as &quot;name&quot;),
				mo.write_reqs)),
		   decode(mo.write_bytes,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('write_bytes' as &quot;name&quot;),
				mo.write_bytes)),
		   case
		     when mo.io_inter_bytes is null or
			  mo.io_inter_bytes = mo.io_bytes or
			  mo.io_bytes = 0
		     then null
		     else xmlelement(&quot;stat
&quot;,
				xmlattributes('cell_offload_efficiency' as
					      &quot;name&quot;),
				round(mo.io_bytes /
				      decode(mo.io_inter_bytes,  0,  1,
					     mo.io_inter_bytes),  2))
		   end)))
	       else
	       xmlelement(
		 &quot;sql&quot;,
		 xmlattributes(mo.detail_level	       as &quot;detail&quot;,
			       mo.report_ref	       as &quot;report_ref&quot;,
			       mo.sql_id	       as &quot;sql_id&quot;,
			       to_char(mo.sql_exec_start,
				       :date_fmt)      as &quot;sql_exec_start&quot;,
			       mo.sql_exec_id	       as &quot;sql_exec_id&quot;),
		 decode(
		   mo.detail_level,
		   'P',
		   xmlforest(
		     mo.status			   as &quot;status&quot;,
		     to_char(mo.last_refresh_time,
			     :date_fmt) 	   as &quot;last_refresh_time&quot;,
		     mo.refresh_count		   as &quot;refresh_count&quot;,
		     mo.px_is_cross_instance	   as &quot;is_cross_instance&quot;,
		     mo.px_maxdop		   as &quot;dop&quot;,
		     mo.px_maxdop_instances	   as &quot;instances&quot;,
		     mo.px_servers_requested	   as &quot;px_servers_requested&quot;,
		     mo.px_servers_allocated	   as &quot;px_servers_allocated&quot;)),
		 decode(
		   mo.detail_level,
		   'F',
		   xmlforest(
		     mo.status			   as &quot;status&quot;,
		     to_char(mo.first_refresh_time,
			     :date_fmt) 	   as &quot;first_refresh_time&quot;,
		     to_char(mo.last_refresh_time,
			     :date_fmt) 	   as &quot;last_refresh_time&quot;,
		     mo.refresh_count		   as &quot;refresh_count&quot;,
		     mo.inst_id 		   as &quot;inst_id&quot;,
		     mo.sid			   as &quot;session_id&quot;,
		     mo.session_serial# 	   as &quot;session_serial&quot;,
		     mo.user#			   as &quot;user_id&quot;,
		     mo.username		   as &quot;user&quot;,
		     decode(mo.con_id,	0,  NULL,  mo.con_id)
						   as &quot;con_id&quot;,
		     mo.con_name		   as &quot;con_name&quot;,
		     mo.module			   as &quot;module&quot;,
		     mo.action			   as &quot;action&quot;,
		     mo.service_name		   as &quot;service&quot;,
		     mo.client_identifier	   as &quot;client_id&quot;,
		     mo.client_info		   as &quot;client_info&quot;,
		     mo.program 		   as &quot;program&quot;,
		     mo.sql_plan_hash_value	   as &quot;plan_hash&quot;,
		     mo.plsql_entry_object_id	   as &quot;plsql_entry_object_id&quot;,
		     mo.plsql_entry_subprogram_id
						as &quot;plsql_entry_subprogram_id&quot;,
		     mo.plsql_object_id 	as &quot;plsql_object_id&quot;,
		     mo.plsql_subprogram_id	as &quot;plsql_subprogram_id&quot;,
		     mo.rm_consumer_group	as &quot;rm_consumer_group&quot;,
		     mo.px_is_cross_instance	as &quot;is_cross_instance&quot;,
		     mo.px_maxdop		as &quot;dop&quot;,
		     mo.px_maxdop_instances	as &quot;instances&quot;,
		     mo.px_servers_requested	as &quot;px_servers_requested&quot;,
		     mo.px_servers_allocated	as &quot;px_servers_allocated&quot;,
		     mo.ecid			as &quot;ecid&quot;)),
		 case
		   when mo.error_number is null or
			mo.detail_level = 'N'
		   then null
		   else
		     xmlelement(&quot;error&quot;,
			      xmlattributes(mo.error_number   as &quot;number&quot;,
					    mo.error_facility as &quot;facility&quot;),
			      mo.error_message)
		 end,
		 case
		   when mo.rm_last_action is not null
		   then
		     xmlelement(&quot;rm_action&quot;,
		       xmlattributes(mo.rm_last_action	 as &quot;name&quot;,
				     mo.rm_last_action_reason as &quot;reason&quot;))
		 end,
		 case
		   when :sel_sqltext = 0 or
			mo.detail_level != 'F'
		   then null
		   else
		     xmlelement(
		       &quot;sql_text&quot;,
		       xmlattributes(mo.is_full_sqltext  as &quot;is_full&quot;),
		       to_clob(mo.sql_text))
		 end,
		 decode(mo.detail_level,  'N',	null,
		  xmlelement(&quot;stats&quot;,
		   xmlattributes('monitor' as &quot;type&quot;),
		   xmlelement(&quot;stat&quot;,
			      xmlattributes('duration' as &quot;name&quot;),
			      greatest(mo.duration,
				       least(mo.elapsed_time/1000000,  1),
				       ceil(mo.queuing_time/1000000))),
		   decode(mo.elapsed_time,  0,	NULL,
			  xmlelement(&quot;stat&quot;,
				   xmlattributes('elapsed_time' as &quot;name&quot;),
				   mo.elapsed_time)),
		   decode(mo.queuing_time,  0,	NULL,
			  xmlelement(&quot;stat&quot;,
				   xmlattributes('queuing_time' as &quot;name&quot;),
				   mo.queuing_time)),
		   decode(mo.cpu_time,	0,  NULL,
			  xmlelement(&quot;stat&quot;,
				    xmlattributes('cpu_time' as &quot;name&quot;),
				    mo.cpu_time)),
		   decode(mo.user_io_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('user_io_wait_time' as &quot;name&quot;),
				mo.user_io_wait_time)),
		   decode(mo.application_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
			      xmlattributes('application_wait_time' as &quot;name&quot;),
			      mo.application_wait_time)),
		   decode(mo.concurrency_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
			      xmlattributes('concurrency_wait_time' as &quot;name&quot;),
			      mo.concurrency_wait_time)),
		   decode(mo.cluster_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('cluster_wait_time' as &quot;name&quot;),
				mo.cluster_wait_time)),
		   decode(mo.plsql_exec_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('plsql_exec_time' as &quot;name&quot;),
				mo.plsql_exec_time)),
		   decode(mo.java_exec_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('java_exec_time' as &quot;name&quot;),
				mo.java_exec_time)),
		   decode(mo.other_wait_time,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('other_wait_time' as &quot;name&quot;),
				mo.other_wait_time)),
		   decode(mo.fetches,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('user_fetch_count' as &quot;name&quot;),
				mo.fetches)),
		   decode(mo.buffer_gets,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('buffer_gets' as &quot;name&quot;),
				mo.buffer_gets)),
		   decode(mo.read_reqs,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('read_reqs' as &quot;name&quot;),
				mo.read_reqs)),
		   decode(mo.read_bytes,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('read_bytes' as &quot;name&quot;),
				mo.read_bytes)),
		   decode(mo.write_reqs,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
				xmlattributes('write_reqs' as &quot;name&quot;),
				mo.write_reqs)),
		   decode(mo.write_bytes,  0,  NULL,
			  xmlelement(&quot;stat&quot;,
Current Database
				xmlattributes('write_bytes' as &quot;name&quot;),
~~~~~~~~~~~~~~~~
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db


				mo.write_bytes)),
		   decode(:top_n_count,  NULL,	NULL,
			  xmlelement(&quot;stat&quot;,
			      xmlattributes('row_rank' as &quot;name&quot;),
			      mo.row_rank)),
		   case
		     when mo.io_inter_bytes is null or
			  mo.io_inter_bytes = mo.io_bytes or
			  mo.io_bytes = 0
		     then null
		     else xmlelement(&quot;stat&quot;,
				xmlattributes('cell_offload_efficiency' as
					      &quot;name&quot;),
				round(mo.io_bytes /
				      decode(mo.io_inter_bytes,  0,  1,
					     mo.io_inter_bytes),  2))
		   end)))
		end
		order by decode(mo.running,  'Y',  1,  2),
			 decode(mo.running,  'Y',  mo.sql_exec_start,
				mo.last_refresh_time) desc,
			 mo.sql_id,
			 mo.dbop_name,
			 mo.sql_exec_id,
			 mo.dbop_exec_id desc))FROM
	  (SELECT
	    decode(
	      :top_n_count,  null,  0,
	      (rank() over
		(order by
		  decode(
		    lower(nvl(:top_n_rankby,  'last_active_time')),
		    'duration',  mo0.duration,
		    'db_time',	mo0.elapsed_time,
		    'cpu_time',  mo0.cpu_time,
		    'io_requests',  (mo0.read_reqs + mo0.write_reqs),
		    'io_bytes',  mo0.io_bytes,
		    decode(mo0.running,  'Y',  0,
			   (mo0.last_refresh_time - sysdate) *
			    3600 * 24)) desc))) row_rank,
	    mo0.*
	  FROM
	    (SELECT
	       mo_qc.status status,
	       case
		 when mo_qc.status = 'EXECUTING' or mo_qc.status = 'QUEUED'
		 then 'Y'
		 else 'N'
	       end running,
	       case
		 when mo_qc.last_active &lt;
			      :show_detail_after
		 then 'N'
		 when mo_qc.first_refresh_time &lt;
			      :show_detail_after
		 then 'P'
		 else 'F'
	       end detail_level,
	       mo_qc.error_number,
	       mo_qc.error_facility,
	       mo_qc.error_message,
	       mo_qc.rm_last_action,
	       mo_qc.rm_last_action_reason,
	       case
		 when :need_url = 1 and mo_qc.dbop_name is not NULL
		 then
		     'main?report_level=all'||chr(38)||
		     'dbop_name='||mo_qc.dbop_name||chr(38)||
		     'inst_id='||mo_qc.inst_id||chr(38)||
		     'sql_exec_start='||to_char(mo_qc.sql_exec_start,
						:date_fmt_mod)||chr(38)||
		     'dbop_exec_id='||mo_qc.dbop_exec_id
		 when :need_url = 1
		 then
		     'main?report_level=all'||chr(38)||
		     'sql_id='||mo_qc.sql_id||chr(38)||
		     'inst_id='||mo_qc.inst_id||chr(38)||
		     'sql_exec_start='||to_char(mo_qc.sql_exec_start,
						:date_fmt_mod)||chr(38)||
		     'sql_exec_id='||mo_qc.sql_exec_id
		 else
		   null
	       end report_ref,
	       mo_qc.sql_id,
	       mo_qc.dbop_name,
	       mo_qc.sql_exec_start,
	       mo_qc.sql_exec_id,
	       mo_qc.dbop_exec_id,
	       mo_qc.first_refresh_time,
	       case when mo_px.last_refresh_time is null or
			 mo_qc.last_refresh_time &gt; mo_px.last_refresh_time
		    then mo_qc.last_refresh_time
		    else mo_px.last_refresh_time
	       end last_refresh_time,
	       mo_qc.refresh_count + nvl(mo_px.refresh_count,  0) refresh_count,
	       round((mo_qc.last_active - mo_qc.sql_exec_start) *
							24 * 3600) duration,
	       mo_qc.inst_id inst_id,
	       mo_qc.sid sid,
	       mo_qc.session_serial# session_serial#,
	       mo_qc.user# user#,
	       mo_qc.username username,
	       mo_qc.module module,
	       mo_qc.action action,
	       mo_qc.service_name service_name,
	       mo_qc.client_identifier client_identifier,
	       mo_qc.client_info client_info,
	       mo_qc.program program,
	       mo_qc.sql_plan_hash_value sql_plan_hash_value,
	       mo_qc.plsql_entry_object_id plsql_entry_object_id,
	       mo_qc.plsql_entry_subprogram_id plsql_entry_subprogram_id,
	       mo_qc.plsql_object_id plsql_object_id,
	       mo_qc.plsql_subprogram_id plsql_subprogram_id,
	       mo_qc.rm_consumer_group rm_consumer_group,
	       mo_qc.px_is_cross_instance px_is_cross_instance,
	       mo_qc.px_maxdop px_maxdop,
	       decode(mo_qc.px_is_cross_instance,  'Y',
		      mo_qc.px_maxdop_instances,  NULL) px_maxdop_instances,
	       mo_qc.px_servers_requested px_servers_requested,
	       mo_qc.px_servers_allocated px_servers_allocated,
	       decode(:max_sqltext_length,  null,
		      mo_qc.is_full_sqltext,
		      case
			when length(mo_qc.sql_text) &gt;
			     :max_sqltext_length
			then 'N'
			else 'Y'
		      end) is_full_sqltext,
	       decode(:max_sqltext_length,  null,
		      mo_qc.sql_text,
		      substr(mo_qc.sql_text,  1,
			     :max_sqltext_length)) sql_text,
	       nvl(mo_px.sum_elapsed_time,  0) +
		mo_qc.elapsed_time elapsed_time,
	       mo_qc.queuing_time queuing_time,
	       nvl(mo_px.sum_cpu_time,	0) + mo_qc.cpu_time cpu_time,
	       nvl(mo_px.sum_user_io_wait_time,  0) +
		   mo_qc.user_io_wait_time user_io_wait_time,
	       nvl(mo_px.sum_application_wait_time,  0) +
		   mo_qc.application_wait_time application_wait_time,
	       nvl(mo_px.sum_concurrency_wait_time,  0) +
		   mo_qc.concurrency_wait_time concurrency_wait_time,
	       nvl(mo_px.sum_cluster_wait_time,  0) +
		   mo_qc.cluster_wait_time cluster_wait_time,
	       nvl(mo_px.sum_plsql_exec_time,  0) +
		   mo_qc.plsql_exec_time plsql_exec_time,
	       nvl(mo_px.sum_java_exec_time,  0) +
		   mo_qc.java_exec_time java_exec_time,
	       nvl(mo_px.sum_other_wait_time,  0) +
		   mo_qc.other_wait_time other_wait_time,
	       nvl(mo_px.sum_fetches,  0) + mo_qc.fetches fetches,
	       nvl(mo_px.sum_buffer_gets,  0) + mo_qc.buffer_gets buffer_gets,
	       nvl(mo_px.sum_read_reqs,  0) + mo_qc.read_reqs read_reqs,
	       nvl(mo_px.sum_read_bytes,  0) + mo_qc.read_bytes read_bytes,
	       nvl(mo_px.sum_write_reqs,  0) + mo_qc.write_reqs write_reqs,
	       nvl(mo_px.sum_write_bytes,  0) + mo_qc.write_bytes write_bytes,
	       nvl(mo_px.sum_io_inter_bytes,  0) +
		   mo_qc.io_inter_bytes io_inter_bytes,
	       nvl(mo_px.sum_io_bytes,	0) + mo_qc.io_bytes io_bytes,
	       mo_qc.con_id,
	       mo_qc.con_name,
	       mo_qc.ecid
	     FROM
	     (SELECT /*+ no_merge */
		     mo1.inst_id,
		     mo1.sid,
		     mo1.session_serial#,
		     mo1.sql_id,
		     mo1.dbop_name,
		     nvl(mo1.sql_exec_start,
			 mo1.first_refresh_time) sql_exec_start,
		     mo1.sql_exec_id,
		     mo1.dbop_exec_id,
		     mo1.first_refresh_time,
		     mo1.last_refresh_time,
		     mo1.refresh_count,
		     case
		       when mo1.status = 'EXECUTING' or mo1.status = 'QUEUED'
		       then :new_last_refresh_time
		       else mo1.last_refresh_time
		     end last_active,
		     mo1.sql_plan_hash_value,
		     mo1.status,
		     mo1.error_number,
		     mo1.error_facility,
		     mo1.error_message,
		     mo1.rm_last_action,
		     mo1.rm_last_action_reason,
		     mo1.px_is_cross_instance,
		     mo1.px_maxdop,
		     mo1.px_maxdop_instances,
		     mo1.px_servers_requested,
		     mo1.px_servers_allocated,
		     mo1.is_full_sqltext,
		     mo1.sql_text,
		     mo1.user#,
		     mo1.username,
		     mo1.module,
		     mo1.action,
		     mo1.service_name,
		     mo1.client_identifier,
		     mo1.client_info,
		     mo1.program,
		     mo1.plsql_entry_object_id,
		     mo1.plsql_entry_subprogram_id,
		     mo1.plsql_object_id,
		     mo1.plsql_subprogram_id,
		     mo1.rm_consumer_group,
		     case
		     when
		       mo1.elapsed_time &lt; (mo1.cpu_time+
					   mo1.application_wait_time+
					   mo1.concurrency_wait_time+
					   mo1.cluster_wait_time+
					   mo1.user_io_wait_time+
					   mo1.queuing_time)
		     then
		       (mo1.cpu_time+
			mo1.application_wait_time+
			mo1.concurrency_wait_time+
			mo1.cluster_wait_time+
			mo1.user_io_wait_time+
			mo1.queuing_time)
		     else
			mo1.elapsed_time
		     end elapsed_time,
		     mo1.cpu_time cpu_time,
		     mo1.user_io_wait_time user_io_wait_time,
		     mo1.application_wait_time application_wait_time,
		     mo1.concurrency_wait_time concurrency_wait_time,
		     mo1.cluster_wait_time cluster_wait_time,
		     mo1.plsql_exec_time plsql_exec_time,
		     mo1.java_exec_time java_exec_time,
		     mo1.queuing_time queuing_time,
		     case
		     when
		       mo1.elapsed_time &lt; (mo1.cpu_time+
					   mo1.application_wait_time+
					   mo1.concurrency_wait_time+
					   mo1.cluster_wait_time+
					   mo1.user_io_wait_time+
					   mo1.queuing_time)
		     then
		       0
		     else
		       mo1.elapsed_time - (mo1.cpu_time+
					   mo1.application_wait_time+
					   mo1.concurrency_wait_time+
					   mo1.cluster_wait_time+
					   mo1.user_io_wait_time+
					   mo1.queuing_time)
		     end other_wait_time,
		     mo1.fetches,
		     mo1.buffer_gets,
		     mo1.physical_read_requests read_reqs,
		     mo1.physical_read_bytes read_bytes,
		     mo1.physical_write_requests write_reqs,
		     mo1.physical_write_bytes write_bytes,
		     nvl(mo1.physical_read_bytes,  0) +
		       nvl(mo1.physical_write_bytes,  0) io_bytes,
		     mo1.io_interconnect_bytes io_inter_bytes,
		     mo1.con_id,
		     mo1.con_name,
		     mo1.ecid
	     FROM    gv$all_sql_monitor mo1
	     WHERE   mo1.px_qcsid is NULL
	       AND   mo1.inst_id between :target_inst_id_low and
					 :target_inst_id_high
	       AND   mo1.sid =
			 nvl(:target_session_id,
			     mo1.sid)
	       AND   ((:dbop_name is NULL and
		      mo1.sql_id = nvl(:sql_id,
				      mo1.sql_id))
		     OR
		     (:sql_id is NULL and
		      mo1.dbop_name =
			nvl(:dbop_name,
			    mo1.dbop_name))
		     OR
		     (mo1.dbop_name = :dbop_name or
		      mo1.sql_id = :sql_id))
	       AND   mo1.session_serial# =
			 nvl(:target_session_serial,
			       mo1.session_serial#)
	       AND   (mo1.status = 'EXECUTING' or
		      mo1.status = 'QUEUED' or
		      mo1.last_refresh_time &gt;=
			  :active_since_filter)
	       AND (nvl(mo1.sql_exec_start,  mo1.first_refresh_time) between
			:target_first_exec_start and
			:target_last_exec_start)
	       AND   1 = nvl(1,  :dbsearch_value)
	     ) mo_qc,
	    (SELECT /*+ no_merge */
		     mo2.sql_id,
		     mo2.sql_exec_start,
		     mo2.sql_exec_id,
		     max(mo2.last_refresh_time) last_refresh_time,
		     sum(mo2.refresh_count) refresh_count,
		     sum(
		       case
			 when
			   mo2.elapsed_time &lt; (mo2.cpu_time+
					       mo2.application_wait_time+
					       mo2.concurrency_wait_time+
					       mo2.cluster_wait_time+
					       mo2.user_io_wait_time)
			 then
			   (mo2.cpu_time+
			    mo2.application_wait_time+
			    mo2.concurrency_wait_time+
			    mo2.cluster_wait_time+
			    mo2.user_io_wait_time)
			 else
			   mo2.elapsed_time
		       end) sum_elapsed_time,
		     sum(mo2.cpu_time) sum_cpu_time,
		     sum(mo2.user_io_wait_time) sum_user_io_wait_time,
		     sum(mo2.application_wait_time) sum_application_wait_time,
		     sum(mo2.concurrency_wait_time) sum_concurrency_wait_time,
		     sum(mo2.cluster_wait_time) sum_cluster_wait_time,
		     sum(mo2.plsql_exec_time) sum_plsql_exec_time,
		     sum(mo2.java_exec_time) sum_java_exec_time,
		     sum(
		       case
			 when
			   mo2.elapsed_time &lt; (mo2.cpu_time+
					       mo2.application_wait_time+
					       mo2.concurrency_wait_time+
					       mo2.cluster_wait_time+
					       mo2.user_io_wait_time)
			 then
			   0
			 else
			   mo2.elapsed_time - (mo2.cpu_time+
					       mo2.application_wait_time+
					       mo2.concurrency_wait_time+
					       mo2.cluster_wait_time+
					       mo2.user_io_wait_time)
		       end) sum_other_wait_time,
		     sum(mo2.fetches) sum_fetches,
		     sum(mo2.buffer_gets) sum_buffer_gets,
		     sum(mo2.physical_read_requests) sum_read_reqs,
		     sum(mo2.physical_read_bytes) sum_read_bytes,
		     sum(mo2.physical_write_requests) sum_write_reqs,
		     sum(mo2.physical_write_bytes) sum_write_bytes,
		     sum(nvl(mo2.physical_read_bytes,  0) +
			 nvl(mo2.physical_write_bytes,	0)) sum_io_bytes,
		     sum(nvl(mo2.io_interconnect_bytes,  0)) sum_io_inter_bytes
	     FROM    gv$all_sql_monitor mo2
	     WHERE   :detail_is_parallel is not null
	       AND   mo2.inst_id between
			  :px_inst_id_low and
			  :px_inst_id_high
	       AND   mo2.px_qcinst_id between
			  :target_inst_id_low and
			  :target_inst_id_high
	       AND   mo2.sql_id between
			  :detail_px_min_sqlid and
			  :detail_px_max_sqlid
	       AND   mo2.sql_exec_start &gt;=
			  :detail_px_first_exec_start
	       AND   (mo2.px_qcsid =
			 nvl(:target_session_id,
			     mo2.px_qcsid))
	       AND   mo2.con_id = nvl(:con_id,	mo2.con_id)
	       AND   1 = nvl(1,  :dbsearch_value)
	     GROUP BY mo2.sql_id,
		      mo2.sql_exec_start,
		      mo2.sql_exec_id
	    ) mo_px
	  WHERE mo_qc.sql_id	     = mo_px.sql_id(+)
	    AND mo_qc.sql_exec_start = mo_px.sql_exec_start(+)
	    AND mo_qc.sql_exec_id    = mo_px.sql_exec_id(+)) mo0) mo
	WHERE row_rank &lt;= nvl(:top_n_count,	1)
	</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fh5ufah919kun"></a>fh5ufah919kun</td><td class='awrc'><pre_sqltext class="awr">select /*+ index(idl_sb4$ i_idl_sb41) */ piece#, length, piece from idl_sb4$ where obj#=:1 and part=:2 and version=:3 order by piece#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fhf8upax5cxsz"></a>fhf8upax5cxsz</td><td class='awrnc'><pre_sqltext class="awr">BEGIN sys.dbms_auto_report_internal.i_save_report (:rep_ref,  :snap_id,	:pr_class,						 :rep_id,  :suc); END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fn5s5p6hr6702"></a>fn5s5p6hr6702</td><td class='awrc'><pre_sqltext class="awr">INSERT INTO wri$_adv_message_groups (task_id, id, seq, message#, fac, hdr, lm, nl, p1, p2, p3, p4, p5) VALUES (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="g0t052az3rx44"></a>g0t052az3rx44</td><td class='awrnc'><pre_sqltext class="awr">select name, intcol#, segcol#, type#, length, nvl(precision#, 0), decode(type#, 2, nvl(scale, -127/*MAXSB1MINAL*/), 178, scale, 179, scale, 180, scale, 181, scale, 182, scale, 183, scale, 231, scale, 0), null$, fixedstorage, nvl(deflength, 0), default$, rowid, col#, property,  nvl(charsetid, 0), nvl(charsetform, 0), spare1, spare2, nvl(spare3, 0),  nvl(evaledition#, 1), nvl(unusablebefore#, 0), nvl(unusablebeginning#, 0),  case when (type# in (1, 8, 9, 96, 112)) then nvl(collid,  16382) else 0 end case,  nvl(collintcol#, 0),  nvl(acdrrescol#,  0),  nvl(spare7,  0),  nvl(spare9,  0),  nvl(spare10,  0) from col$ where obj#=:1 order by intcol#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="g42nd3t1t35kb"></a>g42nd3t1t35kb</td><td class='awrc'><pre_sqltext class="awr">select nvl(min(value),  10)
	 from (select to_number(value) value
		from sys.gv_$parameter
	       where inst_id between :inst_id_low and :inst_id_high
		 and name    = '_ash_disk_filter_ratio'
	      union all
	      select to_number(value) value
		from AWR_ROOT_parameter
	       where dbid	     = :dbid
		 and snap_id	     between :begin_snap
					 and :end_snap
		 and instance_number between :inst_id_low
					 and :inst_id_high
		 and parameter_name = '_ash_disk_filter_ratio')</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="g5wjwfs93z517"></a>g5wjwfs93z517</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '24';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="gngtvs38t0060"></a>gngtvs38t0060</td><td class='awrc'><pre_sqltext class="awr">SELECT /*+ CONNECT_BY_FILTERING */ s.privilege# FROM sys.sysauth$ s	CONNECT BY s.grantee# = PRIOR s.privilege#				   AND (s.privilege# &gt; 0 OR s.privilege# = -352)				 START WITH (s.privilege# &gt; 0 OR s.privilege# = -352) AND s.grantee# IN     (SELECT c1.privilege# FROM sys.codeauth$ c1 WHERE c1.obj# = :1)		  UNION 								     SELECT c2.privilege# FROM sys.codeauth$ c2 WHERE c2.obj# = :2		ORDER BY 1 ASC</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="gp2af7qaws3yq"></a>gp2af7qaws3yq</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '2';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN


	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;


		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="gp8yk87v5n0d0"></a>gp8yk87v5n0d0</td><td class='awrc'><pre_sqltext class="awr">SELECT session_id,  process,  session_serial_num,	100*(cpu/intsize_csec)	    FROM v$sessmetric sm JOIN v$session s on (sm.session_id=s.sid)	       ORDER BY cpu desc</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="grjtn5w5y8jfj"></a>grjtn5w5y8jfj</td><td class='awrnc'><pre_sqltext class="awr">SELECT XMLELEMENT( &quot;spot_addm&quot;,  XMLPARSE(DOCUMENT DBMS_REPORT.GET_REPORT('/orarep/rtaddm/main?spotonly=y'))) FROM DUAL</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="grwydz59pu6mc"></a>grwydz59pu6mc</td><td class='awrc'><pre_sqltext class="awr">select text from view$ where rowid=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="gyv3savxpszuj"></a>gyv3savxpszuj</td><td class='awrnc'><pre_sqltext class="awr">
    WITH iometric as (
     select bucket_id,	inst_id,  function_id,
	    case when rn = 1 then function_name else null end function_name,
	    case when inst_rn = 1 then inst_name else null end inst_name,
	    small_read_mbps,  small_write_mbps,
	    large_read_mbps,  large_write_mbps,
	    small_read_iops,  small_write_iops,
	    large_read_iops,  large_write_iops,
	    avg_wait_time
       from (
	 select bucket_id,
		inst_id,  inst_name,  function_id,  function_name,
		small_read_mbps,  small_write_mbps,
		large_read_mbps,  large_write_mbps,
		small_read_iops,  small_write_iops,
		large_read_iops,  large_write_iops,
		avg_wait_time,
		row_number() over (partition by function_id,  function_name
				       order by bucket_id,  function_id)  rn,
	       case
		when :p_inst_detail = 1
		then
		  row_number()over(partition by inst_id,  inst_name
				   order by bucket_id,	inst_id)
		else 0 end inst_rn
	   from (
	      select bucket_id,
		     inst_id,  inst_name,
		     function_id,  function_name,
		     sum(small_read_mbps)     small_read_mbps,
		     sum(small_write_mbps)    small_write_mbps,
		     sum(large_read_mbps)     large_read_mbps,
		     sum(large_write_mbps)    large_write_mbps,
		     sum(small_read_iops)     small_read_iops,
		     sum(small_write_iops)    small_write_iops,
		     sum(large_read_iops)     large_read_iops,
		     sum(large_write_iops)    large_write_iops,
		     avg(avg_wait_time)       avg_wait_time
		from
		 table(sys.gv$(cursor(
		  select decode(:p_instance_detail,  1,
				ins.instance_number,  null) inst_id,
			 decode(:p_instance_detail,  1,
				ins.instance_name,  null) inst_name,
			 function_id,  function_name,
			 trunc(
			    ( (extract(day from
				 (cast(trunc(end_time, 'mi') as timestamp) -
				    cast(
				      trunc(
					to_date(:b_start_time, :date_fmt), 'mi')
						      as timestamp))) * 86400 +
			       extract(hour from
				 (cast(
				   trunc(end_time, 'mi') as timestamp) -
				    cast(
				      trunc(
					to_date(:b_start_time, :date_fmt), 'mi')
						      as timestamp))) * 3600 +
			       extract(minute from
				 (cast(trunc(end_time, 'mi') as timestamp) -
				    cast(
				      trunc(
					to_date(:b_start_time, :date_fmt), 'mi')
							as timestamp))) * 60 +
			       extract(second from
				 (cast(trunc(end_time, 'mi') as timestamp) -
				    cast(
				      trunc(
					 to_date(:b_start_time, :date_fmt), 'mi')
							    as timestamp))) )
				  / :p_bucket_interval)) + 1	     bucket_id,
			 small_read_mbps,  small_write_mbps,
			 large_read_mbps,  large_write_mbps,
			 small_read_iops,  large_read_iops,
			 small_write_iops,  large_write_iops,
			 avg_wait_time
	   from v$iofuncmetric_history iov,  v$instance ins
	   where ins.instance_number between :p_inst_id_low and :p_inst_id_high
		     and end_time &gt;= to_date(:b_start_time,	:date_fmt)
		     and end_time &lt;	to_date(:b_end_time,  :date_fmt)))
		  )
	   group by bucket_id,	inst_id,  inst_name,  function_id,  function_name)
	 where nvl(small_read_mbps, 0) + nvl(small_write_mbps, 0) +
	       nvl(large_read_mbps, 0) + nvl(large_write_mbps, 0) +
	       nvl(small_read_iops, 0) + nvl(small_write_iops, 0) +
	       nvl(large_read_iops, 0) + nvl(large_write_iops, 0) +
	       nvl(avg_wait_time, 0) &gt; 0))
    -- construct xml
    select xmlagg(
	    nvl2(buckets,
		 xmlelement(&quot;stattype&quot;,
		  xmlattributes('iofuncmetric' as &quot;name&quot;),
		      case when :p_inst_detail = 1 then
			 xmlelement(&quot;stat_dims&quot;,
		     xmlelement(&quot;stat_dim&quot;,
		      xmlattributes('stats'	 as &quot;stat_info&quot;,
				       'id'	 as &quot;key&quot;,
			'AWRVIEWER_IOFUNCMETRIC' as &quot;label&quot;)),  xmlelement(&quot;stat_dim&quot;,
			xmlattributes('insts' as &quot;stat_info&quot;,
			  'inst_id' as &quot;key&quot;,
			  'AWRVIEWER_INSTANCE' as &quot;label&quot;)))
		       else null
		      end,
		      nvl2(stat_id,
			   case
			    when :p_inst_detail = 0
			    then xmlelement(&quot;stat_info&quot;,  stat_id)
			    else xmlelement(&quot;stat_info&quot;,
				   xmlelement(&quot;stats&quot;,  stat_id),
				   xmlelement(&quot;insts&quot;,  stat_inst_id))
			    end,
			   null),
		  nvl2(buckets,  xmlelement(&quot;buckets&quot;,  xmlattributes( :p_bucket_interval as &quot;bucket_interval&quot;,  :p_bucket_count as &quot;bucket_count&quot;,  :b_min_time as &quot;start_time&quot;,  :b_max_time as &quot;end_time&quot;,  :b_duration as &quot;duration&quot;), buckets),  null) ),
		 null))
      from ( -- aggregate buckets
	select xmlagg(xmlelement(&quot;bucket&quot;,  xmlattributes(bucket_id as &quot;bucket_id&quot;),  stats) order by bucket_id) buckets,
	       xmlagg(stat_id)	    stat_id,
	       xmlagg(stat_inst_id) stat_inst_id
	  from ( -- aggregate stats per bucket
	    select bucket_id,
		   xmlagg(stat_id order by function_id)  stat_id,
		   xmlagg(stat_inst_id order by inst_id) stat_inst_id,
		   xmlagg(xmlelement(&quot;stat&quot;,
		    xmlattributes(function_id as &quot;id&quot;,  inst_id as &quot;inst_id&quot;,
			     round(small_read_mbps, 6)	 as &quot;srmbps&quot;,
			     round(small_write_mbps, 6)  as &quot;swmbps&quot;,
			     round(large_read_mbps, 6)	 as &quot;lrmbps&quot;,
			     round(large_write_mbps, 6)  as &quot;lwmbps&quot;,
			     round(small_read_iops, 6)	 as &quot;sriops&quot;,
			     round(small_write_iops, 6)  as &quot;swiops&quot;,
			     round(large_read_iops, 6)	 as &quot;lriops&quot;,
			     round(large_write_iops, 6)  as &quot;lwiops&quot;,
			     round(avg_wait_time, 6)	 as &quot;avwttm&quot;))
		    order by function_id)  stats
	      from ( -- generate id name map
		select bucket_id,  inst_id,  function_id,
		       nvl2(function_name,
			    xmlelement(&quot;stat&quot;,
			     xmlattributes(function_id as &quot;id&quot;,
					   function_name as &quot;name&quot;)),
			    null)	 stat_id,
			 nvl2(inst_name,
				xmlelement(&quot;stat&quot;,
				 xmlattributes(inst_id as &quot;id&quot;,
					       inst_name as &quot;name&quot;)),
				null)	stat_inst_id,
		       small_read_mbps,  small_write_mbps,
		       large_read_mbps,  large_write_mbps,
		       small_read_iops,  small_write_iops,
		       large_read_iops,  large_write_iops,
		       avg_wait_time
		  from iometric)
	     group by bucket_id))</pre_sqltext></td></tr>
</table>
<p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="23"></a>
<h2 class="awr">
Instance Activity Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1200">Key Instance Activity Stats</a></li>
<li class="awr"><a class="awr" href="#1250">Instance Activity Stats</a></li>
<li class="awr"><a class="awr" href="#1300">Instance Activity Stats - Absolute Values</a></li>
<li class="awr"><a class="awr" href="#1400">Instance Activity Stats - Thread Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1200"></a>
<h3 class="awr">Key Instance Activity Stats</h3>
<ul>
<li class="awr"> Ordered by statistic name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Key Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>2,413,735</td><td align="right" class='awrc'>3,949.50</td><td align="right" class='awrc'>65.68</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>54,484</td><td align="right" class='awrnc'>89.15</td><td align="right" class='awrnc'>1.48</td></tr>
<tr><td scope="row" class='awrc'>gc cr block receive time</td><td align="right" class='awrc'>132</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks received</td><td align="right" class='awrnc'>463</td><td align="right" class='awrnc'>0.76</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>3,467</td><td align="right" class='awrc'>5.67</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>31,218</td><td align="right" class='awrnc'>51.08</td><td align="right" class='awrnc'>0.85</td></tr>
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>175</td><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>91,113</td><td align="right" class='awrnc'>149.08</td><td align="right" class='awrnc'>2.48</td></tr>
<tr><td scope="row" class='awrc'>parse count (total)</td><td align="right" class='awrc'>5,002</td><td align="right" class='awrc'>8.18</td><td align="right" class='awrc'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>741</td><td align="right" class='awrnc'>1.21</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>physical reads</td><td align="right" class='awrc'>1,094,434</td><td align="right" class='awrc'>1,790.78</td><td align="right" class='awrc'>29.78</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>750,663</td><td align="right" class='awrnc'>1,228.28</td><td align="right" class='awrnc'>20.43</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>950,293,820</td><td align="right" class='awrc'>1,554,927.30</td><td align="right" class='awrc'>25,859.74</td></tr>
<tr><td scope="row" class='awrnc'>session cursor cache hits</td><td align="right" class='awrnc'>89,183</td><td align="right" class='awrnc'>145.93</td><td align="right" class='awrnc'>2.43</td></tr>
<tr><td scope="row" class='awrc'>session logical reads</td><td align="right" class='awrc'>1,534,097</td><td align="right" class='awrc'>2,510.18</td><td align="right" class='awrc'>41.75</td></tr>
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>1,096</td><td align="right" class='awrnc'>1.79</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>36,748</td><td align="right" class='awrc'>60.13</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>workarea executions - optimal</td><td align="right" class='awrnc'>2,242</td><td align="right" class='awrnc'>3.67</td><td align="right" class='awrnc'>0.06</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1250"></a>
<h3 class="awr">Instance Activity Stats</h3>
<ul>
<li class="awr"> Ordered by statistic name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>550</td><td align="right" class='awrnc'>0.90</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>130</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>462</td><td align="right" class='awrnc'>0.76</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>125</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search all</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search hint</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search steal</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:bump HWM</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free block</td><td align="right" class='awrc'>420</td><td align="right" class='awrc'>0.69</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free data block</td><td align="right" class='awrnc'>332</td><td align="right" class='awrnc'>0.54</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free index block</td><td align="right" class='awrc'>88</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:good hint</td><td align="right" class='awrnc'>396</td><td align="right" class='awrnc'>0.65</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ASSM rsv:fill reserve</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM wasted db state change</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO (bound) vector count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO block miss count</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO buffer defrag count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO double miss count</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO same unit count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO single block count</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector block count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector read count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Block Cleanout Optim referenced</td><td align="right" class='awrc'>135,822</td><td align="right" class='awrc'>222.24</td><td align="right" class='awrc'>3.70</td></tr>
<tr><td scope="row" class='awrnc'>CCursor + sql area evicted</td><td align="right" class='awrnc'>1,969</td><td align="right" class='awrnc'>3.22</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>CPU used by this session</td><td align="right" class='awrc'>71,473</td><td align="right" class='awrc'>116.95</td><td align="right" class='awrc'>1.94</td></tr>
<tr><td scope="row" class='awrnc'>CPU used when call started</td><td align="right" class='awrnc'>52,701</td><td align="right" class='awrnc'>86.23</td><td align="right" class='awrnc'>1.43</td></tr>
<tr><td scope="row" class='awrc'>CR blocks created</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Cached Commit SCN referenced</td><td align="right" class='awrnc'>168,076</td><td align="right" class='awrnc'>275.02</td><td align="right" class='awrnc'>4.57</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Receive Window</td><td align="right" class='awrc'>126</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Send Window</td><td align="right" class='awrnc'>126</td><td align="right" class='awrnc'>0.21</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrc'>26,100</td><td align="right" class='awrc'>42.71</td><td align="right" class='awrc'>0.71</td></tr>
<tr><td scope="row" class='awrnc'>Client Send Congestion Window</td><td align="right" class='awrnc'>180</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Received</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrc'>139</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrnc'>51,772</td><td align="right" class='awrnc'>84.71</td><td align="right" class='awrnc'>1.41</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrc'>50,100</td><td align="right" class='awrc'>81.98</td><td align="right" class='awrc'>1.36</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Acked</td><td align="right" class='awrnc'>284,793</td><td align="right" class='awrnc'>466.00</td><td align="right" class='awrnc'>7.75</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Received</td><td align="right" class='awrc'>109,899</td><td align="right" class='awrc'>179.82</td><td align="right" class='awrc'>2.99</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Number of Retransmitted Packets</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Commit SCN cached</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoint buffers written</td><td align="right" class='awrnc'>286,863</td><td align="right" class='awrnc'>469.38</td><td align="right" class='awrnc'>7.81</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoints</td><td align="right" class='awrc'>85</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR fusion writes</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR object drop buffers written</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR parallel query checkpoint buffers written</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR thread checkpoint buffers written</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR transaction table writes</td><td align="right" class='awrnc'>1,751</td><td align="right" class='awrnc'>2.87</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>DBWR undo block writes</td><td align="right" class='awrc'>33,048</td><td align="right" class='awrc'>54.08</td><td align="right" class='awrc'>0.90</td></tr>
<tr><td scope="row" class='awrnc'>DFO trees parallelized</td><td align="right" class='awrnc'>108</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Effective IO time</td><td align="right" class='awrc'>40,288</td><td align="right" class='awrc'>65.92</td><td align="right" class='awrc'>1.10</td></tr>
<tr><td scope="row" class='awrnc'>HSC Heap Segment Block Changes</td><td align="right" class='awrnc'>1,138,855</td><td align="right" class='awrnc'>1,863.46</td><td align="right" class='awrnc'>30.99</td></tr>
<tr><td scope="row" class='awrc'>Heap Segment Array Inserts</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Heap Segment Array Updates</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Heatmap Blklevel Flush Task Count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc req</td><td align="right" class='awrnc'>137</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc space (block)</td><td align="right" class='awrc'>123,011,072</td><td align="right" class='awrc'>201,278.04</td><td align="right" class='awrc'>3,347.42</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc time (ms)</td><td align="right" class='awrnc'>35,485</td><td align="right" class='awrnc'>58.06</td><td align="right" class='awrnc'>0.97</td></tr>
<tr><td scope="row" class='awrc'>KTFB apply req</td><td align="right" class='awrc'>116</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTFB apply time (ms)</td><td align="right" class='awrnc'>4,114</td><td align="right" class='awrnc'>6.73</td><td align="right" class='awrnc'>0.11</td></tr>
<tr><td scope="row" class='awrc'>KTFB free req</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free space (block)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KTFB free time (ms)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>LOB table id lookup cache misses</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX local messages recv'd</td><td align="right" class='awrc'>1,183</td><td align="right" class='awrc'>1.94</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>PX local messages sent</td><td align="right" class='awrnc'>1,183</td><td align="right" class='awrnc'>1.94</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>PX remote messages recv'd</td><td align="right" class='awrc'>502</td><td align="right" class='awrc'>0.82</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>PX remote messages sent</td><td align="right" class='awrnc'>642</td><td align="right" class='awrnc'>1.05</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>Parallel operations not downgraded</td><td align="right" class='awrc'>168</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Requests to/from client</td><td align="right" class='awrnc'>176</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SMON posted for instance recovery</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SMON posted for undo segment shrink</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrc'>158</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>TBS Extension: tasks created</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>TBS Extension: tasks executed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>active txn count during cleanout</td><td align="right" class='awrnc'>230</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>auto extends on undo tablespace</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>background checkpoints completed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>background checkpoints started</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>background timeouts</td><td align="right" class='awrnc'>5,424</td><td align="right" class='awrnc'>8.88</td><td align="right" class='awrnc'>0.15</td></tr>
<tr><td scope="row" class='awrc'>blocks cleaned out using minact</td><td align="right" class='awrc'>496,886</td><td align="right" class='awrc'>813.03</td><td align="right" class='awrc'>13.52</td></tr>
<tr><td scope="row" class='awrnc'>branch node splits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>buffer is not pinned count</td><td align="right" class='awrc'>100,282</td><td align="right" class='awrc'>164.09</td><td align="right" class='awrc'>2.73</td></tr>
<tr><td scope="row" class='awrnc'>buffer is pinned count</td><td align="right" class='awrnc'>1,146,669</td><td align="right" class='awrnc'>1,876.25</td><td align="right" class='awrnc'>31.20</td></tr>
<tr><td scope="row" class='awrc'>bytes received via SQL*Net from client</td><td align="right" class='awrc'>401,718</td><td align="right" class='awrc'>657.31</td><td align="right" class='awrc'>10.93</td></tr>
<tr><td scope="row" class='awrnc'>bytes sent via SQL*Net to client</td><td align="right" class='awrnc'>30,348</td><td align="right" class='awrnc'>49.66</td><td align="right" class='awrnc'>0.83</td></tr>
<tr><td scope="row" class='awrc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrc'>101,110</td><td align="right" class='awrc'>165.44</td><td align="right" class='awrc'>2.75</td></tr>
<tr><td scope="row" class='awrnc'>calls to kcmgas</td><td align="right" class='awrnc'>66,705</td><td align="right" class='awrnc'>109.15</td><td align="right" class='awrnc'>1.82</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgcs</td><td align="right" class='awrc'>4,120</td><td align="right" class='awrc'>6.74</td><td align="right" class='awrc'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>cell physical IO interconnect bytes</td><td align="right" class='awrnc'>26,801,853,952</td><td align="right" class='awrnc'>43,854,788.43</td><td align="right" class='awrnc'>729,341.84</td></tr>
<tr><td scope="row" class='awrc'>change write time</td><td align="right" class='awrc'>2,359</td><td align="right" class='awrc'>3.86</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>cleanout - number of ktugct calls</td><td align="right" class='awrnc'>256</td><td align="right" class='awrnc'>0.42</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>cleanouts and rollbacks - consistent read gets</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>cleanouts only - consistent read gets</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>cluster key scan block gets</td><td align="right" class='awrc'>6,030</td><td align="right" class='awrc'>9.87</td><td align="right" class='awrc'>0.16</td></tr>
<tr><td scope="row" class='awrnc'>cluster key scans</td><td align="right" class='awrnc'>4,480</td><td align="right" class='awrnc'>7.33</td><td align="right" class='awrnc'>0.12</td></tr>
<tr><td scope="row" class='awrc'>commit batch/immediate performed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit batch/immediate requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: block lost</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: buffer being written</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: callback failure</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: cannot pin</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanouts</td><td align="right" class='awrc'>1,139,078</td><td align="right" class='awrc'>1,863.83</td><td align="right" class='awrc'>31.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanouts successfully completed</td><td align="right" class='awrnc'>1,139,044</td><td align="right" class='awrnc'>1,863.77</td><td align="right" class='awrnc'>31.00</td></tr>
<tr><td scope="row" class='awrc'>commit immediate performed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit immediate requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit txn count during cleanout</td><td align="right" class='awrc'>130</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>consistent changes</td><td align="right" class='awrnc'>2,687</td><td align="right" class='awrnc'>4.40</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>consistent gets</td><td align="right" class='awrc'>203,235</td><td align="right" class='awrc'>332.55</td><td align="right" class='awrc'>5.53</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets examination</td><td align="right" class='awrnc'>111,592</td><td align="right" class='awrnc'>182.59</td><td align="right" class='awrnc'>3.04</td></tr>
<tr><td scope="row" class='awrc'>consistent gets examination (fastpath)</td><td align="right" class='awrc'>110,636</td><td align="right" class='awrc'>181.03</td><td align="right" class='awrc'>3.01</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets from cache</td><td align="right" class='awrnc'>203,235</td><td align="right" class='awrnc'>332.55</td><td align="right" class='awrnc'>5.53</td></tr>
<tr><td scope="row" class='awrc'>consistent gets pin</td><td align="right" class='awrc'>91,643</td><td align="right" class='awrc'>149.95</td><td align="right" class='awrc'>2.49</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets pin (fastpath)</td><td align="right" class='awrnc'>65,644</td><td align="right" class='awrnc'>107.41</td><td align="right" class='awrnc'>1.79</td></tr>
<tr><td scope="row" class='awrc'>cursor authentications</td><td align="right" class='awrc'>242</td><td align="right" class='awrc'>0.40</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>cursor reload failures</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>db block changes</td><td align="right" class='awrnc'>2,413,735</td><td align="right" class='awrnc'>3,949.50</td><td align="right" class='awrnc'>65.68</td></tr>
<tr><td scope="row" class='awrc'>db block gets</td><td align="right" class='awrc'>1,330,851</td><td align="right" class='awrc'>2,177.62</td><td align="right" class='awrc'>36.22</td></tr>
<tr><td scope="row" class='awrnc'>db block gets direct</td><td align="right" class='awrnc'>838</td><td align="right" class='awrnc'>1.37</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>db block gets from cache</td><td align="right" class='awrc'>1,330,013</td><td align="right" class='awrc'>2,176.25</td><td align="right" class='awrc'>36.19</td></tr>
<tr><td scope="row" class='awrnc'>db block gets from cache (fastpath)</td><td align="right" class='awrnc'>173,436</td><td align="right" class='awrnc'>283.79</td><td align="right" class='awrnc'>4.72</td></tr>
<tr><td scope="row" class='awrc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrc'>503,291</td><td align="right" class='awrc'>823.51</td><td align="right" class='awrc'>13.70</td></tr>
<tr><td scope="row" class='awrnc'>dirty buffers inspected</td><td align="right" class='awrnc'>19,920</td><td align="right" class='awrnc'>32.59</td><td align="right" class='awrnc'>0.54</td></tr>
<tr><td scope="row" class='awrc'>enqueue conversions</td><td align="right" class='awrc'>1,306</td><td align="right" class='awrc'>2.14</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>enqueue releases</td><td align="right" class='awrnc'>86,454</td><td align="right" class='awrnc'>141.46</td><td align="right" class='awrnc'>2.35</td></tr>
<tr><td scope="row" class='awrc'>enqueue requests</td><td align="right" class='awrc'>86,415</td><td align="right" class='awrc'>141.40</td><td align="right" class='awrc'>2.35</td></tr>
<tr><td scope="row" class='awrnc'>enqueue timeouts</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>



<tr><td scope="row" class='awrc'>enqueue waits</td><td align="right" class='awrc'>532</td><td align="right" class='awrc'>0.87</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>exchange deadlocks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>execute count</td><td align="right" class='awrc'>54,484</td><td align="right" class='awrc'>89.15</td><td align="right" class='awrc'>1.48</td></tr>
<tr><td scope="row" class='awrnc'>fastpath consistent get quota limit</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>file io service time</td><td align="right" class='awrc'>149,907,140</td><td align="right" class='awrc'>245,286.98</td><td align="right" class='awrc'>4,079.33</td></tr>
<tr><td scope="row" class='awrnc'>free buffer inspected</td><td align="right" class='awrnc'>720,481</td><td align="right" class='awrnc'>1,178.89</td><td align="right" class='awrnc'>19.61</td></tr>
<tr><td scope="row" class='awrc'>free buffer requested</td><td align="right" class='awrc'>1,169,942</td><td align="right" class='awrc'>1,914.33</td><td align="right" class='awrc'>31.84</td></tr>
<tr><td scope="row" class='awrnc'>gc blocks compressed</td><td align="right" class='awrnc'>6,695</td><td align="right" class='awrnc'>10.95</td><td align="right" class='awrnc'>0.18</td></tr>
<tr><td scope="row" class='awrc'>gc blocks lost</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cleanout applied</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cleanout saved</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks created</td><td align="right" class='awrnc'>27,915</td><td align="right" class='awrnc'>45.68</td><td align="right" class='awrnc'>0.76</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks shrunk</td><td align="right" class='awrc'>151</td><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block build time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block flush time</td><td align="right" class='awrc'>186</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block receive time</td><td align="right" class='awrnc'>132</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks built</td><td align="right" class='awrc'>125</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks flushed</td><td align="right" class='awrnc'>74</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks received</td><td align="right" class='awrc'>463</td><td align="right" class='awrc'>0.76</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks served</td><td align="right" class='awrnc'>1,482</td><td align="right" class='awrnc'>2.42</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grant time</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multiblock grants received</td><td align="right" class='awrnc'>75</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block flush time</td><td align="right" class='awrc'>73</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block pin time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>3,467</td><td align="right" class='awrc'>5.67</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks flushed</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks pinned</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>31,218</td><td align="right" class='awrnc'>51.08</td><td align="right" class='awrnc'>0.85</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks served</td><td align="right" class='awrc'>6,054</td><td align="right" class='awrc'>9.91</td><td align="right" class='awrc'>0.16</td></tr>
<tr><td scope="row" class='awrnc'>gc force cr read cr</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc force cr read current</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes saved</td><td align="right" class='awrnc'>29,910</td><td align="right" class='awrnc'>48.94</td><td align="right" class='awrnc'>0.81</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes sent</td><td align="right" class='awrc'>30,378</td><td align="right" class='awrc'>49.71</td><td align="right" class='awrc'>0.83</td></tr>
<tr><td scope="row" class='awrnc'>gc local grants</td><td align="right" class='awrnc'>360,644</td><td align="right" class='awrnc'>590.11</td><td align="right" class='awrnc'>9.81</td></tr>
<tr><td scope="row" class='awrc'>gc merge pi bg</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc merge pi fg</td><td align="right" class='awrnc'>46</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc no change made</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc read time waited</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc read wait timeouts</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc read waits</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass grants</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass waits</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc remote grants</td><td align="right" class='awrc'>779,624</td><td align="right" class='awrc'>1,275.67</td><td align="right" class='awrc'>21.22</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages received</td><td align="right" class='awrnc'>701,807</td><td align="right" class='awrnc'>1,148.34</td><td align="right" class='awrnc'>19.10</td></tr>
<tr><td scope="row" class='awrc'>gc status messages sent</td><td align="right" class='awrc'>482,511</td><td align="right" class='awrc'>789.51</td><td align="right" class='awrc'>13.13</td></tr>
<tr><td scope="row" class='awrnc'>gcs affinity lock failures</td><td align="right" class='awrnc'>156</td><td align="right" class='awrnc'>0.26</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity lock grants</td><td align="right" class='awrc'>101,866</td><td align="right" class='awrc'>166.68</td><td align="right" class='awrc'>2.77</td></tr>
<tr><td scope="row" class='awrnc'>gcs anti-locks created</td><td align="right" class='awrnc'>27,916</td><td align="right" class='awrnc'>45.68</td><td align="right" class='awrnc'>0.76</td></tr>
<tr><td scope="row" class='awrc'>gcs data block access records</td><td align="right" class='awrc'>1,126,595</td><td align="right" class='awrc'>1,843.40</td><td align="right" class='awrc'>30.66</td></tr>
<tr><td scope="row" class='awrnc'>gcs messages sent</td><td align="right" class='awrnc'>2,079,573</td><td align="right" class='awrnc'>3,402.72</td><td align="right" class='awrnc'>56.59</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly lock failures</td><td align="right" class='awrc'>54,555</td><td align="right" class='awrc'>89.27</td><td align="right" class='awrc'>1.48</td></tr>
<tr><td scope="row" class='awrnc'>gcs read-mostly lock grants</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs stats management (SCM) process posts</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges messages sent</td><td align="right" class='awrnc'>11,048</td><td align="right" class='awrnc'>18.08</td><td align="right" class='awrnc'>0.30</td></tr>

<tr><td scope="row" class='awrc'>global enqueue get time</td><td align="right" class='awrc'>2,020</td><td align="right" class='awrc'>3.31</td><td align="right" class='awrc'>0.05</td></tr>

Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<tr><td scope="row" class='awrnc'>global enqueue gets async</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global enqueue gets sync</td><td align="right" class='awrc'>122,793</td><td align="right" class='awrc'>200.92</td><td align="right" class='awrc'>3.34</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue releases</td><td align="right" class='awrnc'>121,637</td><td align="right" class='awrnc'>199.03</td><td align="right" class='awrnc'>3.31</td></tr>
<tr><td scope="row" class='awrc'>global undo segment hints helped</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global undo segment hints were stale</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>heap block compress</td><td align="right" class='awrc'>14,907</td><td align="right" class='awrc'>24.39</td><td align="right" class='awrc'>0.41</td></tr>
<tr><td scope="row" class='awrnc'>hot buffers moved to head of LRU</td><td align="right" class='awrnc'>37,601</td><td align="right" class='awrnc'>61.52</td><td align="right" class='awrnc'>1.02</td></tr>
<tr><td scope="row" class='awrc'>immediate (CR) block cleanout applications</td><td align="right" class='awrc'>37</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>225</td><td align="right" class='awrnc'>0.37</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>index crx state invalidation</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>index crx upgrade (positioned)</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>index fast full scans (full)</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>index fetch by key</td><td align="right" class='awrnc'>11,564</td><td align="right" class='awrnc'>18.92</td><td align="right" class='awrnc'>0.31</td></tr>
<tr><td scope="row" class='awrc'>index range scans</td><td align="right" class='awrc'>48,276</td><td align="right" class='awrc'>78.99</td><td align="right" class='awrc'>1.31</td></tr>
<tr><td scope="row" class='awrnc'>index reclamation/extension switch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>leaf node 90-10 splits</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>leaf node splits</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>lob reads</td><td align="right" class='awrc'>400</td><td align="right" class='awrc'>0.65</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>lob writes</td><td align="right" class='awrnc'>908</td><td align="right" class='awrnc'>1.49</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>lob writes unaligned</td><td align="right" class='awrc'>907</td><td align="right" class='awrc'>1.48</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>logical read bytes from cache</td><td align="right" class='awrnc'>12,560,367,616</td><td align="right" class='awrnc'>20,552,020.97</td><td align="right" class='awrnc'>341,797.31</td></tr>
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>175</td><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>max cf enq hold time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>messages received</td><td align="right" class='awrc'>84,009</td><td align="right" class='awrc'>137.46</td><td align="right" class='awrc'>2.29</td></tr>
<tr><td scope="row" class='awrnc'>messages sent</td><td align="right" class='awrnc'>84,009</td><td align="right" class='awrnc'>137.46</td><td align="right" class='awrnc'>2.29</td></tr>
<tr><td scope="row" class='awrc'>min active SCN optimization applied on CR</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>no work - consistent read gets</td><td align="right" class='awrnc'>85,907</td><td align="right" class='awrnc'>140.57</td><td align="right" class='awrnc'>2.34</td></tr>
<tr><td scope="row" class='awrc'>non-idle wait count</td><td align="right" class='awrc'>3,022,712</td><td align="right" class='awrc'>4,945.94</td><td align="right" class='awrc'>82.26</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>91,113</td><td align="right" class='awrnc'>149.08</td><td align="right" class='awrnc'>2.48</td></tr>
<tr><td scope="row" class='awrc'>parse count (describe)</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse count (failures)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>parse count (hard)</td><td align="right" class='awrc'>987</td><td align="right" class='awrc'>1.61</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>parse count (total)</td><td align="right" class='awrnc'>5,002</td><td align="right" class='awrnc'>8.18</td><td align="right" class='awrnc'>0.14</td></tr>
<tr><td scope="row" class='awrc'>parse time cpu</td><td align="right" class='awrc'>239</td><td align="right" class='awrc'>0.39</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>741</td><td align="right" class='awrnc'>1.21</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>physical read IO requests</td><td align="right" class='awrc'>1,093,641</td><td align="right" class='awrc'>1,789.48</td><td align="right" class='awrc'>29.76</td></tr>
<tr><td scope="row" class='awrnc'>physical read bytes</td><td align="right" class='awrnc'>8,965,603,328</td><td align="right" class='awrnc'>14,670,053.72</td><td align="right" class='awrnc'>243,975.27</td></tr>
<tr><td scope="row" class='awrc'>physical read total IO requests</td><td align="right" class='awrc'>1,098,967</td><td align="right" class='awrc'>1,798.20</td><td align="right" class='awrc'>29.91</td></tr>
<tr><td scope="row" class='awrnc'>physical read total bytes</td><td align="right" class='awrnc'>10,501,441,024</td><td align="right" class='awrnc'>17,183,082.75</td><td align="right" class='awrnc'>285,769.05</td></tr>
<tr><td scope="row" class='awrc'>physical read total multi block requests</td><td align="right" class='awrc'>1,418</td><td align="right" class='awrc'>2.32</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>physical reads</td><td align="right" class='awrnc'>1,094,434</td><td align="right" class='awrnc'>1,790.78</td><td align="right" class='awrnc'>29.78</td></tr>
<tr><td scope="row" class='awrc'>physical reads cache</td><td align="right" class='awrc'>1,094,366</td><td align="right" class='awrc'>1,790.67</td><td align="right" class='awrc'>29.78</td></tr>
<tr><td scope="row" class='awrnc'>physical reads cache prefetch</td><td align="right" class='awrnc'>802</td><td align="right" class='awrnc'>1.31</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>physical reads direct</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical reads direct (lob)</td><td align="right" class='awrnc'>68</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical reads direct temporary tablespace</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical reads prefetch warmup</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical write IO requests</td><td align="right" class='awrc'>695,441</td><td align="right" class='awrc'>1,137.92</td><td align="right" class='awrc'>18.92</td></tr>
<tr><td scope="row" class='awrnc'>physical write bytes</td><td align="right" class='awrnc'>6,149,431,296</td><td align="right" class='awrnc'>10,062,065.44</td><td align="right" class='awrnc'>167,340.57</td></tr>
<tr><td scope="row" class='awrc'>physical write total IO requests</td><td align="right" class='awrc'>791,027</td><td align="right" class='awrc'>1,294.33</td><td align="right" class='awrc'>21.53</td></tr>
<tr><td scope="row" class='awrnc'>physical write total bytes</td><td align="right" class='awrnc'>8,145,636,352</td><td align="right" class='awrnc'>13,328,374.95</td><td align="right" class='awrnc'>221,662.03</td></tr>
<tr><td scope="row" class='awrc'>physical write total multi block requests</td><td align="right" class='awrc'>1,140</td><td align="right" class='awrc'>1.87</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>750,663</td><td align="right" class='awrnc'>1,228.28</td><td align="right" class='awrnc'>20.43</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct</td><td align="right" class='awrc'>909</td><td align="right" class='awrc'>1.49</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct (lob)</td><td align="right" class='awrnc'>71</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct temporary tablespace</td><td align="right" class='awrc'>777</td><td align="right" class='awrc'>1.27</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>physical writes from cache</td><td align="right" class='awrnc'>749,754</td><td align="right" class='awrnc'>1,226.79</td><td align="right" class='awrnc'>20.40</td></tr>
<tr><td scope="row" class='awrc'>physical writes non checkpoint</td><td align="right" class='awrc'>729,093</td><td align="right" class='awrc'>1,192.99</td><td align="right" class='awrc'>19.84</td></tr>
<tr><td scope="row" class='awrnc'>pinned buffers inspected</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>prefetch warmup blocks aged out before use</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>prefetched blocks aged out before use</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>process last non-idle time</td><td align="right" class='awrc'>614</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>recursive calls</td><td align="right" class='awrnc'>167,038</td><td align="right" class='awrnc'>273.32</td><td align="right" class='awrnc'>4.55</td></tr>
<tr><td scope="row" class='awrc'>recursive cpu usage</td><td align="right" class='awrc'>56,934</td><td align="right" class='awrc'>93.16</td><td align="right" class='awrc'>1.55</td></tr>
<tr><td scope="row" class='awrnc'>redo KB read</td><td align="right" class='awrnc'>876,544</td><td align="right" class='awrnc'>1,434.25</td><td align="right" class='awrnc'>23.85</td></tr>
<tr><td scope="row" class='awrc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrc'>725,304</td><td align="right" class='awrc'>1,186.79</td><td align="right" class='awrc'>19.74</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written</td><td align="right" class='awrnc'>1,940,496</td><td align="right" class='awrnc'>3,175.16</td><td align="right" class='awrnc'>52.81</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written (group 0)</td><td align="right" class='awrc'>683,640</td><td align="right" class='awrc'>1,118.61</td><td align="right" class='awrc'>18.60</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written (group 1)</td><td align="right" class='awrnc'>406,847</td><td align="right" class='awrnc'>665.71</td><td align="right" class='awrnc'>11.07</td></tr>
<tr><td scope="row" class='awrc'>redo buffer allocation retries</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo entries</td><td align="right" class='awrnc'>1,236,904</td><td align="right" class='awrnc'>2,023.90</td><td align="right" class='awrnc'>33.66</td></tr>
<tr><td scope="row" class='awrc'>redo log space requests</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo size</td><td align="right" class='awrnc'>950,293,820</td><td align="right" class='awrnc'>1,554,927.30</td><td align="right" class='awrnc'>25,859.74</td></tr>
<tr><td scope="row" class='awrc'>redo size for direct writes</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo subscn max counts</td><td align="right" class='awrnc'>139</td><td align="right" class='awrnc'>0.23</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time</td><td align="right" class='awrc'>111</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time (usec)</td><td align="right" class='awrnc'>1,086,439</td><td align="right" class='awrnc'>1,777.70</td><td align="right" class='awrnc'>29.56</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead (usec)</td><td align="right" class='awrc'>3,022</td><td align="right" class='awrc'>4.94</td><td align="right" class='awrc'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch writes</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo wastage</td><td align="right" class='awrnc'>11,574,200</td><td align="right" class='awrnc'>18,938.39</td><td align="right" class='awrnc'>314.96</td></tr>
<tr><td scope="row" class='awrc'>redo write active strands</td><td align="right" class='awrc'>47,376</td><td align="right" class='awrc'>77.52</td><td align="right" class='awrc'>1.29</td></tr>
<tr><td scope="row" class='awrnc'>redo write broadcast ack count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write broadcast ack time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write finish time</td><td align="right" class='awrnc'>656,804,509</td><td align="right" class='awrnc'>1,074,702.62</td><td align="right" class='awrnc'>17,873.20</td></tr>
<tr><td scope="row" class='awrc'>redo write gather time</td><td align="right" class='awrc'>20,470,273</td><td align="right" class='awrc'>33,494.68</td><td align="right" class='awrc'>557.04</td></tr>
<tr><td scope="row" class='awrnc'>redo write info find</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write info find fail</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write schedule time</td><td align="right" class='awrnc'>20,914,192</td><td align="right" class='awrnc'>34,221.05</td><td align="right" class='awrnc'>569.12</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (   4KB)</td><td align="right" class='awrc'>680</td><td align="right" class='awrc'>1.11</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (   8KB)</td><td align="right" class='awrnc'>1,187</td><td align="right" class='awrnc'>1.94</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (  16KB)</td><td align="right" class='awrc'>3,861</td><td align="right" class='awrc'>6.32</td><td align="right" class='awrc'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (  32KB)</td><td align="right" class='awrnc'>9,235</td><td align="right" class='awrnc'>15.11</td><td align="right" class='awrnc'>0.25</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 128KB)</td><td align="right" class='awrc'>12,588</td><td align="right" class='awrc'>20.60</td><td align="right" class='awrc'>0.34</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 256KB)</td><td align="right" class='awrnc'>177</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 512KB)</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (1024KB)</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write time</td><td align="right" class='awrc'>65,773</td><td align="right" class='awrc'>107.62</td><td align="right" class='awrc'>1.79</td></tr>
<tr><td scope="row" class='awrnc'>redo write time (usec)</td><td align="right" class='awrnc'>657,733,894</td><td align="right" class='awrnc'>1,076,223.34</td><td align="right" class='awrnc'>17,898.49</td></tr>
<tr><td scope="row" class='awrc'>redo write total time</td><td align="right" class='awrc'>678,176,555</td><td align="right" class='awrc'>1,109,672.84</td><td align="right" class='awrc'>18,454.79</td></tr>
<tr><td scope="row" class='awrnc'>redo write worker delay (usec)</td><td align="right" class='awrnc'>18,172,995</td><td align="right" class='awrnc'>29,735.74</td><td align="right" class='awrnc'>494.53</td></tr>
<tr><td scope="row" class='awrc'>redo write worker delay count</td><td align="right" class='awrc'>16,709</td><td align="right" class='awrc'>27.34</td><td align="right" class='awrc'>0.45</td></tr>
<tr><td scope="row" class='awrnc'>redo writes</td><td align="right" class='awrnc'>27,756</td><td align="right" class='awrnc'>45.42</td><td align="right" class='awrnc'>0.76</td></tr>
<tr><td scope="row" class='awrc'>redo writes (group 0)</td><td align="right" class='awrc'>9,087</td><td align="right" class='awrc'>14.87</td><td align="right" class='awrc'>0.25</td></tr>
<tr><td scope="row" class='awrnc'>redo writes (group 1)</td><td align="right" class='awrnc'>7,622</td><td align="right" class='awrnc'>12.47</td><td align="right" class='awrnc'>0.21</td></tr>
<tr><td scope="row" class='awrc'>redo writes adaptive all</td><td align="right" class='awrc'>27,756</td><td align="right" class='awrc'>45.42</td><td align="right" class='awrc'>0.76</td></tr>
<tr><td scope="row" class='awrnc'>redo writes adaptive worker</td><td align="right" class='awrnc'>16,709</td><td align="right" class='awrnc'>27.34</td><td align="right" class='awrnc'>0.45</td></tr>
<tr><td scope="row" class='awrc'>remote Oradebug requests</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rollback changes - undo records applied</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>rollbacks only - consistent read gets</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>root node splits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>rows fetched via callback</td><td align="right" class='awrc'>5,627</td><td align="right" class='awrc'>9.21</td><td align="right" class='awrc'>0.15</td></tr>
<tr><td scope="row" class='awrnc'>saved cleanouts</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>saved cleanouts successfully completed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile allocation bytes</td><td align="right" class='awrnc'>581,632</td><td align="right" class='awrnc'>951.70</td><td align="right" class='awrnc'>15.83</td></tr>
<tr><td scope="row" class='awrc'>securefile allocation chunks</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile bytes non-transformed</td><td align="right" class='awrnc'>505,108</td><td align="right" class='awrnc'>826.49</td><td align="right" class='awrnc'>13.75</td></tr>
<tr><td scope="row" class='awrc'>securefile direct read bytes</td><td align="right" class='awrc'>557,056</td><td align="right" class='awrc'>911.49</td><td align="right" class='awrc'>15.16</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct read ops</td><td align="right" class='awrnc'>68</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile direct write bytes</td><td align="right" class='awrc'>581,632</td><td align="right" class='awrc'>951.70</td><td align="right" class='awrc'>15.83</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct write ops</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile number of non-transformed flushes</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment cfs allocations</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment chunks allocation from dispenser</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser allocations</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment dispenser load empty</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser load tasks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc bytes</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc ops</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc tasks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc time (ms)</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment total chunk allocation</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>session cursor cache hits</td><td align="right" class='awrnc'>89,183</td><td align="right" class='awrnc'>145.93</td><td align="right" class='awrnc'>2.43</td></tr>
<tr><td scope="row" class='awrc'>session logical reads</td><td align="right" class='awrc'>1,534,097</td><td align="right" class='awrc'>2,510.18</td><td align="right" class='awrc'>41.75</td></tr>
<tr><td scope="row" class='awrnc'>shared hash latch upgrades - no wait</td><td align="right" class='awrnc'>7,762</td><td align="right" class='awrnc'>12.70</td><td align="right" class='awrnc'>0.21</td></tr>
<tr><td scope="row" class='awrc'>shared hash latch upgrades - wait</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>shared io pool buffer get success</td><td align="right" class='awrnc'>88</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>sorts (memory)</td><td align="right" class='awrc'>4,543</td><td align="right" class='awrc'>7.43</td><td align="right" class='awrc'>0.12</td></tr>
<tr><td scope="row" class='awrnc'>sorts (rows)</td><td align="right" class='awrnc'>987,442</td><td align="right" class='awrnc'>1,615.71</td><td align="right" class='awrnc'>26.87</td></tr>
<tr><td scope="row" class='awrc'>sql area evicted</td><td align="right" class='awrc'>2,139</td><td align="right" class='awrc'>3.50</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>sql area purged</td><td align="right" class='awrnc'>47</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>summed dirty queue length</td><td align="right" class='awrc'>127,043</td><td align="right" class='awrc'>207.88</td><td align="right" class='awrc'>3.46</td></tr>
<tr><td scope="row" class='awrnc'>switch current caused by our pin</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>switch current to new buffer</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>table fetch by rowid</td><td align="right" class='awrnc'>19,774</td><td align="right" class='awrnc'>32.36</td><td align="right" class='awrnc'>0.54</td></tr>
<tr><td scope="row" class='awrc'>table fetch continued row</td><td align="right" class='awrc'>635</td><td align="right" class='awrc'>1.04</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>table scan blocks gotten</td><td align="right" class='awrnc'>11,882</td><td align="right" class='awrnc'>19.44</td><td align="right" class='awrnc'>0.32</td></tr>
<tr><td scope="row" class='awrc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrc'>615,025</td><td align="right" class='awrc'>1,006.34</td><td align="right" class='awrc'>16.74</td></tr>
<tr><td scope="row" class='awrnc'>table scan rows gotten</td><td align="right" class='awrnc'>615,025</td><td align="right" class='awrnc'>1,006.34</td><td align="right" class='awrnc'>16.74</td></tr>
<tr><td scope="row" class='awrc'>table scans (short tables)</td><td align="right" class='awrc'>1,038</td><td align="right" class='awrc'>1.70</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>temp space allocated (bytes)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>total cf enq hold time</td><td align="right" class='awrc'>3,540</td><td align="right" class='awrc'>5.79</td><td align="right" class='awrc'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>total number of cf enq holders</td><td align="right" class='awrnc'>227</td><td align="right" class='awrnc'>0.37</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>total number of times SMON posted</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction lock background get time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction lock background gets</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction lock foreground requests</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction rollbacks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction tables consistent read rollbacks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction tables consistent reads - undo records applied</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>undo change vector size</td><td align="right" class='awrnc'>394,801,084</td><td align="right" class='awrnc'>645,997.03</td><td align="right" class='awrnc'>10,743.47</td></tr>
<tr><td scope="row" class='awrc'>user calls</td><td align="right" class='awrc'>1,096</td><td align="right" class='awrc'>1.79</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>user commits</td><td align="right" class='awrnc'>36,748</td><td align="right" class='awrnc'>60.13</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>user logons cumulative</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>user logouts cumulative</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>workarea executions - optimal</td><td align="right" class='awrc'>2,242</td><td align="right" class='awrc'>3.67</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>write clones created in background</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>write clones created in foreground</td><td align="right" class='awrc'>94</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1300"></a>
<h3 class="awr">Instance Activity Stats - Absolute Values</h3>
<ul>
<li class="awr"> Statistics with absolute values (should not be diffed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays absolute values of instance-related features. For each instance, activity begin value and end value are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Begin Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>logons current</td><td align="right" class='awrc'>108</td><td align="right" class='awrc'>91</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors current</td><td align="right" class='awrnc'>218</td><td align="right" class='awrnc'>133</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache count</td><td align="right" class='awrc'>14,077</td><td align="right" class='awrc'>14,560</td></tr>
<tr><td scope="row" class='awrnc'>session pga memory</td><td align="right" class='awrnc'>671,378,456</td><td align="right" class='awrnc'>597,733,744</td></tr>
<tr><td scope="row" class='awrc'>session pga memory max</td><td align="right" class='awrc'>865,777,976</td><td align="right" class='awrc'>765,263,504</td></tr>
<tr><td scope="row" class='awrnc'>session uga memory</td><td align="right" class='awrnc'>814,063,824</td><td align="right" class='awrnc'>830,833,800</td></tr>
<tr><td scope="row" class='awrc'>session uga memory max</td><td align="right" class='awrc'>10,515,302,120</td><td align="right" class='awrc'>11,032,319,424</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1400"></a>
<h3 class="awr">Instance Activity Stats - Thread Activity</h3>
<ul>
<li class="awr"> Statistics identified by '(derived)' come from sources other than SYSSTAT</li>
</ul>
<table border="0" class="tdiff" summary="This table displays thread activity stats in the instance. For each activity , total number of activity and activity per hour are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Hour</th></tr>
<tr><td scope="row" class='awrc'>log switches (derived)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="24"></a>
<h2 class="awr">
IO Stats
</h2>
<ul>
<li class="awr"><a class="awr" href="#8760">IOStat by Function summary</a></li>
<li class="awr"><a class="awr" href="#8770">IOStat by Filetype summary</a></li>
<li class="awr"><a class="awr" href="#8780">IOStat by Function/Filetype summary</a></li>
<li class="awr"><a class="awr" href="#1700">Tablespace IO Stats</a></li>
<li class="awr"><a class="awr" href="#1800">File IO Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8760"></a>
<h3 class="awr">IOStat by Function summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the IO Statistics for different functions. IO stats includes amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td scope="row" class='awrc'>Buffer Cache Reads</td><td align="right" class='awrc'>8.2G</td><td align="right" class='awrc'>1766.96</td><td align="right" class='awrc'>13.817M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1.1M</td><td align="right" class='awrc'>8.59ms</td></tr>
<tr><td scope="row" class='awrnc'>DBWR</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>5.8G</td><td align="right" class='awrnc'>1150.28</td><td align="right" class='awrnc'>9.688M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1.8G</td><td align="right" class='awrc'>153.80</td><td align="right" class='awrc'>3.066M</td><td align="right" class='awrc'>27.5K</td><td align="right" class='awrc'>22.94ms</td></tr>
<tr><td scope="row" class='awrnc'>Others</td><td align="right" class='awrnc'>1.4G</td><td align="right" class='awrnc'>8.61</td><td align="right" class='awrnc'>2.35M</td><td align="right" class='awrnc'>12M</td><td align="right" class='awrnc'>1.17</td><td align="right" class='awrnc'>.02M</td><td align="right" class='awrnc'>3370</td><td align="right" class='awrnc'>3.10ms</td></tr>
<tr><td scope="row" class='awrc'>Direct Reads</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>3M</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>.005M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Direct Writes</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2M</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>.003M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>24.00ms</td></tr>
<tr><td scope="row" class='awrnc'>TOTAL:</td><td align="right" class='awrnc'>9.6G</td><td align="right" class='awrnc'>1775.68</td><td align="right" class='awrnc'>16.166M</td><td align="right" class='awrnc'>7.6G</td><td align="right" class='awrnc'>1305.29</td><td align="right" class='awrnc'>12.782M</td><td align="right" class='awrnc'>1.1M</td><td align="right" class='awrnc'>8.93ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8770"></a>
<h3 class="awr">IOStat by Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Small Read and Large Read are average service times </li>
<li class="awr"> Ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IO Statistics for different file types, such as data files, control files, log files and temp files. IO Statistics include amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Small Read</th><th class="awrbg" scope="col">Large Read</th></tr>
<tr><td scope="row" class='awrc'>Data File</td><td align="right" class='awrc'>8.2G</td><td align="right" class='awrc'>1767.46</td><td align="right" class='awrc'>13.808M</td><td align="right" class='awrc'>5.8G</td><td align="right" class='awrc'>1150.51</td><td align="right" class='awrc'>9.695M</td><td align="right" class='awrc'>8.10ms</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Log File</td><td align="right" class='awrnc'>1.3G</td><td align="right" class='awrnc'>2.71</td><td align="right" class='awrnc'>2.258M</td><td align="right" class='awrnc'>1.8G</td><td align="right" class='awrnc'>153.78</td><td align="right" class='awrnc'>3.066M</td><td align="right" class='awrnc'>733.58us</td><td align="right" class='awrnc'>1743.64ms</td></tr>
<tr><td scope="row" class='awrc'>Control File</td><td align="right" class='awrc'>56M</td><td align="right" class='awrc'>5.86</td><td align="right" class='awrc'>.092M</td><td align="right" class='awrc'>9M</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>.015M</td><td align="right" class='awrc'>306.92us</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Temp File</td><td align="right" class='awrnc'>6M</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>.01M</td><td align="right" class='awrnc'>6M</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>.01M</td><td align="right" class='awrnc'>292.68us</td><td align="right" class='awrnc'>.00ns</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1.33ms</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TOTAL:</td><td align="right" class='awrnc'>9.6G</td><td align="right" class='awrnc'>1776.22</td><td align="right" class='awrnc'>16.168M</td><td align="right" class='awrnc'>7.6G</td><td align="right" class='awrnc'>1305.55</td><td align="right" class='awrnc'>12.786M</td><td align="right" class='awrnc'>8.07ms</td><td align="right" class='awrnc'>1731.09ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8780"></a>
<h3 class="awr">IOStat by Function/Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Ordered by (Data Read + Write) desc for each function</li>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function/Filetype summary. . 'Data' columns suffixed with M,G,T,P are in multiples of 1024 other columns suffixed with K,M,G,T,P are in multiples of 1000. Ordered by (Data Read + Write) desc for each function"><tr><th class="awrbg" scope="col">Function/File Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs	 per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time	</th></tr>
<tr><td scope="row" class='awrc'>
Buffer Cache Reads
</td><td align="right" class='awrc'>8.2G</td><td align="right" class='awrc'>1766.83</td><td align="right" class='awrc'>13.815M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1.1M</td><td align="right" class='awrc'>8.59ms</td></tr>
<tr><td scope="row" class='awrnc'>
 Buffer Cache Reads (Data File)
</td><td align="right" class='awrnc'>8.2G</td><td align="right" class='awrnc'>1766.68</td><td align="right" class='awrnc'>13.805M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1.1M</td><td align="right" class='awrnc'>8.59ms</td></tr>
<tr><td scope="row" class='awrc'>
 Buffer Cache Reads (Temp File)
</td><td align="right" class='awrc'>6M</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>.01M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>92</td><td align="right" class='awrc'>576.09us</td></tr>
<tr><td scope="row" class='awrnc'>
 DBWR (Data File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>5.8G</td><td align="right" class='awrnc'>1150.81</td><td align="right" class='awrnc'>9.693M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
DBWR
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>5.8G</td><td align="right" class='awrc'>1150.88</td><td align="right" class='awrc'>9.693M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
  DB Id      Inst Num	DB Name      Instance	  Host
<tr><td scope="row" class='awrnc'>
------------ ---------- ---------    ----------   ------
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex
 DBWR (Temp File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>

<tr><td scope="row" class='awrc'>
Using 3393773525 for database Id
 LGWR (Log File)
Using instances ALL (default 'ALL')
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1.8G</td><td align="right" class='awrc'>153.79</td><td align="right" class='awrc'>3.065M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
LGWR
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1.8G</td><td align="right" class='awrnc'>153.79</td><td align="right" class='awrnc'>3.065M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
Others
</td><td align="right" class='awrc'>1.4G</td><td align="right" class='awrc'>8.57</td><td align="right" class='awrc'>2.35M</td><td align="right" class='awrc'>11M</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>.018M</td><td align="right" class='awrc'>2999</td><td align="right" class='awrc'>780.05us</td></tr>
<tr><td scope="row" class='awrnc'>
 Others (Log File)
</td><td align="right" class='awrnc'>1.3G</td><td align="right" class='awrnc'>2.71</td><td align="right" class='awrnc'>2.258M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>274</td><td align="right" class='awrnc'>1.29ms</td></tr>
<tr><td scope="row" class='awrc'>
 Others (Control File)
</td><td align="right" class='awrc'>56M</td><td align="right" class='awrc'>5.86</td><td align="right" class='awrc'>.092M</td><td align="right" class='awrc'>9M</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>.015M</td><td align="right" class='awrc'>2725</td><td align="right" class='awrc'>728.98us</td></tr>
<tr><td scope="row" class='awrnc'>
 Others (Temp File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2M</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>.003M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 Others (Data File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 Direct Reads (Temp File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>3M</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>.005M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
Direct Reads
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>3M</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>.005M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 Direct Reads (Data File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
Direct Writes
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2M</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>.003M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 Direct Writes (Data File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1M</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>.002M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
 Direct Writes (Temp File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>.002M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
 Streams AQ (Data File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>24.00ms</td></tr>
<tr><td scope="row" class='awrc'>
Streams AQ
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>24.00ms</td></tr>
<tr><td scope="row" class='awrnc'>
TOTAL:
</td><td align="right" class='awrnc'>9.6G</td><td align="right" class='awrnc'>1775.51</td><td align="right" class='awrnc'>16.165M</td><td align="right" class='awrnc'>7.6G</td><td align="right" class='awrnc'>1305.71</td><td align="right" class='awrnc'>12.784M</td><td align="right" class='awrnc'>1.1M</td><td align="right" class='awrnc'>8.57ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1700"></a>
<h3 class="awr">Tablespace IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1800"></a>
<h3 class="awr">File IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="25"></a>
<h2 class="awr">
Buffer Pool Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1900">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#1910">Checkpoint Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1900"></a>
<h3 class="awr">Buffer Pool Statistics</h3>
<ul>
<li class="awr"> Standard block size Pools  D: default,  K: keep,  R: recycle </li>
<li class="awr"> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer pool statistics for different types of buffers, such as default, keep, and recycle. Statistics include number of buffers, % Pool hit, buffer gets, physical reads, physical writes, free buffer wait, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Number of Buffers</th><th class="awrbg" scope="col">Pool Hit%</th><th class="awrbg" scope="col">Buffer Gets</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Free Buff Wait</th><th class="awrbg" scope="col">Writ Comp Wait</th><th class="awrbg" scope="col">Buffer Busy Waits</th></tr>
<tr><td scope="row" class='awrc'>D</td><td align="right" class='awrc'>913,360</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>1,530,386</td><td align="right" class='awrc'>1,094,495</td><td align="right" class='awrc'>747,444</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1910"></a>
<h3 class="awr">Checkpoint Activity</h3>
<ul>
<li class="awr">Total Physical Writes:			    750,663</li>
</ul>
<table border="0" class="tdiff" summary="This table displays checkpoint activity statistics. Statistics include MTTR writes, log size writes, autotune checkpoint writes, etc."><tr><th class="awrbg" scope="col">MTTR Writes</th><th class="awrbg" scope="col">Log Size Writes</th><th class="awrbg" scope="col">Log Ckpt Writes</th><th class="awrbg" scope="col">Other Settings Writes</th><th class="awrbg" scope="col">Autotune Ckpt Writes</th><th class="awrbg" scope="col">Thread Ckpt Writes</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>286,603</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="26"></a>
<h2 class="awr">
Advisory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#2000">Instance Recovery Stats</a></li>
<li class="awr"><a class="awr" href="#2010">MTTR Advisory</a></li>
<li class="awr"><a class="awr" href="#2100">Buffer Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#2400">PGA Aggr Summary</a></li>
<li class="awr"><a class="awr" href="#2600">PGA Aggr Target Stats</a></li>
<li class="awr"><a class="awr" href="#2700">PGA Aggr Target Histogram</a></li>
<li class="awr"><a class="awr" href="#2800">PGA Memory Advisory</a></li>
<li class="awr"><a class="awr" href="#5500">Shared Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#6900">SGA Target Advisory</a></li>
<li class="awr"><a class="awr" href="#7100">Streams Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#5700">Java Pool Advisory</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2000"></a>
<h3 class="awr">Instance Recovery Stats</h3>
<ul>
<li class="awr"> B: Begin Snapshot,  E: End Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="This table displays instance recovery statistics at begin and end snapshot. It displays target MTTR, estimated MTTR, recovery estimated IO per second, redo blocks, target redo blocks, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Targt MTTR  (s) </th><th class="awrbg" scope="col">Estd MTTR (s)</th><th class="awrbg" scope="col">Recovery Estd IOs</th><th class="awrbg" scope="col">Actual  RedoBlks</th><th class="awrbg" scope="col">Target	RedoBlks</th><th class="awrbg" scope="col">Log Sz  RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Timeout RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Interval RedoBlks</th><th class="awrbg" scope="col">Opt Log Sz(M)</th><th class="awrbg" scope="col">Estd RAC Avail Time</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>95</td><td align="right" class='awrc'>156286</td><td align="right" class='awrc'>259483</td><td align="right" class='awrc'>16986915</td><td align="right" class='awrc'>16986915</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>31</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>519</td><td align="right" class='awrnc'>574472</td><td align="right" class='awrnc'>1248200</td><td align="right" class='awrnc'>741102</td><td align="right" class='awrnc'>16986915</td><td align="right" class='awrnc'>741102</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>493</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2010"></a>
<h3 class="awr">MTTR Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2100"></a>
<h3 class="awr">Buffer Pool Advisory</h3>
<ul>
<li class="awr"> Only rows with estimated physical reads &gt;0 are displayed </li>
<li class="awr"> ordered by Block Size, Buffers For Estimate</li>
</ul>
<table border="0" class="tdiff" summary="This table displays MTTR advisory. It displays size for estimate, dirty limit, estimated cache writes, estimated cache write factor, estimated total write, estimated total IO per second, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Size for Est (M)</th><th class="awrbg" scope="col">Size Factor</th><th class="awrbg" scope="col">Buffers (thousands)</th><th class="awrbg" scope="col">Est Phys Read Factor</th><th class="awrbg" scope="col">Estimated Phys Reads (thousands)</th><th class="awrbg" scope="col">Est Phys Read Time</th><th class="awrbg" scope="col">Est %DBtime for Rds</th></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>768</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>1.21</td><td align="right" class='awrc'>51,518</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>152400.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>1,536</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>179</td><td align="right" class='awrnc'>1.16</td><td align="right" class='awrnc'>49,686</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>146975.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>2,304</td><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>268</td><td align="right" class='awrc'>1.13</td><td align="right" class='awrc'>48,369</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>143078.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>3,072</td><td align="right" class='awrnc'>0.39</td><td align="right" class='awrnc'>358</td><td align="right" class='awrnc'>1.11</td><td align="right" class='awrnc'>47,293</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>139894.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>3,840</td><td align="right" class='awrc'>0.49</td><td align="right" class='awrc'>447</td><td align="right" class='awrc'>1.09</td><td align="right" class='awrc'>46,371</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>137163.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>4,608</td><td align="right" class='awrnc'>0.59</td><td align="right" class='awrnc'>537</td><td align="right" class='awrnc'>1.07</td><td align="right" class='awrnc'>45,549</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>134728.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>5,376</td><td align="right" class='awrc'>0.69</td><td align="right" class='awrc'>626</td><td align="right" class='awrc'>1.05</td><td align="right" class='awrc'>44,799</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>132509.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>6,144</td><td align="right" class='awrnc'>0.78</td><td align="right" class='awrnc'>716</td><td align="right" class='awrnc'>1.03</td><td align="right" class='awrnc'>44,095</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>130427.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>6,912</td><td align="right" class='awrc'>0.88</td><td align="right" class='awrc'>805</td><td align="right" class='awrc'>1.02</td><td align="right" class='awrc'>43,435</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>128473.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>7,680</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>895</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>42,816</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>126639.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>7,840</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>913</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>42,695</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>126281.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>8,448</td><td align="right" class='awrnc'>1.08</td><td align="right" class='awrnc'>984</td><td align="right" class='awrnc'>0.99</td><td align="right" class='awrnc'>42,235</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>124918.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>9,216</td><td align="right" class='awrc'>1.18</td><td align="right" class='awrc'>1,074</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>41,680</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>123277.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>9,984</td><td align="right" class='awrnc'>1.27</td><td align="right" class='awrnc'>1,163</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>41,148</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>121702.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>10,752</td><td align="right" class='awrc'>1.37</td><td align="right" class='awrc'>1,253</td><td align="right" class='awrc'>0.95</td><td align="right" class='awrc'>40,645</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>120214.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>11,520</td><td align="right" class='awrnc'>1.47</td><td align="right" class='awrnc'>1,342</td><td align="right" class='awrnc'>0.94</td><td align="right" class='awrnc'>40,179</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>118835.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>12,288</td><td align="right" class='awrc'>1.57</td><td align="right" class='awrc'>1,432</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>39,730</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>117505.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>13,056</td><td align="right" class='awrnc'>1.67</td><td align="right" class='awrnc'>1,521</td><td align="right" class='awrnc'>0.92</td><td align="right" class='awrnc'>39,309</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>116257.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>13,824</td><td align="right" class='awrc'>1.76</td><td align="right" class='awrc'>1,610</td><td align="right" class='awrc'>0.91</td><td align="right" class='awrc'>38,899</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>115046.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>14,592</td><td align="right" class='awrnc'>1.86</td><td align="right" class='awrnc'>1,700</td><td align="right" class='awrnc'>0.90</td><td align="right" class='awrnc'>38,517</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>113914.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>15,360</td><td align="right" class='awrc'>1.96</td><td align="right" class='awrc'>1,789</td><td align="right" class='awrc'>0.89</td><td align="right" class='awrc'>38,158</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>112852.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2400"></a>
<h3 class="awr">PGA Aggr Summary</h3>
<ul>
<li class="awr"> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate summary. It includes PGA cache hits, total wait time, average time for each class of buffer wait and WorkArea data processed."><tr><th class="awrbg" scope="col">PGA Cache Hit %</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Extra W/A MB Read/Written</th></tr>
<tr><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>345</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2600"></a>
<h3 class="awr">PGA Aggr Target Stats</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap (rows dentified with B or E contain data	 which is absolute i.e. not diffed over the interval) </li>
<li class="awr"> Auto PGA Target - actual workarea memory target </li>
<li class="awr"> W/A PGA Used	 - amount of memory used for all Workareas (manual + auto) </li>
<li class="awr"> %PGA W/A Mem	 - percentage of PGA memory allocated to workareas </li>
<li class="awr"> %Auto W/A Mem	 - percentage of workarea memory controlled by Auto Mem Mgmt </li>
<li class="awr"> %Man W/A Mem	 - percentage of workarea memory under manual control</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target statistics for begin and end snapshot. Statistics include PGA aggregate target, auto PGA target, PGA memory allocation, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">PGA Aggr Target(M)</th><th class="awrbg" scope="col">Auto PGA Target(M)</th><th class="awrbg" scope="col">PGA Mem  Alloc(M) </th><th class="awrbg" scope="col">W/A PGA  Used(M) </th><th class="awrbg" scope="col">%PGA W/A Mem</th><th class="awrbg" scope="col">%Auto W/A Mem</th><th class="awrbg" scope="col">%Man W/A Mem</th><th class="awrbg" scope="col">Global Mem Bound(K)</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>3,215</td><td align="right" class='awrc'>1,865</td><td align="right" class='awrc'>1,393.59</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>329,210</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>3,215</td><td align="right" class='awrnc'>1,917</td><td align="right" class='awrnc'>1,312.48</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>329,210</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2700"></a>
<h3 class="awr">PGA Aggr Target Histogram</h3>
<ul>
<li class="awr"> Optimal Executions are purely in-memory operations</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target histograms."><tr><th class="awrbg" scope="col">  Low Optimal</th><th class="awrbg" scope="col">  High Optimal</th><th class="awrbg" scope="col">Total Execs</th><th class="awrbg" scope="col">Optimal Execs</th><th class="awrbg" scope="col">1-Pass Execs</th><th class="awrbg" scope="col">M-Pass Execs</th></tr>
<tr><td class='awrc'>2K</td><td class='awrc'>4K</td><td align="right" class='awrc'>1,774</td><td align="right" class='awrc'>1,774</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>64K</td><td class='awrnc'>128K</td><td align="right" class='awrnc'>101</td><td align="right" class='awrnc'>101</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>128K</td><td class='awrc'>256K</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>256K</td><td class='awrnc'>512K</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>512K</td><td class='awrc'>1024K</td><td align="right" class='awrc'>134</td><td align="right" class='awrc'>134</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>1M</td><td class='awrnc'>2M</td><td align="right" class='awrnc'>161</td><td align="right" class='awrnc'>161</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>2M</td><td class='awrc'>4M</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2800"></a>
<h3 class="awr">PGA Memory Advisory</h3>
<ul>
<li class="awr"> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value    where Estd PGA Overalloc Count is 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA memory advisory for different estimated PGA target sizes. It displays size factor, Workarea MB processed, estimated PGA cache hit, estimated extra Workarea MB read written to disk, etc., for each target size."><tr><th class="awrbg" scope="col">PGA Target Est (MB)</th><th class="awrbg" scope="col">Size Factr</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Estd Extra	 W/A MB Read/	Written to Disk </th><th class="awrbg" scope="col">Estd PGA Cache Hit %</th><th class="awrbg" scope="col">Estd PGA Overalloc Count</th><th class="awrbg" scope="col">Estd Time</th></tr>
<tr><td align="right" scope="row" class='awrc'>402</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>17,930.21</td><td align="right" class='awrc'>965.71</td><td align="right" class='awrc'>95.00</td><td align="right" class='awrc'>73</td><td align="right" class='awrc'>78,348,788</td></tr>
<tr><td align="right" scope="row" class='awrnc'>804</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>17,930.21</td><td align="right" class='awrnc'>901.32</td><td align="right" class='awrnc'>95.00</td><td align="right" class='awrnc'>59</td><td align="right" class='awrnc'>78,081,819</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,608</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>17,930.21</td><td align="right" class='awrc'>532.64</td><td align="right" class='awrc'>97.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>76,553,146</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,411</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>17,930.21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>74,344,640</td></tr>
<tr><td align="right" scope="row" class='awrc'>3,215</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>17,930.21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>74,344,640</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,858</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>17,930.21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>74,344,640</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,501</td><td align="right" class='awrc'>1.40</td><td align="right" class='awrc'>17,930.21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>74,344,640</td></tr>
<tr><td align="right" scope="row" class='awrnc'>5,144</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>17,930.21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>74,344,640</td></tr>
<tr><td align="right" scope="row" class='awrc'>5,787</td><td align="right" class='awrc'>1.80</td><td align="right" class='awrc'>17,930.21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>74,344,640</td></tr>
<tr><td align="right" scope="row" class='awrnc'>6,430</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>17,930.21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>74,344,640</td></tr>
<tr><td align="right" scope="row" class='awrc'>9,645</td><td align="right" class='awrc'>3.00</td><td align="right" class='awrc'>17,930.21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>74,344,640</td></tr>
<tr><td align="right" scope="row" class='awrnc'>12,860</td><td align="right" class='awrnc'>4.00</td><td align="right" class='awrnc'>17,930.21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>74,344,640</td></tr>
<tr><td align="right" scope="row" class='awrc'>19,290</td><td align="right" class='awrc'>6.00</td><td align="right" class='awrc'>17,930.21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>74,344,640</td></tr>
<tr><td align="right" scope="row" class='awrnc'>25,720</td><td align="right" class='awrnc'>8.00</td><td align="right" class='awrnc'>17,930.21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>74,344,640</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5500"></a>
<h3 class="awr">Shared Pool Advisory</h3>
<ul>
<li class="awr"> SP: Shared Pool     Est LC: Estimated Library Cache   Factr: Factor </li>
<li class="awr"> Note there is often a 1:Many correlation between a single logical object    in the Library Cache, and the physical number of memory objects associated    with it.  Therefore comparing the number of Lib Cache objects (e.g. in     v$librarycache), with the number of Lib Cache Memory Objects is invalid.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared pool advisory. Size factor, estimated library cache size, estimated library cache memory object and other info is displayed for different shared pool sizes"><tr><th class="awrbg" scope="col">Shared Pool Size(M)</th><th class="awrbg" scope="col">SP Size Factr</th><th class="awrbg" scope="col">Est LC Size (M)</th><th class="awrbg" scope="col">Est LC Mem Obj</th><th class="awrbg" scope="col">Est LC Time Saved (s)</th><th class="awrbg" scope="col">Est LC Time Saved Factr</th><th class="awrbg" scope="col">Est LC Load Time (s)</th><th class="awrbg" scope="col">Est LC Load Time Factr</th><th class="awrbg" scope="col">Est LC Mem Obj Hits (K)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1,280</td><td align="right" class='awrc'>0.80</td><td align="right" class='awrc'>37</td><td align="right" class='awrc'>1,290</td><td align="right" class='awrc'>6,339</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>124,795</td><td align="right" class='awrc'>897.81</td><td align="right" class='awrc'>276</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,312</td><td align="right" class='awrnc'>0.82</td><td align="right" class='awrnc'>68</td><td align="right" class='awrnc'>2,517</td><td align="right" class='awrnc'>10,529</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>120,605</td><td align="right" class='awrnc'>867.66</td><td align="right" class='awrnc'>395</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,344</td><td align="right" class='awrc'>0.84</td><td align="right" class='awrc'>99</td><td align="right" class='awrc'>3,431</td><td align="right" class='awrc'>14,360</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>116,774</td><td align="right" class='awrc'>840.10</td><td align="right" class='awrc'>500</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,376</td><td align="right" class='awrnc'>0.86</td><td align="right" class='awrnc'>130</td><td align="right" class='awrnc'>3,788</td><td align="right" class='awrnc'>19,313</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>111,821</td><td align="right" class='awrnc'>804.47</td><td align="right" class='awrnc'>684</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,408</td><td align="right" class='awrc'>0.88</td><td align="right" class='awrc'>162</td><td align="right" class='awrc'>4,238</td><td align="right" class='awrc'>113,442</td><td align="right" class='awrc'>0.87</td><td align="right" class='awrc'>17,692</td><td align="right" class='awrc'>127.28</td><td align="right" class='awrc'>5,326</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,440</td><td align="right" class='awrnc'>0.90</td><td align="right" class='awrnc'>193</td><td align="right" class='awrnc'>5,259</td><td align="right" class='awrnc'>115,275</td><td align="right" class='awrnc'>0.88</td><td align="right" class='awrnc'>15,859</td><td align="right" class='awrnc'>114.09</td><td align="right" class='awrnc'>5,387</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,472</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>224</td><td align="right" class='awrc'>5,856</td><td align="right" class='awrc'>119,352</td><td align="right" class='awrc'>0.91</td><td align="right" class='awrc'>11,782</td><td align="right" class='awrc'>84.76</td><td align="right" class='awrc'>5,511</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,504</td><td align="right" class='awrnc'>0.94</td><td align="right" class='awrnc'>255</td><td align="right" class='awrnc'>6,578</td><td align="right" class='awrnc'>123,243</td><td align="right" class='awrnc'>0.94</td><td align="right" class='awrnc'>7,891</td><td align="right" class='awrnc'>56.77</td><td align="right" class='awrnc'>5,621</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,536</td><td align="right" class='awrc'>0.96</td><td align="right" class='awrc'>286</td><td align="right" class='awrc'>7,048</td><td align="right" class='awrc'>127,084</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>4,050</td><td align="right" class='awrc'>29.14</td><td align="right" class='awrc'>5,729</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,568</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>317</td><td align="right" class='awrnc'>7,513</td><td align="right" class='awrnc'>130,916</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>218</td><td align="right" class='awrnc'>1.57</td><td align="right" class='awrnc'>5,837</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,600</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>348</td><td align="right" class='awrc'>8,327</td><td align="right" class='awrc'>130,995</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>139</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>5,840</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,632</td><td align="right" class='awrnc'>1.02</td><td align="right" class='awrnc'>379</td><td align="right" class='awrnc'>9,475</td><td align="right" class='awrnc'>131,000</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>134</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>5,841</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,664</td><td align="right" class='awrc'>1.04</td><td align="right" class='awrc'>411</td><td align="right" class='awrc'>10,465</td><td align="right" class='awrc'>131,006</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>128</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>5,841</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,696</td><td align="right" class='awrnc'>1.06</td><td align="right" class='awrnc'>440</td><td align="right" class='awrnc'>11,356</td><td align="right" class='awrnc'>131,008</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>126</td><td align="right" class='awrnc'>0.91</td><td align="right" class='awrnc'>5,841</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,728</td><td align="right" class='awrc'>1.08</td><td align="right" class='awrc'>440</td><td align="right" class='awrc'>11,356</td><td align="right" class='awrc'>131,010</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>124</td><td align="right" class='awrc'>0.89</td><td align="right" class='awrc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,760</td><td align="right" class='awrnc'>1.10</td><td align="right" class='awrnc'>440</td><td align="right" class='awrnc'>11,356</td><td align="right" class='awrnc'>131,014</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>0.86</td><td align="right" class='awrnc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,792</td><td align="right" class='awrc'>1.12</td><td align="right" class='awrc'>440</td><td align="right" class='awrc'>11,356</td><td align="right" class='awrc'>131,014</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>0.86</td><td align="right" class='awrc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,824</td><td align="right" class='awrnc'>1.14</td><td align="right" class='awrnc'>440</td><td align="right" class='awrnc'>11,356</td><td align="right" class='awrnc'>131,014</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>0.86</td><td align="right" class='awrnc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,856</td><td align="right" class='awrc'>1.16</td><td align="right" class='awrc'>440</td><td align="right" class='awrc'>11,356</td><td align="right" class='awrc'>131,014</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>0.86</td><td align="right" class='awrc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,888</td><td align="right" class='awrnc'>1.18</td><td align="right" class='awrnc'>440</td><td align="right" class='awrnc'>11,356</td><td align="right" class='awrnc'>131,014</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>0.86</td><td align="right" class='awrnc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,920</td><td align="right" class='awrc'>1.20</td><td align="right" class='awrc'>440</td><td align="right" class='awrc'>11,356</td><td align="right" class='awrc'>131,014</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>0.86</td><td align="right" class='awrc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,080</td><td align="right" class='awrnc'>1.30</td><td align="right" class='awrnc'>440</td><td align="right" class='awrnc'>11,356</td><td align="right" class='awrnc'>131,014</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>0.86</td><td align="right" class='awrnc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,240</td><td align="right" class='awrc'>1.40</td><td align="right" class='awrc'>440</td><td align="right" class='awrc'>11,356</td><td align="right" class='awrc'>131,014</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>0.86</td><td align="right" class='awrc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,400</td><td align="right" class='awrnc'>1.50</td><td align="right" class='awrnc'>440</td><td align="right" class='awrnc'>11,356</td><td align="right" class='awrnc'>131,014</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>0.86</td><td align="right" class='awrnc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,560</td><td align="right" class='awrc'>1.60</td><td align="right" class='awrc'>440</td><td align="right" class='awrc'>11,356</td><td align="right" class='awrc'>131,014</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>0.86</td><td align="right" class='awrc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,720</td><td align="right" class='awrnc'>1.70</td><td align="right" class='awrnc'>440</td><td align="right" class='awrnc'>11,356</td><td align="right" class='awrnc'>131,014</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>0.86</td><td align="right" class='awrnc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,880</td><td align="right" class='awrc'>1.80</td><td align="right" class='awrc'>440</td><td align="right" class='awrc'>11,356</td><td align="right" class='awrc'>131,014</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>0.86</td><td align="right" class='awrc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,040</td><td align="right" class='awrnc'>1.90</td><td align="right" class='awrnc'>440</td><td align="right" class='awrnc'>11,356</td><td align="right" class='awrnc'>131,014</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>0.86</td><td align="right" class='awrnc'>5,842</td></tr>
<tr><td align="right" scope="row" class='awrc'>3,200</td><td align="right" class='awrc'>2.00</td><td align="right" class='awrc'>440</td><td align="right" class='awrc'>11,356</td><td align="right" class='awrc'>131,014</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>0.86</td><td align="right" class='awrc'>5,842</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6900"></a>
<h3 class="awr">SGA Target Advisory</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA target advisory for different SGA target sizes. It displays SGA size factor, estimated DB time and estimated physical reads for different SGA target sizes."><tr><th class="awrbg" scope="col">SGA Target Size (M)</th><th class="awrbg" scope="col">SGA Size Factor</th><th class="awrbg" scope="col">Est DB Time (s)</th><th class="awrbg" scope="col">Est Physical Reads</th></tr>
<tr><td align="right" scope="row" class='awrc'>2,416</td><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>183,540</td><td align="right" class='awrc'>51,519,766</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,624</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>162,374</td><td align="right" class='awrnc'>49,683,891</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,832</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>155,290</td><td align="right" class='awrc'>47,292,985</td></tr>
<tr><td align="right" scope="row" class='awrnc'>6,040</td><td align="right" class='awrnc'>0.63</td><td align="right" class='awrnc'>152,556</td><td align="right" class='awrnc'>46,370,778</td></tr>
<tr><td align="right" scope="row" class='awrc'>7,248</td><td align="right" class='awrc'>0.75</td><td align="right" class='awrc'>147,909</td><td align="right" class='awrc'>44,799,611</td></tr>
<tr><td align="right" scope="row" class='awrnc'>8,456</td><td align="right" class='awrnc'>0.88</td><td align="right" class='awrnc'>143,871</td><td align="right" class='awrnc'>43,433,378</td></tr>
<tr><td align="right" scope="row" class='awrc'>9,664</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>141,675</td><td align="right" class='awrc'>42,694,759</td></tr>
<tr><td align="right" scope="row" class='awrnc'>10,872</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>138,671</td><td align="right" class='awrnc'>41,678,624</td></tr>
<tr><td align="right" scope="row" class='awrc'>12,080</td><td align="right" class='awrc'>1.25</td><td align="right" class='awrc'>135,611</td><td align="right" class='awrc'>40,645,411</td></tr>
<tr><td align="right" scope="row" class='awrnc'>13,288</td><td align="right" class='awrnc'>1.38</td><td align="right" class='awrnc'>134,223</td><td align="right" class='awrnc'>40,180,038</td></tr>
<tr><td align="right" scope="row" class='awrc'>14,496</td><td align="right" class='awrc'>1.50</td><td align="right" class='awrc'>131,644</td><td align="right" class='awrc'>39,309,065</td></tr>
<tr><td align="right" scope="row" class='awrnc'>15,704</td><td align="right" class='awrnc'>1.63</td><td align="right" class='awrnc'>129,307</td><td align="right" class='awrnc'>38,519,212</td></tr>
<tr><td align="right" scope="row" class='awrc'>16,912</td><td align="right" class='awrc'>1.75</td><td align="right" class='awrc'>128,244</td><td align="right" class='awrc'>38,160,576</td></tr>
<tr><td align="right" scope="row" class='awrnc'>18,120</td><td align="right" class='awrnc'>1.88</td><td align="right" class='awrnc'>128,244</td><td align="right" class='awrnc'>38,160,576</td></tr>
<tr><td align="right" scope="row" class='awrc'>19,328</td><td align="right" class='awrc'>2.00</td><td align="right" class='awrc'>128,244</td><td align="right" class='awrc'>38,160,576</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7100"></a>
<h3 class="awr">Streams Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5700"></a>
<h3 class="awr">Java Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="27"></a>
<h2 class="awr">
Wait Statistics


</h2>
Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
<ul>
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.

<li class="awr"><a class="awr" href="#2300">Buffer Wait Statistics</a></li>

<li class="awr"><a class="awr" href="#3000">Enqueue Activity</a></li>
Enter value for num_days: </ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2300"></a>
<h3 class="awr">Buffer Wait Statistics</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer wait statistics. Statistics include waits, total wait time and average time for each class of buffer wait."><tr><th class="awrbg" scope="col">Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Time (ms)</th></tr>
<tr><td scope="row" class='awrc'>data block</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>106</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#27">Back to Wait Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3000"></a>
<h3 class="awr">Enqueue Activity</h3>
<ul>
<li class="awr"> only enqueues with requests are shown	</li>
<li class="awr"> Enqueue stats gathered prior to 10g should not be compared with 10g data </li>
<li class="awr"> ordered by Wait Time desc, Waits desc, Requests desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays enqueue activity statistics. Requests, success gets, failed gets, waits, wait time and average wait time are displayed for each enqueue type."><tr><th class="awrbg" scope="col">Enqueue Type (Request Reason)</th><th class="awrbg" scope="col">Requests</th><th class="awrbg" scope="col">Succ Gets</th><th class="awrbg" scope="col">Failed Gets</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Wt Time (s)</th><th class="awrbg" scope="col">Av Wt Time(ms)</th></tr>
<tr><td scope="row" class='awrc'>RO-Multiple Object Reuse (fast object reuse)</td>
<td align="right" class='awrc'>850</td><td align="right" class='awrc'>850</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>172</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>85.74</td></tr>
<tr><td scope="row" class='awrnc'>CF-Controlfile Transaction</td>
<td align="right" class='awrnc'>1,562</td><td align="right" class='awrnc'>1,558</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>48</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>37.98</td></tr>
<tr><td scope="row" class='awrc'>TM-DML</td>
<td align="right" class='awrc'>37,024</td><td align="right" class='awrc'>37,023</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>385.50</td></tr>
<tr><td scope="row" class='awrnc'>PS-PX Process Reservation</td>
<td align="right" class='awrnc'>1,177</td><td align="right" class='awrnc'>1,177</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>218</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>TO-Temp Object</td>
<td align="right" class='awrc'>184</td><td align="right" class='awrc'>184</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.97</td></tr>
<tr><td scope="row" class='awrnc'>WF-AWR Flush</td>
<td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.85</td></tr>
<tr><td scope="row" class='awrc'>CO-KTUCLO Master Slave enq (master slave det)</td>
<td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.50</td></tr>
<tr><td scope="row" class='awrnc'>HW-Segment High Water Mark</td>
<td align="right" class='awrnc'>300</td><td align="right" class='awrnc'>300</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.83</td></tr>
<tr><td scope="row" class='awrc'>WT-AWR CDB-Wide Table Lock</td>
<td align="right" class='awrc'>18</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.25</td></tr>
<tr><td scope="row" class='awrnc'>FB-Format Block</td>
<td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.67</td></tr>
<tr><td scope="row" class='awrc'>RA-Real-Time ADDM Flood Control (RT ADDM flood control)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>TT-Tablespace</td>
<td align="right" class='awrnc'>207</td><td align="right" class='awrnc'>207</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>PE-Parameter</td>
<td align="right" class='awrc'>14</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>AF-Advisor Framework (task serialization)</td>
<td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>TD-KTF map table enqueue (KTF dump entries)</td>
<td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>TK-Auto Task Serialization (Auto Task Serialization)</td>
<td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>PG-Global Parameter</td>
<td align="right" class='awrc'>7</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>TX-Transaction</td>
<td align="right" class='awrnc'>36,946</td><td align="right" class='awrnc'>36,945</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JG-Job Scheduler1</td>
<td align="right" class='awrc'>2,541</td><td align="right" class='awrc'>2,541</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JG-Job Scheduler1 (queue lock)</td>
<td align="right" class='awrnc'>2,541</td><td align="right" class='awrnc'>2,541</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CU-Cursor</td>
<td align="right" class='awrc'>919</td><td align="right" class='awrc'>919</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DD-ASM Local Disk Group</td>
<td align="right" class='awrnc'>765</td><td align="right" class='awrnc'>765</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SJ-KTSJ Slave Task Cancel (Slave Task Cancel)</td>
<td align="right" class='awrc'>416</td><td align="right" class='awrc'>420</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>FP-File Object (global fob contention)</td>
<td align="right" class='awrnc'>274</td><td align="right" class='awrnc'>274</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JG-Job Scheduler1 (q mem clnup lck)</td>
<td align="right" class='awrc'>242</td><td align="right" class='awrc'>242</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SE-Session Migration</td>
<td align="right" class='awrnc'>204</td><td align="right" class='awrnc'>204</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>BU-Buddy Instance Context (recovery set construct)</td>
<td align="right" class='awrc'>198</td><td align="right" class='awrc'>198</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IT-In-Mem Temp Table Meta Creation</td>
<td align="right" class='awrnc'>168</td><td align="right" class='awrnc'>168</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DA-Instance DP Array (Slave Process Array)</td>
<td align="right" class='awrc'>167</td><td align="right" class='awrc'>167</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IS-Instance State</td>
<td align="right" class='awrnc'>87</td><td align="right" class='awrnc'>87</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TH-Threshold Chain (metric threshold evaluation)</td>
<td align="right" class='awrc'>10</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MR-Media Recovery</td>
<td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQ-Sequence Cache</td>
<td align="right" class='awrc'>5</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>RS-Reclaimable Space (write alert level)</td>
<td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PR-Process Startup</td>
<td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PV-KSV slave startup (syncstart)</td>
<td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AE-Edition Lock (lock)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PW-Buffer Cache PreWarm (flush prewarm buffers)</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>

Listing all Completed Snapshots
<tr><td scope="row" class='awrc'>RS-Reclaimable Space (read alert level)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SH-Active Session History Flushing</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TA-Instance Undo</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>XR-Quiesce / Force Logging (database force logging)</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DW-In memory Dispenser</td>
<td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#27">Back to Wait Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="28"></a>
<h2 class="awr">
Undo Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3300">Undo Segment Summary</a></li>
<li class="awr"><a class="awr" href="#3400">Undo Segment Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3300"></a>
<h3 class="awr">Undo Segment Summary</h3>
<ul>
<li class="awr"> Min/Max TR (mins) - Min and Max Tuned Retention (minutes) </li>
<li class="awr"> STO - Snapshot Too Old count,	OOS - Out of Space count </li>
<li class="awr"> Undo segment block stats: </li>
<li class="awr"> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed </li>
<li class="awr"> eS - expired	Stolen,   eR - expired	 Released,   eU - expired   reUsed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays undo segment summary. It displays undo tablespace number, number of undo blocks, number of transactions, max query length, etc."><tr><th class="awrbg" scope="col">Undo TS#</th><th class="awrbg" scope="col">Num Undo Blocks (K)</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concurcy</th><th class="awrbg" scope="col">Min/Max TR (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">	uS/uR/uU/    eS/eR/eU</th></tr>
<tr><td align="right" scope="row" class='awrc'>5</td><td align="right" class='awrc'>56.16</td><td align="right" class='awrc'>41,885</td><td align="right" class='awrc'>961</td><td align="right" class='awrc'>21</td><td class='awrc'>39.1/39.1</td><td class='awrc'>0/0</td><td class='awrc'>0/0/0/0/0/0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#28">Back to Undo Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3400"></a>
<h3 class="awr">Undo Segment Stats</h3>
<ul>
<li class="awr"> Most recent 35 Undostat rows, ordered by Time desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the 35 most recent Undostat rows."><tr><th class="awrbg" scope="col">End Time</th><th class="awrbg" scope="col">Num Undo Blocks</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concy</th><th class="awrbg" scope="col">Tun Ret (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">  uS/uR/uU/   eS/eR/eU</th></tr>
<tr><td scope="row" class='awrc'>08-Feb 17:42</td><td align="right" class='awrc'>56,156</td><td align="right" class='awrc'>41,885</td><td align="right" class='awrc'>961</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>39</td><td class='awrc'>0/0</td><td class='awrc'>0/0/0/0/0/0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#28">Back to Undo Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="29"></a>
<h2 class="awr">
Latch Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3500">Latch Activity</a></li>
<li class="awr"><a class="awr" href="#3600">Latch Sleep Breakdown</a></li>
<li class="awr"><a class="awr" href="#3700">Latch Miss Sources</a></li>
<li class="awr"><a class="awr" href="#7500">Mutex Sleep Summary</a></li>
<li class="awr"><a class="awr" href="#3800">Parent Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#3900">Child Latch Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3500"></a>
<h3 class="awr">Latch Activity</h3>
<ul>
<li class="awr"> &quot;Get Requests&quot;, &quot;Pct Get Miss&quot; and &quot;Avg Slps/Miss&quot; are statistics for	 willing-to-wait latch get requests </li>
<li class="awr"> &quot;NoWait Requests&quot;, &quot;Pct NoWait Miss&quot; are for no-wait latch get requests </li>
<li class="awr"> &quot;Pct Misses&quot; for both should be very close to 0.0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch statistics. Get requests, % get miss, wait time, noWait requests are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Get Miss</th><th class="awrbg" scope="col">Avg Slps /Miss</th><th class="awrbg" scope="col">Wait Time (s)</th><th class="awrbg" scope="col">NoWait Requests</th><th class="awrbg" scope="col">Pct NoWait Miss</th></tr>
<tr><td scope="row" class='awrc'>AQ Background: interrupt command latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>AQ Coord jobx_kwsbgsgn latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ Message drive state object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AQ Sharded master pool latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ deq hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM Keyed state latch</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM allocation</td><td align="right" class='awrc'>37,901</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM connection state latch</td><td align="right" class='awrnc'>5,925</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM db client latch</td><td align="right" class='awrc'>677</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map headers</td><td align="right" class='awrnc'>1,960</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM map load waiting list</td><td align="right" class='awrc'>555</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map operation freelist</td><td align="right" class='awrnc'>110</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM map operation hash table</td><td align="right" class='awrc'>4,922,357</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM network background latch</td><td align="right" class='awrnc'>5,206</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM network state latch</td><td align="right" class='awrc'>572</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM remote client latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AWR Alerted Metric Element list</td><td align="right" class='awrc'>5,508</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Autotask management</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Change Notification Hash table latch</td><td align="right" class='awrc'>256</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Column stats entry latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Consistent RBA</td><td align="right" class='awrc'>27,775</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DML lock allocation</td><td align="right" class='awrnc'>74,944</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Event Group Locks</td><td align="right" class='awrc'>179</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>FIB s.o chain latch</td><td align="right" class='awrnc'>562</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>FOB consolidated s.o list latch</td><td align="right" class='awrc'>562</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>File State Object Pool Parent Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCS logfile block</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCS logfile write queue</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Hang Manager wait event statistics</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7,165</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>I/O Staticstics latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM Stats Stripe Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM Stats main anchor latch</td><td align="right" class='awrnc'>374</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM access tracking extent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM activity tracking latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM Global dictionary latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM Global dictionary queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM Global dictionary rw latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM area sb latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM area scb latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM emb latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM seg hdr latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMFS defer write list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMXT hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC other latch</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC stats buffer allocation latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>In memory undo latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS Sh mem access</td><td align="right" class='awrc'>123</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS broadcast add buf latch</td><td align="right" class='awrnc'>139</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS broadcast drop buf latch</td><td align="right" class='awrc'>139</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS broadcast load blnc latch</td><td align="right" class='awrnc'>139</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS queue access latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS queue state obj latch</td><td align="right" class='awrnc'>5,124</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS slv state obj latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KCNIBR - invalid block range tree</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDCStatHash latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDFI Buffer Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDFI Hash Bucket Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDFI Hash Elem Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDMADO action list latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDMADO bll latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDMADO latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFC FX Hash Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFC Hash Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFCL LE Freelist</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS client latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS cluster latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS endpoint latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS node latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS process latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFK SGA Libload latch</td><td align="right" class='awrc'>4,448</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFMD SGA</td><td align="right" class='awrnc'>350</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KGNFS-NFS:SHM structure</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KGNFS-NFS:SVR LIST</td><td align="right" class='awrnc'>205</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC message pool KGH calls</td><td align="right" class='awrc'>1,582</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool free list</td><td align="right" class='awrnc'>76,191</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>469,558</td><td align="right" class='awrnc'>0.41</td></tr>
<tr><td scope="row" class='awrc'>KJC message pool pending avail list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJCT flow control latch</td><td align="right" class='awrnc'>1,795,863</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KMG MMAN ready and startup request latch</td><td align="right" class='awrc'>209</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KMG resize request state object freelist</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS OFS ctx level parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS OFS req layer parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS OFS sess layer parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS Receive and Send Queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS id table parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS ksfs_node latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFSD name cache parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSGL LS Segment latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSGL SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPC ASPC anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPC SGA allocation parent latch</td><td align="right" class='awrc'>94</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPCGSN Hash Table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPCGSN Namespace latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSK PDB IO STAT</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSRMA SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSRMF SGA anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSWL SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSXR hang analysis phase 1 latch</td><td align="right" class='awrnc'>507</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KSXR hang analysis phase 2 latch</td><td align="right" class='awrc'>197</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTF sga latch</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>251</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KTILM latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTU in-memory txn table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTURMA ODPSCN latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTURMA SGA allocation parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KWQMN job cache list latch</td><td align="right" class='awrc'>103</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Latch for NonceHistory</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Locator state objects pool parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Lost write change tracking</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Lsod array latch</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA asr alloc latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA heap latch</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA shared context latch</td><td align="right" class='awrnc'>1,951</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA shared context root latch</td><td align="right" class='awrc'>56</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MQL Tracking Latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Memory Management Latch</td><td align="right" class='awrc'>132</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>208</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #2</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #3</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #4</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Subscriber</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Message cache latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MinActiveScn Latch</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Mutex</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Mutex Stats</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Nologging Standby SCN Time Map cache</td><td align="right" class='awrnc'>203</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OS process</td><td align="right" class='awrc'>487</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>OS process allocation</td><td align="right" class='awrnc'>1,253</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OS process: request allocation</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PDB Hash Table Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PDB LRU structure</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PL/SQL warning settings</td><td align="right" class='awrnc'>175</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX hash array latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parent latch for dependency tracking</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Parent latch for query hash table access</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parent latch for segments scanning</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>QMT</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Real-time descriptor latch</td><td align="right" class='awrnc'>3,346</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Report Request stats latch</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Report Request struct latch</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Request holder compeltion list latch</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Retry Ht elm latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Retry bkt latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA IO buffer pool latch</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SGA Logging Bkt Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA Logging Log Latch</td><td align="right" class='awrnc'>2,885</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA blob parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA bucket locks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA heap locks</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA pool locks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SO private so latch</td><td align="right" class='awrc'>114</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SQL memory manager latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>204</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SQL memory manager workarea list latch</td><td align="right" class='awrc'>16,374</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SR Stats Stripe Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sched IM Job latch</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sched InMem Job Cache</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Shared B-Tree</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Streams Generic</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Subscriber Ht elm latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Testing</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Token Manager</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Txn Ht elm latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Txn bkt latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>UM object latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>WCR: sync</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write State Object Pool Parent Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>X$KSFQP</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>XDB NFS Security Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XDB unused session pool</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>XDB used session pool</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>active checkpoint queue latch</td><td align="right" class='awrc'>55,232</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>active service list</td><td align="right" class='awrnc'>4,438</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>794</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>archive destination</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>begin backup scn array</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>buffer pool</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>business card</td><td align="right" class='awrnc'>337</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cache buffer handles</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cache buffers chains</td><td align="right" class='awrnc'>12,487,191</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8,741,590</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>cache buffers lru chain</td><td align="right" class='awrc'>3,896,992</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,929,656</td><td align="right" class='awrc'>0.21</td></tr>
<tr><td scope="row" class='awrnc'>cache table scan latch</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>call allocation</td><td align="right" class='awrc'>2,123</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>change notification client cache latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>channel handle pool latch</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>channel operations parent latch</td><td align="right" class='awrnc'>3,778</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>checkpoint queue latch</td><td align="right" class='awrc'>2,097,604</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,706,233</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>client/application info</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>compile environment latch</td><td align="right" class='awrc'>175</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp handoff latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp pool latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp server hash latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp sga latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp srv type state latch</td><td align="right" class='awrnc'>613</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp srv type wait latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cr slave free list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cvmap freelist lock</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>deferred cleanup latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dispatcher info</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dml lock allocation</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>done queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dtp latch</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dummy allocation</td><td align="right" class='awrc'>368</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>eighth spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>eleventh spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enqueue freelist latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>22,754</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>enqueue hash chains</td><td align="right" class='awrc'>254,142</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enqueues</td><td align="right" class='awrnc'>96</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>error message lists</td><td align="right" class='awrc'>838</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fast space usage latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>fifteenth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>file cache latch</td><td align="right" class='awrnc'>193</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>flash file access latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>flashback copy</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>fourteenth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fourth Audit Vault latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc element</td><td align="right" class='awrc'>6,118,700</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5,186,649</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gc imc list</td><td align="right" class='awrnc'>48</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc xid list</td><td align="right" class='awrc'>86</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcr global ctx</td><td align="right" class='awrnc'>193</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity object freelist latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs commit scn state</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs nodemap pool</td><td align="right" class='awrc'>52,655</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs opaque info freelist</td><td align="right" class='awrnc'>86,219</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs partitioned table hash</td><td align="right" class='awrc'>4,202,311</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>166,667</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs pcm hashed value bucket hash</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remaster request queue</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs remastering latch</td><td align="right" class='awrnc'>14,265</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,838</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs resource freelist</td><td align="right" class='awrc'>773,071</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>285,087</td><td align="right" class='awrc'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource hash</td><td align="right" class='awrnc'>6,733,147</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.27</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>282</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs resource scan list</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource timerq list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs resource validate list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs shadows freelist</td><td align="right" class='awrnc'>494,738</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges cached resource lists</td><td align="right" class='awrc'>90,710</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>26,041</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ges deadlock list</td><td align="right" class='awrnc'>406</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges domain table</td><td align="right" class='awrc'>240,715</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges enqueue table freelist</td><td align="right" class='awrnc'>79,279</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges group table</td><td align="right" class='awrc'>243,056</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges process hash list</td><td align="right" class='awrnc'>2,679</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges process parent latch</td><td align="right" class='awrc'>486,023</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges process table freelist</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges remote lock freelist</td><td align="right" class='awrc'>850</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource hash list</td><td align="right" class='awrnc'>329,964</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7,484</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>ges resource scan list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges resource table freelist</td><td align="right" class='awrnc'>14,648</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges s-lock bitvec freelist</td><td align="right" class='awrc'>4,536</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges timeout list</td><td align="right" class='awrnc'>867</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>141</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges value block free list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>global tx hash mapping</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>granule from data transfer cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gws:Sharding global descriptor latch</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hash table Sql Plan Finding latch</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>268</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>hash table column usage latch</td><td align="right" class='awrnc'>140</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>28,614</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>hash table expression usage tracking latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>hash table sql contorl latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat check</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>278</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat structure management</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>324</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>imc buf hdl lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc cr clone buf</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc hash lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc sj lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc srchsp lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc-txn-wrk-lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory area latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory columnar segment hash table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory columnar ts extent map chunk latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory global pool latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>internal temp table object number allocation latch</td><td align="right" class='awrc'>477</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>interrupt manipulation</td><td align="right" class='awrnc'>856</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>intra txn parallel recovery</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>io pool granule list</td><td align="right" class='awrnc'>174</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>io pool granule metadata list</td><td align="right" class='awrc'>351</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>job workq parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>job_queue_processes parameter latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>k2q global data latch</td><td align="right" class='awrnc'>409</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>k2q lock allocation</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kKCN Cqn SGA</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kcb DW scan objtemp hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kcn buffer chains</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kdlx hb parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kgb parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kgnfs mount latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjbr roi instance map</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjci objects freelist latch</td><td align="right" class='awrc'>1,057</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjci process context latch</td><td align="right" class='awrnc'>719</td><td align="right" class='awrnc'>0.70</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>60,300</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>kjci process list latch</td><td align="right" class='awrc'>483</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjci request sequence latch</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjcipctx state object freelist latch</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjoedcso state object freelist latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjoeq omni enqueue hash bucket latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjoer owner hash bucket</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjpm my inst data</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsc Request obj freelist latch</td><td align="right" class='awrnc'>46</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsc Ring Buffer obj freelist latch</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsc protect control request queue</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6,133</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>kjsc protect warm up context</td><td align="right" class='awrc'>155</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsca protect pkey hash table bucket</td><td align="right" class='awrnc'>6,134</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsca protect service hash table bucket</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjscpss state object freelist latch</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kokc descriptor allocation latch</td><td align="right" class='awrc'>590</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kpoxft latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>krso process</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksevn object root latch</td><td align="right" class='awrnc'>204</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksfv messages</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksi resource reuse count</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksim group membership cache</td><td align="right" class='awrc'>2,563</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksim membership request latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>272</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ksns object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kss move lock</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksuosstats global area</td><td align="right" class='awrc'>85</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>234</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksutcpistat latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksv allocation latch</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksv class latch</td><td align="right" class='awrnc'>17,833</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksv msg queue latch</td><td align="right" class='awrc'>683</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>682</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksxp shared latch</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksxp so latch</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksz_so allocation latch</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktfbn latch</td><td align="right" class='awrc'>131</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg jrnls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg lookuptable level 1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg lookuptable level 2</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg space</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg stages</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg worklink</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm global data</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm prv jrnls</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktmpj HT ls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwqbsn:qsga</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwslbmdl: metadata latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwslbql: queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwslbutl: uncommitted txn latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsptQcachLt: queue cache latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsptTrncTsksLt: trunc task latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsptjobAdPtLt: AdPt list latch</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsslLat: skiplist latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kxfxscanrate_latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lgwr LWN SCN</td><td align="right" class='awrnc'>28,018</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>list of block allocation</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>loader state object freelist</td><td align="right" class='awrnc'>106</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lob segment dispenser latch</td><td align="right" class='awrc'>77</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lob segment hash table latch</td><td align="right" class='awrnc'>75</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lob segment query latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lock DBA buffer during media recovery</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log write info</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28,348</td><td align="right" class='awrc'>2.85</td></tr>
<tr><td scope="row" class='awrnc'>log write worker phase</td><td align="right" class='awrnc'>6,087</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logical standby cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logminer context allocation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logminer local</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logminer work area</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>longop free list parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>managed standby</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>message bitmap latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>message pool operations parent latch</td><td align="right" class='awrnc'>1,280</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>messages</td><td align="right" class='awrc'>256,069</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>msg queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>multiblock read objects</td><td align="right" class='awrc'>292</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service memory objects</td><td align="right" class='awrnc'>226</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service namespace bucket</td><td align="right" class='awrc'>4,139</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service pending queue</td><td align="right" class='awrnc'>162</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service request queue</td><td align="right" class='awrc'>6,538</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ncodef allocation latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ninth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>object queue header freelist</td><td align="right" class='awrnc'>2,785</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>537,729</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>object queue header operation</td><td align="right" class='awrc'>4,466,853</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>551,385</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>object queue memory</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>object stats modification</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parallel query alloc buffer</td><td align="right" class='awrnc'>2,779</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>90</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>parallel query stats</td><td align="right" class='awrc'>617</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parallel txn reco latch</td><td align="right" class='awrnc'>636</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>parameter table management</td><td align="right" class='awrc'>1,878</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pdb enqueue hash chains</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>peshm</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pesom_free_list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pesom_hash_node</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pkey global statistics</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pmon dead latch</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>post/wait queue</td><td align="right" class='awrnc'>40,865</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>41,023</td><td align="right" class='awrnc'>0.12</td></tr>
<tr><td scope="row" class='awrc'>process allocation</td><td align="right" class='awrc'>3,044</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process group creation</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process memory detail</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process pkey statistics list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process queue</td><td align="right" class='awrc'>1,188</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process queue reference</td><td align="right" class='awrnc'>33,495</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3,548</td><td align="right" class='awrnc'>4.48</td></tr>
<tr><td scope="row" class='awrc'>qmn task queue latch</td><td align="right" class='awrc'>91</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>quarantine object</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>query server freelists</td><td align="right" class='awrc'>1,519</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>query server process</td><td align="right" class='awrnc'>441</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>queued dump request</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>queuing load statistics</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>read-moslty lock queue under pkey</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>recovery domain hash bucket</td><td align="right" class='awrnc'>2,268</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>redo allocation</td><td align="right" class='awrc'>106,009</td><td align="right" class='awrc'>1.59</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,234,448</td><td align="right" class='awrc'>0.80</td></tr>
<tr><td scope="row" class='awrnc'>redo copy</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,237,107</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>redo transport task</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>redo writing</td><td align="right" class='awrnc'>158,634</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>remote tool request latch</td><td align="right" class='awrc'>192</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr group change latch</td><td align="right" class='awrnc'>450</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:active threads</td><td align="right" class='awrc'>585</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6,031</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:actses change group</td><td align="right" class='awrnc'>231</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:actses change state</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:free threads list</td><td align="right" class='awrnc'>469</td><td align="right" class='awrnc'>0.21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:plan CPU method</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:plan change alloc latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:plan change latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:resource group CPU method</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:schema config</td><td align="right" class='awrc'>148</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:session queuing</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>row cache objects</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>rt rmv count latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>305</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>second Audit Vault latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>segmented array pool</td><td align="right" class='awrnc'>562</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sequence cache</td><td align="right" class='awrc'>152</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>service drain list</td><td align="right" class='awrnc'>611</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session allocation</td><td align="right" class='awrc'>19,795</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>19,344</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>session idle bit</td><td align="right" class='awrnc'>40,756</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session state list latch</td><td align="right" class='awrnc'>484</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session statistics</td><td align="right" class='awrc'>368</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session switching</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session timer</td><td align="right" class='awrc'>204</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>seventh spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sga hash table parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shard latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shardgroup list latch</td><td align="right" class='awrc'>800</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>126,931</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,564</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>shared pool sim alloc</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shared pool simulator</td><td align="right" class='awrnc'>9,954</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shared server configuration</td><td align="right" class='awrc'>205</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sim partition latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>simulator hash latch</td><td align="right" class='awrc'>310,037</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>simulator lru latch</td><td align="right" class='awrnc'>406</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>170,560</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>sixth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sort extent pool</td><td align="right" class='awrnc'>343</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>space background task latch</td><td align="right" class='awrc'>1,530</td><td align="right" class='awrc'>48.17</td><td align="right" class='awrc'>0.80</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>392</td><td align="right" class='awrc'>5.36</td></tr>
<tr><td scope="row" class='awrnc'>state object free list</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>statistics aggregation</td><td align="right" class='awrc'>145</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>subscriber Ht bkt</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>tablespace key chain</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>temp lob duration state obj allocation</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>temporary table state object allocation</td><td align="right" class='awrc'>154</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>tenth spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test excl. parent l0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test excl. parent2 l0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test excl. parent2 lmid cln</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test mixed exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test mode exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test open exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test pdb exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test shared parent2 lmid</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>thirteenth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>threshold alerts latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>transaction allocation</td><td align="right" class='awrc'>356</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twelfth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-fifth spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-first spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-fourth spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-second spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-third spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>undo global data</td><td align="right" class='awrnc'>163,631</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>virtual circuit buffers</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>virtual circuit holder</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>virtual circuit queues</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3600"></a>
<h3 class="awr">Latch Sleep Breakdown</h3>
<ul>
<li class="awr"> ordered by misses desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch sleep statistics. Get requests, misses, sleeps, spin gets are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Misses</th><th class="awrbg" scope="col">Sleeps</th><th class="awrbg" scope="col">Spin Gets</th></tr>
<tr><td scope="row" class='awrc'>KJCT flow control latch</td><td align="right" class='awrc'>1,795,863</td><td align="right" class='awrc'>2,596</td><td align="right" class='awrc'>106</td><td align="right" class='awrc'>2,498</td></tr>
<tr><td scope="row" class='awrnc'>redo allocation</td><td align="right" class='awrnc'>106,009</td><td align="right" class='awrnc'>1,682</td><td align="right" class='awrnc'>176</td><td align="right" class='awrnc'>1,514</td></tr>
<tr><td scope="row" class='awrc'>cache buffers lru chain</td><td align="right" class='awrc'>3,896,992</td><td align="right" class='awrc'>1,486</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>1,430</td></tr>
<tr><td scope="row" class='awrnc'>gc element</td><td align="right" class='awrnc'>6,118,700</td><td align="right" class='awrnc'>994</td><td align="right" class='awrnc'>67</td><td align="right" class='awrnc'>932</td></tr>
<tr><td scope="row" class='awrc'>gcs resource hash</td><td align="right" class='awrc'>6,733,147</td><td align="right" class='awrc'>895</td><td align="right" class='awrc'>246</td><td align="right" class='awrc'>662</td></tr>
<tr><td scope="row" class='awrnc'>space background task latch</td><td align="right" class='awrnc'>1,530</td><td align="right" class='awrnc'>737</td><td align="right" class='awrnc'>588</td><td align="right" class='awrnc'>207</td></tr>
<tr><td scope="row" class='awrc'>gcs resource freelist</td><td align="right" class='awrc'>773,071</td><td align="right" class='awrc'>270</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>237</td></tr>
<tr><td scope="row" class='awrnc'>enqueue hash chains</td><td align="right" class='awrnc'>254,142</td><td align="right" class='awrnc'>107</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>84</td></tr>
<tr><td scope="row" class='awrc'>object queue header operation</td><td align="right" class='awrc'>4,466,853</td><td align="right" class='awrc'>93</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>89</td></tr>
<tr><td scope="row" class='awrnc'>cache buffers chains</td><td align="right" class='awrnc'>12,487,191</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>79</td></tr>
<tr><td scope="row" class='awrc'>checkpoint queue latch</td><td align="right" class='awrc'>2,097,604</td><td align="right" class='awrc'>78</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>68</td></tr>
<tr><td scope="row" class='awrnc'>ASM map operation hash table</td><td align="right" class='awrnc'>4,922,357</td><td align="right" class='awrnc'>75</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>69</td></tr>
<tr><td scope="row" class='awrc'>messages</td><td align="right" class='awrc'>256,069</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>59</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool free list</td><td align="right" class='awrnc'>76,191</td><td align="right" class='awrnc'>59</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>52</td></tr>
<tr><td scope="row" class='awrc'>redo writing</td><td align="right" class='awrc'>158,634</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>27</td></tr>
<tr><td scope="row" class='awrnc'>lgwr LWN SCN</td><td align="right" class='awrnc'>28,018</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>21</td></tr>
<tr><td scope="row" class='awrc'>undo global data</td><td align="right" class='awrc'>163,631</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>18</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>126,931</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>17</td></tr>
<tr><td scope="row" class='awrc'>ges enqueue table freelist</td><td align="right" class='awrc'>79,279</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>16</td></tr>
<tr><td scope="row" class='awrnc'>ges resource hash list</td><td align="right" class='awrnc'>329,964</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>10</td></tr>
<tr><td scope="row" class='awrc'>Consistent RBA</td><td align="right" class='awrc'>27,775</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>9</td></tr>
<tr><td scope="row" class='awrnc'>ges process parent latch</td><td align="right" class='awrnc'>486,023</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>ksv class latch</td><td align="right" class='awrc'>17,833</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3700"></a>
<h3 class="awr">Latch Miss Sources</h3>
<ul>
<li class="awr"> only latches with sleeps are shown </li>
<li class="awr"> ordered by name, sleeps desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch miss sources. Place where latch was requested, no-wait misses, sleeps, waiter sleeps are displayed for each missed latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Where</th><th class="awrbg" scope="col">NoWait Misses</th><th class="awrbg" scope="col">   Sleeps</th><th class="awrbg" scope="col">Waiter Sleeps</th></tr>
<tr><td class='awrc'>ASM map operation hash table</td><td class='awrc'>kffmTranslate</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>5</td></tr>
<tr><td class='awrnc'>ASM map operation hash table</td><td class='awrnc'>kffmDoDone_1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>KJC message pool free list</td><td class='awrc'>kjcspfmbq: free vector of msg buffers</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>KJC message pool free list</td><td class='awrnc'>kjcsmpav: allocate a msg buffer</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>7</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjcts_sedeqv3: dequeue a vector of msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>12</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjctcsnd: send normal message</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>39</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjcts_sqenq: queue a message</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>42</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjcts_adjtkt: adjust send tickets</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>5</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjctr_updatetkt: update ticket info</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjcts_sqenq2: queue a message</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>5</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbbic2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbbic1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbzwb</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers lru chain</td><td class='awrnc'>kcbzgb_2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>10</td></tr>
<tr><td class='awrc'>cache buffers lru chain</td><td class='awrc'>kcbzgws</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers lru chain</td><td class='awrnc'>kcbw_activate_granule</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>cache buffers lru chain</td><td class='awrc'>kcbbwlru</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>cache buffers lru chain</td><td class='awrnc'>kcbbxsv: move to being written</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers lru chain</td><td class='awrc'>kcbw_quiesce_granule</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>5</td></tr>
<tr><td class='awrnc'>checkpoint queue latch</td><td class='awrnc'>kcbklbc_cql</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclnfndnewm</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>16</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclfwrite1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclpdcl</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>2</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclplz</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>KCLUNLNK</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>15</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kcl_get_le_latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclrwrite</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclulb</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>11</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclchkping</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclplz_1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>gcs remastering latch</td><td class='awrc'>kjfcdrmrfg beginning</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gcs resource freelist</td><td class='awrnc'>kjbralc: check freelist nowait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource freelist</td><td class='awrc'>kjbralc add resource</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>22</td></tr>
<tr><td class='awrnc'>gcs resource freelist</td><td class='awrnc'>kjbrralc: reserve allocation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td></tr>
<tr><td class='awrc'>gcs resource freelist</td><td class='awrc'>kjbrfr_bg2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>14</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kclfwrite1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>137</td><td align="right" class='awrnc'>25</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbopen</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>52</td><td align="right" class='awrc'>33</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbrrcfwst</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kclpdc</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>95</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbassume</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>11</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbmpopen</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>10</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kclrwrite</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>6</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbcropen</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjblocalobj_nolock</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>5</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbmpflushpi</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>18</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbrrcres_99</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbclose_remaster</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>7</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjblpast</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbmpclose</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>17</td></tr>
<tr><td class='awrnc'>ges enqueue table freelist</td><td class='awrnc'>kjlalc: lock allocation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>2</td></tr>
<tr><td class='awrc'>ges process parent latch</td><td class='awrc'>kjata_fg</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>ges resource hash list</td><td class='awrnc'>kjakcai: search for resp by resname</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges resource hash list</td><td class='awrc'>kjlmfnd: search for lockp by rename and inst id</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>ges resource hash list</td><td class='awrnc'>kjrmas1: lookup master node</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ksv class latch</td><td class='awrc'>ksvclsl: checkpool</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>messages</td><td class='awrnc'>ksarcv</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>mostly latch-free SCN</td><td class='awrc'>kcs024</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>mostly latch-free SCN</td><td class='awrnc'>kcslcu3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>7</td></tr>
<tr><td class='awrc'>mostly latch-free SCN</td><td class='awrc'>kcsnew_scn_rba</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>object queue header operation</td><td class='awrnc'>kcbo_unlink_q</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>object queue header operation</td><td class='awrc'>kcbo_switch_cq</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_redo_gen: redo allocation 1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>160</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>redo allocation</td><td class='awrc'>kcrfw_redo_gen: redo allocation 3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>109</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_post: more space</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>32</td></tr>
<tr><td class='awrc'>redo allocation</td><td class='awrc'>kcrfw_redo_write: before write</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>35</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_redo_gen: redo allocation 2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>redo writing</td><td class='awrc'>kcrfw_post: rba scn pair</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>redo writing</td><td class='awrnc'>kcrfwcr</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_grab_task</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>431</td><td align="right" class='awrc'>569</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_detach_task</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>102</td><td align="right" class='awrnc'>19</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_smco_purgeexpired</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_smco_movetasks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>undo global data</td><td class='awrc'>ktusmupst: KSLBEGIN</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>undo global data</td><td class='awrnc'>ktudba: KSLBEGIN</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>ksqcmi: if lk mode not requested</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqgtl3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>9</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>ksqrcl</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>14</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>kghalo</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>kghfrunp: alloc: wait</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqcmi: if lk mode requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7500"></a>
<h3 class="awr">Mutex Sleep Summary</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3800"></a>
<h3 class="awr">Parent Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3900"></a>
<h3 class="awr">Child Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="30"></a>
<h2 class="awr">
Segment Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4000">Segments by Logical Reads</a></li>
<li class="awr"><a class="awr" href="#4100">Segments by Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4104">Segments by Physical Read Requests</a></li>
<li class="awr"><a class="awr" href="#4108">Segments by UnOptimized Reads</a></li>
<li class="awr"><a class="awr" href="#4106">Segments by Optimized Reads</a></li>
<li class="awr"><a class="awr" href="#4110">Segments by Direct Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4120">Segments by Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4124">Segments by Physical Write Requests</a></li>
<li class="awr"><a class="awr" href="#4130">Segments by Direct Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4140">Segments by Table Scans</a></li>
<li class="awr"><a class="awr" href="#4150">Segments by DB Blocks Changes</a></li>
<li class="awr"><a class="awr" href="#4200">Segments by Row Lock Waits</a></li>
<li class="awr"><a class="awr" href="#4300">Segments by ITL Waits</a></li>
<li class="awr"><a class="awr" href="#4400">Segments by Buffer Busy Waits</a></li>
<li class="awr"><a class="awr" href="#4450">Segments by Global Cache Buffer Busy</a></li>
<li class="awr"><a class="awr" href="#4500">Segments by CR Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4600">Segments by Current Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4605">Segments by Global Cache Remote Grants</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4000"></a>
<h3 class="awr">Segments by Logical Reads</h3>
<ul>
<li class="awr">Total Logical Reads:	   1,534,097</li>
<li class="awr">Captured Segments account for	81.3% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by logical reads. Owner, tablespace name, object type, logical read, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER9</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73439</td><td align="right" class='awrc'>73445</td><td align="right" class='awrc'>72,480</td><td align="right" class='awrc'>4.72</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>69,392</td><td align="right" class='awrnc'>4.52</td></tr>
<tr><td class='awrc'>USER18</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73492</td><td align="right" class='awrc'>73497</td><td align="right" class='awrc'>66,128</td><td align="right" class='awrc'>4.31</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>65,824</td><td align="right" class='awrnc'>4.29</td></tr>
<tr><td class='awrc'>USER19</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73485</td><td align="right" class='awrc'>73498</td><td align="right" class='awrc'>65,664</td><td align="right" class='awrc'>4.28</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4100"></a>
<h3 class="awr">Segments by Physical Reads</h3>
<ul>
<li class="awr">Total Physical Reads:	    1,094,434</li>
<li class="awr">Captured Segments account for	98.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical reads. Owner, tablespace name, object type, physical reads, etc. are displayed for each segment "><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	 Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER9</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73439</td><td align="right" class='awrc'>73445</td><td align="right" class='awrc'>69,595</td><td align="right" class='awrc'>6.36</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>66,689</td><td align="right" class='awrnc'>6.09</td></tr>
<tr><td class='awrc'>USER18</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73492</td><td align="right" class='awrc'>73497</td><td align="right" class='awrc'>63,397</td><td align="right" class='awrc'>5.79</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>62,981</td><td align="right" class='awrnc'>5.75</td></tr>
<tr><td class='awrc'>USER21</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73503</td><td align="right" class='awrc'>73505</td><td align="right" class='awrc'>62,893</td><td align="right" class='awrc'>5.75</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4104"></a>
<h3 class="awr">Segments by Physical Read Requests</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    1,093,641</li>
<li class="awr">Captured Segments account for	98.5% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical read requests. Owner, tablespace name, object type, physical read requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Read Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER9</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73439</td><td align="right" class='awrc'>73445</td><td align="right" class='awrc'>69,595</td><td align="right" class='awrc'>6.36</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>66,689</td><td align="right" class='awrnc'>6.10</td></tr>
<tr><td class='awrc'>USER18</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73492</td><td align="right" class='awrc'>73497</td><td align="right" class='awrc'>63,397</td><td align="right" class='awrc'>5.80</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>62,981</td><td align="right" class='awrnc'>5.76</td></tr>
<tr><td class='awrc'>USER21</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73503</td><td align="right" class='awrc'>73505</td><td align="right" class='awrc'>62,893</td><td align="right" class='awrc'>5.75</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4108"></a>
<h3 class="awr">Segments by UnOptimized Reads</h3>
<ul>
<li class="awr">Total UnOptimized Read Requests:       1,093,641</li>
<li class="awr">Captured Segments account for	98.5% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by unoptimized reads. Owner, tablespace name, object type, unoptimized reads, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">UnOptimized Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER9</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73439</td><td align="right" class='awrc'>73445</td><td align="right" class='awrc'>69,595</td><td align="right" class='awrc'>6.36</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>66,689</td><td align="right" class='awrnc'>6.10</td></tr>
<tr><td class='awrc'>USER18</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73492</td><td align="right" class='awrc'>73497</td><td align="right" class='awrc'>63,397</td><td align="right" class='awrc'>5.80</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>62,981</td><td align="right" class='awrnc'>5.76</td></tr>
<tr><td class='awrc'>USER21</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73503</td><td align="right" class='awrc'>73505</td><td align="right" class='awrc'>62,893</td><td align="right" class='awrc'>5.75</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4106"></a>
<h3 class="awr">Segments by Optimized Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4110"></a>
<h3 class="awr">Segments by Direct Physical Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4120"></a>
<h3 class="awr">Segments by Physical Writes</h3>
<ul>
<li class="awr">Total Physical Writes:	       750,663</li>
<li class="awr">Captured Segments account for	96.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical writes. Owner, tablespace name, object type, physical writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>55,879</td><td align="right" class='awrc'>7.44</td></tr>
<tr><td class='awrnc'>USER9</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73439</td><td align="right" class='awrnc'>73445</td><td align="right" class='awrnc'>44,377</td><td align="right" class='awrnc'>5.91</td></tr>
<tr><td class='awrc'>USER7</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73433</td><td align="right" class='awrc'>73436</td><td align="right" class='awrc'>43,328</td><td align="right" class='awrc'>5.77</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>41,838</td><td align="right" class='awrnc'>5.57</td></tr>
<tr><td class='awrc'>USER13</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73458</td><td align="right" class='awrc'>73466</td><td align="right" class='awrc'>41,198</td><td align="right" class='awrc'>5.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4124"></a>
<h3 class="awr">Segments by Physical Write Requests</h3>
<ul>
<li class="awr">Total Physical Write Requests:	       695,441</li>
<li class="awr">Captured Segments account for	99.9% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical write requests. Owner, tablespace name, object type, physical write requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Write Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>55,757</td><td align="right" class='awrc'>8.02</td></tr>
<tr><td class='awrnc'>USER9</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73439</td><td align="right" class='awrnc'>73445</td><td align="right" class='awrnc'>42,170</td><td align="right" class='awrnc'>6.06</td></tr>
<tr><td class='awrc'>USER7</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73433</td><td align="right" class='awrc'>73436</td><td align="right" class='awrc'>41,404</td><td align="right" class='awrc'>5.95</td></tr>
<tr><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>40,019</td><td align="right" class='awrnc'>5.75</td></tr>
<tr><td class='awrc'>USER13</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73458</td><td align="right" class='awrc'>73466</td><td align="right" class='awrc'>39,414</td><td align="right" class='awrc'>5.67</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4130"></a>
<h3 class="awr">Segments by Direct Physical Writes</h3>
<ul>
<li class="awr">Total Direct Physical Writes:		  909</li>
<li class="awr">Captured Segments account for	 8.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by direct physical writes. Owner, tablespace name, object type, direct writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Direct Writes</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_ACTIVE_SESSION_HISTORY</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_79</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>74079</td><td align="right" class='awrc'>74079</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>6.71</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>SYS_LOB0000007451C00009$$</td><td class='awrnc'>SYS_LOB_P256</td><td class='awrnc'>LOB PARTITION</td><td align="right" class='awrnc'>73950</td><td align="right" class='awrnc'>73950</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>1.87</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4140"></a>
<h3 class="awr">Segments by Table Scans</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4150"></a>
<h3 class="awr">Segments by DB Blocks Changes</h3>
<ul>
<li class="awr"> % of Capture shows % of DB Block Changes for each top segment compared  </li>
<li class="awr"> with total DB Block Changes for all segments captured by the Snapshot </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by DB blocks changes. Owner, tablespace name, object type, db block changes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">DB Block Changes</th><th class="awrbg" scope="col">% of Capture</th></tr>
<tr><td class='awrc'>USER9</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73439</td><td align="right" class='awrc'>73445</td><td align="right" class='awrc'>72,464</td><td align="right" class='awrc'>6.42</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>69,376</td><td align="right" class='awrnc'>6.15</td></tr>
<tr><td class='awrc'>USER18</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73492</td><td align="right" class='awrc'>73497</td><td align="right" class='awrc'>66,096</td><td align="right" class='awrc'>5.86</td></tr>
<tr><td class='awrnc'>USER13</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73458</td><td align="right" class='awrnc'>73466</td><td align="right" class='awrnc'>65,808</td><td align="right" class='awrnc'>5.83</td></tr>
<tr><td class='awrc'>USER19</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73485</td><td align="right" class='awrc'>73498</td><td align="right" class='awrc'>65,680</td><td align="right" class='awrc'>5.82</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4200"></a>
<h3 class="awr">Segments by Row Lock Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4300"></a>
<h3 class="awr">Segments by ITL Waits</h3>

<p />
		  No data exists for this section of the report.
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
<p />
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4400"></a>
<h3 class="awr">Segments by Buffer Busy Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4450"></a>
<h3 class="awr">Segments by Global Cache Buffer Busy</h3>
<ul>
<li class="awr"> % of Capture shows % of GC Buffer Busy for each top segment compared  </li>
<li class="awr"> with GC Buffer Busy for all segments captured by the Snapshot </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by global cache buffer busy waits. Owner, tablespace name, object type, GC buffer busy waits, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">GC Buffer Busy</th><th class="awrbg" scope="col">% of Capture</th></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSTEM</td>
		    13	06 Feb 2020 07:00    1
		    14	06 Feb 2020 08:00    1
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
		    19	06 Feb 2020 13:00    1
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
		    24	06 Feb 2020 15:55    1
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1
		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
		    38	07 Feb 2020 04:00    1
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1
<td scope="row" class='awrc'>I_HH_OBJ#_INTCOL#</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>70</td><td align="right" class='awrc'>70</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4500"></a>
<h3 class="awr">Segments by CR Blocks Received</h3>
<ul>
<li class="awr">Total CR Blocks Received:	      463</li>
<li class="awr">Captured Segments account for	24.0% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by CR blocks received. Owner, tablespace name, object type, CR blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">CR    Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_PARAMETER_PK</td><td class='awrc'>WRH$_PARAMETER_3393773525_79</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>74065</td><td align="right" class='awrc'>74065</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>4.10</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td>
<td scope="row" class='awrnc'>WRH$_PARAMETER</td><td class='awrnc'>WRH$_PARAMETER_3393773525_79</td><td class='awrnc'>TABLE PARTITION</td><td align="right" class='awrnc'>74063</td><td align="right" class='awrnc'>74063</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>2.59</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_SYSTEM_EVENT</td><td class='awrc'>WRH$_SYSTEM_EVENT_3393773525_79</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>74031</td><td align="right" class='awrc'>74031</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>2.38</td></tr>
<tr><td class='awrnc'>SYS</td><td class='awrnc'>SYSTEM</td>
<td scope="row" class='awrnc'>I_HH_OBJ#_INTCOL#</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>70</td><td align="right" class='awrnc'>70</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>1.94</td></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
<td scope="row" class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_PK</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_79</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>74081</td><td align="right" class='awrc'>74081</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>1.73</td></tr>
		    45	07 Feb 2020 11:00    1
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
</table><p />
		    50	08 Feb 2020 08:13    1
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
		    55	08 Feb 2020 08:48    1
<hr align="left" width="20%" /><p />
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4600"></a>
<h3 class="awr">Segments by Current Blocks Received</h3>
<ul>
<li class="awr">Total Current Blocks Received:		31,218</li>
<li class="awr">Captured Segments account for	81.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by current blocks received. Owner, tablespace name, object type, Current blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Current Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER15</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>2,869</td><td align="right" class='awrc'>9.19</td></tr>
<tr><td class='awrnc'>USER19</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73485</td><td align="right" class='awrnc'>73498</td><td align="right" class='awrnc'>2,751</td><td align="right" class='awrnc'>8.81</td></tr>
<tr><td class='awrc'>USER31</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73552</td><td align="right" class='awrc'>73557</td><td align="right" class='awrc'>1,338</td><td align="right" class='awrc'>4.29</td></tr>
<tr><td class='awrnc'>USER30</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73561</td><td align="right" class='awrnc'>73561</td><td align="right" class='awrnc'>1,319</td><td align="right" class='awrnc'>4.23</td></tr>
<tr><td class='awrc'>USER19</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73500</td><td align="right" class='awrc'>73500</td><td align="right" class='awrc'>1,269</td><td align="right" class='awrc'>4.06</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4605"></a>
------------ ---------- ------------------ ----------

P30DB		    57	08 Feb 2020 09:00    1
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
<h3 class="awr">Segments by Global Cache Remote Grants</h3>
		    60	08 Feb 2020 09:17    1
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
		    63	08 Feb 2020 09:43    1
		    64	08 Feb 2020 09:53    1
		    65	08 Feb 2020 10:03    1
		    66	08 Feb 2020 10:08    1
		    67	08 Feb 2020 10:18    1
		    68	08 Feb 2020 10:27    1
<ul>
		    69	08 Feb 2020 10:37    1
<li class="awr">Total Global Cache Remote Grants:	  779,624</li>
<li class="awr">Captured Segments account for	98.5% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by gc remote grants. Owner, tablespace name, object type, gc remote grants, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">GC Remote Grants</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER12</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>62,321</td><td align="right" class='awrc'>7.99</td></tr>
<tr><td class='awrnc'>USER30</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73550</td><td align="right" class='awrnc'>73554</td><td align="right" class='awrnc'>62,103</td><td align="right" class='awrnc'>7.97</td></tr>
<tr><td class='awrc'>USER1</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>61,924</td><td align="right" class='awrc'>7.94</td></tr>
<tr><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>56,891</td><td align="right" class='awrnc'>7.30</td></tr>
<tr><td class='awrc'>USER24</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73520</td><td align="right" class='awrc'>73529</td><td align="right" class='awrc'>56,844</td><td align="right" class='awrc'>7.29</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="31"></a>
<h2 class="awr">
Dictionary Cache Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4700">Dictionary Cache Stats</a></li>
<li class="awr"><a class="awr" href="#4800">Dictionary Cache Stats (RAC)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4700"></a>
<h3 class="awr">Dictionary Cache Stats</h3>
<ul>
<li class="awr"> &quot;Pct Misses&quot;  should be very low (&lt; 2% in most cases) </li>
<li class="awr"> &quot;Final Usage&quot; is the number of cache entries being used</li>
</ul>
<table border="0" class="tdiff" summary="This table displays dictionary cache statistics. Get requests, % misses, scan requests, final usage, etc. are displayed for each cache"><tr><th class="awrbg" scope="col">Cache</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Scan Reqs</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Mod Reqs</th><th class="awrbg" scope="col">Final Usage</th></tr>
<tr><td scope="row" class='awrc'>dc_awr_control</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>dc_global_oids</td><td align="right" class='awrnc'>12,319</td><td align="right" class='awrnc'>0.89</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>82</td></tr>
<tr><td scope="row" class='awrc'>dc_histogram_data</td><td align="right" class='awrc'>17,800</td><td align="right" class='awrc'>12.60</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,644</td></tr>
<tr><td scope="row" class='awrnc'>dc_histogram_defs</td><td align="right" class='awrnc'>18,110</td><td align="right" class='awrnc'>15.43</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>363</td><td align="right" class='awrnc'>2,364</td></tr>
<tr><td scope="row" class='awrc'>dc_object_grants</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>dc_objects</td><td align="right" class='awrnc'>23,737</td><td align="right" class='awrnc'>3.06</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>184</td><td align="right" class='awrnc'>876</td></tr>
<tr><td scope="row" class='awrc'>dc_props</td><td align="right" class='awrc'>494</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>dc_rollback_segments</td><td align="right" class='awrnc'>958</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>320</td></tr>
<tr><td scope="row" class='awrc'>dc_segments</td><td align="right" class='awrc'>1,027</td><td align="right" class='awrc'>44.79</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>351</td></tr>
<tr><td scope="row" class='awrnc'>dc_sequences</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>42.86</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>1</td></tr>
<tr><td scope="row" class='awrc'>dc_tablespaces</td><td align="right" class='awrc'>983</td><td align="right" class='awrc'>0.81</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td></tr>
<tr><td scope="row" class='awrnc'>dc_users</td><td align="right" class='awrnc'>958</td><td align="right" class='awrnc'>2.71</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>23</td></tr>
<tr><td scope="row" class='awrc'>outstanding_alerts</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4800"></a>
<h3 class="awr">Dictionary Cache Stats (RAC)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="32"></a>
<h2 class="awr">
Library Cache Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4900">Library Cache Activity</a></li>
<li class="awr"><a class="awr" href="#5000">Library Cache Activity (RAC)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4900"></a>
<h3 class="awr">Library Cache Activity</h3>
<ul>
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
</ul>
<table border="0" class="tdiff" summary="This table displays library cache statistics. Get requests, % misses, pin request, % miss, reloads, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>178</td><td align="right" class='awrc'>1.12</td><td align="right" class='awrc'>550</td><td align="right" class='awrc'>6.00</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>CLUSTER</td><td align="right" class='awrnc'>170</td><td align="right" class='awrnc'>1.76</td><td align="right" class='awrnc'>170</td><td align="right" class='awrnc'>1.76</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>HINTSET OBJECT</td><td align="right" class='awrnc'>177</td><td align="right" class='awrnc'>16.38</td><td align="right" class='awrnc'>177</td><td align="right" class='awrnc'>16.38</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>INDEX</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>9.52</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>28.57</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>OBJECT ID</td><td align="right" class='awrnc'>46</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>QUEUE</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>21.31</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>21.31</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SCHEMA</td><td align="right" class='awrnc'>756</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA</td><td align="right" class='awrc'>3,510</td><td align="right" class='awrc'>47.78</td><td align="right" class='awrc'>58,745</td><td align="right" class='awrc'>3.33</td><td align="right" class='awrc'>282</td><td align="right" class='awrc'>47</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA BUILD</td><td align="right" class='awrnc'>734</td><td align="right" class='awrnc'>73.43</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA STATS</td><td align="right" class='awrc'>570</td><td align="right" class='awrc'>95.44</td><td align="right" class='awrc'>570</td><td align="right" class='awrc'>95.44</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TABLE/PROCEDURE</td><td align="right" class='awrnc'>4,635</td><td align="right" class='awrnc'>12.25</td><td align="right" class='awrnc'>21,548</td><td align="right" class='awrnc'>7.02</td><td align="right" class='awrnc'>433</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TRANSFORMATION</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>21.31</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>21.31</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#32">Back to Library Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5000"></a>
<h3 class="awr">Library Cache Activity (RAC)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays library cache statistics. Ges lock requests, GES pin requests, GES pin releases, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>352</td><td align="right" class='awrc'>540</td><td align="right" class='awrc'>540</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>CLUSTER</td><td align="right" class='awrnc'>170</td><td align="right" class='awrnc'>170</td><td align="right" class='awrnc'>170</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>HINTSET OBJECT</td><td align="right" class='awrnc'>177</td><td align="right" class='awrnc'>177</td><td align="right" class='awrnc'>177</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>INDEX</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>QUEUE</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SCHEMA</td><td align="right" class='awrc'>46</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TABLE/PROCEDURE</td><td align="right" class='awrnc'>8,440</td><td align="right" class='awrnc'>16,634</td><td align="right" class='awrnc'>16,634</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TRANSFORMATION</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#32">Back to Library Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="33"></a>
<h2 class="awr">
Memory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#8500">Memory Dynamic Components</a></li>
<li class="awr"><a class="awr" href="#8600">Memory Resize Operations Summary</a></li>
<li class="awr"><a class="awr" href="#8650">Memory Resize Ops</a></li>
<li class="awr"><a class="awr" href="#7300">Process Memory Summary</a></li>
<li class="awr"><a class="awr" href="#5900">SGA Memory Summary</a></li>
<li class="awr"><a class="awr" href="#6100">SGA breakdown difference by Pool and Name</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8500"></a>
<h3 class="awr">Memory Dynamic Components</h3>
<ul>
<li class="awr"> Min/Max sizes since instance startup </li>
<li class="awr"> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred </li>
<li class="awr"> ordered by Component </li>
</ul>
<table border="0" class="tdiff" summary="This table displays memory dynamic component statistics. Begin snap size, current size, min size, etc. are displayed for each component"><tr><th class="awrbg" scope="col">Component</th><th class="awrbg" scope="col">Begin Snap Size (Mb)</th><th class="awrbg" scope="col">Current Size (Mb)</th><th class="awrbg" scope="col">Min Size (Mb)</th><th class="awrbg" scope="col">Max Size (Mb)</th><th class="awrbg" scope="col">Oper Count</th><th class="awrbg" scope="col">Last Op Typ/Mod</th></tr>
<tr><td scope="row" class='awrc'>ASM Buffer Cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 16K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT 2K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
		    70	08 Feb 2020 10:44    1
<tr><td scope="row" class='awrnc'>DEFAULT 32K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
		    71	08 Feb 2020 10:54    1
		    72	08 Feb 2020 11:36    1
		    73	08 Feb 2020 11:46    1
		    74	08 Feb 2020 13:00    1
		    75	08 Feb 2020 14:00    1
		    76	08 Feb 2020 14:20    1
		    77	08 Feb 2020 14:30    1
		    78	08 Feb 2020 15:55    1
		    79	08 Feb 2020 16:05    1
<tr><td scope="row" class='awrc'>DEFAULT 4K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
		    80	08 Feb 2020 17:00    1
		    81	08 Feb 2020 17:33    1
		    82	08 Feb 2020 17:43    1
<tr><td scope="row" class='awrnc'>DEFAULT 8K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT buffer cache</td><td align="right" class='awrc'>7,872.00</td><td align="right" class='awrc'>7,840.00</td><td align="right" class='awrc'>7,808.00</td><td align="right" class='awrc'>7,872.00</td><td align="right" class='awrc'>5</td><td class='awrc'>SHR/IMM</td></tr>


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 81

End   Snapshot Id specified: 82
<tr><td scope="row" class='awrnc'>Data Transfer Cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>

<tr><td scope="row" class='awrc'>In Memory RO Extension Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>In Memory RW Extension Area</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>In-Memory Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>KEEP buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>PGA Target</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>RECYCLE buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>SGA Target</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>Shared IO Pool</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>java pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>large pool</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>memoptimize buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>1,568.00</td><td align="right" class='awrnc'>1,600.00</td><td align="right" class='awrnc'>1,568.00</td><td align="right" class='awrnc'>1,632.00</td><td align="right" class='awrnc'>5</td><td class='awrnc'>GRO/IMM</td></tr>
<tr><td scope="row" class='awrc'>streams pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>unified pga pool</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8600"></a>
<h3 class="awr">Memory Resize Operations Summary</h3>
<ul>
<li class="awr"> Resizes, Grows, Shrinks - Operations captured by AWR	 if there are operations on the same component for the same	operation_type, target_size, and with the same start_time     only one operation is captured  </li>
<li class="awr"> ordered by Component </li>
</ul>
<table border="0" class="tdiff" summary="This table displays memory resize summary. For each component, it displays min size, max size, average size, resizes, etc."><tr><th class="awrbg" scope="col">Component</th><th class="awrbg" scope="col">Min Size (Mb)</th><th class="awrbg" scope="col">Max Size (Mb)</th><th class="awrbg" scope="col">Avg Size (Mb)</th><th class="awrbg" scope="col">Re- Sizes</th><th class="awrbg" scope="col">Grows</th><th class="awrbg" scope="col">Shrinks</th></tr>
<tr><td scope="row" class='awrc'>DEFAULT buffer cache</td><td align="right" class='awrc'>7,872.00</td><td align="right" class='awrc'>7,872.00</td><td align="right" class='awrc'>7,872.00</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>1,568.00</td><td align="right" class='awrnc'>1,600.00</td><td align="right" class='awrnc'>1,576.00</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8650"></a>
<h3 class="awr">Memory Resize Ops</h3>
<ul>
<li class="awr"> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred	 Delta	     : change in size of the component	  Target Delta: displayed only if final size &lt;&gt; target_size </li>
<li class="awr"> Status: COMplete/CANcelled/INActive/PENding/ERRor </li>
<li class="awr"> ordered by start_time desc,component </li>
</ul>

<table border="0" class="tdiff" summary="This table displays service memory resize operations. For each resize operation, it displays component involved, operation type, init size, target delta, etc."><tr><th class="awrbg" scope="col">Start</th><th class="awrbg" scope="col">Ela (s)</th><th class="awrbg" scope="col">Component</th><th class="awrbg" scope="col">Oper Typ/Mod</th><th class="awrbg" scope="col">Init Size (M)</th><th class="awrbg" scope="col">Delta</th><th class="awrbg" scope="col">Target Delta</th><th class="awrbg" scope="col">Final (M)</th><th class="awrbg" scope="col">Sta</th></tr>
<tr><td class='awrc'>02/08 17:34:51</td><td align="right" class='awrc'>0</td><td class='awrc'>bufcache</td><td class='awrc'>SHR/IMM</td><td align="right" class='awrc'>7,872</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>-32</td><td align="right" class='awrc'>7,872</td><td class='awrc'>ERR</td></tr>
<tr><td class='awrnc'>02/08 17:34:51</td><td align="right" class='awrnc'>0</td><td class='awrnc'>shared</td><td class='awrnc'>GRO/IMM</td><td align="right" class='awrnc'>1,568</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1,600</td><td class='awrnc'>ERR</td></tr>
<tr><td class='awrc'>02/08 17:34:50</td><td align="right" class='awrc'>0</td><td class='awrc'>bufcache</td><td class='awrc'>SHR/IMM</td><td align="right" class='awrc'>7,872</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>-32</td><td align="right" class='awrc'>7,872</td><td class='awrc'>ERR</td></tr>
<tr><td class='awrnc'>02/08 17:34:50</td><td align="right" class='awrnc'>0</td><td class='awrnc'>shared</td><td class='awrnc'>GRO/IMM</td><td align="right" class='awrnc'>1,568</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>1,568</td><td class='awrnc'>ERR</td></tr>
<tr><td class='awrc'>02/08 17:34:49</td><td align="right" class='awrc'>0</td><td class='awrc'>bufcache</td><td class='awrc'>SHR/IMM</td><td align="right" class='awrc'>7,872</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>-32</td><td align="right" class='awrc'>7,872</td><td class='awrc'>ERR</td></tr>
<tr><td class='awrnc'>02/08 17:34:49</td><td align="right" class='awrnc'>0</td><td class='awrnc'>shared</td><td class='awrnc'>GRO/IMM</td><td align="right" class='awrnc'>1,568</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>1,568</td><td class='awrnc'>ERR</td></tr>
<tr><td class='awrc'>02/08 17:34:48</td><td align="right" class='awrc'>1</td><td class='awrc'>bufcache</td><td class='awrc'>SHR/IMM</td><td align="right" class='awrc'>7,872</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>-32</td><td align="right" class='awrc'>7,872</td><td class='awrc'>ERR</td></tr>
<tr><td class='awrnc'>02/08 17:34:48</td><td align="right" class='awrnc'>1</td><td class='awrnc'>shared</td><td class='awrnc'>GRO/IMM</td><td align="right" class='awrnc'>1,568</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>1,568</td><td class='awrnc'>ERR</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7300"></a>
<h3 class="awr">Process Memory Summary</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap  </li>
<li class="awr"> All rows below contain absolute values (i.e. not diffed over the interval) </li>
<li class="awr"> Max Alloc is Maximum PGA Allocation size at snapshot time  </li>
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>
<li class="awr"> ordered by Begin/End snapshot, Alloc (MB) desc </li>
<li class="awr"> Top 10 containers by Alloc (MB) at end snapshot time are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays process memory summary. Allocation, used, average allocation, etc. are displayed for different category of process memory."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
<tr><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>184.25</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.09</td><td align="right" class='awrc'>7.30</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>45</td></tr>
<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>669.49</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.27</td><td align="right" class='awrnc'>7.93</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>127</td><td align="right" class='awrnc'>127</td></tr>
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>20.31</td><td align="right" class='awrc'>18.45</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrc'>0.48</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>108</td></tr>
<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>7.59</td><td align="right" class='awrnc'>5.07</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>59</td><td align="right" class='awrnc'>50</td></tr>
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>881.64</td><td align="right" class='awrc'>23.52</td><td align="right" class='awrc'>9.68</td><td align="right" class='awrc'>16.01</td><td align="right" class='awrc'>74</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>340</td><td align="right" class='awrc'>330</td></tr>
<tr><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>177.06</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.71</td><td align="right" class='awrnc'>8.83</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>31</td></tr>
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>605.05</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.50</td><td align="right" class='awrc'>8.66</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>110</td></tr>
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>11.84</td><td align="right" class='awrnc'>10.02</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.50</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>92</td></tr>
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>6.57</td><td align="right" class='awrc'>4.94</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>33</td></tr>
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>800.53</td><td align="right" class='awrnc'>14.95</td><td align="right" class='awrnc'>11.50</td><td align="right" class='awrnc'>18.35</td><td align="right" class='awrnc'>73</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>275</td><td align="right" class='awrnc'>266</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5900"></a>
<h3 class="awr">SGA Memory Summary</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA memory summary. For each SGA region, begin size and end size is displayed."><tr><th class="awrbg" scope="col">SGA regions</th><th class="awrbg" scope="col">Begin Size (Bytes)</th><th class="awrbg" scope="col">End Size (Bytes) (if different)</th></tr>
<tr><td scope="row" class='awrc'>Database Buffers</td><td align="right" class='awrc'>8,388,608,000</td><td align="right" class='awrc'>8,355,053,568</td></tr>
<tr><td scope="row" class='awrnc'>Fixed Size</td><td align="right" class='awrnc'>12,445,928</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Redo Buffers</td><td align="right" class='awrc'>21,106,688</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Variable Size</td><td align="right" class='awrnc'>1,711,276,032</td><td align="right" class='awrnc'>1,744,830,464</td></tr>
</table><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6100"></a>
<h3 class="awr">SGA breakdown difference by Pool and Name</h3>
<ul>
<li class="awr"> ordered by Pool, Name	</li>
<li class="awr"> N/A value for Begin MB or End MB indicates the size of that Pool/Name was    insignificant, or zero in that snapshot</li>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA breakdown difference. For each pool name, begin and end size are displayed."><tr><th class="awrbg" scope="col">Pool</th><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Begin MB</th><th class="awrbg" scope="col">End MB</th><th class="awrbg" scope="col">% Diff</th></tr>
<tr><td class='awrc'>large</td><td class='awrc'>PX msg pool</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>large</td><td class='awrnc'>free memory</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>ASH buffers</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>KCRAHT Free Blocks</td><td align="right" class='awrnc'>32.50</td><td align="right" class='awrnc'>53.75</td><td align="right" class='awrnc'>65.38</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>KGLH0</td><td align="right" class='awrc'>40.18</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>-100.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>KJSC rnb slots</td><td align="right" class='awrnc'>21.24</td><td align="right" class='awrnc'>17.59</td><td align="right" class='awrnc'>-17.17</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>SO private sga</td><td align="right" class='awrc'>28.97</td><td align="right" class='awrc'>28.97</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>SQLA</td><td align="right" class='awrnc'>256.02</td><td align="right" class='awrnc'>28.27</td><td align="right" class='awrnc'>-88.96</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>db_block_hash_buckets</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>free memory</td><td align="right" class='awrnc'>104.56</td><td align="right" class='awrnc'>403.04</td><td align="right" class='awrnc'>285.45</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gc name table</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gcs dynamic resources</td><td align="right" class='awrnc'>25.42</td><td align="right" class='awrnc'>25.42</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gcs dynamic resources for</td><td align="right" class='awrc'>91.31</td><td align="right" class='awrc'>91.31</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gcs resources</td><td align="right" class='awrnc'>264.52</td><td align="right" class='awrnc'>264.52</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gcs resv res hash bucket</td><td align="right" class='awrc'>48.00</td><td align="right" class='awrc'>48.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gcs shadows</td><td align="right" class='awrnc'>144.28</td><td align="right" class='awrnc'>144.28</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>ges big msg buffers</td><td align="right" class='awrc'>26.29</td><td align="right" class='awrc'>26.29</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>ksunfy_meta 1</td><td align="right" class='awrnc'>25.03</td><td align="right" class='awrnc'>25.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>row cache</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>buffer_cache</td><td align="right" class='awrnc'>7,872.00</td><td align="right" class='awrnc'>7,840.00</td><td align="right" class='awrnc'>-0.41</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>fixed_sga</td><td align="right" class='awrc'>11.87</td><td align="right" class='awrc'>11.87</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>log_buffer</td><td align="right" class='awrnc'>20.13</td><td align="right" class='awrnc'>20.13</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>shared_io_pool</td><td align="right" class='awrc'>128.00</td><td align="right" class='awrc'>128.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="39"></a>
<h2 class="awr">
Replication Statistics (GoldenGate, XStream)
</h2>
<ul>
<li class="awr"><a class="awr" href="#9000">Replication System Resource Usage</a></li>
<li class="awr"><a class="awr" href="#9010">Replication SGA Usage</a></li>
<li class="awr"><a class="awr" href="#9020">GoldenGate Capture</a></li>
<li class="awr"><a class="awr" href="#9030">GoldenGate Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9040">GoldenGate Apply Reader</a></li>
<li class="awr"><a class="awr" href="#9041">GoldenGate Apply Coordinator</a></li>
<li class="awr"><a class="awr" href="#9042">GoldenGate Apply Server</a></li>
<li class="awr"><a class="awr" href="#9051">GoldenGate Apply Coordinator Rate</a></li>
<li class="awr"><a class="awr" href="#9050">GoldenGate Apply Reader and Server Rate</a></li>
<li class="awr"><a class="awr" href="#9060">XStream Capture</a></li>
<li class="awr"><a class="awr" href="#9070">XStream Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9080">XStream Apply Reader</a></li>
<li class="awr"><a class="awr" href="#9081">XStream Apply Coordinator</a></li>
<li class="awr"><a class="awr" href="#9082">XStream Apply Server</a></li>
<li class="awr"><a class="awr" href="#9091">XStream Apply Coordinator Rate</a></li>
<li class="awr"><a class="awr" href="#9090">XStream Apply Reader and Server Rate</a></li>
<li class="awr"><a class="awr" href="#9100">Table Statistics by DML Operations</a></li>
<li class="awr"><a class="awr" href="#9110">Table Statistics by Conflict Resolutions</a></li>
<li class="awr"><a class="awr" href="#9120">Replication Large Transaction Statistics</a></li>
<li class="awr"><a class="awr" href="#9130">Replication Long Running Transaction Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9000"></a>
<h3 class="awr">Replication System Resource Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9010"></a>
<h3 class="awr">Replication SGA Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9020"></a>
<h3 class="awr">GoldenGate Capture</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9030"></a>
<h3 class="awr">GoldenGate Capture Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9040"></a>
<h3 class="awr">GoldenGate Apply Reader</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9041"></a>
<h3 class="awr">GoldenGate Apply Coordinator</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9042"></a>
<h3 class="awr">GoldenGate Apply Server</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9051"></a>
<h3 class="awr">GoldenGate Apply Coordinator Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9050"></a>
<h3 class="awr">GoldenGate Apply Reader and Server Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9060"></a>
<h3 class="awr">XStream Capture</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9070"></a>
<h3 class="awr">XStream Capture Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9080"></a>
<h3 class="awr">XStream Apply Reader</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9081"></a>
<h3 class="awr">XStream Apply Coordinator</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9082"></a>
<h3 class="awr">XStream Apply Server</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9091"></a>
<h3 class="awr">XStream Apply Coordinator Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9090"></a>
<h3 class="awr">XStream Apply Reader and Server Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9100"></a>
<h3 class="awr">Table Statistics by DML Operations</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9110"></a>
<h3 class="awr">Table Statistics by Conflict Resolutions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9120"></a>
<h3 class="awr">Replication Large Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9130"></a>
<h3 class="awr">Replication Long Running Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="34"></a>
<h2 class="awr">
Advanced Queuing
</h2>
<ul>
<li class="awr"><a class="awr" href="#6150">Advanced Queue CPU/IO Usage</a></li>
<li class="awr"><a class="awr" href="#6400">Buffered Queues</a></li>
<li class="awr"><a class="awr" href="#6500">Buffered Queue Subscribers</a></li>
<li class="awr"><a class="awr" href="#6600">Rule Set</a></li>
<li class="awr"><a class="awr" href="#7600">Persistent Queues</a></li>
<li class="awr"><a class="awr" href="#7610">Persistent Queues Rate</a></li>
<li class="awr"><a class="awr" href="#7700">Persistent Queue Subscribers</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6150"></a>
<h3 class="awr">Advanced Queue CPU/IO Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6400"></a>
<h3 class="awr">Buffered Queues</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6500"></a>
<h3 class="awr">Buffered Queue Subscribers</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6600"></a>
<h3 class="awr">Rule Set</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7600"></a>
<h3 class="awr">Persistent Queues</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7610"></a>
<h3 class="awr">Persistent Queues Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7700"></a>
<h3 class="awr">Persistent Queue Subscribers</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="6700"></a>
<h3 class="awr">Resource Limit Stats</h3>
<ul>
<li class="awr"> Only rows with Current or Maximum Utilization &gt; 80% of Limit are shown  </li>
<li class="awr"> For &quot;UNLIMITED&quot; resources, rows whose Current or Maximum Utilization    exceeds 2*Initial Allocation are shown </li>
<li class="awr"> Ordered by Resource Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays resource limit statistics. Current utilization, maximum utilization, initial allocation and limit are displayed for each resource name"><tr><th class="awrbg" scope="col">Resource Name</th><th class="awrbg" scope="col">Current	 Utilization</th><th class="awrbg" scope="col">Maximum	 Utilization</th><th class="awrbg" scope="col">  Initial Allocation</th><th class="awrbg" scope="col">	Limit</th></tr>
<tr><td scope="row" class='awrc'>ges_cache_ress</td><td align="right" class='awrc'>3,138</td><td align="right" class='awrc'>3,572</td><td class='awrc'>0</td><td class='awrc'>UNLIMITED</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="37"></a>
<h2 class="awr">
Shared Server Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#8710">Shared Servers Activity</a></li>
<li class="awr"><a class="awr" href="#8720">Shared Servers Rates</a></li>
<li class="awr"><a class="awr" href="#8730">Shared Servers Utilization</a></li>
<li class="awr"><a class="awr" href="#8740">Shared Servers Common Queue</a></li>
<li class="awr"><a class="awr" href="#8750">Shared Servers Dispatchers</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8710"></a>
<h3 class="awr">Shared Servers Activity</h3>
<ul>
<li class="awr"> Values represent averages for all samples</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers activity statistics. It displays average total connections, average active connections, average total shared servers, etc."><tr><th class="awrbg" scope="col">Avg Total Connections</th><th class="awrbg" scope="col">Avg Active Connections</th><th class="awrbg" scope="col">Avg Total Shared Srvrs</th><th class="awrbg" scope="col">Avg Active Shared Srvrs</th><th class="awrbg" scope="col">Avg Total Dispatchers</th><th class="awrbg" scope="col">Avg Active Dispatchers</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8720"></a>
<h3 class="awr">Shared Servers Rates</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers rate statistics. It displays common queue per second, disp queue per second, server messages per second, common queue total, etc."><tr><th class="awrbg" scope="col">Common Queue Per Sec</th><th class="awrbg" scope="col">Disp Queue Per Sec</th><th class="awrbg" scope="col">Server Msgs/Sec</th><th class="awrbg" scope="col">Server KB/Sec</th><th class="awrbg" scope="col">Common Queue Total</th><th class="awrbg" scope="col">Disp Queue Total</th><th class="awrbg" scope="col">Server Total Msgs</th><th class="awrbg" scope="col">Server Total(KB)</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8730"></a>
<h3 class="awr">Shared Servers Utilization</h3>
<ul>
<li class="awr"> Statistics are combined for all servers </li>
<li class="awr"> Incoming and Outgoing Net % are included in %Busy</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers utilization statistics. It displays total server time second, % busy, % idle, incoming net %, outgoing net %, etc."><tr><th class="awrbg" scope="col">Total Server Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Incoming Net %</th><th class="awrbg" scope="col">Outgoing Net %</th></tr>
<tr><td align="right" class='awrc'>609</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8740"></a>
<h3 class="awr">Shared Servers Common Queue</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8750"></a>
<h3 class="awr">Shared Servers Dispatchers</h3>
<ul>
<li class="awr"> Ordered by %Busy, descending </li>
<li class="awr"> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue </li>
<li class="awr"> Name suffixes:       &quot;(N)&quot; - dispatcher started between begin and end snapshots	&quot;(R)&quot; - dispatcher re-started between begin and end snapshots</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers dispatcher statistics. Average connections, total dispatch time, % busy, % idle, total queued, total queued wait, etc. are displayed for each dispatcher"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Avg Conns</th><th class="awrbg" scope="col">Total Disp Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Total Queued</th><th class="awrbg" scope="col">Total Queue Wait (s)</th><th class="awrbg" scope="col">Avg Queue Wait (ms)</th></tr>
<tr><td scope="row" class='awrc'>D000</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>609</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="36"></a>
<h2 class="awr">
Initialization Parameters
</h2>
<ul>
<li class="awr"><a class="awr" href="#6800">Modified Parameters</a></li>
<li class="awr"><a class="awr" href="#6850">Modified Multi-Valued Parameters</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6800"></a>
<h3 class="awr">Modified Parameters</h3>
<ul>
<li class="awr"> This section shows all the modified initialization parameters that  were in effect during the entire snapshot interval </li>
<li class="awr"> End Value is displayed only if the parameter value was modified within the snapshot interval</li>
</ul>
<table border="0" class="tdiff" summary="This table displays name and value of the modified initialization parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>TRUE</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>DB</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>TRUE</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>19.0.0</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>8192</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>+DATA</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>example.com</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>p30db</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>+FRA</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>274877906944</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>2</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>listener_networks</td><td class='awrnc'>&#160;&#160;</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>local_listener</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522))</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>AMERICAN</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>AMERICA</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>300</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>3371171840</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>640</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>10133438464</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>2</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo_tablespace</td><td class='awrc'>UNDOTBS2</td><td class='awrc'>&#160;&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#36">Back to Initialization Parameters</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6850"></a>
<h3 class="awr">Modified Multi-Valued Parameters</h3>
<ul>
<li class="awr"> This section only displays parameters that have more than one value </li>
<li class="awr">'(NULL)' indicates a missing parameter value </li>
<li class="awr"> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot'</li>
</ul>
<table border="0" class="tdiff" summary="This table displays name and value of multi-valued parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>control_files</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#36">Back to Initialization Parameters</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="42"></a>
<h2 class="awr">
Active Session History (ASH) Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#9990">Top SQL with Top Events</a></li>
<li class="awr"><a class="awr" href="#9989">Top SQL with Top Row Sources</a></li>
<li class="awr"><a class="awr" href="#9993">Top Sessions</a></li>
<li class="awr"><a class="awr" href="#9992">Top Blocking Sessions</a></li>
<li class="awr"><a class="awr" href="#9991">Top PL/SQL Procedures</a></li>
<li class="awr"><a class="awr" href="#9988">Top Events</a></li>
<li class="awr"><a class="awr" href="#9994">Top Event P1/P2/P3 Values</a></li>
<li class="awr"><a class="awr" href="#9987">Top DB Objects</a></li>
<li class="awr"><a class="awr" href="#9986">Activity Over Time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9990"></a>
<h3 class="awr">Top SQL with Top Events</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrc'>203653710</td><td align="right" class='awrc'>1041</td><td align="right" class='awrc'>89.59</td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>78.83</td><td class='awrc'>UPDATE</td><td align="right" class='awrc'>78.57</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrnc'><div class="hidden">203653710</div></td><td align="right" class='awrnc'><div class="hidden">1041</div></td><td align="right" class='awrnc'><div class="hidden">89.5869191049913941480206540447504302926</div></td>
<td class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>4.99</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>4.99</td>
<td class='awrnc'></td></tr>
<tr><td align="right" class='awrc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrc'><div class="hidden">203653710</div></td><td align="right" class='awrc'><div class="hidden">1041</div></td><td align="right" class='awrc'><div class="hidden">89.5869191049913941480206540447504302926</div></td>
<td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>2.58</td><td class='awrc'>UPDATE</td><td align="right" class='awrc'>2.32</td>
<td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9989"></a>
<h3 class="awr">Top SQL with Top Row Sources</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrc'>203653710</td><td align="right" class='awrc'>1041</td><td align="right" class='awrc'>89.59</td>
<td class='awrc'>UPDATE</td><td align="right" class='awrc'>88.81</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>78.57</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9993"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>11,11821</td><td align="right" class='awrc'>4.99</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.65</td>
<td class='awrc'>USER13</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>54/61 [ 88%]</td><td align="right" class='awrc'>53</td></tr>
<tr><td align="right" scope="row" class='awrnc'>16, 6218</td><td align="right" class='awrnc'>4.99</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.65</td>
<td class='awrnc'>USER30</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>54/61 [ 88%]</td><td align="right" class='awrnc'>51</td></tr>
<tr><td align="right" scope="row" class='awrc'>20,34915</td><td align="right" class='awrc'>4.99</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.39</td>
<td class='awrc'>USER19</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>51/61 [ 83%]</td><td align="right" class='awrc'>49</td></tr>
<tr><td align="right" scope="row" class='awrnc'>135,48890</td><td align="right" class='awrnc'>4.99</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.73</td>
<td class='awrnc'>USER3</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>55/61 [ 90%]</td><td align="right" class='awrnc'>53</td></tr>
<tr><td align="right" scope="row" class='awrc'>139,34033</td><td align="right" class='awrc'>4.99</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.48</td>
<td class='awrc'>USER28</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>52/61 [ 85%]</td><td align="right" class='awrc'>49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9992"></a>
<h3 class="awr">Top Blocking Sessions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9991"></a>
<h3 class="awr">Top PL/SQL Procedures</h3>
<ul>
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>89.85</td>
<td class='awrc'>SQL</td><td align="right" class='awrc'>89.85</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9988"></a>
<h3 class="awr">Top Events</h3>
<ul>
<li class="awr"> Top Events by DB Time </li>
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>78.83</td><td align="right" class='awrc'>14.99</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td class='awrnc'>System I/O</td><td class='awrnc'>BACKGROUND</td>
<td align="right" class='awrnc'>5.16</td><td align="right" class='awrnc'>0.98</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td class='awrc'>Cluster</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>4.99</td><td align="right" class='awrc'>0.95</td></tr>
<tr><td scope="row" class='awrnc'>CPU + Wait for CPU</td><td class='awrnc'>CPU</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>2.75</td><td align="right" class='awrnc'>0.52</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>BACKGROUND</td>
<td align="right" class='awrc'>2.32</td><td align="right" class='awrc'>0.44</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9994"></a>
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
<ul>
<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>78.83</td><td align="right" class='awrc'>&quot;2&quot;,&quot;24933777&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.09</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>5.16</td><td align="right" class='awrnc'>&quot;2&quot;,&quot;112&quot;,&quot;4&quot;</td><td align="right" class='awrnc'>0.26</td>
<td class='awrnc'>files</td><td class='awrnc'>blocks</td><td class='awrnc'>requests</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9987"></a>
<h3 class="awr">Top DB Objects</h3>
<ul>
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
<tr><td align="right" scope="row" class='awrc'>73472</td><td align="right" class='awrc'>4.99</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.73</td>
<td class='awrc'>USER15.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73550</td><td align="right" class='awrnc'>4.99</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.65</td>
<td class='awrnc'>USER30.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73413</td><td align="right" class='awrc'>4.91</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.73</td>
<td class='awrc'>USER3.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73503</td><td align="right" class='awrnc'>4.91</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.65</td>
<td class='awrnc'>USER21.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73439</td><td align="right" class='awrc'>4.82</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.04</td>
<td class='awrc'>USER9.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9986"></a>
<h3 class="awr">Activity Over Time</h3>
<ul>
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
<li class="awr"> Top 3 events are reported in each of those slots </li>
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
</ul>
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
<tr><td align="right" class='awrc'>17:33:14   (1.8 min)</td><td align="right" class='awrc'>239</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>167</td><td align="right" class='awrc'>14.37</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">17:33:14   (1.8 min)</div></td><td align="right" class='awrnc'><div class="hidden">239</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>1.89</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">17:33:14   (1.8 min)</div></td><td align="right" class='awrc'><div class="hidden">239</div></td><td class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>1.64</td></tr>
<tr><td align="right" class='awrnc'>17:35:00   (5.0 min)</td><td align="right" class='awrnc'>585</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>482</td><td align="right" class='awrnc'>41.48</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">17:35:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">585</div></td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>2.32</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">17:35:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">585</div></td><td class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>2.32</td></tr>
<tr><td align="right" class='awrc'>17:40:00   (3.4 min)</td><td align="right" class='awrc'>338</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>267</td><td align="right" class='awrc'>22.98</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">17:40:00   (3.4 min)</div></td><td align="right" class='awrnc'><div class="hidden">338</div></td><td class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>2.24</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">17:40:00   (3.4 min)</div></td><td align="right" class='awrc'><div class="hidden">338</div></td><td class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>1.03</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99995"></a>
<h2>ADDM Task ADDM:3393773525_2_82</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_2_82&apos;
	  -------------------------------------------

Analysis Period
---------------
AWR snapshot range from 81 to 82.
Time period starts at 08-FEB-20 05.33.14 PM
Time period ends at 08-FEB-20 05.43.26 PM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of instance p30db2, numbered 2 and hosted at
mcracpoc2.example.com.

Activity During the Analysis Period
-----------------------------------
Total database time was 10263 seconds.
The average number of active sessions was 16.77.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendations
					     Percent of Activity
   ----------------------------------------  -------------------  ---------------
1  Top SQL Statements			     16.71 | 99.62	  1
2  &quot;User I/O&quot; wait Class		       15.24 | 90.88	    0
3  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  4.62 | 27.57	      5
4  Undersized SGA			     1.37 | 8.16	  1
5  Global Cache Messaging		     .93 | 5.56 	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 16.73 active sessions, 99.62% of total activity.
----------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

   Recommendation 1: SQL Tuning
   Estimated benefit is 16.64 active sessions, 99.23% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
	 AND (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 99% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 35802 times and
      had an average elapsed time of 0.27 seconds.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER9.CF1&quot; with object ID 73439 consumed
      5% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER15.CF1&quot; with object ID 73472
      consumed 5% of the database time spent on this SQL statement.


Finding 2: &quot;User I/O&quot; wait Class
Impact is 15.27 active sessions, 90.88% of total activity.
----------------------------------------------------------
Wait class &quot;User I/O&quot; was consuming significant database time.
Waits for I/O to temporary tablespaces were not consuming significant database
time.
The throughput of the I/O subsystem was not significantly lower than expected.

   No recommendations are available.


Finding 3: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 4.63 active sessions, 27.57% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

   Recommendation 1: Segment Tuning
   Estimated benefit is .94 active sessions, 5.59% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER15.CF1&quot; with
      object ID 73472.
      Related Object
	 Database object with ID 73472.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 99% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 54874
      physical reads, 37396 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .94 active sessions, 5.59% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER30.CF1&quot; with
      object ID 73550.
      Related Object
	 Database object with ID 73550.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 62012
      physical reads, 40576 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .92 active sessions, 5.5% of total activity.
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER3.CF1&quot; with
      object ID 73413.
      Related Object
	 Database object with ID 73413.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 100% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 57884
      physical reads, 38228 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .92 active sessions, 5.5% of total activity.
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER21.CF1&quot; with
      object ID 73503.
      Related Object
	 Database object with ID 73503.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 62893
      physical reads, 41113 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .91 active sessions, 5.4% of total activity.
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER9.CF1&quot; with
      object ID 73439.
      Related Object
	 Database object with ID 73439.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 100% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 69595
      physical reads, 44377 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 15.24 active sessions, 90.88% of total activity.


Finding 4: Undersized SGA
Impact is 1.37 active sessions, 8.16% of total activity.
--------------------------------------------------------
The SGA was inadequately sized, causing additional I/O or hard parses.
The value of parameter &quot;sga_target&quot; was &quot;9664 M&quot; during the analysis period.

   Recommendation 1: Database Configuration
   Estimated benefit is .4 active sessions, 2.38% of total activity.
   -----------------------------------------------------------------
   Action
      Increase the size of the SGA by setting the parameter &quot;sga_target&quot; to
      10872 M.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 15.24 active sessions, 90.88% of total activity.


Finding 5: Global Cache Messaging
Impact is .93 active sessions, 5.56% of total activity.
-------------------------------------------------------
Inter-instance messaging was consuming significant database time on this
instance.

   Recommendation 1: Application Analysis
   Estimated benefit is .93 active sessions, 5.56% of total activity.
   ------------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the UPDATE statement
      with SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 100% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is 1.06 active sessions, 6.31% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Miscellaneous Information
-------------------------
Wait class &quot;Application&quot; was not consuming significant database time.
Wait class &quot;Commit&quot; was not consuming significant database time.
Wait class &quot;Concurrency&quot; was not consuming significant database time.
Wait class &quot;Configuration&quot; was not consuming significant database time.
CPU was not a bottleneck for the instance.
Wait class &quot;Network&quot; was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.
Hard parsing of SQL statements was not consuming significant database time.

The database&apos;s maintenance windows were active during 100% of the analysis
period.

</pre>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="9997"></a>
<a class="awr" name="9997"></a><h3 class="awr">RAC Statistics</h3>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays information about RAC instances">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th></tr>
<tr><td scope="row" class='awrnc'>Number of Instances:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>	 2</td></tr>
<tr><td scope="row" class='awrc'>Number of LMS's:</td><td align="right" class='awrc'>	 2</td><td align="right" class='awrc'>	  2</td></tr>
<tr><td scope="row" class='awrnc'>Number of realtime LMS's:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>    2</td><td class='awrnc'> (0 priority changes)</td></tr>
</table><p />
Global Cache Load Profile
<p />
<table border="0" width="600" class="tdiff" summary="This table displays information about global cache load
		     profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th></tr>
<tr><td scope="row" class='awrnc'>Global Cache blocks received:</td><td align="right" class='awrnc'>		    51.84</td><td align="right" class='awrnc'>		       0.86</td></tr>
<tr><td scope="row" class='awrc'>Global Cache blocks served:</td><td align="right" class='awrc'>		12.33</td><td align="right" class='awrc'>		  0.21</td></tr>
<tr><td scope="row" class='awrnc'>GCS/GES messages received:</td><td align="right" class='awrnc'>	      3,811.57</td><td align="right" class='awrnc'>		   63.39</td></tr>
<tr><td scope="row" class='awrc'>GCS/GES messages sent:</td><td align="right" class='awrc'>		4,210.31</td><td align="right" class='awrc'>		    70.02</td></tr>
<tr><td scope="row" class='awrnc'>DBWR Fusion writes:</td><td align="right" class='awrnc'>		   0.17</td><td align="right" class='awrnc'>		     0.00</td></tr>
<tr><td scope="row" class='awrc'>Estd Interconnect traffic (KB)</td><td align="right" class='awrc'>		2,080.13</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
Global Cache Efficiency Percentages (Target local+remote 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays global cache efficiency percentages">
<tr><td scope="row" class='awrnc'>Buffer access -  local cache %:</td><td align="right" class='awrnc'>	26.56</td></tr>
<tr><td scope="row" class='awrc'>Buffer access - remote cache %:</td><td align="right" class='awrc'>   2.07</td></tr>
<tr><td scope="row" class='awrnc'>Buffer access -	  disk %:</td><td align="right" class='awrnc'>	71.38</td></tr>
<tr><td scope="row" class='awrc'>Global Cache Locality	      %:</td><td align="right" class='awrc'>  31.63</td></tr>
</table><p />
Global Cache and Enqueue Services - Workload Characteristics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays workload characteristics for global
		    cache and enqueue services">
<tr><td scope="row" class='awrnc'>Avg global cache cr block receive time (us):</td><td align="right" class='awrnc'>	    2,851.0</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache current block receive time (us):</td><td align="right" class='awrc'>	       1,110.6</td></tr>
<tr><td scope="row" class='awrnc'>Avg LMS process busy %:</td><td align="right" class='awrnc'>		   8.7</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block build time (us):</td><td align="right" class='awrc'> 	    0.0</td></tr>
<tr><td scope="row" class='awrnc'>Global cache log flushes for cr blocks served %:</td><td align="right" class='awrnc'> 	    5.0</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block flush time (us):</td><td align="right" class='awrc'>        25,135.1</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block pin time (us):</td><td align="right" class='awrnc'>		 0.0</td></tr>
<tr><td scope="row" class='awrc'>Global cache log flushes for current blocks served %:</td><td align="right" class='awrc'>	       0.5</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block flush time (us):</td><td align="right" class='awrnc'>	      22,121.2</td></tr>
<tr><td scope="row" class='awrc'>Avg global enqueue get time (us):</td><td align="right" class='awrc'>		 164.5</td></tr>
</table><p />
Global Cache and Enqueue Services - Messaging Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays messaging statistics for Global Cache
		    and Enqueue Services">
<tr><td scope="row" class='awrnc'>Avg message sent queue time (us):</td><td align="right" class='awrnc'>	 4,060.1</td></tr>
<tr><td scope="row" class='awrc'>Avg message sent queue time on ksxp (us):</td><td align="right" class='awrc'>	       4,671.8</td></tr>
<tr><td scope="row" class='awrnc'>Avg message received kernel queue time (us):</td><td align="right" class='awrnc'>	       31.7</td></tr>
<tr><td scope="row" class='awrc'>Avg message received queue time (us):</td><td align="right" class='awrc'>	      73.3</td></tr>
<tr><td scope="row" class='awrnc'>Avg GCS message process time (us):</td><td align="right" class='awrnc'>	     34.2</td></tr>
<tr><td scope="row" class='awrc'>Avg GES message process time (us):</td><td align="right" class='awrc'> 	   27.2</td></tr>
<tr><td scope="row" class='awrnc'>% of direct sent messages:</td><td align="right" class='awrnc'>   38.04</td></tr>
<tr><td scope="row" class='awrc'>% of indirect sent messages:</td><td align="right" class='awrc'>   61.26</td></tr>
<tr><td scope="row" class='awrnc'>% of flow controlled messages:</td><td align="right" class='awrnc'>	 0.70</td></tr>
</table><p />
<hr />
<p />Cluster Interconnect<p />
<ul>
<li class="awr"> if Public/Source at End snap is different a '*' is displayed</li>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect. . if Public/Source at End snap is different a '*' is displayed"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 2" id="End">End</th>
</tr><tr>
<th class="awrbg" scope="col">Interface</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Src">Src</th></tr>
<tr><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.31.173</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End Pub" class='awrclb'>&#160;</td><td headers="End Src" class='awrcrb'>&#160;</td></tr>
</table><p />
<a class="awr" name="top"></a>
<h2 class="awr">
RAC Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5100"></a>
<h3 class="awr">Global Messaging Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays global messaging statistics. Total, per second, per transaction values are displayed for each statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>Cluster reconfiguration count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Domain reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>79,309</td><td align="right" class='awrnc'>129.77</td><td align="right" class='awrnc'>2.16</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA local message waits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA local messages received</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA messages received actual</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA messages received logical</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA requests failed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA requests succeeded</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Pseudo reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Pseudo rm reconfig count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>311</td><td align="right" class='awrnc'>0.51</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>852</td><td align="right" class='awrc'>1.39</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>13,661</td><td align="right" class='awrnc'>22.35</td><td align="right" class='awrnc'>0.37</td></tr>
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>27,740</td><td align="right" class='awrc'>45.39</td><td align="right" class='awrc'>0.75</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>5,694</td><td align="right" class='awrnc'>9.32</td><td align="right" class='awrnc'>0.15</td></tr>
<tr><td scope="row" class='awrc'>dynamically allocated gcs resources</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>dynamically allocated gcs shadows</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>flow control messages received</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>flow control messages sent</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs assume cvt</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs assume no cvt</td><td align="right" class='awrnc'>3,188</td><td align="right" class='awrnc'>5.22</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>gcs ast to fg</td><td align="right" class='awrc'>481,849</td><td align="right" class='awrc'>788.43</td><td align="right" class='awrc'>13.11</td></tr>
<tr><td scope="row" class='awrnc'>gcs ast xid</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs bidless ast to lms</td><td align="right" class='awrc'>304</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gcs blocked converts</td><td align="right" class='awrnc'>32,264</td><td align="right" class='awrnc'>52.79</td><td align="right" class='awrnc'>0.88</td></tr>
<tr><td scope="row" class='awrc'>gcs blocked cr converts</td><td align="right" class='awrc'>1,641</td><td align="right" class='awrc'>2.69</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible basts</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (global)</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (local)</td><td align="right" class='awrnc'>10,746</td><td align="right" class='awrnc'>17.58</td><td align="right" class='awrnc'>0.29</td></tr>
<tr><td scope="row" class='awrc'>gcs cr basts to PIs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs cr requests to slave</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs cr serve without current lock</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs dbwr flush pi msgs</td><td align="right" class='awrnc'>487,878</td><td align="right" class='awrnc'>798.30</td><td align="right" class='awrnc'>13.28</td></tr>
<tr><td scope="row" class='awrc'>gcs dbwr write request msgs</td><td align="right" class='awrc'>102</td><td align="right" class='awrc'>0.17</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs error msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs flash read serve requests to slave</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr block only</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs force cr grant</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr no current</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs forward cr to pinged instance</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs grant ast</td><td align="right" class='awrnc'>482,153</td><td align="right" class='awrnc'>788.93</td><td align="right" class='awrnc'>13.12</td></tr>
<tr><td scope="row" class='awrc'>gcs grant request in partial open</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate (compatible) converts</td><td align="right" class='awrnc'>2,804</td><td align="right" class='awrnc'>4.59</td><td align="right" class='awrnc'>0.08</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate (null) converts</td><td align="right" class='awrc'>744,265</td><td align="right" class='awrc'>1,217.81</td><td align="right" class='awrc'>20.25</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrnc'>79</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate cr (null) converts</td><td align="right" class='awrc'>4,971</td><td align="right" class='awrc'>8.13</td><td align="right" class='awrc'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>gcs lms flush pi msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs lms write request msgs</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs msgs process time(ms)</td><td align="right" class='awrnc'>55,628</td><td align="right" class='awrnc'>91.02</td><td align="right" class='awrnc'>1.51</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs received</td><td align="right" class='awrc'>1,624,546</td><td align="right" class='awrc'>2,658.18</td><td align="right" class='awrc'>44.21</td></tr>
<tr><td scope="row" class='awrnc'>gcs new served by master</td><td align="right" class='awrnc'>145</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs out-of-order msgs</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs pings refused</td><td align="right" class='awrnc'>2,710</td><td align="right" class='awrnc'>4.43</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>gcs pkey conflicts retry</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs queued converts</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly failure unmount db</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass N-&gt;Xw ping local</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass N-&gt;Xw ping remote</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant X on assume</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass grant ast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant fg ast</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass grant immediate</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs recovery claim msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to fg</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid to lms</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to master</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs regular cr</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs resources for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs retry convert request</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs shadows for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs share recovery bast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs side channel msgs actual</td><td align="right" class='awrnc'>4,271</td><td align="right" class='awrnc'>6.99</td><td align="right" class='awrnc'>0.12</td></tr>
<tr><td scope="row" class='awrc'>gcs side channel msgs logical</td><td align="right" class='awrc'>733,999</td><td align="right" class='awrc'>1,201.01</td><td align="right" class='awrc'>19.97</td></tr>
<tr><td scope="row" class='awrnc'>gcs stale cr</td><td align="right" class='awrnc'>52</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs undo cr</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs write notification msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs writes refused</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges msgs process time(ms)</td><td align="right" class='awrnc'>84</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges msgs received</td><td align="right" class='awrc'>3,088</td><td align="right" class='awrc'>5.05</td><td align="right" class='awrc'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>ges remote lock allocation</td><td align="right" class='awrnc'>-59</td><td align="right" class='awrnc'>-0.10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts dropped</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global posts queue time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts queued</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global posts requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts sent</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>implicit batch messages received</td><td align="right" class='awrnc'>51,320</td><td align="right" class='awrnc'>83.97</td><td align="right" class='awrnc'>1.40</td></tr>
<tr><td scope="row" class='awrc'>implicit batch messages sent</td><td align="right" class='awrc'>62,233</td><td align="right" class='awrc'>101.83</td><td align="right" class='awrc'>1.69</td></tr>
<tr><td scope="row" class='awrnc'>lmd msg send time(ms)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>lms(s) msg send time(ms)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>messages flow controlled</td><td align="right" class='awrnc'>14,690</td><td align="right" class='awrnc'>24.04</td><td align="right" class='awrnc'>0.40</td></tr>
<tr><td scope="row" class='awrc'>messages queue sent actual</td><td align="right" class='awrc'>192,417</td><td align="right" class='awrc'>314.84</td><td align="right" class='awrc'>5.24</td></tr>
<tr><td scope="row" class='awrnc'>messages queue sent logical</td><td align="right" class='awrnc'>591,742</td><td align="right" class='awrnc'>968.24</td><td align="right" class='awrnc'>16.10</td></tr>
<tr><td scope="row" class='awrc'>messages received actual</td><td align="right" class='awrc'>726,061</td><td align="right" class='awrc'>1,188.02</td><td align="right" class='awrc'>19.76</td></tr>
<tr><td scope="row" class='awrnc'>messages received logical</td><td align="right" class='awrnc'>1,627,634</td><td align="right" class='awrnc'>2,663.23</td><td align="right" class='awrnc'>44.29</td></tr>
<tr><td scope="row" class='awrc'>messages sent directly</td><td align="right" class='awrc'>794,428</td><td align="right" class='awrc'>1,299.89</td><td align="right" class='awrc'>21.62</td></tr>
<tr><td scope="row" class='awrnc'>messages sent indirectly</td><td align="right" class='awrnc'>1,279,355</td><td align="right" class='awrnc'>2,093.36</td><td align="right" class='awrnc'>34.81</td></tr>
<tr><td scope="row" class='awrc'>messages sent not implicit batched</td><td align="right" class='awrc'>35,605</td><td align="right" class='awrc'>58.26</td><td align="right" class='awrc'>0.97</td></tr>
<tr><td scope="row" class='awrnc'>messages sent pbatched</td><td align="right" class='awrnc'>743,065</td><td align="right" class='awrnc'>1,215.85</td><td align="right" class='awrnc'>20.22</td></tr>
<tr><td scope="row" class='awrc'>msgs causing lmd to send msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>msgs causing lms(s) to send msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>msgs received kernel queue time (ns)</td><td align="right" class='awrc'>51,672,907,311</td><td align="right" class='awrc'>84,550,286.04</td><td align="right" class='awrc'>1,406,142.03</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queue time (ms)</td><td align="right" class='awrnc'>119,366</td><td align="right" class='awrnc'>195.31</td><td align="right" class='awrnc'>3.25</td></tr>
<tr><td scope="row" class='awrc'>msgs received queued</td><td align="right" class='awrc'>1,627,634</td><td align="right" class='awrc'>2,663.23</td><td align="right" class='awrc'>44.29</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time (ms)</td><td align="right" class='awrnc'>2,564,206</td><td align="right" class='awrnc'>4,195.71</td><td align="right" class='awrnc'>69.78</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrc'>4,619,835</td><td align="right" class='awrc'>7,559.25</td><td align="right" class='awrc'>125.72</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued</td><td align="right" class='awrnc'>631,569</td><td align="right" class='awrnc'>1,033.41</td><td align="right" class='awrnc'>17.19</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued on ksxp</td><td align="right" class='awrc'>988,874</td><td align="right" class='awrc'>1,618.05</td><td align="right" class='awrc'>26.91</td></tr>
<tr><td scope="row" class='awrnc'>number of broadcasted resources</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of directly freed master res</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of ges deadlock detected</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of lock borrowed by LMD</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of received ODPS messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of received RBA messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of resource borrowed by LMD</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of sent ODPS messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>

Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_rac_81_82.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.

<tr><td scope="row" class='awrnc'>number of sent RBA messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>process batch messages received</td><td align="right" class='awrc'>106,403</td><td align="right" class='awrc'>174.10</td><td align="right" class='awrc'>2.90</td></tr>

Using the report name awr_rac.txt
<tr><td scope="row" class='awrnc'>process batch messages sent</td><td align="right" class='awrnc'>81,411</td><td align="right" class='awrnc'>133.21</td><td align="right" class='awrnc'>2.22</td></tr>
<tr><td scope="row" class='awrc'>receiver cycle time</td><td align="right" class='awrc'>203,689</td><td align="right" class='awrc'>333.29</td><td align="right" class='awrc'>5.54</td></tr>
<tr><td scope="row" class='awrnc'>receiver loop count</td><td align="right" class='awrnc'>843,646</td><td align="right" class='awrnc'>1,380.42</td><td align="right" class='awrnc'>22.96</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5200"></a>
<h3 class="awr">Global CR Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays global CR served statistics. For each statistics, total value is shown"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th></tr>
<tr><td scope="row" class='awrc'>CR Block Requests</td><td align="right" class='awrc'>126</td></tr>
<tr><td scope="row" class='awrnc'>CURRENT Block Requests</td><td align="right" class='awrnc'>1,388</td></tr>
<tr><td scope="row" class='awrc'>Data Block Requests</td><td align="right" class='awrc'>126</td></tr>
<tr><td scope="row" class='awrnc'>Undo Block Requests</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TX Block Requests</td><td align="right" class='awrc'>1,341</td></tr>
<tr><td scope="row" class='awrnc'>Current Results</td><td align="right" class='awrnc'>1,482</td></tr>
<tr><td scope="row" class='awrc'>Private results</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>Zero Results</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>Disk Read Results</td><td align="right" class='awrc'>32</td></tr>
<tr><td scope="row" class='awrnc'>Fail Results</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>Fairness Down Converts</td><td align="right" class='awrc'>61</td></tr>
<tr><td scope="row" class='awrnc'>Light Works</td><td align="right" class='awrnc'>4</td></tr>
<tr><td scope="row" class='awrc'>Flushes</td><td align="right" class='awrc'>74</td></tr>
<tr><td scope="row" class='awrnc'>Builds</td><td align="right" class='awrnc'>126</td></tr>
<tr><td scope="row" class='awrc'>Errors</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5300"></a>
<h3 class="awr">Global Current Server Statistics</h3>
<ul>
<li class="awr"> Pins	 = CURRENT Block Pin Operations </li>
<li class="awr"> Flushes = Redo Flush before CURRENT Block Served Operations</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global current served statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
<tr><td scope="row" class='awrc'>Pins</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>50.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Flushes</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>57.58</td><td align="right" class='awrnc'>39.39</td><td align="right" class='awrnc'>3.03</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="7"></a>
<h2 class="awr">
Global Cache Transfer Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#5400">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#5450">Global Cache Transfer Times (us)</a></li>
<li class="awr"><a class="awr" href="#5460">Global Cache Transfer (Immediate)</a></li>
<li class="awr"><a class="awr" href="#5470">Global Cache Times (Immediate)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5400"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
<li class="awr"> Congested (Congst) - Block Transfer impacted by Remote System Load </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer stats. CR, blocks received, % immediate, % busy, % congestion are displayed for each instance and block class"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CR">CR</th>
<th class="awrbg" colspan=" 4" id="Current">Current</th>
</tr><tr>
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>data block</td><td align="right" headers="CR Blocks|Received" class='awrclb'>389</td><td align="right" headers="CR %|Immed" class='awrc'>98.20</td><td align="right" headers="CR %|Busy" class='awrc'>1.03</td><td align="right" headers="CR %|Congst" class='awrc'>0.77</td><td align="right" headers="Current Blocks|Received" class='awrclb'>30,691</td><td align="right" headers="Current %|Immed" class='awrc'>65.67</td><td align="right" headers="Current %|Busy" class='awrc'>34.04</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.29</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>Others</td><td align="right" headers="CR Blocks|Received" class='awrnclb'>64</td><td align="right" headers="CR %|Immed" class='awrnc'>100.00</td><td align="right" headers="CR %|Busy" class='awrnc'>0.00</td><td align="right" headers="CR %|Congst" class='awrnc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrnclb'>551</td><td align="right" headers="Current %|Immed" class='awrnc'>80.76</td><td align="right" headers="Current %|Busy" class='awrnc'>19.24</td><td align="right" headers="Current %|Congst" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>undo header</td><td align="right" headers="CR Blocks|Received" class='awrclb'>18</td><td align="right" headers="CR %|Immed" class='awrc'>55.56</td><td align="right" headers="CR %|Busy" class='awrc'>44.44</td><td align="right" headers="CR %|Congst" class='awrc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrclb'>5</td><td align="right" headers="Current %|Immed" class='awrc'>40.00</td><td align="right" headers="Current %|Busy" class='awrc'>60.00</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5450"></a>
<h3 class="awr">Global Cache Transfer Times (us)</h3>
<ul>
<li class="awr"> Avg Time - average time of all blocks (Immed,Busy,Congst) in us </li>
<li class="awr"> Immed, Busy, Congst -	Average times in us </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer time statistics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>data block</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>1694</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>806</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>83373</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>5969</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>1085</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>1043</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>1056</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>14189</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>others</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>495</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>495</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>1139</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>628</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>3281</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>undo header</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>36409</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>441</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>81369</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>1159</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>1764</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>756</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>undo block</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5460"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> % of Blocks Received requiring 2 or 3 hops </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CR">CR</th>
<th class="awrbg" colspan=" 3" id="Current">Current</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Blocks Lost</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>382</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>20,155</td><td align="right" headers="Current %|2hop" class='awrc'>100.00</td><td align="right" headers="Current %|3hop" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>others</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>64</td><td align="right" headers="CR %|2hop" class='awrnc'>100.00</td><td align="right" headers="CR %|3hop" class='awrnc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>445</td><td align="right" headers="Current %|2hop" class='awrnc'>100.00</td><td align="right" headers="Current %|3hop" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>undo header</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>10</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>2</td><td align="right" headers="Current %|2hop" class='awrc'>100.00</td><td align="right" headers="Current %|3hop" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>&#160;</td><td align="right" headers="CR %|2hop" class='awrnc'>&#160;</td><td align="right" headers="CR %|3hop" class='awrnc'>&#160;</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>&#160;</td><td align="right" headers="Current %|2hop" class='awrnc'>&#160;</td><td align="right" headers="Current %|3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5470"></a>
<h3 class="awr">Global Cache Times (Immediate)</h3>
<ul>
<li class="awr"> Blocks Lost, 2-hop and 3-hop Average times in (us) </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache times (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Lost Time</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>806</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>806</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>1043</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>1043</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>others</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>495</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>495</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>628</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>628</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>undo header</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>441</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>441</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>1764</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>1764</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>1</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>&#160;</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#7800">Interconnect Latency Stats</a></li>
<li class="awr"><a class="awr" href="#7900">Interconnect Throughput by Client</a></li>
<li class="awr"><a class="awr" href="#8000">Interconnect Device Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7800"></a>
<h3 class="awr">Interconnect Ping Latency Statistics</h3>
<ul>
<li class="awr"> Ping latency of the roundtrip of a message from this instance to </li>
<li class="awr"> target instances.  </li>
<li class="awr"> The target instance is identified by an instance number. </li>
<li class="awr"> Average and standard deviation of ping latency is given in microseconds </li>
<li class="awr"> for message sizes of 500 bytes and 8K. </li>
<li class="awr"> Note that latency of a message from the instance to itself is used as </li>
<li class="awr"> control, since message latency can include wait for CPU</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IC ping latency statistics"><tr><th class="awrbg" scope="col">Target Instance</th><th class="awrbg" scope="col">500B Ping Count</th><th class="awrbg" scope="col">Avg Latency 500B msg</th><th class="awrbg" scope="col">Stddev 500B msg</th><th class="awrbg" scope="col">8K Ping Count</th><th class="awrbg" scope="col">Avg Latency 8K msg</th><th class="awrbg" scope="col">Stddev 8K msg</th></tr>
<tr><td align="right" class='awrc'>1</td><td align="right" class='awrc'>56</td><td align="right" class='awrc'>956</td><td align="right" class='awrc'>0.55</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>972</td><td align="right" class='awrc'>0.54</td></tr>
<tr><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>496</td><td align="right" class='awrnc'>0.52</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>478</td><td align="right" class='awrnc'>0.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7900"></a>
<h3 class="awr">Interconnect Throughput by Client</h3>
<ul>
<li class="awr"> Throughput of interconnect usage by major consumers </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect throughput by client statistics"><tr><th class="awrbg" scope="col">Used By</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Receive Mbytes/sec</th></tr>
<tr><td scope="row" class='awrc'>Global Cache</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.45</td></tr>
<tr><td scope="row" class='awrnc'>Parallel Query</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>DB Locks</td><td align="right" class='awrc'>0.91</td><td align="right" class='awrc'>0.69</td></tr>
<tr><td scope="row" class='awrnc'>DB Streams</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8000"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Throughput and errors of interconnect devices (at OS level) </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect device statistics. IP address, public, source, etc. are displayed for each device"><tr><th class="awrbg" scope="col">Device Name</th><th class="awrbg" scope="col">IP Address</th><th class="awrbg" scope="col">Public</th><th class="awrbg" scope="col">Source</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Send Errors</th><th class="awrbg" scope="col">Send Dropped</th><th class="awrbg" scope="col">Send Buffer Overrun</th><th class="awrbg" scope="col">Send Carrier Lost</th><th class="awrbg" scope="col">Receive Mbytes/sec</th><th class="awrbg" scope="col">Receive Errors</th><th class="awrbg" scope="col">Receive Dropped</th><th class="awrbg" scope="col">Receive Buffer Overrun</th><th class="awrbg" scope="col">Receive Frame Errors</th></tr>
<tr><td scope="row" class='awrc'>fg-priv:1</td><td class='awrc'>169.254.31.173</td><td class='awrc'>NO</td><td class='awrc'>&#160;</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8790"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Times are in seconds </li>
<li class="awr"> Affinity objects - Affinity objects mastered at the begin/end snapshot </li>
<li class="awr"> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Times are in seconds. Affinity objects - Affinity objects mastered at the begin/end snapshot. Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Remaster Op</th><th class="awrbg" scope="col">Begin Snap</th><th class="awrbg" scope="col">End Snap</th></tr>
<tr><td scope="row" class='awrc'>remaster ops</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remastered objects</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>replayed locks received</td><td align="right" class='awrc'>26,771</td><td align="right" class='awrc'>26,771.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>replayed locks sent</td><td align="right" class='awrnc'>6,991</td><td align="right" class='awrnc'>6,991.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resources cleaned</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remaster time (s)</td><td align="right" class='awrnc'>1.5</td><td align="right" class='awrnc'>1.46</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>freeze time (s)</td><td align="right" class='awrc'>0.0</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cleanup time (s)</td><td align="right" class='awrnc'>0.1</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>replay time (s)</td><td align="right" class='awrc'>0.1</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fixwrite time (s)</td><td align="right" class='awrnc'>0.1</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sync time (s)</td><td align="right" class='awrc'>1.2</td><td align="right" class='awrc'>1.20</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>affinity objects</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td></tr>
<tr><td scope="row" class='awrc'>read-mostly objects</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>affinity objects (other inst)</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>14</td></tr>
<tr><td scope="row" class='awrc'>read-mostly objects (persistent)</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>
Report written to awr.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

WORKLOAD REPOSITORY REPORT (RAC)

Database Summary
~~~~~~~~~~~~~~~~
				   Database					   Snapshot Ids     Number of Instances     Number of Hosts	Report Total (minutes)
-----------------------------------------------------------------------------	-----------------   ------------------	 ------------------   ------------------------
	 Id Name      Unique Name Role		   Edition RAC CDB Block Size	   Begin      End   In Report	 Total	 In Report    Total	  DB time Elapsed time
----------- --------- ----------- ---------------- ------- --- --- ----------	-------- --------   --------- --------	 --------- --------   ----------- ------------
 3393773525 P30DB     p30db	  PRIMARY	   EE	   YES NO	 8192	      81       82	    2	     2		 2	  2	   304.51	 10.19
Database Instances Included In Report
-> Listed in order of instance number, I#
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
																      Avg Active
  I# Instance  Host	  Startup	  Begin Snap Time End Snap Time   Release	  Elapsed Time(min) DB time(min) Up Time(hrs)	Sessions Platform
---- --------- ---------- --------------- --------------- --------------- --------------- ----------------- ------------ ------------ ---------- ---------------
   1 p30db1    mcracpoc1. 08-Feb-20 07:52 08-Feb-20 17:33 08-Feb-20 17:43 19.0.0.0.0		      10.18	  133.45	 9.85	   13.11 Linux x86 64-bi
   2 p30db2    mcracpoc2. 08-Feb-20 07:52 08-Feb-20 17:33 08-Feb-20 17:43 19.0.0.0.0		      10.18	  171.06	 9.85	   16.80 Linux x86 64-bi

Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name		       Begin Snap Time End Snap Time
---------------------------------------- ------- ------ ------------------------------ --------------- ---------------
Top SQL Statements			   29.90  99.62 ADDM:3393773525_82	       08-Feb-20 17:33 08-Feb-20 17:43
"User I/O" wait Class			   29.90  60.48 ADDM:3393773525_82	       08-Feb-20 17:33 08-Feb-20 17:43
"Configuration" Wait Class		   29.90  30.95 ADDM:3393773525_82	       08-Feb-20 17:33 08-Feb-20 17:43
Free Buffer Waits			   29.90  30.95 ADDM:3393773525_82	       08-Feb-20 17:33 08-Feb-20 17:43
Top Segments by "User I/O" and "Cluster"   29.90  15.27 ADDM:3393773525_82	       08-Feb-20 17:33 08-Feb-20 17:43
Cache Sizes
-> All values are in Megabytes
-> Listed in order of instance number, I#
-> End values displayed only if different from Begin values
~~~~~~~~~~~
	 Memory Target	       Sga Target	    DB Cache	      Shared Pool	   Large Pool	       Java Pool	  Streams Pool	       PGA Target
       -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------
  I#	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End   Log Buffer
----   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   ----------
   1			      9,664		  8,000 	      1,440		     64 						      3,232		     19.4
   2			      9,664		  7,872    7,840      1,568    1,600	     64 						      3,232		     19.4
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~
 Avg			      9,664		  7,936    7,840      1,504    1,600	     64 						      3,232		     19.4
 Min			      9,664		  7,872    7,840      1,440    1,600	     64 						      3,232		     19.4
 Max			      9,664		  8,000    7,840      1,568    1,600	     64 						      3,232		     19.4

OS Statistics By Instance		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Listed in order of instance number, I#
-> End values are diplayed only if different from begin values

	      CPU		Load			  % CPU 				  Time (s)			 Memory 	    End Values
       -----------------   -------------   ----------------------------------	--------------------------------------------   ----------   -------------------------
  I#   #CPUs #Core #Sckt    Begin    End   % Busy  % Usr  % Sys  % WIO	% Idl		  Busy		 Idle	       Total	       MB   #CPU #Cor #Sck Memory (M)
----   ----- ----- -----   ------ ------   ------ ------ ------ ------ ------	-------------- -------------- --------------   ----------   ---- ---- ---- ----------
   1	   8	 4     1      7.2    5.0     30.8    7.6   14.8   25.1	 69.2	       1,360.2	      3,055.6	     4,415.9	 32,156.0
   2	   8	 4     1      8.0   10.5     29.5    7.2   14.2   57.0	 70.5	       1,327.3	      3,168.5	     4,495.8	 32,156.0
 ~~~										~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum										       2,687.5	      6,224.2	     8,911.7
			  --------------------------------------------------------------------------------------------------------------------


Time Model				   DB/Inst: P30DB/p30db1  Snaps: 81-82

					 SQL Exec		     Hard Parse
  I#	DB time (s)	DB CPU (s)	  Ela (s)  Parse Ela (s)	Ela (s) PL/SQL Ela (s)	 Java Ela (s)	 bg time (s)	 bg CPU (s)
---- -------------- -------------- -------------- -------------- -------------- -------------- -------------- -------------- --------------
   1	    8,007.2	     507.7	  8,000.8	     8.6	    8.0 	   5.7		  0.0	     2,482.2	      385.5
   2	   10,263.4	     464.3	 10,260.8	     5.9	    5.7 	   2.9		  0.0	     1,242.5	      334.9
 ~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	   18,270.6	     972.0	 18,261.6	    14.5	   13.6 	   8.5		  0.0	     3,724.8	      720.4
 Avg	    9,135.3	     486.0	  9,130.8	     7.2	    6.8 	   4.3		  0.0	     1,862.4	      360.2
 Std	    1,595.4	      30.7	  1,598.1	     1.9	    1.6 	   2.0		  0.0	       876.6	       35.7
			  --------------------------------------------------------------------------------------------------------------------

Time Model - % of DB time		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]

							      % DB time 							      % bg time
		      ----------------------------------------------------------------------------------------- 		   --------------
	    % Total													 % Total
  I#	    DB time	      DB CPU   SQL Exec Ela	 Parse Ela     Hard Parse     PL/SQL Ela       Java Ela 	 bg time	   bg CPU
---- --------------   -------------- -------------- -------------- -------------- -------------- --------------   --------------   --------------
   1	       43.8		 6.3	       99.9	       0.1	      0.1	     0.0	    0.0 	    66.6	     15.5
   2	       56.2		 4.5	      100.0	       0.1	      0.1	     0.0	    0.0 	    33.4	     27.0
 ~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~
 Avg	       50.0		 5.4	       99.9	       0.1	      0.1	     0.0	    0.0 	    50.0	     21.2
			  --------------------------------------------------------------------------------------------------------------------


Foreground Wait Classes -  % of Total DB timeDB/Inst: P30DB/p30db1  Snaps: 81-
-> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time

	  User I/O	 Sys I/O	 Other	      Applic	    Commit	 Network      Concurcy	      Config	   Cluster	   Admin     Scheduler	      DB CPU
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------
	      60.5	     0.0	   0.1		 0.0	       0.0	     0.0	   0.0		30.9	       5.3	     N/A	   N/A		 5.3
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes 		   DB/Inst: P30DB/p30db1  Snaps: 81-82

  I#   User I/O(s)    Sys I/O(s)      Other(s)	  Applic (s)	Commit (s)   Network (s)  Concurcy (s)	  Config (s)   Cluster (s)     Admin (s) Scheduler (s)	  DB CPU (s)	    DB time
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- --------------
   1	   1,722.1	     0.1	   2.4		 0.0	       3.8	     0.0	   0.7	     5,654.0	     312.1	     N/A	   N/A	       507.7	    8,007.2
   2	   9,327.2	     0.0	  10.7		 0.0	       1.1	     0.0	   0.0		 0.0	     647.5	     N/A	   N/A	       464.3	   10,263.4
 ~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	  11,049.4	     0.1	  13.1		 0.0	       4.9	     0.0	   0.7	     5,654.0	     959.7	     0.0	   0.0	       972.0	   18,270.6
 Avg	   5,524.7	     0.0	   6.6		 0.0	       2.5	     0.0	   0.3	     2,827.0	     479.8	     N/A	   N/A	       486.0	    9,135.3
 Std	   5,377.6	     0.0	   5.9		 0.0	       2.0	     0.0	   0.5	     3,998.0	     237.2	     N/A	   N/A		30.7	    1,595.4
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes -  % of DB time    DB/Inst: P30DB/p30db1  Snaps: 81-82
-> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time

										      % DB time
       -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
																						       % Total
  I#	    User I/O	   Sys I/O	   Other	Applic	      Commit	   Network	Concurcy	Config	     Cluster	     Admin     Scheduler	DB CPU	       DB time
----   ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------	 -------------
   1		21.5	       0.0	     0.0	   0.0		 0.0	       0.0	     0.0	  70.6		 3.9	       N/A	     N/A	   6.3		  43.8
   2		90.9	       0.0	     0.1	   0.0		 0.0	       0.0	     0.0	   0.0		 6.3	       N/A	     N/A	   4.5		  56.2
 ~~~   ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~
 Avg		56.2	       0.0	     0.1	   0.0		 0.0	       0.0	     0.0	  35.3		 5.1	       N/A	     N/A	   5.4
			  --------------------------------------------------------------------------------------------------------------------


Top Timed Events			   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time '	       : Per-instance 'Wait Time Avg ' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			2,669,388	0.0	  11,057.55   4.14ms	60.52	    4.82ms     1.09ms	  8.54ms     5.27ms    2
       Configurat free buffer waits				  615,359	0.0	   5,630.79   9.15ms	70.32	    9.15ms     9.15ms	  9.15ms	       1
       System I/O log file parallel write			   37,687	0.0	   1,648.34  43.74ms	 9.02	   62.55ms    22.86ms	102.24ms    56.13ms    2
		  DB CPU					      N/A	N/A	     972.00		 5.32						       2
       Cluster	  gc current grant 2-way			1,157,717	0.0	     750.54 648.29us	 4.11	  639.23us   584.60us	693.86us    77.25us    2
       Other	  LGWR any worker group 			   18,530	0.0	     639.85  34.53ms	 3.50	   33.87ms    13.13ms	 54.60ms    29.32ms    2
       System I/O db file parallel write			   56,736	0.0	     117.70   2.07ms	 0.64	    1.61ms	.99ms	  2.24ms   884.57us    2
       Other	  LGWR worker group ordering			    6,911	0.0	     117.04  16.93ms	 0.64	   15.80ms     6.34ms	 25.27ms    13.39ms    2
       Cluster	  gc current grant busy 			   59,460	0.0	      79.01   1.33ms	 0.43	    1.29ms     1.23ms	  1.35ms    88.84us    2
       Cluster	  gc current grant read-mostly invalidatio	   53,538	0.0	      76.60   1.43ms	 0.42	    1.43ms     1.43ms	  1.43ms	       2

   1   Configurat free buffer waits				  615,359	0.0	   5,630.79   9.15ms	70.32
       User I/O   db file sequential read			1,576,171	0.0	   1,722.23   1.09ms	21.51
       System I/O log file parallel write			    9,911	0.0	   1,013.30 102.24ms	12.65
       Other	  LGWR any worker group 			    9,562	0.0	     522.08  54.60ms	 6.52
		  DB CPU					      N/A	N/A	     507.71		 6.34
       Cluster	  gc current grant 2-way			  482,818	0.0	     282.26 584.60us	 3.53
       Other	  LGWR worker group ordering			    3,868	0.0	      97.76  25.27ms	 1.22
       Configurat write complete waits				       44	0.0	      32.05 728.43ms	 0.40
       System I/O control file parallel write			      315	0.0	      30.01  95.26ms	 0.37
       Other	  LGWR all worker groups			      228	0.0	      24.15 105.92ms	 0.30

   2   User I/O   db file sequential read			1,093,217	0.0	   9,335.31   8.54ms	90.96
       System I/O log file parallel write			   27,776	0.0	     635.04  22.86ms	 6.19
       Cluster	  gc current grant 2-way			  674,899	0.0	     468.28 693.86us	 4.56
		  DB CPU					      N/A	N/A	     464.29		 4.52
       Other	  LGWR any worker group 			    8,968	0.0	     117.78  13.13ms	 1.15
       System I/O db file parallel write			   49,394	0.0	     110.47   2.24ms	 1.08
       Cluster	  gc current grant read-mostly invalidatio	   53,538	0.0	      76.60   1.43ms	 0.75
       Cluster	  gc current grant busy 			   47,563	0.0	      64.40   1.35ms	 0.63
       Cluster	  gc current block 2-way			   20,064	0.0	      20.70   1.03ms	 0.20
       Other	  LGWR worker group ordering			    3,043	0.0	      19.28   6.34ms	 0.19
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Foreground Events		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Foreground Activity is captured in release 11g and above
-> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			2,667,190	0.0	  11,049.22   4.14ms	60.48	    4.82ms     1.09ms	  8.55ms     5.27ms    2
       Configurat free buffer waits				  614,650	0.0	   5,621.99   9.15ms	70.21	    9.15ms     9.15ms	  9.15ms	       1
		  DB CPU					      N/A	N/A	     972.00		 5.32						       2
       Cluster	  gc current grant 2-way			1,157,673	0.0	     750.51 648.29us	 4.11	  639.23us   584.60us	693.86us    77.26us    2
       Cluster	  gc current grant busy 			   59,280	0.0	      78.91   1.33ms	 0.43	    1.29ms     1.23ms	  1.36ms    90.76us    2
       Cluster	  gc current grant read-mostly invalidatio	   53,538	0.0	      76.60   1.43ms	 0.75	    1.43ms     1.43ms	  1.43ms	       1
       Configurat write complete waits				       44	0.0	      32.05 728.43ms	 0.40	  728.43ms   728.43ms	728.43ms	       1
       Cluster	  gc current block 2-way			   19,121	0.0	      20.11   1.05ms	 0.11	  917.31us   771.16us	  1.06ms   206.68us    2
       Cluster	  gc current block busy 			   15,442	0.0	      11.79 763.19us	 0.06	  787.43us   713.45us	861.42us   104.63us    2
       Other	  buffer exterminate				      926      99.8	       9.22   9.95ms	 0.09	    9.95ms     9.95ms	  9.95ms	       1

   1   Configurat free buffer waits				  614,650	0.0	   5,621.99   9.15ms	70.21
       User I/O   db file sequential read			1,576,022	0.0	   1,722.00   1.09ms	21.51
		  DB CPU					      N/A	N/A	     507.71		 6.34
       Cluster	  gc current grant 2-way			  482,814	0.0	     282.25 584.60us	 3.53
       Configurat write complete waits				       44	0.0	      32.05 728.43ms	 0.40
       Cluster	  gc current grant busy 			   11,891	0.0	      14.61   1.23ms	 0.18
       Cluster	  gc current block lost 				5	0.0	       4.78 956.15ms	 0.06
       Cluster	  gc current block busy 			    5,191	0.0	       4.47 861.42us	 0.06
       Commit	  log file sync 				       15	0.0	       3.84 256.26ms	 0.05
       Cluster	  gc buffer busy release			       20	0.0	       2.74 137.24ms	 0.03

   2   User I/O   db file sequential read			1,091,168	0.0	   9,327.22   8.55ms	90.88
       Cluster	  gc current grant 2-way			  674,859	0.0	     468.26 693.86us	 4.56
		  DB CPU					      N/A	N/A	     464.29		 4.52
       Cluster	  gc current grant read-mostly invalidatio	   53,538	0.0	      76.60   1.43ms	 0.75
       Cluster	  gc current grant busy 			   47,389	0.0	      64.30   1.36ms	 0.63
       Cluster	  gc current block 2-way			   18,348	0.0	      19.51   1.06ms	 0.19
       Other	  buffer exterminate				      926      99.8	       9.22   9.95ms	 0.09
       Cluster	  gc current block busy 			   10,251	0.0	       7.31 713.45us	 0.07
       Cluster	  gc current grant congested			    1,176	0.0	       6.52   5.54ms	 0.06
       Cluster	  gc current block lost 				5	0.0	       2.29 458.50ms	 0.02
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Background Events		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> % of bg time: % of background elapsed time
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   System I/O log file parallel write			   37,680	0.0	   1,647.85  43.73ms	44.24	   62.54ms    22.86ms	102.21ms    56.11ms    2
		  background cpu time				      N/A	N/A	     720.43		19.34						       2
       Other	  LGWR any worker group 			   18,529	0.0	     639.60  34.52ms	17.17	   33.86ms    13.13ms	 54.58ms    29.31ms    2
       System I/O db file parallel write			   56,787	0.0	     117.75   2.07ms	 3.16	    1.61ms	.99ms	  2.24ms   883.78us    2
       Other	  LGWR worker group ordering			    6,910	0.0	     116.78  16.90ms	 3.14	   15.77ms     6.34ms	 25.21ms    13.35ms    2
       System I/O control file parallel write			      596	0.0	      34.43  57.78ms	 0.92	   55.51ms    15.76ms	 95.26ms    56.21ms    2
       Other	  LGWR all worker groups			      451	0.0	      30.75  68.18ms	 0.83	   67.76ms    29.61ms	105.92ms    53.96ms    2
       Applicatio enq: RO - fast object reuse			      257	0.0	      14.78  57.50ms	 0.40	   43.12ms   646.28us	 85.60ms    60.07ms    2
       Configurat free buffer waits				      709	0.0	       8.80  12.41ms	 0.35	   12.41ms    12.41ms	 12.41ms	       1
       User I/O   db file sequential read			    2,200	0.0	       8.32   3.78ms	 0.22	    2.76ms     1.57ms	  3.95ms     1.68ms    2

   1   System I/O log file parallel write			    9,910	0.0	   1,012.92 102.21ms	40.81
       Other	  LGWR any worker group 			    9,561	0.0	     521.83  54.58ms	21.02
		  background cpu time				      N/A	N/A	     385.49		15.53
       Other	  LGWR worker group ordering			    3,867	0.0	      97.50  25.21ms	 3.93
       System I/O control file parallel write			      315	0.0	      30.01  95.26ms	 1.21
       Other	  LGWR all worker groups			      228	0.0	      24.15 105.92ms	 0.97
       Configurat free buffer waits				      709	0.0	       8.80  12.41ms	 0.35
       System I/O db file parallel write			    7,341	0.0	       7.23    .99ms	 0.29
       Other	  gcs log flush sync				    5,921	0.0	       4.75 802.17us	 0.19
       Other	  ASM file metadata operation			    3,359	0.0	       2.52 750.27us	 0.10

   2   System I/O log file parallel write			   27,770	0.0	     634.92  22.86ms	51.10
		  background cpu time				      N/A	N/A	     334.94		26.96
       Other	  LGWR any worker group 			    8,968	0.0	     117.78  13.13ms	 9.48
       System I/O db file parallel write			   49,446	0.0	     110.51   2.24ms	 8.89
       Other	  LGWR worker group ordering			    3,043	0.0	      19.28   6.34ms	 1.55
       Applicatio enq: RO - fast object reuse			      172	0.0	      14.72  85.60ms	 1.18
       User I/O   db file sequential read			    2,051	0.0	       8.09   3.95ms	 0.65
       Other	  LGWR all worker groups			      223	0.0	       6.60  29.61ms	 0.53
       Cluster	  gc current block busy 			      363	0.0	       4.83  13.30ms	 0.39
       System I/O control file parallel write			      281	0.0	       4.43  15.76ms	 0.36
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
User I/O   db file sequential read			 2,667,190	 0.0	   11,049.22   4.14ms	 60.48	     4.82ms	1.09ms	   8.55ms     5.27ms
Configurat free buffer waits				   614,650	 0.0	    5,621.99   9.15ms	 30.77	     9.15ms	9.15ms	   9.15ms
Cluster    gc current grant 2-way			 1,157,673	 0.0	      750.51 648.29us	  4.11	   639.23us   584.60us	 693.86us    77.26us
Cluster    gc current grant busy			    59,280	 0.0	       78.91   1.33ms	  0.43	     1.29ms	1.23ms	   1.36ms    90.76us
Cluster    gc current grant read-mostly invalidatio	    53,538	 0.0	       76.60   1.43ms	  0.42	     1.43ms	1.43ms	   1.43ms
Configurat write complete waits 				44	 0.0	       32.05 728.43ms	  0.18	   728.43ms   728.43ms	 728.43ms
Cluster    gc current block 2-way			    19,121	 0.0	       20.11   1.05ms	  0.11	   917.31us   771.16us	   1.06ms   206.68us
Cluster    gc current block busy			    15,442	 0.0	       11.79 763.19us	  0.06	   787.43us   713.45us	 861.42us   104.63us
Other	   buffer exterminate				       926	99.8		9.22   9.95ms	  0.05	     9.95ms	9.95ms	   9.95ms
Cluster    gc current grant congested			     1,575	 0.0		7.97   5.06ms	  0.04	     4.59ms	3.65ms	   5.54ms     1.34ms
Cluster    gc current block lost				10	 0.0		7.07 707.33ms	  0.04	   707.33ms   458.50ms	 956.15ms   351.89ms
Commit	   log file sync					33	 0.0		4.93 149.38ms	  0.03	   158.29ms    60.32ms	 256.26ms   138.55ms
Cluster    gc buffer busy release				20	 0.0		2.74 137.24ms	  0.02	   137.24ms   137.24ms	 137.24ms
Cluster    gc cr grant 2-way				     3,331	 0.0		2.14 643.95us	  0.01	   641.77us   575.15us	 708.39us    94.22us
Other	   reliable message					 1	 0.0		1.28 1281.65m	  0.01	  1281.65ms  1281.65ms	1281.65ms
Cluster    gc current block congested				79	 0.0		1.20  15.22ms	  0.01	     9.73ms	3.94ms	  15.52ms     8.19ms
Other	   gcs drm freeze in enter server mode			 7	 0.0		0.66  94.20ms	  0.00	    94.20ms    94.20ms	  94.20ms
Other	   KJC: Wait for msg sends to complete		     1,567	 0.0		0.50 319.34us	  0.00	   274.74us   140.09us	 409.40us   190.43us
Other	   IPC send completion sync			       525	 0.0		0.39 734.92us	  0.00	   772.39us   732.65us	 812.13us    56.21us
Concurrenc cursor: pin S wait on X				 9	 0.0		0.30  33.67ms	  0.00	    33.67ms    33.67ms	  33.67ms
Cluster    gc cr grant busy				       242	 0.0		0.27   1.10ms	  0.00	     1.01ms   901.05us	   1.12ms   151.42us
Other	   PX Deq: Slave Session Stats			       344	 0.0		0.25 731.15us	  0.00	   731.15us   245.13us	   1.22ms   687.34us
Concurrenc library cache load lock				38	 0.0		0.23   5.96ms	  0.00	     3.18ms    67.50us	   6.29ms     4.40ms
Cluster    gc cr block busy					 9	 0.0		0.19  20.76ms	  0.00	    20.76ms    20.76ms	  20.76ms
Other	   enq: PS - contention 			       172	 0.0		0.14 837.55us	  0.00	     1.00ms   827.63us	   1.17ms   241.39us
Other	   kksfbc child completion				 2     100.0		0.10  49.73ms	  0.00	    49.73ms    49.65ms	  49.81ms   106.77us
Other	   PX Deq: reap credit				     2,695     100.0		0.09  32.79us	  0.00	    37.17us    32.64us	  41.70us     6.41us
Other	   lock escalate retry					 8     100.0		0.08   9.91ms	  0.00	     9.91ms	9.91ms	   9.91ms
Cluster    gc cr block 2-way					92	 0.0		0.07 759.73us	  0.00	   712.67us   662.33us	 763.01us    71.19us
User I/O   direct path write					 3	 0.0		0.07  22.44ms	  0.00	    22.44ms    22.44ms	  22.44ms
Concurrenc library cache lock					72	 2.8		0.06 860.29us	  0.00	     1.06ms   835.49us	   1.28ms   315.73us
System I/O control file sequential read 		       172	 0.0		0.06 347.34us	  0.00	   287.04us   206.00us	 368.07us   114.60us
Concurrenc library cache pin					69	 0.0		0.06 853.90us	  0.00	   726.17us   576.80us	 875.55us   211.25us
User I/O   Disk file Mirror Read				44	 0.0		0.06   1.26ms	  0.00	     1.17ms	1.05ms	   1.29ms   169.12us
Other	   DLM cross inst call completion			65	 0.0		0.05 766.52us	  0.00	   827.60us   757.95us	 897.25us    98.50us
Other	   latch free					       139	 0.0		0.05 337.16us	  0.00	   336.21us   309.75us	 362.67us    37.42us
Other	   latch: gc element					76	 0.0		0.05 604.33us	  0.00	   607.73us   478.64us	 736.81us   182.55us
Other	   latch: gcs resource hash				97	 0.0		0.04 418.76us	  0.00	   419.21us   404.72us	 433.70us    20.49us
Other	   latch: redo allocation			       138	 0.0		0.04 290.81us	  0.00	   303.24us   275.58us	 330.89us    39.11us
Other	   latch: object queue header operation 		61	 0.0		0.03 548.13us	  0.00	   481.85us   408.33us	 555.36us   103.97us
Other	   latch: cache buffers lru chain		       150	 0.0		0.03 219.37us	  0.00	   264.18us   213.26us	 315.11us    72.02us
Concurrenc row cache lock					18     100.0		0.03   1.48ms	  0.00	     1.48ms	1.48ms	   1.48ms
Cluster    gc remaster						 3	 0.0		0.03   8.39ms	  0.00	     8.39ms	8.39ms	   8.39ms
Other	   CSS initialization					 4	 0.0		0.02   5.56ms	  0.00	     5.56ms	5.56ms	   5.56ms
Other	   latch: enqueue hash chains				49	 0.0		0.02 432.31us	  0.00	   416.29us   304.14us	 528.43us   158.59us
Other	   PGA memory operation 			       703	 0.0		0.02  29.95us	  0.00	    29.66us    28.23us	  31.09us     2.02us
Other	   enq: TO - contention 				20	 0.0		0.02	.99ms	  0.00	     1.00ms   909.00us	   1.08ms   122.64us
Cluster    gc cr multi block mixed				15	 0.0		0.02   1.24ms	  0.00	     1.28ms	1.19ms	   1.37ms   124.50us
Cluster    gc cr block congested				 2	 0.0		0.02   8.01ms	  0.00	     8.01ms	8.01ms	   8.01ms
Cluster    gc cr grant congested				 4	 0.0		0.01   3.49ms	  0.00	     3.20ms	2.61ms	   3.79ms   832.26us
Other	   enq: FB - contention 				12	 0.0		0.01   1.08ms	  0.00	     1.08ms	1.08ms	   1.08ms
User I/O   db file scattered read				 6	 0.0		0.01   2.05ms	  0.00	     2.05ms   359.67us	   3.73ms     2.39ms
Other	   latch: call allocation				 3	 0.0		0.01   3.38ms	  0.00	     3.38ms	3.38ms	   3.38ms
Applicatio SQL*Net break/reset to client		       122	 0.0		0.01  80.60us	  0.00	    80.60us    80.60us	  80.60us
Other	   enq: WF - contention 				11	 0.0		0.01 882.00us	  0.00	   882.00us   882.00us	 882.00us
Other	   enq: WT - contention 				10	 0.0		0.01 881.90us	  0.00	   881.90us   881.90us	 881.90us
User I/O   direct path read					 9	 0.0		0.01 903.56us	  0.00	   903.56us   903.56us	 903.56us
Concurrenc latch: cache buffers chains				11	 0.0		0.01 523.73us	  0.00	   410.86us   233.50us	 588.22us   250.83us
Other	   CSS operation: action				 4	 0.0		0.01   1.31ms	  0.00	     1.31ms	1.31ms	   1.31ms
Concurrenc latch: shared pool					 8	 0.0		0.00 564.25us	  0.00	   554.67us   535.50us	 573.83us    27.11us
Foreground Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Other	   enq: TT - contention 				 3	 0.0		0.00   1.32ms	  0.00	     1.32ms	1.32ms	   1.32ms
Other	   CSS operation: query 				12	 0.0		0.00 294.17us	  0.00	   294.17us   294.17us	 294.17us
Other	   name-service call wait				 2	 0.0		0.00   1.75ms	  0.00	     1.75ms	1.75ms	   1.75ms
Configurat enq: HW - contention 				 3	 0.0		0.00   1.04ms	  0.00	     1.04ms	1.04ms	   1.04ms
Cluster    gc current multi block request			 2	 0.0		0.00   1.55ms	  0.00	     1.55ms	1.55ms	   1.55ms
Other	   PX qref latch				       157     100.0		0.00  17.97us	  0.00	    17.97us    17.97us	  17.97us
Cluster    gc current retry					 3	 0.0		0.00 938.33us	  0.00	   938.33us   938.33us	 938.33us
Concurrenc library cache: mutex X				 8	 0.0		0.00 340.88us	  0.00	   340.88us   340.88us	 340.88us
Other	   ges enter server mode			       231	 0.0		0.00   8.40us	  0.00	     8.39us	8.18us	   8.60us   296.86ns
Other	   latch: undo global data				 4	 0.0		0.00 420.00us	  0.00	   420.00us   420.00us	 420.00us
User I/O   Disk file operations I/O				25	 0.0		0.00  61.04us	  0.00	    40.79us    11.00us	  70.57us    42.12us
Other	   enq: AF - task serialization 			 1	 0.0		0.00   1.33ms	  0.00	     1.33ms	1.33ms	   1.33ms
Network    SQL*Net message to client			       197	 0.0		0.00   6.09us	  0.00	     6.47us	5.84us	   7.10us   895.99ns
Cluster    gc buffer busy acquire				 2	 0.0		0.00 568.50us	  0.00	   568.50us   567.00us	 570.00us     2.12us
Other	   latch: kjci process context latch			 1	 0.0		0.00 804.00us	  0.00	   804.00us   804.00us	 804.00us
User I/O   ASM IO for non-blocking poll 			34	 0.0		0.00  19.06us	  0.00	    19.06us    19.06us	  19.06us
Applicatio enq: PW - flush prewarm buffers			 1     100.0		0.00 638.00us	  0.00	   638.00us   638.00us	 638.00us
Applicatio enq: TM - contention 				 1	 0.0		0.00 624.00us	  0.00	   624.00us   624.00us	 624.00us
Other	   lock deadlock retry					10     100.0		0.00  56.40us	  0.00	    56.40us    14.60us	  98.20us    59.11us
Network    IPC group service call				12	 0.0		0.00  10.17us	  0.00	    10.29us	9.57us	  11.00us     1.01us
Other	   AWR Flush						 4	 0.0		0.00   6.00us	  0.00	     6.00us	6.00us	   6.00us
Other	   ges resource directory to be unfrozen		 2	 0.0		0.00   6.00us	  0.00	     6.00us	6.00us	   6.00us
Other	   asynch descriptor resize				 1     100.0		0.00  11.00us	  0.00	    11.00us    11.00us	  11.00us
Idle	   watchdog main loop				     1,627	 0.0	    4,884.02 3001.86m	 26.73	  3001.85ms  3000.01ms	3003.69ms     2.60ms
Idle	   SQL*Net message from client			       197	 0.0	      610.13 3097.10m	  3.34	  1931.10ms   832.18us	3861.37ms  2729.81ms
Idle	   PX Deq: Execution Msg			     1,031	 0.0		5.81   5.63ms	  0.03	     5.63ms	1.89ms	   9.37ms     5.29ms
Idle	   PX Deq: Msg Fragment 			       592	 0.0		0.34 575.93us	  0.00	   575.93us   521.10us	 630.75us    77.53us
Idle	   PX Deq Credit: send blkd			       323	 0.0		0.34   1.04ms	  0.00	     1.08ms   884.29us	   1.27ms   275.14us
Idle	   PX Deq Credit: need buffer				17	 0.0		0.01 572.29us	  0.00	   572.29us   572.29us	 572.29us
			  --------------------------------------------------------------------------------------------------------------------

Background Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
System I/O log file parallel write			    37,680	 0.0	    1,647.85  43.73ms	  0.44	    62.54ms    22.86ms	 102.21ms    56.11ms
Other	   LGWR any worker group			    18,529	 0.0	      639.60  34.52ms	  0.17	    33.86ms    13.13ms	  54.58ms    29.31ms
System I/O db file parallel write			    56,787	 0.0	      117.75   2.07ms	  0.03	     1.61ms	 .99ms	   2.24ms   883.78us
Other	   LGWR worker group ordering			     6,910	 0.0	      116.78  16.90ms	  0.03	    15.77ms	6.34ms	  25.21ms    13.35ms
System I/O control file parallel write			       596	 0.0	       34.43  57.78ms	  0.01	    55.51ms    15.76ms	  95.26ms    56.21ms
Other	   LGWR all worker groups			       451	 0.0	       30.75  68.18ms	  0.01	    67.76ms    29.61ms	 105.92ms    53.96ms
Applicatio enq: RO - fast object reuse			       257	 0.0	       14.78  57.50ms	  0.00	    43.12ms   646.28us	  85.60ms    60.07ms
Configurat free buffer waits				       709	 0.0		8.80  12.41ms	  0.00	    12.41ms    12.41ms	  12.41ms
User I/O   db file sequential read			     2,200	 0.0		8.32   3.78ms	  0.00	     2.76ms	1.57ms	   3.95ms     1.68ms
Other	   gcs log flush sync				     8,295	 0.0		6.96 839.48us	  0.00	   867.36us   802.17us	 932.55us    92.19us
Other	   ASM file metadata operation			     6,806	 0.0		5.56 817.23us	  0.00	   816.37us   750.27us	 882.47us    93.48us
Other	   KSV master wait				     3,203	28.5		5.50   1.72ms	  0.00	     1.71ms	1.56ms	   1.86ms   209.72us
Cluster    gc current block busy			       390	 0.0		4.85  12.42ms	  0.00	     7.00ms   711.93us	  13.30ms     8.90ms
User I/O   Disk file Mirror Read			     1,655	 0.0		3.71   2.24ms	  0.00	     2.19ms   744.83us	   3.64ms     2.05ms
Other	   SGA: allocation forcing component growth		 6	 0.0		3.21 534.76ms	  0.00	   534.76ms   534.76ms	 534.76ms
Other	   enq: CF - contention 			       130	46.9		3.19  24.53ms	  0.00	    27.04ms    16.85ms	  37.24ms    14.42ms
Other	   IMR slave acknowledgement msg		     3,666	 0.0		3.00 819.30us	  0.00	   820.10us   332.10us	   1.31ms   690.13us
System I/O control file sequential read 		     6,971	 0.0		2.84 407.35us	  0.00	   403.92us   258.78us	 549.06us   205.26us
User I/O   ASM IO for non-blocking poll 		    62,582	 0.0		2.78  44.43us	  0.00	    91.79us    29.26us	 154.33us    88.44us
Cluster    gc cr block busy					71	 0.0		2.52  35.52ms	  0.00	    70.32ms    26.98ms	 113.67ms    61.30ms
Cluster    gc cr block lost					 5	 0.0		2.21 442.57ms	  0.00	   442.57ms   442.57ms	 442.57ms
Other	   Sync ASM rebalance				       108	 0.0		1.99  18.44ms	  0.00	    18.44ms    16.51ms	  20.38ms     2.74ms
User I/O   Parameter File I/O					56	 0.0		1.86  33.18ms	  0.00	    33.18ms    33.18ms	  33.18ms
System I/O log file sequential read			     1,097	 0.0		1.86   1.69ms	  0.00	     1.69ms	1.27ms	   2.11ms   590.95us
Other	   reliable message				       269	 0.0		1.44   5.37ms	  0.00	    13.33ms	4.30ms	  22.37ms    12.78ms
Cluster    gc current block 2-way			     1,870	 0.0		1.30 694.25us	  0.00	   724.37us   688.81us	 759.92us    50.28us
Cluster    gc cr block 2-way				     1,658	 0.0		1.08 648.57us	  0.00	   662.68us   636.87us	 688.50us    36.51us
User I/O   direct path write temp				53	 0.0		0.83  15.63ms	  0.00	    18.74ms    15.51ms	  21.98ms     4.58ms
Cluster    gc cr multi block mixed				87	 0.0		0.83   9.52ms	  0.00	    36.57ms	1.44ms	  71.69ms    49.67ms
Other	   PX Deq: reap credit				    29,030     100.0		0.81  27.96us	  0.00	    28.05us    27.47us	  28.63us   819.16ns
Other	   ges lms sync during dynamic remastering		65	49.2		0.80  12.34ms	  0.00	    13.30ms	6.36ms	  20.24ms     9.81ms
Applicatio enq: TM - contention 				 3	 0.0		0.77 256.94ms	  0.00	   192.84ms   552.00us	 385.13ms   271.94ms
Cluster    gc buffer busy acquire				 6	 0.0		0.70 116.68ms	  0.00	   116.68ms	1.11ms	 232.25ms   163.45ms
Other	   PX Deq: Join ACK				       344	 0.0		0.66   1.92ms	  0.00	     2.27ms	1.90ms	   2.63ms   513.71us
System I/O db file async I/O submit			    57,065	 0.0		0.51   8.94us	  0.00	     9.02us	8.92us	   9.13us   152.01ns
Cluster    gc cr grant 2-way				       745	 0.0		0.42 570.15us	  0.00	   628.63us   559.36us	 697.90us    97.96us
Other	   CGS wait for IPC msg 			    13,365     100.0		0.37  27.72us	  0.00	    27.72us    27.14us	  28.31us   825.13ns
User I/O   Disk file operations I/O			     1,130	 0.0		0.37 327.03us	  0.00	   328.64us   258.39us	 398.89us    99.35us
Other	   AQ: RAC AQ Network				    12,204     100.0		0.35  29.06us	  0.00	    29.06us    28.76us	  29.36us   425.54ns
Cluster    gc buffer busy release				10	 0.0		0.34  34.24ms	  0.00	    34.24ms    34.24ms	  34.24ms
Other	   DFS lock handle				       560     100.0		0.33 587.49us	  0.00	   589.13us   556.36us	 621.91us    46.35us
Other	   gcs remastering wait for read latch			11	 0.0		0.30  27.45ms	  0.00	    26.96ms    25.20ms	  28.73ms     2.49ms
Other	   ges message buffer allocation			 1	 0.0		0.30 299.75ms	  0.00	   299.75ms   299.75ms	 299.75ms
Other	   KJC: Wait for msg sends to complete		     2,149	97.3		0.29 133.88us	  0.00	   195.70us   132.53us	 258.87us    89.33us
Other	   latch free					     1,269	 0.0		0.28 221.37us	  0.00	   221.00us   193.33us	 248.68us    39.14us
Other	   DLM cross inst call completion		       272	 0.0		0.22 819.32us	  0.00	   796.08us   755.03us	 837.13us    58.05us
Other	   enq: PS - contention 			       224	 5.4		0.19 856.16us	  0.00	   830.95us   803.00us	 858.91us    39.53us
Other	   oracle thread bootstrap				 7	 0.0		0.19  27.15ms	  0.00	    27.24ms    26.66ms	  27.82ms   822.25us
Commit	   log file sync					 1	 0.0		0.17 174.51ms	  0.00	   174.51ms   174.51ms	 174.51ms
Other	   kjctssqmg: quick message send wait		       296     100.0		0.14 459.18us	  0.00	   459.18us   459.18us	 459.18us
Concurrenc library cache lock				       143	 0.0		0.11 790.45us	  0.00	   811.86us   749.36us	 874.36us    88.39us
Concurrenc library cache pin				       152	 0.0		0.11 698.45us	  0.00	   710.79us   663.91us	 757.68us    66.31us
Other	   IPC send completion sync			     1,400	87.3		0.10  72.83us	  0.00	    68.56us    32.94us	 104.17us    50.36us
Cluster    gc current grant busy			       177	 0.0		0.10 540.97us	  0.00	   615.76us   535.53us	 696.00us   113.47us
Other	   latch: gcs resource hash			       298	 0.0		0.09 303.85us	  0.00	   315.31us   270.38us	 360.23us    63.54us
Other	   LGWR wait for redo copy			       233	 0.0		0.09 374.75us	  0.00	   486.35us   334.29us	 638.42us   215.05us
Other	   latch: cache buffers lru chain		       331	 0.0		0.09 263.00us	  0.00	   261.30us   258.94us	 263.67us     3.35us
User I/O   direct path write					 7	 0.0		0.08  11.60ms	  0.00	    18.83ms	8.71ms	  28.94ms    14.30ms
Other	   ksxr poll remote instances			     2,486     100.0		0.08  30.28us	  0.00	    30.22us    28.52us	  31.93us     2.41us
User I/O   db file scattered read				36	 0.0		0.08   2.09ms	  0.00	     1.45ms   737.00us	   2.17ms     1.01ms
Background Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Network    IPC group service call			       942	 0.0		0.07  77.97us	  0.00	    77.97us    73.83us	  82.10us     5.85us
Other	   PX Deq: Slave Session Stats			       344	 0.0		0.07 206.82us	  0.00	   250.00us   204.44us	 295.56us    64.43us
Other	   ges inquiry response 				85	 0.0		0.07 806.12us	  0.00	   806.12us   806.12us	 806.12us
Concurrenc latch: shared pool					 5	 0.0		0.05  10.83ms	  0.00	     6.86ms   263.00us	  13.47ms     9.34ms
Other	   CSS operation: data query				36	 0.0		0.05   1.46ms	  0.00	     1.46ms	1.45ms	   1.46ms     7.19us
Cluster    gc current block congested				 8	 0.0		0.05   5.78ms	  0.00	     5.78ms	5.78ms	   5.78ms
Concurrenc row cache lock					36     100.0		0.04   1.12ms	  0.00	     1.13ms   942.84us	   1.32ms   267.94us
User I/O   read by other session				 2	 0.0		0.04  19.38ms	  0.00	    19.38ms    19.38ms	  19.38ms
Other	   CSS operation: data update				40	 0.0		0.04 943.03us	  0.00	   943.03us   863.75us	   1.02ms   112.11us
Other	   latch: redo allocation				89	 0.0		0.03 368.99us	  0.00	   391.91us   350.28us	 433.55us    58.88us
User I/O   direct path read					64	 0.0		0.03 429.92us	  0.00	   429.92us   429.92us	 429.92us
Cluster    gc current grant 2-way				44	 0.0		0.03 619.52us	  0.00	   745.40us   591.55us	 899.25us   217.58us
Cluster    gc cr disk read					32	 0.0		0.02 682.28us	  0.00	   682.28us   682.28us	 682.28us
Other	   latch: gc element					45	 0.0		0.02 441.87us	  0.00	   443.79us   357.17us	 530.41us   122.50us
Other	   enq: WF - contention 				21	 0.0		0.02 886.24us	  0.00	     1.04ms   870.20us	   1.21ms   238.15us
Other	   PX Deq: Signal ACK EXT			       344	 0.0		0.02  53.56us	  0.00	    40.96us    27.67us	  54.26us    18.80us
Other	   enq: TO - contention 				23	 0.0		0.02 799.35us	  0.00	   799.35us   799.35us	 799.35us
Other	   PGA memory operation 			       346	 0.0		0.01  42.15us	  0.00	    42.07us    40.65us	  43.48us     2.00us
Cluster    gc cr grant busy					20	 0.0		0.01 712.75us	  0.00	     1.13ms   666.79us	   1.59ms   649.98us
Concurrenc libcache interrupt action by LCK		     1,929	 0.0		0.01   7.26us	  0.00	     7.33us	6.70us	   7.95us   884.30ns
Other	   os thread creation					 7	 0.0		0.01   1.96ms	  0.00	     2.00ms	1.72ms	   2.29ms   405.17us
Cluster    gc current multi block request			13	 0.0		0.01   1.04ms	  0.00	     1.24ms   866.00us	   1.61ms   524.44us
Other	   enq: CO - master slave det				10     100.0		0.01   1.31ms	  0.00	     1.31ms	1.31ms	   1.31ms
Configurat enq: HW - contention 				13	 0.0		0.01 898.38us	  0.00	   734.58us   541.00us	 928.17us   273.77us
Other	   latch: checkpoint queue latch			34	 0.0		0.01 316.68us	  0.00	   347.25us   273.00us	 421.50us   105.01us
Cluster    gc cr multi block grant				 9	 0.0		0.01   1.03ms	  0.00	     1.00ms   948.00us	   1.04ms    66.56us
Other	   enq: WT - contention 				 8	 0.0		0.01   1.01ms	  0.00	     1.01ms	1.01ms	   1.01ms
Other	   lock deadlock retry				       238     100.0		0.01  28.24us	  0.00	    28.24us    28.24us	  28.24us
Other	   enq: TT - contention 				 7	71.4		0.01 871.71us	  0.00	   898.92us   860.83us	 937.00us    53.86us
Other	   latch: object queue header operation 		12	 0.0		0.01 490.17us	  0.00	   397.36us   286.00us	 508.73us   157.49us
Cluster    gc cr grant congested				 1	 0.0		0.00   2.77ms	  0.00	     2.77ms	2.77ms	   2.77ms
Configurat latch: redo writing					 4	 0.0		0.00 669.25us	  0.00	   669.25us   202.00us	   1.14ms   660.79us
Other	   latch: ges resource hash list			 9	 0.0		0.00 294.89us	  0.00	   281.43us   160.25us	 402.60us   171.37us
Other	   enq: RA - RT ADDM flood control			 3     100.0		0.00 711.00us	  0.00	   702.75us   678.00us	 727.50us    35.00us
Other	   enq: FB - contention 				 2	 0.0		0.00   1.04ms	  0.00	     1.04ms	1.04ms	   1.04ms
Other	   CSS operation: action				 2	 0.0		0.00 940.50us	  0.00	   940.50us   940.50us	 940.50us
Other	   enq: SM -  contention				 2	 0.0		0.00 875.00us	  0.00	   875.00us   875.00us	 875.00us
Other	   enq: TA - contention 				 2	 0.0		0.00 811.00us	  0.00	   811.00us   811.00us	 811.00us
Other	   ges ipc enter server mode			       201	 0.0		0.00   6.25us	  0.00	     6.29us	6.17us	   6.41us   168.80ns
Other	   enq: PE - contention 				 1     100.0		0.00   1.18ms	  0.00	     1.18ms	1.18ms	   1.18ms
Other	   latch: enqueue hash chains				 5	 0.0		0.00 220.80us	  0.00	   224.17us   207.33us	 241.00us    23.81us
Other	   enq: TK - Auto Task Serialization			 2     100.0		0.00 531.50us	  0.00	   531.50us   518.00us	 545.00us    19.09us
User I/O   db file parallel read				 2	 0.0		0.00 529.50us	  0.00	   529.50us   529.50us	 529.50us
Other	   enq: TD - KTF dump entries				 2	 0.0		0.00 503.00us	  0.00	   503.00us   467.00us	 539.00us    50.91us
Other	   enq: AF - task serialization 			 1	 0.0		0.00 886.00us	  0.00	   886.00us   886.00us	 886.00us
Other	   name-service call wait				 1	 0.0		0.00 826.00us	  0.00	   826.00us   826.00us	 826.00us
Applicatio enq: PW - flush prewarm buffers			 1     100.0		0.00 758.00us	  0.00	   758.00us   758.00us	 758.00us
Other	   GCR CSS group query					36	 0.0		0.00  15.19us	  0.00	    15.19us    14.94us	  15.44us   353.55ns
Other	   ges2 LMON to wake up LMD - mrcvr			 9	 0.0		0.00  58.33us	  0.00	    74.82us    45.14us	 104.50us    41.97us
Other	   GCR CSS group update 				36	 0.0		0.00  13.33us	  0.00	    13.33us    12.28us	  14.39us     1.49us
Concurrenc buffer busy waits					 2	 0.0		0.00 225.00us	  0.00	   225.00us   225.00us	 225.00us
Concurrenc latch: cache buffers chains				 2	 0.0		0.00 216.50us	  0.00	   216.50us   216.50us	 216.50us
Other	   enq: PG - contention 				 1     100.0		0.00 421.00us	  0.00	   421.00us   421.00us	 421.00us
Network    SQL*Net message to client				35	 0.0		0.00   8.60us	  0.00	     8.70us	5.28us	  12.12us     4.84us
Other	   asynch descriptor resize				39     100.0		0.00   7.28us	  0.00	     7.20us	6.59us	   7.82us   869.70ns
Other	   PX qref latch					 2     100.0		0.00 142.00us	  0.00	   142.00us   142.00us	 142.00us
Other	   latch: kjci process context latch			 1	 0.0		0.00 251.00us	  0.00	   251.00us   251.00us	 251.00us
Other	   latch: messages					 2	 0.0		0.00  81.50us	  0.00	    81.50us    81.00us	  82.00us   707.11ns
Other	   ges enter server mode				 3	 0.0		0.00  32.00us	  0.00	    32.00us    32.00us	  32.00us
Concurrenc row cache mutex					 1	 0.0		0.00  39.00us	  0.00	    39.00us    39.00us	  39.00us
Background Wait Events (Global) 	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Other	   undo_retention publish retry 			 4	 0.0		0.00   5.75us	  0.00	     5.75us	5.50us	   6.00us   353.55ns
Other	   ges resource directory to be unfrozen		 5	 0.0		0.00   4.40us	  0.00	     4.50us	4.00us	   5.00us   707.11ns
Other	   AWR Flush						 3	 0.0		0.00   4.67us	  0.00	     4.67us	4.67us	   4.67us
Concurrenc latch: MGA shared context root latch 		 1	 0.0		0.00  11.00us	  0.00	    11.00us    11.00us	  11.00us
Idle	   rdbms ipc message				    71,526	31.2	   26,278.85 367.40ms	  7.06	   473.43ms   253.32ms	 693.54ms   311.28ms
Idle	   PX Idle Wait 				       345	 0.0	   21,074.62  61.09 s	  5.66	    61.08 s    60.32 s	  61.85 s  1080.14ms
Idle	   Space Manager: slave idle wait		     5,188	 0.0	   19,455.54 3750.10m	  5.22	  3750.20ms  3730.08ms	3770.32ms    28.46ms
Idle	   class slave wait				    16,126	75.2	    9,090.62 563.72ms	  2.44	   563.61ms   531.84ms	 595.38ms    44.93ms
Idle	   wait for unread message on broadcast cha	     1,874     100.0	    3,667.10 1956.83m	  0.98	  1956.83ms  1954.74ms	1958.92ms     2.96ms
Idle	   pmon timer					       816     100.0	    2,447.95 2999.94m	  0.66	  2999.94ms  2999.93ms	2999.95ms    11.69us
Idle	   ges remote message				    37,552	 0.0	    2,443.62  65.07ms	  0.66	    65.07ms    64.78ms	  65.37ms   417.49us
Idle	   GCR sleep					     8,139	 0.0	    2,442.82 300.14ms	  0.66	   300.14ms   300.14ms	 300.14ms   772.00ns
Idle	   DIAG idle wait				    15,373	82.7	    2,440.15 158.73ms	  0.66	   158.73ms   158.40ms	 159.06ms   470.13us
Idle	   gcs yield cpu				    83,035	99.1	    2,437.24  29.35ms	  0.65	    29.35ms    29.29ms	  29.42ms    92.58us
Idle	   gcs remote message				 1,767,820	 0.0	    2,196.89   1.24ms	  0.59	     1.25ms	1.14ms	   1.36ms   148.69us
Idle	   shared server idle wait				 0	 N/A	    1,260.25		  0.34
Idle	   Streams AQ: qmn coordinator idle wait		90	 0.0	    1,232.04  13.69 s	  0.33	    13.69 s    13.69 s	  13.69 s    49.48us
Idle	   Streams AQ: qmn slave idle wait			46	 0.0	    1,232.01  26.78 s	  0.33	    26.78 s    26.78 s	  26.78 s      .97ms
Idle	   pman timer					       408     100.0	    1,223.87 2999.68m	  0.33	  2999.68ms  2999.67ms	2999.68ms     4.39us
Idle	   ASM background timer 			     4,446	 0.0	    1,223.25 275.13ms	  0.33	   275.15ms   273.02ms	 277.28ms     3.01ms
Idle	   REPL Capture/Apply: RAC AQ qmn coordinat		20     100.0	    1,222.40  61.12 s	  0.33	    61.12 s    61.10 s	  61.14 s    33.85ms
Idle	   heartbeat redo informer			     1,222	 0.0	    1,222.17 1000.14m	  0.33	  1000.14ms  1000.14ms	1000.14ms   321.73ns
Idle	   ASM cluster membership changes		       698	85.2	    1,221.77 1750.38m	  0.33	  1750.38ms  1750.36ms	1750.40ms    33.33us
Idle	   SCM slave idle				    12,246	 0.0	    1,221.29  99.73ms	  0.33	    99.73ms    99.61ms	  99.85ms   168.03us
Idle	   OFS idle					       407     100.0	    1,221.00 3000.00m	  0.33	  3000.00ms  2999.99ms	3000.01ms    13.58us
Idle	   PING 					     1,124	19.8	    1,220.60 1085.94m	  0.33	  1086.03ms  1076.37ms	1095.68ms    13.65ms
Idle	   Streams AQ: waiting for time management		 0	 N/A	    1,220.00		  0.33
Idle	   lreg timer					       406     100.0	    1,219.07 3002.64m	  0.33	  3002.64ms  3002.62ms	3002.65ms    19.58us
Idle	   dispatcher timer					20     100.0	    1,200.12  60.01 s	  0.32	    60.01 s    60.01 s	  60.01 s   281.00us
Idle	   AQPC idle						40     100.0	    1,200.02  30.00 s	  0.32	    30.00 s    30.00 s	  30.00 s   201.24us
Idle	   Data Guard: Gap Manager				20	 0.0	    1,200.01  60.00 s	  0.32	    60.00 s    60.00 s	  60.00 s    89.94us
Idle	   smon timer						 4     100.0	    1,200.00 300.00 s	  0.32	   300.00 s   300.00 s	 300.00 s   202.59us
Idle	   Data Guard: Timer					 2	 0.0	    1,200.00 600.00 s	  0.32	   600.00 s   600.00 s	 600.00 s    13.44us
Idle	   LGWR worker group idle			    13,784	 0.0	      937.04  67.98ms	  0.25	    57.52ms    40.18ms	  74.86ms    24.52ms
Idle	   PX Deq: Parse Reply				       344	 0.0		6.25  18.18ms	  0.00	    21.65ms    17.99ms	  25.31ms     5.17ms
Idle	   PX Deq: Execute Reply			       735	 0.0		0.77   1.05ms	  0.00	     2.54ms   936.29us	   4.15ms     2.27ms
Idle	   PX Deq Credit: send blkd			       296	 0.0		0.21 695.84us	  0.00	   695.84us   695.84us	 695.84us
Idle	   RMA: IPC0 completion sync			     1,335	 0.0		0.03  23.55us	  0.00	    23.55us    21.96us	  25.14us     2.25us
Idle	   SQL*Net message from client				36	 0.0		0.03 718.00us	  0.00	   718.00us   677.39us	 758.61us    57.43us
Idle	   heartbeat monitor sleep				64	 0.0		0.00   4.89us	  0.00	     4.89us	4.89us	   4.89us
			  --------------------------------------------------------------------------------------------------------------------

Wait Event Histogram (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
AQ: RAC AQ Network	   12.2K					    0.9     82.7     11.2      3.4	1.2	 0.4	  0.1	0.0(1)
ASM IO for non-blocking p  63.8K				   0.6	   64.5     14.2      4.6      5.0	8.6	 1.8	  0.5	   0.1	0.0(12)   0.0(1)
ASM file metadata operati   6802			  0.2	  14.3	    2.0     38.5     14.4      3.2	5.1	 4.8	  0.9	   3.9	    4.9      7.0      0.7   0.0(1)	0.1			0.0(1)
AWR Flush		       7				 100.0
CGS wait for IPC msg	   13.4K					   11.6     74.1      9.7      2.9	1.1	 0.4	  0.1	   0.1
CSS initialization	       4						    50.0								    25.0     25.0
CSS operation: action	       6					   16.7 						 16.7	  66.7
CSS operation: data query     36											13.9	 27.8	  22.2	   36.1
CSS operation: data updat     40											 5.0	 62.5	  32.5
CSS operation: query	      12				  58.3	    8.3      8.3      8.3					   8.3	    8.3
DFS lock handle 	     560								       0.2	0.5	52.5	 40.2	   5.9	    0.5      0.2
DLM cross inst call compl    342						    12.0      1.8      0.9	0.9	10.8	 49.7	  19.6	    4.4
Disk file Mirror Read	    1699								       0.1     25.3	17.8	 13.5	  27.1	    7.6      3.8      2.4      1.6	0.4	 0.2	  0.1
Disk file operations I/O    1155				   0.9	    2.0      0.3      0.3     15.7     40.3	21.6	 16.5	   2.3	    0.3
GCR CSS group query	      36					   80.6     13.9      5.6
GCR CSS group update	      36					   91.7      5.6      2.8
IMR slave acknowledgement   3666					    8.6     12.6      5.2     20.3     14.3	18.0	  6.9	   8.7	    2.4      1.3      0.8      0.5	0.2	 0.1   0.0(1)
IPC group service call	     949				   0.6	    1.3     14.2     40.7     34.9	5.9	 2.1	  0.2		    0.1
IPC send completion sync    1923					    0.5     55.1      6.6      1.7	7.9	11.3	  9.5	   7.1	    0.4
KJC: Wait for msg sends t   3706					   19.8     16.2     21.8     23.8	5.9	 5.4	  5.9	   0.9	    0.2      0.1						0.0(1)
KSV master wait 	    3203				   0.1	    7.8     15.3      3.1     11.8     19.8	 4.0	  1.3	   7.5	   12.3     15.5      1.5					0.0(1)
LGWR all worker groups	     458														    0.2      2.8     13.3     19.0     27.3	26.0	  9.2	   1.5	    0.7
LGWR any worker group	   18.5K					 0.0(8)   0.0(2)      0.1      0.3	0.4	 1.1	  1.9	   4.6	   17.8     13.7      9.5     12.8     22.8	10.8	  3.5	   0.6	    0.1
LGWR wait for redo copy      229				  22.7	    3.1      1.3      8.3     21.0     12.7	11.8	  9.2	   7.0	    2.6      0.4
LGWR worker group orderin   6885				   0.3	    0.3      0.1      0.5      1.3	1.2	 1.4	  2.0	   3.4	   31.3     19.2      8.6     10.6     16.3	 2.8	  0.7	   0.1
PGA memory operation	    1049				  27.5	   42.5     16.7      3.1      3.5	4.9	 1.3	  0.3	   0.3
PX Deq: Join ACK	     344					    0.6      0.6				 1.7	 28.8	  26.7	   35.5      6.1
PX Deq: Signal ACK EXT	     344					    7.3     66.9     10.5      6.7	4.1	 3.8	  0.9
PX Deq: Slave Session Sta    688				   0.1	    8.7     10.8      3.1     12.9     17.2	16.3	 16.3	  12.2	    2.3      0.1
PX Deq: reap credit	   31.7K				0.0(7)	   14.9     70.6      9.5      3.4	1.0	 0.4	  0.1  0.0(13)	 0.0(6)   0.0(1)
PX qref latch		     159					   56.0     39.0      2.5      1.3	0.6	 0.6
Parameter File I/O	      56									       12.5	19.6	  1.8			     1.8      5.4     17.9     32.1	 5.4	  1.8	   1.8
SGA: allocation forcing c      6																						  33.3	   66.7
SQL*Net break/reset to cl    122				  41.8	    8.2 	      0.8     39.3	6.6	 1.6		   1.6
SQL*Net message to client    232			  1.3	  85.8	   10.8      0.9      1.3
Sync ASM rebalance	     108					   39.8      2.8      0.9      0.9	1.9	 7.4	  9.3	   3.7			      9.3      9.3	2.8	 9.3	  2.8
asynch descriptor resize      40				  75.0	   20.0      5.0
buffer busy waits	       2								      50.0		50.0
buffer exterminate	     926					    0.1      0.1									     99.8
control file parallel wri    596														    1.8     24.8      7.0      9.1     28.5	17.3	  8.6	   2.7	    0.2
control file sequential r   7144					    7.0     14.4      1.4      2.4     35.5	28.4	  9.2	   1.0	    0.3      0.1   0.0(3)      0.3	0.1
cursor: pin S wait on X        9																	      22.2     77.8
db file async I/O submit   58.3K			  0.9	  91.4	    2.6      1.9      1.6      0.8	0.4	 0.2	  0.1  0.0(10)	 0.0(1)
db file parallel read	       2											50.0	 50.0
db file parallel write	   57.8K					 0.0(6)      1.7     13.8      7.3	7.5	12.1	 25.6	  18.2	    7.6      1.6      0.4      3.3	0.9   0.0(5)
db file scattered read	      42									       16.7	38.1	 28.6	   2.4		    11.9			2.4
db file sequential read     2.7M								   0.0(39)	1.2	39.2	 21.6	   2.3	   18.2      8.9      0.8      4.3	3.2	 0.3  0.0(18)
direct path read	      73					   11.0      6.8      6.8     13.7     24.7	27.4	  5.5	   1.4		     1.4      1.4
direct path write	      10												 20.0	  10.0		    10.0     30.0     20.0     10.0
direct path write temp	      53												  1.9		    9.4     28.3     22.6     20.8     17.0
enq: AF - task serializat      2												 50.0	  50.0
enq: CF - contention	     129											 6.2	 55.8	  24.0	    2.3      0.8	       1.6	0.8	 1.6	  3.1	   3.1	    0.8
enq: CO - master slave de     10											10.0	 30.0	  40.0	   20.0
enq: FB - contention	      22											40.9	 45.5	  13.6
enq: HW - contention	      22											36.4	 45.5	  18.2
enq: PE - contention	       1													 100.0
enq: PG - contention	       1										       100.0
enq: PS - contention	     396					    0.8      0.3	       1.5	5.6	19.7	 50.8	  18.2	    2.5      0.5      0.3
enq: PW - flush prewarm b      2												100.0
enq: RA - RT ADDM flood c      3											33.3	 66.7
Wait Event Histogram (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
enq: RO - fast object reu    257							      0.4		0.8	14.0	 41.6	   8.6	    1.2      0.4			1.2	 7.0	 22.6	   2.3
enq: SM -  contention	       2												100.0
enq: TA - contention	       2												 50.0	  50.0
enq: TD - KTF dump entrie      2											50.0	 50.0
enq: TK - Auto Task Seria      2												100.0
enq: TM - contention	       4												 50.0	  25.0										   25.0
enq: TO - contention	      43											 7.0	 72.1	  18.6	    2.3
enq: TT - contention	      10											10.0	 60.0	  20.0	   10.0
enq: WF - contention	      32											 9.4	 56.3	  34.4
enq: WT - contention	      18												 66.7	  33.3
free buffer waits	  615.3K				       0.0(164) 0.0(134)      0.5      0.6	0.9	 1.0	  0.8	   1.0	    1.9      3.7     89.6 0.0(132)   0.0(3)	       0.0(1)	0.0(1)	 0.0(2)
gc buffer busy acquire	       8												 37.5	  37.5		    12.5							   12.5
gc buffer busy release	      22														    4.5 	      9.1      9.1	9.1	13.6	 45.5	   9.1
gc cr block 2-way	    1783							      0.4      1.0	1.9	41.6	 45.0	   8.5	    1.3      0.3
gc cr block busy	      85													   1.2	    5.9      8.2     28.2     25.9     16.5	 9.4	  4.7
gc cr block congested	       2															    50.0     50.0
gc cr block lost	       5																						 100.0
gc cr disk read 	      32										3.1	59.4	 12.5	  21.9	    3.1
gc cr grant 2-way	    4089							      0.2      0.8	3.4	48.7	 36.2	   8.8	    1.5      0.3   0.0(2)
gc cr grant busy	     285											16.8	 49.1	  28.8	    3.5      1.8
gc cr grant congested	       5														   60.0     40.0
gc cr multi block grant        9											11.1	 44.4	  44.4
gc cr multi block mixed      102										1.0	 2.9	 23.5	  57.8	   13.7 								    1.0
gc current block 2-way	   21.1K							      0.1      0.4	0.5	13.6	 60.2	  21.9	    2.8      0.4  0.0(10)						 0.0(3)
gc current block busy	   15.6K							      0.1      0.4	0.6	37.0	 48.3	  11.4	    1.6      0.3      0.1      0.1	0.1   0.0(1)	  0.1	0.0(4)
gc current block congeste     87													   4.6	   28.7     50.6     12.6      2.3					    1.1
gc current block lost	      10																						  50.0	   30.0     20.0
gc current grant 2-way	    1.1M						  0.0(2)      0.3      0.6	3.1	45.4	 39.6	   9.3	    1.5      0.3 0.0(436)   0.0(7)   0.0(1)   0.0(6)			 0.0(4)   0.0(1)
gc current grant busy	   59.5K					 0.0(6)      0.1  0.0(15)      0.1	0.3	 9.8	 55.5	  28.1	    5.0      0.8      0.2      0.1   0.0(1)   0.0(8)			0.0(12)   0.0(2)
gc current grant congeste   1566													  17.6	   50.2     25.6      5.8      0.3	0.3	 0.2			    0.1
gc current grant read-mos  53.2K						 0.0(11)   0.0(3)  0.0(18)	0.1	 1.6	 33.7	  52.2	   10.9      1.2      0.2      0.1  0.0(11)   0.0(4)   0.0(1)	0.0(1)
gc current multi block re     31											 9.7	 51.6	  35.5	    3.2
gc current retry	       3												100.0
gc current split	       1												100.0
gc index operation	       1															   100.0
gc remaster		       3													  33.3	   33.3 		      33.3
gcs drm freeze in enter s      7														   14.3 			       28.6	14.3	 42.9
gcs log flush sync	    6784					    0.8      2.4      8.8     15.7     15.4	19.6	 17.7	  11.1	    4.2      2.1      1.4      0.7
gcs remastering wait for      11					    9.1 	      9.1     18.2		 9.1	 27.3								27.3
ges enter server mode	     234			  1.3	  69.2	   24.4      1.7      2.6      0.9
ges inquiry response	      85											21.2	 65.9	   9.4	    3.5
ges ipc enter server mode    201				  96.0	    1.0      2.5      0.5
ges lms sync during dynam     65								       1.5		 4.6	  7.7	   7.7	    4.6     18.5     24.6     27.7	3.1
ges message buffer alloca      1																						 100.0
ges resource directory to      7			 14.3	  85.7
ges2 LMON to wake up LMD       9					   22.2     33.3     11.1     22.2     11.1
kjctssqmg: quick message     296					   15.5     15.9      3.4      3.7	2.7	20.9	 29.1	   6.4	    2.4
kksfbc child completion        2																		      100.0
ksxr poll remote instance   2482					    2.4     83.8      7.2      4.5	1.5	 0.5	  0.1
latch free		    1402					    4.9      1.4      2.4     21.9     42.2	20.5	  5.6	   0.9	    0.1      0.2
latch: MGA shared context      1					  100.0
latch: cache buffers chai     13							     23.1      7.7     15.4	30.8	 15.4		    7.7
latch: cache buffers lru     480				   0.2	   19.8      4.2      6.5     19.6     23.8	13.3	  9.8	   2.1	    0.8
latch: call allocation	       3					   33.3 								   33.3     33.3
latch: checkpoint queue l     34					   14.7 		      20.6     20.6	29.4	  8.8	   5.9
latch: enqueue hash chain     52					   13.5 		       9.6     30.8	28.8	 11.5	   5.8
latch: gc element	     121					    2.5      3.3      9.1     13.2     16.5	21.5	 14.9	  14.0	    5.0
latch: gcs resource hash     394					   11.7      5.6      8.6     21.1     18.5	15.5	 11.7	   5.1	    2.3
latch: ges resource hash       9							     11.1     22.2     44.4	11.1		  11.1
latch: kjci process conte      2									       50.0		 50.0
Wait Event Histogram (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
latch: messages 	       2								     100.0
latch: object queue heade     73					    2.7 	      6.8     13.7     15.1	31.5	 23.3	   5.5			      1.4
latch: redo allocation	     224					   13.4      2.2      6.7     23.7     21.4	18.3	  8.9	   4.0	    0.4      0.9
latch: redo writing	       4									       75.0				   25.0
latch: shared pool	      13								       7.7	7.7	38.5	 15.4	   7.7			      7.7     15.4
latch: undo global data        4						    25.0				50.0	 25.0
libcache interrupt action   1943			  3.2	  90.0	    3.1      1.5      1.3      0.6	0.1	 0.2
library cache load lock       38					    5.3 		       7.9	7.9	15.8	  7.9	   5.3			     50.0
library cache lock	     220										0.9	18.6	 61.4	  15.5	    3.6
library cache pin	     226							      0.4			31.4	 54.0	  12.4	    1.3      0.4
library cache: mutex X	       8					   12.5 	     12.5			62.5	 12.5
lock deadlock retry	     248					   68.1     11.3     12.5      4.8	2.0	 1.2
lock escalate retry	       8																    100.0
log file parallel write    37.5K														    0.1     15.5     22.2     18.4     23.9	14.3	  4.6	   0.9	    0.1
log file sequential read    1096						     3.8     18.2      2.6	1.2	21.0	 24.3	   4.7	   17.9      2.5      2.2      1.4	0.3
log file sync		      34																      5.9      2.9     26.5	17.6	 23.5	  23.5
name-service call wait	       3												 66.7		   33.3
oracle thread bootstrap        7																	      85.7     14.3
os thread creation	       7													  85.7	   14.3
read by other session	       2																     50.0     50.0
reliable message	     270											 0.4	 40.0	  25.2	   26.3      5.9      0.4      0.4	0.4			   0.4	    0.4      0.4
row cache lock		      59											 1.7	 42.4	  49.2	    6.8
row cache mutex 	       1							    100.0
undo_retention publish re      4				 100.0
write complete waits	      44															     2.3      2.3		4.5	 6.8	  6.8	  20.5	   31.8     25.0
			  --------------------------------------------------------------------------------------------------------------------


System Statistics			   DB/Inst: P30DB/p30db1  Snaps: 81-82

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	       Reads	    Reads	Writes	   Size (k)	 Changes	Calls	     Execs	 Parses     Logons	   Txns
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	   2,150,521	1,577,797    1,704,389	  1,344,202    3,505,149	  968	    65,537	  4,068        177	 53,469
   2	   1,534,097	1,094,434      750,663	    928,021    2,413,735	1,096	    54,484	  5,002        175	 36,748
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	   3,684,618	2,672,231    2,455,052	  2,272,223    5,918,884	2,064	   120,021	  9,070        352	 90,217
 Avg	   1,842,309	1,336,116    1,227,526	  1,136,112    2,959,442	1,032	    60,011	  4,535        176	 45,109
 Std	     435,878	  341,789      674,386	    294,284	 771,746	   91	     7,816	    660 	 1	 11,824
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Second		   DB/Inst: P30DB/p30db1  Snaps: 81-82

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	     Reads/s	  Reads/s     Writes/s	 Size (k)/s    Changes/s      Calls/s	   Execs/s     Parses/s   Logons/s	 Txns/s
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	    3,516.44	  2,579.9      2,786.9	    2,198.0	 5,731.5	  1.6	     107.2	    6.7       0.29	   87.4
   2	    2,510.18	  1,790.8      1,228.3	    1,518.5	 3,949.5	  1.8	      89.1	    8.2       0.29	   60.1
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	    6,026.62	  4,370.7      4,015.2	    3,716.5	 9,681.0	  3.4	     196.3	   14.8       0.58	  147.6
 Avg	    3,013.31	  2,185.4      2,007.6	    1,858.2	 4,840.5	  1.7	      98.2	    7.4       0.29	   73.8
 Std	      711.53	    558.0      1,102.1	      480.5	 1,260.0	  0.1	      12.7	    1.1       0.00	   19.3
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Transaction	   DB/Inst: P30DB/p30db1  Snaps: 81-82

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	    Reads/tx	 Reads/tx    Writes/tx	Size (k)/tx   Changes/tx     Calls/tx	  Execs/tx    Parses/tx  Logons/tx
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ----------
   1	       40.22	     29.5	  31.9	       25.1	    65.6	  0.0	       1.2	    0.1       0.00
   2	       41.75	     29.8	  20.4	       25.3	    65.7	  0.0	       1.5	    0.1       0.00
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~
 Avg	       40.98	     29.6	  26.2	       25.2	    65.6	  0.0	       1.4	    0.1       0.00
			  --------------------------------------------------------------------------------------------------------------------


SysStat and Global Messaging  - RAC	   DB/Inst: P30DB/p30db1  Snaps: 81-82

	   Blocks Received	      Blocks Served	       CPU (seconds)						Messages				       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir	  Lost	  Failure
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	     6,176	 1,476	      31,250	     474	  N/A	       0	2,572,141	   4,037      2,306,945      29,764	 509,447   1,063,483	    11		0
   2	    31,218	   463	       6,054	   1,482	  N/A	       0	2,326,353	   3,088      2,562,084      11,048	 794,428   1,279,355	     5		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	    37,394	 1,939	      37,304	   1,956	    0	       0	4,898,494	   7,125      4,869,029      40,812    1,303,875   2,342,838	    16		0
 Avg	    18,697	   970	      18,652	     978	  N/A	       0	2,449,247	   3,563      2,434,515      20,406	 651,938   1,171,419	     8		0
 Std	    17,707	   716	      17,816	     713	  N/A	       0	  173,798	     671	180,411      13,234	 201,512     152,645	     4		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Sec)- RACDB/Inst: P30DB/p30db1  Snaps: 81-82

     Blocks Received Per Second   Blocks Served per Second   CPU seconds per Second				     Messages Per Second				  GC Blks     GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent    GES Sent  Sent Direct  Sent Indir	Lost/s	   Fail/s
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	     10.10	  2.41	       51.10	    0.78	  N/A	    0.00	 4,205.85	    6.60       3,772.22       48.67	   833.0    1,738.96	     0		0
   2	     51.08	  0.76		9.91	    2.42	  N/A	    0.00	 3,806.52	    5.05       4,192.23       18.08	 1,299.9    2,093.36	     0		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	     61.18	  3.17	       61.00	    3.20	 0.00	    0.00	 8,012.37	   11.65       7,964.45       66.75	 2,132.9    3,832.32	     0		0
 Avg	     30.59	  1.59	       30.50	    1.60	  N/A	    0.00	 4,006.19	    5.83       3,982.23       33.37	 1,066.5    1,916.16	     0		0
 Std	     28.98	  1.17	       29.13	    1.17	  N/A	    0.00	   282.37	    1.09	 297.00       21.63	   330.1      250.60	     0		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Tx)- RAC DB/Inst: P30DB/p30db1  Snaps: 81-82

	Blocks Received per Tx	      Blocks Served	    CPU (seconds) per Tx				Messages per Transaction			       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   ------	--------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir   Lost/T	 Fail/Tx
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   ------	--------
   1	      0.12	  0.03		0.58	    0.01	  N/A	    0.00	    48.11	    0.08	  43.15        0.56	     9.5       19.89	  0.0	     0.0
   2	      0.85	  0.01		0.16	    0.04	  N/A	    0.00	    63.31	    0.08	  69.72        0.30	    21.6       34.81	  0.0	     0.0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~	~~~~~~~~
 Avg	      0.48	  0.02		0.37	    0.02	  N/A	    0.00	    55.71	    0.08	  56.43        0.43	    15.6       27.35	  0.0	     0.0
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Efficiency Percentages	   DB/Inst: P30DB/p30db1  Snaps: 81-82

	       Buffer Access
       -----------------------------
  I#	   Local % Remote %   Disk %	Locality %
----   ----------- -------- --------   -----------
   1	     26.27     0.36    73.37	     69.88
   2	     26.56     2.07    71.38	     31.63
			  --------------------------------------------------------------------------------------------------------------------

Global Latency Characteristics		   DB/Inst: P30DB/p30db1  Snaps: 81-82

				CR Blocks				  CU Blocks
		 ---------------------------------------   ---------------------------------------
	GE Get	   Receive     Build	 Flush Log Flush     Receive	   Pin	   Flush Log Flush
  I# Time (us)	 Time (us) Time (us) Time (us) CR Srvd %   Time (us) Time (us) Time (us) CU Srvd %
---- ---------	 --------- --------- --------- ---------   --------- --------- --------- ---------
   1	    43	      1904	  25	 87778	     1.9	 858	  3333	  180741       0.1
   2	   165	      2851	   0	 25135	     5.0	1111	     0	   22121       0.5
			  --------------------------------------------------------------------------------------------------------------------

Global Messaging Statistics		   DB/Inst: P30DB/p30db1  Snaps: 81-82

	     Queue Time (us)	    Process Time (us)	      % Messages Sent
       --------------------------   -----------------	--------------------------
  I#	   Sent  on ksxp Received   GCS msgs GES msgs	  Direct Indirect Flow Ctr
----   -------- -------- --------   -------- --------	-------- -------- --------
   1	   1738      760       80	  37	   26	    32.4     67.6      0.0
   2	   4060     4672       73	  34	   27	    38.0     61.3      0.7
			  --------------------------------------------------------------------------------------------------------------------


Global CR Server Statistics		   DB/Inst: P30DB/p30db1  Snaps: 81-82

			   Block Requests					   Results			 Fairness      Light		   Total
       -----------------------------------------------------   ----------------------------------------------	----------   --------	--------------------------
  I#		CR	    CU	      Data     Undo	  TX	   Current Private	 Zero  Dsk Rd	 Fail	 Down Conv	Works	   Flushes     Builds Erro
----   ----------- ----------- ----------- -------- --------   ----------- ------- ---------- ------- -------	----------   --------	---------- ---------- ----
   1	       383	    70	       383	  0	  17	       452	 0	    1	    0	    0	       245	    0		 9	  383	 0
   2	       126	 1,388	       126	  0    1,341	     1,482	 0	    0	   32	    0		61	    4		74	  126	 0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~ ~~~~~~~ ~~~~~~~~~~ ~~~~~~~ ~~~~~~~	~~~~~~~~~~   ~~~~~~~~	~~~~~~~~~~ ~~~~~~~~~~ ~~~~
 Sum	       509	 1,458	       509	  0    1,358	     1,934	 0	    1	   32	    0	       306	    4		83	  509	 0
 Avg	       255	   729	       255	  0	 679	       967	 0	    1	   16	    0	       153	    2		42	  255	 0
 Std	       182	   932	       182	  0	 936	       728	 0	    1	   23	    0	       130	    3		46	  182	 0
			  --------------------------------------------------------------------------------------------------------------------

Global Current Server Statistics	   DB/Inst: P30DB/p30db1  Snaps: 81-82

  I#	    Pins % <100us   % <1ms  % <10ms % <100ms	% <1s	% <10s	   Flushes % <100us   % <1ms  % <10ms % <100ms	  % <1s   % <10s
---- ----------- -------- -------- -------- -------- -------- -------- ----------- -------- -------- -------- -------- -------- --------
   1	       1   100.00     0.00     0.00	0.00	 0.00	  0.00		27     0.00	0.00	 0.00	 22.22	  77.78     0.00
   2	       2    50.00    50.00     0.00	0.00	 0.00	  0.00		33     0.00	0.00	57.58	 39.39	   3.03     0.00
 ~~~ ~~~~~~~~~~~						       ~~~~~~~~~~~
 Sum	       3								60
 Avg	       2								30
 Std	       1								 4
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Transfer Statistics	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested  (Cngst) - Block Transfer impacted by Remote System Load
-> All - average time of All blocks (Immed,Busy,Cngst) in us
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block		       CR Blocks		       Current Blocks		       CR Avg Time (us) 	  Current Avg Time (us)
---------   ------------   --------------------------------   --------------------------------	 ---------------------------   ---------------------------
Dest  Src   Class	      Received %Immed  %Busy %Cngst	 Received %Immed  %Busy %Cngst	    All  Immed	 Busy  Cngst	  All  Immed   Busy  Cngst
---- ----   ------------   ----------- ------ ------ ------   ----------- ------ ------ ------	 ------ ------ ------ ------   ------ ------ ------ ------
   1	2   data block		   124	 92.7	 7.3	0.0	    6,027   15.7   84.3    0.0	   2306    862	20763	 N/A	  825	 778	833   3937
	2   undo header 	 1,337	 95.2	 4.8	0.0		2   50.0   50.0    0.0	   1889    627	26976	 N/A	  542	 669	415    N/A
	2   others		    15	100.0	 0.0	0.0	       37   27.0   73.0    0.0	    896    896	  N/A	 N/A	 2497	 729   3152    N/A

   2	1   data block		   389	 98.2	 1.0	0.8	   30,691   65.7   34.0    0.3	   1694    806	83373	5969	 1085	1043   1056  14189
	1   others		    64	100.0	 0.0	0.0	      551   80.8   19.2    0.0	    495    495	  N/A	 N/A	 1139	 628   3281    N/A
	1   undo header 	    18	 55.6	44.4	0.0		5   40.0   60.0    0.0	  36409    441	81369	 N/A	 1159	1764	756    N/A
			  --------------------------------------------------------------------------------------------------------------------

Global Cache Transfer (Immediate)	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block	     Lost Blocks	 Immediate CR Blocks	     Immediate Current Blocks	   Immed CR Avg Time (us)   Immed Current Avg Time (us)
---------   ------------   --------------   ----------------------------   ----------------------------   -----------------------   -----------------------
Dest  Src   Class	     Count Time(u      Received  %2-hop   %3-hop      Received	%2-hop	 %3-hop     Total   2-hop   3-hop     Total   2-hop   3-hop
---- ----   ------------   ------- ------   ----------- ------- --------   ----------- ------- --------   ------- ------- -------   ------- ------- -------
   1	2   undo header 	 0    N/A	  1,273   100.0      0.0	     1	 100.0	    0.0       627     627     N/A	669	669	N/A
	2   data block		 0    N/A	    115   100.0      0.0	   945	 100.0	    0.0       862     862     N/A	778	778	N/A
	2   others		 0    N/A	     15   100.0      0.0	    10	 100.0	    0.0       896     896     N/A	729	729	N/A
	2   undo block		 0    N/A	      0     N/A      N/A	     0	   N/A	    N/A       N/A     N/A     N/A	N/A	N/A	N/A

   2	1   data block		 0    N/A	    382   100.0      0.0	20,155	 100.0	    0.0       806     806     N/A      1043    1043	N/A
	1   others		 0    N/A	     64   100.0      0.0	   445	 100.0	    0.0       495     495     N/A	628	628	N/A
	1   undo header 	 0    N/A	     10   100.0      0.0	     2	 100.0	    0.0       441     441     N/A      1764    1764	N/A
	1   undo block		 0    N/A	      0     N/A      N/A	     0	   N/A	    N/A       N/A     N/A     N/A	N/A	N/A	N/A
			  --------------------------------------------------------------------------------------------------------------------


Cluster Interconnect			   DB/Inst: P30DB/p30db1  Snaps: 81-82

					 Begin					  End (if different from Begin)
		  --------------------------------------------------   --------------------------------------------------
  I# NAME	  IP Address	  Pub Source			       IP Address      Pub Source
---- ----------   --------------- --- ------------------------------   --------------- --- ------------------------------
   1 fg-priv:1	  169.254.22.248  N
   2 fg-priv:1	  169.254.31.173  N
			  --------------------------------------------------------------------------------------------------------------------

Ping Statistics 			   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Latency of the roundtrip of a message from  Src Instance to the Target instances

 Instance#	       500 bytes		    8 Kbytes
-----------   --------------------------   --------------------------
		    Ping    Avg      Std	 Ping	 Avg	  Std
 Src Target	   Count Time(us)    Dev	Count Time(us)	  Dev
---- ------   ---------- -------- ------   ---------- -------- ------
   1	  1	      56      673    0.3	   61	   666	  0.3
	  2	      56      833    0.3	   61	   884	  0.4

   2	  1	      56      956    0.6	   61	   972	  0.5
	  2	      56      496    0.5	   61	   478	  0.5
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics		   DB/Inst: P30DB/p30db1  Snaps: 81-82

				   Sent (MB)							     Received (MB)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	    729.3      277.8	    6.3      427.7	  1.0	    16.5	661.6	    81.0	6.8	 561.0	      1.0	11.8
   2	    657.0	78.7	    6.8      558.9	  1.0	    11.6	725.4	   277.7	6.3	 424.2	      1.0	16.2
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	  1,386.3      356.6	   13.0      986.5	  2.1	    28.1      1,387.0	   358.7       13.0	 985.1	      2.1	28.0
 Avg	    693.2      178.3	    6.5      493.3	  1.0	    14.1	693.5	   179.4	6.5	 492.6	      1.0	14.0
 Std	     51.1      140.8	    0.4       92.8	  0.0	     3.5	 45.1	   139.1	0.4	  96.7	      0.0	 3.1
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 81-82

				  Sent (MB/s)							    Received (MB/s)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	      1.2	 0.5	    0.0        0.7	  0.0	     0.0	  1.1	     0.1	0.0	   0.9	      0.0	 0.0
   2	      1.1	 0.1	    0.0        0.9	  0.0	     0.0	  1.2	     0.5	0.0	   0.7	      0.0	 0.0
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	      2.3	 0.6	    0.0        1.6	  0.0	     0.0	  2.3	     0.6	0.0	   1.6	      0.0	 0.0
 Avg	      1.1	 0.3	    0.0        0.8	  0.0	     0.0	  1.1	     0.3	0.0	   0.8	      0.0	 0.0
 Std	      0.1	 0.2	    0.0        0.2	  0.0	     0.0	  0.1	     0.2	0.0	   0.2	      0.0	 0.0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> null means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	 17,794.4    6,297,570	     0	     0	     0	     0	       8,795.7	  5,562,722	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	  1,210.9    2,538,866	     0	     0	     0	     0	       1,140.6	  2,485,336	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.0	   238	     0	     0	     0	     0		   0.0		283	  0	  0	  0	  0
       fg-pub:1   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:3   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      2.0	 3,054	     0	     0	     0	     0		   1.2	      3,117	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		     24.2	25,503	     0	     0	     0	     0		  24.2	     25,503	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	  8,877.2    5,784,506	     0	     0	     0	     0	      17,705.7	  6,036,505	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	  1,142.1    2,315,694	     0	     0	     0	     0	       1,220.3	  2,819,849	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.0	   281	     0	     0	     0	     0		   0.0		237	  0	  0	  0	  0
       fg-pub:1   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      2.0	 3,089	     0	     0	     0	     0		   1.2	      3,112	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      8.5      123,485	     0	     0	     0	     0		   8.5	    123,485	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							 29,061.3   17,092,286	     0	     0	     0	     0	      28,897.3	 17,060,149	  0	  0	  0	  0
 Avg							  1,709.5    1,005,429	     0	     0	     0	     0	       1,699.8	  1,003,538	  0	  0	  0	  0
 Std							  4,667.3    2,057,897	     0	     0	     0	     0	       4,640.3	  2,006,351	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> Blank  means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	     29.1	10,298	     0	     0	     0	     0		  14.4	      9,096	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	      2.0	 4,151	     0	     0	     0	     0		   1.9	      4,064	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:1   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:3   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.0	    42	     0	     0	     0	     0		   0.0		 42	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	     14.5	 9,465	     0	     0	     0	     0		  29.0	      9,877	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	      1.9	 3,789	     0	     0	     0	     0		   2.0	      4,614	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:1   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.0	   202	     0	     0	     0	     0		   0.0		202	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							     47.5	27,958	     0	     0	     0	     0		  47.3	     27,906	  0	  0	  0	  0
 Avg							      2.8	 1,645	     0	     0	     0	     0		   2.8	      1,642	  0	  0	  0	  0
 Std							      7.6	 3,366	     0	     0	     0	     0		   7.6	      3,282	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Dynamic Remastering Statistics		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Affinity Objects - Affinity objects remastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot

				   Counts per Ops					 Time per Ops (seconds) 			 Affinity Objects		  Read Mostly Objects
		---------------------------------------------------   -----------------------------------------------------------   -------------------------	--------------------------------------
     Remaster	  Remastered Replay Locks Replay Locks	  Resources														    Begin
  I#	  Ops	     Objects	 Received	  Sent	    Cleaned    Remaster    Freeze   Cleanup    Replay  Fixwrite      Sync	   Begin	  End	       Begin (persistent)	   End
---- --------	------------ ------------ ------------ ------------   --------- --------- --------- --------- --------- ---------   ------------ ------------	------------ ------------ ------------
   1	    1		 1.0	  6,991.0     26,771.0		0.0	   1.47      0.01      0.14	 0.24	   0.19      0.87	      15	   14		   1		0	     1
   2	    1		 1.0	 26,771.0      6,991.0		0.0	   1.46      0.01      0.07	 0.05	   0.11      1.20	       3	    3		   1		0	     1
 ~~~ ~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~   ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~   ~~~~~~~~~~~~ ~~~~~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~
 Avg	    1		 1.0	 16,881.0     16,881.0		0.0	   1.47      0.01      0.11	 0.15	   0.15      1.04	       9	    9		   1		0	     1
 Max				 26,771.0     26,771.0		0.0	   1.47      0.01      0.14	 0.24	   0.19      1.20	      15	   14		   1		0	     1
			  --------------------------------------------------------------------------------------------------------------------


SQL ordered by Elapsed Time (Global)	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Captured SQL account for   98.4% of Total DB Time (s):	   18,271
-> Captured PL/SQL account for	 99.0% of Total DB Time (s):	      18,271

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	  Elapsed (s)	  CPU (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	DB time   DB CPU  IO Wait     Gets    Reads  Cluster	Execs
-------------	------------- ----------- ----------- -------------- ------------ ------------ ----------- ------------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
35dumc2tpr9dv	    17,887.56	   895.43   10,817.80	   3,298,301	2,585,933    2,706,672	    921.58	 87,312 	   0.20        0.01	   0.12 	  37.8	       29.6	    31.0	0.01	   97.9     92.1      1.0     89.5     96.8	94.6	 72.7
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

83dzbzw98577h	       564.42	    41.94	66.95	     152,550	  115,842	     1	     36.42	      1 	 564.42       41.94	  66.95      152,550.0	  115,842.0	     1.0       36.42	    3.1      4.3      0.0      4.1	4.3	 3.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

5nff7mqnapavq	       564.41	    30.17      201.29	     104,167	   81,582	     1	     24.43	      1 	 564.41       30.17	 201.29      104,167.0	   81,582.0	     1.0       24.43	    3.1      3.1      0.0      2.8	3.1	 2.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

dbyf2w4zdhm5a	       564.39	    51.54	64.07	     138,571	  106,936	     1	     64.84	      1 	 564.39       51.54	  64.07      138,571.0	  106,936.0	     1.0       64.84	    3.1      5.3      0.0      3.8	4.0	 6.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

ffg3064p5ba19	       564.35	    31.00	75.49	     183,478	  133,174	     1	      0.02	      1 	 564.35       31.00	  75.49      183,478.0	  133,174.0	     1.0	0.02	    3.1      3.2      0.0      5.0	5.0	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

899d7tfh478uf	       564.33	    41.18	66.54	     150,312	  114,529	     1	     35.88	      1 	 564.33       41.18	  66.54      150,312.0	  114,529.0	     1.0       35.88	    3.1      4.2      0.0      4.1	4.3	 3.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

27kw116fyz8ch	       564.32	    30.98	76.95	     177,735	  135,287	     1	      0.04	      1 	 564.32       30.98	  76.95      177,735.0	  135,287.0	     1.0	0.04	    3.1      3.2      0.0      4.8	5.1	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

92ys8asf4wtfh	       564.31	    24.94      261.83	      83,464	   65,919	     1	     19.64	      1 	 564.31       24.94	 261.83       83,464.0	   65,919.0	     1.0       19.64	    3.1      2.6      0.0      2.3	2.5	 2.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

a44zayg3f6y2j	       564.30	    42.28	66.60	     152,606	  116,191	     1	     37.64	      1 	 564.30       42.28	  66.60      152,606.0	  116,191.0	     1.0       37.64	    3.1      4.3      0.0      4.1	4.3	 3.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

2s38bb8cxwhkg	       564.28	    31.05	77.16	     176,826	  134,945	     1	      0.29	      1 	 564.28       31.05	  77.16      176,826.0	  134,945.0	     1.0	0.29	    3.1      3.2      0.0      4.8	5.0	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by CPU Time (Global)	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Captured SQL account for   94.3% of Total CPU Time (s):	       972
-> Captured PL/SQL account for	 97.3% of Total CPU Time (s):		  972

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	    CPU (s)   Elapsed (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs       CPU (s)	Elapsed (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	 DB CPU  DB time  IO Wait     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
35dumc2tpr9dv	     895.43	17,887.56   10,817.80	   3,298,301	2,585,933    2,706,672	    921.58	 87,312 	 0.01	       0.20	   0.12 	  37.8	       29.6	    31.0	0.01	   92.1     97.9     97.7     89.5     96.8	94.6	 72.7
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

dbyf2w4zdhm5a	      51.54	   564.39	64.07	     138,571	  106,936	     1	     64.84	      1 	51.54	     564.39	  64.07      138,571.0	  106,936.0	     1.0       64.84	    5.3      3.1      0.6      3.8	4.0	 6.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

a44zayg3f6y2j	      42.28	   564.30	66.60	     152,606	  116,191	     1	     37.64	      1 	42.28	     564.30	  66.60      152,606.0	  116,191.0	     1.0       37.64	    4.3      3.1      0.6      4.1	4.3	 3.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

63wngb2bqq9gg	      42.05	   564.26	66.83	     152,190	  116,651	     1	     35.42	      1 	42.05	     564.26	  66.83      152,190.0	  116,651.0	     1.0       35.42	    4.3      3.1      0.6      4.1	4.4	 3.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

83dzbzw98577h	      41.94	   564.42	66.95	     152,550	  115,842	     1	     36.42	      1 	41.94	     564.42	  66.95      152,550.0	  115,842.0	     1.0       36.42	    4.3      3.1      0.6      4.1	4.3	 3.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

899d7tfh478uf	      41.18	   564.33	66.54	     150,312	  114,529	     1	     35.88	      1 	41.18	     564.33	  66.54      150,312.0	  114,529.0	     1.0       35.88	    4.2      3.1      0.6      4.1	4.3	 3.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

cbqrzstc5g855	      31.18	   564.25	76.61	     178,598	  134,956	     1	      0.52	      1 	31.18	     564.25	  76.61      178,598.0	  134,956.0	     1.0	0.52	    3.2      3.1      0.7      4.8	5.1	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

2s38bb8cxwhkg	      31.05	   564.28	77.16	     176,826	  134,945	     1	      0.29	      1 	31.05	     564.28	  77.16      176,826.0	  134,945.0	     1.0	0.29	    3.2      3.1      0.7      4.8	5.0	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

89zxxhhq9a38k	      31.02	   564.25	75.54	     180,211	  134,641	     1	      0.97	      1 	31.02	     564.25	  75.54      180,211.0	  134,641.0	     1.0	0.97	    3.2      3.1      0.7      4.9	5.0	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

ffg3064p5ba19	      31.00	   564.35	75.49	     183,478	  133,174	     1	      0.02	      1 	31.00	     564.35	  75.49      183,478.0	  133,174.0	     1.0	0.02	    3.2      3.1      0.7      5.0	5.0	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by User I/O Time (Global)	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Captured SQL account for   97.9% of Total User I/O Wait Time (s):	      11,067
-> Captured PL/SQL account for	 98.7% of Total User I/O Wait Time (s): 	 11,067

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	 IOWait (s)   Elapsed (s)     CPU (s)		Gets	    Reads	  Rows Cluster (s)	  Execs    IOWait (s)	Elapsed (s)	CPU (s) 	  Gets	      Reads	    Rows Cluster (s)	IO Wait  DB time   DB CPU     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
35dumc2tpr9dv	  10,817.80	17,887.56      895.43	   3,298,301	2,585,933    2,706,672	    921.58	 87,312 	 0.12	       0.20	   0.01 	  37.8	       29.6	    31.0	0.01	   97.7     97.9     92.1     89.5     96.8	94.6	 72.7
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

2s38bb8cxwhkg	      77.16	   564.28	31.05	     176,826	  134,945	     1	      0.29	      1 	77.16	     564.28	  31.05      176,826.0	  134,945.0	     1.0	0.29	    0.7      3.1      3.2      4.8	5.0	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

cbqrzstc5g855	      76.61	   564.25	31.18	     178,598	  134,956	     1	      0.52	      1 	76.61	     564.25	  31.18      178,598.0	  134,956.0	     1.0	0.52	    0.7      3.1      3.2      4.8	5.1	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

89zxxhhq9a38k	      75.54	   564.25	31.02	     180,211	  134,641	     1	      0.97	      1 	75.54	     564.25	  31.02      180,211.0	  134,641.0	     1.0	0.97	    0.7      3.1      3.2      4.9	5.0	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

ffg3064p5ba19	      75.49	   564.35	31.00	     183,478	  133,174	     1	      0.02	      1 	75.49	     564.35	  31.00      183,478.0	  133,174.0	     1.0	0.02	    0.7      3.1      3.2      5.0	5.0	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

83dzbzw98577h	      66.95	   564.42	41.94	     152,550	  115,842	     1	     36.42	      1 	66.95	     564.42	  41.94      152,550.0	  115,842.0	     1.0       36.42	    0.6      3.1      4.3      4.1	4.3	 3.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

63wngb2bqq9gg	      66.83	   564.26	42.05	     152,190	  116,651	     1	     35.42	      1 	66.83	     564.26	  42.05      152,190.0	  116,651.0	     1.0       35.42	    0.6      3.1      4.3      4.1	4.4	 3.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

a44zayg3f6y2j	      66.60	   564.30	42.28	     152,606	  116,191	     1	     37.64	      1 	66.60	     564.30	  42.28      152,606.0	  116,191.0	     1.0       37.64	    0.6      3.1      4.3      4.1	4.3	 3.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

899d7tfh478uf	      66.54	   564.33	41.18	     150,312	  114,529	     1	     35.88	      1 	66.54	     564.33	  41.18      150,312.0	  114,529.0	     1.0       35.88	    0.6      3.1      4.2      4.1	4.3	 3.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

dbyf2w4zdhm5a	      64.07	   564.39	51.54	     138,571	  106,936	     1	     64.84	      1 	64.07	     564.39	  51.54      138,571.0	  106,936.0	     1.0       64.84	    0.6      3.1      5.3      3.8	4.0	 6.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Gets (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Total Buffer Gets:	    3,684,618
-> Captured SQL account for   94.4% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id		  Gets	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	    Gets	Reads	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	   Gets    Reads  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	-------------- ------------ ------------- ----------- ----------- ------------ ----------- ------------   -------------- ------------ ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
35dumc2tpr9dv	     3,298,301	  2,585,933	17,887.56      895.43	10,817.80    2,706,672	    921.58	 87,312 	    37.8	 29.6	       0.20	   0.01        0.12	    31.0	0.01	   89.5     96.8     97.9     92.1     97.7	94.6	 72.7
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

ffg3064p5ba19	       183,478	    133,174	   564.35	31.00	    75.49	     1	      0.02	      1        183,478.0    133,174.0	     564.35	  31.00       75.49	     1.0	0.02	    5.0      5.0      3.1      3.2	0.7	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

89zxxhhq9a38k	       180,211	    134,641	   564.25	31.02	    75.54	     1	      0.97	      1        180,211.0    134,641.0	     564.25	  31.02       75.54	     1.0	0.97	    4.9      5.0      3.1      3.2	0.7	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

cbqrzstc5g855	       178,598	    134,956	   564.25	31.18	    76.61	     1	      0.52	      1        178,598.0    134,956.0	     564.25	  31.18       76.61	     1.0	0.52	    4.8      5.1      3.1      3.2	0.7	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

27kw116fyz8ch	       177,735	    135,287	   564.32	30.98	    76.95	     1	      0.04	      1        177,735.0    135,287.0	     564.32	  30.98       76.95	     1.0	0.04	    4.8      5.1      3.1      3.2	0.7	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

2s38bb8cxwhkg	       176,826	    134,945	   564.28	31.05	    77.16	     1	      0.29	      1        176,826.0    134,945.0	     564.28	  31.05       77.16	     1.0	0.29	    4.8      5.0      3.1      3.2	0.7	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

a44zayg3f6y2j	       152,606	    116,191	   564.30	42.28	    66.60	     1	     37.64	      1        152,606.0    116,191.0	     564.30	  42.28       66.60	     1.0       37.64	    4.1      4.3      3.1      4.3	0.6	 3.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

83dzbzw98577h	       152,550	    115,842	   564.42	41.94	    66.95	     1	     36.42	      1        152,550.0    115,842.0	     564.42	  41.94       66.95	     1.0       36.42	    4.1      4.3      3.1      4.3	0.6	 3.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

63wngb2bqq9gg	       152,190	    116,651	   564.26	42.05	    66.83	     1	     35.42	      1        152,190.0    116,651.0	     564.26	  42.05       66.83	     1.0       35.42	    4.1      4.4      3.1      4.3	0.6	 3.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

899d7tfh478uf	       150,312	    114,529	   564.33	41.18	    66.54	     1	     35.88	      1        150,312.0    114,529.0	     564.33	  41.18       66.54	     1.0       35.88	    4.1      4.3      3.1      4.2	0.6	 3.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Reads (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Total Disk Reads:	   2,672,231
-> Captured SQL account for   97.0% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Reads	       Gets   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	 Reads		 Gets	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	  Reads     Gets  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	------------ -------------- ------------- ----------- ----------- ------------ ----------- ------------   ------------ -------------- ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
35dumc2tpr9dv	   2,585,933	  3,298,301	17,887.56      895.43	10,817.80    2,706,672	    921.58	 87,312 	  29.6		 37.8	       0.20	   0.01        0.12	    31.0	0.01	   96.8     89.5     97.9     92.1     97.7	94.6	 72.7
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

27kw116fyz8ch	     135,287	    177,735	   564.32	30.98	    76.95	     1	      0.04	      1      135,287.0	    177,735.0	     564.32	  30.98       76.95	     1.0	0.04	    5.1      4.8      3.1      3.2	0.7	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

cbqrzstc5g855	     134,956	    178,598	   564.25	31.18	    76.61	     1	      0.52	      1      134,956.0	    178,598.0	     564.25	  31.18       76.61	     1.0	0.52	    5.1      4.8      3.1      3.2	0.7	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

2s38bb8cxwhkg	     134,945	    176,826	   564.28	31.05	    77.16	     1	      0.29	      1      134,945.0	    176,826.0	     564.28	  31.05       77.16	     1.0	0.29	    5.0      4.8      3.1      3.2	0.7	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

89zxxhhq9a38k	     134,641	    180,211	   564.25	31.02	    75.54	     1	      0.97	      1      134,641.0	    180,211.0	     564.25	  31.02       75.54	     1.0	0.97	    5.0      4.9      3.1      3.2	0.7	 0.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

ffg3064p5ba19	     133,174	    183,478	   564.35	31.00	    75.49	     1	      0.02	      1      133,174.0	    183,478.0	     564.35	  31.00       75.49	     1.0	0.02	    5.0      5.0      3.1      3.2	0.7	 0.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

63wngb2bqq9gg	     116,651	    152,190	   564.26	42.05	    66.83	     1	     35.42	      1      116,651.0	    152,190.0	     564.26	  42.05       66.83	     1.0       35.42	    4.4      4.1      3.1      4.3	0.6	 3.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

a44zayg3f6y2j	     116,191	    152,606	   564.30	42.28	    66.60	     1	     37.64	      1      116,191.0	    152,606.0	     564.30	  42.28       66.60	     1.0       37.64	    4.3      4.1      3.1      4.3	0.6	 3.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

83dzbzw98577h	     115,842	    152,550	   564.42	41.94	    66.95	     1	     36.42	      1      115,842.0	    152,550.0	     564.42	  41.94       66.95	     1.0       36.42	    4.3      4.1      3.1      4.3	0.6	 3.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

899d7tfh478uf	     114,529	    150,312	   564.33	41.18	    66.54	     1	     35.88	      1      114,529.0	    150,312.0	     564.33	  41.18       66.54	     1.0       35.88	    4.3      4.1      3.1      4.2	0.6	 3.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by UnOptimized Read Requests (Global)DB/Inst: P30DB/p30db1	Snaps:
-> Total Physical Read Requests:       2,671,411
-> Captured SQL account for    6.4% of Total
-> Total UnOptimized Read Requests:	  2,671,411
-> Captured SQL account for    6.4% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

								       Total													 Per Execution									    Percentage of Total
		------------------------------------------------------------------------------------------------------------------   -----------------------------------------------------------------------------------------------------   -----------------------------------------------------------------
   SQL Id	 UnOptimized	 Requests	 Reads	 Elapsed (s)	 CPU (s)  IOWait (s)	     Rows Cluster (s)	     Execs    UnOptimized     Requests	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)   UnOptimized Requests  Reads DB time DB CPU IO Wait Cluster  Execs
-------------	------------ ------------ ------------ ------------- ----------- ----------- ------------ ----------- ------------   ------------ ------------ ------------ ------------- ----------- ----------- ------------ -----------   ----------- -------- ------ ------- ------ ------- ------- ------
35dumc2tpr9dv	     166,176	  166,176    2,585,933	   17,887.56	  895.43   10,817.80	2,706,672      921.58	    87,312	      1.9	   1.9	       29.6	     0.20	 0.01	     0.12	  31.0	      0.01	     6.2      6.2   96.8    97.9   92.1    97.7    94.6   72.7
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

27kw116fyz8ch	     135,287	  135,287      135,287	      564.32	   30.98       76.95		1	 0.04		 1	135,287.0    135,287.0	  135,287.0	   564.32	30.98	    76.95	   1.0	      0.04	     5.1      5.1    5.1     3.1    3.2     0.7     0.0    0.0
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

cbqrzstc5g855	     134,956	  134,956      134,956	      564.25	   31.18       76.61		1	 0.52		 1	134,956.0    134,956.0	  134,956.0	   564.25	31.18	    76.61	   1.0	      0.52	     5.1      5.1    5.1     3.1    3.2     0.7     0.1    0.0
DECLARE v_default_schema_number PLS_INTEGER := '25'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

2s38bb8cxwhkg	     134,945	  134,945      134,945	      564.28	   31.05       77.16		1	 0.29		 1	134,945.0    134,945.0	  134,945.0	   564.28	31.05	    77.16	   1.0	      0.29	     5.1      5.1    5.0     3.1    3.2     0.7     0.0    0.0
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

89zxxhhq9a38k	     134,641	  134,641      134,641	      564.25	   31.02       75.54		1	 0.97		 1	134,641.0    134,641.0	  134,641.0	   564.25	31.02	    75.54	   1.0	      0.97	     5.0      5.0    5.0     3.1    3.2     0.7     0.1    0.0
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

ffg3064p5ba19	     133,174	  133,174      133,174	      564.35	   31.00       75.49		1	 0.02		 1	133,174.0    133,174.0	  133,174.0	   564.35	31.00	    75.49	   1.0	      0.02	     5.0      5.0    5.0     3.1    3.2     0.7     0.0    0.0
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

63wngb2bqq9gg	     116,651	  116,651      116,651	      564.26	   42.05       66.83		1	35.42		 1	116,651.0    116,651.0	  116,651.0	   564.26	42.05	    66.83	   1.0	     35.42	     4.4      4.4    4.4     3.1    4.3     0.6     3.6    0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

a44zayg3f6y2j	     116,191	  116,191      116,191	      564.30	   42.28       66.60		1	37.64		 1	116,191.0    116,191.0	  116,191.0	   564.30	42.28	    66.60	   1.0	     37.64	     4.3      4.3    4.3     3.1    4.3     0.6     3.9    0.0
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

83dzbzw98577h	     115,842	  115,842      115,842	      564.42	   41.94       66.95		1	36.42		 1	115,842.0    115,842.0	  115,842.0	   564.42	41.94	    66.95	   1.0	     36.42	     4.3      4.3    4.3     3.1    4.3     0.6     3.7    0.0
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

899d7tfh478uf	     114,529	  114,529      114,529	      564.33	   41.18       66.54		1	35.88		 1	114,529.0    114,529.0	  114,529.0	   564.33	41.18	    66.54	   1.0	     35.88	     4.3      4.3    4.3     3.1    4.2     0.6     3.7    0.0
DECLARE v_default_schema_number PLS_INTEGER := '5'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Executions (Global)	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Total Executions:	     120,021
-> Captured SQL account for   94.2% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Execs   Elapsed (s)     CPU (s)	IOWait (s)	     Gets	 Reads	       Rows Cluster (s)     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	  Execs  DB time   DB CPU  IO Wait     Gets    Reads  Cluster
-------------	------------ ------------- ----------- ----------- -------------- ------------ ------------ -----------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
35dumc2tpr9dv	      87,312	 17,887.56	895.43	 10,817.80	3,298,301    2,585,933	  2,706,672	 921.58 	   0.20        0.01	   0.12 	  37.8	       29.6	    31.0	0.01	   72.7     97.9     92.1     97.7     89.5	96.8	 94.6
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

0sbbcuruzd66f	       6,235	      2.29	  0.48	      0.58	   18,471	    87	      5,817	   1.04 	   0.00        0.00	   0.00 	   3.0		0.0	     0.9	0.00	    5.2      0.0      0.0      0.0	0.5	 0.0	  0.1
select /*+ rule */ bucket_cnt, row_cnt, cache_cnt, null_cnt, timestamp#, sample_
size, minimum, maximum, distcnt, lowval, hival, density, col#, spare1, spare2, a
vgcln, minimum_enc, maximum_enc from hist_head$ where obj#=:1 and intcol#=:2

87gaftwrm2h68	       5,954	      0.32	  0.26	      0.03	   12,435	     2		527	   0.05 	   0.00        0.00	   0.00 	   2.1		0.0	     0.1	0.00	    5.0      0.0      0.0      0.0	0.3	 0.0	  0.0
select o.owner#,o.name,o.namespace,o.remoteowner,o.linkname,o.subname from obj$
o where o.obj#=:1

2sxqgx5hx76qr	       3,726	      5.03	  0.69	      1.97	   12,550	   467	     59,185	   2.14 	   0.00        0.00	   0.00 	   3.4		0.1	    15.9	0.00	    3.1      0.0      0.1      0.0	0.3	 0.0	  0.2
select /*+ rule */ bucket, endpoint, col#, epvalue, epvalue_raw, ep_repeat_count
, endpoint_enc from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by b
ucket

acmvv4fhdc9zh	       1,228	      1.05	  0.19	      0.59	    5,042	    78		987	   0.22 	   0.00        0.00	   0.00 	   4.1		0.1	     0.8	0.00	    1.0      0.0      0.0      0.0	0.1	 0.0	  0.0
select obj#,type#,ctime,mtime,stime, status, dataobj#, flags, oid$, spare1, spar
e2, spare3, signature, spare7, spare8, spare9, nvl(dflcollid, 16382), creappid,
creverid, modappid, modverid, crepatchid, modpatchid from obj$ where owner#=:1 a
nd name=:2 and namespace=:3 and remoteowner is null and linkname is null and sub

9tgj4g8y4rwy8		 931	      0.33	  0.12	      0.12	    2,875	     7		929	   0.10 	   0.00        0.00	   0.00 	   3.1		0.0	     1.0	0.00	    0.8      0.0      0.0      0.0	0.1	 0.0	  0.0
select type#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,NVL(lis
ts,65535),NVL(groups,65535),cachehint,hwmincr, NVL(spare1,0),NVL(scanhint,0),NVL
(bitmapranges,0) from seg$ where ts#=:1 and file#=:2 and block#=:3

f3ww8rgva3hrs		 858	      0.43	  0.15	      0.01	    3,074	    11		858	   0.03 	   0.00        0.00	   0.00 	   3.6		0.0	     1.0	0.00	    0.7      0.0      0.0      0.0	0.1	 0.0	  0.0
update /* KSXM:FLUSH COL */ sys.col_usage$ set equality_preds
 = equality_preds + decode(bitand(:flag,1),0,0,1), equijoin_preds = equ
ijoin_preds + decode(bitand(:flag,2),0,0,1), nonequijoin_preds = nonequijoi
n_preds + decode(bitand(:flag,4),0,0,1), range_preds = range_preds

asvzxj61dc5vs		 502	      0.06	  0.05	      0.00	    1,248	     1		232	   0.01 	   0.00        0.00	   0.00 	   2.5		0.0	     0.5	0.00	    0.4      0.0      0.0      0.0	0.0	 0.0	  0.0
select timestamp, flags from fixed_obj$ where obj#=:1

g0t052az3rx44		 472	      0.39	  0.18	      0.16	    1,997	     5	      6,324	   0.04 	   0.00        0.00	   0.00 	   4.2		0.0	    13.4	0.00	    0.4      0.0      0.0      0.0	0.1	 0.0	  0.0
select name,intcol#,segcol#,type#,length,nvl(precision#,0),decode(type#,2,nvl(sc
ale,-127/*MAXSB1MINAL*/),178,scale,179,scale,180,scale,181,scale,182,scale,183,s
cale,231,scale,0),null$,fixedstorage,nvl(deflength,0),default$,rowid,col#,proper
ty, nvl(charsetid,0),nvl(charsetform,0),spare1,spare2,nvl(spare3,0), nvl(evaledi

04kug40zbu4dm		 377	      0.09	  0.05	      0.00	    3,043	     1		  0	   0.01 	   0.00        0.00	   0.00 	   8.1		0.0	     0.0	0.00	    0.3      0.0      0.0      0.0	0.1	 0.0	  0.0
select policy#, action# from aud_object_opt$ where object# = :1 and type = 2

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Cluster Wait Time (Global)  DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Total Cluster Wait Time (s): 	    974
-> Captured SQL account for   95.7% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	Cluster (s)   Elapsed (s)     CPU (s)  IOWait (s)	    Gets	Reads	      Rows	  Execs   Cluster (s)	Elapsed (s)	CPU (s)  IOWait (s)	      Gets	  Reads 	Rows	Cluster  DB time   DB CPU     Gets  IO Wait    Reads	Execs
-------------	----------- ------------- ----------- ----------- -------------- ------------ ------------ ------------   ----------- ------------- ----------- ----------- -------------- ------------ ------------   -------- -------- -------- -------- -------- -------- --------
35dumc2tpr9dv	     921.58	17,887.56      895.43	10,817.80      3,298,301    2,585,933	 2,706,672	 87,312 	 0.01	       0.20	   0.01        0.12	      37.8	   29.6 	31.0	   94.6     97.9     92.1     97.7     89.5	96.8	 72.7
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

crcf813m8k6q0	      81.82	   563.55	25.65	   467.46	  68,848       53,821		 1	      1 	81.82	     563.55	  25.65      467.46	  68,848.0     53,821.0 	 1.0	    8.4      3.1      2.6      4.2	1.9	 2.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

dbyf2w4zdhm5a	      64.84	   564.39	51.54	    64.07	 138,571      106,936		 1	      1 	64.84	     564.39	  51.54       64.07	 138,571.0    106,936.0 	 1.0	    6.7      3.1      5.3      0.6	3.8	 4.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

129d7r965xakz	      48.00	   563.82	30.75	   498.23	  81,662       62,092		 1	      1 	48.00	     563.82	  30.75      498.23	  81,662.0     62,092.0 	 1.0	    4.9      3.1      3.2      4.5	2.2	 2.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

7qdskga9a98tt	      46.88	   563.67	30.58	   499.06	  81,379       63,414		 1	      1 	46.88	     563.67	  30.58      499.06	  81,379.0     63,414.0 	 1.0	    4.8      3.1      3.1      4.5	2.2	 2.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '12'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

c863fngb197rm	      45.64	   563.65	30.29	   500.09	  81,225       61,621		 1	      1 	45.64	     563.65	  30.29      500.09	  81,225.0     61,621.0 	 1.0	    4.7      3.1      3.1      4.5	2.2	 2.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

7huzc5jc2tyyr	      43.61	   563.70	28.14	   504.12	  73,517       56,952		 1	      1 	43.61	     563.70	  28.14      504.12	  73,517.0     56,952.0 	 1.0	    4.5      3.1      2.9      4.6	2.0	 2.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '4'; v_update_pct PLS_INTEGER :=
'100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_re
do_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do

3uawgw8gknfx7	      42.75	   563.67	27.64	   505.64	  74,995       54,912		 1	      1 	42.75	     563.67	  27.64      505.64	  74,995.0     54,912.0 	 1.0	    4.4      3.1      2.8      4.6	2.0	 2.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

g5wjwfs93z517	      42.50	   563.74	27.85	   505.35	  74,031       56,802		 1	      1 	42.50	     563.74	  27.85      505.35	  74,031.0     56,802.0 	 1.0	    4.4      3.1      2.9      4.6	2.0	 2.1	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '24'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

4p0za9517qhty	      40.49	   563.72	26.14	   508.84	  68,964       52,329		 1	      1 	40.49	     563.72	  26.14      508.84	  68,964.0     52,329.0 	 1.0	    4.2      3.1      2.7      4.6	1.9	 2.0	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '31'; v_update_pct PLS_INTEGER :=
 '100'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :
= '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '32' ; v_r
edo_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_d

			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
ASSM bg: segment fix monitor						      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM cbk:blocks examined						  1,180 	   1.9		0.0		1.0	      0.1	    0.9 	  1.0
ASSM cbk:blocks marked full						    273 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
ASSM gsp:L1 bitmaps examined						    987 	   1.6		0.0		0.8	      0.1	    0.8 	  0.9
ASSM gsp:L2 bitmap full 						     56 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
ASSM gsp:L2 bitmaps examined						    397 	   0.6		0.0		0.3	      0.2	    0.2 	  0.4
ASSM gsp:Search all							     57 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
ASSM gsp:Search hint							     37 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:Search steal							     35 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:bump HWM							     35 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:get free block 						    907 	   1.5		0.0		0.7	      0.1	    0.7 	  0.8
ASSM gsp:get free data block						    721 	   1.2		0.0		0.6	      0.1	    0.5 	  0.6
ASSM gsp:get free index block						    186 	   0.3		0.0		0.2	      0.0	    0.1 	  0.2
ASSM gsp:good hint							    764 	   1.2		0.0		0.6	      0.0	    0.6 	  0.6
ASSM rsv:fill reserve							     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM wasted db state change						      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Batched IO (bound) vector count 					      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO block miss count						     22 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Batched IO double miss count						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO same unit count						     12 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO single block count						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO vector block count						      9 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO vector read count						      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Block Cleanout Optim referenced 					356,288 	 582.7		3.9	      291.4	     97.8	  222.2 	360.5
CCursor + sql area evicted						  3,547 	   5.8		0.0		2.9	      0.5	    2.6 	  3.2
CPU used by this session						151,876 	 248.4		1.7	      124.2	     10.3	  116.9 	131.5
CPU used when call started						112,756 	 184.4		1.2	       92.2	      8.5	   86.2 	 98.2
CR blocks created							     65 	   0.1		0.0		0.1	      0.0	    0.0 	  0.1
Cached Commit SCN referenced						402,999 	 659.2		4.5	      329.6	     77.2	  275.0 	384.1
Client Advertised Receive Window					    231 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
Client Advertised Send Window						    231 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
Client Path Maximum Transmission Unit(MTU)			      1,009,125        1,650.1	       11.2	      825.1	  1,106.4	   42.7       1,607.4
Client Send Congestion Window						    330 	   0.5		0.0		0.3	      0.0	    0.2 	  0.3
Client Time (usec) Last Ack Received					    268 	   0.4		0.0		0.2	      0.3	    0.0 	  0.4
Client Time (usec) Last Data Received					     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Time (usec) Last Data Sent					    842 	   1.4		0.0		0.7	      0.7	    0.2 	  1.1
Client Time (usec) Round Trip Time					135,844 	 222.2		1.5	      111.1	     37.3	   84.7 	137.5
Client Time (usec) Round Trip Time Variance				189,139 	 309.3		2.1	      154.7	    102.8	   82.0 	227.4
Client Total Bytes Acked						510,787 	 835.5		5.7	      417.8	     68.2	  369.5 	466.0
Client Total Bytes Received						200,519 	 328.0		2.2	      164.0	     22.4	  148.2 	179.8
DB time 							      1,925,770        3,150.1	       21.3	    1,575.1	    279.0	1,377.8       1,772.4
DBWR checkpoint buffers written 					398,805 	 652.4		4.4	      326.2	    202.5	  183.0 	469.4
DBWR checkpoints							    170 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
DBWR fusion writes							    175 	   0.3		0.0		0.1	      0.0	    0.1 	  0.2
DBWR object drop buffers written					     24 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
DBWR transaction table writes						  2,044 	   3.3		0.0		1.7	      1.7	    0.5 	  2.9
DBWR undo block writes							103,858 	 169.9		1.2	       84.9	     43.6	   54.1 	115.8
DFO trees parallelized							    113 	   0.2		0.0		0.1	      0.1	    0.0 	  0.2
Effective IO time							 51,629 	  84.5		0.6	       42.2	     33.5	   18.5 	 65.9
HSC Heap Segment Block Changes					      2,795,819        4,572.9	       31.0	    2,286.4	    598.2	1,863.5       2,709.4
Heap Segment Array Inserts						    418 	   0.7		0.0		0.3	      0.0	    0.3 	  0.4
Heap Segment Array Updates						     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
KTFB alloc req								    402 	   0.7		0.0		0.3	      0.1	    0.2 	  0.4
KTFB alloc space (block)					    389,087,232      636,354.4	    4,312.8	  318,177.2	165,320.4     201,278.0     435,076.3
KTFB alloc time (ms)						      1,190,618        1,946.9	       13.2	      973.4	  1,294.5	   58.1       1,888.8
KTFB apply req								    368 	   0.6		0.0		0.3	      0.2	    0.2 	  0.4
KTFB apply time (ms)							 11,413 	  18.7		0.1		9.3	      3.7	    6.7 	 11.9
PX local messages recv'd						  1,215 	   2.0		0.0		1.0	      1.3	    0.1 	  1.9
PX local messages sent							  1,215 	   2.0		0.0		1.0	      1.3	    0.1 	  1.9
PX remote messages recv'd						  1,143 	   1.9		0.0		0.9	      0.2	    0.8 	  1.0

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
PX remote messages sent 						  1,181 	   1.9		0.0		1.0	      0.1	    0.9 	  1.1
Parallel operations not downgraded					    173 	   0.3		0.0		0.1	      0.2	    0.0 	  0.3
Requests to/from client 						    229 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
SQL*Net roundtrips to/from client					    197 	   0.3		0.0		0.2	      0.1	    0.1 	  0.3
active txn count during cleanout					    458 	   0.7		0.0		0.4	      0.0	    0.4 	  0.4
application wait time							  1,555 	   2.5		0.0		1.3	      1.8	    0.0 	  2.5
background timeouts							 10,795 	  17.7		0.1		8.8	      0.1	    8.8 	  8.9
blocks cleaned out using minact 				      1,060,692        1,734.9	       11.8	      867.5	     77.0	  813.0 	921.9
buffer is not pinned count						192,776 	 315.3		2.1	      157.7	      9.1	  151.2 	164.1
buffer is pinned count						      2,818,942        4,610.7	       31.2	    2,305.3	    606.8	1,876.2       2,734.4
bytes received via SQL*Net from client					418,913 	 685.4		4.6	      342.7	    444.9	   28.1 	657.3
bytes sent via SQL*Net to client					 42,259 	  69.1		0.5	       34.6	     21.3	   19.5 	 49.7
calls to get snapshot scn: kcmgss					225,548 	 368.9		2.5	      184.5	     26.9	  165.4 	203.5
calls to kcmgas 							132,187 	 216.2		1.5	      108.1	      1.5	  107.1 	109.1
calls to kcmgcs 							  8,495 	  13.9		0.1		6.9	      0.3	    6.7 	  7.2
cell physical IO interconnect bytes				 74,865,987,072  122,447,201.2	  829,843.5    61,223,600.6  24,563,209.7  43,854,788.4  78,592,412.7
change write time							  5,496 	   9.0		0.1		4.5	      0.9	    3.9 	  5.1
cleanout - number of ktugct calls					    507 	   0.8		0.0		0.4	      0.0	    0.4 	  0.4
cleanouts only - consistent read gets					     57 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
cluster key scan block gets						  9,514 	  15.6		0.1		7.8	      2.9	    5.7 	  9.9
cluster key scans							  6,851 	  11.2		0.1		5.6	      2.4	    3.9 	  7.3
cluster wait time							 97,322 	 159.2		1.1	       79.6	     39.2	   51.9 	107.3
commit batch/immediate performed					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit batch/immediate requested					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit cleanout failures: block lost					     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanout failures: buffer being written				     60 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
commit cleanout failures: callback failure				     34 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanout failures: cannot pin					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit cleanouts						      2,795,806        4,572.8	       31.0	    2,286.4	    597.6	1,863.8       2,709.0
commit cleanouts successfully completed 			      2,795,695        4,572.7	       31.0	    2,286.3	    597.6	1,863.8       2,708.9
commit immediate performed						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit immediate requested						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit txn count during cleanout					    254 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
concurrency wait time							    103 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
consistent changes							  2,776 	   4.5		0.0		2.3	      3.0	    0.1 	  4.4
consistent gets 							431,258 	 705.4		4.8	      352.7	     28.5	  332.5 	372.9
consistent gets examination						243,361 	 398.1		2.7	      199.0	     23.2	  182.6 	215.5
consistent gets examination (fastpath)					242,119 	 396.0		2.7	      198.0	     24.0	  181.0 	215.0
consistent gets from cache						431,258 	 705.4		4.8	      352.7	     28.5	  332.5 	372.9
consistent gets pin							187,897 	 307.3		2.1	      153.7	      5.3	  150.0 	157.4
consistent gets pin (fastpath)						156,076 	 255.3		1.7	      127.6	     28.6	  107.4 	147.9
cursor authentications							    417 	   0.7		0.0		0.3	      0.1	    0.3 	  0.4
cursor reload failures							     67 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1
data blocks consistent reads - undo records applied			     49 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
db block changes						      5,918,884        9,681.0	       65.6	    4,840.5	  1,260.0	3,949.5       5,731.5
db block gets							      3,253,337        5,321.2	       36.1	    2,660.6	    683.0	2,177.6       3,143.6
db block gets direct							    892 	   1.5		0.0		0.7	      0.9	    0.1 	  1.4
db block gets from cache					      3,252,444        5,319.7	       36.1	    2,659.9	    683.9	2,176.2       3,143.5
db block gets from cache (fastpath)					428,622 	 701.1		4.8	      350.5	     94.4	  283.8 	417.3
deferred (CURRENT) block cleanout applications			      1,082,267        1,770.2	       12.0	      885.1	     87.1	  823.5 	946.7
dirty buffers inspected 					      1,554,150        2,541.3	       17.2	    1,270.7	  1,750.9	   32.6       2,508.7
enqueue conversions							  1,622 	   2.7		0.0		1.3	      1.1	    0.5 	  2.1
enqueue releases							205,645 	 336.4		2.3	      168.2	     37.8	  141.5 	194.9
enqueue requests							205,571 	 336.2		2.3	      168.1	     37.8	  141.4 	194.8
enqueue timeouts							     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
enqueue waits								    947 	   1.5		0.0		0.8	      0.1	    0.7 	  0.9
exchange deadlocks							      4 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
execute count								120,021 	 196.3		1.3	       98.2	     12.7	   89.1 	107.2
file io service time						    210,257,402      343,969.1	    2,330.6	  171,984.6	103,665.3      98,682.2     245,287.0
file io wait time					      2,355,430,369,317 3.85192299E+09 2.610850E+07   1.9259615E+09 1.8334506E+09 6.2951618E+08 3.2224068E+09

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
free buffer inspected						      2,995,762        4,899.3	       33.2	    2,449.7	  1,797.1	1,178.9       3,720.4
free buffer requested						      3,434,984        5,618.0	       38.1	    2,809.0	  1,265.3	1,914.3       3,703.7
gc blocks compressed							 18,176 	  29.7		0.2	       14.9	      5.5	   11.0 	 18.8
gc blocks lost								     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cleanout saved							     14 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cr anti locks created						 55,739 	  91.2		0.6	       45.6	      0.1	   45.5 	 45.7
gc cr anti locks shrunk 						    177 	   0.3		0.0		0.1	      0.1	    0.0 	  0.2
gc cr block build time							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc cr block flush time							    265 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
gc cr block receive time						    413 	   0.7		0.0		0.3	      0.2	    0.2 	  0.5
gc cr blocks built							    525 	   0.9		0.0		0.4	      0.3	    0.2 	  0.7
gc cr blocks flushed							     81 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
gc cr blocks received							  1,939 	   3.2		0.0		1.6	      1.2	    0.8 	  2.4
gc cr blocks served							  1,956 	   3.2		0.0		1.6	      1.2	    0.8 	  2.4
gc cr multiblock grant time						      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc cr multiblock grants received					     81 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
gc current block flush time						    561 	   0.9		0.0		0.5	      0.5	    0.1 	  0.8
gc current block pin time						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc current block receive time						  3,997 	   6.5		0.0		3.3	      3.4	    0.9 	  5.7
gc current blocks flushed						     63 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1
gc current blocks pinned						      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc current blocks received						 37,394 	  61.2		0.4	       30.6	     29.0	   10.1 	 51.1
gc current blocks served						 37,304 	  61.0		0.4	       30.5	     29.1	    9.9 	 51.1
gc force cr read cr							     81 	   0.1		0.0		0.1	      0.0	    0.0 	  0.1
gc force cr read current						      4 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc kbytes saved 							 78,689 	 128.7		0.9	       64.4	     21.8	   48.9 	 79.8
gc kbytes sent								235,391 	 384.9		2.6	      192.5	    201.9	   49.7 	335.2
gc local grants 						      1,512,837        2,474.1	       16.8	    1,237.1	    914.9	  590.1       1,884.0
gc merge pi bg								      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc merge pi fg								    100 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
gc no change made							     21 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc read time waited							      6 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc read waits								      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc reader bypass grants 						     38 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc reader bypass waits							      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc remote grants						      1,276,216        2,087.7	       14.1	    1,043.8	    327.9	  812.0       1,275.7
gc status messages received					      1,186,444        1,940.8	       13.2	      970.4	    251.6	  792.5       1,148.3
gc status messages sent 					      1,187,013        1,941.5	       13.2	      970.7	    256.3	  789.5       1,152.0
gcs affinity lock failures						  1,532 	   2.5		0.0		1.3	      1.4	    0.3 	  2.2
gcs affinity lock grants						860,779        1,407.6		9.5	      703.8	    759.6	  166.7       1,240.9
gcs anti-locks created							 55,717 	  91.1		0.6	       45.6	      0.2	   45.5 	 45.7
gcs data block access records					      2,768,841        4,528.7	       30.7	    2,264.4	    595.3	1,843.4       2,685.3
gcs messages sent						      3,682,016        6,023.0	       40.8	    3,011.5	    553.3	2,620.2       3,402.7
gcs read-mostly lock failures						 54,555 	  89.3		0.6	       89.3	      N/A	   89.3 	 89.3
ges messages sent							 40,812 	  66.7		0.5	       33.4	     21.6	   18.1 	 48.7
global enqueue get time 						  2,468 	   4.0		0.0		2.0	      1.8	    0.7 	  3.3
global enqueue gets sync						225,816 	 369.4		2.5	      184.7	     23.0	  168.5 	200.9
global enqueue releases 						224,475 	 367.2		2.5	      183.6	     21.8	  168.2 	199.0
heap block compress							 28,331 	  46.3		0.3	       23.2	      1.7	   22.0 	 24.4
hot buffers moved to head of LRU					112,992 	 184.8		1.3	       92.4	     43.7	   61.5 	123.3
immediate (CR) block cleanout applications				     57 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
immediate (CURRENT) block cleanout applications 			    493 	   0.8		0.0		0.4	      0.0	    0.4 	  0.4
in call idle wait time						      9,837,852       16,092.0	      109.0	    8,046.0	    225.8	7,886.3       8,205.6
index crx upgrade (positioned)						     61 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
index fast full scans (full)						      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
index fetch by key							 19,947 	  32.6		0.2	       16.3	      3.7	   13.7 	 18.9
index range scans							108,391 	 177.3		1.2	       88.6	     13.7	   79.0 	 98.3
leaf node 90-10 splits							     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
leaf node splits							    170 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
lob reads								    401 	   0.7		0.0		0.3	      0.5	    0.0 	  0.7

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
lob writes								    916 	   1.5		0.0		0.7	      1.0	    0.0 	  1.5
lob writes unaligned							    915 	   1.5		0.0		0.7	      1.0	    0.0 	  1.5
logical read bytes from cache					 30,176,878,592   49,357,785.5	  334,492.2    24,678,892.8   5,836,278.1  20,552,021.0  28,805,764.5
logons cumulative							    352 	   0.6		0.0		0.3	      0.0	    0.3 	  0.3
max cf enq hold time							    717 	   1.2		0.0		1.2	      N/A	    1.2 	  1.2
messages received							101,918 	 166.7		1.1	       83.4	     76.5	   29.3 	137.5
messages sent								101,916 	 166.7		1.1	       83.4	     76.5	   29.3 	137.5
no work - consistent read gets						176,174 	 288.2		2.0	      144.1	      5.0	  140.6 	147.6
non-idle wait count						      7,003,657       11,455.4	       77.6	    5,727.7	  1,105.6	4,945.9       6,509.5
non-idle wait time						      2,038,935        3,335.2	       22.6	    1,667.6	    175.9	1,543.2       1,792.0
opened cursors cumulative						210,122 	 343.7		2.3	      171.8	     32.2	  149.1 	194.6
parse count (describe)							     17 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
parse count (failures)							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
parse count (hard)							  1,825 	   3.0		0.0		1.5	      0.2	    1.4 	  1.6
parse count (total)							  9,070 	  14.8		0.1		7.4	      1.1	    6.7 	  8.2
parse time cpu								    426 	   0.7		0.0		0.3	      0.1	    0.3 	  0.4
parse time elapsed							  1,079 	   1.8		0.0		0.9	      0.5	    0.6 	  1.2
physical read IO requests					      2,671,411        4,369.4	       29.6	    2,184.7	    558.9	1,789.5       2,579.9
physical read bytes						 21,890,908,160   35,804,958.8	  242,647.3    17,902,479.4   4,571,340.3  14,670,053.7  21,134,905.1
physical read total IO requests 				      2,681,930        4,386.6	       29.7	    2,193.3	    558.8	1,798.2       2,588.4
physical read total bytes					 24,902,911,488   40,731,750.7	  276,033.5    20,365,875.3   4,501,148.5  17,183,082.8  23,548,667.9
physical read total multi block requests				  2,770 	   4.5		0.0		2.3	      0.1	    2.2 	  2.3
physical reads							      2,672,231        4,370.7	       29.6	    2,185.4	    558.0	1,790.8       2,579.9
physical reads cache						      2,672,147        4,370.6	       29.6	    2,185.3	    558.1	1,790.7       2,579.9
physical reads cache prefetch						    825 	   1.3		0.0		0.7	      0.9	    0.0 	  1.3
physical reads direct							     84 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
physical reads direct (lob)						     84 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
physical write IO requests					      2,278,496        3,726.5	       25.3	    1,863.2	  1,025.7	1,137.9       2,588.5
physical write bytes						 20,111,785,984   32,892,710.1	  222,926.8    16,446,355.0   9,028,748.9  10,062,065.4  22,830,644.6
physical write total IO requests				      2,412,580        3,945.8	       26.7	    1,972.9	    959.7	1,294.3       2,651.5
physical write total bytes					 24,971,810,816   40,841,815.1	  276,797.2    20,420,907.5  10,030,355.8  13,328,375.0  27,513,440.1
physical write total multi block requests				  7,668 	  12.5		0.1		6.3	      6.2	    1.9 	 10.7
physical writes 						      2,455,052        4,015.2	       27.2	    2,007.6	  1,102.1	1,228.3       2,786.9
physical writes direct							  1,021 	   1.7		0.0		0.8	      0.9	    0.2 	  1.5
physical writes direct (lob)						    129 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
physical writes direct temporary tablespace				    778 	   1.3		0.0		0.6	      0.9	    0.0 	  1.3
physical writes from cache					      2,454,031        4,013.6	       27.2	    2,006.8	  1,103.1	1,226.8       2,786.8
physical writes non checkpoint					      2,409,463        3,940.7	       26.7	    1,970.3	  1,099.3	1,193.0       2,747.7
pinned buffers inspected						     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
process last non-idle time						  1,226 	   2.0		0.0		1.0	      0.0	    1.0 	  1.0
recursive calls 							367,763 	 601.5		4.1	      300.8	     38.8	  273.3 	328.2
recursive cpu usage							106,819 	 174.7		1.2	       87.4	      8.2	   81.6 	 93.2
redo KB read							      1,703,936        2,787.2	       18.9	    1,393.6	     57.5	1,352.9       1,434.3
redo blocks checksummed by FG (exclusive)			      1,814,125        2,967.2	       20.1	    1,483.6	    419.7	1,186.8       1,780.4
redo blocks written						      4,727,428        7,732.2	       52.4	    3,866.1	    977.2	3,175.2       4,557.1
redo blocks written (group 0)					      2,129,320        3,482.5	       23.6	    1,741.3	    880.6	1,118.6       2,363.9
redo blocks written (group 1)					      1,748,099        2,858.9	       19.4	    1,429.4	  1,080.1	  665.7       2,193.2
redo entries							      2,962,697        4,845.8	       32.8	    2,422.9	    564.3	2,023.9       2,821.9
redo size							  2,326,756,592    3,805,660.3	   25,790.7	1,902,830.1	492,008.9   1,554,927.3   2,250,733.0
redo size for direct writes						    240 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
redo subscn max counts							    221 	   0.4		0.0		0.2	      0.1	    0.1 	  0.2
redo synch time 							    514 	   0.8		0.0		0.4	      0.3	    0.2 	  0.7
redo synch time (usec)						      5,105,604        8,349.7	       56.6	    4,174.8	  3,390.1	1,777.7       6,572.0
redo synch time overhead (usec) 					 11,477 	  18.8		0.1		9.4	      6.3	    4.9 	 13.8
redo synch time overhead count (  2ms)					     33 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
redo synch time overhead count (  8ms)					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
redo synch writes							     36 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
redo wastage							     16,133,524       26,393.6	      178.8	   13,196.8	  8,119.8	7,455.2      18,938.4
redo write active strands						 66,147 	 108.2		0.7	       54.1	     33.1	   30.7 	 77.5
redo write finish time						  1,768,862,371    2,893,092.0	   19,606.8	1,446,546.0	525,866.0   1,074,702.6   1,818,389.4

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
redo write gather time						    119,319,312      195,128.4	    1,322.6	   97,564.2	 90,608.0      33,494.7     161,633.7
redo write info find							     34 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
redo write schedule time					    119,966,875      196,187.8	    1,329.8	   98,093.9	 90,329.8      34,221.0     161,966.7
redo write size count (   4KB)						  1,192 	   1.9		0.0		1.0	      0.2	    0.8 	  1.1
redo write size count (   8KB)						  1,721 	   2.8		0.0		1.4	      0.8	    0.9 	  1.9
redo write size count (  16KB)						  4,619 	   7.6		0.1		3.8	      3.6	    1.2 	  6.3
redo write size count (  32KB)						  9,879 	  16.2		0.1		8.1	      9.9	    1.1 	 15.1
redo write size count ( 128KB)						 15,468 	  25.3		0.2	       12.7	     11.2	    4.7 	 20.6
redo write size count ( 256KB)						  3,228 	   5.3		0.0		2.6	      3.3	    0.3 	  5.0
redo write size count ( 512KB)						  1,364 	   2.2		0.0		1.1	      1.5	    0.0 	  2.2
redo write size count (1024KB)						    173 	   0.3		0.0		0.1	      0.2	    0.0 	  0.3
redo write size count (inf)						     14 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
redo write time 							177,039 	 289.6		2.0	      144.8	     52.5	  107.6 	181.9
redo write time (usec)						  1,770,390,775    2,895,592.2	   19,623.7	1,447,796.1	525,483.3   1,076,223.3   1,819,368.9
redo write total time						  1,888,896,571    3,089,390.4	   20,937.3	1,544,695.2	615,214.5   1,109,672.8   1,979,717.5
redo write worker delay (usec)					    116,473,318      190,472.2	    1,291.0	   95,236.1	 92,631.5      29,735.7     160,736.5
redo write worker delay count						 26,609 	  43.5		0.3	       21.8	      7.9	   16.2 	 27.3
redo writes								 37,656 	  61.6		0.4	       30.8	     20.7	   16.2 	 45.4
redo writes (group 0)							 14,085 	  23.0		0.2	       11.5	      4.7	    8.2 	 14.9
redo writes (group 1)							 12,524 	  20.5		0.1	       10.2	      3.2	    8.0 	 12.5
redo writes adaptive all						 37,656 	  61.6		0.4	       30.8	     20.7	   16.2 	 45.4
redo writes adaptive worker						 26,609 	  43.5		0.3	       21.8	      7.9	   16.2 	 27.3
rollbacks only - consistent read gets					     28 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
rows fetched via callback						  9,629 	  15.8		0.1		7.9	      1.9	    6.5 	  9.2
securefile allocation bytes					      1,056,768        1,728.6	       11.7	      864.3	    123.6	  776.9 	951.7
securefile allocation chunks						     35 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
securefile bytes non-transformed					920,840        1,506.3	       10.2	      753.1	    103.7	  679.8 	826.5
securefile direct read bytes						688,128        1,125.8		7.6	      562.9	    493.0	  214.3 	911.5
securefile direct read ops						     80 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
securefile direct write bytes					      1,056,768        1,728.6	       11.7	      864.3	    123.6	  776.9 	951.7
securefile direct write ops						     35 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
securefile number of non-transformed flushes				     35 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
segment chunks allocation from dispenser				     35 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
segment dispenser allocations						     35 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
segment prealloc ops							      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
segment prealloc time (ms)						    129 	   0.2		0.0		0.1	      0.1	    0.0 	  0.2
session connect time							    648 	   1.1		0.0		1.1	      N/A	    1.1 	  1.1
session cursor cache hits						206,022 	 337.0		2.3	      168.5	     31.9	  145.9 	191.1
session logical reads						      3,684,618        6,026.6	       40.8	    3,013.3	    711.5	2,510.2       3,516.4
shared hash latch upgrades - no wait					 10,142 	  16.6		0.1		8.3	      6.2	    3.9 	 12.7
shared io pool buffer get success					    111 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
sorts (memory)								  6,745 	  11.0		0.1		5.5	      2.7	    3.6 	  7.4
sorts (rows)							      1,044,319        1,708.7	       11.6	      854.4	  1,076.7	   93.0       1,615.7
sql area evicted							  3,782 	   6.2		0.0		3.1	      0.6	    2.7 	  3.5
sql area purged 							     94 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
summed dirty queue length					    332,765,213      544,123.6	    3,688.5	  272,061.8	384,459.5	  207.9     543,915.7
switch current caused by our pin					     72 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
switch current to new buffer						     82 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
table fetch by rowid							 37,054 	  60.6		0.4	       30.3	      2.9	   28.3 	 32.4
table fetch continued row						    758 	   1.2		0.0		0.6	      0.6	    0.2 	  1.0
table scan blocks gotten						 24,131 	  39.5		0.3	       19.7	      0.4	   19.4 	 20.0
table scan disk non-IMC rows gotten					985,114        1,611.5	       10.9	      805.7	    283.7	  605.2       1,006.3
table scan rows gotten							985,114        1,611.5	       10.9	      805.7	    283.7	  605.2       1,006.3
table scans (short tables)						  1,772 	   2.9		0.0		1.4	      0.4	    1.2 	  1.7
total cf enq hold time							 16,593 	  27.1		0.2	       13.6	     11.0	    5.8 	 21.3
total number of cf enq holders						    460 	   0.8		0.0		0.4	      0.0	    0.4 	  0.4
undo change vector size 					    965,179,416    1,578,655.3	   10,698.4	  789,327.6	202,700.1     645,997.0     932,658.2
user I/O wait time						      1,107,356        1,811.7	       12.3	      905.9	    882.4	  281.9       1,529.8
user calls								  2,064 	   3.4		0.0		1.7	      0.1	    1.6 	  1.8
user commits								 90,217 	 147.6		1.0	       73.8	     19.3	   60.1 	 87.4

System Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
user logons cumulative							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
user logouts cumulative 						     33 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
workarea executions - optimal						  3,369 	   5.5		0.0		2.8	      1.3	    1.8 	  3.7
write clones created in foreground					    623 	   1.0		0.0		0.5	      0.5	    0.2 	  0.9
			  --------------------------------------------------------------------------------------------------------------------


Global Messaging Statistics (Global)	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
Global Enqueue S-optim Broadcasts sent					    109 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
Global Enqueue S-optim S-lock gets					124,030 	 202.9		1.4	      101.4	     40.1	   73.1 	129.8
Global Enqueue S-optim anti-locks crea					     60 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
acks for commit broadcast(actual)					  7,566 	  12.4		0.1		6.2	      8.0	    0.5 	 11.9
acks for commit broadcast(logical)					 14,525 	  23.8		0.2	       11.9	     14.8	    1.4 	 22.4
broadcast msgs on commit(actual)					 14,516 	  23.8		0.2	       11.9	     14.8	    1.4 	 22.4
broadcast msgs on commit(logical)					 37,618 	  61.5		0.4	       30.8	     20.7	   16.2 	 45.4
broadcast msgs on commit(wasted)					  6,244 	  10.2		0.1		5.1	      6.0	    0.9 	  9.3
flow control messages received						     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
flow control messages sent						     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs assume no cvt							 22,438 	  36.7		0.2	       18.3	     18.6	    5.2 	 31.5
gcs ast to fg							      1,185,479        1,939.0	       13.1	      969.5	    256.1	  788.4       1,150.5
gcs bidless ast to lms							    614 	   1.0		0.0		0.5	      0.0	    0.5 	  0.5
gcs blocked converts							 71,538 	 117.0		0.8	       58.5	      8.1	   52.8 	 64.2
gcs blocked cr converts 						  1,894 	   3.1		0.0		1.5	      1.6	    0.4 	  2.7
gcs compatible basts							     22 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (global)					     38 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (local) 					 21,497 	  35.2		0.2	       17.6	      0.0	   17.6 	 17.6
gcs dbwr flush pi msgs							972,478        1,590.7	       10.8	      795.3	      4.2	  792.4 	798.3
gcs dbwr write request msgs						    174 	   0.3		0.0		0.1	      0.0	    0.1 	  0.2
gcs force cr block only 						      8 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs force cr grant							      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs grant ast							      1,186,093        1,940.0	       13.1	      970.0	    256.1	  788.9       1,151.1
gcs immediate (compatible) converts					  8,877 	  14.5		0.1		7.3	      3.8	    4.6 	  9.9
gcs immediate (null) converts					      1,848,770        3,023.8	       20.5	    1,511.9	    415.9	1,217.8       1,806.0
gcs immediate cr (compatible) converts					    134 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
gcs immediate cr (null) converts					  9,370 	  15.3		0.1		7.7	      0.7	    7.2 	  8.1
gcs lms write request msgs						    124 	   0.2		0.0		0.1	      0.1	    0.1 	  0.1
gcs msgs process time(ms)						133,686 	 218.7		1.5	      109.3	     25.9	   91.0 	127.6
gcs msgs received						      3,712,050        6,071.6	       41.1	    3,035.8	    534.0	2,658.2       3,413.4
gcs new served by master						    317 	   0.5		0.0		0.3	      0.0	    0.2 	  0.3
gcs out-of-order msgs							     24 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs pings refused							 11,531 	  18.9		0.1		9.4	      7.1	    4.4 	 14.4
gcs queued converts							      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs reader bypass grant immediate					     38 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gcs refuse xid								      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs refuse xid to fg							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs side channel msgs actual						  8,644 	  14.1		0.1		7.1	      0.1	    7.0 	  7.2
gcs side channel msgs logical					      1,226,415        2,006.2	       13.6	    1,003.1	    279.9	  805.2       1,201.0
gcs stale cr								     73 	   0.1		0.0		0.1	      0.0	    0.0 	  0.1
gcs undo cr								     53 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
gcs writes refused							      3 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ges msgs process time(ms)						    190 	   0.3		0.0		0.2	      0.0	    0.1 	  0.2
ges msgs received							  7,125 	  11.7		0.1		5.8	      1.1	    5.1 	  6.6
ges remote lock allocation						     57 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
implicit batch messages received					113,332 	 185.4		1.3	       92.7	     12.3	   84.0 	101.4
implicit batch messages sent						113,612 	 185.8		1.3	       92.9	     12.6	   84.0 	101.8
messages flow controlled						 15,167 	  24.8		0.2	       12.4	     16.4	    0.8 	 24.0
messages queue sent actual						410,464 	 671.4		4.5	      335.7	     29.5	  314.8 	356.5
messages queue sent logical					      1,135,727        1,857.7	       12.6	      928.9	     55.7	  889.5 	968.2
messages received actual					      1,717,864        2,809.8	       19.0	    1,404.9	    306.7	1,188.0       1,621.8
messages received logical					      3,719,175        6,083.2	       41.2	    3,041.6	    535.1	2,663.2       3,420.0
messages sent directly						      1,303,875        2,132.9	       14.5	    1,066.5	    330.1	  833.0       1,299.9
messages sent indirectly					      2,342,838        3,832.3	       26.0	    1,916.2	    250.6	1,739.0       2,093.4
messages sent not implicit batched					 39,445 	  64.5		0.4	       32.3	     36.8	    6.3 	 58.3
messages sent pbatched						      1,322,777        2,163.8	       14.7	    1,081.9	    189.5	  947.9       1,215.8
msgs received kernel queue time (ns)				179,852,207,238  294,143,589.6	1,993,551.2   1.4707179E+08  88,418,765.6  84,550,286.0 2.0959330E+08
msgs received queue time (ms)						286,620 	 468.8		3.2	      234.4	     55.3	  195.3 	273.5
msgs received queued						      3,719,129        6,083.2	       41.2	    3,041.6	    535.1	2,663.2       3,419.9
msgs sent queue time (ms)					      3,707,586        6,065.3	       41.1	    3,032.7	  1,644.8	1,869.6       4,195.7

Global Messaging Statistics (Global)	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
msgs sent queue time on ksxp (ms)				      5,173,294        8,464.2	       57.3	    4,232.1	  4,705.3	  905.0       7,559.2
msgs sent queued						      1,289,575        2,109.4	       14.3	    1,054.7	     30.1	1,033.4       1,075.9
msgs sent queued on ksxp					      1,717,523        2,809.5	       19.0	    1,404.8	    301.7	1,191.5       1,618.1
process batch messages received 					167,357 	 273.8		1.9	      136.9	     52.6	   99.7 	174.1
process batch messages sent						198,353 	 324.4		2.2	      162.2	     41.0	  133.2 	191.2
receiver cycle time							452,799 	 740.6		5.0	      370.3	     52.4	  333.3 	407.3
receiver loop count						      1,811,351        2,962.8	       20.1	    1,481.4	    142.8	1,380.4       1,582.3
			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Absolute Values)	   DB/Inst: P30DB/p30db1  Snaps: 81-82

	    Sessions		   Open Cursors 	    Session Cached Cursors
       -----------------   ---------------------------	 ---------------------------
  I#	  Begin      End	    Begin	   End		  Begin 	 End
----   -------- --------   -------------- ------------	 -------------- ------------
   1	    104       90	      220	   153		 17,885       18,585
   2	    108       91	      218	   133		 14,077       14,560
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~	 ~~~~~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	    212      181	      438	   286		 31,962       33,145
 Avg	    106       91	      219	   143		 15,981       16,573
 Std	      3        1		1	    14		  2,693        2,846
			  --------------------------------------------------------------------------------------------------------------------

IO Profile (Global)			   DB/Inst: P30DB/p30db1  Snaps: 81-82

Statistic			  Read+Write/s	      Reads/s	    Writes/s
------------------------------ --------------- -------------- --------------
Total Requests			      8,329.98	     4,385.20	    3,944.79
Database Requests		      8,093.55	     4,368.00	    3,725.55
Optimized Requests			  0.00		 0.00		0.00
Redo Requests				 61.57		  N/A	       61.57
Total (MB)				 77.77		38.83	       38.94
Database (MB)				 65.50		34.14	       31.36
Optimized Total (MB)			  0.00		 0.00		0.00
Redo (MB)				  3.63		  N/A		3.63
Database (blocks)		      8,383.57	     4,369.34	    4,014.23
Via Buffer Cache (blocks)	      8,381.76	     4,369.20	    4,012.56
Direct (blocks) 			  1.81		 0.14		1.67
			  --------------------------------------------------------------------------------------------------------------------

IOStat by Function			   DB/Inst: P30DB/p30db1  Snaps: 81-82

					   Requests						 MB
		       ------------------------------------------------   ------------------------------------------------
															      Waits:	Avg
  I# Function Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s     Count	Time
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   ------- --------
   * Total		  5,049,280    8,256.03    4,308.49    3,947.54 	47,120	     77.05	 38.19	     38.86	2.7M   4.75ms
     Buffer Cache Re	  2,624,508    4,291.31    4,291.31	   0.00 	20,514	     33.54	 33.54	      0.00	2.6M   4.19ms
     DBWR		  2,281,393    3,730.28        0.00    3,730.28 	19,196	     31.39	  0.00	     31.39	   0
     LGWR		    131,484	 214.99        0.00	 214.99 	 4,542	      7.43	  0.00	      7.43     37.3K  43.89ms
     Others		     11,780	  19.26       17.05	   2.21 	 2,863	      4.68	  4.64	      0.04	6670   6.21ms
     Direct Reads		 85	   0.14        0.13	   0.01 	     3	      0.00	  0.00	      0.00	   0
     Direct Writes		 29	   0.05        0.00	   0.05 	     2	      0.00	  0.00	      0.00	   0
     Streams AQ 		  1	   0.00        0.00	   0.00 	     0	      0.00	  0.00	      0.00	   1  24.00ms

   1 Total		  3,166,345    5,177.26    2,534.08    2,643.18 	29,428	     48.12	 22.03	     26.09	1.6M   1.77ms
     DBWR		  1,578,399    2,580.82        0.00    2,580.82 	13,275	     21.71	  0.00	     21.71	   0
     Buffer Cache Re	  1,544,630    2,525.61    2,525.61	   0.00 	12,070	     19.74	 19.74	      0.00	1.5M   1.12ms
     LGWR		     37,490	  61.30        0.00	  61.30 	 2,668	      4.36	  0.00	      4.36	9833 102.49ms
     Others		      5,805	   9.49        8.45	   1.04 	 1,415	      2.31	  2.30	      0.02	3300   9.39ms
     Direct Reads		 12	   0.02        0.02	   0.00 	     0	      0.00	  0.00	      0.00	   0
     Direct Writes		  9	   0.01        0.00	   0.01 	     0	      0.00	  0.00	      0.00	   0

   2 Total		  1,882,935    3,078.77    1,774.41    1,304.36 	17,692	     28.93	 16.15	     12.77	1.1M   8.93ms
     Buffer Cache Re	  1,079,878    1,765.70    1,765.70	   0.00 	 8,444	     13.81	 13.81	      0.00	1.1M   8.59ms
     DBWR		    702,994    1,149.46        0.00    1,149.46 	 5,921	      9.68	  0.00	      9.68	   0
     LGWR		     93,994	 153.69        0.00	 153.69 	 1,874	      3.06	  0.00	      3.06     27.5K  22.94ms
     Others		      5,975	   9.77        8.60	   1.17 	 1,448	      2.37	  2.35	      0.02	3370   3.10ms
     Direct Reads		 73	   0.12        0.11	   0.01 	     3	      0.00	  0.00	      0.00	   0
     Direct Writes		 20	   0.03        0.00	   0.03 	     2	      0.00	  0.00	      0.00	   0
     Streams AQ 		  1	   0.00        0.00	   0.00 	     0	      0.00	  0.00	      0.00	   1  24.00ms
			  --------------------------------------------------------------------------------------------------------------------

IOStat by File Type			   DB/Inst: P30DB/p30db1  Snaps: 81-82

					   Requests						 MB				Service Time
		       ------------------------------------------------   ------------------------------------------------   -----------------
																Small	 Large
  I# Filetype Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s	 Read	  Read
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   -------- --------
   * Total		  5,051,215    8,259.19    4,311.41    3,947.78 	47,130	     77.06	 38.20	     38.86     3.69ms 1764.01m
     Data File		  4,907,842    8,024.77    4,294.22    3,730.55 	39,719	     64.94	 33.55	     31.40     3.70ms
     Log File		    134,742	 220.32        5.35	 214.96 	 7,269	     11.89	  4.46	      7.42   404.76us 1770.48m
     Control File	      8,313	  13.59       11.65	   1.94 	   130	      0.21	  0.18	      0.03   163.37us
     Temp File			192	   0.31        0.15	   0.16 	    12	      0.02	  0.01	      0.01   289.16us	 .00ns
     Other			126	   0.21        0.03	   0.17 	     0	      0.00	  0.00	      0.00     1.33ms

   1 Total		  3,167,796    5,179.63    2,536.46    2,643.17 	29,435	     48.13	 22.04	     26.08   630.45us 1797.96m
     Data File		  3,124,522    5,108.88    2,528.02    2,580.85 	25,355	     41.46	 19.75	     21.71   631.95us
     Log File		     39,103	  63.94        2.65	  61.29 	 4,015	      6.56	  2.20	      4.36    73.53us 1797.96m
     Control File	      4,169	   6.82        5.79	   1.03 	    65	      0.11	  0.09	      0.02    18.07us
     Temp File			  2	   0.00        0.00	   0.00 	     0	      0.00	  0.00	      0.00	.00ns

   2 Total		  1,883,419    3,079.56    1,774.95    1,304.61 	17,695	     28.93	 16.16	     12.78     8.07ms 1731.09m
     Data File		  1,783,320    2,915.89    1,766.20    1,149.69 	14,364	     23.49	 13.80	      9.69     8.10ms
     Log File		     95,639	 156.38        2.70	 153.67 	 3,254	      5.32	  2.26	      3.06   733.58us 1743.64m
     Control File	      4,144	   6.78        5.86	   0.92 	    65	      0.11	  0.09	      0.01   306.92us
     Temp File			190	   0.31        0.15	   0.16 	    12	      0.02	  0.01	      0.01   292.68us	 .00ns
     Other			126	   0.21        0.03	   0.17 	     0	      0.00	  0.00	      0.00     1.33ms
			  --------------------------------------------------------------------------------------------------------------------


Segment Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> % Total shows % of statistic for each segment compared to the global cluster-wide total
   (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants)
-> % Capture shows % of statistic for each segment compared to the  total captured
   by AWR for all segments during the snapshot interval
-> Captured Segments account for   82.7% of Total Logical Reads:       3,684,618
-> Captured Segments account for   97.8% of Total Physical Reads:	2,672,231
-> Captured Segments account for   97.8% of Total Physical Read Requests:	2,671,411
-> Captured Segments account for   97.8% of Total UnOptimized Read Requests:	   2,671,411
-> Captured Segments account for    0.0% of Total Optimized  Read Requests:		  1
-> Captured Segments account for    0.0% of Total Direct Physical Reads:	      84
-> Captured Segments account for   95.5% of Total Physical Writes:	 2,455,052
-> Captured Segments account for   98.1% of Total Physical Write Requests:	 2,278,496
-> Captured Segments account for   12.8% of Total Direct Physical Writes:	    1,021
-> Captured Segments account for    0.0% of Total Table Scans:		     5
-> Captured Segments account for    9.8% of Total CR Blocks Received:		1,939
-> Captured Segments account for   81.5% of Total Current Blocks Received:	    37,394
-> Captured Segments account for    9.7% of Total CR Blocks Served:	      1,956
-> Captured Segments account for   81.7% of Total Current Blocks Served:	  37,304
-> Captured Segments account for   98.3% of Total Global Cache Remote Grants:	    1,276,216
-> When ** MISSING ** occurs, some of the object attributes may not be available

				    Tablespace Object		    Subobject  Obj.
Statistic		 Owner	    Name       Name		    Name       Type	   Obj#   Dataobj#	  Value %Total %Capture
------------------------ ---------- ---------- -------------------- ---------- ----- ---------- ---------- ------------ ------ --------
buffer busy waits	 SYS	    SYSTEM     SEG$			       TABLE	     14 	 8	      2    N/A	  100.0
db block changes	 USER23     IOPS       CF1			       TABLE	  73508      73516	147,216    N/A	   20.5
			 USER20     IOPS       CF1			       TABLE	  73501      73506	144,624    N/A	   20.1
			 USER25     IOPS       CF1			       TABLE	  73527      73522	143,264    N/A	   19.9
			 USER26     IOPS       CF1			       TABLE	  73533      73537	142,576    N/A	   19.8
			 USER22     IOPS       CF1			       TABLE	  73514      73510	141,936    N/A	   19.7
gc buffer busy		 SYS	    SYSTEM     SEG$			       TABLE	     14 	 8	      3    N/A	   60.0
			 SYS	    SYSTEM     I_HH_OBJ#_INTCOL#	       INDEX	     70 	70	      1    N/A	   20.0
			 SYS	    SYSTEM     COL$			       TABLE	     21 	 2	      1    N/A	   20.0
gc cr blocks received	 SYS	    SYSAUX     WRH$_PARAMETER_PK    3773525_79 INDEX	  74065      74065	     33    1.7	   30.3
			 SYS	    SYSAUX     WRH$_PARAMETER	    3773525_79 TABLE	  74063      74063	     22    1.1	   20.2
			 SYS	    SYSAUX     WRH$_SYSTEM_EVENT    3773525_79 TABLE	  74031      74031	     17    0.9	   15.6
			 SYS	    SYSAUX     WRH$_ACTIVE_SESSION_ 3773525_79 INDEX	  74081      74081	     13    0.7	   11.9
			 SYS	    SYSTEM     SEG$			       TABLE	     14 	 8	     13    0.7	   11.9
			 SYS	    SYSAUX     WRH$_SYSTEM_EVENT_PK 3773525_79 INDEX	  74033      74033	     11    0.6	   10.1
gc cr blocks served	 SYS	    SYSAUX     WRH$_PARAMETER_PK    3773525_79 INDEX	  74065      74065	     33    1.7	   30.3
			 SYS	    SYSAUX     WRH$_PARAMETER	    3773525_79 TABLE	  74063      74063	     22    1.1	   20.2
			 SYS	    SYSAUX     WRH$_SYSTEM_EVENT    3773525_79 TABLE	  74031      74031	     17    0.9	   15.6
			 SYS	    SYSAUX     WRH$_ACTIVE_SESSION_ 3773525_79 INDEX	  74081      74081	     13    0.7	   11.9
			 SYS	    SYSTEM     SEG$			       TABLE	     14 	 8	     13    0.7	   11.9
			 SYS	    SYSAUX     WRH$_SYSTEM_EVENT_PK 3773525_79 INDEX	  74033      74033	     11    0.6	   10.1
gc cu blocks received	 USER15     IOPS       CF1			       TABLE	  73472      73477	  2,869    7.7	   29.1
			 USER19     IOPS       CF1			       TABLE	  73485      73498	  2,751    7.4	   27.9
			 USER14     IOPS       CF1			       TABLE	  73470      73474	  1,582    4.2	   16.0
			 USER31     IOPS       CF1			       TABLE	  73552      73557	  1,338    3.6	   13.6
			 USER30     IOPS       I_CF1			       INDEX	  73561      73561	  1,319    3.5	   13.4
gc cu blocks served	 USER15     IOPS       CF1			       TABLE	  73472      73477	  2,869    7.7	   29.1
			 USER19     IOPS       CF1			       TABLE	  73485      73498	  2,751    7.4	   27.9
			 USER14     IOPS       CF1			       TABLE	  73470      73474	  1,582    4.2	   16.0
			 USER31     IOPS       CF1			       TABLE	  73552      73557	  1,338    3.6	   13.6
			 USER30     IOPS       I_CF1			       INDEX	  73561      73561	  1,319    3.5	   13.4
gc remote grants	 USER14     IOPS       CF1			       TABLE	  73470      73474	106,262    8.3	   30.2
			 USER12     IOPS       CF1			       TABLE	  73464      73460	 62,321    4.9	   17.7
			 USER30     IOPS       CF1			       TABLE	  73550      73554	 62,103    4.9	   17.7
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	 61,924    4.9	   17.6
			 USER32     IOPS       CF1			       TABLE	  73562      73567	 59,143    4.6	   16.8
logical reads		 USER23     IOPS       CF1			       TABLE	  73508      73516	147,248    4.0	   20.5
			 USER20     IOPS       CF1			       TABLE	  73501      73506	144,640    3.9	   20.1
			 USER25     IOPS       CF1			       TABLE	  73527      73522	143,296    3.9	   19.9
			 USER26     IOPS       CF1			       TABLE	  73533      73537	142,608    3.9	   19.8
			 USER22     IOPS       CF1			       TABLE	  73514      73510	141,952    3.9	   19.7
physical reads		 USER26     IOPS       CF1			       TABLE	  73533      73537	135,711    5.1	   20.1
			 USER22     IOPS       CF1			       TABLE	  73514      73510	135,230    5.1	   20.0
			 USER20     IOPS       CF1			       TABLE	  73501      73506	135,138    5.1	   20.0
			 USER25     IOPS       CF1			       TABLE	  73527      73522	135,134    5.1	   20.0
			 USER23     IOPS       CF1			       TABLE	  73508      73516	133,663    5.0	   19.8
physical read requests	 USER26     IOPS       CF1			       TABLE	  73533      73537	135,711    5.1	   20.1
			 USER22     IOPS       CF1			       TABLE	  73514      73510	135,230    5.1	   20.0
			 USER20     IOPS       CF1			       TABLE	  73501      73506	135,138    5.1	   20.0
			 USER25     IOPS       CF1			       TABLE	  73527      73522	135,134    5.1	   20.0
			 USER23     IOPS       CF1			       TABLE	  73508      73516	133,663    5.0	   19.8
physical writes 	 USER23     IOPS       CF1			       TABLE	  73508      73516	156,526    N/A	   20.5
			 USER20     IOPS       CF1			       TABLE	  73501      73506	153,621    N/A	   20.1
			 USER26     IOPS       CF1			       TABLE	  73533      73537	151,907    N/A	   19.9
			 USER25     IOPS       CF1			       TABLE	  73527      73522	151,546    N/A	   19.8
			 USER22     IOPS       CF1			       TABLE	  73514      73510	151,413    N/A	   19.8
physical writes direct	 SYS	    SYSAUX     WRH$_ACTIVE_SESSION_ 3773525_79 TABLE	  74079      74079	    114    N/A	   87.0
			 SYS	    SYSAUX     SYS_LOB0000007451C00 S_LOB_P256 LOB P	  73950      73950	     17    N/A	   13.0
physical write requests  USER23     IOPS       CF1			       TABLE	  73508      73516	146,488    6.4	   20.4
			 USER20     IOPS       CF1			       TABLE	  73501      73506	144,168    6.3	   20.1

Segment Statistics (Global)		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> % Total shows % of statistic for each segment compared to the global cluster-wide total
   (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants)
-> % Capture shows % of statistic for each segment compared to the  total captured
   by AWR for all segments during the snapshot interval
-> Captured Segments account for   82.7% of Total Logical Reads:       3,684,618
-> Captured Segments account for   97.8% of Total Physical Reads:	2,672,231
-> Captured Segments account for   97.8% of Total Physical Read Requests:	2,671,411
-> Captured Segments account for   97.8% of Total UnOptimized Read Requests:	   2,671,411
-> Captured Segments account for    0.0% of Total Optimized  Read Requests:		  1
-> Captured Segments account for    0.0% of Total Direct Physical Reads:	      84
-> Captured Segments account for   95.5% of Total Physical Writes:	 2,455,052
-> Captured Segments account for   98.1% of Total Physical Write Requests:	 2,278,496
-> Captured Segments account for   12.8% of Total Direct Physical Writes:	    1,021
-> Captured Segments account for    0.0% of Total Table Scans:		     5
-> Captured Segments account for    9.8% of Total CR Blocks Received:		1,939
-> Captured Segments account for   81.5% of Total Current Blocks Received:	    37,394
-> Captured Segments account for    9.7% of Total CR Blocks Served:	      1,956
-> Captured Segments account for   81.7% of Total Current Blocks Served:	  37,304
-> Captured Segments account for   98.3% of Total Global Cache Remote Grants:	    1,276,216
-> When ** MISSING ** occurs, some of the object attributes may not be available

				    Tablespace Object		    Subobject  Obj.
Statistic		 Owner	    Name       Name		    Name       Type	   Obj#   Dataobj#	  Value %Total %Capture
------------------------ ---------- ---------- -------------------- ---------- ----- ---------- ---------- ------------ ------ --------
			 USER26     IOPS       CF1			       TABLE	  73533      73537	142,823    6.3	   19.9
			 USER25     IOPS       CF1			       TABLE	  73527      73522	142,426    6.3	   19.8
			 USER22     IOPS       CF1			       TABLE	  73514      73510	142,365    6.2	   19.8
			  --------------------------------------------------------------------------------------------------------------------

Library Cache Activity			   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Summarized for all instances in the report
-> "Pct Misses"  should be very low

			 Get	Pct	       Pin    Pct	      Invali-	  GES Lock	GES Pin      GES Pin   GES Inval GES Invali-
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations	  Requests     Requests     Releases	Requests     dations
--------------- ------------ ------ -------------- ------ ---------- -------- ------------ ------------ ------------ ----------- -----------
ACCOUNT_STATUS		   4   25.0		 0    N/A	   0	    0		 4	      0 	   0	       0	   0
AUDIT POLICY		   2	0.0		 2    0.0	   0	    0		 2	      2 	   2	       0	   0
BODY			 423	0.5	       818    5.6	  32	    0	       564	    807 	 807	       0	   0
CLUSTER 		 316	1.3	       316    1.3	   0	    0	       316	    316 	 316	       0	   0
DBLINK			   4	0.0		 0    N/A	   0	    0		 4	      0 	   0	       0	   0
EDITION 		   6   16.7		12   16.7	   0	    0		 6	      6 	   6	       0	   0
HINTSET OBJECT		 332   19.0	       332   19.3	   1	    0	       332	    332 	 332	       0	   0
INDEX			 169	2.4	       171   17.0	  25	    0	       171	    171 	 171	       0	   0
OBJECT ID		  89  100.0		 0    N/A	   0	    0		 0	      0 	   0	       0	   0
QUEUE			  61   21.3		61   21.3	   0	    0		61	     61 	  61	       0	   0
SCHEMA		       1,010	0.0		 0    N/A	   0	    0		90	      0 	   0	       0	   0
SQL AREA	       5,787   34.9	   128,807    2.7	 701	   94		 0	      0 	   0	       0	   0
SQL AREA BUILD	       1,369   70.4		 0    N/A	   0	    0		 0	      0 	   0	       0	   0
SQL AREA STATS	       1,078   79.3	     1,078   79.3	   0	    0		 0	      0 	   0	       0	   0
TABLE/PROCEDURE        7,304	9.0	    29,485    9.3      1,052	    0	    12,368	 20,809       20,809	       0	   0
TRANSFORMATION		  61   21.3		61   21.3	   0	    0		61	     61 	  61	       0	   0
TRIGGER 		  10   10.0		10   10.0	   0	    0		 0	     10 	  10	       0	   0
			  --------------------------------------------------------------------------------------------------------------------


PGA Aggregate Target Statistics 	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> all stats are reported in MegaBytes

	  PGA Aggr Target	   Auto PGA Target	      PGA Mem Alloc		Auto Workareas		 Manual Workarea	   Global Mem Bound
       ---------------------   -----------------------	 -----------------------   -----------------------   -----------------------   -----------------------
  I#	    Begin	 End	      Begin	   End		Begin	     End	  Begin        End	    Begin	 End	      Begin	   End
----   ---------- ----------   ------------ ----------	 ------------ ----------   ------------ ----------   ------------ ----------   ------------ ----------
   1	  3,215.0    3,215.0	    1,868.5    1,913.2	      1,435.9	 1,378.7	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
   2	  3,215.0    3,215.0	    1,865.4    1,917.3	      1,393.6	 1,312.5	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
			  --------------------------------------------------------------------------------------------------------------------


Process Memory Summary			   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> B: Begin Snap   E: End Snap I#: Instance number
-> Max Alloc is Maximum PGA allocation size at snapshot time
-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
-> ordered by instance, Begin/End snapshot, Alloc (MB)

							     Hist
					Avg Std Dev    Max    Max
		     Alloc     Used   Alloc   Alloc  Alloc  Alloc   Num   Num
  I#   Category       (MB)     (MB)    (MB)    (MB)   (MB)   (MB)  Proc Alloc
---- - ---------- -------- -------- ------- ------- ------ ------ ----- -----
   1 B Freeable      231.4	 .0	4.9	8.6	34    N/A    47    47
       Other	     669.7	N/A	5.4	8.3	44     44   123   123
       PL/SQL	      14.9     12.4	 .1	 .4	 2	3   105   104
       SQL	       7.9	5.3	 .1	 .3	 2     17    57    47
       Total	     924.0     17.7    10.7    17.5	82     65   332   321
     E Freeable      226.3	 .0	6.9    10.2	34    N/A    33    33
       Other	     625.3	N/A	5.7	8.8	45     45   109   109
       PL/SQL	       8.3	5.9	 .1	 .4	 2	3    91    91
       SQL	       6.8	5.5	 .2	 .4	 2     17    43    34
       Total	     866.7     11.4    12.8    19.7	83     65   276   267
   2 B Freeable      184.3	 .0	4.1	7.3	28    N/A    45    45
       Other	     669.5	N/A	5.3	7.9	42     42   127   127
       PL/SQL	      20.3     18.5	 .2	 .5	 2	4   109   108
       SQL	       7.6	5.1	 .1	 .3	 2     11    59    50
       Total	     881.6     23.5	9.7    16.0	74     57   340   330
     E Freeable      177.1	 .0	5.7	8.8	27    N/A    31    31
       Other	     605.1	N/A	5.5	8.7	42     42   110   110
       PL/SQL	      11.8     10.0	 .1	 .5	 2	4    92    92
       SQL	       6.6	4.9	 .2	 .4	 2     11    42    33
       Total	     800.5     15.0    11.5    18.3	73     57   275   266
			  --------------------------------------------------------------------------------------------------------------------


init.ora Parameters			   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> '*' indicates same value across all instances

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
_ipddb_enable			* TRUE
audit_file_dest 		* /u01/app/oracle/admin/p30db/adump
audit_trail			* DB
cluster_database		* TRUE
compatible			* 19.0.0
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581, +FRA/
db_block_size			* 8192
db_create_file_dest		* +DATA
db_domain			* example.com
db_name 			* p30db
db_recovery_file_dest		* +FRA
db_recovery_file_dest_size	* 274877906944
diagnostic_dest 		* /u01/app/oracle
dispatchers			* (PROTOCOL=TCP) (SERVICE=p30dbXDB)
instance_number 		1 1
				2 2
listener_networks		*
local_listener			1  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522
				2  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522
nls_language			* AMERICAN
nls_territory			* AMERICA
open_cursors			* 300
pga_aggregate_target		* 3371171840
processes			* 640
remote_listener 		*  mcracpoc-scan.example.com:1521
remote_login_passwordfile	* EXCLUSIVE
sga_target			* 10133438464
thread				1 1
				2 2
undo_tablespace 		1 UNDOTBS1
				2 UNDOTBS2
			  --------------------------------------------------------------------------------------------------------------------


init.ora Multi-valued Parameters	   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> This section only displays parameters that have more one value
-> '*' indicates same value across all instances
-> '(NULL)' indicates that the	parameter value was not set
-> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581
				* +FRA/P30DB/CONTROLFILE/current.257.1031594583
			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Events 		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Top SQL statements by DB Time along with the top events by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the
   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
									   % Row
Event			       % Event Top Row Source			  Source
------------------------------ ------- --------------------------------- -------
	  35dumc2tpr9dv 	   203653710		     1852	   83.12
db file sequential read 	 49.64 UPDATE				   49.46
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )


free buffer waits		 24.78 UPDATE				   24.73


gc current grant 2-way		  4.04 UPDATE				    4.04

			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Row Sources		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Top SQL statements by DB Time along with the top row sources by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
   that SQL.
-> % Event is the percentage of DB Time spent on the event by the
   SQL executing the row source.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
					   % Row
Row Source				  Source Top Event		 % Event
---------------------------------------- ------- ----------------------- -------
	  35dumc2tpr9dv 	   203653710		     1852	   83.12
UPDATE					   82.63 db file sequential read   49.46
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  --------------------------------------------------------------------------------------------------------------------

Top Sessions				   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> '# Samples Active' shows the number of ASH samples in which the session
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
      and not total database activity.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
	4,40357       2.74 CPU + Wait for CPU			2.65
SYS		     oracle@mcracpo...le.com (DBW0)	  59/61 [ 97%]	      0

       10,47618       2.60 db file sequential read		1.39
USER10		     sqlplus@mcracp...m (TNS V1-V3)	  31/61 [ 51%]	     31

       11,11821       2.60 db file sequential read		2.42
USER13		     sqlplus@mcracp...m (TNS V1-V3)	  54/61 [ 88%]	     53

       14, 9261       2.60 free buffer waits			1.93
USER25		     sqlplus@mcracp...m (TNS V1-V3)	  43/61 [ 70%]	     43

       16, 6218       2.60 db file sequential read		2.42
USER30		     sqlplus@mcracp...m (TNS V1-V3)	  54/61 [ 88%]	     51

			  --------------------------------------------------------------------------------------------------------------------

Top Blocking Sessions			   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Blocking session activity percentages are calculated with respect to
      waits on enqueues, latches and "buffer busy" only
-> '% Activity' represents the load on the database caused by
      a particular blocking session
-> '# Samples Active' shows the number of ASH samples in which the
      blocking session was found active.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the blocking session was found active.

 Blocking Sid (Inst) % Activity Event Caused			  % Event
-------------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
     4,40357(	  1)	  25.18 free buffer waits		    24.82
SYS		     oracle@mcracpo...le.com (DBW0)	  60/61 [ 98%]	      0

   374,41238(	  1)	   2.83 LGWR any worker group		     2.42
SYS		     oracle@mcracpo...le.com (LG00)	  54/61 [ 88%]	      0

			  --------------------------------------------------------------------------------------------------------------------

Top PL/SQL Procedures			   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
      at the point of sampling . If the value is 'SQL', it represents
      the percentage of time spent executing SQL for the particular
      PL/SQL entry subprogram

PL/SQL Entry Subprogram 					  % Activity
----------------------------------------------------------------- ----------
PL/SQL Current Subprogram					   % Current
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       83.30
   SQL								       83.30
			  --------------------------------------------------------------------------------------------------------------------

Top Events				   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Top Events by DB Time
-> % Activity is the percentage of DB Time due to the event

Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
	   Avg Active
% Activity   Sessions
---------- ----------
db file sequential read 	    User I/O	    FOREGROUND
     49.64	18.10
free buffer waits		    Configuration   FOREGROUND
     24.78	 9.03
log file parallel write 	    System I/O	    BACKGROUND
      7.09	 2.59
CPU + Wait for CPU		    CPU 	    BACKGROUND
      4.44	 1.62
gc current grant 2-way		    Cluster	    FOREGROUND
      4.04	 1.47
			  --------------------------------------------------------------------------------------------------------------------

Top Event P1/P2/P3 Values		   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
-> % Event is the percentage of DB Time due to the event
-> % Activity is the percentage of DB Time due to the event with the given
   P1,P2,P3 Values.

Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
Parameter 1		   Parameter 2		      Parameter 3
-------------------------- -------------------------- --------------------------
db file sequential read 	 49.64		  "2","24933777","1"	   0.04
file#			   block#		      blocks

free buffer waits		 24.82		 "2","26616823","24"	   0.04
file#			   block#		      set-id#

log file parallel write 	  7.09		       "2","112","4"	   0.13
files			   blocks		      requests

			  --------------------------------------------------------------------------------------------------------------------

Top DB Objects				   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Top DB Objects by DB Time with respect to Application, Cluster,
   User I/O,  buffer busy waits and In-Memory DB events only.
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available.

      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
Object Name (Type)				      Tablespace
----------------------------------------------------- --------------------------------
	  73472       2.60 db file sequential read		2.47
USER15.CF1 (TABLE)				      IOPS
	  73550       2.60 db file sequential read		2.42
USER30.CF1 (TABLE)				      IOPS
	  73413       2.56 db file sequential read		2.47
USER3.CF1 (TABLE)				      IOPS
	  73503       2.56 db file sequential read		2.42
USER21.CF1 (TABLE)				      IOPS
	  73439       2.51 db file sequential read		2.11
USER9.CF1 (TABLE)				      IOPS
			  --------------------------------------------------------------------------------------------------------------------

Activity Over Time			   DB/Inst: P30DB/p30db1  Snaps: 81-82
-> Analysis period is divided into smaller time slots as indicated
   in the 'Slot Time (Duration)'.
-> Top 3 events are reported in each of those slots
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
   that event in that slot
-> '% Event' is 'Event Count' over all ASH samples in the analysis period

			 Slot					Event
Slot Time (Duration)	Count Event				Count % Event
-------------------- -------- ------------------------------ -------- -------
17:33:14   (1.8 min)	  459 db file sequential read		  211	 9.47
			      free buffer waits 		   97	 4.35
			      CPU + Wait for CPU		   51	 2.29
17:35:00   (5.0 min)	1,133 db file sequential read		  575	25.81
			      free buffer waits 		  300	13.46
			      log file parallel write		   78	 3.50
17:40:00   (3.4 min)	  636 db file sequential read		  320	14.36
			      free buffer waits 		  156	 7.00
			      log file parallel write		   50	 2.24
			  --------------------------------------------------------------------------------------------------------------------



	  ADDM Report for Task 'ADDM:3393773525_82'
	  -----------------------------------------

Analysis Period
---------------
AWR snapshot range from 81 to 82.
Time period starts at 08-FEB-20 05.33.14 PM
Time period ends at 08-FEB-20 05.43.26 PM

Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 18271 seconds.
The average number of active sessions was 29.85.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendation
s
					     Percent of Activity
   ----------------------------------------  -------------------  --------------
-
1  Top SQL Statements			     29.74 | 99.62	  1
2  "User I/O" wait Class		     18.05 | 60.48	  0
3  "Configuration" Wait Class		     9.24 | 30.95	  0
4  Free Buffer Waits			     9.24 | 30.95	  1
5  Top Segments by "User I/O" and "Cluster"  4.56 | 15.27	  5
6  Global Cache Messaging		     1.44 | 4.82	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 29.79 active sessions, 99.62% of total activity.
----------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  56.21	    ADDM:3393773525_2_82
    1	    p30db1  43.79	    ADDM:3393773525_1_82

   Recommendation 1: SQL Tuning
   Estimated benefit is 29.74 active sessions, 99.62% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      "35dumc2tpr9dv". Additionally, investigate this statement for possible
      performance improvements. You can supplement the information given here
      with an ASH report for this SQL_ID.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
      The SQL spent 69% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
      Look at data given below and an ASH report for further performance
      improvements.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 87312 times and
      had an average elapsed time of 0.2 seconds.
   Rationale
      Waiting for event "free buffer waits" in wait class "Configuration"
      accounted for 29% of the database time spent in processing the SQL
      statement with SQL_ID "35dumc2tpr9dv".
   Rationale
      I/O and Cluster wait for TABLE "USER9.CF1" with object ID 73439 consumed
      3% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE "USER15.CF1" with object ID 73472
      consumed 3% of the database time spent on this SQL statement.


Finding 2: "User I/O" wait Class
Impact is 18.08 active sessions, 60.48% of total activity.
----------------------------------------------------------
Wait class "User I/O" was consuming significant database time.
The throughput of the I/O subsystem was not significantly lower than expected.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  84.41	    ADDM:3393773525_2_82
    1	    p30db1  15.59	    ADDM:3393773525_1_82

   No recommendations are available.


Finding 3: "Configuration" Wait Class
Impact is 9.25 active sessions, 30.95% of total activity.
---------------------------------------------------------
Wait class "Configuration" was consuming significant database time.
Waits for archiver processes were not consuming significant database time.
Log file switch operations were not consuming significant database time while
waiting for checkpoint completion.
High watermark (HW) enqueue waits were not consuming significant database
time.
Space Transaction (ST) enqueue waits were not consuming significant database
time.
ITL enqueue waits were not consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  100 	    ADDM:3393773525_1_82

   No recommendations are available.


Finding 4: Free Buffer Waits
Impact is 9.25 active sessions, 30.95% of total activity.
---------------------------------------------------------
Waits for free buffers were consuming significant database time in some
instances. Database writers (DBWR) were unable to keep up with the demand for
free buffers.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  100 	    ADDM:3393773525_1_82

   Recommendation 1: Examine instance ADDM
   Estimated benefit is 9.24 active sessions, 30.95% of total activity.
   --------------------------------------------------------------------
   Action
      Investigate the I/O subsystem's write performance. Consider increasing
      the number of database writers, the appropriateness of asynchronous I/O,
      and use of direct path inserts. Check the ADDM analysis of affected
      instances for more details.


Finding 5: Top Segments by "User I/O" and "Cluster"
Impact is 4.57 active sessions, 15.27% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant "User I/O" and
"Cluster" waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_82

   Recommendation 1: Segment Tuning
   Estimated benefit is .92 active sessions, 3.1% of total activity.
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER15.CF1" with
      object ID 73472.
      Related Object
	 Database object with ID 73472.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID "35dumc2tpr9dv" is responsible for 100% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 54874
      physical reads, 37396 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .92 active sessions, 3.1% of total activity.
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER30.CF1" with
      object ID 73550.
      Related Object
	 Database object with ID 73550.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 62012
      physical reads, 40576 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .91 active sessions, 3.04% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER3.CF1" with
      object ID 73413.
      Related Object
	 Database object with ID 73413.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID "35dumc2tpr9dv" is responsible for 100% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 57884
      physical reads, 38228 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .91 active sessions, 3.04% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER21.CF1" with
      object ID 73503.
      Related Object
	 Database object with ID 73503.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 62893
      physical reads, 41113 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .89 active sessions, 2.99% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER9.CF1" with
      object ID 73439.
      Related Object
	 Database object with ID 73439.
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID "35dumc2tpr9dv" is responsible for 100% of "User I/O" and
      "Cluster" waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 69595
      physical reads, 44377 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 18.05 active sessions, 60.48% of total activity.


Finding 6: Global Cache Messaging
Impact is 1.44 active sessions, 4.82% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  64.85	    ADDM:3393773525_2_82
    1	    p30db1  35.15	    ADDM:3393773525_1_82

   Recommendation 1: Application Analysis
   Estimated benefit is 1.44 active sessions, 4.82% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on Cluster waits. For example, the UPDATE statement
      with SQL_ID "35dumc2tpr9dv" is responsible for 100% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "Cluster" was consuming significant database time.
      Impact is 1.57 active sessions, 5.25% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    2	    p30db2  mcracpoc2.example.com  16.8 	    56.17
    1	    p30db1  mcracpoc1.example.com  13.11	    43.83

Miscellaneous Information
-------------------------
Wait class "Application" was not consuming significant database time.
Wait class "Commit" was not consuming significant database time.
Wait class "Concurrency" was not consuming significant database time.
Wait class "Network" was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

The database's maintenance windows were active during 100% of the analysis
period.

End of Report
Report written to awr_rac.txt
SQL> SQL> SQL> SQL> SQL> SQL> 




Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt.  Default value is 'html'.

'html'		HTML format (default)
'text'		Text format
'active-html'	Includes Performance Hub active report


Type Specified:  html







Current Database
~~~~~~~~~~~~~~~~
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db











Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using instances ALL (default 'ALL')


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.


Enter value for num_days: 
Listing all Completed Snapshots
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
		    13	06 Feb 2020 07:00    1
		    14	06 Feb 2020 08:00    1
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
		    19	06 Feb 2020 13:00    1
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
		    24	06 Feb 2020 15:55    1
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1
		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
		    38	07 Feb 2020 04:00    1
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
		    45	07 Feb 2020 11:00    1
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
		    50	08 Feb 2020 08:13    1
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
		    55	08 Feb 2020 08:48    1
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		    57	08 Feb 2020 09:00    1
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
		    60	08 Feb 2020 09:17    1
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
		    63	08 Feb 2020 09:43    1
		    64	08 Feb 2020 09:53    1
		    65	08 Feb 2020 10:03    1
		    66	08 Feb 2020 10:08    1
		    67	08 Feb 2020 10:18    1
		    68	08 Feb 2020 10:27    1
		    69	08 Feb 2020 10:37    1
		    70	08 Feb 2020 10:44    1
		    71	08 Feb 2020 10:54    1
		    72	08 Feb 2020 11:36    1
		    73	08 Feb 2020 11:46    1
		    74	08 Feb 2020 13:00    1
		    75	08 Feb 2020 14:00    1
		    76	08 Feb 2020 14:20    1
		    77	08 Feb 2020 14:30    1
		    78	08 Feb 2020 15:55    1
		    79	08 Feb 2020 16:05    1
		    80	08 Feb 2020 17:00    1
		    81	08 Feb 2020 17:33    1
		    82	08 Feb 2020 17:43    1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 81

End   Snapshot Id specified: 82



Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_rac_81_82.html.	To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr_rac.html

<html lang="en"><head><title>AWR RAC Report for DB: P30DB, Snaps: 81-82</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY REPORT (RAC)

</h1>
<p />Database Summary<p />
<ul>
</ul>
<table border="0" class="tdiff" summary="Database Summary"><tr>
<th class="awrbg" colspan=" 8" id="Database">Database</th>
<th class="awrbg" colspan=" 2" id="SnapshotIds">Snapshot Ids</th>
<th class="awrbg" colspan=" 2" id="NumberofInstances">Number of Instances</th>
<th class="awrbg" colspan=" 2" id="NumberofHosts">Number of Hosts</th>
<th class="awrbg" colspan=" 2" id="ReportTotal(minutes)">Report Total (minutes)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Id">Id</th><th class="awrbg" scope="col" id="Name">Name</th><th class="awrbg" scope="col" id="UniqueName">Unique Name</th><th class="awrbg" scope="col" id="Role">Role</th><th class="awrbg" scope="col" id="Edition">Edition</th><th class="awrbg" scope="col" id="RAC">RAC</th><th class="awrbg" scope="col" id="CDB">CDB</th><th class="awrbg" scope="col" id="BlockSize">Block Size</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="Elapsedtime">Elapsed time</th></tr>
<tr><td align="right" headers="Database Id" class='awrclb'>3393773525</td><td headers="Database Name" class='awrc'>P30DB</td><td headers="Database UniqueName" class='awrc'>p30db</td><td headers="Database Role" class='awrc'>PRIMARY</td><td headers="Database Edition" class='awrc'>EE</td><td headers="Database RAC" class='awrc'>YES</td><td headers="Database CDB" class='awrc'>NO</td><td align="right" headers="Database BlockSize" class='awrc'>8192</td><td align="right" headers="SnapshotIds Begin" class='awrclb'>81</td><td align="right" headers="SnapshotIds End" class='awrc'>82</td><td align="right" headers="NumberofInstances InReport" class='awrclb'>2</td><td align="right" headers="NumberofInstances Total" class='awrc'>2</td><td align="right" headers="NumberofHosts InReport" class='awrclb'>2</td><td align="right" headers="NumberofHosts Total" class='awrc'>2</td><td align="right" headers="ReportTotal(minutes) DBtime" class='awrclb'>304.51</td><td align="right" headers="ReportTotal(minutes) Elapsedtime" class='awrcrb'>10.19</td></tr>
</table><p />
<p />Database Instances Included In Report<p />
<ul>
<li class="awr"> Listed in order of instance number, I#</li>
</ul>
<table border="0" class="tdiff" summary="Database Instances Included In Report. . Listed in order of instance number, I#"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Host</th><th class="awrbg" scope="col">Startup</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">Elapsed Time(min)</th><th class="awrbg" scope="col">DB time(min)</th><th class="awrbg" scope="col">Up Time(hrs)</th><th class="awrbg" scope="col">Avg Active Sessions</th><th class="awrbg" scope="col">Platform</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>p30db1</td><td class='awrc'>mcracpoc1.example.com</td><td class='awrc'>08-Feb-20 07:52</td><td class='awrc'>08-Feb-20 17:33</td><td class='awrc'>08-Feb-20 17:43</td><td class='awrc'>19.0.0.0.0</td><td align="right" class='awrc'>10.18</td><td align="right" class='awrc'>133.45</td><td align="right" class='awrc'>9.85</td><td align="right" class='awrc'>13.11</td><td class='awrc'>Linux x86 64-bit</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>p30db2</td><td class='awrnc'>mcracpoc2.example.com</td><td class='awrnc'>08-Feb-20 07:52</td><td class='awrnc'>08-Feb-20 17:33</td><td class='awrnc'>08-Feb-20 17:43</td><td class='awrnc'>19.0.0.0.0</td><td align="right" class='awrnc'>10.18</td><td align="right" class='awrnc'>171.06</td><td align="right" class='awrnc'>9.85</td><td align="right" class='awrnc'>16.80</td><td class='awrnc'>Linux x86 64-bit</td></tr>
</table><p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>29.90</td><td align="right" class='awrc'>99.62</td><td scope="row" class='awrc'>ADDM:3393773525_82</td><td class='awrc'>08-Feb-20 17:33</td><td class='awrc'>08-Feb-20 17:43</td></tr>
<tr><td class='awrnc'>&quot;User I/O&quot; wait Class</td><td align="right" class='awrnc'>29.90</td><td align="right" class='awrnc'>60.48</td><td scope="row" class='awrnc'>ADDM:3393773525_82</td><td class='awrnc'>08-Feb-20 17:33</td><td class='awrnc'>08-Feb-20 17:43</td></tr>
<tr><td class='awrc'>&quot;Configuration&quot; Wait Class</td><td align="right" class='awrc'>29.90</td><td align="right" class='awrc'>30.95</td><td scope="row" class='awrc'>ADDM:3393773525_82</td><td class='awrc'>08-Feb-20 17:33</td><td class='awrc'>08-Feb-20 17:43</td></tr>
<tr><td class='awrnc'>Free Buffer Waits</td><td align="right" class='awrnc'>29.90</td><td align="right" class='awrnc'>30.95</td><td scope="row" class='awrnc'>ADDM:3393773525_82</td><td class='awrnc'>08-Feb-20 17:33</td><td class='awrnc'>08-Feb-20 17:43</td></tr>
<tr><td class='awrc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrc'>29.90</td><td align="right" class='awrc'>15.27</td><td scope="row" class='awrc'>ADDM:3393773525_82</td><td class='awrc'>08-Feb-20 17:33</td><td class='awrc'>08-Feb-20 17:43</td></tr>
</table><p />
<p />Cache Sizes<p />
<ul>
<li class="awr"> All values are in Megabytes </li>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values displayed only if different from Begin values</li>
</ul>
<table border="0" class="tdiff" summary="Cache Sizes. . All values are in Megabytes. Listed in order of instance number, I#. End values displayed only if different from Begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="MemoryTarget">Memory Target</th>
<th class="awrbg" colspan=" 2" id="SgaTarget">Sga Target</th>
<th class="awrbg" colspan=" 2" id="DBCache">DB Cache</th>
<th class="awrbg" colspan=" 2" id="SharedPool">Shared Pool</th>
<th class="awrbg" colspan=" 2" id="LargePool">Large Pool</th>
<th class="awrbg" colspan=" 2" id="JavaPool">Java Pool</th>
<th class="awrbg" colspan=" 2" id="StreamsPool">Streams Pool</th>
<th class="awrbg" colspan=" 2" id="PGATarget">PGA Target</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col">Log Buffer</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="MemoryTarget Begin" class='awrclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrclb'>8,000</td><td align="right" headers="DBCache End" class='awrc'>&#160;</td><td align="right" headers="SharedPool Begin" class='awrclb'>1,440</td><td align="right" headers="SharedPool End" class='awrc'>&#160;</td><td align="right" headers="LargePool Begin" class='awrclb'>64</td><td align="right" headers="LargePool End" class='awrc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrclb'>3,232</td><td align="right" headers="PGATarget End" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="MemoryTarget Begin" class='awrnclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrnc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrnclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrnc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrnclb'>7,872</td><td align="right" headers="DBCache End" class='awrnc'>7,840</td><td align="right" headers="SharedPool Begin" class='awrnclb'>1,568</td><td align="right" headers="SharedPool End" class='awrnc'>1,600</td><td align="right" headers="LargePool Begin" class='awrnclb'>64</td><td align="right" headers="LargePool End" class='awrnc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrnc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrnc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrnclb'>3,232</td><td align="right" headers="PGATarget End" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>9,664</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>7,936</td><td align="right" class='awrct'>7,840</td><td align="right" class='awrclbt'>1,504</td><td align="right" class='awrct'>1,600</td><td align="right" class='awrclbt'>64</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>3,232</td><td align="right" class='awrcrbt'>&#160;</td><td align="right" class='awrct'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Min</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>9,664</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>7,872</td><td align="right" class='awrnc'>7,840</td><td align="right" class='awrnclb'>1,440</td><td align="right" class='awrnc'>1,600</td><td align="right" class='awrnclb'>64</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>3,232</td><td align="right" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrc'>Max</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>9,664</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>8,000</td><td align="right" class='awrc'>7,840</td><td align="right" class='awrclb'>1,568</td><td align="right" class='awrc'>1,600</td><td align="right" class='awrclb'>64</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>3,232</td><td align="right" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
</table><p />

<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#12010">OS Statistics</a></li>
<li class="awr"><a class="awr" href="#629">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#621">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#639">Global Activity Load Profile</a></li>
<li class="awr"><a class="awr" href="#605">Global Cache and Enqueue Statistics Summary</a></li>
<li class="awr"><a class="awr" href="#12033">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#12034">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#607">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#608">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#622">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#623">Global Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#630">I/O Statistics</a></li>
<li class="awr"><a class="awr" href="#12083">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#633">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#638">Supplemental Information</a></li>
<li class="awr"><a class="awr" href="#43">Active Session History(ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99994">ADDM Reports</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<a class="awr" name="12010"></a>
<h3 class="awr">OS Statistics By Instance</h3>
<ul>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values are diplayed only if different from begin values</li>
</ul>
<table border="0" class="tdiff" summary="OS Statistics By Instance. . Listed in order of instance number, I#. End values are diplayed only if different from begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="CPU">CPU</th>
<th class="awrbg" colspan=" 2" id="Load">Load</th>
<th class="awrbg" colspan=" 5" id="%CPU">% CPU</th>
<th class="awrbg" colspan=" 3" id="Time(s)">Time (s)</th>
<th class="awrbg" colspan=" 1" id="Memory">Memory</th>
<th class="awrbg" colspan=" 4" id="EndValues">End Values</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="%Busy">% Busy</th><th class="awrbg" scope="col" id="%Usr">% Usr</th><th class="awrbg" scope="col" id="%Sys">% Sys</th><th class="awrbg" scope="col" id="%WIO">% WIO</th><th class="awrbg" scope="col" id="%Idl">% Idl</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Idle">Idle</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="MB">MB</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Memory(M)">Memory (M)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="CPU #CPUs" class='awrclb'>8</td><td align="right" headers="CPU #Cores" class='awrc'>4</td><td align="right" headers="CPU #Sckts" class='awrc'>1</td><td align="right" headers="Load Begin" class='awrclb'>7.16</td><td align="right" headers="Load End" class='awrc'>4.96</td><td align="right" headers="%CPU %Busy" class='awrclb'>30.80</td><td align="right" headers="%CPU %Usr" class='awrc'>7.60</td><td align="right" headers="%CPU %Sys" class='awrc'>14.80</td><td align="right" headers="%CPU %WIO" class='awrc'>25.10</td><td align="right" headers="%CPU %Idl" class='awrc'>69.20</td><td align="right" headers="Time(s) Busy" class='awrclb'>1,360.23</td><td align="right" headers="Time(s) Idle" class='awrc'>3,055.62</td><td align="right" headers="Time(s) Total" class='awrc'>4,415.85</td><td align="right" headers="Memory MB" class='awrclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="CPU #CPUs" class='awrnclb'>8</td><td align="right" headers="CPU #Cores" class='awrnc'>4</td><td align="right" headers="CPU #Sckts" class='awrnc'>1</td><td align="right" headers="Load Begin" class='awrnclb'>7.99</td><td align="right" headers="Load End" class='awrnc'>10.54</td><td align="right" headers="%CPU %Busy" class='awrnclb'>29.52</td><td align="right" headers="%CPU %Usr" class='awrnc'>7.15</td><td align="right" headers="%CPU %Sys" class='awrnc'>14.21</td><td align="right" headers="%CPU %WIO" class='awrnc'>56.99</td><td align="right" headers="%CPU %Idl" class='awrnc'>70.48</td><td align="right" headers="Time(s) Busy" class='awrnclb'>1,327.31</td><td align="right" headers="Time(s) Idle" class='awrnc'>3,168.53</td><td align="right" headers="Time(s) Total" class='awrnc'>4,495.84</td><td align="right" headers="Memory MB" class='awrnclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrnclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrnc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrnc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclbt'>2,687.54</td><td align="right" class='awrct'>6,224.15</td><td align="right" class='awrct'>8,911.69</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="629"></a>
<h2 class="awr">
Time Model Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12014">Time Model</a></li>
<li class="awr"><a class="awr" href="#12015">Time Model - % of DB time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12014"></a>
<h3 class="awr">Time Model</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Time Model"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">DB time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">SQL Exec Ela (s)</th><th class="awrbg" scope="col">Parse Ela (s)</th><th class="awrbg" scope="col">Hard Parse Ela (s)</th><th class="awrbg" scope="col">PL/SQL Ela (s)</th><th class="awrbg" scope="col">Java Ela (s)</th><th class="awrbg" scope="col">bg time (s)</th><th class="awrbg" scope="col">bg CPU (s)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>8,007.18</td><td align="right" class='awrc'>507.71</td><td align="right" class='awrc'>8,000.82</td><td align="right" class='awrc'>8.60</td><td align="right" class='awrc'>7.95</td><td align="right" class='awrc'>5.66</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>2,482.23</td><td align="right" class='awrc'>385.49</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>10,263.44</td><td align="right" class='awrnc'>464.29</td><td align="right" class='awrnc'>10,260.82</td><td align="right" class='awrnc'>5.86</td><td align="right" class='awrnc'>5.67</td><td align="right" class='awrnc'>2.87</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1,242.54</td><td align="right" class='awrnc'>334.94</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>18,270.62</td><td align="right" class='awrct'>972.00</td><td align="right" class='awrct'>18,261.65</td><td align="right" class='awrct'>14.45</td><td align="right" class='awrct'>13.63</td><td align="right" class='awrct'>8.54</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>3,724.77</td><td align="right" class='awrct'>720.43</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>9,135.31</td><td align="right" class='awrnc'>486.00</td><td align="right" class='awrnc'>9,130.82</td><td align="right" class='awrnc'>7.23</td><td align="right" class='awrnc'>6.81</td><td align="right" class='awrnc'>4.27</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1,862.38</td><td align="right" class='awrnc'>360.22</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>1,595.42</td><td align="right" class='awrc'>30.70</td><td align="right" class='awrc'>1,598.06</td><td align="right" class='awrc'>1.94</td><td align="right" class='awrc'>1.61</td><td align="right" class='awrc'>1.97</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>876.59</td><td align="right" class='awrc'>35.75</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12015"></a>
<h3 class="awr">Time Model - % of DB time</h3>
<ul>
<li class="awr"> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]</li>
</ul>
<table border="0" class="tdiff" summary="Time Model - % of DB time. . % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 6" id="%DBtime">% DB time</th>
<td>&#160;</td><th class="awrbg" colspan=" 1" id="%bgtime">% bg time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">% Total DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="SQLExecEla">SQL Exec Ela</th><th class="awrbg" scope="col" id="ParseEla">Parse Ela</th><th class="awrbg" scope="col" id="HardParse">Hard Parse</th><th class="awrbg" scope="col" id="PL/SQLEla">PL/SQL Ela</th><th class="awrbg" scope="col" id="JavaEla">Java Ela</th><th class="awrbg" scope="col">% Total bg time</th><th class="awrbg" scope="col" id="bgCPU">bg CPU</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>43.83</td><td align="right" headers="%DBtime DBCPU" class='awrclb'>6.34</td><td align="right" headers="%DBtime SQLExecEla" class='awrc'>99.92</td><td align="right" headers="%DBtime ParseEla" class='awrc'>0.11</td><td align="right" headers="%DBtime HardParse" class='awrc'>0.10</td><td align="right" headers="%DBtime PL/SQLEla" class='awrc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrc'>0.00</td><td align="right" class='awrc'>66.64</td><td align="right" headers="%bgtime bgCPU" class='awrcbb'>15.53</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>56.17</td><td align="right" headers="%DBtime DBCPU" class='awrnclb'>4.52</td><td align="right" headers="%DBtime SQLExecEla" class='awrnc'>99.97</td><td align="right" headers="%DBtime ParseEla" class='awrnc'>0.06</td><td align="right" headers="%DBtime HardParse" class='awrnc'>0.06</td><td align="right" headers="%DBtime PL/SQLEla" class='awrnc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrnc'>0.00</td><td align="right" class='awrnc'>33.36</td><td align="right" headers="%bgtime bgCPU" class='awrncbb'>26.96</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrclbt'>5.43</td><td align="right" class='awrct'>99.95</td><td align="right" class='awrct'>0.08</td><td align="right" class='awrct'>0.08</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrcbbt'>21.24</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="621"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12011">Foreground Wait Classes -	% of Total DB time</a></li>
<li class="awr"><a class="awr" href="#12012">Foreground Wait Classes</a></li>
<li class="awr"><a class="awr" href="#12013">Foreground Wait Classes -	% of DB time </a></li>
<li class="awr"><a class="awr" href="#12050">Top Timed Events</a></li>
<li class="awr"><a class="awr" href="#12051">Top Timed Foreground Events</a></li>
<li class="awr"><a class="awr" href="#12052">Top Timed Background Events</a></li>
<li class="awr"><a class="awr" href="#12053">Foreground Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12054">Background Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12055">Wait Event Histogram (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12011"></a>
<h3 class="awr">Foreground Wait Classes -  % of Total DB time</h3>
<ul>
<li class="awr"> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of Total DB time. . Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time"><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">User I/O</th><th class="awrbg" scope="col">Sys I/O</th><th class="awrbg" scope="col">Other</th><th class="awrbg" scope="col">Applic</th><th class="awrbg" scope="col">Commit</th><th class="awrbg" scope="col">Network</th><th class="awrbg" scope="col">Concurcy</th><th class="awrbg" scope="col">Config</th><th class="awrbg" scope="col">Cluster</th><th class="awrbg" scope="col">Admin</th><th class="awrbg" scope="col">Scheduler</th><th class="awrbg" scope="col">DB CPU</th></tr>
<tr><td class='awrc'>&#160;</td><td align="right" class='awrc'>60.48</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>30.95</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.32</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12012"></a>
<h3 class="awr">Foreground Wait Classes</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">User I/O(s)</th><th class="awrbg" scope="col">Sys I/O(s)</th><th class="awrbg" scope="col">Other(s)</th><th class="awrbg" scope="col">Applic (s)</th><th class="awrbg" scope="col">Commit (s)</th><th class="awrbg" scope="col">Network (s)</th><th class="awrbg" scope="col">Concurcy (s)</th><th class="awrbg" scope="col">Config (s)</th><th class="awrbg" scope="col">Cluster (s)</th><th class="awrbg" scope="col">Admin (s)</th><th class="awrbg" scope="col">Scheduler (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>1,722.14</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>2.44</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.84</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.68</td><td align="right" class='awrc'>5,654.05</td><td align="right" class='awrc'>312.14</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>507.71</td><td align="right" class='awrc'>8,007.18</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>9,327.23</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>10.71</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>1.09</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>647.53</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>464.29</td><td align="right" class='awrnc'>10,263.44</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>11,049.37</td><td align="right" class='awrct'>0.06</td><td align="right" class='awrct'>13.15</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>4.93</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.69</td><td align="right" class='awrct'>5,654.05</td><td align="right" class='awrct'>959.66</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>972.00</td><td align="right" class='awrct'>18,270.62</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>5,524.68</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>6.57</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>2.46</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.34</td><td align="right" class='awrnc'>2,827.02</td><td align="right" class='awrnc'>479.83</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>486.00</td><td align="right" class='awrnc'>9,135.31</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>5,377.61</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>5.85</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>1.95</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.47</td><td align="right" class='awrc'>3,998.02</td><td align="right" class='awrc'>237.16</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>30.70</td><td align="right" class='awrc'>1,595.42</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12013"></a>
<h3 class="awr">Foreground Wait Classes -  % of DB time </h3>
<ul>
<li class="awr"> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of DB time . . % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 12" id="%DBtime">% DB time</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="UserI/O">User I/O</th><th class="awrbg" scope="col" id="SysI/O">Sys I/O</th><th class="awrbg" scope="col" id="Other">Other</th><th class="awrbg" scope="col" id="Applic">Applic</th><th class="awrbg" scope="col" id="Commit">Commit</th><th class="awrbg" scope="col" id="Network">Network</th><th class="awrbg" scope="col" id="Concurcy">Concurcy</th><th class="awrbg" scope="col" id="Config">Config</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Admin">Admin</th><th class="awrbg" scope="col" id="Scheduler">Scheduler</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col">% Total DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="%DBtime UserI/O" class='awrclb'>21.51</td><td align="right" headers="%DBtime SysI/O" class='awrc'>0.00</td><td align="right" headers="%DBtime Other" class='awrc'>0.03</td><td align="right" headers="%DBtime Applic" class='awrc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrc'>0.05</td><td align="right" headers="%DBtime Network" class='awrc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrc'>0.01</td><td align="right" headers="%DBtime Config" class='awrc'>70.61</td><td align="right" headers="%DBtime Cluster" class='awrc'>3.90</td><td align="right" headers="%DBtime Admin" class='awrc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrcrb'>6.34</td><td align="right" class='awrc'>43.83</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="%DBtime UserI/O" class='awrnclb'>90.88</td><td align="right" headers="%DBtime SysI/O" class='awrnc'>0.00</td><td align="right" headers="%DBtime Other" class='awrnc'>0.10</td><td align="right" headers="%DBtime Applic" class='awrnc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrnc'>0.01</td><td align="right" headers="%DBtime Network" class='awrnc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrnc'>0.00</td><td align="right" headers="%DBtime Config" class='awrnc'>0.00</td><td align="right" headers="%DBtime Cluster" class='awrnc'>6.31</td><td align="right" headers="%DBtime Admin" class='awrnc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrnc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrncrb'>4.52</td><td align="right" class='awrnc'>56.17</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>56.19</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.07</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.03</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>35.31</td><td align="right" class='awrct'>5.10</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrcrbt'>5.43</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12050"></a>
<h3 class="awr">Top Timed Events</h3>
<ul>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time ' 	     : Per-instance 'Wait Time Avg ' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Events. . Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time ' : Per-instance 'Wait Time Avg ' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>2,669,388</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>11,057.55</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>60.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.82ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.09ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.54ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>5.27ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>free buffer waits</td><td align="right" headers="Event Waits" class='awrnclb'>615,359</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5,630.79</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.15ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>70.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.15ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>9.15ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>1</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>37,687</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,648.34</td><td align="right" headers="WaitTime AvgWait" class='awrc'>43.74ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>9.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>62.55ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>22.86ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>102.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>56.13ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>972.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>5.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>1,157,717</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>750.54</td><td align="right" headers="WaitTime AvgWait" class='awrc'>648.29us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>639.23us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>584.60us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>693.86us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>77.25us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>18,530</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>639.85</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>34.53ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>3.50</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>33.87ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>13.13ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>54.60ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>29.32ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>56,736</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>117.70</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.07ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>884.57us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrnclb'>6,911</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>117.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>16.93ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>15.80ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.34ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>25.27ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>13.39ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>59,460</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>79.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.43</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.29ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.35ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>88.84us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>53,538</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>76.60</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.42</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>Configuration</td><td headers="Wait Event" class='awrct'>free buffer waits</td><td align="right" headers="Event Waits" class='awrclbt'>615,359</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>5,630.79</td><td align="right" headers="WaitTime AvgWait" class='awrct'>9.15ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>70.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>1,576,171</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,722.23</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.09ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>21.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>9,911</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,013.30</td><td align="right" headers="WaitTime AvgWait" class='awrc'>102.24ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>12.65</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>9,562</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>522.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>54.60ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>6.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>507.71</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>6.34</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>482,818</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>282.26</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>584.60us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>3.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>3,868</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>97.76</td><td align="right" headers="WaitTime AvgWait" class='awrc'>25.27ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.22</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>write complete waits</td><td align="right" headers="Event Waits" class='awrnclb'>44</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>32.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>728.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>315</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>30.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>95.26ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.37</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>228</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>24.15</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>105.92ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.30</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>1,093,217</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>9,335.31</td><td align="right" headers="WaitTime AvgWait" class='awrct'>8.54ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>90.96</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>27,776</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>635.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>22.86ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>6.19</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>674,899</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>468.28</td><td align="right" headers="WaitTime AvgWait" class='awrc'>693.86us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.56</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>464.29</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>8,968</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>117.78</td><td align="right" headers="WaitTime AvgWait" class='awrc'>13.13ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.15</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>49,394</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>110.47</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.24ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>53,538</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>76.60</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.75</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>47,563</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>64.40</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.35ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.63</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>20,064</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>20.70</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.03ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.20</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrnclb'>3,043</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>19.28</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.34ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.19</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12051"></a>
<h3 class="awr">Top Timed Foreground Events</h3>
<ul>
<li class="awr"> Foreground Activity is captured in release 11g and above </li>
<li class="awr"> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Foreground Events. . Foreground Activity is captured in release 11g and above. For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>2,667,190</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>11,049.22</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>60.48</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.82ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.09ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.55ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>5.27ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>free buffer waits</td><td align="right" headers="Event Waits" class='awrnclb'>614,650</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5,621.99</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.15ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>70.21</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.15ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>9.15ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>1</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>972.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>5.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,157,673</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>750.51</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>648.29us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>639.23us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>584.60us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>693.86us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>77.26us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>59,280</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>78.91</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.43</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.29ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.36ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>90.76us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>53,538</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>76.60</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.75</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>1</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Configuration</td><td headers="Wait Event" class='awrc'>write complete waits</td><td align="right" headers="Event Waits" class='awrclb'>44</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>32.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>728.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>728.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>728.43ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>728.43ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>1</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>19,121</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>20.11</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.05ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>917.31us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>771.16us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.06ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>206.68us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>15,442</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>11.79</td><td align="right" headers="WaitTime AvgWait" class='awrc'>763.19us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>787.43us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>713.45us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>861.42us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>104.63us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>buffer exterminate</td><td align="right" headers="Event Waits" class='awrnclb'>926</td><td align="right" headers="Event %Timeouts" class='awrnc'>99.78</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>9.22</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.95ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.95ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>9.95ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.95ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>1</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>Configuration</td><td headers="Wait Event" class='awrct'>free buffer waits</td><td align="right" headers="Event Waits" class='awrclbt'>614,650</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>5,621.99</td><td align="right" headers="WaitTime AvgWait" class='awrct'>9.15ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>70.21</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>1,576,022</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,722.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.09ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>21.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>507.71</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>6.34</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>482,814</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>282.25</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>584.60us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>3.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Configuration</td><td headers="Wait Event" class='awrc'>write complete waits</td><td align="right" headers="Event Waits" class='awrclb'>44</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>32.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>728.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>11,891</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>14.61</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.23ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.18</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block lost</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4.78</td><td align="right" headers="WaitTime AvgWait" class='awrc'>956.15ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>5,191</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.47</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>861.42us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Commit</td><td headers="Wait Event" class='awrc'>log file sync</td><td align="right" headers="Event Waits" class='awrclb'>15</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.84</td><td align="right" headers="WaitTime AvgWait" class='awrc'>256.26ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrnclb'>20</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.74</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>137.24ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>1,091,168</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>9,327.22</td><td align="right" headers="WaitTime AvgWait" class='awrct'>8.55ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>90.88</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>674,859</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>468.26</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>693.86us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.56</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>DB CPU</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>464.29</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>53,538</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>76.60</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.75</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>47,389</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>64.30</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.36ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.63</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>18,348</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>19.51</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.06ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.19</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>buffer exterminate</td><td align="right" headers="Event Waits" class='awrclb'>926</td><td align="right" headers="Event %Timeouts" class='awrc'>99.78</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9.22</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9.95ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>10,251</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>7.31</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>713.45us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.07</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant congested</td><td align="right" headers="Event Waits" class='awrclb'>1,176</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>6.52</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.54ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block lost</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.29</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>458.50ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12052"></a>
<h3 class="awr">Top Timed Background Events</h3>
<ul>
<li class="awr"> % of bg time: % of background elapsed time </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Background Events. . % of bg time: % of background elapsed time. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>37,680</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,647.85</td><td align="right" headers="WaitTime AvgWait" class='awrc'>43.73ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>44.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>62.54ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>22.86ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>102.21ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>56.11ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>720.43</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>19.34</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>18,529</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>639.60</td><td align="right" headers="WaitTime AvgWait" class='awrc'>34.52ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>17.17</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>33.86ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>13.13ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>54.58ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>29.31ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>56,787</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>117.75</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.07ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>3.16</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>883.78us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>6,910</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>116.78</td><td align="right" headers="WaitTime AvgWait" class='awrc'>16.90ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>3.14</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>15.77ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.34ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>25.21ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>13.35ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>596</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>34.43</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>57.78ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.92</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>55.51ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>15.76ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>95.26ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>56.21ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrclb'>451</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>30.75</td><td align="right" headers="WaitTime AvgWait" class='awrc'>68.18ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.83</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>67.76ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>29.61ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>105.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>53.96ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: RO - fast object reuse</td><td align="right" headers="Event Waits" class='awrnclb'>257</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>14.78</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>57.50ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.40</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>43.12ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>646.28us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>85.60ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>60.07ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Configuration</td><td headers="Wait Event" class='awrc'>free buffer waits</td><td align="right" headers="Event Waits" class='awrclb'>709</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>8.80</td><td align="right" headers="WaitTime AvgWait" class='awrc'>12.41ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.35</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>12.41ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>12.41ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>12.41ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>1</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>2,200</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>8.32</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.78ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.22</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.76ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.57ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.95ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>1.68ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>System I/O</td><td headers="Wait Event" class='awrct'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclbt'>9,910</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>1,012.92</td><td align="right" headers="WaitTime AvgWait" class='awrct'>102.21ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>40.81</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>9,561</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>521.83</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>54.58ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>21.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>&#160;</td><td headers="Wait Event" class='awrc'>background cpu time</td><td align="right" headers="Event Waits" class='awrclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>385.49</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrc'>15.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrnclb'>3,867</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>97.50</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>25.21ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>3.93</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>315</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>30.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>95.26ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.21</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>228</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>24.15</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>105.92ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.97</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Configuration</td><td headers="Wait Event" class='awrc'>free buffer waits</td><td align="right" headers="Event Waits" class='awrclb'>709</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>8.80</td><td align="right" headers="WaitTime AvgWait" class='awrc'>12.41ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.35</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>7,341</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>7.23</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.99ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.29</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>gcs log flush sync</td><td align="right" headers="Event Waits" class='awrclb'>5,921</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4.75</td><td align="right" headers="WaitTime AvgWait" class='awrc'>802.17us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.19</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrnclb'>3,359</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.52</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>750.27us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>System I/O</td><td headers="Wait Event" class='awrct'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclbt'>27,770</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>634.92</td><td align="right" headers="WaitTime AvgWait" class='awrct'>22.86ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>51.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>334.94</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>26.96</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>8,968</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>117.78</td><td align="right" headers="WaitTime AvgWait" class='awrc'>13.13ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>9.48</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>49,446</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>110.51</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.24ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>8.89</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>3,043</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19.28</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.34ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.55</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: RO - fast object reuse</td><td align="right" headers="Event Waits" class='awrnclb'>172</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>14.72</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>85.60ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.18</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>2,051</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>8.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.95ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.65</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>223</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>6.60</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>29.61ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>363</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4.83</td><td align="right" headers="WaitTime AvgWait" class='awrc'>13.30ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.39</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>281</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.43</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>15.76ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.36</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12053"></a>
<h3 class="awr">Foreground Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>2,667,190</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>11,049.22</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>60.48</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.82ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.09ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.55ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.27ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>free buffer waits</td><td align="right" headers="Event Waits" class='awrnclb'>614,650</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5,621.99</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.15ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>30.77</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.15ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>9.15ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>1,157,673</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>750.51</td><td align="right" headers="WaitTime AvgWait" class='awrc'>648.29us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>639.23us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>584.60us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>693.86us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>77.26us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>59,280</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>78.91</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.43</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.29ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.36ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>90.76us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>53,538</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>76.60</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.42</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.43ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>write complete waits</td><td align="right" headers="Event Waits" class='awrnclb'>44</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>32.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>728.43ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.18</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>728.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>728.43ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>728.43ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>19,121</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>20.11</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.05ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>917.31us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>771.16us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.06ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>206.68us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>15,442</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>11.79</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>763.19us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>787.43us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>713.45us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>861.42us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>104.63us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>buffer exterminate</td><td align="right" headers="Event Waits" class='awrclb'>926</td><td align="right" headers="Event %Timeouts" class='awrc'>99.78</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>9.22</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9.95ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>9.95ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>9.95ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>9.95ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant congested</td><td align="right" headers="Event Waits" class='awrnclb'>1,575</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>7.97</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.06ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.04</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.59ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.65ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.54ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.34ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block lost</td><td align="right" headers="Event Waits" class='awrclb'>10</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>7.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>707.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.04</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>707.33ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>458.50ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>956.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>351.89ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Commit</td><td headers="Wait Event" class='awrnc'>log file sync</td><td align="right" headers="Event Waits" class='awrnclb'>33</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.93</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>149.38ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>158.29ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>60.32ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>256.26ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>138.55ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.74</td><td align="right" headers="WaitTime AvgWait" class='awrc'>137.24ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>137.24ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>137.24ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>137.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>3,331</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.14</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>643.95us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>641.77us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>575.15us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>708.39us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>94.22us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>reliable message</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.28</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1281.65ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1281.65ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1281.65ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1281.65ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block congested</td><td align="right" headers="Event Waits" class='awrnclb'>79</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.20</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>15.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.73ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.94ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>15.52ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>8.19ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>gcs drm freeze in enter server mode</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.66</td><td align="right" headers="WaitTime AvgWait" class='awrc'>94.20ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>94.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>94.20ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>94.20ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrnclb'>1,567</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.50</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>319.34us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>274.74us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>140.09us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>409.40us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>190.43us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrclb'>525</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.39</td><td align="right" headers="WaitTime AvgWait" class='awrc'>734.92us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>772.39us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>732.65us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>812.13us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>56.21us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>cursor: pin S wait on X</td><td align="right" headers="Event Waits" class='awrnclb'>9</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.30</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>33.67ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>33.67ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>33.67ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>33.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrclb'>242</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.27</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.10ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>901.05us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>151.42us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrnclb'>344</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.25</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>731.15us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>731.15us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>245.13us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>687.34us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>library cache load lock</td><td align="right" headers="Event Waits" class='awrclb'>38</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.23</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.96ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.18ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>67.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.29ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>4.40ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrnclb'>9</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.19</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>20.76ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>20.76ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>20.76ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>20.76ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrclb'>172</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.14</td><td align="right" headers="WaitTime AvgWait" class='awrc'>837.55us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>827.63us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>241.39us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>kksfbc child completion</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>49.73ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>49.73ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>49.65ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>49.81ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>106.77us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrclb'>2,695</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>32.79us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>37.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>32.64us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>41.70us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>6.41us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>lock escalate retry</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.91ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.91ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>9.91ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.91ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>92</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>759.73us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>712.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>662.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>763.01us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>71.19us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>direct path write</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>22.44ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>22.44ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>22.44ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>22.44ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>library cache lock</td><td align="right" headers="Event Waits" class='awrclb'>72</td><td align="right" headers="Event %Timeouts" class='awrc'>2.78</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>860.29us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.06ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>835.49us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.28ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>315.73us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>172</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>347.34us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>287.04us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>206.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>368.07us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>114.60us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>library cache pin</td><td align="right" headers="Event Waits" class='awrclb'>69</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>853.90us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>726.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>576.80us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>875.55us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>211.25us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>44</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.26ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.05ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.29ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>169.12us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrclb'>65</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>766.52us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>827.60us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>757.95us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>897.25us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>98.50us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch free</td><td align="right" headers="Event Waits" class='awrnclb'>139</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>337.16us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>336.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>309.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>362.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>37.42us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrclb'>76</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>604.33us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>607.73us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>478.64us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>736.81us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>182.55us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrnclb'>97</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>418.76us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>419.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>404.72us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>433.70us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>20.49us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: redo allocation</td><td align="right" headers="Event Waits" class='awrclb'>138</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>290.81us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>303.24us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>275.58us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>330.89us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>39.11us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrnclb'>61</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>548.13us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>481.85us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>408.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>555.36us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>103.97us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrclb'>150</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>219.37us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>264.18us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>213.26us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>315.11us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>72.02us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>row cache lock</td><td align="right" headers="Event Waits" class='awrnclb'>18</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.48ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.48ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.48ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.48ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc remaster</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>8.39ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>8.39ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>8.39ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.39ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS initialization</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.56ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.56ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.56ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.56ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: enqueue hash chains</td><td align="right" headers="Event Waits" class='awrclb'>49</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>432.31us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>416.29us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>304.14us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>528.43us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>158.59us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrnclb'>703</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>29.95us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>29.66us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>28.23us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>31.09us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.02us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: TO - contention</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>.99ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>909.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>122.64us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>15</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.24ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.28ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>124.50us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block congested</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>8.01ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>8.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>8.01ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.01ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.49ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.61ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.79ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>832.26us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrclb'>12</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.08ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file scattered read</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.05ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.05ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>359.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.73ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.39ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: call allocation</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.38ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.38ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.38ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.38ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>SQL*Net break/reset to client</td><td align="right" headers="Event Waits" class='awrnclb'>122</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>80.60us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>80.60us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>80.60us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>80.60us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrclb'>11</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>882.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>882.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>882.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>882.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: WT - contention</td><td align="right" headers="Event Waits" class='awrnclb'>10</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>881.90us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>881.90us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>881.90us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>881.90us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>direct path read</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>903.56us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>903.56us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>903.56us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>903.56us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrnclb'>11</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>523.73us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>410.86us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>233.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>588.22us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>250.83us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS operation: action</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.31ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: shared pool</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>564.25us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>554.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>535.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>573.83us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>27.11us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: TT - contention</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.32ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.32ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.32ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: query</td><td align="right" headers="Event Waits" class='awrnclb'>12</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>294.17us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>294.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>294.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>294.17us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>name-service call wait</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.75ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.75ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.75ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.75ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>enq: HW - contention</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.04ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.55ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.55ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.55ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.55ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX qref latch</td><td align="right" headers="Event Waits" class='awrnclb'>157</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>17.97us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>17.97us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>17.97us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>17.97us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current retry</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>938.33us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>938.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>938.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>938.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache: mutex X</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>340.88us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>340.88us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>340.88us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>340.88us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges enter server mode</td><td align="right" headers="Event Waits" class='awrclb'>231</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>8.40us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>8.39us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>8.18us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.60us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>296.86ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: undo global data</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>420.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>420.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>420.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>420.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrclb'>25</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>61.04us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>40.79us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>11.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>70.57us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>42.12us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: AF - task serialization</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Network</td><td headers="Wait Event" class='awrc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrclb'>197</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.09us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.47us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.84us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.10us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>895.99ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc buffer busy acquire</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>568.50us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>568.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>567.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>570.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.12us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: kjci process context latch</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>804.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>804.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>804.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>804.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrnclb'>34</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>19.06us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>19.06us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>19.06us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>19.06us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>enq: PW - flush prewarm buffers</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>638.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>638.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>638.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>638.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: TM - contention</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>624.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>624.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>624.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>624.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>lock deadlock retry</td><td align="right" headers="Event Waits" class='awrclb'>10</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>56.40us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>56.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>14.60us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>98.20us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>59.11us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrnclb'>12</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>10.17us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>10.29us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>9.57us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>11.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.01us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>11.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>11.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>11.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>11.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>watchdog main loop</td><td align="right" headers="Event Waits" class='awrnclb'>1,627</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4,884.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3001.86ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>26.73</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3001.85ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3000.01ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3003.69ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.60ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrclb'>197</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>610.13</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3097.10ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>3.34</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1931.10ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>832.18us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3861.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2729.81ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Execution Msg</td><td align="right" headers="Event Waits" class='awrnclb'>1,031</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5.81</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.63ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.63ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.89ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.29ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Msg Fragment</td><td align="right" headers="Event Waits" class='awrclb'>592</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.34</td><td align="right" headers="WaitTime AvgWait" class='awrc'>575.93us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>575.93us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>521.10us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>630.75us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>77.53us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq Credit: send blkd</td><td align="right" headers="Event Waits" class='awrnclb'>323</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.34</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.04ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>884.29us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>275.14us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq Credit: need buffer</td><td align="right" headers="Event Waits" class='awrclb'>17</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>572.29us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>572.29us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>572.29us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>572.29us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12054"></a>
<h3 class="awr">Background Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%bgtime">%bg time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>37,680</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,647.85</td><td align="right" headers="WaitTime AvgWait" class='awrc'>43.73ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.44</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>62.54ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>22.86ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>102.21ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>56.11ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>18,529</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>639.60</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>34.52ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.17</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>33.86ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>13.13ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>54.58ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>29.31ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>56,787</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>117.75</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.07ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>883.78us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrnclb'>6,910</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>116.78</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>16.90ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>15.77ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.34ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>25.21ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>13.35ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>596</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>34.43</td><td align="right" headers="WaitTime AvgWait" class='awrc'>57.78ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>55.51ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>15.76ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>95.26ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>56.21ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>451</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>30.75</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>68.18ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>67.76ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>29.61ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>105.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>53.96ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>enq: RO - fast object reuse</td><td align="right" headers="Event Waits" class='awrclb'>257</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>14.78</td><td align="right" headers="WaitTime AvgWait" class='awrc'>57.50ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>43.12ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>646.28us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>85.60ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>60.07ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>free buffer waits</td><td align="right" headers="Event Waits" class='awrnclb'>709</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>8.80</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>12.41ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>12.41ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>12.41ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>12.41ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>2,200</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>8.32</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.78ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.76ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.57ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.95ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.68ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>gcs log flush sync</td><td align="right" headers="Event Waits" class='awrnclb'>8,295</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>6.96</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>839.48us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>867.36us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>802.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>932.55us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>92.19us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrclb'>6,806</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>5.56</td><td align="right" headers="WaitTime AvgWait" class='awrc'>817.23us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>816.37us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>750.27us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>882.47us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>93.48us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KSV master wait</td><td align="right" headers="Event Waits" class='awrnclb'>3,203</td><td align="right" headers="Event %Timeouts" class='awrnc'>28.47</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5.50</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.72ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.71ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.56ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.86ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>209.72us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>390</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4.85</td><td align="right" headers="WaitTime AvgWait" class='awrc'>12.42ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>711.93us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>13.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>8.90ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>1,655</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.71</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.24ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.19ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>744.83us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.64ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.05ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>SGA: allocation forcing component growth</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.21</td><td align="right" headers="WaitTime AvgWait" class='awrc'>534.76ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>534.76ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>534.76ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>534.76ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: CF - contention</td><td align="right" headers="Event Waits" class='awrnclb'>130</td><td align="right" headers="Event %Timeouts" class='awrnc'>46.92</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.19</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>24.53ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>27.04ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>16.85ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>37.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>14.42ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrclb'>3,666</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>819.30us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>820.10us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>332.10us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>690.13us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>6,971</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.84</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>407.35us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>403.92us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>258.78us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>549.06us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>205.26us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrclb'>62,582</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.78</td><td align="right" headers="WaitTime AvgWait" class='awrc'>44.43us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>91.79us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>29.26us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>154.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>88.44us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrnclb'>71</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.52</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>35.52ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>70.32ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>26.98ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>113.67ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>61.30ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block lost</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.21</td><td align="right" headers="WaitTime AvgWait" class='awrc'>442.57ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>442.57ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>442.57ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>442.57ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrnclb'>108</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.99</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>18.44ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>18.44ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>16.51ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>20.38ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.74ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Parameter File I/O</td><td align="right" headers="Event Waits" class='awrclb'>56</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.86</td><td align="right" headers="WaitTime AvgWait" class='awrc'>33.18ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>33.18ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>33.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>33.18ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>log file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>1,097</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.86</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.69ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.69ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.11ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>590.95us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>reliable message</td><td align="right" headers="Event Waits" class='awrclb'>269</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.44</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.37ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>13.33ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>22.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>12.78ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,870</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.30</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>694.25us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>724.37us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>688.81us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>759.92us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>50.28us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>1,658</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>648.57us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>662.68us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>636.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>688.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>36.51us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>direct path write temp</td><td align="right" headers="Event Waits" class='awrnclb'>53</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.83</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>15.63ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>18.74ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>15.51ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>21.98ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.58ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrclb'>87</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.83</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9.52ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>36.57ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.44ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>71.69ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>49.67ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrnclb'>29,030</td><td align="right" headers="Event %Timeouts" class='awrnc'>99.99</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.81</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>27.96us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>28.05us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>27.47us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>28.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>819.16ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" headers="Event Waits" class='awrclb'>65</td><td align="right" headers="Event %Timeouts" class='awrc'>49.23</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.80</td><td align="right" headers="WaitTime AvgWait" class='awrc'>12.34ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>13.30ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.36ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>20.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>9.81ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: TM - contention</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.77</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>256.94ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>192.84ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>552.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>385.13ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>271.94ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc buffer busy acquire</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.70</td><td align="right" headers="WaitTime AvgWait" class='awrc'>116.68ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>116.68ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.11ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>232.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>163.45ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Join ACK</td><td align="right" headers="Event Waits" class='awrnclb'>344</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.66</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.92ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.27ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.90ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.63ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>513.71us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file async I/O submit</td><td align="right" headers="Event Waits" class='awrclb'>57,065</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.51</td><td align="right" headers="WaitTime AvgWait" class='awrc'>8.94us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>9.02us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>8.92us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>9.13us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>152.01ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>745</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.42</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>570.15us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>628.63us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>559.36us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>697.90us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>97.96us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CGS wait for IPC msg</td><td align="right" headers="Event Waits" class='awrclb'>13,365</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.37</td><td align="right" headers="WaitTime AvgWait" class='awrc'>27.72us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>27.72us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>27.14us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>28.31us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>825.13ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrnclb'>1,130</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.37</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>327.03us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>328.64us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>258.39us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>398.89us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>99.35us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>AQ: RAC AQ Network</td><td align="right" headers="Event Waits" class='awrclb'>12,204</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.35</td><td align="right" headers="WaitTime AvgWait" class='awrc'>29.06us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>29.06us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>28.76us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>29.36us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>425.54ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrnclb'>10</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.34</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>34.24ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>34.24ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>34.24ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>34.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>DFS lock handle</td><td align="right" headers="Event Waits" class='awrclb'>560</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.33</td><td align="right" headers="WaitTime AvgWait" class='awrc'>587.49us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>589.13us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>556.36us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>621.91us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>46.35us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>gcs remastering wait for read latch</td><td align="right" headers="Event Waits" class='awrnclb'>11</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.30</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>27.45ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>26.96ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>25.20ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>28.73ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.49ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges message buffer allocation</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.30</td><td align="right" headers="WaitTime AvgWait" class='awrc'>299.75ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>299.75ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>299.75ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>299.75ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrnclb'>2,149</td><td align="right" headers="Event %Timeouts" class='awrnc'>97.25</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.29</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>133.88us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>195.70us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>132.53us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>258.87us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>89.33us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch free</td><td align="right" headers="Event Waits" class='awrclb'>1,269</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.28</td><td align="right" headers="WaitTime AvgWait" class='awrc'>221.37us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>221.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>193.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>248.68us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>39.14us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrnclb'>272</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.22</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>819.32us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>796.08us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>755.03us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>837.13us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>58.05us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrclb'>224</td><td align="right" headers="Event %Timeouts" class='awrc'>5.36</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.19</td><td align="right" headers="WaitTime AvgWait" class='awrc'>856.16us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>830.95us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>803.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>858.91us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>39.53us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>oracle thread bootstrap</td><td align="right" headers="Event Waits" class='awrnclb'>7</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.19</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>27.15ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>27.24ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>26.66ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>27.82ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>822.25us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Commit</td><td headers="Wait Event" class='awrc'>log file sync</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.17</td><td align="right" headers="WaitTime AvgWait" class='awrc'>174.51ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>174.51ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>174.51ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>174.51ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" headers="Event Waits" class='awrnclb'>296</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.14</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>459.18us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>459.18us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>459.18us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>459.18us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>library cache lock</td><td align="right" headers="Event Waits" class='awrclb'>143</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.11</td><td align="right" headers="WaitTime AvgWait" class='awrc'>790.45us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>811.86us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>749.36us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>874.36us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>88.39us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache pin</td><td align="right" headers="Event Waits" class='awrnclb'>152</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.11</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>698.45us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>710.79us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>663.91us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>757.68us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>66.31us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrclb'>1,400</td><td align="right" headers="Event %Timeouts" class='awrc'>87.29</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>72.83us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>68.56us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>32.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>104.17us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>50.36us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>177</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>540.97us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>615.76us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>535.53us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>696.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>113.47us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrclb'>298</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>303.85us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>315.31us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>270.38us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>360.23us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>63.54us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR wait for redo copy</td><td align="right" headers="Event Waits" class='awrnclb'>233</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>374.75us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>486.35us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>334.29us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>638.42us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>215.05us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrclb'>331</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>263.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>261.30us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>258.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>263.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.35us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>direct path write</td><td align="right" headers="Event Waits" class='awrnclb'>7</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>11.60ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>18.83ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>8.71ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>28.94ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>14.30ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ksxr poll remote instances</td><td align="right" headers="Event Waits" class='awrclb'>2,486</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>30.28us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>30.22us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>28.52us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>31.93us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.41us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file scattered read</td><td align="right" headers="Event Waits" class='awrnclb'>36</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.09ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.45ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>737.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.17ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.01ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Network</td><td headers="Wait Event" class='awrc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrclb'>942</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>77.97us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>77.97us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>73.83us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>82.10us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.85us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrnclb'>344</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>206.82us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>250.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>204.44us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>295.56us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>64.43us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges inquiry response</td><td align="right" headers="Event Waits" class='awrclb'>85</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>806.12us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>806.12us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>806.12us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>806.12us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: shared pool</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>10.83ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.86ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>263.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>13.47ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>9.34ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS operation: data query</td><td align="right" headers="Event Waits" class='awrclb'>36</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.46ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.46ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.45ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.46ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>7.19us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block congested</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.78ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.78ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.78ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.78ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>row cache lock</td><td align="right" headers="Event Waits" class='awrclb'>36</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.12ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.13ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>942.84us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>267.94us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>read by other session</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>19.38ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>19.38ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>19.38ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>19.38ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS operation: data update</td><td align="right" headers="Event Waits" class='awrclb'>40</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>943.03us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>943.03us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>863.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>112.11us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: redo allocation</td><td align="right" headers="Event Waits" class='awrnclb'>89</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>368.99us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>391.91us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>350.28us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>433.55us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>58.88us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>direct path read</td><td align="right" headers="Event Waits" class='awrclb'>64</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>429.92us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>429.92us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>429.92us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>429.92us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>44</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>619.52us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>745.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>591.55us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>899.25us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>217.58us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr disk read</td><td align="right" headers="Event Waits" class='awrclb'>32</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>682.28us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>682.28us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>682.28us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>682.28us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrnclb'>45</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>441.87us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>443.79us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>357.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>530.41us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>122.50us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrclb'>21</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>886.24us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>870.20us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.21ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>238.15us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" headers="Event Waits" class='awrnclb'>344</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>53.56us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>40.96us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>27.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>54.26us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>18.80us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: TO - contention</td><td align="right" headers="Event Waits" class='awrclb'>23</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>799.35us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>799.35us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>799.35us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>799.35us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrnclb'>346</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>42.15us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>42.07us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>40.65us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>43.48us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.00us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>712.75us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.13ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>666.79us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.59ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>649.98us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>libcache interrupt action by LCK</td><td align="right" headers="Event Waits" class='awrnclb'>1,929</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.26us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.70us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.95us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>884.30ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>os thread creation</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.96ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.72ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.29ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>405.17us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrnclb'>13</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.04ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.24ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>866.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.61ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>524.44us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CO - master slave det</td><td align="right" headers="Event Waits" class='awrclb'>10</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.31ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>enq: HW - contention</td><td align="right" headers="Event Waits" class='awrnclb'>13</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>898.38us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>734.58us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>541.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>928.17us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>273.77us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: checkpoint queue latch</td><td align="right" headers="Event Waits" class='awrclb'>34</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>316.68us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>347.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>273.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>421.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>105.01us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block grant</td><td align="right" headers="Event Waits" class='awrnclb'>9</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.03ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>948.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>66.56us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: WT - contention</td><td align="right" headers="Event Waits" class='awrclb'>8</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.01ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.01ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.01ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>lock deadlock retry</td><td align="right" headers="Event Waits" class='awrnclb'>238</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>28.24us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>28.24us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>28.24us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>28.24us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: TT - contention</td><td align="right" headers="Event Waits" class='awrclb'>7</td><td align="right" headers="Event %Timeouts" class='awrc'>71.43</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>871.71us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>898.92us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>860.83us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>937.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>53.86us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrnclb'>12</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>490.17us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>397.36us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>286.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>508.73us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>157.49us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.77ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.77ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.77ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.77ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>latch: redo writing</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>669.25us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>669.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>202.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.14ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>660.79us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: ges resource hash list</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>294.89us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>281.43us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>160.25us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>402.60us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>171.37us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: RA - RT ADDM flood control</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>711.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>702.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>678.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>727.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>35.00us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.04ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: action</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>940.50us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>940.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>940.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>940.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: SM -  contention</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>875.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>875.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>875.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>875.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TA - contention</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>811.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>811.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>811.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>811.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges ipc enter server mode</td><td align="right" headers="Event Waits" class='awrclb'>201</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.25us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.29us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.41us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>168.80ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: PE - contention</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.18ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.18ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.18ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: enqueue hash chains</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>220.80us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>224.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>207.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>241.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>23.81us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TK - Auto Task Serialization</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>531.50us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>531.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>518.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>545.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>19.09us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file parallel read</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>529.50us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>529.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>529.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>529.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>503.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>503.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>467.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>539.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>50.91us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: AF - task serialization</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>886.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>886.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>886.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>886.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>name-service call wait</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>826.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>826.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>826.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>826.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>enq: PW - flush prewarm buffers</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>758.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>758.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>758.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>758.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>GCR CSS group query</td><td align="right" headers="Event Waits" class='awrnclb'>36</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>15.19us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>15.19us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>14.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>15.44us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>353.55ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>58.33us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>74.82us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>45.14us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>104.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>41.97us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>GCR CSS group update</td><td align="right" headers="Event Waits" class='awrnclb'>36</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>13.33us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>13.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>12.28us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>14.39us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.49us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>buffer busy waits</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>225.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>225.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>225.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>225.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>216.50us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>216.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>216.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>216.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: PG - contention</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>421.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>421.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>421.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>421.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrnclb'>35</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>8.60us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>8.70us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.28us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>12.12us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.84us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrclb'>39</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.28us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.20us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.59us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.82us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>869.70ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX qref latch</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>142.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>142.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>142.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>142.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: kjci process context latch</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>251.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>251.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>251.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>251.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: messages</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>81.50us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>81.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>81.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>82.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>707.11ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges enter server mode</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>32.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>32.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>32.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>32.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>row cache mutex</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>39.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>39.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>39.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>39.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>undo_retention publish retry</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.75us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>353.55ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.40us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>707.11ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.67us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.67us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: MGA shared context root latch</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>11.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>11.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>11.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>11.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>rdbms ipc message</td><td align="right" headers="Event Waits" class='awrclb'>71,526</td><td align="right" headers="Event %Timeouts" class='awrc'>31.17</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>26,278.85</td><td align="right" headers="WaitTime AvgWait" class='awrc'>367.40ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>7.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>473.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>253.32ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>693.54ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>311.28ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Idle Wait</td><td align="right" headers="Event Waits" class='awrnclb'>345</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>21,074.62</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>61.09 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>5.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>61.08 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>60.32 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>61.85 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1080.14ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Space Manager: slave idle wait</td><td align="right" headers="Event Waits" class='awrclb'>5,188</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19,455.54</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3750.10ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>5.22</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3750.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3730.08ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3770.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>28.46ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>class slave wait</td><td align="right" headers="Event Waits" class='awrnclb'>16,126</td><td align="right" headers="Event %Timeouts" class='awrnc'>75.19</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>9,090.62</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>563.72ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>2.44</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>563.61ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>531.84ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>595.38ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>44.93ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>wait for unread message on broadcast channel</td><td align="right" headers="Event Waits" class='awrclb'>1,874</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3,667.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1956.83ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.98</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1956.83ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1954.74ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1958.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.96ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>pmon timer</td><td align="right" headers="Event Waits" class='awrnclb'>816</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,447.95</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2999.94ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2999.94ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2999.93ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2999.95ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>11.69us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>ges remote message</td><td align="right" headers="Event Waits" class='awrclb'>37,552</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,443.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>65.07ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>65.07ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>64.78ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>65.37ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>417.49us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>GCR sleep</td><td align="right" headers="Event Waits" class='awrnclb'>8,139</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,442.82</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>300.14ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>300.14ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>300.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>300.14ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>772.00ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>DIAG idle wait</td><td align="right" headers="Event Waits" class='awrclb'>15,373</td><td align="right" headers="Event %Timeouts" class='awrc'>82.75</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,440.15</td><td align="right" headers="WaitTime AvgWait" class='awrc'>158.73ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.66</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>158.73ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>158.40ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>159.06ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>470.13us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>gcs yield cpu</td><td align="right" headers="Event Waits" class='awrnclb'>83,035</td><td align="right" headers="Event %Timeouts" class='awrnc'>99.10</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,437.24</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>29.35ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.65</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>29.35ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>29.29ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>29.42ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>92.58us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>gcs remote message</td><td align="right" headers="Event Waits" class='awrclb'>1,767,820</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,196.89</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.24ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.59</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.25ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.36ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>148.69us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>shared server idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>0</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,260.25</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.34</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Streams AQ: qmn coordinator idle wait</td><td align="right" headers="Event Waits" class='awrclb'>90</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,232.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>13.69 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>13.69 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>13.69 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>13.69 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>49.48us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Streams AQ: qmn slave idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>46</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,232.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>26.78 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>26.78 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>26.78 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>26.78 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>.97ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>pman timer</td><td align="right" headers="Event Waits" class='awrclb'>408</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,223.87</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2999.68ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2999.68ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2999.67ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2999.68ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>4.39us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>ASM background timer</td><td align="right" headers="Event Waits" class='awrnclb'>4,446</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,223.25</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>275.13ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>275.15ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>273.02ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>277.28ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.01ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,222.40</td><td align="right" headers="WaitTime AvgWait" class='awrc'>61.12 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>61.12 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>61.10 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>61.14 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>33.85ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>heartbeat redo informer</td><td align="right" headers="Event Waits" class='awrnclb'>1,222</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,222.17</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1000.14ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1000.14ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1000.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1000.14ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>321.73ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>ASM cluster membership changes</td><td align="right" headers="Event Waits" class='awrclb'>698</td><td align="right" headers="Event %Timeouts" class='awrc'>85.24</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,221.77</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1750.38ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1750.38ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1750.36ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1750.40ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>33.33us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>SCM slave idle</td><td align="right" headers="Event Waits" class='awrnclb'>12,246</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,221.29</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>99.73ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>99.73ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>99.61ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>99.85ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>168.03us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>OFS idle</td><td align="right" headers="Event Waits" class='awrclb'>407</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,221.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3000.00ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3000.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2999.99ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3000.01ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>13.58us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PING</td><td align="right" headers="Event Waits" class='awrnclb'>1,124</td><td align="right" headers="Event %Timeouts" class='awrnc'>19.84</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,220.60</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1085.94ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1086.03ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1076.37ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1095.68ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>13.65ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Streams AQ: waiting for time management or cleanup tasks</td><td align="right" headers="Event Waits" class='awrclb'>0</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,220.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>lreg timer</td><td align="right" headers="Event Waits" class='awrnclb'>406</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,219.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3002.64ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.33</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3002.64ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3002.62ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3002.65ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>19.58us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>dispatcher timer</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.12</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.01 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>281.00us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>AQPC idle</td><td align="right" headers="Event Waits" class='awrnclb'>40</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>30.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>201.24us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Data Guard: Gap Manager</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>89.94us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>smon timer</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>300.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>300.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>300.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>300.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>202.59us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Data Guard: Timer</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>600.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.32</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>13.44us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>LGWR worker group idle</td><td align="right" headers="Event Waits" class='awrnclb'>13,784</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>937.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>67.98ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.25</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>57.52ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>40.18ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>74.86ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>24.52ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Parse Reply</td><td align="right" headers="Event Waits" class='awrclb'>344</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>6.25</td><td align="right" headers="WaitTime AvgWait" class='awrc'>18.18ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>21.65ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>17.99ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>25.31ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.17ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Execute Reply</td><td align="right" headers="Event Waits" class='awrnclb'>735</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.77</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.05ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.54ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>936.29us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.27ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq Credit: send blkd</td><td align="right" headers="Event Waits" class='awrclb'>296</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.21</td><td align="right" headers="WaitTime AvgWait" class='awrc'>695.84us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>695.84us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>695.84us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>695.84us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>RMA: IPC0 completion sync</td><td align="right" headers="Event Waits" class='awrnclb'>1,335</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>23.55us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>23.55us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>21.96us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>25.14us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.25us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrclb'>36</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>718.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>718.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>677.39us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>758.61us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>57.43us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>heartbeat monitor sleep</td><td align="right" headers="Event Waits" class='awrnclb'>64</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.89us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.89us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.89us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.89us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12055"></a>
<h3 class="awr">Wait Event Histogram (Global)</h3>
<ul>
<li class="awr"> When % of Total Waits is  0.0 the count is displayed in parenthesis</li>
</ul>
<table border="0" class="tdiff" summary="This table displays wait event histogram information"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 22" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us"> &lt;8us</th><th class="awrbg" scope="col" id="&lt;16us"> &lt;16us</th><th class="awrbg" scope="col" id="&lt;32us"> &lt;32us</th><th class="awrbg" scope="col" id="&lt;64us"> &lt;64us</th><th class="awrbg" scope="col" id="&lt;128us"> &lt;128us</th><th class="awrbg" scope="col" id="&lt;256us"> &lt;256us</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms"> &lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms"> &lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms"> &lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms"> &lt;64ms</th><th class="awrbg" scope="col" id="&lt;128ms"> &lt;128ms</th><th class="awrbg" scope="col" id="&lt;256ms"> &lt;256ms</th><th class="awrbg" scope="col" id="&lt;512ms"> &lt;512ms</th><th class="awrbg" scope="col" id="&lt;1s"> &lt;1s</th><th class="awrbg" scope="col" id="&gt;=1s"> &gt;=1s</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>12.2K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>82.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>11.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>63.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>64.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>14.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(12)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>6802</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>38.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>14.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AWR Flush</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>13.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>74.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS initialization</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: action</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data query</td><td align="right" class='awrnc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>27.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>36.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data update</td><td align="right" class='awrc'>40</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>62.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>32.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: query</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>58.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>560</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>52.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>40.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>342</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>49.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>1699</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>25.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>17.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>27.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>1155</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>15.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>40.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>16.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>80.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>91.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>3666</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>20.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>949</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>14.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>40.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>34.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>1923</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>55.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>11.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>3706</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>19.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>21.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>23.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>3203</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>15.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>19.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>458</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>19.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>26.0</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>9.2</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>18.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.0(8)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>17.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>13.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>12.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>22.8</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>229</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>22.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>21.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>12.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>9.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>6885</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>31.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>10.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>1049</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>27.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>42.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>344</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>28.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>26.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>35.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrnc'>344</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>66.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>688</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>12.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>17.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>16.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>31.7K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.0(7)</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>14.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>70.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.0(13)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX qref latch</td><td align="right" class='awrc'>159</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>56.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>39.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parameter File I/O</td><td align="right" class='awrnc'>56</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>32.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA: allocation forcing component growth</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net break/reset to client</td><td align="right" class='awrnc'>122</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>41.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>39.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>232</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>85.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>10.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>108</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>39.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>40</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>buffer exterminate</td><td align="right" class='awrc'>926</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>99.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>596</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>24.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>28.5</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>17.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>7144</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>14.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>35.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>28.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>9.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cursor: pin S wait on X</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>77.8</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>58.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>91.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.0(10)</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel read</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>57.8K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>7.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>12.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>25.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(5)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file scattered read</td><td align="right" class='awrnc'>42</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>38.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>11.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.7M</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.0(39)</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>39.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.0(18)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path read</td><td align="right" class='awrnc'>73</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>13.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>24.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>27.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path write temp</td><td align="right" class='awrnc'>53</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>28.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>22.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>20.8</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>17.0</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: AF - task serialization</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>129</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>55.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>24.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CO - master slave det</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>22</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>40.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>45.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>13.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>22</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>36.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>45.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: PE - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: PG - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>396</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: PW - flush prewarm buffers</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: RA - RT ADDM flood control</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>257</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>14.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>41.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>22.6</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: SM -  contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TA - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TK - Auto Task Serialization</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TO - contention</td><td align="right" class='awrc'>43</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>72.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>18.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TT - contention</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>32</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>56.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>34.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: WT - contention</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>free buffer waits</td><td align="right" class='awrc'>615.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.0(164)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.0(134)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>89.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(132)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy acquire</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>22</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>13.6</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>45.5</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>1783</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>41.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>45.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>85</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>28.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>25.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>16.5</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block lost</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr disk read</td><td align="right" class='awrnc'>32</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>59.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>4089</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>48.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>36.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>285</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>49.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>28.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant congested</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multi block grant</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>44.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>44.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>102</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>57.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>13.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>21.1K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>13.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>60.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.0(10)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>15.6K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>37.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>48.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>87</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>28.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block lost</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>30.0</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>20.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>1.1M</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>45.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>39.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.0(436)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(7)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>0.0(1)</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>59.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.0(6)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.0(15)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>55.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>28.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(8)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.0(12)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>0.0(2)</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>1566</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>17.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>50.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>25.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>53.2K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.0(11)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.0(18)</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>33.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>52.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(11)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current multi block request</td><td align="right" class='awrnc'>31</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>9.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>51.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>35.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current retry</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current split</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc index operation</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc remaster</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs drm freeze in enter server mode</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>6784</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>15.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>17.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remastering wait for read latch</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges enter server mode</td><td align="right" class='awrnc'>234</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>69.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>24.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges inquiry response</td><td align="right" class='awrc'>85</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>21.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>65.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges ipc enter server mode</td><td align="right" class='awrnc'>201</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>96.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges lms sync during dynamic remastering and reconfig</td><td align="right" class='awrc'>65</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>18.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>24.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>27.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges message buffer allocation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>85.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges2 LMON to wake up LMD - mrcvr</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>296</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>15.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>29.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kksfbc child completion</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>2482</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>83.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>1402</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>42.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA shared context root latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>30.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>480</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>19.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>23.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: call allocation</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>34</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>14.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>29.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>52</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>13.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>30.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>28.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>121</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>13.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>16.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>21.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>14.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>14.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>394</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>11.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>21.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>18.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>44.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: kjci process context latch</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>73</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>13.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>15.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>31.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>23.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>224</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>13.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>23.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>21.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo writing</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: shared pool</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>38.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: undo global data</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>libcache interrupt action by LCK</td><td align="right" class='awrc'>1943</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>90.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache load lock</td><td align="right" class='awrnc'>38</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache lock</td><td align="right" class='awrc'>220</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>61.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache pin</td><td align="right" class='awrnc'>226</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>31.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>54.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache: mutex X</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>62.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lock deadlock retry</td><td align="right" class='awrnc'>248</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>68.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lock escalate retry</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>37.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>23.9</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>1096</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>21.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>24.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file sync</td><td align="right" class='awrnc'>34</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>26.5</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>17.6</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service call wait</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>oracle thread bootstrap</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>85.7</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>os thread creation</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>85.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>read by other session</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>270</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>25.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>26.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>0.4</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>59</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>42.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>49.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>row cache mutex</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>undo_retention publish retry</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>write complete waits</td><td align="right" class='awrc'>44</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>31.8</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>25.0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="639"></a>
<h2 class="awr">
Global Activity Load Profile
</h2>
<ul>
<li class="awr"><a class="awr" href="#12016">System Statistics</a></li>
<li class="awr"><a class="awr" href="#12017">System Statistics - Per Second</a></li>
<li class="awr"><a class="awr" href="#12018">System Statistics - Per Transaction</a></li>
<li class="awr"><a class="awr" href="#12030">SysStat and Global Messaging  - RAC</a></li>
<li class="awr"><a class="awr" href="#12031">SysStat and Global Messaging (per Sec)- RAC</a></li>
<li class="awr"><a class="awr" href="#12032">SysStat and Global Messaging (per Tx)- RAC</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12016"></a>
<h3 class="awr">System Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Redo Size (k)</th><th class="awrbg" scope="col">Block Changes</th><th class="awrbg" scope="col">User Calls</th><th class="awrbg" scope="col">Execs</th><th class="awrbg" scope="col">Parses</th><th class="awrbg" scope="col">Logons</th><th class="awrbg" scope="col">Txns</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>2,150,521</td><td align="right" class='awrc'>1,577,797</td><td align="right" class='awrc'>1,704,389</td><td align="right" class='awrc'>1,344,202</td><td align="right" class='awrc'>3,505,149</td><td align="right" class='awrc'>968</td><td align="right" class='awrc'>65,537</td><td align="right" class='awrc'>4,068</td><td align="right" class='awrc'>177</td><td align="right" class='awrc'>53,469</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>1,534,097</td><td align="right" class='awrnc'>1,094,434</td><td align="right" class='awrnc'>750,663</td><td align="right" class='awrnc'>928,021</td><td align="right" class='awrnc'>2,413,735</td><td align="right" class='awrnc'>1,096</td><td align="right" class='awrnc'>54,484</td><td align="right" class='awrnc'>5,002</td><td align="right" class='awrnc'>175</td><td align="right" class='awrnc'>36,748</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>3,684,618</td><td align="right" class='awrct'>2,672,231</td><td align="right" class='awrct'>2,455,052</td><td align="right" class='awrct'>2,272,223</td><td align="right" class='awrct'>5,918,884</td><td align="right" class='awrct'>2,064</td><td align="right" class='awrct'>120,021</td><td align="right" class='awrct'>9,070</td><td align="right" class='awrct'>352</td><td align="right" class='awrct'>90,217</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>1,842,309</td><td align="right" class='awrnc'>1,336,116</td><td align="right" class='awrnc'>1,227,526</td><td align="right" class='awrnc'>1,136,112</td><td align="right" class='awrnc'>2,959,442</td><td align="right" class='awrnc'>1,032</td><td align="right" class='awrnc'>60,011</td><td align="right" class='awrnc'>4,535</td><td align="right" class='awrnc'>176</td><td align="right" class='awrnc'>45,109</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>435,878</td><td align="right" class='awrc'>341,789</td><td align="right" class='awrc'>674,386</td><td align="right" class='awrc'>294,284</td><td align="right" class='awrc'>771,746</td><td align="right" class='awrc'>91</td><td align="right" class='awrc'>7,816</td><td align="right" class='awrc'>660</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11,824</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12017"></a>
<h3 class="awr">System Statistics - Per Second</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Second"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/s</th><th class="awrbg" scope="col">Physical Reads/s</th><th class="awrbg" scope="col">Physical Writes/s</th><th class="awrbg" scope="col">Redo Size (k)/s</th><th class="awrbg" scope="col">Block Changes/s</th><th class="awrbg" scope="col">User Calls/s</th><th class="awrbg" scope="col">Execs/s</th><th class="awrbg" scope="col">Parses/s</th><th class="awrbg" scope="col">Logons/s</th><th class="awrbg" scope="col">Txns/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>3,516.44</td><td align="right" class='awrc'>2,579.95</td><td align="right" class='awrc'>2,786.94</td><td align="right" class='awrc'>2,197.98</td><td align="right" class='awrc'>5,731.47</td><td align="right" class='awrc'>1.58</td><td align="right" class='awrc'>107.16</td><td align="right" class='awrc'>6.65</td><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>87.43</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>2,510.18</td><td align="right" class='awrnc'>1,790.78</td><td align="right" class='awrnc'>1,228.28</td><td align="right" class='awrnc'>1,518.48</td><td align="right" class='awrnc'>3,949.50</td><td align="right" class='awrnc'>1.79</td><td align="right" class='awrnc'>89.15</td><td align="right" class='awrnc'>8.18</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>60.13</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>6,026.62</td><td align="right" class='awrct'>4,370.72</td><td align="right" class='awrct'>4,015.22</td><td align="right" class='awrct'>3,716.47</td><td align="right" class='awrct'>9,680.97</td><td align="right" class='awrct'>3.38</td><td align="right" class='awrct'>196.31</td><td align="right" class='awrct'>14.84</td><td align="right" class='awrct'>0.58</td><td align="right" class='awrct'>147.56</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>3,013.31</td><td align="right" class='awrnc'>2,185.36</td><td align="right" class='awrnc'>2,007.61</td><td align="right" class='awrnc'>1,858.23</td><td align="right" class='awrnc'>4,840.48</td><td align="right" class='awrnc'>1.69</td><td align="right" class='awrnc'>98.16</td><td align="right" class='awrnc'>7.42</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>73.78</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>711.53</td><td align="right" class='awrc'>558.03</td><td align="right" class='awrc'>1,102.14</td><td align="right" class='awrc'>480.48</td><td align="right" class='awrc'>1,260.05</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>12.74</td><td align="right" class='awrc'>1.08</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>19.30</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12018"></a>
<h3 class="awr">System Statistics - Per Transaction</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Transaction"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/tx</th><th class="awrbg" scope="col">Physical Reads/tx</th><th class="awrbg" scope="col">Physical Writes/tx</th><th class="awrbg" scope="col">Redo Size (k)/tx</th><th class="awrbg" scope="col">Block Changes/tx</th><th class="awrbg" scope="col">User Calls/tx</th><th class="awrbg" scope="col">Execs/tx</th><th class="awrbg" scope="col">Parses/tx</th><th class="awrbg" scope="col">Logons/tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>40.22</td><td align="right" class='awrc'>29.51</td><td align="right" class='awrc'>31.88</td><td align="right" class='awrc'>25.14</td><td align="right" class='awrc'>65.55</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>1.23</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>41.75</td><td align="right" class='awrnc'>29.78</td><td align="right" class='awrnc'>20.43</td><td align="right" class='awrnc'>25.25</td><td align="right" class='awrnc'>65.68</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>1.48</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>40.98</td><td align="right" class='awrct'>29.65</td><td align="right" class='awrct'>26.15</td><td align="right" class='awrct'>25.20</td><td align="right" class='awrct'>65.62</td><td align="right" class='awrct'>0.02</td><td align="right" class='awrct'>1.35</td><td align="right" class='awrct'>0.11</td><td align="right" class='awrct'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12030"></a>
<h3 class="awr">SysStat and Global Messaging  - RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging  - RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceived">Blocks Received</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)">CPU (seconds)</th>
<th class="awrbg" colspan=" 6" id="Messages">Messages</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost">Lost</th><th class="awrbg" scope="col" id="Failure">Failure</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceived GCCurrent" class='awrclb'>6,176</td><td align="right" headers="BlocksReceived GCCR" class='awrc'>1,476</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>31,250</td><td align="right" headers="BlocksServed GCCR" class='awrc'>474</td><td align="right" headers="CPU(seconds) GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrc'>0</td><td align="right" headers="Messages GCSReceived" class='awrclb'>2,572,141</td><td align="right" headers="Messages GESReceived" class='awrc'>4,037</td><td align="right" headers="Messages GCSSent" class='awrc'>2,306,945</td><td align="right" headers="Messages GESSent" class='awrc'>29,764</td><td align="right" headers="Messages SentDirect" class='awrc'>509,447</td><td align="right" headers="Messages SentIndir" class='awrc'>1,063,483</td><td align="right" headers="GCBlks Lost" class='awrclb'>11</td><td align="right" headers="GCCR Failure" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceived GCCurrent" class='awrnclb'>31,218</td><td align="right" headers="BlocksReceived GCCR" class='awrnc'>463</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>6,054</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>1,482</td><td align="right" headers="CPU(seconds) GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrnc'>0</td><td align="right" headers="Messages GCSReceived" class='awrnclb'>2,326,353</td><td align="right" headers="Messages GESReceived" class='awrnc'>3,088</td><td align="right" headers="Messages GCSSent" class='awrnc'>2,562,084</td><td align="right" headers="Messages GESSent" class='awrnc'>11,048</td><td align="right" headers="Messages SentDirect" class='awrnc'>794,428</td><td align="right" headers="Messages SentIndir" class='awrnc'>1,279,355</td><td align="right" headers="GCBlks Lost" class='awrnclb'>5</td><td align="right" headers="GCCR Failure" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>37,394</td><td align="right" class='awrct'>1,939</td><td align="right" class='awrclbt'>37,304</td><td align="right" class='awrct'>1,956</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>4,898,494</td><td align="right" class='awrct'>7,125</td><td align="right" class='awrct'>4,869,029</td><td align="right" class='awrct'>40,812</td><td align="right" class='awrct'>1,303,875</td><td align="right" class='awrct'>2,342,838</td><td align="right" class='awrclbt'>16</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>18,697</td><td align="right" class='awrnc'>970</td><td align="right" class='awrnclb'>18,652</td><td align="right" class='awrnc'>978</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>2,449,247</td><td align="right" class='awrnc'>3,563</td><td align="right" class='awrnc'>2,434,515</td><td align="right" class='awrnc'>20,406</td><td align="right" class='awrnc'>651,938</td><td align="right" class='awrnc'>1,171,419</td><td align="right" class='awrnclb'>8</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>17,707</td><td align="right" class='awrc'>716</td><td align="right" class='awrclb'>17,816</td><td align="right" class='awrc'>713</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>173,798</td><td align="right" class='awrc'>671</td><td align="right" class='awrc'>180,411</td><td align="right" class='awrc'>13,234</td><td align="right" class='awrc'>201,512</td><td align="right" class='awrc'>152,645</td><td align="right" class='awrclb'>4</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12031"></a>
<h3 class="awr">SysStat and Global Messaging (per Sec)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Sec)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedPerSecond">Blocks Received Per Second</th>
<th class="awrbg" colspan=" 2" id="BlocksServedperSecond">Blocks Served per Second</th>
<th class="awrbg" colspan=" 2" id="CPUsecondsperSecond">CPU seconds per Second</th>
<th class="awrbg" colspan=" 6" id="MessagesPerSecond">Messages Per Second</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent</th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/s">Lost/s</th><th class="awrbg" scope="col" id="Fail/s">Fail/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrclb'>10.10</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrc'>2.41</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrclb'>51.10</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrc'>0.78</td><td align="right" headers="CPUsecondsperSecond GC" class='awrclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrclb'>4,205.85</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrc'>6.60</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrc'>3,772.22</td><td align="right" headers="MessagesPerSecond GESSent" class='awrc'>48.67</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrc'>833.03</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrc'>1,738.96</td><td align="right" headers="GCBlks Lost/s" class='awrclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrnclb'>51.08</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrnc'>0.76</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrnclb'>9.91</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrnc'>2.42</td><td align="right" headers="CPUsecondsperSecond GC" class='awrnclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrnclb'>3,806.52</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrnc'>5.05</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrnc'>4,192.23</td><td align="right" headers="MessagesPerSecond GESSent" class='awrnc'>18.08</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrnc'>1,299.89</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrnc'>2,093.36</td><td align="right" headers="GCBlks Lost/s" class='awrnclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>61.18</td><td align="right" class='awrct'>3.17</td><td align="right" class='awrclbt'>61.00</td><td align="right" class='awrct'>3.20</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>8,012.37</td><td align="right" class='awrct'>11.65</td><td align="right" class='awrct'>7,964.45</td><td align="right" class='awrct'>66.75</td><td align="right" class='awrct'>2,132.92</td><td align="right" class='awrct'>3,832.32</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>30.59</td><td align="right" class='awrnc'>1.59</td><td align="right" class='awrnclb'>30.50</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnclb'>4,006.19</td><td align="right" class='awrnc'>5.83</td><td align="right" class='awrnc'>3,982.23</td><td align="right" class='awrnc'>33.37</td><td align="right" class='awrnc'>1,066.46</td><td align="right" class='awrnc'>1,916.16</td><td align="right" class='awrnclb'>0</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>28.98</td><td align="right" class='awrc'>1.17</td><td align="right" class='awrclb'>29.13</td><td align="right" class='awrc'>1.17</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrclb'>282.37</td><td align="right" class='awrc'>1.09</td><td align="right" class='awrc'>297.00</td><td align="right" class='awrc'>21.63</td><td align="right" class='awrc'>330.12</td><td align="right" class='awrc'>250.60</td><td align="right" class='awrclb'>0</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12032"></a>
<h3 class="awr">SysStat and Global Messaging (per Tx)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Tx)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedperTx">Blocks Received per Tx</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)perTx">CPU (seconds) per Tx</th>
<th class="awrbg" colspan=" 6" id="MessagesperTransaction">Messages per Transaction</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/Tx">Lost/Tx</th><th class="awrbg" scope="col" id="Fail/Tx">Fail/Tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrclb'>0.12</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrc'>0.03</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>0.58</td><td align="right" headers="BlocksServed GCCR" class='awrc'>0.01</td><td align="right" headers="CPU(seconds)perTx GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrclb'>48.11</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrc'>0.08</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrc'>43.15</td><td align="right" headers="MessagesperTransaction GESSent" class='awrc'>0.56</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrc'>9.53</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrc'>19.89</td><td align="right" headers="GCBlks Lost/Tx" class='awrclb'>0.00</td><td align="right" headers="GCCR Fail/Tx" class='awrcbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrnclb'>0.85</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrnc'>0.01</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>0.16</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>0.04</td><td align="right" headers="CPU(seconds)perTx GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrnclb'>63.31</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrnc'>0.08</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrnc'>69.72</td><td align="right" headers="MessagesperTransaction GESSent" class='awrnc'>0.30</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrnc'>21.62</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrnc'>34.81</td><td align="right" headers="GCBlks Lost/Tx" class='awrnclb'>0.00</td><td align="right" headers="GCCR Fail/Tx" class='awrncbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>0.48</td><td align="right" class='awrct'>0.02</td><td align="right" class='awrclbt'>0.37</td><td align="right" class='awrct'>0.02</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>55.71</td><td align="right" class='awrct'>0.08</td><td align="right" class='awrct'>56.43</td><td align="right" class='awrct'>0.43</td><td align="right" class='awrct'>15.57</td><td align="right" class='awrct'>27.35</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrcbbt'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="605"></a>
<h2 class="awr">
Global Cache and Enqueue Statistics Summary
</h2>
<ul>
<li class="awr"><a class="awr" href="#12019">Global Cache Efficiency Percentages</a></li>
<li class="awr"><a class="awr" href="#12020">Global Latency Characteristics</a></li>
<li class="awr"><a class="awr" href="#12021">Global Messaging Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12019"></a>
<h3 class="awr">Global Cache Efficiency Percentages</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Cache Efficiency Percentages"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="BufferAccess">Buffer Access</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Local%">Local %</th><th class="awrbg" scope="col" id="Remote%">Remote %</th><th class="awrbg" scope="col" id="Disk%">Disk %</th><th class="awrbg" scope="col">Locality %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BufferAccess Local%" class='awrclb'>26.27</td><td align="right" headers="BufferAccess Remote%" class='awrc'>0.36</td><td align="right" headers="BufferAccess Disk%" class='awrcrb'>73.37</td><td align="right" class='awrc'>69.88</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BufferAccess Local%" class='awrnclb'>26.56</td><td align="right" headers="BufferAccess Remote%" class='awrnc'>2.07</td><td align="right" headers="BufferAccess Disk%" class='awrncrb'>71.38</td><td align="right" class='awrnc'>31.63</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12020"></a>
<h3 class="awr">Global Latency Characteristics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Latency Characteristics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CUBlocks">CU Blocks</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">GE Get Time (us)</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Build|Time(us)">Build Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CRSrvd%">Log Flush CR Srvd %</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Pin|Time(us)">Pin Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CUSrvd%">Log Flush CU Srvd %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>43</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrclb'>1904</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrc'>25</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrc'>87778</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrc'>1.90</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrclb'>858</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrc'>3333</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrc'>180741</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrcrb'>0.09</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>165</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrnclb'>2851</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrnc'>0</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrnc'>25135</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrnc'>4.99</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrnclb'>1111</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrnc'>0</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrnc'>22121</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrncrb'>0.55</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12021"></a>
<h3 class="awr">Global Messaging Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="QueueTime(us)">Queue Time (us)</th>
<th class="awrbg" colspan=" 2" id="ProcessTime(us)">Process Time (us)</th>
<th class="awrbg" colspan=" 3" id="%MessagesSent">% Messages Sent</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Sent">Sent</th><th class="awrbg" scope="col" id="onksxp">on ksxp</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="GCSmsgs">GCS msgs</th><th class="awrbg" scope="col" id="GESmsgs">GES msgs</th><th class="awrbg" scope="col" id="Direct">Direct</th><th class="awrbg" scope="col" id="Indirect">Indirect</th><th class="awrbg" scope="col" id="FlowCtrl">Flow Ctrl</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="QueueTime(us) Sent" class='awrclb'>1738</td><td align="right" headers="QueueTime(us) onksxp" class='awrc'>760</td><td align="right" headers="QueueTime(us) Received" class='awrc'>80</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrclb'>37</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrc'>26</td><td align="right" headers="%MessagesSent Direct" class='awrclb'>32.38</td><td align="right" headers="%MessagesSent Indirect" class='awrc'>67.59</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrcrb'>0.03</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="QueueTime(us) Sent" class='awrnclb'>4060</td><td align="right" headers="QueueTime(us) onksxp" class='awrnc'>4672</td><td align="right" headers="QueueTime(us) Received" class='awrnc'>73</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrnclb'>34</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrnc'>27</td><td align="right" headers="%MessagesSent Direct" class='awrnclb'>38.04</td><td align="right" headers="%MessagesSent Indirect" class='awrnc'>61.26</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrncrb'>0.70</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12033"></a>
<h3 class="awr">Global CR Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global CR Server Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 5" id="BlockRequests">Block Requests</th>
<th class="awrbg" colspan=" 5" id="Results">Results</th>
<th class="awrbg" colspan=" 1" id="Fairness">Fairness</th>
<th class="awrbg" colspan=" 1" id="Light">Light</th>
<th class="awrbg" colspan=" 3" id="Total">Total</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="CR">CR</th><th class="awrbg" scope="col" id="CU">CU</th><th class="awrbg" scope="col" id="Data">Data</th><th class="awrbg" scope="col" id="Undo">Undo</th><th class="awrbg" scope="col" id="TX">TX</th><th class="awrbg" scope="col" id="Current">Current</th><th class="awrbg" scope="col" id="Private">Private</th><th class="awrbg" scope="col" id="Zero">Zero</th><th class="awrbg" scope="col" id="DskRd">Dsk Rd</th><th class="awrbg" scope="col" id="Fail">Fail</th><th class="awrbg" scope="col" id="DownConv">Down Conv</th><th class="awrbg" scope="col" id="Works">Works</th><th class="awrbg" scope="col" id="Flushes">Flushes</th><th class="awrbg" scope="col" id="Builds">Builds</th><th class="awrbg" scope="col" id="Errors">Errors</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlockRequests CR" class='awrclb'>383</td><td align="right" headers="BlockRequests CU" class='awrc'>70</td><td align="right" headers="BlockRequests Data" class='awrc'>383</td><td align="right" headers="BlockRequests Undo" class='awrc'>0</td><td align="right" headers="BlockRequests TX" class='awrc'>17</td><td align="right" headers="Results Current" class='awrclb'>452</td><td align="right" headers="Results Private" class='awrc'>0</td><td align="right" headers="Results Zero" class='awrc'>1</td><td align="right" headers="Results DskRd" class='awrc'>0</td><td align="right" headers="Results Fail" class='awrc'>0</td><td align="right" headers="Fairness DownConv" class='awrclb'>245</td><td align="right" headers="Light Works" class='awrclb'>0</td><td align="right" headers="Total Flushes" class='awrclb'>9</td><td align="right" headers="Total Builds" class='awrc'>383</td><td align="right" headers="Total Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlockRequests CR" class='awrnclb'>126</td><td align="right" headers="BlockRequests CU" class='awrnc'>1,388</td><td align="right" headers="BlockRequests Data" class='awrnc'>126</td><td align="right" headers="BlockRequests Undo" class='awrnc'>0</td><td align="right" headers="BlockRequests TX" class='awrnc'>1,341</td><td align="right" headers="Results Current" class='awrnclb'>1,482</td><td align="right" headers="Results Private" class='awrnc'>0</td><td align="right" headers="Results Zero" class='awrnc'>0</td><td align="right" headers="Results DskRd" class='awrnc'>32</td><td align="right" headers="Results Fail" class='awrnc'>0</td><td align="right" headers="Fairness DownConv" class='awrnclb'>61</td><td align="right" headers="Light Works" class='awrnclb'>4</td><td align="right" headers="Total Flushes" class='awrnclb'>74</td><td align="right" headers="Total Builds" class='awrnc'>126</td><td align="right" headers="Total Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>509</td><td align="right" class='awrct'>1,458</td><td align="right" class='awrct'>509</td><td align="right" class='awrct'>0</td><td align="right" class='awrct'>1,358</td><td align="right" class='awrclbt'>1,934</td><td align="right" class='awrct'>0</td><td align="right" class='awrct'>1</td><td align="right" class='awrct'>32</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>306</td><td align="right" class='awrclbt'>4</td><td align="right" class='awrclbt'>83</td><td align="right" class='awrct'>509</td><td align="right" class='awrcrbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>255</td><td align="right" class='awrnc'>729</td><td align="right" class='awrnc'>255</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>679</td><td align="right" class='awrnclb'>967</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>153</td><td align="right" class='awrnclb'>2</td><td align="right" class='awrnclb'>42</td><td align="right" class='awrnc'>255</td><td align="right" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>182</td><td align="right" class='awrc'>932</td><td align="right" class='awrc'>182</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>936</td><td align="right" class='awrclb'>728</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>130</td><td align="right" class='awrclb'>3</td><td align="right" class='awrclb'>46</td><td align="right" class='awrc'>182</td><td align="right" class='awrcrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12034"></a>
<h3 class="awr">Global Current Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Current Server Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Pins</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th><th class="awrbg" scope="col">Flushes</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>22.22</td><td align="right" class='awrc'>77.78</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>50.00</td><td align="right" class='awrnc'>50.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>57.58</td><td align="right" class='awrnc'>39.39</td><td align="right" class='awrnc'>3.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>3</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrct'>60</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="607"></a>
<h2 class="awr">
Global Cache Transfer Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12035">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#12036">Global Cache Transfer (Immediate)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12035"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
<li class="awr"> Congested  (Cngst) - Block Transfer impacted by Remote System Load </li>
<li class="awr"> All - average time of All blocks (Immed,Busy,Cngst) in us </li>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer Statistics. . Immediate (Immed) - Block Transfer NOT impacted by Remote Processing Delays. Busy (Busy) - Block Transfer impacted by Remote Contention. Congested (Cngst) - Block Transfer impacted by Remote System Load. All - average time of All blocks (Immed,Busy,Cngst) in us. Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CurrentBlocks">Current Blocks</th>
<th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>data block</td><td align="right" headers="CRBlocks Received" class='awrclb'>124</td><td align="right" headers="CRBlocks %Immed" class='awrc'>92.74</td><td align="right" headers="CRBlocks %Busy" class='awrc'>7.26</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>6,027</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>15.68</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>84.29</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.03</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>2306</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>862</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>20763</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>825</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>778</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>833</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>3937</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrnclb'>1,337</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>95.21</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>4.79</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>2</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>50.00</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>50.00</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>1889</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>627</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>26976</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>542</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>669</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>415</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="CRBlocks Received" class='awrclb'>15</td><td align="right" headers="CRBlocks %Immed" class='awrc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>37</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>27.03</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>72.97</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>896</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>896</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>2497</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>729</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>3152</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclbt'>2</td><td align="right" headers="Instance# Src" class='awrnct'>1</td><td headers="Block Class" class='awrnclbt'>data block</td><td align="right" headers="CRBlocks Received" class='awrnclbt'>389</td><td align="right" headers="CRBlocks %Immed" class='awrnct'>98.20</td><td align="right" headers="CRBlocks %Busy" class='awrnct'>1.03</td><td align="right" headers="CRBlocks %Cngst" class='awrnct'>0.77</td><td align="right" headers="CurrentBlocks Received" class='awrnclbt'>30,691</td><td align="right" headers="CurrentBlocks %Immed" class='awrnct'>65.67</td><td align="right" headers="CurrentBlocks %Busy" class='awrnct'>34.04</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnct'>0.29</td><td align="right" headers="CRAvgTime(us) All" class='awrnclbt'>1694</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnct'>806</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnct'>83373</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnct'>5969</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclbt'>1085</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnct'>1043</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnct'>1056</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrbt'>14189</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="CRBlocks Received" class='awrclb'>64</td><td align="right" headers="CRBlocks %Immed" class='awrc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>551</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>80.76</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>19.24</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>495</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>495</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>1139</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>628</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>3281</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrnclb'>18</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>55.56</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>44.44</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>5</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>40.00</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>60.00</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>36409</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>441</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>81369</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>1159</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>1764</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>756</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12036"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer (Immediate). . Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 2" id="LostBlocks">Lost Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCRBlocks">Immediate CR Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCurrentBlocks">Immediate Current Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmedCRAvgTime(us)">Immed CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="ImmedCurrentAvgTime(us)">Immed Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Count">Count</th><th class="awrbg" scope="col" id="Time(us)">Time(us)</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>1,273</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>1</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>627</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>627</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>669</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>669</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>data block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>115</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>945</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>862</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>862</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>778</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>778</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>15</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>10</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>896</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>896</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>729</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>729</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclbt'>2</td><td align="right" headers="Instance# Src" class='awrct'>1</td><td headers="Block Class" class='awrclbt'>data block</td><td align="right" headers="LostBlocks Count" class='awrclbt'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrct'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclbt'>382</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclbt'>20,155</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclbt'>806</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrct'>806</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrct'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclbt'>1043</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrct'>1043</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>others</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>64</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>445</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>495</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>495</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>628</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>628</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>10</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>2</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>441</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>441</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>1764</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>1764</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="608"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12040">Cluster Interconnect</a></li>
<li class="awr"><a class="awr" href="#12045">Ping Statistics</a></li>
<li class="awr"><a class="awr" href="#12041">Interconnect Client Statistics</a></li>
<li class="awr"><a class="awr" href="#12042">Interconnect Client Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12043">Interconnect Device Statistics</a></li>
<li class="awr"><a class="awr" href="#12044">Interconnect Device Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12078">Dynamic Remastering Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12040"></a>
<h3 class="awr">Cluster Interconnect</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 3" id="End(ifdifferentfromBegin)">End (if different from Begin)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.22.248</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrnclb'>169.254.31.173</td><td headers="Begin Pub" class='awrnc'>N</td><td headers="Begin Source" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrnclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12045"></a>
<h3 class="awr">Ping Statistics</h3>
<ul>
<li class="awr"> Latency of the roundtrip of a message from  Src Instance to the Target instances</li>
</ul>
<table border="0" class="tdiff" summary="Ping Statistics. . Latency of the roundtrip of a message from Src Instance to the Target instances"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 3" id="500bytes">500 bytes</th>
<th class="awrbg" colspan=" 3" id="8Kbytes">8 Kbytes</th>
</tr><tr>
<th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Target">Target</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th></tr>
<tr><td align="right" headers="Instance# Src" class='awrclb'>1</td><td align="right" headers="Instance# Target" class='awrc'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclb'>56</td><td align="right" headers="500bytes Avg|Time(us)" class='awrc'>673</td><td align="right" headers="500bytes Std|Dev" class='awrc'>0.32</td><td align="right" headers="8Kbytes Ping|Count" class='awrclb'>61</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrc'>666</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrb'>0.32</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>56</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>833</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.33</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>61</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>884</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.40</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrclbt'>2</td><td align="right" headers="Instance# Target" class='awrct'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclbt'>56</td><td align="right" headers="500bytes Avg|Time(us)" class='awrct'>956</td><td align="right" headers="500bytes Std|Dev" class='awrct'>0.55</td><td align="right" headers="8Kbytes Ping|Count" class='awrclbt'>61</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrct'>972</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrbt'>0.54</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>56</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>496</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.52</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>61</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>478</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12041"></a>
<h3 class="awr">Interconnect Client Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB)">Sent (MB)</th>
<th class="awrbg" colspan=" 6" id="Received(MB)">Received (MB)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB) Total" class='awrclb'>729.29</td><td align="right" headers="Sent(MB) Cache" class='awrc'>277.82</td><td align="right" headers="Sent(MB) IPQ" class='awrc'>6.26</td><td align="right" headers="Sent(MB) DLM" class='awrc'>427.67</td><td align="right" headers="Sent(MB) PNG" class='awrc'>1.03</td><td align="right" headers="Sent(MB) Misc" class='awrc'>16.52</td><td align="right" headers="Received(MB) Total" class='awrclb'>661.57</td><td align="right" headers="Received(MB) Cache" class='awrc'>80.98</td><td align="right" headers="Received(MB) IPQ" class='awrc'>6.78</td><td align="right" headers="Received(MB) DLM" class='awrc'>560.97</td><td align="right" headers="Received(MB) PNG" class='awrc'>1.03</td><td align="right" headers="Received(MB) Misc" class='awrcrb'>11.81</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB) Total" class='awrnclb'>657.02</td><td align="right" headers="Sent(MB) Cache" class='awrnc'>78.74</td><td align="right" headers="Sent(MB) IPQ" class='awrnc'>6.78</td><td align="right" headers="Sent(MB) DLM" class='awrnc'>558.88</td><td align="right" headers="Sent(MB) PNG" class='awrnc'>1.03</td><td align="right" headers="Sent(MB) Misc" class='awrnc'>11.60</td><td align="right" headers="Received(MB) Total" class='awrnclb'>725.39</td><td align="right" headers="Received(MB) Cache" class='awrnc'>277.74</td><td align="right" headers="Received(MB) IPQ" class='awrnc'>6.26</td><td align="right" headers="Received(MB) DLM" class='awrnc'>424.16</td><td align="right" headers="Received(MB) PNG" class='awrnc'>1.03</td><td align="right" headers="Received(MB) Misc" class='awrncrb'>16.21</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>1,386.31</td><td align="right" class='awrct'>356.56</td><td align="right" class='awrct'>13.04</td><td align="right" class='awrct'>986.55</td><td align="right" class='awrct'>2.05</td><td align="right" class='awrct'>28.11</td><td align="right" class='awrclbt'>1,386.96</td><td align="right" class='awrct'>358.72</td><td align="right" class='awrct'>13.04</td><td align="right" class='awrct'>985.13</td><td align="right" class='awrct'>2.05</td><td align="right" class='awrcrbt'>28.02</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>693.15</td><td align="right" class='awrnc'>178.28</td><td align="right" class='awrnc'>6.52</td><td align="right" class='awrnc'>493.27</td><td align="right" class='awrnc'>1.03</td><td align="right" class='awrnc'>14.06</td><td align="right" class='awrnclb'>693.48</td><td align="right" class='awrnc'>179.36</td><td align="right" class='awrnc'>6.52</td><td align="right" class='awrnc'>492.56</td><td align="right" class='awrnc'>1.03</td><td align="right" class='awrncrb'>14.01</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>51.10</td><td align="right" class='awrc'>140.77</td><td align="right" class='awrc'>0.37</td><td align="right" class='awrc'>92.78</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.48</td><td align="right" class='awrclb'>45.13</td><td align="right" class='awrc'>139.13</td><td align="right" class='awrc'>0.37</td><td align="right" class='awrc'>96.74</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>3.11</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12042"></a>
<h3 class="awr">Interconnect Client Statistics (per Second)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics (per Second)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB/s)">Sent (MB/s)</th>
<th class="awrbg" colspan=" 6" id="Received(MB/s)">Received (MB/s)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB/s) Total" class='awrclb'>1.19</td><td align="right" headers="Sent(MB/s) Cache" class='awrc'>0.45</td><td align="right" headers="Sent(MB/s) IPQ" class='awrc'>0.01</td><td align="right" headers="Sent(MB/s) DLM" class='awrc'>0.70</td><td align="right" headers="Sent(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrc'>0.03</td><td align="right" headers="Received(MB/s) Total" class='awrclb'>1.08</td><td align="right" headers="Received(MB/s) Cache" class='awrc'>0.13</td><td align="right" headers="Received(MB/s) IPQ" class='awrc'>0.01</td><td align="right" headers="Received(MB/s) DLM" class='awrc'>0.92</td><td align="right" headers="Received(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrcrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB/s) Total" class='awrnclb'>1.08</td><td align="right" headers="Sent(MB/s) Cache" class='awrnc'>0.13</td><td align="right" headers="Sent(MB/s) IPQ" class='awrnc'>0.01</td><td align="right" headers="Sent(MB/s) DLM" class='awrnc'>0.91</td><td align="right" headers="Sent(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrnc'>0.02</td><td align="right" headers="Received(MB/s) Total" class='awrnclb'>1.19</td><td align="right" headers="Received(MB/s) Cache" class='awrnc'>0.45</td><td align="right" headers="Received(MB/s) IPQ" class='awrnc'>0.01</td><td align="right" headers="Received(MB/s) DLM" class='awrnc'>0.69</td><td align="right" headers="Received(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrncrb'>0.03</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>2.27</td><td align="right" class='awrct'>0.58</td><td align="right" class='awrct'>0.02</td><td align="right" class='awrct'>1.61</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.05</td><td align="right" class='awrclbt'>2.27</td><td align="right" class='awrct'>0.59</td><td align="right" class='awrct'>0.02</td><td align="right" class='awrct'>1.61</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrcrbt'>0.05</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>1.13</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.81</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnclb'>1.13</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.81</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrncrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>0.08</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrclb'>0.07</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>0.01</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12043"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> null means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics. . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. null means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>17,794.36</td><td align="right" headers="Sent Packets" class='awrc'>6,297,570</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>8,795.68</td><td align="right" headers="Received Packets" class='awrc'>5,562,722</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>1,210.86</td><td align="right" headers="Sent Packets" class='awrnc'>2,538,866</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1,140.61</td><td align="right" headers="Received Packets" class='awrnc'>2,485,336</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.04</td><td align="right" headers="Sent Packets" class='awrnc'>238</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.03</td><td align="right" headers="Received Packets" class='awrnc'>283</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.22</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.23</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:3</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.03</td><td align="right" headers="Sent Packets" class='awrnc'>3,054</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.17</td><td align="right" headers="Received Packets" class='awrnc'>3,117</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>24.19</td><td align="right" headers="Sent Packets" class='awrc'>25,503</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>24.19</td><td align="right" headers="Received Packets" class='awrc'>25,503</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>2</td><td headers="Interface NAME" class='awrnclb'>eth0</td><td headers="Interface IPAddress" class='awrnc'>10.1.5.4</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>8,877.17</td><td align="right" headers="Sent Packets" class='awrnc'>5,784,506</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>17,705.69</td><td align="right" headers="Received Packets" class='awrnc'>6,036,505</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv</td><td headers="Interface IPAddress" class='awrc'>192.168.2.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>1,142.15</td><td align="right" headers="Sent Packets" class='awrc'>2,315,694</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>1,220.28</td><td align="right" headers="Received Packets" class='awrc'>2,819,849</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrnc'>169.254.31.173</td><td headers="Interface IPMask" class='awrnc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub</td><td headers="Interface IPAddress" class='awrc'>192.168.1.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.03</td><td align="right" headers="Sent Packets" class='awrc'>281</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.04</td><td align="right" headers="Received Packets" class='awrc'>237</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.12</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrc'>192.168.1.21</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.03</td><td align="right" headers="Sent Packets" class='awrnc'>3,089</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.17</td><td align="right" headers="Received Packets" class='awrnc'>3,112</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>8.46</td><td align="right" headers="Sent Packets" class='awrc'>123,485</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>8.46</td><td align="right" headers="Received Packets" class='awrc'>123,485</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>29,061.32</td><td align="right" class='awrnct'>17,092,286</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>28,897.32</td><td align="right" class='awrnct'>17,060,149</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>1,709.49</td><td align="right" class='awrc'>1,005,429</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>1,699.84</td><td align="right" class='awrc'>1,003,538</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>4,667.27</td><td align="right" class='awrnc'>2,057,897</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>4,640.35</td><td align="right" class='awrnc'>2,006,351</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12044"></a>
<h3 class="awr">Interconnect Device Statistics (per Second)</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> Blank	means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics (per Second). . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. Blank means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>29.10</td><td align="right" headers="Sent Packets" class='awrc'>10,298</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>14.38</td><td align="right" headers="Received Packets" class='awrc'>9,096</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>1.98</td><td align="right" headers="Sent Packets" class='awrnc'>4,151</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.87</td><td align="right" headers="Received Packets" class='awrnc'>4,064</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.22</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.23</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:3</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>5</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>5</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.04</td><td align="right" headers="Sent Packets" class='awrc'>42</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.04</td><td align="right" headers="Received Packets" class='awrc'>42</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>2</td><td headers="Interface NAME" class='awrnclb'>eth0</td><td headers="Interface IPAddress" class='awrnc'>10.1.5.4</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>14.53</td><td align="right" headers="Sent Packets" class='awrnc'>9,465</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>28.97</td><td align="right" headers="Received Packets" class='awrnc'>9,877</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv</td><td headers="Interface IPAddress" class='awrc'>192.168.2.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>1.87</td><td align="right" headers="Sent Packets" class='awrc'>3,789</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>2.00</td><td align="right" headers="Received Packets" class='awrc'>4,614</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrnc'>169.254.31.173</td><td headers="Interface IPMask" class='awrnc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub</td><td headers="Interface IPAddress" class='awrc'>192.168.1.2</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.12</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrc'>192.168.1.21</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>5</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>5</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.01</td><td align="right" headers="Sent Packets" class='awrc'>202</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.01</td><td align="right" headers="Received Packets" class='awrc'>202</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>47.53</td><td align="right" class='awrnct'>27,958</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>47.27</td><td align="right" class='awrnct'>27,906</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>2.80</td><td align="right" class='awrc'>1,645</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>2.78</td><td align="right" class='awrc'>1,642</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>7.63</td><td align="right" class='awrnc'>3,366</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>7.59</td><td align="right" class='awrnc'>3,282</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12078"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Affinity Objects - Affinity objects remastered at the begin/end snapshot  </li>
<li class="awr"> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Affinity Objects - Affinity objects remastered at the begin/end snapshot . Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CountsperOps">Counts per Ops</th>
<th class="awrbg" colspan=" 6" id="TimeperOps(seconds)">Time per Ops (seconds)</th>
<th class="awrbg" colspan=" 2" id="AffinityObjects">Affinity Objects</th>
<th class="awrbg" colspan=" 3" id="ReadMostlyObjects">Read Mostly Objects</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Remaster Ops</th><th class="awrbg" scope="col" id="Remastered|Objects">Remastered Objects</th><th class="awrbg" scope="col" id="ReplayLocks|Received">Replay Locks Received</th><th class="awrbg" scope="col" id="ReplayLocks|Sent">Replay Locks Sent</th><th class="awrbg" scope="col" id="Resources|Cleaned">Resources Cleaned</th><th class="awrbg" scope="col" id="Remaster">Remaster</th><th class="awrbg" scope="col" id="Freeze">Freeze</th><th class="awrbg" scope="col" id="Cleanup">Cleanup</th><th class="awrbg" scope="col" id="Replay">Replay</th><th class="awrbg" scope="col" id="Fixwrite">Fixwrite</th><th class="awrbg" scope="col" id="Sync">Sync</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="Begin|(persistent)">Begin (persistent)</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrclb'>1.00</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrc'>6,991.00</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrc'>26,771.00</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrc'>0.00</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrclb'>1.47</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrc'>0.01</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrc'>0.14</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrc'>0.24</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrc'>0.19</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrc'>0.87</td><td align="right" headers="AffinityObjects Begin" class='awrclb'>15</td><td align="right" headers="AffinityObjects End" class='awrc'>14</td><td align="right" headers="ReadMostlyObjects Begin" class='awrclb'>1</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrc'>0</td><td align="right" headers="ReadMostlyObjects End" class='awrcrb'>1</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>1</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrnclb'>1.00</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrnc'>26,771.00</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrnc'>6,991.00</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrnc'>0.00</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrnclb'>1.46</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrnc'>0.01</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrnc'>0.07</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrnc'>0.05</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrnc'>0.11</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrnc'>1.20</td><td align="right" headers="AffinityObjects Begin" class='awrnclb'>3</td><td align="right" headers="AffinityObjects End" class='awrnc'>3</td><td align="right" headers="ReadMostlyObjects Begin" class='awrnclb'>1</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrnc'>0</td><td align="right" headers="ReadMostlyObjects End" class='awrncrb'>1</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>1</td><td align="right" class='awrclbt'>1.00</td><td align="right" class='awrct'>16,881.00</td><td align="right" class='awrct'>16,881.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>1.47</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.11</td><td align="right" class='awrct'>0.15</td><td align="right" class='awrct'>0.15</td><td align="right" class='awrct'>1.04</td><td align="right" class='awrclbt'>9</td><td align="right" class='awrct'>9</td><td align="right" class='awrclbt'>1</td><td align="right" class='awrct'>0</td><td align="right" class='awrcrbt'>1</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Max</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>26,771.00</td><td align="right" class='awrnc'>26,771.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnclb'>1.47</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnclb'>15</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnclb'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>1</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="622"></a>
<h2 class="awr">
SQL Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12060">SQL ordered by Elapsed Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12061">SQL ordered by CPU Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12066">SQL ordered by User I/O Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12062">SQL ordered by Gets (Global)</a></li>
<li class="awr"><a class="awr" href="#12063">SQL ordered by Reads (Global)</a></li>
<li class="awr"><a class="awr" href="#12081">SQL ordered by UnOptimized Read Requests (Global)</a></li>
<li class="awr"><a class="awr" href="#12065">SQL ordered by Executions (Global)</a></li>
<li class="awr"><a class="awr" href="#12064">SQL ordered by Cluster Wait Time (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12060"></a>
<h3 class="awr">SQL ordered by Elapsed Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   98.4% of Total DB Time (s):		18,271</li>
<li class="awr">Captured PL/SQL account for   99.0% of Total DB Time (s):	   18,271</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Elapsed Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>17,887.56</td><td align="right" headers="Total CPU(s)" class='awrc'>895.43</td><td align="right" headers="Total IOWait(s)" class='awrc'>10,817.80</td><td align="right" headers="Total Gets" class='awrc'>3,298,301</td><td align="right" headers="Total Reads" class='awrc'>2,585,933</td><td align="right" headers="Total Rows" class='awrc'>2,706,672</td><td align="right" headers="Total Cluster(s)" class='awrc'>921.58</td><td align="right" headers="Total Execs" class='awrc'>87,312</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.20</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.12</td><td align="right" headers="PerExecution Gets" class='awrc'>37.78</td><td align="right" headers="PerExecution Reads" class='awrc'>29.62</td><td align="right" headers="PerExecution Rows" class='awrc'>31.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>97.90</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>92.12</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.98</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>89.52</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>96.77</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>94.60</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>72.75</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#83dzbzw98577h">83dzbzw98577h</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>564.42</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.94</td><td align="right" headers="Total IOWait(s)" class='awrnc'>66.95</td><td align="right" headers="Total Gets" class='awrnc'>152,550</td><td align="right" headers="Total Reads" class='awrnc'>115,842</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>36.42</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>564.42</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.94</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>66.95</td><td align="right" headers="PerExecution Gets" class='awrnc'>152,550.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>115,842.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>36.42</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.32</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.14</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.34</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.74</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5nff7mqnapavq">5nff7mqnapavq</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>564.41</td><td align="right" headers="Total CPU(s)" class='awrc'>30.17</td><td align="right" headers="Total IOWait(s)" class='awrc'>201.29</td><td align="right" headers="Total Gets" class='awrc'>104,167</td><td align="right" headers="Total Reads" class='awrc'>81,582</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>24.43</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>564.41</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>30.17</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>201.29</td><td align="right" headers="PerExecution Gets" class='awrc'>104,167.00</td><td align="right" headers="PerExecution Reads" class='awrc'>81,582.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>24.43</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.10</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.83</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>3.05</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.51</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#dbyf2w4zdhm5a">dbyf2w4zdhm5a</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>564.39</td><td align="right" headers="Total CPU(s)" class='awrnc'>51.54</td><td align="right" headers="Total IOWait(s)" class='awrnc'>64.07</td><td align="right" headers="Total Gets" class='awrnc'>138,571</td><td align="right" headers="Total Reads" class='awrnc'>106,936</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>64.84</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>564.39</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>51.54</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>64.07</td><td align="right" headers="PerExecution Gets" class='awrnc'>138,571.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>106,936.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>64.84</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>5.30</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>3.76</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>6.66</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#ffg3064p5ba19">ffg3064p5ba19</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>564.35</td><td align="right" headers="Total CPU(s)" class='awrc'>31.00</td><td align="right" headers="Total IOWait(s)" class='awrc'>75.49</td><td align="right" headers="Total Gets" class='awrc'>183,478</td><td align="right" headers="Total Reads" class='awrc'>133,174</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.02</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>564.35</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>31.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>75.49</td><td align="right" headers="PerExecution Gets" class='awrc'>183,478.00</td><td align="right" headers="PerExecution Reads" class='awrc'>133,174.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.98</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.98</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#899d7tfh478uf">899d7tfh478uf</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>564.33</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.18</td><td align="right" headers="Total IOWait(s)" class='awrnc'>66.54</td><td align="right" headers="Total Gets" class='awrnc'>150,312</td><td align="right" headers="Total Reads" class='awrnc'>114,529</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.88</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>564.33</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.18</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>66.54</td><td align="right" headers="PerExecution Gets" class='awrnc'>150,312.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>114,529.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.88</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.24</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.08</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.29</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.68</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#27kw116fyz8ch">27kw116fyz8ch</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>564.32</td><td align="right" headers="Total CPU(s)" class='awrc'>30.98</td><td align="right" headers="Total IOWait(s)" class='awrc'>76.95</td><td align="right" headers="Total Gets" class='awrc'>177,735</td><td align="right" headers="Total Reads" class='awrc'>135,287</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.04</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>564.32</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>30.98</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>76.95</td><td align="right" headers="PerExecution Gets" class='awrc'>177,735.00</td><td align="right" headers="PerExecution Reads" class='awrc'>135,287.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.04</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.82</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>5.06</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#92ys8asf4wtfh">92ys8asf4wtfh</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>564.31</td><td align="right" headers="Total CPU(s)" class='awrnc'>24.94</td><td align="right" headers="Total IOWait(s)" class='awrnc'>261.83</td><td align="right" headers="Total Gets" class='awrnc'>83,464</td><td align="right" headers="Total Reads" class='awrnc'>65,919</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>19.64</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>564.31</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>24.94</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>261.83</td><td align="right" headers="PerExecution Gets" class='awrnc'>83,464.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>65,919.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>19.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.57</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.27</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.47</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.02</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#a44zayg3f6y2j">a44zayg3f6y2j</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>564.30</td><td align="right" headers="Total CPU(s)" class='awrc'>42.28</td><td align="right" headers="Total IOWait(s)" class='awrc'>66.60</td><td align="right" headers="Total Gets" class='awrc'>152,606</td><td align="right" headers="Total Reads" class='awrc'>116,191</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>37.64</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>564.30</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>42.28</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>66.60</td><td align="right" headers="PerExecution Gets" class='awrc'>152,606.00</td><td align="right" headers="PerExecution Reads" class='awrc'>116,191.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>37.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.35</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.14</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.86</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#2s38bb8cxwhkg">2s38bb8cxwhkg</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>564.28</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.05</td><td align="right" headers="Total IOWait(s)" class='awrnc'>77.16</td><td align="right" headers="Total Gets" class='awrnc'>176,826</td><td align="right" headers="Total Reads" class='awrnc'>134,945</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>564.28</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.05</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>77.16</td><td align="right" headers="PerExecution Gets" class='awrnc'>176,826.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,945.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.80</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>5.05</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12061"></a>
<h3 class="awr">SQL ordered by CPU Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   94.3% of Total CPU Time (s): 	    972</li>
<li class="awr">Captured PL/SQL account for   97.3% of Total CPU Time (s):	       972</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by CPU Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>895.43</td><td align="right" headers="Total Elapsed(s)" class='awrc'>17,887.56</td><td align="right" headers="Total IOWait(s)" class='awrc'>10,817.80</td><td align="right" headers="Total Gets" class='awrc'>3,298,301</td><td align="right" headers="Total Reads" class='awrc'>2,585,933</td><td align="right" headers="Total Rows" class='awrc'>2,706,672</td><td align="right" headers="Total Cluster(s)" class='awrc'>921.58</td><td align="right" headers="Total Execs" class='awrc'>87,312</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.20</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.12</td><td align="right" headers="PerExecution Gets" class='awrc'>37.78</td><td align="right" headers="PerExecution Reads" class='awrc'>29.62</td><td align="right" headers="PerExecution Rows" class='awrc'>31.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>92.12</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>97.90</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>97.74</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>89.52</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>96.77</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>94.60</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>72.75</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#dbyf2w4zdhm5a">dbyf2w4zdhm5a</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>51.54</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.39</td><td align="right" headers="Total IOWait(s)" class='awrnc'>64.07</td><td align="right" headers="Total Gets" class='awrnc'>138,571</td><td align="right" headers="Total Reads" class='awrnc'>106,936</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>64.84</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>51.54</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.39</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>64.07</td><td align="right" headers="PerExecution Gets" class='awrnc'>138,571.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>106,936.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>64.84</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>5.30</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.58</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>3.76</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>6.66</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#a44zayg3f6y2j">a44zayg3f6y2j</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>42.28</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>66.60</td><td align="right" headers="Total Gets" class='awrc'>152,606</td><td align="right" headers="Total Reads" class='awrc'>116,191</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>37.64</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>42.28</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.30</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>66.60</td><td align="right" headers="PerExecution Gets" class='awrc'>152,606.00</td><td align="right" headers="PerExecution Reads" class='awrc'>116,191.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>37.64</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>4.35</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.60</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.14</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.86</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#63wngb2bqq9gg">63wngb2bqq9gg</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>42.05</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.26</td><td align="right" headers="Total IOWait(s)" class='awrnc'>66.83</td><td align="right" headers="Total Gets" class='awrnc'>152,190</td><td align="right" headers="Total Reads" class='awrnc'>116,651</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.42</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>42.05</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.26</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>66.83</td><td align="right" headers="PerExecution Gets" class='awrnc'>152,190.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>116,651.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.42</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>4.33</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.60</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.13</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.37</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.64</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#83dzbzw98577h">83dzbzw98577h</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>41.94</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.42</td><td align="right" headers="Total IOWait(s)" class='awrc'>66.95</td><td align="right" headers="Total Gets" class='awrc'>152,550</td><td align="right" headers="Total Reads" class='awrc'>115,842</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>36.42</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>41.94</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.42</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>66.95</td><td align="right" headers="PerExecution Gets" class='awrc'>152,550.00</td><td align="right" headers="PerExecution Reads" class='awrc'>115,842.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>36.42</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>4.32</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.60</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.14</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.34</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.74</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#899d7tfh478uf">899d7tfh478uf</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>41.18</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.33</td><td align="right" headers="Total IOWait(s)" class='awrnc'>66.54</td><td align="right" headers="Total Gets" class='awrnc'>150,312</td><td align="right" headers="Total Reads" class='awrnc'>114,529</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.88</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>41.18</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.33</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>66.54</td><td align="right" headers="PerExecution Gets" class='awrnc'>150,312.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>114,529.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.88</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>4.24</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.60</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.08</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.29</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.68</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#cbqrzstc5g855">cbqrzstc5g855</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>31.18</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="Total IOWait(s)" class='awrc'>76.61</td><td align="right" headers="Total Gets" class='awrc'>178,598</td><td align="right" headers="Total Reads" class='awrc'>134,956</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.52</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>31.18</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>76.61</td><td align="right" headers="PerExecution Gets" class='awrc'>178,598.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,956.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.52</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>3.21</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.69</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.85</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>5.05</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.05</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#2s38bb8cxwhkg">2s38bb8cxwhkg</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>31.05</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.28</td><td align="right" headers="Total IOWait(s)" class='awrnc'>77.16</td><td align="right" headers="Total Gets" class='awrnc'>176,826</td><td align="right" headers="Total Reads" class='awrnc'>134,945</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>31.05</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.28</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>77.16</td><td align="right" headers="PerExecution Gets" class='awrnc'>176,826.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,945.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>3.19</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.70</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.80</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>5.05</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#89zxxhhq9a38k">89zxxhhq9a38k</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>31.02</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="Total IOWait(s)" class='awrc'>75.54</td><td align="right" headers="Total Gets" class='awrc'>180,211</td><td align="right" headers="Total Reads" class='awrc'>134,641</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.97</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>31.02</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>75.54</td><td align="right" headers="PerExecution Gets" class='awrc'>180,211.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,641.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.97</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>3.19</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.68</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.89</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>5.04</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.10</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#ffg3064p5ba19">ffg3064p5ba19</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>31.00</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.35</td><td align="right" headers="Total IOWait(s)" class='awrnc'>75.49</td><td align="right" headers="Total Gets" class='awrnc'>183,478</td><td align="right" headers="Total Reads" class='awrnc'>133,174</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>31.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.35</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>75.49</td><td align="right" headers="PerExecution Gets" class='awrnc'>183,478.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>133,174.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>3.19</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.68</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.98</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.98</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12066"></a>
<h3 class="awr">SQL ordered by User I/O Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   97.9% of Total User I/O Wait Time (s):	   11,067</li>
<li class="awr">Captured PL/SQL account for   98.7% of Total User I/O Wait Time (s):	      11,067</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by User I/O Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>10,817.80</td><td align="right" headers="Total Elapsed(s)" class='awrc'>17,887.56</td><td align="right" headers="Total CPU(s)" class='awrc'>895.43</td><td align="right" headers="Total Gets" class='awrc'>3,298,301</td><td align="right" headers="Total Reads" class='awrc'>2,585,933</td><td align="right" headers="Total Rows" class='awrc'>2,706,672</td><td align="right" headers="Total Cluster(s)" class='awrc'>921.58</td><td align="right" headers="Total Execs" class='awrc'>87,312</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>0.12</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.20</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>37.78</td><td align="right" headers="PerExecution Reads" class='awrc'>29.62</td><td align="right" headers="PerExecution Rows" class='awrc'>31.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>97.74</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>97.90</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>92.12</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>89.52</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>96.77</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>94.60</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>72.75</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#2s38bb8cxwhkg">2s38bb8cxwhkg</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>77.16</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.28</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.05</td><td align="right" headers="Total Gets" class='awrnc'>176,826</td><td align="right" headers="Total Reads" class='awrnc'>134,945</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>77.16</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.28</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.05</td><td align="right" headers="PerExecution Gets" class='awrnc'>176,826.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,945.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>0.70</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.80</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>5.05</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#cbqrzstc5g855">cbqrzstc5g855</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>76.61</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="Total CPU(s)" class='awrc'>31.18</td><td align="right" headers="Total Gets" class='awrc'>178,598</td><td align="right" headers="Total Reads" class='awrc'>134,956</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.52</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>76.61</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>31.18</td><td align="right" headers="PerExecution Gets" class='awrc'>178,598.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,956.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.52</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>0.69</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.21</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.85</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>5.05</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.05</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#89zxxhhq9a38k">89zxxhhq9a38k</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>75.54</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.25</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.02</td><td align="right" headers="Total Gets" class='awrnc'>180,211</td><td align="right" headers="Total Reads" class='awrnc'>134,641</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.97</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>75.54</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.25</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.02</td><td align="right" headers="PerExecution Gets" class='awrnc'>180,211.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,641.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.97</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>0.68</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.89</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>5.04</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.10</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#ffg3064p5ba19">ffg3064p5ba19</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>75.49</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.35</td><td align="right" headers="Total CPU(s)" class='awrc'>31.00</td><td align="right" headers="Total Gets" class='awrc'>183,478</td><td align="right" headers="Total Reads" class='awrc'>133,174</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.02</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>75.49</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.35</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>31.00</td><td align="right" headers="PerExecution Gets" class='awrc'>183,478.00</td><td align="right" headers="PerExecution Reads" class='awrc'>133,174.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>0.68</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.19</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.98</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.98</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#83dzbzw98577h">83dzbzw98577h</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>66.95</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.42</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.94</td><td align="right" headers="Total Gets" class='awrnc'>152,550</td><td align="right" headers="Total Reads" class='awrnc'>115,842</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>36.42</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>66.95</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.42</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.94</td><td align="right" headers="PerExecution Gets" class='awrnc'>152,550.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>115,842.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>36.42</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>0.60</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.32</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.14</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.34</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.74</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#63wngb2bqq9gg">63wngb2bqq9gg</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>66.83</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.26</td><td align="right" headers="Total CPU(s)" class='awrc'>42.05</td><td align="right" headers="Total Gets" class='awrc'>152,190</td><td align="right" headers="Total Reads" class='awrc'>116,651</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.42</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>66.83</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.26</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>42.05</td><td align="right" headers="PerExecution Gets" class='awrc'>152,190.00</td><td align="right" headers="PerExecution Reads" class='awrc'>116,651.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.42</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>0.60</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.33</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.13</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.37</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.64</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#a44zayg3f6y2j">a44zayg3f6y2j</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>66.60</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.30</td><td align="right" headers="Total CPU(s)" class='awrnc'>42.28</td><td align="right" headers="Total Gets" class='awrnc'>152,606</td><td align="right" headers="Total Reads" class='awrnc'>116,191</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>37.64</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>66.60</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.30</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>42.28</td><td align="right" headers="PerExecution Gets" class='awrnc'>152,606.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>116,191.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>37.64</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>0.60</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.35</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.14</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.86</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#899d7tfh478uf">899d7tfh478uf</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>66.54</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.33</td><td align="right" headers="Total CPU(s)" class='awrc'>41.18</td><td align="right" headers="Total Gets" class='awrc'>150,312</td><td align="right" headers="Total Reads" class='awrc'>114,529</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.88</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>66.54</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.33</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.18</td><td align="right" headers="PerExecution Gets" class='awrc'>150,312.00</td><td align="right" headers="PerExecution Reads" class='awrc'>114,529.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.88</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>0.60</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.24</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.08</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.29</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.68</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#dbyf2w4zdhm5a">dbyf2w4zdhm5a</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>64.07</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.39</td><td align="right" headers="Total CPU(s)" class='awrnc'>51.54</td><td align="right" headers="Total Gets" class='awrnc'>138,571</td><td align="right" headers="Total Reads" class='awrnc'>106,936</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>64.84</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>64.07</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.39</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>51.54</td><td align="right" headers="PerExecution Gets" class='awrnc'>138,571.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>106,936.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>64.84</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>0.58</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>5.30</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>3.76</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>6.66</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12062"></a>
<h3 class="awr">SQL ordered by Gets (Global)</h3>
<ul>
<li class="awr">Total Buffer Gets:	 3,684,618</li>
<li class="awr">Captured SQL account for   94.4% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Gets (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Gets" class='awrclb'>3,298,301</td><td align="right" headers="Total Reads" class='awrc'>2,585,933</td><td align="right" headers="Total Elapsed(s)" class='awrc'>17,887.56</td><td align="right" headers="Total CPU(s)" class='awrc'>895.43</td><td align="right" headers="Total IOWait(s)" class='awrc'>10,817.80</td><td align="right" headers="Total Rows" class='awrc'>2,706,672</td><td align="right" headers="Total Cluster(s)" class='awrc'>921.58</td><td align="right" headers="Total Execs" class='awrc'>87,312</td><td align="right" headers="PerExecution Gets" class='awrclb'>37.78</td><td align="right" headers="PerExecution Reads" class='awrc'>29.62</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.20</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.12</td><td align="right" headers="PerExecution Rows" class='awrc'>31.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>89.52</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>96.77</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>97.90</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>92.12</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>97.74</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>94.60</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>72.75</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#ffg3064p5ba19">ffg3064p5ba19</a></td><td align="right" headers="Total Gets" class='awrnclb'>183,478</td><td align="right" headers="Total Reads" class='awrnc'>133,174</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.35</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.00</td><td align="right" headers="Total IOWait(s)" class='awrnc'>75.49</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>183,478.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>133,174.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.35</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>75.49</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>4.98</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.98</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.68</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#89zxxhhq9a38k">89zxxhhq9a38k</a></td><td align="right" headers="Total Gets" class='awrclb'>180,211</td><td align="right" headers="Total Reads" class='awrc'>134,641</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="Total CPU(s)" class='awrc'>31.02</td><td align="right" headers="Total IOWait(s)" class='awrc'>75.54</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.97</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>180,211.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,641.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>31.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>75.54</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.97</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>4.89</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>5.04</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.68</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.10</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#cbqrzstc5g855">cbqrzstc5g855</a></td><td align="right" headers="Total Gets" class='awrnclb'>178,598</td><td align="right" headers="Total Reads" class='awrnc'>134,956</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.25</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.18</td><td align="right" headers="Total IOWait(s)" class='awrnc'>76.61</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.52</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>178,598.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,956.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.25</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.18</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>76.61</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.52</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>4.85</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>5.05</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.21</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.69</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#27kw116fyz8ch">27kw116fyz8ch</a></td><td align="right" headers="Total Gets" class='awrclb'>177,735</td><td align="right" headers="Total Reads" class='awrc'>135,287</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.32</td><td align="right" headers="Total CPU(s)" class='awrc'>30.98</td><td align="right" headers="Total IOWait(s)" class='awrc'>76.95</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.04</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>177,735.00</td><td align="right" headers="PerExecution Reads" class='awrc'>135,287.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.32</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>30.98</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>76.95</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.04</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>4.82</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>5.06</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.70</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#2s38bb8cxwhkg">2s38bb8cxwhkg</a></td><td align="right" headers="Total Gets" class='awrnclb'>176,826</td><td align="right" headers="Total Reads" class='awrnc'>134,945</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.28</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.05</td><td align="right" headers="Total IOWait(s)" class='awrnc'>77.16</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>176,826.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,945.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.28</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.05</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>77.16</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>4.80</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>5.05</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.70</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#a44zayg3f6y2j">a44zayg3f6y2j</a></td><td align="right" headers="Total Gets" class='awrclb'>152,606</td><td align="right" headers="Total Reads" class='awrc'>116,191</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.30</td><td align="right" headers="Total CPU(s)" class='awrc'>42.28</td><td align="right" headers="Total IOWait(s)" class='awrc'>66.60</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>37.64</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>152,606.00</td><td align="right" headers="PerExecution Reads" class='awrc'>116,191.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.30</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>42.28</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>66.60</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>37.64</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>4.14</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.35</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.35</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.86</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#83dzbzw98577h">83dzbzw98577h</a></td><td align="right" headers="Total Gets" class='awrnclb'>152,550</td><td align="right" headers="Total Reads" class='awrnc'>115,842</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.42</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.94</td><td align="right" headers="Total IOWait(s)" class='awrnc'>66.95</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>36.42</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>152,550.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>115,842.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.42</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.94</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>66.95</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>36.42</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>4.14</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.34</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.32</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.74</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#63wngb2bqq9gg">63wngb2bqq9gg</a></td><td align="right" headers="Total Gets" class='awrclb'>152,190</td><td align="right" headers="Total Reads" class='awrc'>116,651</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.26</td><td align="right" headers="Total CPU(s)" class='awrc'>42.05</td><td align="right" headers="Total IOWait(s)" class='awrc'>66.83</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.42</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>152,190.00</td><td align="right" headers="PerExecution Reads" class='awrc'>116,651.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.26</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>42.05</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>66.83</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.42</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>4.13</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.37</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.33</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.64</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#899d7tfh478uf">899d7tfh478uf</a></td><td align="right" headers="Total Gets" class='awrnclb'>150,312</td><td align="right" headers="Total Reads" class='awrnc'>114,529</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.33</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.18</td><td align="right" headers="Total IOWait(s)" class='awrnc'>66.54</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.88</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>150,312.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>114,529.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.33</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.18</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>66.54</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.88</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>4.08</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.29</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.24</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.68</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12063"></a>
<h3 class="awr">SQL ordered by Reads (Global)</h3>
<ul>
<li class="awr">Total Disk Reads:	2,672,231</li>
<li class="awr">Captured SQL account for   97.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Reads (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Reads" class='awrclb'>2,585,933</td><td align="right" headers="Total Gets" class='awrc'>3,298,301</td><td align="right" headers="Total Elapsed(s)" class='awrc'>17,887.56</td><td align="right" headers="Total CPU(s)" class='awrc'>895.43</td><td align="right" headers="Total IOWait(s)" class='awrc'>10,817.80</td><td align="right" headers="Total Rows" class='awrc'>2,706,672</td><td align="right" headers="Total Cluster(s)" class='awrc'>921.58</td><td align="right" headers="Total Execs" class='awrc'>87,312</td><td align="right" headers="PerExecution Reads" class='awrclb'>29.62</td><td align="right" headers="PerExecution Gets" class='awrc'>37.78</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.20</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.12</td><td align="right" headers="PerExecution Rows" class='awrc'>31.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>96.77</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>89.52</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>97.90</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>92.12</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>97.74</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>94.60</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>72.75</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#27kw116fyz8ch">27kw116fyz8ch</a></td><td align="right" headers="Total Reads" class='awrnclb'>135,287</td><td align="right" headers="Total Gets" class='awrnc'>177,735</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.32</td><td align="right" headers="Total CPU(s)" class='awrnc'>30.98</td><td align="right" headers="Total IOWait(s)" class='awrnc'>76.95</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.04</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>135,287.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>177,735.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.32</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>30.98</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>76.95</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.04</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>5.06</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.82</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.70</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#cbqrzstc5g855">cbqrzstc5g855</a></td><td align="right" headers="Total Reads" class='awrclb'>134,956</td><td align="right" headers="Total Gets" class='awrc'>178,598</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="Total CPU(s)" class='awrc'>31.18</td><td align="right" headers="Total IOWait(s)" class='awrc'>76.61</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.52</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>134,956.00</td><td align="right" headers="PerExecution Gets" class='awrc'>178,598.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>31.18</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>76.61</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.52</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>5.05</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.85</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.21</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.69</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.05</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#2s38bb8cxwhkg">2s38bb8cxwhkg</a></td><td align="right" headers="Total Reads" class='awrnclb'>134,945</td><td align="right" headers="Total Gets" class='awrnc'>176,826</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.28</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.05</td><td align="right" headers="Total IOWait(s)" class='awrnc'>77.16</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>134,945.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>176,826.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.28</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.05</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>77.16</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>5.05</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.80</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.70</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#89zxxhhq9a38k">89zxxhhq9a38k</a></td><td align="right" headers="Total Reads" class='awrclb'>134,641</td><td align="right" headers="Total Gets" class='awrc'>180,211</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="Total CPU(s)" class='awrc'>31.02</td><td align="right" headers="Total IOWait(s)" class='awrc'>75.54</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.97</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>134,641.00</td><td align="right" headers="PerExecution Gets" class='awrc'>180,211.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>31.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>75.54</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.97</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>5.04</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.89</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.68</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.10</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#ffg3064p5ba19">ffg3064p5ba19</a></td><td align="right" headers="Total Reads" class='awrnclb'>133,174</td><td align="right" headers="Total Gets" class='awrnc'>183,478</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.35</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.00</td><td align="right" headers="Total IOWait(s)" class='awrnc'>75.49</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>133,174.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>183,478.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.35</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>75.49</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>4.98</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.98</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.68</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#63wngb2bqq9gg">63wngb2bqq9gg</a></td><td align="right" headers="Total Reads" class='awrclb'>116,651</td><td align="right" headers="Total Gets" class='awrc'>152,190</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.26</td><td align="right" headers="Total CPU(s)" class='awrc'>42.05</td><td align="right" headers="Total IOWait(s)" class='awrc'>66.83</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.42</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>116,651.00</td><td align="right" headers="PerExecution Gets" class='awrc'>152,190.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.26</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>42.05</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>66.83</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.42</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>4.37</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.13</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.33</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.64</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#a44zayg3f6y2j">a44zayg3f6y2j</a></td><td align="right" headers="Total Reads" class='awrnclb'>116,191</td><td align="right" headers="Total Gets" class='awrnc'>152,606</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.30</td><td align="right" headers="Total CPU(s)" class='awrnc'>42.28</td><td align="right" headers="Total IOWait(s)" class='awrnc'>66.60</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>37.64</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>116,191.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>152,606.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.30</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>42.28</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>66.60</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>37.64</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>4.35</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.14</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.35</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.86</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#83dzbzw98577h">83dzbzw98577h</a></td><td align="right" headers="Total Reads" class='awrclb'>115,842</td><td align="right" headers="Total Gets" class='awrc'>152,550</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.42</td><td align="right" headers="Total CPU(s)" class='awrc'>41.94</td><td align="right" headers="Total IOWait(s)" class='awrc'>66.95</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>36.42</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>115,842.00</td><td align="right" headers="PerExecution Gets" class='awrc'>152,550.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.42</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.94</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>66.95</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>36.42</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>4.34</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.14</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.32</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.74</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#899d7tfh478uf">899d7tfh478uf</a></td><td align="right" headers="Total Reads" class='awrnclb'>114,529</td><td align="right" headers="Total Gets" class='awrnc'>150,312</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.33</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.18</td><td align="right" headers="Total IOWait(s)" class='awrnc'>66.54</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.88</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>114,529.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>150,312.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.33</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.18</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>66.54</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.88</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>4.29</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.08</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.24</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.68</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12081"></a>
<h3 class="awr">SQL ordered by UnOptimized Read Requests (Global)</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    2,671,411</li>
<li class="awr">Captured SQL account for    6.4% of Total</li>
<li class="awr">Total UnOptimized Read Requests:       2,671,411</li>
<li class="awr">Captured SQL account for    6.4% of Total</li>
<li class="awr">Total Optimized Read Requests:		     1</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by UnOptimized Read Requests (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 9" id="Total">Total</th>
<th class="awrbg" colspan=" 8" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 8" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>166,176</td><td align="right" headers="Total Requests" class='awrc'>166,176</td><td align="right" headers="Total Reads" class='awrc'>2,585,933</td><td align="right" headers="Total Elapsed(s)" class='awrc'>17,887.56</td><td align="right" headers="Total CPU(s)" class='awrc'>895.43</td><td align="right" headers="Total IOWait(s)" class='awrc'>10,817.80</td><td align="right" headers="Total Rows" class='awrc'>2,706,672</td><td align="right" headers="Total Cluster(s)" class='awrc'>921.58</td><td align="right" headers="Total Execs" class='awrc'>87,312</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>1.90</td><td align="right" headers="PerExecution Requests" class='awrc'>1.90</td><td align="right" headers="PerExecution Reads" class='awrc'>29.62</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.20</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.12</td><td align="right" headers="PerExecution Rows" class='awrc'>31.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>6.22</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>6.22</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>96.77</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>97.90</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>92.12</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>97.74</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>94.60</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>72.75</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#27kw116fyz8ch">27kw116fyz8ch</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>135,287</td><td align="right" headers="Total Requests" class='awrnc'>135,287</td><td align="right" headers="Total Reads" class='awrnc'>135,287</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.32</td><td align="right" headers="Total CPU(s)" class='awrnc'>30.98</td><td align="right" headers="Total IOWait(s)" class='awrnc'>76.95</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.04</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>135,287.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>135,287.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>135,287.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.32</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>30.98</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>76.95</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.04</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>5.06</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>5.06</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>5.06</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.70</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#cbqrzstc5g855">cbqrzstc5g855</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>134,956</td><td align="right" headers="Total Requests" class='awrc'>134,956</td><td align="right" headers="Total Reads" class='awrc'>134,956</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="Total CPU(s)" class='awrc'>31.18</td><td align="right" headers="Total IOWait(s)" class='awrc'>76.61</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.52</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>134,956.00</td><td align="right" headers="PerExecution Requests" class='awrc'>134,956.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,956.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>31.18</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>76.61</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.52</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>5.05</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>5.05</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>5.05</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.21</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.69</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.05</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#2s38bb8cxwhkg">2s38bb8cxwhkg</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>134,945</td><td align="right" headers="Total Requests" class='awrnc'>134,945</td><td align="right" headers="Total Reads" class='awrnc'>134,945</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.28</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.05</td><td align="right" headers="Total IOWait(s)" class='awrnc'>77.16</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>134,945.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>134,945.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,945.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.28</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.05</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>77.16</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.29</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>5.05</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>5.05</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>5.05</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.70</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#89zxxhhq9a38k">89zxxhhq9a38k</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>134,641</td><td align="right" headers="Total Requests" class='awrc'>134,641</td><td align="right" headers="Total Reads" class='awrc'>134,641</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="Total CPU(s)" class='awrc'>31.02</td><td align="right" headers="Total IOWait(s)" class='awrc'>75.54</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.97</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>134,641.00</td><td align="right" headers="PerExecution Requests" class='awrc'>134,641.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,641.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.25</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>31.02</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>75.54</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.97</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>5.04</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>5.04</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>5.04</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.68</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>0.10</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#ffg3064p5ba19">ffg3064p5ba19</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>133,174</td><td align="right" headers="Total Requests" class='awrnc'>133,174</td><td align="right" headers="Total Reads" class='awrnc'>133,174</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.35</td><td align="right" headers="Total CPU(s)" class='awrnc'>31.00</td><td align="right" headers="Total IOWait(s)" class='awrnc'>75.49</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>133,174.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>133,174.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>133,174.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.35</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>31.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>75.49</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>4.99</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>4.99</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.98</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.68</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#63wngb2bqq9gg">63wngb2bqq9gg</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>116,651</td><td align="right" headers="Total Requests" class='awrc'>116,651</td><td align="right" headers="Total Reads" class='awrc'>116,651</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.26</td><td align="right" headers="Total CPU(s)" class='awrc'>42.05</td><td align="right" headers="Total IOWait(s)" class='awrc'>66.83</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.42</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>116,651.00</td><td align="right" headers="PerExecution Requests" class='awrc'>116,651.00</td><td align="right" headers="PerExecution Reads" class='awrc'>116,651.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.26</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>42.05</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>66.83</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.42</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>4.37</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>4.37</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.37</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.33</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.64</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#a44zayg3f6y2j">a44zayg3f6y2j</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>116,191</td><td align="right" headers="Total Requests" class='awrnc'>116,191</td><td align="right" headers="Total Reads" class='awrnc'>116,191</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.30</td><td align="right" headers="Total CPU(s)" class='awrnc'>42.28</td><td align="right" headers="Total IOWait(s)" class='awrnc'>66.60</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>37.64</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>116,191.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>116,191.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>116,191.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.30</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>42.28</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>66.60</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>37.64</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>4.35</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>4.35</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.35</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.35</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.86</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#83dzbzw98577h">83dzbzw98577h</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>115,842</td><td align="right" headers="Total Requests" class='awrc'>115,842</td><td align="right" headers="Total Reads" class='awrc'>115,842</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.42</td><td align="right" headers="Total CPU(s)" class='awrc'>41.94</td><td align="right" headers="Total IOWait(s)" class='awrc'>66.95</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>36.42</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>115,842.00</td><td align="right" headers="PerExecution Requests" class='awrc'>115,842.00</td><td align="right" headers="PerExecution Reads" class='awrc'>115,842.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.42</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>41.94</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>66.95</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>36.42</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>4.34</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>4.34</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.34</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>4.32</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.74</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#899d7tfh478uf">899d7tfh478uf</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>114,529</td><td align="right" headers="Total Requests" class='awrnc'>114,529</td><td align="right" headers="Total Reads" class='awrnc'>114,529</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>564.33</td><td align="right" headers="Total CPU(s)" class='awrnc'>41.18</td><td align="right" headers="Total IOWait(s)" class='awrnc'>66.54</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>35.88</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>114,529.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>114,529.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>114,529.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>564.33</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>41.18</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>66.54</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>35.88</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>4.29</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>4.29</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>4.29</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>4.24</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.60</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.68</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12065"></a>
<h3 class="awr">SQL ordered by Executions (Global)</h3>
<ul>
<li class="awr">Total Executions:	  120,021</li>
<li class="awr">Captured SQL account for   94.2% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Executions (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Execs" class='awrclb'>87,312</td><td align="right" headers="Total Elapsed(s)" class='awrc'>17,887.56</td><td align="right" headers="Total CPU(s)" class='awrc'>895.43</td><td align="right" headers="Total IOWait(s)" class='awrc'>10,817.80</td><td align="right" headers="Total Gets" class='awrc'>3,298,301</td><td align="right" headers="Total Reads" class='awrc'>2,585,933</td><td align="right" headers="Total Rows" class='awrc'>2,706,672</td><td align="right" headers="Total Cluster(s)" class='awrc'>921.58</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.20</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.12</td><td align="right" headers="PerExecution Gets" class='awrc'>37.78</td><td align="right" headers="PerExecution Reads" class='awrc'>29.62</td><td align="right" headers="PerExecution Rows" class='awrc'>31.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>72.75</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>97.90</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>92.12</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>97.74</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>89.52</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>96.77</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>94.60</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0sbbcuruzd66f">0sbbcuruzd66f</a></td><td align="right" headers="Total Execs" class='awrnclb'>6,235</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>2.29</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.48</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.58</td><td align="right" headers="Total Gets" class='awrnc'>18,471</td><td align="right" headers="Total Reads" class='awrnc'>87</td><td align="right" headers="Total Rows" class='awrnc'>5,817</td><td align="right" headers="Total Cluster(s)" class='awrnc'>1.04</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>2.96</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.93</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>5.19</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.05</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.50</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.11</td>
<td class='awrnc'>select /*+ rule */ bucket_cnt,...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#87gaftwrm2h68">87gaftwrm2h68</a></td><td align="right" headers="Total Execs" class='awrclb'>5,954</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.32</td><td align="right" headers="Total CPU(s)" class='awrc'>0.26</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.03</td><td align="right" headers="Total Gets" class='awrc'>12,435</td><td align="right" headers="Total Reads" class='awrc'>2</td><td align="right" headers="Total Rows" class='awrc'>527</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.05</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>2.09</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>0.09</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>4.96</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.34</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>select o.owner#, o.name, o.nam...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#2sxqgx5hx76qr">2sxqgx5hx76qr</a></td><td align="right" headers="Total Execs" class='awrnclb'>3,726</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>5.03</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.69</td><td align="right" headers="Total IOWait(s)" class='awrnc'>1.97</td><td align="right" headers="Total Gets" class='awrnc'>12,550</td><td align="right" headers="Total Reads" class='awrnc'>467</td><td align="right" headers="Total Rows" class='awrnc'>59,185</td><td align="right" headers="Total Cluster(s)" class='awrnc'>2.14</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>3.37</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.13</td><td align="right" headers="PerExecution Rows" class='awrnc'>15.88</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>3.10</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.07</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.34</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.22</td>
<td class='awrnc'>select /*+ rule */ bucket, end...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#acmvv4fhdc9zh">acmvv4fhdc9zh</a></td><td align="right" headers="Total Execs" class='awrclb'>1,228</td><td align="right" headers="Total Elapsed(s)" class='awrc'>1.05</td><td align="right" headers="Total CPU(s)" class='awrc'>0.19</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.59</td><td align="right" headers="Total Gets" class='awrc'>5,042</td><td align="right" headers="Total Reads" class='awrc'>78</td><td align="right" headers="Total Rows" class='awrc'>987</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.22</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>4.11</td><td align="right" headers="PerExecution Reads" class='awrc'>0.06</td><td align="right" headers="PerExecution Rows" class='awrc'>0.80</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>1.02</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.14</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.02</td>
<td class='awrc'>select obj#, type#, ctime, mti...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#9tgj4g8y4rwy8">9tgj4g8y4rwy8</a></td><td align="right" headers="Total Execs" class='awrnclb'>931</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.33</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.12</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.12</td><td align="right" headers="Total Gets" class='awrnc'>2,875</td><td align="right" headers="Total Reads" class='awrnc'>7</td><td align="right" headers="Total Rows" class='awrnc'>929</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.10</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>3.09</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.78</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.08</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.01</td>
<td class='awrnc'>select type#, blocks, extents,...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#f3ww8rgva3hrs">f3ww8rgva3hrs</a></td><td align="right" headers="Total Execs" class='awrclb'>858</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.43</td><td align="right" headers="Total CPU(s)" class='awrc'>0.15</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.01</td><td align="right" headers="Total Gets" class='awrc'>3,074</td><td align="right" headers="Total Reads" class='awrc'>11</td><td align="right" headers="Total Rows" class='awrc'>858</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.03</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>3.58</td><td align="right" headers="PerExecution Reads" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.71</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.08</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>update /* KSXM:FLUSH COL */ sy...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#asvzxj61dc5vs">asvzxj61dc5vs</a></td><td align="right" headers="Total Execs" class='awrnclb'>502</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.06</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.05</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>1,248</td><td align="right" headers="Total Reads" class='awrnc'>1</td><td align="right" headers="Total Rows" class='awrnc'>232</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>2.49</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.46</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.42</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>select timestamp, flags from f...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#g0t052az3rx44">g0t052az3rx44</a></td><td align="right" headers="Total Execs" class='awrclb'>472</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.39</td><td align="right" headers="Total CPU(s)" class='awrc'>0.18</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.16</td><td align="right" headers="Total Gets" class='awrc'>1,997</td><td align="right" headers="Total Reads" class='awrc'>5</td><td align="right" headers="Total Rows" class='awrc'>6,324</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.04</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>4.23</td><td align="right" headers="PerExecution Reads" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>13.40</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.39</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.05</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>select name, intcol#, segcol#,...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#04kug40zbu4dm">04kug40zbu4dm</a></td><td align="right" headers="Total Execs" class='awrnclb'>377</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.09</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.05</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>3,043</td><td align="right" headers="Total Reads" class='awrnc'>1</td><td align="right" headers="Total Rows" class='awrnc'>0</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>8.07</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>0.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.31</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.08</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>select policy#, action# from a...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12064"></a>
<h3 class="awr">SQL ordered by Cluster Wait Time (Global)</h3>
<ul>
<li class="awr">Total Cluster Wait Time (s):		 974</li>
<li class="awr">Captured SQL account for   95.7% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Cluster Wait Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>921.58</td><td align="right" headers="Total Elapsed(s)" class='awrc'>17,887.56</td><td align="right" headers="Total CPU(s)" class='awrc'>895.43</td><td align="right" headers="Total IOWait(s)" class='awrc'>10,817.80</td><td align="right" headers="Total Gets" class='awrc'>3,298,301</td><td align="right" headers="Total Reads" class='awrc'>2,585,933</td><td align="right" headers="Total Rows" class='awrc'>2,706,672</td><td align="right" headers="Total Execs" class='awrc'>87,312</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.20</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.12</td><td align="right" headers="PerExecution Gets" class='awrc'>37.78</td><td align="right" headers="PerExecution Reads" class='awrc'>29.62</td><td align="right" headers="PerExecution Rows" class='awrc'>31.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>94.60</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>97.90</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>92.12</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>97.74</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>89.52</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>96.77</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>72.75</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#crcf813m8k6q0">crcf813m8k6q0</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>81.82</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>563.55</td><td align="right" headers="Total CPU(s)" class='awrnc'>25.65</td><td align="right" headers="Total IOWait(s)" class='awrnc'>467.46</td><td align="right" headers="Total Gets" class='awrnc'>68,848</td><td align="right" headers="Total Reads" class='awrnc'>53,821</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>81.82</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>563.55</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>25.65</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>467.46</td><td align="right" headers="PerExecution Gets" class='awrnc'>68,848.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>53,821.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>8.40</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.08</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.64</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.22</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>1.87</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.01</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#dbyf2w4zdhm5a">dbyf2w4zdhm5a</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>64.84</td><td align="right" headers="Total Elapsed(s)" class='awrc'>564.39</td><td align="right" headers="Total CPU(s)" class='awrc'>51.54</td><td align="right" headers="Total IOWait(s)" class='awrc'>64.07</td><td align="right" headers="Total Gets" class='awrc'>138,571</td><td align="right" headers="Total Reads" class='awrc'>106,936</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>64.84</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>564.39</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>51.54</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>64.07</td><td align="right" headers="PerExecution Gets" class='awrc'>138,571.00</td><td align="right" headers="PerExecution Reads" class='awrc'>106,936.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>6.66</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>5.30</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.58</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>3.76</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>4.00</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#129d7r965xakz">129d7r965xakz</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>48.00</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>563.82</td><td align="right" headers="Total CPU(s)" class='awrnc'>30.75</td><td align="right" headers="Total IOWait(s)" class='awrnc'>498.23</td><td align="right" headers="Total Gets" class='awrnc'>81,662</td><td align="right" headers="Total Reads" class='awrnc'>62,092</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>48.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>563.82</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>30.75</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>498.23</td><td align="right" headers="PerExecution Gets" class='awrnc'>81,662.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>62,092.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>4.93</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.16</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.50</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.22</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.32</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#7qdskga9a98tt">7qdskga9a98tt</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>46.88</td><td align="right" headers="Total Elapsed(s)" class='awrc'>563.67</td><td align="right" headers="Total CPU(s)" class='awrc'>30.58</td><td align="right" headers="Total IOWait(s)" class='awrc'>499.06</td><td align="right" headers="Total Gets" class='awrc'>81,379</td><td align="right" headers="Total Reads" class='awrc'>63,414</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>46.88</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>563.67</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>30.58</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>499.06</td><td align="right" headers="PerExecution Gets" class='awrc'>81,379.00</td><td align="right" headers="PerExecution Reads" class='awrc'>63,414.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>4.81</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>3.15</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.51</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.21</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.37</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#c863fngb197rm">c863fngb197rm</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>45.64</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>563.65</td><td align="right" headers="Total CPU(s)" class='awrnc'>30.29</td><td align="right" headers="Total IOWait(s)" class='awrnc'>500.09</td><td align="right" headers="Total Gets" class='awrnc'>81,225</td><td align="right" headers="Total Reads" class='awrnc'>61,621</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>45.64</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>563.65</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>30.29</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>500.09</td><td align="right" headers="PerExecution Gets" class='awrnc'>81,225.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>61,621.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>4.68</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>3.12</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.52</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.20</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.31</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#7huzc5jc2tyyr">7huzc5jc2tyyr</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>43.61</td><td align="right" headers="Total Elapsed(s)" class='awrc'>563.70</td><td align="right" headers="Total CPU(s)" class='awrc'>28.14</td><td align="right" headers="Total IOWait(s)" class='awrc'>504.12</td><td align="right" headers="Total Gets" class='awrc'>73,517</td><td align="right" headers="Total Reads" class='awrc'>56,952</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>43.61</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>563.70</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>28.14</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>504.12</td><td align="right" headers="PerExecution Gets" class='awrc'>73,517.00</td><td align="right" headers="PerExecution Reads" class='awrc'>56,952.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>4.48</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.89</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.55</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#3uawgw8gknfx7">3uawgw8gknfx7</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>42.75</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>563.67</td><td align="right" headers="Total CPU(s)" class='awrnc'>27.64</td><td align="right" headers="Total IOWait(s)" class='awrnc'>505.64</td><td align="right" headers="Total Gets" class='awrnc'>74,995</td><td align="right" headers="Total Reads" class='awrnc'>54,912</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>42.75</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>563.67</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>27.64</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>505.64</td><td align="right" headers="PerExecution Gets" class='awrnc'>74,995.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>54,912.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>4.39</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.84</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.57</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.04</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.05</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#g5wjwfs93z517">g5wjwfs93z517</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>42.50</td><td align="right" headers="Total Elapsed(s)" class='awrc'>563.74</td><td align="right" headers="Total CPU(s)" class='awrc'>27.85</td><td align="right" headers="Total IOWait(s)" class='awrc'>505.35</td><td align="right" headers="Total Gets" class='awrc'>74,031</td><td align="right" headers="Total Reads" class='awrc'>56,802</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>42.50</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>563.74</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>27.85</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>505.35</td><td align="right" headers="PerExecution Gets" class='awrc'>74,031.00</td><td align="right" headers="PerExecution Reads" class='awrc'>56,802.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>4.36</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.87</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>4.57</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.13</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#4p0za9517qhty">4p0za9517qhty</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>40.49</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>563.72</td><td align="right" headers="Total CPU(s)" class='awrnc'>26.14</td><td align="right" headers="Total IOWait(s)" class='awrnc'>508.84</td><td align="right" headers="Total Gets" class='awrnc'>68,964</td><td align="right" headers="Total Reads" class='awrnc'>52,329</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>40.49</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>563.72</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>26.14</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>508.84</td><td align="right" headers="PerExecution Gets" class='awrnc'>68,964.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>52,329.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>4.16</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>3.09</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.69</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>4.60</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>1.87</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>1.96</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="623"></a>
<h2 class="awr">
Global Activity Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12071">System Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12072">Global Messaging Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12073">System Statistics (Absolute Values)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12071"></a>
<h3 class="awr">System Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>1,180</td><td align="right" class='awrnc'>1.93</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.97</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.09</td><td align="right" headers="perSecond Min" class='awrnc'>0.90</td><td align="right" headers="perSecond Max" class='awrncrb'>1.03</td></tr>
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>273</td><td align="right" class='awrc'>0.45</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.22</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.21</td><td align="right" headers="perSecond Max" class='awrcrb'>0.23</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>987</td><td align="right" class='awrnc'>1.61</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.81</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.76</td><td align="right" headers="perSecond Max" class='awrncrb'>0.86</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>56</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>397</td><td align="right" class='awrnc'>0.65</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.32</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.17</td><td align="right" headers="perSecond Min" class='awrnc'>0.20</td><td align="right" headers="perSecond Max" class='awrncrb'>0.44</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search all</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search hint</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search steal</td><td align="right" class='awrc'>35</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:bump HWM</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free block</td><td align="right" class='awrc'>907</td><td align="right" class='awrc'>1.48</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.74</td><td align="right" headers="perSecond StdDev" class='awrc'>0.08</td><td align="right" headers="perSecond Min" class='awrc'>0.69</td><td align="right" headers="perSecond Max" class='awrcrb'>0.80</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free data block</td><td align="right" class='awrnc'>721</td><td align="right" class='awrnc'>1.18</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.54</td><td align="right" headers="perSecond Max" class='awrncrb'>0.64</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free index block</td><td align="right" class='awrc'>186</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.15</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>0.16</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:good hint</td><td align="right" class='awrnc'>764</td><td align="right" class='awrnc'>1.25</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.62</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.60</td><td align="right" headers="perSecond Max" class='awrncrb'>0.65</td></tr>
<tr><td scope="row" class='awrc'>ASSM rsv:fill reserve</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ASSM wasted db state change</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO (bound) vector count</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO block miss count</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>Batched IO double miss count</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO same unit count</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>Batched IO single block count</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector block count</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector read count</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Block Cleanout Optim referenced</td><td align="right" class='awrnc'>356,288</td><td align="right" class='awrnc'>582.74</td><td align="right" class='awrnc'>3.95</td><td align="right" headers="perSecond Average" class='awrnclb'>291.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>97.76</td><td align="right" headers="perSecond Min" class='awrnc'>222.24</td><td align="right" headers="perSecond Max" class='awrncrb'>360.50</td></tr>
<tr><td scope="row" class='awrc'>CCursor + sql area evicted</td><td align="right" class='awrc'>3,547</td><td align="right" class='awrc'>5.80</td><td align="right" class='awrc'>0.04</td><td align="right" headers="perSecond Average" class='awrclb'>2.90</td><td align="right" headers="perSecond StdDev" class='awrc'>0.45</td><td align="right" headers="perSecond Min" class='awrc'>2.58</td><td align="right" headers="perSecond Max" class='awrcrb'>3.22</td></tr>
<tr><td scope="row" class='awrnc'>CPU used by this session</td><td align="right" class='awrnc'>151,876</td><td align="right" class='awrnc'>248.42</td><td align="right" class='awrnc'>1.68</td><td align="right" headers="perSecond Average" class='awrnclb'>124.21</td><td align="right" headers="perSecond StdDev" class='awrnc'>10.27</td><td align="right" headers="perSecond Min" class='awrnc'>116.95</td><td align="right" headers="perSecond Max" class='awrncrb'>131.47</td></tr>
<tr><td scope="row" class='awrc'>CPU used when call started</td><td align="right" class='awrc'>112,756</td><td align="right" class='awrc'>184.43</td><td align="right" class='awrc'>1.25</td><td align="right" headers="perSecond Average" class='awrclb'>92.22</td><td align="right" headers="perSecond StdDev" class='awrc'>8.46</td><td align="right" headers="perSecond Min" class='awrc'>86.23</td><td align="right" headers="perSecond Max" class='awrcrb'>98.20</td></tr>
<tr><td scope="row" class='awrnc'>CR blocks created</td><td align="right" class='awrnc'>65</td><td align="right" class='awrnc'>0.11</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.08</td></tr>
<tr><td scope="row" class='awrc'>Cached Commit SCN referenced</td><td align="right" class='awrc'>402,999</td><td align="right" class='awrc'>659.15</td><td align="right" class='awrc'>4.47</td><td align="right" headers="perSecond Average" class='awrclb'>329.58</td><td align="right" headers="perSecond StdDev" class='awrc'>77.16</td><td align="right" headers="perSecond Min" class='awrc'>275.02</td><td align="right" headers="perSecond Max" class='awrcrb'>384.14</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Receive Window</td><td align="right" class='awrnc'>231</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.17</td><td align="right" headers="perSecond Max" class='awrncrb'>0.21</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Send Window</td><td align="right" class='awrc'>231</td><td align="right" class='awrc'>0.38</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.17</td><td align="right" headers="perSecond Max" class='awrcrb'>0.21</td></tr>
<tr><td scope="row" class='awrnc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrnc'>1,009,125</td><td align="right" class='awrnc'>1,650.11</td><td align="right" class='awrnc'>11.19</td><td align="right" headers="perSecond Average" class='awrnclb'>825.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,106.41</td><td align="right" headers="perSecond Min" class='awrnc'>42.71</td><td align="right" headers="perSecond Max" class='awrncrb'>1,607.40</td></tr>
<tr><td scope="row" class='awrc'>Client Send Congestion Window</td><td align="right" class='awrc'>330</td><td align="right" class='awrc'>0.54</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.27</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.25</td><td align="right" headers="perSecond Max" class='awrcrb'>0.29</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrnc'>268</td><td align="right" class='awrnc'>0.44</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.22</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.26</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.40</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Received</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrnc'>842</td><td align="right" class='awrnc'>1.38</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.69</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.65</td><td align="right" headers="perSecond Min" class='awrnc'>0.23</td><td align="right" headers="perSecond Max" class='awrncrb'>1.15</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrc'>135,844</td><td align="right" class='awrc'>222.18</td><td align="right" class='awrc'>1.51</td><td align="right" headers="perSecond Average" class='awrclb'>111.09</td><td align="right" headers="perSecond StdDev" class='awrc'>37.31</td><td align="right" headers="perSecond Min" class='awrc'>84.71</td><td align="right" headers="perSecond Max" class='awrcrb'>137.47</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrnc'>189,139</td><td align="right" class='awrnc'>309.33</td><td align="right" class='awrnc'>2.10</td><td align="right" headers="perSecond Average" class='awrnclb'>154.66</td><td align="right" headers="perSecond StdDev" class='awrnc'>102.79</td><td align="right" headers="perSecond Min" class='awrnc'>81.98</td><td align="right" headers="perSecond Max" class='awrncrb'>227.35</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Acked</td><td align="right" class='awrc'>510,787</td><td align="right" class='awrc'>835.53</td><td align="right" class='awrc'>5.66</td><td align="right" headers="perSecond Average" class='awrclb'>417.77</td><td align="right" headers="perSecond StdDev" class='awrc'>68.21</td><td align="right" headers="perSecond Min" class='awrc'>369.54</td><td align="right" headers="perSecond Max" class='awrcrb'>466.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Received</td><td align="right" class='awrnc'>200,519</td><td align="right" class='awrnc'>328.00</td><td align="right" class='awrnc'>2.22</td><td align="right" headers="perSecond Average" class='awrnclb'>164.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>22.38</td><td align="right" headers="perSecond Min" class='awrnc'>148.18</td><td align="right" headers="perSecond Max" class='awrncrb'>179.82</td></tr>
<tr><td scope="row" class='awrc'>DB time</td><td align="right" class='awrc'>1,925,770</td><td align="right" class='awrc'>3,150.13</td><td align="right" class='awrc'>21.35</td><td align="right" headers="perSecond Average" class='awrclb'>1,575.07</td><td align="right" headers="perSecond StdDev" class='awrc'>279.01</td><td align="right" headers="perSecond Min" class='awrc'>1,377.78</td><td align="right" headers="perSecond Max" class='awrcrb'>1,772.36</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoint buffers written</td><td align="right" class='awrnc'>398,805</td><td align="right" class='awrnc'>652.43</td><td align="right" class='awrnc'>4.42</td><td align="right" headers="perSecond Average" class='awrnclb'>326.21</td><td align="right" headers="perSecond StdDev" class='awrnc'>202.47</td><td align="right" headers="perSecond Min" class='awrnc'>183.04</td><td align="right" headers="perSecond Max" class='awrncrb'>469.38</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoints</td><td align="right" class='awrc'>170</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>DBWR fusion writes</td><td align="right" class='awrnc'>175</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.12</td><td align="right" headers="perSecond Max" class='awrncrb'>0.17</td></tr>
<tr><td scope="row" class='awrc'>DBWR object drop buffers written</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>DBWR transaction table writes</td><td align="right" class='awrnc'>2,044</td><td align="right" class='awrnc'>3.34</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>1.67</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.69</td><td align="right" headers="perSecond Min" class='awrnc'>0.48</td><td align="right" headers="perSecond Max" class='awrncrb'>2.87</td></tr>
<tr><td scope="row" class='awrc'>DBWR undo block writes</td><td align="right" class='awrc'>103,858</td><td align="right" class='awrc'>169.86</td><td align="right" class='awrc'>1.15</td><td align="right" headers="perSecond Average" class='awrclb'>84.93</td><td align="right" headers="perSecond StdDev" class='awrc'>43.64</td><td align="right" headers="perSecond Min" class='awrc'>54.08</td><td align="right" headers="perSecond Max" class='awrcrb'>115.79</td></tr>
<tr><td scope="row" class='awrnc'>DFO trees parallelized</td><td align="right" class='awrnc'>113</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.12</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.18</td></tr>
<tr><td scope="row" class='awrc'>Effective IO time</td><td align="right" class='awrc'>51,629</td><td align="right" class='awrc'>84.47</td><td align="right" class='awrc'>0.57</td><td align="right" headers="perSecond Average" class='awrclb'>42.23</td><td align="right" headers="perSecond StdDev" class='awrc'>33.50</td><td align="right" headers="perSecond Min" class='awrc'>18.54</td><td align="right" headers="perSecond Max" class='awrcrb'>65.92</td></tr>
<tr><td scope="row" class='awrnc'>HSC Heap Segment Block Changes</td><td align="right" class='awrnc'>2,795,819</td><td align="right" class='awrnc'>4,572.86</td><td align="right" class='awrnc'>30.99</td><td align="right" headers="perSecond Average" class='awrnclb'>2,286.43</td><td align="right" headers="perSecond StdDev" class='awrnc'>598.17</td><td align="right" headers="perSecond Min" class='awrnc'>1,863.46</td><td align="right" headers="perSecond Max" class='awrncrb'>2,709.40</td></tr>
<tr><td scope="row" class='awrc'>Heap Segment Array Inserts</td><td align="right" class='awrc'>418</td><td align="right" class='awrc'>0.68</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.34</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.32</td><td align="right" headers="perSecond Max" class='awrcrb'>0.36</td></tr>
<tr><td scope="row" class='awrnc'>Heap Segment Array Updates</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc req</td><td align="right" class='awrc'>402</td><td align="right" class='awrc'>0.66</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.33</td><td align="right" headers="perSecond StdDev" class='awrc'>0.15</td><td align="right" headers="perSecond Min" class='awrc'>0.22</td><td align="right" headers="perSecond Max" class='awrcrb'>0.43</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc space (block)</td><td align="right" class='awrnc'>389,087,232</td><td align="right" class='awrnc'>636,354.38</td><td align="right" class='awrnc'>4,312.79</td><td align="right" headers="perSecond Average" class='awrnclb'>318,177.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>165,320.37</td><td align="right" headers="perSecond Min" class='awrnc'>201,278.04</td><td align="right" headers="perSecond Max" class='awrncrb'>435,076.35</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc time (ms)</td><td align="right" class='awrc'>1,190,618</td><td align="right" class='awrc'>1,946.89</td><td align="right" class='awrc'>13.20</td><td align="right" headers="perSecond Average" class='awrclb'>973.44</td><td align="right" headers="perSecond StdDev" class='awrc'>1,294.54</td><td align="right" headers="perSecond Min" class='awrc'>58.06</td><td align="right" headers="perSecond Max" class='awrcrb'>1,888.82</td></tr>
<tr><td scope="row" class='awrnc'>KTFB apply req</td><td align="right" class='awrnc'>368</td><td align="right" class='awrnc'>0.60</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.16</td><td align="right" headers="perSecond Min" class='awrnc'>0.19</td><td align="right" headers="perSecond Max" class='awrncrb'>0.41</td></tr>
<tr><td scope="row" class='awrc'>KTFB apply time (ms)</td><td align="right" class='awrc'>11,413</td><td align="right" class='awrc'>18.67</td><td align="right" class='awrc'>0.13</td><td align="right" headers="perSecond Average" class='awrclb'>9.33</td><td align="right" headers="perSecond StdDev" class='awrc'>3.68</td><td align="right" headers="perSecond Min" class='awrc'>6.73</td><td align="right" headers="perSecond Max" class='awrcrb'>11.94</td></tr>
<tr><td scope="row" class='awrnc'>PX local messages recv'd</td><td align="right" class='awrnc'>1,215</td><td align="right" class='awrnc'>1.99</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.99</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.33</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>1.94</td></tr>
<tr><td scope="row" class='awrc'>PX local messages sent</td><td align="right" class='awrc'>1,215</td><td align="right" class='awrc'>1.99</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.99</td><td align="right" headers="perSecond StdDev" class='awrc'>1.33</td><td align="right" headers="perSecond Min" class='awrc'>0.05</td><td align="right" headers="perSecond Max" class='awrcrb'>1.94</td></tr>
<tr><td scope="row" class='awrnc'>PX remote messages recv'd</td><td align="right" class='awrnc'>1,143</td><td align="right" class='awrnc'>1.87</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.93</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.16</td><td align="right" headers="perSecond Min" class='awrnc'>0.82</td><td align="right" headers="perSecond Max" class='awrncrb'>1.05</td></tr>
<tr><td scope="row" class='awrc'>PX remote messages sent</td><td align="right" class='awrc'>1,181</td><td align="right" class='awrc'>1.93</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.97</td><td align="right" headers="perSecond StdDev" class='awrc'>0.12</td><td align="right" headers="perSecond Min" class='awrc'>0.88</td><td align="right" headers="perSecond Max" class='awrcrb'>1.05</td></tr>
<tr><td scope="row" class='awrnc'>Parallel operations not downgraded</td><td align="right" class='awrnc'>173</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.19</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.27</td></tr>
<tr><td scope="row" class='awrc'>Requests to/from client</td><td align="right" class='awrc'>229</td><td align="right" class='awrc'>0.37</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrc'>0.14</td><td align="right" headers="perSecond Min" class='awrc'>0.09</td><td align="right" headers="perSecond Max" class='awrcrb'>0.29</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrnc'>197</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.14</td><td align="right" headers="perSecond Min" class='awrnc'>0.06</td><td align="right" headers="perSecond Max" class='awrncrb'>0.26</td></tr>
<tr><td scope="row" class='awrc'>active txn count during cleanout</td><td align="right" class='awrc'>458</td><td align="right" class='awrc'>0.75</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.37</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.37</td><td align="right" headers="perSecond Max" class='awrcrb'>0.38</td></tr>
<tr><td scope="row" class='awrnc'>application wait time</td><td align="right" class='awrnc'>1,555</td><td align="right" class='awrnc'>2.54</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>1.27</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.79</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>2.54</td></tr>
<tr><td scope="row" class='awrc'>background timeouts</td><td align="right" class='awrc'>10,795</td><td align="right" class='awrc'>17.66</td><td align="right" class='awrc'>0.12</td><td align="right" headers="perSecond Average" class='awrclb'>8.83</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>8.78</td><td align="right" headers="perSecond Max" class='awrcrb'>8.88</td></tr>
<tr><td scope="row" class='awrnc'>blocks cleaned out using minact</td><td align="right" class='awrnc'>1,060,692</td><td align="right" class='awrnc'>1,734.95</td><td align="right" class='awrnc'>11.76</td><td align="right" headers="perSecond Average" class='awrnclb'>867.47</td><td align="right" headers="perSecond StdDev" class='awrnc'>76.99</td><td align="right" headers="perSecond Min" class='awrnc'>813.03</td><td align="right" headers="perSecond Max" class='awrncrb'>921.91</td></tr>
<tr><td scope="row" class='awrc'>buffer is not pinned count</td><td align="right" class='awrc'>192,776</td><td align="right" class='awrc'>315.33</td><td align="right" class='awrc'>2.14</td><td align="right" headers="perSecond Average" class='awrclb'>157.66</td><td align="right" headers="perSecond StdDev" class='awrc'>9.08</td><td align="right" headers="perSecond Min" class='awrc'>151.24</td><td align="right" headers="perSecond Max" class='awrcrb'>164.09</td></tr>
<tr><td scope="row" class='awrnc'>buffer is pinned count</td><td align="right" class='awrnc'>2,818,942</td><td align="right" class='awrnc'>4,610.68</td><td align="right" class='awrnc'>31.25</td><td align="right" headers="perSecond Average" class='awrnclb'>2,305.34</td><td align="right" headers="perSecond StdDev" class='awrnc'>606.83</td><td align="right" headers="perSecond Min" class='awrnc'>1,876.25</td><td align="right" headers="perSecond Max" class='awrncrb'>2,734.43</td></tr>
<tr><td scope="row" class='awrc'>bytes received via SQL*Net from client</td><td align="right" class='awrc'>418,913</td><td align="right" class='awrc'>685.43</td><td align="right" class='awrc'>4.64</td><td align="right" headers="perSecond Average" class='awrclb'>342.72</td><td align="right" headers="perSecond StdDev" class='awrc'>444.91</td><td align="right" headers="perSecond Min" class='awrc'>28.12</td><td align="right" headers="perSecond Max" class='awrcrb'>657.31</td></tr>
<tr><td scope="row" class='awrnc'>bytes sent via SQL*Net to client</td><td align="right" class='awrnc'>42,259</td><td align="right" class='awrnc'>69.13</td><td align="right" class='awrnc'>0.47</td><td align="right" headers="perSecond Average" class='awrnclb'>34.57</td><td align="right" headers="perSecond StdDev" class='awrnc'>21.34</td><td align="right" headers="perSecond Min" class='awrnc'>19.48</td><td align="right" headers="perSecond Max" class='awrncrb'>49.66</td></tr>
<tr><td scope="row" class='awrc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrc'>225,548</td><td align="right" class='awrc'>368.92</td><td align="right" class='awrc'>2.50</td><td align="right" headers="perSecond Average" class='awrclb'>184.46</td><td align="right" headers="perSecond StdDev" class='awrc'>26.89</td><td align="right" headers="perSecond Min" class='awrc'>165.44</td><td align="right" headers="perSecond Max" class='awrcrb'>203.48</td></tr>
<tr><td scope="row" class='awrnc'>calls to kcmgas</td><td align="right" class='awrnc'>132,187</td><td align="right" class='awrnc'>216.22</td><td align="right" class='awrnc'>1.47</td><td align="right" headers="perSecond Average" class='awrnclb'>108.11</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.47</td><td align="right" headers="perSecond Min" class='awrnc'>107.07</td><td align="right" headers="perSecond Max" class='awrncrb'>109.15</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgcs</td><td align="right" class='awrc'>8,495</td><td align="right" class='awrc'>13.90</td><td align="right" class='awrc'>0.09</td><td align="right" headers="perSecond Average" class='awrclb'>6.95</td><td align="right" headers="perSecond StdDev" class='awrc'>0.29</td><td align="right" headers="perSecond Min" class='awrc'>6.74</td><td align="right" headers="perSecond Max" class='awrcrb'>7.15</td></tr>
<tr><td scope="row" class='awrnc'>cell physical IO interconnect bytes</td><td align="right" class='awrnc'>74,865,987,072</td><td align="right" class='awrnc'>122,447,201.17</td><td align="right" class='awrnc'>829,843.46</td><td align="right" headers="perSecond Average" class='awrnclb'>61,223,600.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>24,563,209.71</td><td align="right" headers="perSecond Min" class='awrnc'>43,854,788.43</td><td align="right" headers="perSecond Max" class='awrncrb'>78,592,412.74</td></tr>
<tr><td scope="row" class='awrc'>change write time</td><td align="right" class='awrc'>5,496</td><td align="right" class='awrc'>8.99</td><td align="right" class='awrc'>0.06</td><td align="right" headers="perSecond Average" class='awrclb'>4.49</td><td align="right" headers="perSecond StdDev" class='awrc'>0.90</td><td align="right" headers="perSecond Min" class='awrc'>3.86</td><td align="right" headers="perSecond Max" class='awrcrb'>5.13</td></tr>
<tr><td scope="row" class='awrnc'>cleanout - number of ktugct calls</td><td align="right" class='awrnc'>507</td><td align="right" class='awrnc'>0.83</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.41</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.41</td><td align="right" headers="perSecond Max" class='awrncrb'>0.42</td></tr>
<tr><td scope="row" class='awrc'>cleanouts only - consistent read gets</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>cluster key scan block gets</td><td align="right" class='awrnc'>9,514</td><td align="right" class='awrnc'>15.56</td><td align="right" class='awrnc'>0.11</td><td align="right" headers="perSecond Average" class='awrnclb'>7.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.95</td><td align="right" headers="perSecond Min" class='awrnc'>5.70</td><td align="right" headers="perSecond Max" class='awrncrb'>9.87</td></tr>
<tr><td scope="row" class='awrc'>cluster key scans</td><td align="right" class='awrc'>6,851</td><td align="right" class='awrc'>11.21</td><td align="right" class='awrc'>0.08</td><td align="right" headers="perSecond Average" class='awrclb'>5.60</td><td align="right" headers="perSecond StdDev" class='awrc'>2.44</td><td align="right" headers="perSecond Min" class='awrc'>3.88</td><td align="right" headers="perSecond Max" class='awrcrb'>7.33</td></tr>
<tr><td scope="row" class='awrnc'>cluster wait time</td><td align="right" class='awrnc'>97,322</td><td align="right" class='awrnc'>159.21</td><td align="right" class='awrnc'>1.08</td><td align="right" headers="perSecond Average" class='awrnclb'>79.60</td><td align="right" headers="perSecond StdDev" class='awrnc'>39.17</td><td align="right" headers="perSecond Min" class='awrnc'>51.91</td><td align="right" headers="perSecond Max" class='awrncrb'>107.30</td></tr>
<tr><td scope="row" class='awrc'>commit batch/immediate performed</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit batch/immediate requested</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: block lost</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: buffer being written</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.08</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: callback failure</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: cannot pin</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanouts</td><td align="right" class='awrc'>2,795,806</td><td align="right" class='awrc'>4,572.84</td><td align="right" class='awrc'>30.99</td><td align="right" headers="perSecond Average" class='awrclb'>2,286.42</td><td align="right" headers="perSecond StdDev" class='awrc'>597.63</td><td align="right" headers="perSecond Min" class='awrc'>1,863.83</td><td align="right" headers="perSecond Max" class='awrcrb'>2,709.01</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanouts successfully completed</td><td align="right" class='awrnc'>2,795,695</td><td align="right" class='awrnc'>4,572.66</td><td align="right" class='awrnc'>30.99</td><td align="right" headers="perSecond Average" class='awrnclb'>2,286.33</td><td align="right" headers="perSecond StdDev" class='awrnc'>597.59</td><td align="right" headers="perSecond Min" class='awrnc'>1,863.77</td><td align="right" headers="perSecond Max" class='awrncrb'>2,708.88</td></tr>
<tr><td scope="row" class='awrc'>commit immediate performed</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit immediate requested</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit txn count during cleanout</td><td align="right" class='awrc'>254</td><td align="right" class='awrc'>0.42</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.21</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.20</td><td align="right" headers="perSecond Max" class='awrcrb'>0.21</td></tr>
<tr><td scope="row" class='awrnc'>concurrency wait time</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.14</td></tr>
<tr><td scope="row" class='awrc'>consistent changes</td><td align="right" class='awrc'>2,776</td><td align="right" class='awrc'>4.54</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>2.27</td><td align="right" headers="perSecond StdDev" class='awrc'>3.01</td><td align="right" headers="perSecond Min" class='awrc'>0.15</td><td align="right" headers="perSecond Max" class='awrcrb'>4.40</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets</td><td align="right" class='awrnc'>431,258</td><td align="right" class='awrnc'>705.40</td><td align="right" class='awrnc'>4.78</td><td align="right" headers="perSecond Average" class='awrnclb'>352.70</td><td align="right" headers="perSecond StdDev" class='awrnc'>28.50</td><td align="right" headers="perSecond Min" class='awrnc'>332.55</td><td align="right" headers="perSecond Max" class='awrncrb'>372.85</td></tr>
<tr><td scope="row" class='awrc'>consistent gets examination</td><td align="right" class='awrc'>243,361</td><td align="right" class='awrc'>398.06</td><td align="right" class='awrc'>2.70</td><td align="right" headers="perSecond Average" class='awrclb'>199.03</td><td align="right" headers="perSecond StdDev" class='awrc'>23.24</td><td align="right" headers="perSecond Min" class='awrc'>182.59</td><td align="right" headers="perSecond Max" class='awrcrb'>215.46</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets examination (fastpath)</td><td align="right" class='awrnc'>242,119</td><td align="right" class='awrnc'>396.02</td><td align="right" class='awrnc'>2.68</td><td align="right" headers="perSecond Average" class='awrnclb'>198.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>24.02</td><td align="right" headers="perSecond Min" class='awrnc'>181.03</td><td align="right" headers="perSecond Max" class='awrncrb'>215.00</td></tr>
<tr><td scope="row" class='awrc'>consistent gets from cache</td><td align="right" class='awrc'>431,258</td><td align="right" class='awrc'>705.40</td><td align="right" class='awrc'>4.78</td><td align="right" headers="perSecond Average" class='awrclb'>352.70</td><td align="right" headers="perSecond StdDev" class='awrc'>28.50</td><td align="right" headers="perSecond Min" class='awrc'>332.55</td><td align="right" headers="perSecond Max" class='awrcrb'>372.85</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets pin</td><td align="right" class='awrnc'>187,897</td><td align="right" class='awrnc'>307.34</td><td align="right" class='awrnc'>2.08</td><td align="right" headers="perSecond Average" class='awrnclb'>153.67</td><td align="right" headers="perSecond StdDev" class='awrnc'>5.26</td><td align="right" headers="perSecond Min" class='awrnc'>149.95</td><td align="right" headers="perSecond Max" class='awrncrb'>157.39</td></tr>
<tr><td scope="row" class='awrc'>consistent gets pin (fastpath)</td><td align="right" class='awrc'>156,076</td><td align="right" class='awrc'>255.28</td><td align="right" class='awrc'>1.73</td><td align="right" headers="perSecond Average" class='awrclb'>127.64</td><td align="right" headers="perSecond StdDev" class='awrc'>28.61</td><td align="right" headers="perSecond Min" class='awrc'>107.41</td><td align="right" headers="perSecond Max" class='awrcrb'>147.87</td></tr>
<tr><td scope="row" class='awrnc'>cursor authentications</td><td align="right" class='awrnc'>417</td><td align="right" class='awrnc'>0.68</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.34</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.29</td><td align="right" headers="perSecond Max" class='awrncrb'>0.40</td></tr>
<tr><td scope="row" class='awrc'>cursor reload failures</td><td align="right" class='awrc'>67</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.05</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>5,918,884</td><td align="right" class='awrc'>9,680.97</td><td align="right" class='awrc'>65.61</td><td align="right" headers="perSecond Average" class='awrclb'>4,840.48</td><td align="right" headers="perSecond StdDev" class='awrc'>1,260.05</td><td align="right" headers="perSecond Min" class='awrc'>3,949.50</td><td align="right" headers="perSecond Max" class='awrcrb'>5,731.47</td></tr>
<tr><td scope="row" class='awrnc'>db block gets</td><td align="right" class='awrnc'>3,253,337</td><td align="right" class='awrnc'>5,321.18</td><td align="right" class='awrnc'>36.06</td><td align="right" headers="perSecond Average" class='awrnclb'>2,660.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>683.03</td><td align="right" headers="perSecond Min" class='awrnc'>2,177.62</td><td align="right" headers="perSecond Max" class='awrncrb'>3,143.57</td></tr>
<tr><td scope="row" class='awrc'>db block gets direct</td><td align="right" class='awrc'>892</td><td align="right" class='awrc'>1.46</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.73</td><td align="right" headers="perSecond StdDev" class='awrc'>0.91</td><td align="right" headers="perSecond Min" class='awrc'>0.09</td><td align="right" headers="perSecond Max" class='awrcrb'>1.37</td></tr>
<tr><td scope="row" class='awrnc'>db block gets from cache</td><td align="right" class='awrnc'>3,252,444</td><td align="right" class='awrnc'>5,319.72</td><td align="right" class='awrnc'>36.05</td><td align="right" headers="perSecond Average" class='awrnclb'>2,659.86</td><td align="right" headers="perSecond StdDev" class='awrnc'>683.94</td><td align="right" headers="perSecond Min" class='awrnc'>2,176.25</td><td align="right" headers="perSecond Max" class='awrncrb'>3,143.48</td></tr>
<tr><td scope="row" class='awrc'>db block gets from cache (fastpath)</td><td align="right" class='awrc'>428,622</td><td align="right" class='awrc'>701.06</td><td align="right" class='awrc'>4.75</td><td align="right" headers="perSecond Average" class='awrclb'>350.53</td><td align="right" headers="perSecond StdDev" class='awrc'>94.39</td><td align="right" headers="perSecond Min" class='awrc'>283.79</td><td align="right" headers="perSecond Max" class='awrcrb'>417.27</td></tr>
<tr><td scope="row" class='awrnc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>1,082,267</td><td align="right" class='awrnc'>1,770.23</td><td align="right" class='awrnc'>12.00</td><td align="right" headers="perSecond Average" class='awrnclb'>885.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>87.12</td><td align="right" headers="perSecond Min" class='awrnc'>823.51</td><td align="right" headers="perSecond Max" class='awrncrb'>946.72</td></tr>
<tr><td scope="row" class='awrc'>dirty buffers inspected</td><td align="right" class='awrc'>1,554,150</td><td align="right" class='awrc'>2,541.30</td><td align="right" class='awrc'>17.23</td><td align="right" headers="perSecond Average" class='awrclb'>1,270.65</td><td align="right" headers="perSecond StdDev" class='awrc'>1,750.88</td><td align="right" headers="perSecond Min" class='awrc'>32.59</td><td align="right" headers="perSecond Max" class='awrcrb'>2,508.71</td></tr>
<tr><td scope="row" class='awrnc'>enqueue conversions</td><td align="right" class='awrnc'>1,622</td><td align="right" class='awrnc'>2.65</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>1.33</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.15</td><td align="right" headers="perSecond Min" class='awrnc'>0.52</td><td align="right" headers="perSecond Max" class='awrncrb'>2.14</td></tr>
<tr><td scope="row" class='awrc'>enqueue releases</td><td align="right" class='awrc'>205,645</td><td align="right" class='awrc'>336.36</td><td align="right" class='awrc'>2.28</td><td align="right" headers="perSecond Average" class='awrclb'>168.18</td><td align="right" headers="perSecond StdDev" class='awrc'>37.78</td><td align="right" headers="perSecond Min" class='awrc'>141.46</td><td align="right" headers="perSecond Max" class='awrcrb'>194.90</td></tr>
<tr><td scope="row" class='awrnc'>enqueue requests</td><td align="right" class='awrnc'>205,571</td><td align="right" class='awrnc'>336.24</td><td align="right" class='awrnc'>2.28</td><td align="right" headers="perSecond Average" class='awrnclb'>168.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>37.79</td><td align="right" headers="perSecond Min" class='awrnc'>141.40</td><td align="right" headers="perSecond Max" class='awrncrb'>194.84</td></tr>
<tr><td scope="row" class='awrc'>enqueue timeouts</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>enqueue waits</td><td align="right" class='awrnc'>947</td><td align="right" class='awrnc'>1.55</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.77</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.14</td><td align="right" headers="perSecond Min" class='awrnc'>0.68</td><td align="right" headers="perSecond Max" class='awrncrb'>0.87</td></tr>
<tr><td scope="row" class='awrc'>exchange deadlocks</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>120,021</td><td align="right" class='awrnc'>196.31</td><td align="right" class='awrnc'>1.33</td><td align="right" headers="perSecond Average" class='awrnclb'>98.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>12.74</td><td align="right" headers="perSecond Min" class='awrnc'>89.15</td><td align="right" headers="perSecond Max" class='awrncrb'>107.16</td></tr>
<tr><td scope="row" class='awrc'>file io service time</td><td align="right" class='awrc'>210,257,402</td><td align="right" class='awrc'>343,969.15</td><td align="right" class='awrc'>2,330.57</td><td align="right" headers="perSecond Average" class='awrclb'>171,984.57</td><td align="right" headers="perSecond StdDev" class='awrc'>103,665.26</td><td align="right" headers="perSecond Min" class='awrc'>98,682.16</td><td align="right" headers="perSecond Max" class='awrcrb'>245,286.98</td></tr>
<tr><td scope="row" class='awrnc'>file io wait time</td><td align="right" class='awrnc'>2,355,430,369,317</td><td align="right" class='awrnc'>3,851,922,993.88</td><td align="right" class='awrnc'>26,108,498.06</td><td align="right" headers="perSecond Average" class='awrnclb'>1,925,961,496.94</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,833,450,555.65</td><td align="right" headers="perSecond Min" class='awrnc'>629,516,176.07</td><td align="right" headers="perSecond Max" class='awrncrb'>3,222,406,817.81</td></tr>
<tr><td scope="row" class='awrc'>free buffer inspected</td><td align="right" class='awrc'>2,995,762</td><td align="right" class='awrc'>4,899.34</td><td align="right" class='awrc'>33.21</td><td align="right" headers="perSecond Average" class='awrclb'>2,449.67</td><td align="right" headers="perSecond StdDev" class='awrc'>1,797.15</td><td align="right" headers="perSecond Min" class='awrc'>1,178.89</td><td align="right" headers="perSecond Max" class='awrcrb'>3,720.44</td></tr>
<tr><td scope="row" class='awrnc'>free buffer requested</td><td align="right" class='awrnc'>3,434,984</td><td align="right" class='awrnc'>5,618.03</td><td align="right" class='awrnc'>38.07</td><td align="right" headers="perSecond Average" class='awrnclb'>2,809.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,265.28</td><td align="right" headers="perSecond Min" class='awrnc'>1,914.33</td><td align="right" headers="perSecond Max" class='awrncrb'>3,703.70</td></tr>
<tr><td scope="row" class='awrc'>gc blocks compressed</td><td align="right" class='awrc'>18,176</td><td align="right" class='awrc'>29.73</td><td align="right" class='awrc'>0.20</td><td align="right" headers="perSecond Average" class='awrclb'>14.86</td><td align="right" headers="perSecond StdDev" class='awrc'>5.53</td><td align="right" headers="perSecond Min" class='awrc'>10.95</td><td align="right" headers="perSecond Max" class='awrcrb'>18.77</td></tr>
<tr><td scope="row" class='awrnc'>gc blocks lost</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc cleanout saved</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks created</td><td align="right" class='awrnc'>55,739</td><td align="right" class='awrnc'>91.17</td><td align="right" class='awrnc'>0.62</td><td align="right" headers="perSecond Average" class='awrnclb'>45.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.13</td><td align="right" headers="perSecond Min" class='awrnc'>45.50</td><td align="right" headers="perSecond Max" class='awrncrb'>45.68</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks shrunk</td><td align="right" class='awrc'>177</td><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.14</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.25</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block build time</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block flush time</td><td align="right" class='awrc'>265</td><td align="right" class='awrc'>0.43</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.22</td><td align="right" headers="perSecond StdDev" class='awrc'>0.12</td><td align="right" headers="perSecond Min" class='awrc'>0.13</td><td align="right" headers="perSecond Max" class='awrcrb'>0.30</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block receive time</td><td align="right" class='awrnc'>413</td><td align="right" class='awrnc'>0.68</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.34</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.17</td><td align="right" headers="perSecond Min" class='awrnc'>0.22</td><td align="right" headers="perSecond Max" class='awrncrb'>0.46</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks built</td><td align="right" class='awrc'>525</td><td align="right" class='awrc'>0.86</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.43</td><td align="right" headers="perSecond StdDev" class='awrc'>0.32</td><td align="right" headers="perSecond Min" class='awrc'>0.20</td><td align="right" headers="perSecond Max" class='awrcrb'>0.65</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks flushed</td><td align="right" class='awrnc'>81</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.12</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks received</td><td align="right" class='awrc'>1,939</td><td align="right" class='awrc'>3.17</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>1.59</td><td align="right" headers="perSecond StdDev" class='awrc'>1.17</td><td align="right" headers="perSecond Min" class='awrc'>0.76</td><td align="right" headers="perSecond Max" class='awrcrb'>2.41</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks served</td><td align="right" class='awrnc'>1,956</td><td align="right" class='awrnc'>3.20</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>1.60</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.17</td><td align="right" headers="perSecond Min" class='awrnc'>0.78</td><td align="right" headers="perSecond Max" class='awrncrb'>2.42</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grant time</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multiblock grants received</td><td align="right" class='awrnc'>81</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.12</td></tr>
<tr><td scope="row" class='awrc'>gc current block flush time</td><td align="right" class='awrc'>561</td><td align="right" class='awrc'>0.92</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.46</td><td align="right" headers="perSecond StdDev" class='awrc'>0.48</td><td align="right" headers="perSecond Min" class='awrc'>0.12</td><td align="right" headers="perSecond Max" class='awrcrb'>0.80</td></tr>
<tr><td scope="row" class='awrnc'>gc current block pin time</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>3,997</td><td align="right" class='awrc'>6.54</td><td align="right" class='awrc'>0.04</td><td align="right" headers="perSecond Average" class='awrclb'>3.27</td><td align="right" headers="perSecond StdDev" class='awrc'>3.40</td><td align="right" headers="perSecond Min" class='awrc'>0.87</td><td align="right" headers="perSecond Max" class='awrcrb'>5.67</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks flushed</td><td align="right" class='awrnc'>63</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks pinned</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>37,394</td><td align="right" class='awrnc'>61.18</td><td align="right" class='awrnc'>0.41</td><td align="right" headers="perSecond Average" class='awrnclb'>30.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>28.98</td><td align="right" headers="perSecond Min" class='awrnc'>10.10</td><td align="right" headers="perSecond Max" class='awrncrb'>51.08</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks served</td><td align="right" class='awrc'>37,304</td><td align="right" class='awrc'>61.00</td><td align="right" class='awrc'>0.41</td><td align="right" headers="perSecond Average" class='awrclb'>30.50</td><td align="right" headers="perSecond StdDev" class='awrc'>29.13</td><td align="right" headers="perSecond Min" class='awrc'>9.91</td><td align="right" headers="perSecond Max" class='awrcrb'>51.10</td></tr>
<tr><td scope="row" class='awrnc'>gc force cr read cr</td><td align="right" class='awrnc'>81</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.09</td></tr>
<tr><td scope="row" class='awrc'>gc force cr read current</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes saved</td><td align="right" class='awrnc'>78,689</td><td align="right" class='awrnc'>128.70</td><td align="right" class='awrnc'>0.87</td><td align="right" headers="perSecond Average" class='awrnclb'>64.35</td><td align="right" headers="perSecond StdDev" class='awrnc'>21.79</td><td align="right" headers="perSecond Min" class='awrnc'>48.94</td><td align="right" headers="perSecond Max" class='awrncrb'>79.76</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes sent</td><td align="right" class='awrc'>235,391</td><td align="right" class='awrc'>384.93</td><td align="right" class='awrc'>2.61</td><td align="right" headers="perSecond Average" class='awrclb'>192.47</td><td align="right" headers="perSecond StdDev" class='awrc'>201.89</td><td align="right" headers="perSecond Min" class='awrc'>49.71</td><td align="right" headers="perSecond Max" class='awrcrb'>335.23</td></tr>
<tr><td scope="row" class='awrnc'>gc local grants</td><td align="right" class='awrnc'>1,512,837</td><td align="right" class='awrnc'>2,474.12</td><td align="right" class='awrnc'>16.77</td><td align="right" headers="perSecond Average" class='awrnclb'>1,237.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>914.93</td><td align="right" headers="perSecond Min" class='awrnc'>590.11</td><td align="right" headers="perSecond Max" class='awrncrb'>1,884.02</td></tr>
<tr><td scope="row" class='awrc'>gc merge pi bg</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc merge pi fg</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.09</td></tr>
<tr><td scope="row" class='awrc'>gc no change made</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gc read time waited</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc read waits</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass grants</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass waits</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc remote grants</td><td align="right" class='awrnc'>1,276,216</td><td align="right" class='awrnc'>2,087.67</td><td align="right" class='awrnc'>14.15</td><td align="right" headers="perSecond Average" class='awrnclb'>1,043.84</td><td align="right" headers="perSecond StdDev" class='awrnc'>327.86</td><td align="right" headers="perSecond Min" class='awrnc'>812.01</td><td align="right" headers="perSecond Max" class='awrncrb'>1,275.67</td></tr>
<tr><td scope="row" class='awrc'>gc status messages received</td><td align="right" class='awrc'>1,186,444</td><td align="right" class='awrc'>1,940.80</td><td align="right" class='awrc'>13.15</td><td align="right" headers="perSecond Average" class='awrclb'>970.40</td><td align="right" headers="perSecond StdDev" class='awrc'>251.65</td><td align="right" headers="perSecond Min" class='awrc'>792.46</td><td align="right" headers="perSecond Max" class='awrcrb'>1,148.34</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages sent</td><td align="right" class='awrnc'>1,187,013</td><td align="right" class='awrnc'>1,941.48</td><td align="right" class='awrnc'>13.16</td><td align="right" headers="perSecond Average" class='awrnclb'>970.74</td><td align="right" headers="perSecond StdDev" class='awrnc'>256.30</td><td align="right" headers="perSecond Min" class='awrnc'>789.51</td><td align="right" headers="perSecond Max" class='awrncrb'>1,151.97</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity lock failures</td><td align="right" class='awrc'>1,532</td><td align="right" class='awrc'>2.51</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>1.25</td><td align="right" headers="perSecond StdDev" class='awrc'>1.41</td><td align="right" headers="perSecond Min" class='awrc'>0.26</td><td align="right" headers="perSecond Max" class='awrcrb'>2.25</td></tr>
<tr><td scope="row" class='awrnc'>gcs affinity lock grants</td><td align="right" class='awrnc'>860,779</td><td align="right" class='awrnc'>1,407.62</td><td align="right" class='awrnc'>9.54</td><td align="right" headers="perSecond Average" class='awrnclb'>703.81</td><td align="right" headers="perSecond StdDev" class='awrnc'>759.62</td><td align="right" headers="perSecond Min" class='awrnc'>166.68</td><td align="right" headers="perSecond Max" class='awrncrb'>1,240.94</td></tr>
<tr><td scope="row" class='awrc'>gcs anti-locks created</td><td align="right" class='awrc'>55,717</td><td align="right" class='awrc'>91.14</td><td align="right" class='awrc'>0.62</td><td align="right" headers="perSecond Average" class='awrclb'>45.57</td><td align="right" headers="perSecond StdDev" class='awrc'>0.15</td><td align="right" headers="perSecond Min" class='awrc'>45.46</td><td align="right" headers="perSecond Max" class='awrcrb'>45.68</td></tr>
<tr><td scope="row" class='awrnc'>gcs data block access records</td><td align="right" class='awrnc'>2,768,841</td><td align="right" class='awrnc'>4,528.73</td><td align="right" class='awrnc'>30.69</td><td align="right" headers="perSecond Average" class='awrnclb'>2,264.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>595.33</td><td align="right" headers="perSecond Min" class='awrnc'>1,843.40</td><td align="right" headers="perSecond Max" class='awrncrb'>2,685.33</td></tr>
<tr><td scope="row" class='awrc'>gcs messages sent</td><td align="right" class='awrc'>3,682,016</td><td align="right" class='awrc'>6,022.97</td><td align="right" class='awrc'>40.81</td><td align="right" headers="perSecond Average" class='awrclb'>3,011.48</td><td align="right" headers="perSecond StdDev" class='awrc'>553.29</td><td align="right" headers="perSecond Min" class='awrc'>2,620.25</td><td align="right" headers="perSecond Max" class='awrcrb'>3,402.72</td></tr>
<tr><td scope="row" class='awrnc'>gcs read-mostly lock failures</td><td align="right" class='awrnc'>54,555</td><td align="right" class='awrnc'>89.27</td><td align="right" class='awrnc'>0.60</td><td align="right" headers="perSecond Average" class='awrnclb'>89.27</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>89.27</td><td align="right" headers="perSecond Max" class='awrncrb'>89.27</td></tr>
<tr><td scope="row" class='awrc'>ges messages sent</td><td align="right" class='awrc'>40,812</td><td align="right" class='awrc'>66.75</td><td align="right" class='awrc'>0.45</td><td align="right" headers="perSecond Average" class='awrclb'>33.37</td><td align="right" headers="perSecond StdDev" class='awrc'>21.63</td><td align="right" headers="perSecond Min" class='awrc'>18.08</td><td align="right" headers="perSecond Max" class='awrcrb'>48.67</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue get time</td><td align="right" class='awrnc'>2,468</td><td align="right" class='awrnc'>4.04</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>2.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.82</td><td align="right" headers="perSecond Min" class='awrnc'>0.73</td><td align="right" headers="perSecond Max" class='awrncrb'>3.31</td></tr>
<tr><td scope="row" class='awrc'>global enqueue gets sync</td><td align="right" class='awrc'>225,816</td><td align="right" class='awrc'>369.38</td><td align="right" class='awrc'>2.50</td><td align="right" headers="perSecond Average" class='awrclb'>184.69</td><td align="right" headers="perSecond StdDev" class='awrc'>22.95</td><td align="right" headers="perSecond Min" class='awrc'>168.46</td><td align="right" headers="perSecond Max" class='awrcrb'>200.92</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue releases</td><td align="right" class='awrnc'>224,475</td><td align="right" class='awrnc'>367.19</td><td align="right" class='awrnc'>2.49</td><td align="right" headers="perSecond Average" class='awrnclb'>183.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>21.83</td><td align="right" headers="perSecond Min" class='awrnc'>168.16</td><td align="right" headers="perSecond Max" class='awrncrb'>199.03</td></tr>
<tr><td scope="row" class='awrc'>heap block compress</td><td align="right" class='awrc'>28,331</td><td align="right" class='awrc'>46.34</td><td align="right" class='awrc'>0.31</td><td align="right" headers="perSecond Average" class='awrclb'>23.17</td><td align="right" headers="perSecond StdDev" class='awrc'>1.73</td><td align="right" headers="perSecond Min" class='awrc'>21.95</td><td align="right" headers="perSecond Max" class='awrcrb'>24.39</td></tr>
<tr><td scope="row" class='awrnc'>hot buffers moved to head of LRU</td><td align="right" class='awrnc'>112,992</td><td align="right" class='awrnc'>184.80</td><td align="right" class='awrnc'>1.25</td><td align="right" headers="perSecond Average" class='awrnclb'>92.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>43.66</td><td align="right" headers="perSecond Min" class='awrnc'>61.52</td><td align="right" headers="perSecond Max" class='awrncrb'>123.28</td></tr>
<tr><td scope="row" class='awrc'>immediate (CR) block cleanout applications</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>493</td><td align="right" class='awrnc'>0.81</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.37</td><td align="right" headers="perSecond Max" class='awrncrb'>0.44</td></tr>
<tr><td scope="row" class='awrc'>in call idle wait time</td><td align="right" class='awrc'>9,837,852</td><td align="right" class='awrc'>16,091.96</td><td align="right" class='awrc'>109.05</td><td align="right" headers="perSecond Average" class='awrclb'>8,045.98</td><td align="right" headers="perSecond StdDev" class='awrc'>225.77</td><td align="right" headers="perSecond Min" class='awrc'>7,886.34</td><td align="right" headers="perSecond Max" class='awrcrb'>8,205.63</td></tr>
<tr><td scope="row" class='awrnc'>index crx upgrade (positioned)</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.10</td><td align="right" headers="perSecond Max" class='awrncrb'>0.10</td></tr>
<tr><td scope="row" class='awrc'>index fast full scans (full)</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>index fetch by key</td><td align="right" class='awrnc'>19,947</td><td align="right" class='awrnc'>32.63</td><td align="right" class='awrnc'>0.22</td><td align="right" headers="perSecond Average" class='awrnclb'>16.31</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.69</td><td align="right" headers="perSecond Min" class='awrnc'>13.71</td><td align="right" headers="perSecond Max" class='awrncrb'>18.92</td></tr>
<tr><td scope="row" class='awrc'>index range scans</td><td align="right" class='awrc'>108,391</td><td align="right" class='awrc'>177.29</td><td align="right" class='awrc'>1.20</td><td align="right" headers="perSecond Average" class='awrclb'>88.64</td><td align="right" headers="perSecond StdDev" class='awrc'>13.65</td><td align="right" headers="perSecond Min" class='awrc'>78.99</td><td align="right" headers="perSecond Max" class='awrcrb'>98.30</td></tr>
<tr><td scope="row" class='awrnc'>leaf node 90-10 splits</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>leaf node splits</td><td align="right" class='awrc'>170</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>lob reads</td><td align="right" class='awrnc'>401</td><td align="right" class='awrnc'>0.66</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.33</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.46</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.65</td></tr>
<tr><td scope="row" class='awrc'>lob writes</td><td align="right" class='awrc'>916</td><td align="right" class='awrc'>1.50</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.75</td><td align="right" headers="perSecond StdDev" class='awrc'>1.04</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>1.49</td></tr>
<tr><td scope="row" class='awrnc'>lob writes unaligned</td><td align="right" class='awrnc'>915</td><td align="right" class='awrnc'>1.50</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.75</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>1.48</td></tr>
<tr><td scope="row" class='awrc'>logical read bytes from cache</td><td align="right" class='awrc'>30,176,878,592</td><td align="right" class='awrc'>49,357,785.51</td><td align="right" class='awrc'>334,492.15</td><td align="right" headers="perSecond Average" class='awrclb'>24,678,892.76</td><td align="right" headers="perSecond StdDev" class='awrc'>5,836,278.05</td><td align="right" headers="perSecond Min" class='awrc'>20,552,020.97</td><td align="right" headers="perSecond Max" class='awrcrb'>28,805,764.54</td></tr>
<tr><td scope="row" class='awrnc'>logons cumulative</td><td align="right" class='awrnc'>352</td><td align="right" class='awrnc'>0.58</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.29</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.29</td><td align="right" headers="perSecond Max" class='awrncrb'>0.29</td></tr>
<tr><td scope="row" class='awrc'>max cf enq hold time</td><td align="right" class='awrc'>717</td><td align="right" class='awrc'>1.17</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.17</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>1.17</td><td align="right" headers="perSecond Max" class='awrcrb'>1.17</td></tr>
<tr><td scope="row" class='awrnc'>messages received</td><td align="right" class='awrnc'>101,918</td><td align="right" class='awrnc'>166.74</td><td align="right" class='awrnc'>1.13</td><td align="right" headers="perSecond Average" class='awrnclb'>83.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>76.49</td><td align="right" headers="perSecond Min" class='awrnc'>29.28</td><td align="right" headers="perSecond Max" class='awrncrb'>137.46</td></tr>
<tr><td scope="row" class='awrc'>messages sent</td><td align="right" class='awrc'>101,916</td><td align="right" class='awrc'>166.74</td><td align="right" class='awrc'>1.13</td><td align="right" headers="perSecond Average" class='awrclb'>83.37</td><td align="right" headers="perSecond StdDev" class='awrc'>76.49</td><td align="right" headers="perSecond Min" class='awrc'>29.28</td><td align="right" headers="perSecond Max" class='awrcrb'>137.46</td></tr>
<tr><td scope="row" class='awrnc'>no work - consistent read gets</td><td align="right" class='awrnc'>176,174</td><td align="right" class='awrnc'>288.17</td><td align="right" class='awrnc'>1.95</td><td align="right" headers="perSecond Average" class='awrnclb'>144.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>4.97</td><td align="right" headers="perSecond Min" class='awrnc'>140.57</td><td align="right" headers="perSecond Max" class='awrncrb'>147.60</td></tr>
<tr><td scope="row" class='awrc'>non-idle wait count</td><td align="right" class='awrc'>7,003,657</td><td align="right" class='awrc'>11,455.41</td><td align="right" class='awrc'>77.63</td><td align="right" headers="perSecond Average" class='awrclb'>5,727.71</td><td align="right" headers="perSecond StdDev" class='awrc'>1,105.58</td><td align="right" headers="perSecond Min" class='awrc'>4,945.94</td><td align="right" headers="perSecond Max" class='awrcrb'>6,509.47</td></tr>
<tr><td scope="row" class='awrnc'>non-idle wait time</td><td align="right" class='awrnc'>2,038,935</td><td align="right" class='awrnc'>3,335.19</td><td align="right" class='awrnc'>22.60</td><td align="right" headers="perSecond Average" class='awrnclb'>1,667.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>175.90</td><td align="right" headers="perSecond Min" class='awrnc'>1,543.21</td><td align="right" headers="perSecond Max" class='awrncrb'>1,791.97</td></tr>
<tr><td scope="row" class='awrc'>opened cursors cumulative</td><td align="right" class='awrc'>210,122</td><td align="right" class='awrc'>343.68</td><td align="right" class='awrc'>2.33</td><td align="right" headers="perSecond Average" class='awrclb'>171.84</td><td align="right" headers="perSecond StdDev" class='awrc'>32.18</td><td align="right" headers="perSecond Min" class='awrc'>149.08</td><td align="right" headers="perSecond Max" class='awrcrb'>194.60</td></tr>
<tr><td scope="row" class='awrnc'>parse count (describe)</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>parse count (failures)</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse count (hard)</td><td align="right" class='awrnc'>1,825</td><td align="right" class='awrnc'>2.99</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>1.49</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.17</td><td align="right" headers="perSecond Min" class='awrnc'>1.37</td><td align="right" headers="perSecond Max" class='awrncrb'>1.61</td></tr>
<tr><td scope="row" class='awrc'>parse count (total)</td><td align="right" class='awrc'>9,070</td><td align="right" class='awrc'>14.84</td><td align="right" class='awrc'>0.10</td><td align="right" headers="perSecond Average" class='awrclb'>7.42</td><td align="right" headers="perSecond StdDev" class='awrc'>1.08</td><td align="right" headers="perSecond Min" class='awrc'>6.65</td><td align="right" headers="perSecond Max" class='awrcrb'>8.18</td></tr>
<tr><td scope="row" class='awrnc'>parse time cpu</td><td align="right" class='awrnc'>426</td><td align="right" class='awrnc'>0.70</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.35</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.06</td><td align="right" headers="perSecond Min" class='awrnc'>0.31</td><td align="right" headers="perSecond Max" class='awrncrb'>0.39</td></tr>
<tr><td scope="row" class='awrc'>parse time elapsed</td><td align="right" class='awrc'>1,079</td><td align="right" class='awrc'>1.77</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.88</td><td align="right" headers="perSecond StdDev" class='awrc'>0.47</td><td align="right" headers="perSecond Min" class='awrc'>0.55</td><td align="right" headers="perSecond Max" class='awrcrb'>1.21</td></tr>
<tr><td scope="row" class='awrnc'>physical read IO requests</td><td align="right" class='awrnc'>2,671,411</td><td align="right" class='awrnc'>4,369.38</td><td align="right" class='awrnc'>29.61</td><td align="right" headers="perSecond Average" class='awrnclb'>2,184.69</td><td align="right" headers="perSecond StdDev" class='awrnc'>558.91</td><td align="right" headers="perSecond Min" class='awrnc'>1,789.48</td><td align="right" headers="perSecond Max" class='awrncrb'>2,579.90</td></tr>
<tr><td scope="row" class='awrc'>physical read bytes</td><td align="right" class='awrc'>21,890,908,160</td><td align="right" class='awrc'>35,804,958.81</td><td align="right" class='awrc'>242,647.26</td><td align="right" headers="perSecond Average" class='awrclb'>17,902,479.41</td><td align="right" headers="perSecond StdDev" class='awrc'>4,571,340.25</td><td align="right" headers="perSecond Min" class='awrc'>14,670,053.72</td><td align="right" headers="perSecond Max" class='awrcrb'>21,134,905.10</td></tr>
<tr><td scope="row" class='awrnc'>physical read total IO requests</td><td align="right" class='awrnc'>2,681,930</td><td align="right" class='awrnc'>4,386.59</td><td align="right" class='awrnc'>29.73</td><td align="right" headers="perSecond Average" class='awrnclb'>2,193.29</td><td align="right" headers="perSecond StdDev" class='awrnc'>558.75</td><td align="right" headers="perSecond Min" class='awrnc'>1,798.20</td><td align="right" headers="perSecond Max" class='awrncrb'>2,588.39</td></tr>
<tr><td scope="row" class='awrc'>physical read total bytes</td><td align="right" class='awrc'>24,902,911,488</td><td align="right" class='awrc'>40,731,750.69</td><td align="right" class='awrc'>276,033.47</td><td align="right" headers="perSecond Average" class='awrclb'>20,365,875.35</td><td align="right" headers="perSecond StdDev" class='awrc'>4,501,148.45</td><td align="right" headers="perSecond Min" class='awrc'>17,183,082.75</td><td align="right" headers="perSecond Max" class='awrcrb'>23,548,667.94</td></tr>
<tr><td scope="row" class='awrnc'>physical read total multi block requests</td><td align="right" class='awrnc'>2,770</td><td align="right" class='awrnc'>4.53</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>2.27</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>2.21</td><td align="right" headers="perSecond Max" class='awrncrb'>2.32</td></tr>
<tr><td scope="row" class='awrc'>physical reads</td><td align="right" class='awrc'>2,672,231</td><td align="right" class='awrc'>4,370.72</td><td align="right" class='awrc'>29.62</td><td align="right" headers="perSecond Average" class='awrclb'>2,185.36</td><td align="right" headers="perSecond StdDev" class='awrc'>558.03</td><td align="right" headers="perSecond Min" class='awrc'>1,790.78</td><td align="right" headers="perSecond Max" class='awrcrb'>2,579.95</td></tr>
<tr><td scope="row" class='awrnc'>physical reads cache</td><td align="right" class='awrnc'>2,672,147</td><td align="right" class='awrnc'>4,370.59</td><td align="right" class='awrnc'>29.62</td><td align="right" headers="perSecond Average" class='awrnclb'>2,185.29</td><td align="right" headers="perSecond StdDev" class='awrnc'>558.09</td><td align="right" headers="perSecond Min" class='awrnc'>1,790.67</td><td align="right" headers="perSecond Max" class='awrncrb'>2,579.92</td></tr>
<tr><td scope="row" class='awrc'>physical reads cache prefetch</td><td align="right" class='awrc'>825</td><td align="right" class='awrc'>1.35</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.67</td><td align="right" headers="perSecond StdDev" class='awrc'>0.90</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>1.31</td></tr>
<tr><td scope="row" class='awrnc'>physical reads direct</td><td align="right" class='awrnc'>84</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.06</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.11</td></tr>
<tr><td scope="row" class='awrc'>physical reads direct (lob)</td><td align="right" class='awrc'>84</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>physical write IO requests</td><td align="right" class='awrnc'>2,278,496</td><td align="right" class='awrnc'>3,726.47</td><td align="right" class='awrnc'>25.26</td><td align="right" headers="perSecond Average" class='awrnclb'>1,863.23</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,025.74</td><td align="right" headers="perSecond Min" class='awrnc'>1,137.92</td><td align="right" headers="perSecond Max" class='awrncrb'>2,588.54</td></tr>
<tr><td scope="row" class='awrc'>physical write bytes</td><td align="right" class='awrc'>20,111,785,984</td><td align="right" class='awrc'>32,892,710.07</td><td align="right" class='awrc'>222,926.79</td><td align="right" headers="perSecond Average" class='awrclb'>16,446,355.03</td><td align="right" headers="perSecond StdDev" class='awrc'>9,028,748.92</td><td align="right" headers="perSecond Min" class='awrc'>10,062,065.44</td><td align="right" headers="perSecond Max" class='awrcrb'>22,830,644.62</td></tr>
<tr><td scope="row" class='awrnc'>physical write total IO requests</td><td align="right" class='awrnc'>2,412,580</td><td align="right" class='awrnc'>3,945.82</td><td align="right" class='awrnc'>26.74</td><td align="right" headers="perSecond Average" class='awrnclb'>1,972.91</td><td align="right" headers="perSecond StdDev" class='awrnc'>959.66</td><td align="right" headers="perSecond Min" class='awrnc'>1,294.33</td><td align="right" headers="perSecond Max" class='awrncrb'>2,651.49</td></tr>
<tr><td scope="row" class='awrc'>physical write total bytes</td><td align="right" class='awrc'>24,971,810,816</td><td align="right" class='awrc'>40,841,815.07</td><td align="right" class='awrc'>276,797.18</td><td align="right" headers="perSecond Average" class='awrclb'>20,420,907.53</td><td align="right" headers="perSecond StdDev" class='awrc'>10,030,355.77</td><td align="right" headers="perSecond Min" class='awrc'>13,328,374.95</td><td align="right" headers="perSecond Max" class='awrcrb'>27,513,440.12</td></tr>
<tr><td scope="row" class='awrnc'>physical write total multi block requests</td><td align="right" class='awrnc'>7,668</td><td align="right" class='awrnc'>12.54</td><td align="right" class='awrnc'>0.08</td><td align="right" headers="perSecond Average" class='awrnclb'>6.27</td><td align="right" headers="perSecond StdDev" class='awrnc'>6.23</td><td align="right" headers="perSecond Min" class='awrnc'>1.87</td><td align="right" headers="perSecond Max" class='awrncrb'>10.67</td></tr>
<tr><td scope="row" class='awrc'>physical writes</td><td align="right" class='awrc'>2,455,052</td><td align="right" class='awrc'>4,015.22</td><td align="right" class='awrc'>27.21</td><td align="right" headers="perSecond Average" class='awrclb'>2,007.61</td><td align="right" headers="perSecond StdDev" class='awrc'>1,102.14</td><td align="right" headers="perSecond Min" class='awrc'>1,228.28</td><td align="right" headers="perSecond Max" class='awrcrb'>2,786.94</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct</td><td align="right" class='awrnc'>1,021</td><td align="right" class='awrnc'>1.67</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.84</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.92</td><td align="right" headers="perSecond Min" class='awrnc'>0.18</td><td align="right" headers="perSecond Max" class='awrncrb'>1.49</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct (lob)</td><td align="right" class='awrc'>129</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.11</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.09</td><td align="right" headers="perSecond Max" class='awrcrb'>0.12</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct temporary tablespace</td><td align="right" class='awrnc'>778</td><td align="right" class='awrnc'>1.27</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.64</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.90</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>1.27</td></tr>
<tr><td scope="row" class='awrc'>physical writes from cache</td><td align="right" class='awrc'>2,454,031</td><td align="right" class='awrc'>4,013.55</td><td align="right" class='awrc'>27.20</td><td align="right" headers="perSecond Average" class='awrclb'>2,006.78</td><td align="right" headers="perSecond StdDev" class='awrc'>1,103.06</td><td align="right" headers="perSecond Min" class='awrc'>1,226.79</td><td align="right" headers="perSecond Max" class='awrcrb'>2,786.76</td></tr>
<tr><td scope="row" class='awrnc'>physical writes non checkpoint</td><td align="right" class='awrnc'>2,409,463</td><td align="right" class='awrnc'>3,940.65</td><td align="right" class='awrnc'>26.71</td><td align="right" headers="perSecond Average" class='awrnclb'>1,970.33</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,099.33</td><td align="right" headers="perSecond Min" class='awrnc'>1,192.99</td><td align="right" headers="perSecond Max" class='awrncrb'>2,747.67</td></tr>
<tr><td scope="row" class='awrc'>pinned buffers inspected</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>process last non-idle time</td><td align="right" class='awrnc'>1,226</td><td align="right" class='awrnc'>2.01</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>1.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>1.00</td><td align="right" headers="perSecond Max" class='awrncrb'>1.00</td></tr>
<tr><td scope="row" class='awrc'>recursive calls</td><td align="right" class='awrc'>367,763</td><td align="right" class='awrc'>601.53</td><td align="right" class='awrc'>4.08</td><td align="right" headers="perSecond Average" class='awrclb'>300.77</td><td align="right" headers="perSecond StdDev" class='awrc'>38.82</td><td align="right" headers="perSecond Min" class='awrc'>273.32</td><td align="right" headers="perSecond Max" class='awrcrb'>328.22</td></tr>
<tr><td scope="row" class='awrnc'>recursive cpu usage</td><td align="right" class='awrnc'>106,819</td><td align="right" class='awrnc'>174.73</td><td align="right" class='awrnc'>1.18</td><td align="right" headers="perSecond Average" class='awrnclb'>87.36</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.19</td><td align="right" headers="perSecond Min" class='awrnc'>81.57</td><td align="right" headers="perSecond Max" class='awrncrb'>93.16</td></tr>
<tr><td scope="row" class='awrc'>redo KB read</td><td align="right" class='awrc'>1,703,936</td><td align="right" class='awrc'>2,787.17</td><td align="right" class='awrc'>18.89</td><td align="right" headers="perSecond Average" class='awrclb'>1,393.58</td><td align="right" headers="perSecond StdDev" class='awrc'>57.51</td><td align="right" headers="perSecond Min" class='awrc'>1,352.92</td><td align="right" headers="perSecond Max" class='awrcrb'>1,434.25</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrnc'>1,814,125</td><td align="right" class='awrnc'>2,967.18</td><td align="right" class='awrnc'>20.11</td><td align="right" headers="perSecond Average" class='awrnclb'>1,483.59</td><td align="right" headers="perSecond StdDev" class='awrnc'>419.74</td><td align="right" headers="perSecond Min" class='awrnc'>1,186.79</td><td align="right" headers="perSecond Max" class='awrncrb'>1,780.39</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written</td><td align="right" class='awrc'>4,727,428</td><td align="right" class='awrc'>7,732.23</td><td align="right" class='awrc'>52.40</td><td align="right" headers="perSecond Average" class='awrclb'>3,866.11</td><td align="right" headers="perSecond StdDev" class='awrc'>977.16</td><td align="right" headers="perSecond Min" class='awrc'>3,175.16</td><td align="right" headers="perSecond Max" class='awrcrb'>4,557.07</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written (group 0)</td><td align="right" class='awrnc'>2,129,320</td><td align="right" class='awrnc'>3,482.53</td><td align="right" class='awrnc'>23.60</td><td align="right" headers="perSecond Average" class='awrnclb'>1,741.26</td><td align="right" headers="perSecond StdDev" class='awrnc'>880.56</td><td align="right" headers="perSecond Min" class='awrnc'>1,118.61</td><td align="right" headers="perSecond Max" class='awrncrb'>2,363.91</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written (group 1)</td><td align="right" class='awrc'>1,748,099</td><td align="right" class='awrc'>2,858.87</td><td align="right" class='awrc'>19.38</td><td align="right" headers="perSecond Average" class='awrclb'>1,429.43</td><td align="right" headers="perSecond StdDev" class='awrc'>1,080.07</td><td align="right" headers="perSecond Min" class='awrc'>665.71</td><td align="right" headers="perSecond Max" class='awrcrb'>2,193.16</td></tr>
<tr><td scope="row" class='awrnc'>redo entries</td><td align="right" class='awrnc'>2,962,697</td><td align="right" class='awrnc'>4,845.84</td><td align="right" class='awrnc'>32.84</td><td align="right" headers="perSecond Average" class='awrnclb'>2,422.92</td><td align="right" headers="perSecond StdDev" class='awrnc'>564.30</td><td align="right" headers="perSecond Min" class='awrnc'>2,023.90</td><td align="right" headers="perSecond Max" class='awrncrb'>2,821.94</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>2,326,756,592</td><td align="right" class='awrc'>3,805,660.30</td><td align="right" class='awrc'>25,790.67</td><td align="right" headers="perSecond Average" class='awrclb'>1,902,830.15</td><td align="right" headers="perSecond StdDev" class='awrc'>492,008.92</td><td align="right" headers="perSecond Min" class='awrc'>1,554,927.30</td><td align="right" headers="perSecond Max" class='awrcrb'>2,250,733.00</td></tr>
<tr><td scope="row" class='awrnc'>redo size for direct writes</td><td align="right" class='awrnc'>240</td><td align="right" class='awrnc'>0.39</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.20</td><td align="right" headers="perSecond Max" class='awrncrb'>0.20</td></tr>
<tr><td scope="row" class='awrc'>redo subscn max counts</td><td align="right" class='awrc'>221</td><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>0.13</td><td align="right" headers="perSecond Max" class='awrcrb'>0.23</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time</td><td align="right" class='awrnc'>514</td><td align="right" class='awrnc'>0.84</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.42</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.34</td><td align="right" headers="perSecond Min" class='awrnc'>0.18</td><td align="right" headers="perSecond Max" class='awrncrb'>0.66</td></tr>
<tr><td scope="row" class='awrc'>redo synch time (usec)</td><td align="right" class='awrc'>5,105,604</td><td align="right" class='awrc'>8,349.66</td><td align="right" class='awrc'>56.59</td><td align="right" headers="perSecond Average" class='awrclb'>4,174.83</td><td align="right" headers="perSecond StdDev" class='awrc'>3,390.06</td><td align="right" headers="perSecond Min" class='awrc'>1,777.70</td><td align="right" headers="perSecond Max" class='awrcrb'>6,571.97</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead (usec)</td><td align="right" class='awrnc'>11,477</td><td align="right" class='awrnc'>18.77</td><td align="right" class='awrnc'>0.13</td><td align="right" headers="perSecond Average" class='awrnclb'>9.39</td><td align="right" headers="perSecond StdDev" class='awrnc'>6.28</td><td align="right" headers="perSecond Min" class='awrnc'>4.94</td><td align="right" headers="perSecond Max" class='awrncrb'>13.83</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead count (  8ms)</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch writes</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>redo wastage</td><td align="right" class='awrnc'>16,133,524</td><td align="right" class='awrnc'>26,393.61</td><td align="right" class='awrnc'>178.83</td><td align="right" headers="perSecond Average" class='awrnclb'>13,196.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>8,119.84</td><td align="right" headers="perSecond Min" class='awrnc'>7,455.21</td><td align="right" headers="perSecond Max" class='awrncrb'>18,938.39</td></tr>
<tr><td scope="row" class='awrc'>redo write active strands</td><td align="right" class='awrc'>66,147</td><td align="right" class='awrc'>108.21</td><td align="right" class='awrc'>0.73</td><td align="right" headers="perSecond Average" class='awrclb'>54.11</td><td align="right" headers="perSecond StdDev" class='awrc'>33.11</td><td align="right" headers="perSecond Min" class='awrc'>30.69</td><td align="right" headers="perSecond Max" class='awrcrb'>77.52</td></tr>
<tr><td scope="row" class='awrnc'>redo write finish time</td><td align="right" class='awrnc'>1,768,862,371</td><td align="right" class='awrnc'>2,893,092.03</td><td align="right" class='awrnc'>19,606.75</td><td align="right" headers="perSecond Average" class='awrnclb'>1,446,546.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>525,865.97</td><td align="right" headers="perSecond Min" class='awrnc'>1,074,702.62</td><td align="right" headers="perSecond Max" class='awrncrb'>1,818,389.41</td></tr>
<tr><td scope="row" class='awrc'>redo write gather time</td><td align="right" class='awrc'>119,319,312</td><td align="right" class='awrc'>195,128.40</td><td align="right" class='awrc'>1,322.58</td><td align="right" headers="perSecond Average" class='awrclb'>97,564.20</td><td align="right" headers="perSecond StdDev" class='awrc'>90,607.98</td><td align="right" headers="perSecond Min" class='awrc'>33,494.68</td><td align="right" headers="perSecond Max" class='awrcrb'>161,633.72</td></tr>
<tr><td scope="row" class='awrnc'>redo write info find</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>redo write schedule time</td><td align="right" class='awrc'>119,966,875</td><td align="right" class='awrc'>196,187.75</td><td align="right" class='awrc'>1,329.76</td><td align="right" headers="perSecond Average" class='awrclb'>98,093.88</td><td align="right" headers="perSecond StdDev" class='awrc'>90,329.82</td><td align="right" headers="perSecond Min" class='awrc'>34,221.05</td><td align="right" headers="perSecond Max" class='awrcrb'>161,966.71</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (   4KB)</td><td align="right" class='awrnc'>1,192</td><td align="right" class='awrnc'>1.95</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.97</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.19</td><td align="right" headers="perSecond Min" class='awrnc'>0.84</td><td align="right" headers="perSecond Max" class='awrncrb'>1.11</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (   8KB)</td><td align="right" class='awrc'>1,721</td><td align="right" class='awrc'>2.82</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>1.41</td><td align="right" headers="perSecond StdDev" class='awrc'>0.76</td><td align="right" headers="perSecond Min" class='awrc'>0.87</td><td align="right" headers="perSecond Max" class='awrcrb'>1.94</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (  16KB)</td><td align="right" class='awrnc'>4,619</td><td align="right" class='awrnc'>7.56</td><td align="right" class='awrnc'>0.05</td><td align="right" headers="perSecond Average" class='awrnclb'>3.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.59</td><td align="right" headers="perSecond Min" class='awrnc'>1.24</td><td align="right" headers="perSecond Max" class='awrncrb'>6.32</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (  32KB)</td><td align="right" class='awrc'>9,879</td><td align="right" class='awrc'>16.16</td><td align="right" class='awrc'>0.11</td><td align="right" headers="perSecond Average" class='awrclb'>8.08</td><td align="right" headers="perSecond StdDev" class='awrc'>9.94</td><td align="right" headers="perSecond Min" class='awrc'>1.05</td><td align="right" headers="perSecond Max" class='awrcrb'>15.11</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 128KB)</td><td align="right" class='awrnc'>15,468</td><td align="right" class='awrnc'>25.31</td><td align="right" class='awrnc'>0.17</td><td align="right" headers="perSecond Average" class='awrnclb'>12.65</td><td align="right" headers="perSecond StdDev" class='awrnc'>11.23</td><td align="right" headers="perSecond Min" class='awrnc'>4.71</td><td align="right" headers="perSecond Max" class='awrncrb'>20.60</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 256KB)</td><td align="right" class='awrc'>3,228</td><td align="right" class='awrc'>5.28</td><td align="right" class='awrc'>0.04</td><td align="right" headers="perSecond Average" class='awrclb'>2.64</td><td align="right" headers="perSecond StdDev" class='awrc'>3.32</td><td align="right" headers="perSecond Min" class='awrc'>0.29</td><td align="right" headers="perSecond Max" class='awrcrb'>4.99</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 512KB)</td><td align="right" class='awrnc'>1,364</td><td align="right" class='awrnc'>2.23</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>1.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.52</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>2.19</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (1024KB)</td><td align="right" class='awrc'>173</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.19</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.28</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (inf)</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>redo write time</td><td align="right" class='awrc'>177,039</td><td align="right" class='awrc'>289.56</td><td align="right" class='awrc'>1.96</td><td align="right" headers="perSecond Average" class='awrclb'>144.78</td><td align="right" headers="perSecond StdDev" class='awrc'>52.55</td><td align="right" headers="perSecond Min" class='awrc'>107.62</td><td align="right" headers="perSecond Max" class='awrcrb'>181.94</td></tr>
<tr><td scope="row" class='awrnc'>redo write time (usec)</td><td align="right" class='awrnc'>1,770,390,775</td><td align="right" class='awrnc'>2,895,592.24</td><td align="right" class='awrnc'>19,623.69</td><td align="right" headers="perSecond Average" class='awrnclb'>1,447,796.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>525,483.26</td><td align="right" headers="perSecond Min" class='awrnc'>1,076,223.34</td><td align="right" headers="perSecond Max" class='awrncrb'>1,819,368.90</td></tr>
<tr><td scope="row" class='awrc'>redo write total time</td><td align="right" class='awrc'>1,888,896,571</td><td align="right" class='awrc'>3,089,390.37</td><td align="right" class='awrc'>20,937.26</td><td align="right" headers="perSecond Average" class='awrclb'>1,544,695.19</td><td align="right" headers="perSecond StdDev" class='awrc'>615,214.51</td><td align="right" headers="perSecond Min" class='awrc'>1,109,672.84</td><td align="right" headers="perSecond Max" class='awrcrb'>1,979,717.54</td></tr>
<tr><td scope="row" class='awrnc'>redo write worker delay (usec)</td><td align="right" class='awrnc'>116,473,318</td><td align="right" class='awrnc'>190,472.22</td><td align="right" class='awrnc'>1,291.04</td><td align="right" headers="perSecond Average" class='awrnclb'>95,236.11</td><td align="right" headers="perSecond StdDev" class='awrnc'>92,631.51</td><td align="right" headers="perSecond Min" class='awrnc'>29,735.74</td><td align="right" headers="perSecond Max" class='awrncrb'>160,736.48</td></tr>
<tr><td scope="row" class='awrc'>redo write worker delay count</td><td align="right" class='awrc'>26,609</td><td align="right" class='awrc'>43.53</td><td align="right" class='awrc'>0.29</td><td align="right" headers="perSecond Average" class='awrclb'>21.76</td><td align="right" headers="perSecond StdDev" class='awrc'>7.89</td><td align="right" headers="perSecond Min" class='awrc'>16.19</td><td align="right" headers="perSecond Max" class='awrcrb'>27.34</td></tr>
<tr><td scope="row" class='awrnc'>redo writes</td><td align="right" class='awrnc'>37,656</td><td align="right" class='awrnc'>61.60</td><td align="right" class='awrnc'>0.42</td><td align="right" headers="perSecond Average" class='awrnclb'>30.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>20.67</td><td align="right" headers="perSecond Min" class='awrnc'>16.19</td><td align="right" headers="perSecond Max" class='awrncrb'>45.42</td></tr>
<tr><td scope="row" class='awrc'>redo writes (group 0)</td><td align="right" class='awrc'>14,085</td><td align="right" class='awrc'>23.04</td><td align="right" class='awrc'>0.16</td><td align="right" headers="perSecond Average" class='awrclb'>11.52</td><td align="right" headers="perSecond StdDev" class='awrc'>4.73</td><td align="right" headers="perSecond Min" class='awrc'>8.17</td><td align="right" headers="perSecond Max" class='awrcrb'>14.87</td></tr>
<tr><td scope="row" class='awrnc'>redo writes (group 1)</td><td align="right" class='awrnc'>12,524</td><td align="right" class='awrnc'>20.49</td><td align="right" class='awrnc'>0.14</td><td align="right" headers="perSecond Average" class='awrnclb'>10.24</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.15</td><td align="right" headers="perSecond Min" class='awrnc'>8.02</td><td align="right" headers="perSecond Max" class='awrncrb'>12.47</td></tr>
<tr><td scope="row" class='awrc'>redo writes adaptive all</td><td align="right" class='awrc'>37,656</td><td align="right" class='awrc'>61.60</td><td align="right" class='awrc'>0.42</td><td align="right" headers="perSecond Average" class='awrclb'>30.80</td><td align="right" headers="perSecond StdDev" class='awrc'>20.67</td><td align="right" headers="perSecond Min" class='awrc'>16.19</td><td align="right" headers="perSecond Max" class='awrcrb'>45.42</td></tr>
<tr><td scope="row" class='awrnc'>redo writes adaptive worker</td><td align="right" class='awrnc'>26,609</td><td align="right" class='awrnc'>43.53</td><td align="right" class='awrnc'>0.29</td><td align="right" headers="perSecond Average" class='awrnclb'>21.76</td><td align="right" headers="perSecond StdDev" class='awrnc'>7.89</td><td align="right" headers="perSecond Min" class='awrnc'>16.19</td><td align="right" headers="perSecond Max" class='awrncrb'>27.34</td></tr>
<tr><td scope="row" class='awrc'>rollbacks only - consistent read gets</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>rows fetched via callback</td><td align="right" class='awrnc'>9,629</td><td align="right" class='awrnc'>15.75</td><td align="right" class='awrnc'>0.11</td><td align="right" headers="perSecond Average" class='awrnclb'>7.88</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.88</td><td align="right" headers="perSecond Min" class='awrnc'>6.54</td><td align="right" headers="perSecond Max" class='awrncrb'>9.21</td></tr>
<tr><td scope="row" class='awrc'>securefile allocation bytes</td><td align="right" class='awrc'>1,056,768</td><td align="right" class='awrc'>1,728.62</td><td align="right" class='awrc'>11.71</td><td align="right" headers="perSecond Average" class='awrclb'>864.31</td><td align="right" headers="perSecond StdDev" class='awrc'>123.59</td><td align="right" headers="perSecond Min" class='awrc'>776.92</td><td align="right" headers="perSecond Max" class='awrcrb'>951.70</td></tr>
<tr><td scope="row" class='awrnc'>securefile allocation chunks</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>securefile bytes non-transformed</td><td align="right" class='awrc'>920,840</td><td align="right" class='awrc'>1,506.27</td><td align="right" class='awrc'>10.21</td><td align="right" headers="perSecond Average" class='awrclb'>753.14</td><td align="right" headers="perSecond StdDev" class='awrc'>103.73</td><td align="right" headers="perSecond Min" class='awrc'>679.79</td><td align="right" headers="perSecond Max" class='awrcrb'>826.49</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct read bytes</td><td align="right" class='awrnc'>688,128</td><td align="right" class='awrnc'>1,125.81</td><td align="right" class='awrnc'>7.63</td><td align="right" headers="perSecond Average" class='awrnclb'>562.91</td><td align="right" headers="perSecond StdDev" class='awrnc'>492.97</td><td align="right" headers="perSecond Min" class='awrnc'>214.32</td><td align="right" headers="perSecond Max" class='awrncrb'>911.49</td></tr>
<tr><td scope="row" class='awrc'>securefile direct read ops</td><td align="right" class='awrc'>80</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct write bytes</td><td align="right" class='awrnc'>1,056,768</td><td align="right" class='awrnc'>1,728.62</td><td align="right" class='awrnc'>11.71</td><td align="right" headers="perSecond Average" class='awrnclb'>864.31</td><td align="right" headers="perSecond StdDev" class='awrnc'>123.59</td><td align="right" headers="perSecond Min" class='awrnc'>776.92</td><td align="right" headers="perSecond Max" class='awrncrb'>951.70</td></tr>
<tr><td scope="row" class='awrc'>securefile direct write ops</td><td align="right" class='awrc'>35</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>securefile number of non-transformed flushes</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>segment chunks allocation from dispenser</td><td align="right" class='awrc'>35</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser allocations</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc ops</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc time (ms)</td><td align="right" class='awrnc'>129</td><td align="right" class='awrnc'>0.21</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.11</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.12</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.19</td></tr>
<tr><td scope="row" class='awrc'>session connect time</td><td align="right" class='awrc'>648</td><td align="right" class='awrc'>1.06</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.06</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>1.06</td><td align="right" headers="perSecond Max" class='awrcrb'>1.06</td></tr>
<tr><td scope="row" class='awrnc'>session cursor cache hits</td><td align="right" class='awrnc'>206,022</td><td align="right" class='awrnc'>336.98</td><td align="right" class='awrnc'>2.28</td><td align="right" headers="perSecond Average" class='awrnclb'>168.49</td><td align="right" headers="perSecond StdDev" class='awrnc'>31.91</td><td align="right" headers="perSecond Min" class='awrnc'>145.93</td><td align="right" headers="perSecond Max" class='awrncrb'>191.05</td></tr>
<tr><td scope="row" class='awrc'>session logical reads</td><td align="right" class='awrc'>3,684,618</td><td align="right" class='awrc'>6,026.62</td><td align="right" class='awrc'>40.84</td><td align="right" headers="perSecond Average" class='awrclb'>3,013.31</td><td align="right" headers="perSecond StdDev" class='awrc'>711.53</td><td align="right" headers="perSecond Min" class='awrc'>2,510.18</td><td align="right" headers="perSecond Max" class='awrcrb'>3,516.44</td></tr>
<tr><td scope="row" class='awrnc'>shared hash latch upgrades - no wait</td><td align="right" class='awrnc'>10,142</td><td align="right" class='awrnc'>16.59</td><td align="right" class='awrnc'>0.11</td><td align="right" headers="perSecond Average" class='awrnclb'>8.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>6.23</td><td align="right" headers="perSecond Min" class='awrnc'>3.89</td><td align="right" headers="perSecond Max" class='awrncrb'>12.70</td></tr>
<tr><td scope="row" class='awrc'>shared io pool buffer get success</td><td align="right" class='awrc'>111</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrc'>0.08</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>sorts (memory)</td><td align="right" class='awrnc'>6,745</td><td align="right" class='awrnc'>11.03</td><td align="right" class='awrnc'>0.07</td><td align="right" headers="perSecond Average" class='awrnclb'>5.52</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.71</td><td align="right" headers="perSecond Min" class='awrnc'>3.60</td><td align="right" headers="perSecond Max" class='awrncrb'>7.43</td></tr>
<tr><td scope="row" class='awrc'>sorts (rows)</td><td align="right" class='awrc'>1,044,319</td><td align="right" class='awrc'>1,708.71</td><td align="right" class='awrc'>11.58</td><td align="right" headers="perSecond Average" class='awrclb'>854.36</td><td align="right" headers="perSecond StdDev" class='awrc'>1,076.72</td><td align="right" headers="perSecond Min" class='awrc'>93.00</td><td align="right" headers="perSecond Max" class='awrcrb'>1,615.71</td></tr>
<tr><td scope="row" class='awrnc'>sql area evicted</td><td align="right" class='awrnc'>3,782</td><td align="right" class='awrnc'>6.19</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>3.09</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.58</td><td align="right" headers="perSecond Min" class='awrnc'>2.69</td><td align="right" headers="perSecond Max" class='awrncrb'>3.50</td></tr>
<tr><td scope="row" class='awrc'>sql area purged</td><td align="right" class='awrc'>94</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.08</td><td align="right" headers="perSecond Max" class='awrcrb'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>summed dirty queue length</td><td align="right" class='awrnc'>332,765,213</td><td align="right" class='awrnc'>544,123.57</td><td align="right" class='awrnc'>3,688.50</td><td align="right" headers="perSecond Average" class='awrnclb'>272,061.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>384,459.49</td><td align="right" headers="perSecond Min" class='awrnc'>207.88</td><td align="right" headers="perSecond Max" class='awrncrb'>543,915.69</td></tr>
<tr><td scope="row" class='awrc'>switch current caused by our pin</td><td align="right" class='awrc'>72</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>switch current to new buffer</td><td align="right" class='awrnc'>82</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.10</td></tr>
<tr><td scope="row" class='awrc'>table fetch by rowid</td><td align="right" class='awrc'>37,054</td><td align="right" class='awrc'>60.61</td><td align="right" class='awrc'>0.41</td><td align="right" headers="perSecond Average" class='awrclb'>30.31</td><td align="right" headers="perSecond StdDev" class='awrc'>2.90</td><td align="right" headers="perSecond Min" class='awrc'>28.26</td><td align="right" headers="perSecond Max" class='awrcrb'>32.36</td></tr>
<tr><td scope="row" class='awrnc'>table fetch continued row</td><td align="right" class='awrnc'>758</td><td align="right" class='awrnc'>1.24</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.62</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.59</td><td align="right" headers="perSecond Min" class='awrnc'>0.20</td><td align="right" headers="perSecond Max" class='awrncrb'>1.04</td></tr>
<tr><td scope="row" class='awrc'>table scan blocks gotten</td><td align="right" class='awrc'>24,131</td><td align="right" class='awrc'>39.47</td><td align="right" class='awrc'>0.27</td><td align="right" headers="perSecond Average" class='awrclb'>19.74</td><td align="right" headers="perSecond StdDev" class='awrc'>0.42</td><td align="right" headers="perSecond Min" class='awrc'>19.44</td><td align="right" headers="perSecond Max" class='awrcrb'>20.03</td></tr>
<tr><td scope="row" class='awrnc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrnc'>985,114</td><td align="right" class='awrnc'>1,611.49</td><td align="right" class='awrnc'>10.92</td><td align="right" headers="perSecond Average" class='awrnclb'>805.75</td><td align="right" headers="perSecond StdDev" class='awrnc'>283.68</td><td align="right" headers="perSecond Min" class='awrnc'>605.15</td><td align="right" headers="perSecond Max" class='awrncrb'>1,006.34</td></tr>
<tr><td scope="row" class='awrc'>table scan rows gotten</td><td align="right" class='awrc'>985,114</td><td align="right" class='awrc'>1,611.49</td><td align="right" class='awrc'>10.92</td><td align="right" headers="perSecond Average" class='awrclb'>805.75</td><td align="right" headers="perSecond StdDev" class='awrc'>283.68</td><td align="right" headers="perSecond Min" class='awrc'>605.15</td><td align="right" headers="perSecond Max" class='awrcrb'>1,006.34</td></tr>
<tr><td scope="row" class='awrnc'>table scans (short tables)</td><td align="right" class='awrnc'>1,772</td><td align="right" class='awrnc'>2.90</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>1.45</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.35</td><td align="right" headers="perSecond Min" class='awrnc'>1.20</td><td align="right" headers="perSecond Max" class='awrncrb'>1.70</td></tr>
<tr><td scope="row" class='awrc'>total cf enq hold time</td><td align="right" class='awrc'>16,593</td><td align="right" class='awrc'>27.14</td><td align="right" class='awrc'>0.18</td><td align="right" headers="perSecond Average" class='awrclb'>13.57</td><td align="right" headers="perSecond StdDev" class='awrc'>11.00</td><td align="right" headers="perSecond Min" class='awrc'>5.79</td><td align="right" headers="perSecond Max" class='awrcrb'>21.34</td></tr>
<tr><td scope="row" class='awrnc'>total number of cf enq holders</td><td align="right" class='awrnc'>460</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.38</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.37</td><td align="right" headers="perSecond Max" class='awrncrb'>0.38</td></tr>
<tr><td scope="row" class='awrc'>undo change vector size</td><td align="right" class='awrc'>965,179,416</td><td align="right" class='awrc'>1,578,655.26</td><td align="right" class='awrc'>10,698.42</td><td align="right" headers="perSecond Average" class='awrclb'>789,327.63</td><td align="right" headers="perSecond StdDev" class='awrc'>202,700.08</td><td align="right" headers="perSecond Min" class='awrc'>645,997.03</td><td align="right" headers="perSecond Max" class='awrcrb'>932,658.23</td></tr>
<tr><td scope="row" class='awrnc'>user I/O wait time</td><td align="right" class='awrnc'>1,107,356</td><td align="right" class='awrnc'>1,811.73</td><td align="right" class='awrnc'>12.27</td><td align="right" headers="perSecond Average" class='awrnclb'>905.87</td><td align="right" headers="perSecond StdDev" class='awrnc'>882.44</td><td align="right" headers="perSecond Min" class='awrnc'>281.89</td><td align="right" headers="perSecond Max" class='awrncrb'>1,529.84</td></tr>
<tr><td scope="row" class='awrc'>user calls</td><td align="right" class='awrc'>2,064</td><td align="right" class='awrc'>3.38</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>1.69</td><td align="right" headers="perSecond StdDev" class='awrc'>0.15</td><td align="right" headers="perSecond Min" class='awrc'>1.58</td><td align="right" headers="perSecond Max" class='awrcrb'>1.79</td></tr>
<tr><td scope="row" class='awrnc'>user commits</td><td align="right" class='awrnc'>90,217</td><td align="right" class='awrnc'>147.56</td><td align="right" class='awrnc'>1.00</td><td align="right" headers="perSecond Average" class='awrnclb'>73.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>19.30</td><td align="right" headers="perSecond Min" class='awrnc'>60.13</td><td align="right" headers="perSecond Max" class='awrncrb'>87.43</td></tr>
<tr><td scope="row" class='awrc'>user logons cumulative</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>user logouts cumulative</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>workarea executions - optimal</td><td align="right" class='awrc'>3,369</td><td align="right" class='awrc'>5.51</td><td align="right" class='awrc'>0.04</td><td align="right" headers="perSecond Average" class='awrclb'>2.76</td><td align="right" headers="perSecond StdDev" class='awrc'>1.29</td><td align="right" headers="perSecond Min" class='awrc'>1.84</td><td align="right" headers="perSecond Max" class='awrcrb'>3.67</td></tr>
<tr><td scope="row" class='awrnc'>write clones created in foreground</td><td align="right" class='awrnc'>623</td><td align="right" class='awrnc'>1.02</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>0.51</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.50</td><td align="right" headers="perSecond Min" class='awrnc'>0.15</td><td align="right" headers="perSecond Max" class='awrncrb'>0.86</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12072"></a>
<h3 class="awr">Global Messaging Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>0.18</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrc'>0.06</td><td align="right" headers="perSecond Min" class='awrc'>0.05</td><td align="right" headers="perSecond Max" class='awrcrb'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>124,030</td><td align="right" class='awrnc'>202.90</td><td align="right" class='awrnc'>1.37</td><td align="right" headers="perSecond Average" class='awrnclb'>101.45</td><td align="right" headers="perSecond StdDev" class='awrnc'>40.05</td><td align="right" headers="perSecond Min" class='awrnc'>73.13</td><td align="right" headers="perSecond Max" class='awrncrb'>129.77</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>7,566</td><td align="right" class='awrnc'>12.37</td><td align="right" class='awrnc'>0.08</td><td align="right" headers="perSecond Average" class='awrnclb'>6.19</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.51</td><td align="right" headers="perSecond Max" class='awrncrb'>11.86</td></tr>
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>14,525</td><td align="right" class='awrc'>23.75</td><td align="right" class='awrc'>0.16</td><td align="right" headers="perSecond Average" class='awrclb'>11.88</td><td align="right" headers="perSecond StdDev" class='awrc'>14.82</td><td align="right" headers="perSecond Min" class='awrc'>1.39</td><td align="right" headers="perSecond Max" class='awrcrb'>22.36</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>14,516</td><td align="right" class='awrnc'>23.75</td><td align="right" class='awrnc'>0.16</td><td align="right" headers="perSecond Average" class='awrnclb'>11.88</td><td align="right" headers="perSecond StdDev" class='awrnc'>14.82</td><td align="right" headers="perSecond Min" class='awrnc'>1.40</td><td align="right" headers="perSecond Max" class='awrncrb'>22.35</td></tr>
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>37,618</td><td align="right" class='awrc'>61.54</td><td align="right" class='awrc'>0.42</td><td align="right" headers="perSecond Average" class='awrclb'>30.77</td><td align="right" headers="perSecond StdDev" class='awrc'>20.67</td><td align="right" headers="perSecond Min" class='awrc'>16.15</td><td align="right" headers="perSecond Max" class='awrcrb'>45.39</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>6,244</td><td align="right" class='awrnc'>10.22</td><td align="right" class='awrnc'>0.07</td><td align="right" headers="perSecond Average" class='awrnclb'>5.11</td><td align="right" headers="perSecond StdDev" class='awrnc'>5.95</td><td align="right" headers="perSecond Min" class='awrnc'>0.90</td><td align="right" headers="perSecond Max" class='awrncrb'>9.32</td></tr>
<tr><td scope="row" class='awrc'>flow control messages received</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>flow control messages sent</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs assume no cvt</td><td align="right" class='awrc'>22,438</td><td align="right" class='awrc'>36.69</td><td align="right" class='awrc'>0.25</td><td align="right" headers="perSecond Average" class='awrclb'>18.35</td><td align="right" headers="perSecond StdDev" class='awrc'>18.57</td><td align="right" headers="perSecond Min" class='awrc'>5.22</td><td align="right" headers="perSecond Max" class='awrcrb'>31.48</td></tr>
<tr><td scope="row" class='awrnc'>gcs ast to fg</td><td align="right" class='awrnc'>1,185,479</td><td align="right" class='awrnc'>1,938.98</td><td align="right" class='awrnc'>13.14</td><td align="right" headers="perSecond Average" class='awrnclb'>969.49</td><td align="right" headers="perSecond StdDev" class='awrnc'>256.05</td><td align="right" headers="perSecond Min" class='awrnc'>788.43</td><td align="right" headers="perSecond Max" class='awrncrb'>1,150.55</td></tr>
<tr><td scope="row" class='awrc'>gcs bidless ast to lms</td><td align="right" class='awrc'>614</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>0.50</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.50</td><td align="right" headers="perSecond Max" class='awrcrb'>0.51</td></tr>
<tr><td scope="row" class='awrnc'>gcs blocked converts</td><td align="right" class='awrnc'>71,538</td><td align="right" class='awrnc'>117.01</td><td align="right" class='awrnc'>0.79</td><td align="right" headers="perSecond Average" class='awrnclb'>58.51</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.08</td><td align="right" headers="perSecond Min" class='awrnc'>52.79</td><td align="right" headers="perSecond Max" class='awrncrb'>64.22</td></tr>
<tr><td scope="row" class='awrc'>gcs blocked cr converts</td><td align="right" class='awrc'>1,894</td><td align="right" class='awrc'>3.10</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>1.55</td><td align="right" headers="perSecond StdDev" class='awrc'>1.61</td><td align="right" headers="perSecond Min" class='awrc'>0.41</td><td align="right" headers="perSecond Max" class='awrcrb'>2.69</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible basts</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (global)</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (local)</td><td align="right" class='awrnc'>21,497</td><td align="right" class='awrnc'>35.16</td><td align="right" class='awrnc'>0.24</td><td align="right" headers="perSecond Average" class='awrnclb'>17.58</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>17.58</td><td align="right" headers="perSecond Max" class='awrncrb'>17.58</td></tr>
<tr><td scope="row" class='awrc'>gcs dbwr flush pi msgs</td><td align="right" class='awrc'>972,478</td><td align="right" class='awrc'>1,590.69</td><td align="right" class='awrc'>10.78</td><td align="right" headers="perSecond Average" class='awrclb'>795.35</td><td align="right" headers="perSecond StdDev" class='awrc'>4.17</td><td align="right" headers="perSecond Min" class='awrc'>792.40</td><td align="right" headers="perSecond Max" class='awrcrb'>798.30</td></tr>
<tr><td scope="row" class='awrnc'>gcs dbwr write request msgs</td><td align="right" class='awrnc'>174</td><td align="right" class='awrnc'>0.28</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.12</td><td align="right" headers="perSecond Max" class='awrncrb'>0.17</td></tr>
<tr><td scope="row" class='awrc'>gcs force cr block only</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr grant</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs grant ast</td><td align="right" class='awrc'>1,186,093</td><td align="right" class='awrc'>1,939.98</td><td align="right" class='awrc'>13.15</td><td align="right" headers="perSecond Average" class='awrclb'>969.99</td><td align="right" headers="perSecond StdDev" class='awrc'>256.06</td><td align="right" headers="perSecond Min" class='awrc'>788.93</td><td align="right" headers="perSecond Max" class='awrcrb'>1,151.05</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate (compatible) converts</td><td align="right" class='awrnc'>8,877</td><td align="right" class='awrnc'>14.52</td><td align="right" class='awrnc'>0.10</td><td align="right" headers="perSecond Average" class='awrnclb'>7.26</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.78</td><td align="right" headers="perSecond Min" class='awrnc'>4.59</td><td align="right" headers="perSecond Max" class='awrncrb'>9.93</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate (null) converts</td><td align="right" class='awrc'>1,848,770</td><td align="right" class='awrc'>3,023.85</td><td align="right" class='awrc'>20.49</td><td align="right" headers="perSecond Average" class='awrclb'>1,511.92</td><td align="right" headers="perSecond StdDev" class='awrc'>415.94</td><td align="right" headers="perSecond Min" class='awrc'>1,217.81</td><td align="right" headers="perSecond Max" class='awrcrb'>1,806.04</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrnc'>134</td><td align="right" class='awrnc'>0.22</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.11</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.09</td><td align="right" headers="perSecond Max" class='awrncrb'>0.13</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate cr (null) converts</td><td align="right" class='awrc'>9,370</td><td align="right" class='awrc'>15.33</td><td align="right" class='awrc'>0.10</td><td align="right" headers="perSecond Average" class='awrclb'>7.66</td><td align="right" headers="perSecond StdDev" class='awrc'>0.67</td><td align="right" headers="perSecond Min" class='awrc'>7.19</td><td align="right" headers="perSecond Max" class='awrcrb'>8.13</td></tr>
<tr><td scope="row" class='awrnc'>gcs lms write request msgs</td><td align="right" class='awrnc'>124</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.07</td><td align="right" headers="perSecond Max" class='awrncrb'>0.14</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs process time(ms)</td><td align="right" class='awrc'>133,686</td><td align="right" class='awrc'>218.66</td><td align="right" class='awrc'>1.48</td><td align="right" headers="perSecond Average" class='awrclb'>109.33</td><td align="right" headers="perSecond StdDev" class='awrc'>25.89</td><td align="right" headers="perSecond Min" class='awrc'>91.02</td><td align="right" headers="perSecond Max" class='awrcrb'>127.64</td></tr>
<tr><td scope="row" class='awrnc'>gcs msgs received</td><td align="right" class='awrnc'>3,712,050</td><td align="right" class='awrnc'>6,071.58</td><td align="right" class='awrnc'>41.15</td><td align="right" headers="perSecond Average" class='awrnclb'>3,035.79</td><td align="right" headers="perSecond StdDev" class='awrnc'>534.02</td><td align="right" headers="perSecond Min" class='awrnc'>2,658.18</td><td align="right" headers="perSecond Max" class='awrncrb'>3,413.40</td></tr>
<tr><td scope="row" class='awrc'>gcs new served by master</td><td align="right" class='awrc'>317</td><td align="right" class='awrc'>0.52</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.26</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.24</td><td align="right" headers="perSecond Max" class='awrcrb'>0.28</td></tr>
<tr><td scope="row" class='awrnc'>gcs out-of-order msgs</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gcs pings refused</td><td align="right" class='awrc'>11,531</td><td align="right" class='awrc'>18.86</td><td align="right" class='awrc'>0.13</td><td align="right" headers="perSecond Average" class='awrclb'>9.43</td><td align="right" headers="perSecond StdDev" class='awrc'>7.06</td><td align="right" headers="perSecond Min" class='awrc'>4.43</td><td align="right" headers="perSecond Max" class='awrcrb'>14.42</td></tr>
<tr><td scope="row" class='awrnc'>gcs queued converts</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass grant immediate</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid to fg</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs side channel msgs actual</td><td align="right" class='awrnc'>8,644</td><td align="right" class='awrnc'>14.14</td><td align="right" class='awrnc'>0.10</td><td align="right" headers="perSecond Average" class='awrnclb'>7.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.11</td><td align="right" headers="perSecond Min" class='awrnc'>6.99</td><td align="right" headers="perSecond Max" class='awrncrb'>7.15</td></tr>
<tr><td scope="row" class='awrc'>gcs side channel msgs logical</td><td align="right" class='awrc'>1,226,415</td><td align="right" class='awrc'>2,006.19</td><td align="right" class='awrc'>13.59</td><td align="right" headers="perSecond Average" class='awrclb'>1,003.10</td><td align="right" headers="perSecond StdDev" class='awrc'>279.90</td><td align="right" headers="perSecond Min" class='awrc'>805.18</td><td align="right" headers="perSecond Max" class='awrcrb'>1,201.01</td></tr>
<tr><td scope="row" class='awrnc'>gcs stale cr</td><td align="right" class='awrnc'>73</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.09</td></tr>
<tr><td scope="row" class='awrc'>gcs undo cr</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.09</td><td align="right" headers="perSecond Max" class='awrcrb'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>gcs writes refused</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges msgs process time(ms)</td><td align="right" class='awrc'>190</td><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>0.17</td></tr>
<tr><td scope="row" class='awrnc'>ges msgs received</td><td align="right" class='awrnc'>7,125</td><td align="right" class='awrnc'>11.65</td><td align="right" class='awrnc'>0.08</td><td align="right" headers="perSecond Average" class='awrnclb'>5.83</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.09</td><td align="right" headers="perSecond Min" class='awrnc'>5.05</td><td align="right" headers="perSecond Max" class='awrncrb'>6.60</td></tr>
<tr><td scope="row" class='awrc'>ges remote lock allocation</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.09</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.09</td><td align="right" headers="perSecond Max" class='awrcrb'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>implicit batch messages received</td><td align="right" class='awrnc'>113,332</td><td align="right" class='awrnc'>185.37</td><td align="right" class='awrnc'>1.26</td><td align="right" headers="perSecond Average" class='awrnclb'>92.69</td><td align="right" headers="perSecond StdDev" class='awrnc'>12.32</td><td align="right" headers="perSecond Min" class='awrnc'>83.97</td><td align="right" headers="perSecond Max" class='awrncrb'>101.40</td></tr>
<tr><td scope="row" class='awrc'>implicit batch messages sent</td><td align="right" class='awrc'>113,612</td><td align="right" class='awrc'>185.84</td><td align="right" class='awrc'>1.26</td><td align="right" headers="perSecond Average" class='awrclb'>92.92</td><td align="right" headers="perSecond StdDev" class='awrc'>12.60</td><td align="right" headers="perSecond Min" class='awrc'>84.01</td><td align="right" headers="perSecond Max" class='awrcrb'>101.83</td></tr>
<tr><td scope="row" class='awrnc'>messages flow controlled</td><td align="right" class='awrnc'>15,167</td><td align="right" class='awrnc'>24.82</td><td align="right" class='awrnc'>0.17</td><td align="right" headers="perSecond Average" class='awrnclb'>12.41</td><td align="right" headers="perSecond StdDev" class='awrnc'>16.44</td><td align="right" headers="perSecond Min" class='awrnc'>0.78</td><td align="right" headers="perSecond Max" class='awrncrb'>24.04</td></tr>
<tr><td scope="row" class='awrc'>messages queue sent actual</td><td align="right" class='awrc'>410,464</td><td align="right" class='awrc'>671.39</td><td align="right" class='awrc'>4.55</td><td align="right" headers="perSecond Average" class='awrclb'>335.69</td><td align="right" headers="perSecond StdDev" class='awrc'>29.48</td><td align="right" headers="perSecond Min" class='awrc'>314.84</td><td align="right" headers="perSecond Max" class='awrcrb'>356.54</td></tr>
<tr><td scope="row" class='awrnc'>messages queue sent logical</td><td align="right" class='awrnc'>1,135,727</td><td align="right" class='awrnc'>1,857.74</td><td align="right" class='awrnc'>12.59</td><td align="right" headers="perSecond Average" class='awrnclb'>928.87</td><td align="right" headers="perSecond StdDev" class='awrnc'>55.68</td><td align="right" headers="perSecond Min" class='awrnc'>889.50</td><td align="right" headers="perSecond Max" class='awrncrb'>968.24</td></tr>
<tr><td scope="row" class='awrc'>messages received actual</td><td align="right" class='awrc'>1,717,864</td><td align="right" class='awrc'>2,809.78</td><td align="right" class='awrc'>19.04</td><td align="right" headers="perSecond Average" class='awrclb'>1,404.89</td><td align="right" headers="perSecond StdDev" class='awrc'>306.69</td><td align="right" headers="perSecond Min" class='awrc'>1,188.02</td><td align="right" headers="perSecond Max" class='awrcrb'>1,621.75</td></tr>
<tr><td scope="row" class='awrnc'>messages received logical</td><td align="right" class='awrnc'>3,719,175</td><td align="right" class='awrnc'>6,083.23</td><td align="right" class='awrnc'>41.22</td><td align="right" headers="perSecond Average" class='awrnclb'>3,041.61</td><td align="right" headers="perSecond StdDev" class='awrnc'>535.11</td><td align="right" headers="perSecond Min" class='awrnc'>2,663.23</td><td align="right" headers="perSecond Max" class='awrncrb'>3,420.00</td></tr>
<tr><td scope="row" class='awrc'>messages sent directly</td><td align="right" class='awrc'>1,303,875</td><td align="right" class='awrc'>2,132.92</td><td align="right" class='awrc'>14.45</td><td align="right" headers="perSecond Average" class='awrclb'>1,066.46</td><td align="right" headers="perSecond StdDev" class='awrc'>330.12</td><td align="right" headers="perSecond Min" class='awrc'>833.03</td><td align="right" headers="perSecond Max" class='awrcrb'>1,299.89</td></tr>
<tr><td scope="row" class='awrnc'>messages sent indirectly</td><td align="right" class='awrnc'>2,342,838</td><td align="right" class='awrnc'>3,832.32</td><td align="right" class='awrnc'>25.97</td><td align="right" headers="perSecond Average" class='awrnclb'>1,916.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>250.60</td><td align="right" headers="perSecond Min" class='awrnc'>1,738.96</td><td align="right" headers="perSecond Max" class='awrncrb'>2,093.36</td></tr>
<tr><td scope="row" class='awrc'>messages sent not implicit batched</td><td align="right" class='awrc'>39,445</td><td align="right" class='awrc'>64.54</td><td align="right" class='awrc'>0.44</td><td align="right" headers="perSecond Average" class='awrclb'>32.27</td><td align="right" headers="perSecond StdDev" class='awrc'>36.76</td><td align="right" headers="perSecond Min" class='awrc'>6.28</td><td align="right" headers="perSecond Max" class='awrcrb'>58.26</td></tr>
<tr><td scope="row" class='awrnc'>messages sent pbatched</td><td align="right" class='awrnc'>1,322,777</td><td align="right" class='awrnc'>2,163.77</td><td align="right" class='awrnc'>14.66</td><td align="right" headers="perSecond Average" class='awrnclb'>1,081.88</td><td align="right" headers="perSecond StdDev" class='awrnc'>189.45</td><td align="right" headers="perSecond Min" class='awrnc'>947.92</td><td align="right" headers="perSecond Max" class='awrncrb'>1,215.85</td></tr>
<tr><td scope="row" class='awrc'>msgs received kernel queue time (ns)</td><td align="right" class='awrc'>179,852,207,238</td><td align="right" class='awrc'>294,143,589.62</td><td align="right" class='awrc'>1,993,551.18</td><td align="right" headers="perSecond Average" class='awrclb'>147,071,794.81</td><td align="right" headers="perSecond StdDev" class='awrc'>88,418,765.65</td><td align="right" headers="perSecond Min" class='awrc'>84,550,286.04</td><td align="right" headers="perSecond Max" class='awrcrb'>209,593,303.58</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queue time (ms)</td><td align="right" class='awrnc'>286,620</td><td align="right" class='awrnc'>468.80</td><td align="right" class='awrnc'>3.18</td><td align="right" headers="perSecond Average" class='awrnclb'>234.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>55.28</td><td align="right" headers="perSecond Min" class='awrnc'>195.31</td><td align="right" headers="perSecond Max" class='awrncrb'>273.49</td></tr>
<tr><td scope="row" class='awrc'>msgs received queued</td><td align="right" class='awrc'>3,719,129</td><td align="right" class='awrc'>6,083.15</td><td align="right" class='awrc'>41.22</td><td align="right" headers="perSecond Average" class='awrclb'>3,041.58</td><td align="right" headers="perSecond StdDev" class='awrc'>535.06</td><td align="right" headers="perSecond Min" class='awrc'>2,663.23</td><td align="right" headers="perSecond Max" class='awrcrb'>3,419.92</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time (ms)</td><td align="right" class='awrnc'>3,707,586</td><td align="right" class='awrnc'>6,065.31</td><td align="right" class='awrnc'>41.10</td><td align="right" headers="perSecond Average" class='awrnclb'>3,032.66</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,644.80</td><td align="right" headers="perSecond Min" class='awrnc'>1,869.61</td><td align="right" headers="perSecond Max" class='awrncrb'>4,195.71</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrc'>5,173,294</td><td align="right" class='awrc'>8,464.24</td><td align="right" class='awrc'>57.34</td><td align="right" headers="perSecond Average" class='awrclb'>4,232.12</td><td align="right" headers="perSecond StdDev" class='awrc'>4,705.27</td><td align="right" headers="perSecond Min" class='awrc'>904.99</td><td align="right" headers="perSecond Max" class='awrcrb'>7,559.25</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued</td><td align="right" class='awrnc'>1,289,575</td><td align="right" class='awrnc'>2,109.35</td><td align="right" class='awrnc'>14.29</td><td align="right" headers="perSecond Average" class='awrnclb'>1,054.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>30.07</td><td align="right" headers="perSecond Min" class='awrnc'>1,033.41</td><td align="right" headers="perSecond Max" class='awrncrb'>1,075.94</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued on ksxp</td><td align="right" class='awrc'>1,717,523</td><td align="right" class='awrc'>2,809.51</td><td align="right" class='awrc'>19.04</td><td align="right" headers="perSecond Average" class='awrclb'>1,404.76</td><td align="right" headers="perSecond StdDev" class='awrc'>301.65</td><td align="right" headers="perSecond Min" class='awrc'>1,191.46</td><td align="right" headers="perSecond Max" class='awrcrb'>1,618.05</td></tr>
<tr><td scope="row" class='awrnc'>process batch messages received</td><td align="right" class='awrnc'>167,357</td><td align="right" class='awrnc'>273.77</td><td align="right" class='awrnc'>1.86</td><td align="right" headers="perSecond Average" class='awrnclb'>136.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>52.63</td><td align="right" headers="perSecond Min" class='awrnc'>99.67</td><td align="right" headers="perSecond Max" class='awrncrb'>174.10</td></tr>
<tr><td scope="row" class='awrc'>process batch messages sent</td><td align="right" class='awrc'>198,353</td><td align="right" class='awrc'>324.43</td><td align="right" class='awrc'>2.20</td><td align="right" headers="perSecond Average" class='awrclb'>162.21</td><td align="right" headers="perSecond StdDev" class='awrc'>41.02</td><td align="right" headers="perSecond Min" class='awrc'>133.21</td><td align="right" headers="perSecond Max" class='awrcrb'>191.22</td></tr>
<tr><td scope="row" class='awrnc'>receiver cycle time</td><td align="right" class='awrnc'>452,799</td><td align="right" class='awrnc'>740.62</td><td align="right" class='awrnc'>5.02</td><td align="right" headers="perSecond Average" class='awrnclb'>370.31</td><td align="right" headers="perSecond StdDev" class='awrnc'>52.36</td><td align="right" headers="perSecond Min" class='awrnc'>333.29</td><td align="right" headers="perSecond Max" class='awrncrb'>407.33</td></tr>
<tr><td scope="row" class='awrc'>receiver loop count</td><td align="right" class='awrc'>1,811,351</td><td align="right" class='awrc'>2,962.77</td><td align="right" class='awrc'>20.08</td><td align="right" headers="perSecond Average" class='awrclb'>1,481.39</td><td align="right" headers="perSecond StdDev" class='awrc'>142.78</td><td align="right" headers="perSecond Min" class='awrc'>1,380.42</td><td align="right" headers="perSecond Max" class='awrcrb'>1,582.35</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12073"></a>
<h3 class="awr">System Statistics (Absolute Values)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Absolute Values)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Sessions">Sessions</th>
<th class="awrbg" colspan=" 2" id="OpenCursors">Open Cursors</th>
<th class="awrbg" colspan=" 2" id="SessionCachedCursors">Session Cached Cursors</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sessions Begin" class='awrclb'>104</td><td align="right" headers="Sessions End" class='awrc'>90</td><td align="right" headers="OpenCursors Begin" class='awrclb'>220</td><td align="right" headers="OpenCursors End" class='awrc'>153</td><td align="right" headers="SessionCachedCursors Begin" class='awrclb'>17,885</td><td align="right" headers="SessionCachedCursors End" class='awrcrb'>18,585</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sessions Begin" class='awrnclb'>108</td><td align="right" headers="Sessions End" class='awrnc'>91</td><td align="right" headers="OpenCursors Begin" class='awrnclb'>218</td><td align="right" headers="OpenCursors End" class='awrnc'>133</td><td align="right" headers="SessionCachedCursors Begin" class='awrnclb'>14,077</td><td align="right" headers="SessionCachedCursors End" class='awrncrb'>14,560</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>212</td><td align="right" class='awrct'>181</td><td align="right" class='awrclbt'>438</td><td align="right" class='awrct'>286</td><td align="right" class='awrclbt'>31,962</td><td align="right" class='awrcrbt'>33,145</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>106</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnclb'>219</td><td align="right" class='awrnc'>143</td><td align="right" class='awrnclb'>15,981</td><td align="right" class='awrncrb'>16,573</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>3</td><td align="right" class='awrc'>1</td><td align="right" class='awrclb'>1</td><td align="right" class='awrc'>14</td><td align="right" class='awrclb'>2,693</td><td align="right" class='awrcrb'>2,846</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="630"></a>
<h2 class="awr">
I/O Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12097">IO Profile (Global)</a></li>
<li class="awr"><a class="awr" href="#12076">IOStat by Function</a></li>
<li class="awr"><a class="awr" href="#12077">IOStat by File Type</a></li>
<li class="awr"><a class="awr" href="#12070">Segment Statistics (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12097"></a>
<h3 class="awr">IO Profile (Global)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IO Profile (Global)"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Read+Write/s</th><th class="awrbg" scope="col">Reads/s</th><th class="awrbg" scope="col">Writes/s</th></tr>
<tr><td class='awrc'>Total Requests</td><td align="right" class='awrc'>8,329.98</td><td align="right" class='awrc'>4,385.20</td><td align="right" class='awrc'>3,944.79</td></tr>
<tr><td class='awrnc'>Database Requests</td><td align="right" class='awrnc'>8,093.55</td><td align="right" class='awrnc'>4,368.00</td><td align="right" class='awrnc'>3,725.55</td></tr>
<tr><td class='awrc'>Optimized Requests</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo Requests</td><td align="right" class='awrnc'>61.57</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>61.57</td></tr>
<tr><td class='awrc'>Total (MB)</td><td align="right" class='awrc'>77.77</td><td align="right" class='awrc'>38.83</td><td align="right" class='awrc'>38.94</td></tr>
<tr><td class='awrnc'>Database (MB)</td><td align="right" class='awrnc'>65.50</td><td align="right" class='awrnc'>34.14</td><td align="right" class='awrnc'>31.36</td></tr>
<tr><td class='awrc'>Optimized Total (MB)</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo (MB)</td><td align="right" class='awrnc'>3.63</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>3.63</td></tr>
<tr><td class='awrc'>Database (blocks)</td><td align="right" class='awrc'>8,383.57</td><td align="right" class='awrc'>4,369.34</td><td align="right" class='awrc'>4,014.23</td></tr>
<tr><td class='awrnc'>Via Buffer Cache (blocks)</td><td align="right" class='awrnc'>8,381.76</td><td align="right" class='awrnc'>4,369.20</td><td align="right" class='awrnc'>4,012.56</td></tr>
<tr><td class='awrc'>Direct (blocks)</td><td align="right" class='awrc'>1.81</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>1.67</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12076"></a>
<h3 class="awr">IOStat by Function</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<td>&#160;</td><td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>5,049,280</td><td align="right" headers="Requests IOs/s" class='awrc'>8,256.03</td><td align="right" headers="Requests Reads/s" class='awrc'>4,308.49</td><td align="right" headers="Requests Writes/s" class='awrc'>3,947.54</td><td align="right" headers="MB Total" class='awrclb'>47,120</td><td align="right" headers="MB IOMB/s" class='awrc'>77.05</td><td align="right" headers="MB ReadMB/s" class='awrc'>38.19</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>38.86</td><td align="right" class='awrc'>2.7M</td><td align="right" class='awrc'>4.75ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrnclb'>2,624,508</td><td align="right" headers="Requests IOs/s" class='awrnc'>4,291.31</td><td align="right" headers="Requests Reads/s" class='awrnc'>4,291.31</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>20,514</td><td align="right" headers="MB IOMB/s" class='awrnc'>33.54</td><td align="right" headers="MB ReadMB/s" class='awrnc'>33.54</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>2.6M</td><td align="right" class='awrnc'>4.19ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>2,281,393</td><td align="right" headers="Requests IOs/s" class='awrc'>3,730.28</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>3,730.28</td><td align="right" headers="MB Total" class='awrclb'>19,196</td><td align="right" headers="MB IOMB/s" class='awrc'>31.39</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>31.39</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>LGWR</td><td align="right" headers="Requests Total" class='awrnclb'>131,484</td><td align="right" headers="Requests IOs/s" class='awrnc'>214.99</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>214.99</td><td align="right" headers="MB Total" class='awrnclb'>4,542</td><td align="right" headers="MB IOMB/s" class='awrnc'>7.43</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>7.43</td><td align="right" class='awrnc'>37.3K</td><td align="right" class='awrnc'>43.89ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Others</td><td align="right" headers="Requests Total" class='awrclb'>11,780</td><td align="right" headers="Requests IOs/s" class='awrc'>19.26</td><td align="right" headers="Requests Reads/s" class='awrc'>17.05</td><td align="right" headers="Requests Writes/s" class='awrc'>2.21</td><td align="right" headers="MB Total" class='awrclb'>2,863</td><td align="right" headers="MB IOMB/s" class='awrc'>4.68</td><td align="right" headers="MB ReadMB/s" class='awrc'>4.64</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.04</td><td align="right" class='awrc'>6670</td><td align="right" class='awrc'>6.21ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Direct Reads</td><td align="right" headers="Requests Total" class='awrnclb'>85</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.14</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.13</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.01</td><td align="right" headers="MB Total" class='awrnclb'>3</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrclb'>29</td><td align="right" headers="Requests IOs/s" class='awrc'>0.05</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>0.05</td><td align="right" headers="MB Total" class='awrclb'>2</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Streams AQ</td><td align="right" headers="Requests Total" class='awrnclb'>1</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.00</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>0</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>24.00ms</td></tr>
<tr><td align="right" scope="row" class='awrct'>1</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>3,166,345</td><td align="right" headers="Requests IOs/s" class='awrct'>5,177.26</td><td align="right" headers="Requests Reads/s" class='awrct'>2,534.08</td><td align="right" headers="Requests Writes/s" class='awrct'>2,643.18</td><td align="right" headers="MB Total" class='awrclbt'>29,428</td><td align="right" headers="MB IOMB/s" class='awrct'>48.12</td><td align="right" headers="MB ReadMB/s" class='awrct'>22.03</td><td align="right" headers="MB WriteMB/s" class='awrcrbt'>26.09</td><td align="right" class='awrct'>1.6M</td><td align="right" class='awrct'>1.77ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>DBWR</td><td align="right" headers="Requests Total" class='awrnclb'>1,578,399</td><td align="right" headers="Requests IOs/s" class='awrnc'>2,580.82</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>2,580.82</td><td align="right" headers="MB Total" class='awrnclb'>13,275</td><td align="right" headers="MB IOMB/s" class='awrnc'>21.71</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>21.71</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrclb'>1,544,630</td><td align="right" headers="Requests IOs/s" class='awrc'>2,525.61</td><td align="right" headers="Requests Reads/s" class='awrc'>2,525.61</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>12,070</td><td align="right" headers="MB IOMB/s" class='awrc'>19.74</td><td align="right" headers="MB ReadMB/s" class='awrc'>19.74</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>1.5M</td><td align="right" class='awrc'>1.12ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>LGWR</td><td align="right" headers="Requests Total" class='awrnclb'>37,490</td><td align="right" headers="Requests IOs/s" class='awrnc'>61.30</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>61.30</td><td align="right" headers="MB Total" class='awrnclb'>2,668</td><td align="right" headers="MB IOMB/s" class='awrnc'>4.36</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>4.36</td><td align="right" class='awrnc'>9833</td><td align="right" class='awrnc'>102.49ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Others</td><td align="right" headers="Requests Total" class='awrclb'>5,805</td><td align="right" headers="Requests IOs/s" class='awrc'>9.49</td><td align="right" headers="Requests Reads/s" class='awrc'>8.45</td><td align="right" headers="Requests Writes/s" class='awrc'>1.04</td><td align="right" headers="MB Total" class='awrclb'>1,415</td><td align="right" headers="MB IOMB/s" class='awrc'>2.31</td><td align="right" headers="MB ReadMB/s" class='awrc'>2.30</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.02</td><td align="right" class='awrc'>3300</td><td align="right" class='awrc'>9.39ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Direct Reads</td><td align="right" headers="Requests Total" class='awrnclb'>12</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.02</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.02</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>0</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrclb'>9</td><td align="right" headers="Requests IOs/s" class='awrc'>0.01</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>0.01</td><td align="right" headers="MB Total" class='awrclb'>0</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnct'>2</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>1,882,935</td><td align="right" headers="Requests IOs/s" class='awrnct'>3,078.77</td><td align="right" headers="Requests Reads/s" class='awrnct'>1,774.41</td><td align="right" headers="Requests Writes/s" class='awrnct'>1,304.36</td><td align="right" headers="MB Total" class='awrnclbt'>17,692</td><td align="right" headers="MB IOMB/s" class='awrnct'>28.93</td><td align="right" headers="MB ReadMB/s" class='awrnct'>16.15</td><td align="right" headers="MB WriteMB/s" class='awrncrbt'>12.77</td><td align="right" class='awrnct'>1.1M</td><td align="right" class='awrnct'>8.93ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrclb'>1,079,878</td><td align="right" headers="Requests IOs/s" class='awrc'>1,765.70</td><td align="right" headers="Requests Reads/s" class='awrc'>1,765.70</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>8,444</td><td align="right" headers="MB IOMB/s" class='awrc'>13.81</td><td align="right" headers="MB ReadMB/s" class='awrc'>13.81</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>1.1M</td><td align="right" class='awrc'>8.59ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>DBWR</td><td align="right" headers="Requests Total" class='awrnclb'>702,994</td><td align="right" headers="Requests IOs/s" class='awrnc'>1,149.46</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>1,149.46</td><td align="right" headers="MB Total" class='awrnclb'>5,921</td><td align="right" headers="MB IOMB/s" class='awrnc'>9.68</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>9.68</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>LGWR</td><td align="right" headers="Requests Total" class='awrclb'>93,994</td><td align="right" headers="Requests IOs/s" class='awrc'>153.69</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>153.69</td><td align="right" headers="MB Total" class='awrclb'>1,874</td><td align="right" headers="MB IOMB/s" class='awrc'>3.06</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>3.06</td><td align="right" class='awrc'>27.5K</td><td align="right" class='awrc'>22.94ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>5,975</td><td align="right" headers="Requests IOs/s" class='awrnc'>9.77</td><td align="right" headers="Requests Reads/s" class='awrnc'>8.60</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.17</td><td align="right" headers="MB Total" class='awrnclb'>1,448</td><td align="right" headers="MB IOMB/s" class='awrnc'>2.37</td><td align="right" headers="MB ReadMB/s" class='awrnc'>2.35</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.02</td><td align="right" class='awrnc'>3370</td><td align="right" class='awrnc'>3.10ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Direct Reads</td><td align="right" headers="Requests Total" class='awrclb'>73</td><td align="right" headers="Requests IOs/s" class='awrc'>0.12</td><td align="right" headers="Requests Reads/s" class='awrc'>0.11</td><td align="right" headers="Requests Writes/s" class='awrc'>0.01</td><td align="right" headers="MB Total" class='awrclb'>3</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrnclb'>20</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.03</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.03</td><td align="right" headers="MB Total" class='awrnclb'>2</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Streams AQ</td><td align="right" headers="Requests Total" class='awrclb'>1</td><td align="right" headers="Requests IOs/s" class='awrc'>0.00</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>0</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>24.00ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12077"></a>
<h3 class="awr">IOStat by File Type</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by File Type"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<th class="awrbg" colspan=" 2" id="ServiceTime">Service Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col" id="Small|Read">Small Read</th><th class="awrbg" scope="col" id="Large|Read">Large Read</th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>5,051,215</td><td align="right" headers="Requests IOs/s" class='awrc'>8,259.19</td><td align="right" headers="Requests Reads/s" class='awrc'>4,311.41</td><td align="right" headers="Requests Writes/s" class='awrc'>3,947.78</td><td align="right" headers="MB Total" class='awrclb'>47,130</td><td align="right" headers="MB IOMB/s" class='awrc'>77.06</td><td align="right" headers="MB ReadMB/s" class='awrc'>38.20</td><td align="right" headers="MB WriteMB/s" class='awrc'>38.86</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>3.69ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1764.01ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Data File</td><td align="right" headers="Requests Total" class='awrnclb'>4,907,842</td><td align="right" headers="Requests IOs/s" class='awrnc'>8,024.77</td><td align="right" headers="Requests Reads/s" class='awrnc'>4,294.22</td><td align="right" headers="Requests Writes/s" class='awrnc'>3,730.55</td><td align="right" headers="MB Total" class='awrnclb'>39,719</td><td align="right" headers="MB IOMB/s" class='awrnc'>64.94</td><td align="right" headers="MB ReadMB/s" class='awrnc'>33.55</td><td align="right" headers="MB WriteMB/s" class='awrnc'>31.40</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>3.70ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>134,742</td><td align="right" headers="Requests IOs/s" class='awrc'>220.32</td><td align="right" headers="Requests Reads/s" class='awrc'>5.35</td><td align="right" headers="Requests Writes/s" class='awrc'>214.96</td><td align="right" headers="MB Total" class='awrclb'>7,269</td><td align="right" headers="MB IOMB/s" class='awrc'>11.89</td><td align="right" headers="MB ReadMB/s" class='awrc'>4.46</td><td align="right" headers="MB WriteMB/s" class='awrc'>7.42</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>404.76us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1770.48ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>8,313</td><td align="right" headers="Requests IOs/s" class='awrnc'>13.59</td><td align="right" headers="Requests Reads/s" class='awrnc'>11.65</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.94</td><td align="right" headers="MB Total" class='awrnclb'>130</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.21</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.18</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.03</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>163.37us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Temp File</td><td align="right" headers="Requests Total" class='awrclb'>192</td><td align="right" headers="Requests IOs/s" class='awrc'>0.31</td><td align="right" headers="Requests Reads/s" class='awrc'>0.15</td><td align="right" headers="Requests Writes/s" class='awrc'>0.16</td><td align="right" headers="MB Total" class='awrclb'>12</td><td align="right" headers="MB IOMB/s" class='awrc'>0.02</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.01</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>289.16us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>.00ns</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Other</td><td align="right" headers="Requests Total" class='awrnclb'>126</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.21</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.03</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.17</td><td align="right" headers="MB Total" class='awrnclb'>0</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>1.33ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>1</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>3,167,796</td><td align="right" headers="Requests IOs/s" class='awrct'>5,179.63</td><td align="right" headers="Requests Reads/s" class='awrct'>2,536.46</td><td align="right" headers="Requests Writes/s" class='awrct'>2,643.17</td><td align="right" headers="MB Total" class='awrclbt'>29,435</td><td align="right" headers="MB IOMB/s" class='awrct'>48.13</td><td align="right" headers="MB ReadMB/s" class='awrct'>22.04</td><td align="right" headers="MB WriteMB/s" class='awrct'>26.08</td><td align="right" headers="ServiceTime Small|Read" class='awrclbt'>630.45us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrbt'>1797.96ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Data File</td><td align="right" headers="Requests Total" class='awrnclb'>3,124,522</td><td align="right" headers="Requests IOs/s" class='awrnc'>5,108.88</td><td align="right" headers="Requests Reads/s" class='awrnc'>2,528.02</td><td align="right" headers="Requests Writes/s" class='awrnc'>2,580.85</td><td align="right" headers="MB Total" class='awrnclb'>25,355</td><td align="right" headers="MB IOMB/s" class='awrnc'>41.46</td><td align="right" headers="MB ReadMB/s" class='awrnc'>19.75</td><td align="right" headers="MB WriteMB/s" class='awrnc'>21.71</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>631.95us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>39,103</td><td align="right" headers="Requests IOs/s" class='awrc'>63.94</td><td align="right" headers="Requests Reads/s" class='awrc'>2.65</td><td align="right" headers="Requests Writes/s" class='awrc'>61.29</td><td align="right" headers="MB Total" class='awrclb'>4,015</td><td align="right" headers="MB IOMB/s" class='awrc'>6.56</td><td align="right" headers="MB ReadMB/s" class='awrc'>2.20</td><td align="right" headers="MB WriteMB/s" class='awrc'>4.36</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>73.53us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1797.96ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>4,169</td><td align="right" headers="Requests IOs/s" class='awrnc'>6.82</td><td align="right" headers="Requests Reads/s" class='awrnc'>5.79</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.03</td><td align="right" headers="MB Total" class='awrnclb'>65</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.11</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.09</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.02</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>18.07us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Temp File</td><td align="right" headers="Requests Total" class='awrclb'>2</td><td align="right" headers="Requests IOs/s" class='awrc'>0.00</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>0</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>.00ns</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnct'>2</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>1,883,419</td><td align="right" headers="Requests IOs/s" class='awrnct'>3,079.56</td><td align="right" headers="Requests Reads/s" class='awrnct'>1,774.95</td><td align="right" headers="Requests Writes/s" class='awrnct'>1,304.61</td><td align="right" headers="MB Total" class='awrnclbt'>17,695</td><td align="right" headers="MB IOMB/s" class='awrnct'>28.93</td><td align="right" headers="MB ReadMB/s" class='awrnct'>16.16</td><td align="right" headers="MB WriteMB/s" class='awrnct'>12.78</td><td align="right" headers="ServiceTime Small|Read" class='awrnclbt'>8.07ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrbt'>1731.09ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Data File</td><td align="right" headers="Requests Total" class='awrclb'>1,783,320</td><td align="right" headers="Requests IOs/s" class='awrc'>2,915.89</td><td align="right" headers="Requests Reads/s" class='awrc'>1,766.20</td><td align="right" headers="Requests Writes/s" class='awrc'>1,149.69</td><td align="right" headers="MB Total" class='awrclb'>14,364</td><td align="right" headers="MB IOMB/s" class='awrc'>23.49</td><td align="right" headers="MB ReadMB/s" class='awrc'>13.80</td><td align="right" headers="MB WriteMB/s" class='awrc'>9.69</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>8.10ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Log File</td><td align="right" headers="Requests Total" class='awrnclb'>95,639</td><td align="right" headers="Requests IOs/s" class='awrnc'>156.38</td><td align="right" headers="Requests Reads/s" class='awrnc'>2.70</td><td align="right" headers="Requests Writes/s" class='awrnc'>153.67</td><td align="right" headers="MB Total" class='awrnclb'>3,254</td><td align="right" headers="MB IOMB/s" class='awrnc'>5.32</td><td align="right" headers="MB ReadMB/s" class='awrnc'>2.26</td><td align="right" headers="MB WriteMB/s" class='awrnc'>3.06</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>733.58us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>1743.64ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Control File</td><td align="right" headers="Requests Total" class='awrclb'>4,144</td><td align="right" headers="Requests IOs/s" class='awrc'>6.78</td><td align="right" headers="Requests Reads/s" class='awrc'>5.86</td><td align="right" headers="Requests Writes/s" class='awrc'>0.92</td><td align="right" headers="MB Total" class='awrclb'>65</td><td align="right" headers="MB IOMB/s" class='awrc'>0.11</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.09</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>306.92us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Temp File</td><td align="right" headers="Requests Total" class='awrnclb'>190</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.31</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.15</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.16</td><td align="right" headers="MB Total" class='awrnclb'>12</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.02</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.01</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>292.68us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>.00ns</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Other</td><td align="right" headers="Requests Total" class='awrclb'>126</td><td align="right" headers="Requests IOs/s" class='awrc'>0.21</td><td align="right" headers="Requests Reads/s" class='awrc'>0.03</td><td align="right" headers="Requests Writes/s" class='awrc'>0.17</td><td align="right" headers="MB Total" class='awrclb'>0</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>1.33ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12070"></a>
<h3 class="awr">Segment Statistics (Global)</h3>
<ul>
<li class="awr"> % Total shows % of statistic for each segment compared to the global cluster-wide total     (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants) </li>
<li class="awr"> % Capture shows % of statistic for each segment compared to the  total captured     by AWR for all segments during the snapshot interval</li>
<li class="awr">Captured Segments account for	82.7% of Total Logical Reads:	    3,684,618</li>
<li class="awr">Captured Segments account for	97.8% of Total Physical Reads:	     2,672,231</li>
<li class="awr">Captured Segments account for	97.8% of Total Physical Read Requests:	     2,671,411</li>
<li class="awr">Captured Segments account for	97.8% of Total UnOptimized Read Requests:	2,671,411</li>
<li class="awr">Captured Segments account for	 0.0% of Total Optimized  Read Requests:	       1</li>
<li class="awr">Captured Segments account for	 0.0% of Total Direct Physical Reads:		   84</li>
<li class="awr">Captured Segments account for	95.5% of Total Physical Writes:       2,455,052</li>
<li class="awr">Captured Segments account for	98.1% of Total Physical Write Requests:       2,278,496</li>
<li class="awr">Captured Segments account for	12.8% of Total Direct Physical Writes:		 1,021</li>
<li class="awr">Captured Segments account for	 0.0% of Total Table Scans:		  5</li>
<li class="awr">Captured Segments account for	 9.8% of Total CR Blocks Received:	     1,939</li>
<li class="awr">Captured Segments account for	81.5% of Total Current Blocks Received: 	 37,394</li>
<li class="awr">Captured Segments account for	 9.7% of Total CR Blocks Served:	   1,956</li>
<li class="awr">Captured Segments account for	81.7% of Total Current Blocks Served:	       37,304</li>
<li class="awr">Captured Segments account for	98.3% of Total Global Cache Remote Grants:	 1,276,216</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="Segment Statistics (Global). . % Total shows % of statistic for each segment compared to the global cluster-wide total (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants). % Capture shows % of statistic for each segment compared to the total captured by AWR for all segments during the snapshot interval"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%Capture</th></tr>
<tr><td class='awrc'>buffer busy waits</td><td class='awrc'>SYS</td><td class='awrc'>SYSTEM</td><td class='awrc'>SEG$</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>100.00</td></tr>
<tr><td class='awrnc'>db block changes</td><td class='awrnc'>USER23</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73508</td><td align="right" class='awrnc'>73516</td><td align="right" class='awrnc'>147,216</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>20.46</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>USER20</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73501</td><td align="right" class='awrc'>73506</td><td align="right" class='awrc'>144,624</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>20.10</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>USER25</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73527</td><td align="right" class='awrnc'>73522</td><td align="right" class='awrnc'>143,264</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>19.91</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>USER26</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73533</td><td align="right" class='awrc'>73537</td><td align="right" class='awrc'>142,576</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>19.81</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>USER22</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73514</td><td align="right" class='awrnc'>73510</td><td align="right" class='awrnc'>141,936</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>19.72</td></tr>
<tr><td class='awrc'>gc buffer busy</td><td class='awrc'>SYS</td><td class='awrc'>SYSTEM</td><td class='awrc'>SEG$</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>60.00</td></tr>
<tr><td class='awrnc'><div class="hidden">gc buffer busy</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSTEM</td><td class='awrnc'>I_HH_OBJ#_INTCOL#</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>70</td><td align="right" class='awrnc'>70</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>20.00</td></tr>
<tr><td class='awrc'><div class="hidden">gc buffer busy</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSTEM</td><td class='awrc'>COL$</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>20.00</td></tr>
<tr><td class='awrnc'>gc cr blocks received</td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_PARAMETER_PK</td><td class='awrnc'>WRH$_PARAMETER_3393773525_79</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>74065</td><td align="right" class='awrnc'>74065</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>1.70</td><td align="right" class='awrnc'>30.28</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_PARAMETER</td><td class='awrc'>WRH$_PARAMETER_3393773525_79</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>74063</td><td align="right" class='awrc'>74063</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>1.13</td><td align="right" class='awrc'>20.18</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_SYSTEM_EVENT</td><td class='awrnc'>WRH$_SYSTEM_EVENT_3393773525_79</td><td class='awrnc'>TABLE PARTITION</td><td align="right" class='awrnc'>74031</td><td align="right" class='awrnc'>74031</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0.88</td><td align="right" class='awrnc'>15.60</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_PK</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_79</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>74081</td><td align="right" class='awrc'>74081</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.67</td><td align="right" class='awrc'>11.93</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSTEM</td><td class='awrnc'>SEG$</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.67</td><td align="right" class='awrnc'>11.93</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_SYSTEM_EVENT_PK</td><td class='awrc'>WRH$_SYSTEM_EVENT_3393773525_79</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>74033</td><td align="right" class='awrc'>74033</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.57</td><td align="right" class='awrc'>10.09</td></tr>
<tr><td class='awrnc'>gc cr blocks served</td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_PARAMETER_PK</td><td class='awrnc'>WRH$_PARAMETER_3393773525_79</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>74065</td><td align="right" class='awrnc'>74065</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>1.69</td><td align="right" class='awrnc'>30.28</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_PARAMETER</td><td class='awrc'>WRH$_PARAMETER_3393773525_79</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>74063</td><td align="right" class='awrc'>74063</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>1.12</td><td align="right" class='awrc'>20.18</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_SYSTEM_EVENT</td><td class='awrnc'>WRH$_SYSTEM_EVENT_3393773525_79</td><td class='awrnc'>TABLE PARTITION</td><td align="right" class='awrnc'>74031</td><td align="right" class='awrnc'>74031</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0.87</td><td align="right" class='awrnc'>15.60</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_PK</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_79</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>74081</td><td align="right" class='awrc'>74081</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.66</td><td align="right" class='awrc'>11.93</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSTEM</td><td class='awrnc'>SEG$</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.66</td><td align="right" class='awrnc'>11.93</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_SYSTEM_EVENT_PK</td><td class='awrc'>WRH$_SYSTEM_EVENT_3393773525_79</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>74033</td><td align="right" class='awrc'>74033</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.56</td><td align="right" class='awrc'>10.09</td></tr>
<tr><td class='awrnc'>gc cu blocks received</td><td class='awrnc'>USER15</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73472</td><td align="right" class='awrnc'>73477</td><td align="right" class='awrnc'>2,869</td><td align="right" class='awrnc'>7.67</td><td align="right" class='awrnc'>29.10</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>USER19</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73485</td><td align="right" class='awrc'>73498</td><td align="right" class='awrc'>2,751</td><td align="right" class='awrc'>7.36</td><td align="right" class='awrc'>27.90</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>USER14</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73470</td><td align="right" class='awrnc'>73474</td><td align="right" class='awrnc'>1,582</td><td align="right" class='awrnc'>4.23</td><td align="right" class='awrnc'>16.05</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>USER31</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73552</td><td align="right" class='awrc'>73557</td><td align="right" class='awrc'>1,338</td><td align="right" class='awrc'>3.58</td><td align="right" class='awrc'>13.57</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>USER30</td><td class='awrnc'>IOPS</td><td class='awrnc'>I_CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>INDEX</td><td align="right" class='awrnc'>73561</td><td align="right" class='awrnc'>73561</td><td align="right" class='awrnc'>1,319</td><td align="right" class='awrnc'>3.53</td><td align="right" class='awrnc'>13.38</td></tr>
<tr><td class='awrc'>gc cu blocks served</td><td class='awrc'>USER15</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73472</td><td align="right" class='awrc'>73477</td><td align="right" class='awrc'>2,869</td><td align="right" class='awrc'>7.69</td><td align="right" class='awrc'>29.10</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>USER19</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73485</td><td align="right" class='awrnc'>73498</td><td align="right" class='awrnc'>2,751</td><td align="right" class='awrnc'>7.37</td><td align="right" class='awrnc'>27.90</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>USER14</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73470</td><td align="right" class='awrc'>73474</td><td align="right" class='awrc'>1,582</td><td align="right" class='awrc'>4.24</td><td align="right" class='awrc'>16.05</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>USER31</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73552</td><td align="right" class='awrnc'>73557</td><td align="right" class='awrnc'>1,338</td><td align="right" class='awrnc'>3.59</td><td align="right" class='awrnc'>13.57</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>USER30</td><td class='awrc'>IOPS</td><td class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73561</td><td align="right" class='awrc'>73561</td><td align="right" class='awrc'>1,319</td><td align="right" class='awrc'>3.54</td><td align="right" class='awrc'>13.38</td></tr>
<tr><td class='awrnc'>gc remote grants</td><td class='awrnc'>USER14</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73470</td><td align="right" class='awrnc'>73474</td><td align="right" class='awrnc'>106,262</td><td align="right" class='awrnc'>8.33</td><td align="right" class='awrnc'>30.21</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>USER12</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73464</td><td align="right" class='awrc'>73460</td><td align="right" class='awrc'>62,321</td><td align="right" class='awrc'>4.88</td><td align="right" class='awrc'>17.72</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>USER30</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73550</td><td align="right" class='awrnc'>73554</td><td align="right" class='awrnc'>62,103</td><td align="right" class='awrnc'>4.87</td><td align="right" class='awrnc'>17.66</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>USER1</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73402</td><td align="right" class='awrc'>73404</td><td align="right" class='awrc'>61,924</td><td align="right" class='awrc'>4.85</td><td align="right" class='awrc'>17.60</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>USER32</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73562</td><td align="right" class='awrnc'>73567</td><td align="right" class='awrnc'>59,143</td><td align="right" class='awrnc'>4.63</td><td align="right" class='awrnc'>16.81</td></tr>
<tr><td class='awrc'>logical reads</td><td class='awrc'>USER23</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73508</td><td align="right" class='awrc'>73516</td><td align="right" class='awrc'>147,248</td><td align="right" class='awrc'>4.00</td><td align="right" class='awrc'>20.46</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>USER20</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73501</td><td align="right" class='awrnc'>73506</td><td align="right" class='awrnc'>144,640</td><td align="right" class='awrnc'>3.93</td><td align="right" class='awrnc'>20.10</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER25</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73527</td><td align="right" class='awrc'>73522</td><td align="right" class='awrc'>143,296</td><td align="right" class='awrc'>3.89</td><td align="right" class='awrc'>19.91</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>USER26</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73533</td><td align="right" class='awrnc'>73537</td><td align="right" class='awrnc'>142,608</td><td align="right" class='awrnc'>3.87</td><td align="right" class='awrnc'>19.81</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER22</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73514</td><td align="right" class='awrc'>73510</td><td align="right" class='awrc'>141,952</td><td align="right" class='awrc'>3.85</td><td align="right" class='awrc'>19.72</td></tr>
<tr><td class='awrnc'>physical reads</td><td class='awrnc'>USER26</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73533</td><td align="right" class='awrnc'>73537</td><td align="right" class='awrnc'>135,711</td><td align="right" class='awrnc'>5.08</td><td align="right" class='awrnc'>20.11</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>USER22</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73514</td><td align="right" class='awrc'>73510</td><td align="right" class='awrc'>135,230</td><td align="right" class='awrc'>5.06</td><td align="right" class='awrc'>20.04</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>USER20</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73501</td><td align="right" class='awrnc'>73506</td><td align="right" class='awrnc'>135,138</td><td align="right" class='awrnc'>5.06</td><td align="right" class='awrnc'>20.02</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>USER25</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73527</td><td align="right" class='awrc'>73522</td><td align="right" class='awrc'>135,134</td><td align="right" class='awrc'>5.06</td><td align="right" class='awrc'>20.02</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>USER23</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73508</td><td align="right" class='awrnc'>73516</td><td align="right" class='awrnc'>133,663</td><td align="right" class='awrnc'>5.00</td><td align="right" class='awrnc'>19.81</td></tr>
<tr><td class='awrc'>physical read requests</td><td class='awrc'>USER26</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73533</td><td align="right" class='awrc'>73537</td><td align="right" class='awrc'>135,711</td><td align="right" class='awrc'>5.08</td><td align="right" class='awrc'>20.11</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>USER22</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73514</td><td align="right" class='awrnc'>73510</td><td align="right" class='awrnc'>135,230</td><td align="right" class='awrnc'>5.06</td><td align="right" class='awrnc'>20.04</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>USER20</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73501</td><td align="right" class='awrc'>73506</td><td align="right" class='awrc'>135,138</td><td align="right" class='awrc'>5.06</td><td align="right" class='awrc'>20.02</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>USER25</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73527</td><td align="right" class='awrnc'>73522</td><td align="right" class='awrnc'>135,134</td><td align="right" class='awrnc'>5.06</td><td align="right" class='awrnc'>20.02</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>USER23</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73508</td><td align="right" class='awrc'>73516</td><td align="right" class='awrc'>133,663</td><td align="right" class='awrc'>5.00</td><td align="right" class='awrc'>19.81</td></tr>
<tr><td class='awrnc'>physical writes</td><td class='awrnc'>USER23</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73508</td><td align="right" class='awrnc'>73516</td><td align="right" class='awrnc'>156,526</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>20.46</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>USER20</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73501</td><td align="right" class='awrc'>73506</td><td align="right" class='awrc'>153,621</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>20.08</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>USER26</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73533</td><td align="right" class='awrnc'>73537</td><td align="right" class='awrnc'>151,907</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>19.86</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>USER25</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73527</td><td align="right" class='awrc'>73522</td><td align="right" class='awrc'>151,546</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>19.81</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>USER22</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73514</td><td align="right" class='awrnc'>73510</td><td align="right" class='awrnc'>151,413</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>19.79</td></tr>
<tr><td class='awrc'>physical writes direct</td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_79</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>74079</td><td align="right" class='awrc'>74079</td><td align="right" class='awrc'>114</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>87.02</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes direct</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>SYS_LOB0000007451C00009$$</td><td class='awrnc'>SYS_LOB_P256</td><td class='awrnc'>LOB PARTITION</td><td align="right" class='awrnc'>73950</td><td align="right" class='awrnc'>73950</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>12.98</td></tr>
<tr><td class='awrc'>physical write requests</td><td class='awrc'>USER23</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73508</td><td align="right" class='awrc'>73516</td><td align="right" class='awrc'>146,488</td><td align="right" class='awrc'>6.43</td><td align="right" class='awrc'>20.39</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>USER20</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73501</td><td align="right" class='awrnc'>73506</td><td align="right" class='awrnc'>144,168</td><td align="right" class='awrnc'>6.33</td><td align="right" class='awrnc'>20.07</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>USER26</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73533</td><td align="right" class='awrc'>73537</td><td align="right" class='awrc'>142,823</td><td align="right" class='awrc'>6.27</td><td align="right" class='awrc'>19.88</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>USER25</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73527</td><td align="right" class='awrnc'>73522</td><td align="right" class='awrnc'>142,426</td><td align="right" class='awrnc'>6.25</td><td align="right" class='awrnc'>19.83</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>USER22</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73514</td><td align="right" class='awrc'>73510</td><td align="right" class='awrc'>142,365</td><td align="right" class='awrc'>6.25</td><td align="right" class='awrc'>19.82</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12083"></a>
<h3 class="awr">Library Cache Activity</h3>
<ul>
<li class="awr"> Summarized for all instances in the report </li>
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
</ul>
<table border="0" class="tdiff" summary="Library Cache Activity. . Summarized for all instances in the report. &quot;Pct Misses&quot; should be very low "><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>ACCOUNT_STATUS</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>25.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>AUDIT POLICY</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>423</td><td align="right" class='awrc'>0.47</td><td align="right" class='awrc'>818</td><td align="right" class='awrc'>5.62</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>564</td><td align="right" class='awrc'>807</td><td align="right" class='awrc'>807</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>CLUSTER</td><td align="right" class='awrnc'>316</td><td align="right" class='awrnc'>1.27</td><td align="right" class='awrnc'>316</td><td align="right" class='awrnc'>1.27</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>316</td><td align="right" class='awrnc'>316</td><td align="right" class='awrnc'>316</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>DBLINK</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>EDITION</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>16.67</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>16.67</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>HINTSET OBJECT</td><td align="right" class='awrc'>332</td><td align="right" class='awrc'>18.98</td><td align="right" class='awrc'>332</td><td align="right" class='awrc'>19.28</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>332</td><td align="right" class='awrc'>332</td><td align="right" class='awrc'>332</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>INDEX</td><td align="right" class='awrnc'>169</td><td align="right" class='awrnc'>2.37</td><td align="right" class='awrnc'>171</td><td align="right" class='awrnc'>16.96</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>171</td><td align="right" class='awrnc'>171</td><td align="right" class='awrnc'>171</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>OBJECT ID</td><td align="right" class='awrc'>89</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>QUEUE</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>21.31</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>21.31</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SCHEMA</td><td align="right" class='awrc'>1,010</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>90</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA</td><td align="right" class='awrnc'>5,787</td><td align="right" class='awrnc'>34.92</td><td align="right" class='awrnc'>128,807</td><td align="right" class='awrnc'>2.66</td><td align="right" class='awrnc'>701</td><td align="right" class='awrnc'>94</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA BUILD</td><td align="right" class='awrc'>1,369</td><td align="right" class='awrc'>70.42</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA STATS</td><td align="right" class='awrnc'>1,078</td><td align="right" class='awrnc'>79.31</td><td align="right" class='awrnc'>1,078</td><td align="right" class='awrnc'>79.31</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TABLE/PROCEDURE</td><td align="right" class='awrc'>7,304</td><td align="right" class='awrc'>9.04</td><td align="right" class='awrc'>29,485</td><td align="right" class='awrc'>9.33</td><td align="right" class='awrc'>1,052</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12,368</td><td align="right" class='awrc'>20,809</td><td align="right" class='awrc'>20,809</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRANSFORMATION</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>21.31</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>21.31</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TRIGGER</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>10.00</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>10.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="633"></a>
<h2 class="awr">
Memory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12074">PGA Aggregate Target Statistics</a></li>
<li class="awr"><a class="awr" href="#12075">Process Memory Summary</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12074"></a>
<h3 class="awr">PGA Aggregate Target Statistics</h3>
<ul>
<li class="awr"> all stats are reported in MegaBytes</li>
</ul>
<table border="0" class="tdiff" summary="PGA Aggregate Target Statistics. . all stats are reported in MegaBytes"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="PGAAggrTarget">PGA Aggr Target</th>
<th class="awrbg" colspan=" 2" id="AutoPGATarget">Auto PGA Target</th>
<th class="awrbg" colspan=" 2" id="PGAMemAlloc">PGA Mem Alloc</th>
<th class="awrbg" colspan=" 2" id="AutoWorkareas">Auto Workareas</th>
<th class="awrbg" colspan=" 2" id="ManualWorkarea">Manual Workarea</th>
<th class="awrbg" colspan=" 2" id="GlobalMemBound">Global Mem Bound</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="PGAAggrTarget Begin" class='awrclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrclb'>1,868.48</td><td align="right" headers="AutoPGATarget End" class='awrc'>1,913.25</td><td align="right" headers="PGAMemAlloc Begin" class='awrclb'>1,435.94</td><td align="right" headers="PGAMemAlloc End" class='awrc'>1,378.67</td><td align="right" headers="AutoWorkareas Begin" class='awrclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrcrb'>321.49</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="PGAAggrTarget Begin" class='awrnclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrnc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrnclb'>1,865.38</td><td align="right" headers="AutoPGATarget End" class='awrnc'>1,917.33</td><td align="right" headers="PGAMemAlloc Begin" class='awrnclb'>1,393.59</td><td align="right" headers="PGAMemAlloc End" class='awrnc'>1,312.48</td><td align="right" headers="AutoWorkareas Begin" class='awrnclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrnc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrnclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrnc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrnclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrncrb'>321.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12075"></a>
<h3 class="awr">Process Memory Summary</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap I#: Instance number  </li>
<li class="awr"> Max Alloc is Maximum PGA allocation size at snapshot time </li>
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>
<li class="awr"> ordered by instance, Begin/End snapshot, Alloc (MB) </li>
</ul>
<table border="0" class="tdiff" summary="Process Memory Summary. . B: Begin Snap E: End Snap I#: Instance number . Max Alloc is Maximum PGA allocation size at snapshot time. Hist Max Alloc is the Historical Max Allocation for still-connected processes. ordered by instance, Begin/End snapshot, Alloc (MB) "><tr><th class="awrbg" scope="col">I#</th><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>231.44</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.92</td><td align="right" class='awrc'>8.60</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>47</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>669.72</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.44</td><td align="right" class='awrnc'>8.26</td><td align="right" class='awrnc'>44</td><td align="right" class='awrnc'>44</td><td align="right" class='awrnc'>123</td><td align="right" class='awrnc'>123</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>14.89</td><td align="right" class='awrc'>12.35</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.35</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>105</td><td align="right" class='awrc'>104</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>7.94</td><td align="right" class='awrnc'>5.30</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.29</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>47</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>923.99</td><td align="right" class='awrc'>17.65</td><td align="right" class='awrc'>10.65</td><td align="right" class='awrc'>17.50</td><td align="right" class='awrc'>82</td><td align="right" class='awrc'>65</td><td align="right" class='awrc'>332</td><td align="right" class='awrc'>321</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>226.25</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>6.86</td><td align="right" class='awrnc'>10.19</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>33</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>625.30</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.74</td><td align="right" class='awrc'>8.79</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>109</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>8.35</td><td align="right" class='awrnc'>5.89</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.35</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>91</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>6.81</td><td align="right" class='awrc'>5.47</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>34</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>866.71</td><td align="right" class='awrnc'>11.36</td><td align="right" class='awrnc'>12.84</td><td align="right" class='awrnc'>19.69</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>65</td><td align="right" class='awrnc'>276</td><td align="right" class='awrnc'>267</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>184.25</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.09</td><td align="right" class='awrc'>7.30</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>45</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>669.49</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.27</td><td align="right" class='awrnc'>7.93</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>127</td><td align="right" class='awrnc'>127</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>20.31</td><td align="right" class='awrc'>18.45</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrc'>0.48</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>108</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>7.59</td><td align="right" class='awrnc'>5.07</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>59</td><td align="right" class='awrnc'>50</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>881.64</td><td align="right" class='awrc'>23.52</td><td align="right" class='awrc'>9.68</td><td align="right" class='awrc'>16.01</td><td align="right" class='awrc'>74</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>340</td><td align="right" class='awrc'>330</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>177.06</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.71</td><td align="right" class='awrnc'>8.83</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>31</td><td align="right" class='awrnc'>31</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>605.05</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.50</td><td align="right" class='awrc'>8.66</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>110</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>11.84</td><td align="right" class='awrnc'>10.02</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.50</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>92</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>6.57</td><td align="right" class='awrc'>4.94</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>33</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>800.53</td><td align="right" class='awrnc'>14.95</td><td align="right" class='awrnc'>11.50</td><td align="right" class='awrnc'>18.35</td><td align="right" class='awrnc'>73</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>275</td><td align="right" class='awrnc'>266</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="638"></a>
<h2 class="awr">
Supplemental Information
</h2>
<ul>
<li class="awr"><a class="awr" href="#12080">init.ora Parameters</a></li>
<li class="awr"><a class="awr" href="#12084">init.ora Multi-valued Parameters</a></li>
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12080"></a>
<h3 class="awr">init.ora Parameters</h3>
<ul>
<li class="awr"> '*' indicates same value across all instances</li>
</ul>
<table border="0" class="tdiff" summary="This table displays values for init.ora parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>*</td><td class='awrc'>TRUE</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>*</td><td class='awrc'>DB</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>*</td><td class='awrnc'>TRUE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>*</td><td class='awrc'>19.0.0</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>*</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>*</td><td class='awrc'>8192</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>+DATA</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>*</td><td class='awrc'>example.com</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>*</td><td class='awrnc'>p30db</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>*</td><td class='awrc'>+FRA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>*</td><td class='awrnc'>274877906944</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>*</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>*</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>1</td><td class='awrc'>1</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">instance_number</div></td><td class='awrnc'>2</td><td class='awrnc'>2</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>listener_networks</td><td class='awrc'>*</td><td class='awrc'></td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>local_listener</td><td class='awrnc'>1</td><td class='awrnc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522))</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">local_listener</div></td><td class='awrc'>2</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522))</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>*</td><td class='awrnc'>AMERICAN</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>*</td><td class='awrc'>AMERICA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>*</td><td class='awrnc'>300</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>*</td><td class='awrc'>3371171840</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>*</td><td class='awrnc'>640</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>*</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>*</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>*</td><td class='awrc'>10133438464</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>1</td><td class='awrnc'>1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">thread</div></td><td class='awrc'>2</td><td class='awrc'>2</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>undo_tablespace</td><td class='awrnc'>1</td><td class='awrnc'>UNDOTBS1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">undo_tablespace</div></td><td class='awrc'>2</td><td class='awrc'>UNDOTBS2</td><td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12084"></a>
<h3 class="awr">init.ora Multi-valued Parameters</h3>
<ul>
<li class="awr"> This section only displays parameters that have more one value </li>
<li class="awr"> '*' indicates same value across all instances </li>
<li class="awr"> '(NULL)' indicates that the  parameter value was not set </li>
<li class="awr"> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="init.ora Multi-valued Parameters. . This section only displays parameters that have more one value. '*' indicates same value across all instances. '(NULL)' indicates that the parameter value was not set. A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td class='awrc'>control_files</td><td class='awrc'>*</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'></td></tr>
<tr><td class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>*</td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="04kug40zbu4dm"></a>04kug40zbu4dm</td><td class='awrc'><pre_sqltext class="awr">select policy#,  action# from aud_object_opt$ where object# = :1 and type = 2</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="0sbbcuruzd66f"></a>0sbbcuruzd66f</td><td class='awrnc'><pre_sqltext class="awr">select /*+ rule */ bucket_cnt,  row_cnt,  cache_cnt,  null_cnt,	timestamp#,  sample_size,  minimum,  maximum,  distcnt,  lowval,  hival,  density,  col#,  spare1,  spare2,  avgcln,  minimum_enc,  maximum_enc from hist_head$ where obj#=:1 and intcol#=:2</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="129d7r965xakz"></a>129d7r965xakz</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '30';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="27kw116fyz8ch"></a>27kw116fyz8ch</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '26';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_
cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_
home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time
:= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_
SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

------------------------------------------------------------------------------------------------------
----------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_up
date := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

		v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; (
v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been exec
uted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If
this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="2s38bb8cxwhkg"></a>2s38bb8cxwhkg</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '22';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="2sxqgx5hx76qr"></a>2sxqgx5hx76qr</td><td class='awrnc'><pre_sqltext class="awr">select /*+ rule */ bucket,  endpoint,  col#,  epvalue,  epvalue_raw,  ep_repeat_count,  endpoint_enc from histgrm$ where obj#=:1 and intcol#=:2 and row#=:3 order by bucket</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,	C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="3uawgw8gknfx7"></a>3uawgw8gknfx7</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '15';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_
cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_
home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time
:= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_
SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

------------------------------------------------------------------------------------------------------
----------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_up
date := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

		v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; (
v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been exec
uted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If
this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="4p0za9517qhty"></a>4p0za9517qhty</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '31';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5nff7mqnapavq"></a>5nff7mqnapavq</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '17';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_
cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_
home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time
:= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_
SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

------------------------------------------------------------------------------------------------------
----------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_up
date := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

		v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; (
v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been exec
uted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If
this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="63wngb2bqq9gg"></a>63wngb2bqq9gg</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '11';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="7huzc5jc2tyyr"></a>7huzc5jc2tyyr</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '4';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_c
nt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_h
ome_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :
= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_S
CHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-------------------------------------------------------------------------------------------------------
---------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upd
ate := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

       	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v
_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execu
ted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If t
his is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="7qdskga9a98tt"></a>7qdskga9a98tt</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '12';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="83dzbzw98577h"></a>83dzbzw98577h</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '29';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_
cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_
home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time
:= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_
SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

------------------------------------------------------------------------------------------------------
----------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_up
date := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

		v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; (
v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been exec
uted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If
this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="87gaftwrm2h68"></a>87gaftwrm2h68</td><td class='awrc'><pre_sqltext class="awr">select o.owner#, o.name, o.namespace, o.remoteowner, o.linkname, o.subname from obj$ o where o.obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="899d7tfh478uf"></a>899d7tfh478uf</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '5';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_c
nt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_h
ome_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :
= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_S
CHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-------------------------------------------------------------------------------------------------------
---------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upd
ate := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

       	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v
_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execu
ted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If t
his is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="89zxxhhq9a38k"></a>89zxxhhq9a38k</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '20';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="92ys8asf4wtfh"></a>92ys8asf4wtfh</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '6';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_c
nt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_h
ome_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :
= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_S
CHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-------------------------------------------------------------------------------------------------------
---------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upd
ate := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

       	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v
_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execu
ted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If t
his is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9tgj4g8y4rwy8"></a>9tgj4g8y4rwy8</td><td class='awrc'><pre_sqltext class="awr">select type#, blocks, extents, minexts, maxexts, extsize, extpct, user#, iniexts, NVL(lists, 65535), NVL(groups, 65535), cachehint, hwmincr,  NVL(spare1, 0), NVL(scanhint, 0), NVL(bitmapranges, 0) from seg$ where ts#=:1 and file#=:2 and block#=:3</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="a44zayg3f6y2j"></a>a44zayg3f6y2j</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '32';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_
cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_
home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time
:= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_
SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

------------------------------------------------------------------------------------------------------
----------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_up
date := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

		v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; (
v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been exec
uted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If
this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="acmvv4fhdc9zh"></a>acmvv4fhdc9zh</td><td class='awrc'><pre_sqltext class="awr">select obj#, type#, ctime, mtime, stime,  status,	dataobj#,  flags,  oid$,  spare1,  spare2,  spare3,  signature,  spare7,  spare8,  spare9,  nvl(dflcollid,  16382),  creappid,	creverid,  modappid,  modverid,  crepatchid,  modpatchid from obj$ where owner#=:1 and name=:2 and namespace=:3 and remoteowner is null and linkname is null and subname is null</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="asvzxj61dc5vs"></a>asvzxj61dc5vs</td><td class='awrnc'><pre_sqltext class="awr">select timestamp,  flags from fixed_obj$ where obj#=:1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="c863fngb197rm"></a>c863fngb197rm</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '1';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="cbqrzstc5g855"></a>cbqrzstc5g855</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '25';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_
cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_
home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time
:= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_
SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

------------------------------------------------------------------------------------------------------
----------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_up
date := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

		v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; (
v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been exec
uted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If
this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="crcf813m8k6q0"></a>crcf813m8k6q0</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '16';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="dbyf2w4zdhm5a"></a>dbyf2w4zdhm5a</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '14';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_
cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_
home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time
:= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_
SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

------------------------------------------------------------------------------------------------------
----------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_up
date := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

		v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; (
v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been exec
uted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If
this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f3ww8rgva3hrs"></a>f3ww8rgva3hrs</td><td class='awrc'><pre_sqltext class="awr">update /* KSXM:FLUSH COL */ sys.col_usage$ set		     equality_preds    = equality_preds    + decode(bitand(:flag, 1), 0, 0, 1),    equijoin_preds    = equijoin_preds	 + decode(bitand(:flag, 2), 0, 0, 1),	 nonequijoin_preds = nonequijoin_preds + decode(bitand(:flag, 4), 0, 0, 1),    range_preds	 = range_preds	     + decode(bitand(:flag, 8), 0, 0, 1),    like_preds        = like_preds	   + decode(bitand(:flag, 16), 0, 0, 1),    null_preds	      = null_preds	  + decode(bitand(:flag, 32), 0, 0, 1),    flags	     = flags + :flag - bitand(flags, :flag),	 timestamp = :time where obj# = :objn and intcol# = :coln</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="ffg3064p5ba19"></a>ffg3064p5ba19</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '23';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_
cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_
home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time
:= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_
SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

------------------------------------------------------------------------------------------------------
----------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_up
date := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

		v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; (
v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been exec
uted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If
this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="g0t052az3rx44"></a>g0t052az3rx44</td><td class='awrc'><pre_sqltext class="awr">select name, intcol#, segcol#, type#, length, nvl(precision#, 0), decode(type#, 2, nvl(scale, -127/*MAXSB1MINAL*/), 178, scale, 179, scale, 180, scale, 181, scale, 182, scale, 183, scale, 231, scale, 0), null$, fixedstorage, nvl(deflength, 0), default$, rowid, col#, property,  nvl(charsetid, 0), nvl(charsetform, 0), spare1, spare2, nvl(spare3, 0),  nvl(evaledition#, 1), nvl(unusablebefore#, 0), nvl(unusablebeginning#, 0),	case when (type# in (1, 8, 9, 96, 112)) then nvl(collid,  16382) else 0 end case,  nvl(collintcol#, 0),  nvl(acdrrescol#,  0),	nvl(spare7,  0),  nvl(spare9,  0),  nvl(spare10,  0) from col$ where obj#=:1 order by intcol#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="g5wjwfs93z517"></a>g5wjwfs93z517</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '24';
v_update_pct PLS_INTEGER := '100';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '32' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_
cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_
home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time
:= DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_
SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

------------------------------------------------------------------------------------------------------
----------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_up
date := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

		v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; (
v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been exec
uted. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If
this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
</table>
<p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="43"></a>
<h2 class="awr">
Active Session History(ASH) Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#9981">Top SQL with Top Events</a></li>
<li class="awr"><a class="awr" href="#9980">Top SQL with Top Row Sources</a></li>
<li class="awr"><a class="awr" href="#9984">Top Sessions</a></li>
<li class="awr"><a class="awr" href="#9983">Top Blocking Sessions</a></li>
<li class="awr"><a class="awr" href="#9982">Top PL/SQL Procedures</a></li>
<li class="awr"><a class="awr" href="#9979">Top Events</a></li>
<li class="awr"><a class="awr" href="#9985">Top Event P1/P2/P3 Values</a></li>
<li class="awr"><a class="awr" href="#9978">Top DB Objects</a></li>
<li class="awr"><a class="awr" href="#9977">Activity Over Time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9981"></a>
<h3 class="awr">Top SQL with Top Events</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrc'>203653710</td><td align="right" class='awrc'>1852</td><td align="right" class='awrc'>83.12</td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>49.64</td><td class='awrc'>UPDATE</td><td align="right" class='awrc'>49.46</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrnc'><div class="hidden">203653710</div></td><td align="right" class='awrnc'><div class="hidden">1852</div></td><td align="right" class='awrnc'><div class="hidden">83.12387791741472172351885098743267504488</div></td>
<td class='awrnc'>free buffer waits</td><td align="right" class='awrnc'>24.78</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>24.73</td>
<td class='awrnc'></td></tr>
<tr><td align="right" class='awrc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrc'><div class="hidden">203653710</div></td><td align="right" class='awrc'><div class="hidden">1852</div></td><td align="right" class='awrc'><div class="hidden">83.12387791741472172351885098743267504488</div></td>
<td class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>4.04</td><td class='awrc'>UPDATE</td><td align="right" class='awrc'>4.04</td>
<td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9980"></a>
<h3 class="awr">Top SQL with Top Row Sources</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrc'>203653710</td><td align="right" class='awrc'>1852</td><td align="right" class='awrc'>83.12</td>
<td class='awrc'>UPDATE</td><td align="right" class='awrc'>82.63</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>49.46</td>
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9984"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>4,40357</td><td align="right" class='awrc'>2.74</td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>2.65</td>
<td class='awrc'>SYS</td><td class='awrc'>oracle@mcracpo...le.com (DBW0)</td><td align="right" class='awrc'>59/61 [ 97%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>10,47618</td><td align="right" class='awrnc'>2.60</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>1.39</td>
<td class='awrnc'>USER10</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>31/61 [ 51%]</td><td align="right" class='awrnc'>31</td></tr>
<tr><td align="right" scope="row" class='awrc'>11,11821</td><td align="right" class='awrc'>2.60</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.42</td>
<td class='awrc'>USER13</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>54/61 [ 88%]</td><td align="right" class='awrc'>53</td></tr>
<tr><td align="right" scope="row" class='awrnc'>14, 9261</td><td align="right" class='awrnc'>2.60</td><td class='awrnc'>free buffer waits</td><td align="right" class='awrnc'>1.93</td>
<td class='awrnc'>USER25</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>43/61 [ 70%]</td><td align="right" class='awrnc'>43</td></tr>
<tr><td align="right" scope="row" class='awrc'>16, 6218</td><td align="right" class='awrc'>2.60</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.42</td>
<td class='awrc'>USER30</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>54/61 [ 88%]</td><td align="right" class='awrc'>51</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9983"></a>
<h3 class="awr">Top Blocking Sessions</h3>
<ul>
<li class="awr"> Blocking session activity percentages are calculated with respect to	     waits on enqueues, latches and &quot;buffer busy&quot; only  </li>
<li class="awr"> '% Activity' represents the load on the database caused by	   a particular blocking session </li>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the	blocking session was found active. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the blocking session was found active.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top sessions that are blocking other sessions."><tr><th class="awrbg" scope="col">Blocking Sid (Inst)</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event Caused</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>4,40357(     1)</td><td align="right" class='awrc'>25.18</td><td class='awrc'>free buffer waits</td><td align="right" class='awrc'>24.82</td>
<td class='awrc'>SYS</td><td class='awrc'>oracle@mcracpo...le.com (DBW0)</td><td align="right" class='awrc'>60/61 [ 98%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>374,41238(     1)</td><td align="right" class='awrnc'>2.83</td><td class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>2.42</td>
<td class='awrnc'>SYS</td><td class='awrnc'>oracle@mcracpo...le.com (LG00)</td><td align="right" class='awrnc'>54/61 [ 88%]</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9982"></a>
<h3 class="awr">Top PL/SQL Procedures</h3>
<ul>
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>83.30</td>
<td class='awrc'>SQL</td><td align="right" class='awrc'>83.30</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9979"></a>
<h3 class="awr">Top Events</h3>
<ul>
<li class="awr"> Top Events by DB Time </li>
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>49.64</td><td align="right" class='awrc'>18.10</td></tr>
<tr><td scope="row" class='awrnc'>free buffer waits</td><td class='awrnc'>Configuration</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>24.78</td><td align="right" class='awrnc'>9.03</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td class='awrc'>System I/O</td><td class='awrc'>BACKGROUND</td>
<td align="right" class='awrc'>7.09</td><td align="right" class='awrc'>2.59</td></tr>
<tr><td scope="row" class='awrnc'>CPU + Wait for CPU</td><td class='awrnc'>CPU</td><td class='awrnc'>BACKGROUND</td>
<td align="right" class='awrnc'>4.44</td><td align="right" class='awrnc'>1.62</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td class='awrc'>Cluster</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>4.04</td><td align="right" class='awrc'>1.47</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9985"></a>
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
<ul>
<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>49.64</td><td align="right" class='awrc'>&quot;2&quot;,&quot;24933777&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.04</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
<tr><td scope="row" class='awrnc'>free buffer waits</td><td align="right" class='awrnc'>24.82</td><td align="right" class='awrnc'>&quot;2&quot;,&quot;26616823&quot;,&quot;24&quot;</td><td align="right" class='awrnc'>0.04</td>
<td class='awrnc'>file#</td><td class='awrnc'>block#</td><td class='awrnc'>set-id#</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>7.09</td><td align="right" class='awrc'>&quot;2&quot;,&quot;112&quot;,&quot;4&quot;</td><td align="right" class='awrc'>0.13</td>
<td class='awrc'>files</td><td class='awrc'>blocks</td><td class='awrc'>requests</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9978"></a>
<h3 class="awr">Top DB Objects</h3>
<ul>
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
<tr><td align="right" scope="row" class='awrc'>73472</td><td align="right" class='awrc'>2.60</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.47</td>
<td class='awrc'>USER15.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73550</td><td align="right" class='awrnc'>2.60</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.42</td>
<td class='awrnc'>USER30.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73413</td><td align="right" class='awrc'>2.56</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.47</td>
<td class='awrc'>USER3.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73503</td><td align="right" class='awrnc'>2.56</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.42</td>
<td class='awrnc'>USER21.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73439</td><td align="right" class='awrc'>2.51</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.11</td>
<td class='awrc'>USER9.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9977"></a>
<h3 class="awr">Activity Over Time</h3>
<ul>
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
<li class="awr"> Top 3 events are reported in each of those slots </li>
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
</ul>
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
<tr><td align="right" class='awrc'>17:33:14   (1.8 min)</td><td align="right" class='awrc'>459</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>211</td><td align="right" class='awrc'>9.47</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">17:33:14   (1.8 min)</div></td><td align="right" class='awrnc'><div class="hidden">459</div></td><td class='awrnc'>free buffer waits</td><td align="right" class='awrnc'>97</td><td align="right" class='awrnc'>4.35</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">17:33:14   (1.8 min)</div></td><td align="right" class='awrc'><div class="hidden">459</div></td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>2.29</td></tr>
<tr><td align="right" class='awrnc'>17:35:00   (5.0 min)</td><td align="right" class='awrnc'>1,133</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>575</td><td align="right" class='awrnc'>25.81</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">17:35:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">1133</div></td><td class='awrc'>free buffer waits</td><td align="right" class='awrc'>300</td><td align="right" class='awrc'>13.46</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">17:35:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">1133</div></td><td class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>78</td><td align="right" class='awrnc'>3.50</td></tr>
<tr><td align="right" class='awrc'>17:40:00   (3.4 min)</td><td align="right" class='awrc'>636</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>320</td><td align="right" class='awrc'>14.36</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">17:40:00   (3.4 min)</div></td><td align="right" class='awrnc'><div class="hidden">636</div></td><td class='awrnc'>free buffer waits</td><td align="right" class='awrnc'>156</td><td align="right" class='awrnc'>7.00</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">17:40:00   (3.4 min)</div></td><td align="right" class='awrc'><div class="hidden">636</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>50</td><td align="right" class='awrc'>2.24</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99994"></a>
<h2>ADDM Task ADDM:3393773525_82</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_82&apos;
	  -----------------------------------------

Analysis Period
---------------
AWR snapshot range from 81 to 82.
Time period starts at 08-FEB-20 05.33.14 PM
Time period ends at 08-FEB-20 05.43.26 PM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 18271 seconds.
The average number of active sessions was 29.85.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendations
					     Percent of Activity
   ----------------------------------------  -------------------  ---------------
1  Top SQL Statements			     29.74 | 99.62	  1
2  &quot;User I/O&quot; wait Class		       18.05 | 60.48	    0
3  &quot;Configuration&quot; Wait Class 	       9.24 | 30.95	    0
4  Free Buffer Waits			     9.24 | 30.95	  1
5  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  4.56 | 15.27	      5
6  Global Cache Messaging		     1.44 | 4.82	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 29.79 active sessions, 99.62% of total activity.
----------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  56.21	    ADDM:3393773525_2_82
    1	    p30db1  43.79	    ADDM:3393773525_1_82

   Recommendation 1: SQL Tuning
   Estimated benefit is 29.74 active sessions, 99.62% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      &quot;35dumc2tpr9dv&quot;. Additionally, investigate this statement for possible
      performance improvements. You can supplement the information given here
      with an ASH report for this SQL_ID.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
	 AND (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 69% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
      Look at data given below and an ASH report for further performance
      improvements.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 87312 times and
      had an average elapsed time of 0.2 seconds.
   Rationale
      Waiting for event &quot;free buffer waits&quot; in wait class &quot;Configuration&quot;
      accounted for 29% of the database time spent in processing the SQL
      statement with SQL_ID &quot;35dumc2tpr9dv&quot;.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER9.CF1&quot; with object ID 73439 consumed
      3% of the database time spent on this SQL statement.
   Rationale
      I/O and Cluster wait for TABLE &quot;USER15.CF1&quot; with object ID 73472
      consumed 3% of the database time spent on this SQL statement.


Finding 2: &quot;User I/O&quot; wait Class
Impact is 18.08 active sessions, 60.48% of total activity.
----------------------------------------------------------
Wait class &quot;User I/O&quot; was consuming significant database time.
The throughput of the I/O subsystem was not significantly lower than expected.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  84.41	    ADDM:3393773525_2_82
    1	    p30db1  15.59	    ADDM:3393773525_1_82

   No recommendations are available.


Finding 3: &quot;Configuration&quot; Wait Class
Impact is 9.25 active sessions, 30.95% of total activity.
---------------------------------------------------------
Wait class &quot;Configuration&quot; was consuming significant database time.
Waits for archiver processes were not consuming significant database time.
Log file switch operations were not consuming significant database time while
waiting for checkpoint completion.
High watermark (HW) enqueue waits were not consuming significant database
time.
Space Transaction (ST) enqueue waits were not consuming significant database
time.
ITL enqueue waits were not consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  100 	    ADDM:3393773525_1_82

   No recommendations are available.


Finding 4: Free Buffer Waits
Impact is 9.25 active sessions, 30.95% of total activity.
---------------------------------------------------------
Waits for free buffers were consuming significant database time in some
instances. Database writers (DBWR) were unable to keep up with the demand for
free buffers.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    1	    p30db1  100 	    ADDM:3393773525_1_82

   Recommendation 1: Examine instance ADDM
   Estimated benefit is 9.24 active sessions, 30.95% of total activity.
   --------------------------------------------------------------------
   Action
      Investigate the I/O subsystem&apos;s write performance. Consider increasing
      the number of database writers, the appropriateness of asynchronous I/O,
      and use of direct path inserts. Check the ADDM analysis of affected
      instances for more details.


Finding 5: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 4.57 active sessions, 15.27% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  100 	    ADDM:3393773525_2_82

   Recommendation 1: Segment Tuning
   Estimated benefit is .92 active sessions, 3.1% of total activity.
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER15.CF1&quot; with
      object ID 73472.
      Related Object
	 Database object with ID 73472.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 100% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 54874
      physical reads, 37396 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .92 active sessions, 3.1% of total activity.
   -----------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER30.CF1&quot; with
      object ID 73550.
      Related Object
	 Database object with ID 73550.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 62012
      physical reads, 40576 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .91 active sessions, 3.04% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER3.CF1&quot; with
      object ID 73413.
      Related Object
	 Database object with ID 73413.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 100% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 57884
      physical reads, 38228 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .91 active sessions, 3.04% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER21.CF1&quot; with
      object ID 73503.
      Related Object
	 Database object with ID 73503.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 62893
      physical reads, 41113 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .89 active sessions, 2.99% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER9.CF1&quot; with
      object ID 73439.
      Related Object
	 Database object with ID 73439.
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant I/O on this segment. For example, the UPDATE statement with
      SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 100% of &quot;User I/O&quot; and
      &quot;Cluster&quot; waits for this segment.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 69595
      physical reads, 44377 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 18.05 active sessions, 60.48% of total activity.


Finding 6: Global Cache Messaging
Impact is 1.44 active sessions, 4.82% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  64.85	    ADDM:3393773525_2_82
    1	    p30db1  35.15	    ADDM:3393773525_1_82

   Recommendation 1: Application Analysis
   Estimated benefit is 1.44 active sessions, 4.82% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the UPDATE statement
      with SQL_ID &quot;35dumc2tpr9dv&quot; is responsible for 100% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is 1.57 active sessions, 5.25% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    2	    p30db2  mcracpoc2.example.com  16.8 	    56.17
    1	    p30db1  mcracpoc1.example.com  13.11	    43.83

Miscellaneous Information
-------------------------
Wait class &quot;Application&quot; was not consuming significant database time.
Wait class &quot;Commit&quot; was not consuming significant database time.
Wait class &quot;Concurrency&quot; was not consuming significant database time.
Wait class &quot;Network&quot; was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

The database&apos;s maintenance windows were active during 100% of the analysis
period.

</pre>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>
Report written to awr_rac.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0
NOTIFY  : 2020.02.08-17:44:12 : Compressing file: "awr.html".
NOTIFY  : 2020.02.08-17:44:12 : Compressing file: "awr_rac.html".
