








































PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


PL/SQL procedure successfully completed.


SQL*Plus: Release 19.0.0.0.0 - Production on Mon Feb 10 20:43:11 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.


SQL*Plus: Release 19.0.0.0.0 - Production on Mon Feb 10 20:43:11 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.

Last Successful login time: Mon Feb 10 2020 20:43:07 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5    6  
   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		1 p30db1

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> Last Successful login time: Mon Feb 10 2020 20:43:11 +08:00

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL>   2    3    4    5    6  
Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report




Type Specified: html

   DB Id    DB Name	 Inst Num Instance
----------- ------------ -------- ------------
 3393773525 P30DB		1 p30db1

SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> SQL> 
Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt. Default value is 'html'.

   'html'	   HTML format (default)
   'text'	   Text format
   'active-html'   Includes Performance Hub active report




Type Specified: text


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex

Using 3393773525 for database Id
Using	       1 for instance number


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.


  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
  3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex

Using 3393773525 for database Id
Using	       1 for instance number

Listing the last day's Completed Snapshots


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.



Listing the last day's Completed Snapshots
Instance     DB Name	  Snap Id	Snap Started	Snap Level
------------ ------------ ---------- ------------------ ----------

p30db1	     P30DB		124  10 Feb 2020 00:00	  1
				125  10 Feb 2020 01:00	  1
				126  10 Feb 2020 02:00	  1
				127  10 Feb 2020 03:00	  1
				128  10 Feb 2020 04:00	  1
				129  10 Feb 2020 05:00	  1
				130  10 Feb 2020 06:00	  1
				131  10 Feb 2020 07:00	  1
				132  10 Feb 2020 08:00	  1
				133  10 Feb 2020 09:00	  1
				134  10 Feb 2020 09:08	  1
				135  10 Feb 2020 09:18	  1
				136  10 Feb 2020 10:00	  1
				137  10 Feb 2020 10:47	  1
				138  10 Feb 2020 10:58	  1
				139  10 Feb 2020 11:09	  1
				140  10 Feb 2020 11:19	  1
				141  10 Feb 2020 11:21	  1
				142  10 Feb 2020 11:31	  1
				143  10 Feb 2020 13:00	  1
				144  10 Feb 2020 14:00	  1
				145  10 Feb 2020 14:19	  1
				146  10 Feb 2020 14:29	  1
				147  10 Feb 2020 14:33	  1
				148  10 Feb 2020 14:41	  1
				149  10 Feb 2020 14:47	  1
				150  10 Feb 2020 14:57	  1
				152  10 Feb 2020 15:05	  1
				153  10 Feb 2020 15:15	  1
				154  10 Feb 2020 15:24	  1
				155  10 Feb 2020 15:34	  1
				156  10 Feb 2020 15:44	  1
				157  10 Feb 2020 15:54	  1
				158  10 Feb 2020 16:18	  1
				159  10 Feb 2020 16:28	  1
				160  10 Feb 2020 16:34	  1
				161  10 Feb 2020 16:44	  1
				162  10 Feb 2020 16:46	  1
				163  10 Feb 2020 16:56	  1
				165  10 Feb 2020 19:32	  1
				166  10 Feb 2020 19:42	  1
				167  10 Feb 2020 19:49	  1
				168  10 Feb 2020 19:59	  1
				169  10 Feb 2020 20:13	  1
				170  10 Feb 2020 20:23	  1
				171  10 Feb 2020 20:33	  1
				172  10 Feb 2020 20:43	  1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 171

End   Snapshot Id specified: 172

Instance     DB Name	  Snap Id	Snap Started	Snap Level
------------ ------------ ---------- ------------------ ----------

p30db1	     P30DB		124  10 Feb 2020 00:00	  1
				125  10 Feb 2020 01:00	  1
				126  10 Feb 2020 02:00	  1
				127  10 Feb 2020 03:00	  1
				128  10 Feb 2020 04:00	  1
				129  10 Feb 2020 05:00	  1
				130  10 Feb 2020 06:00	  1
				131  10 Feb 2020 07:00	  1
				132  10 Feb 2020 08:00	  1
				133  10 Feb 2020 09:00	  1
				134  10 Feb 2020 09:08	  1
				135  10 Feb 2020 09:18	  1
				136  10 Feb 2020 10:00	  1
				137  10 Feb 2020 10:47	  1
				138  10 Feb 2020 10:58	  1
				139  10 Feb 2020 11:09	  1
				140  10 Feb 2020 11:19	  1
				141  10 Feb 2020 11:21	  1
				142  10 Feb 2020 11:31	  1
				143  10 Feb 2020 13:00	  1
				144  10 Feb 2020 14:00	  1
				145  10 Feb 2020 14:19	  1
				146  10 Feb 2020 14:29	  1
				147  10 Feb 2020 14:33	  1
				148  10 Feb 2020 14:41	  1
				149  10 Feb 2020 14:47	  1
				150  10 Feb 2020 14:57	  1
				152  10 Feb 2020 15:05	  1
				153  10 Feb 2020 15:15	  1
				154  10 Feb 2020 15:24	  1
				155  10 Feb 2020 15:34	  1
				156  10 Feb 2020 15:44	  1
				157  10 Feb 2020 15:54	  1
				158  10 Feb 2020 16:18	  1
				159  10 Feb 2020 16:28	  1
				160  10 Feb 2020 16:34	  1
				161  10 Feb 2020 16:44	  1
				162  10 Feb 2020 16:46	  1
				163  10 Feb 2020 16:56	  1
				165  10 Feb 2020 19:32	  1
				166  10 Feb 2020 19:42	  1
				167  10 Feb 2020 19:49	  1
				168  10 Feb 2020 19:59	  1
				169  10 Feb 2020 20:13	  1
				170  10 Feb 2020 20:23	  1
				171  10 Feb 2020 20:33	  1
				172  10 Feb 2020 20:43	  1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 171

End   Snapshot Id specified: 172




Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_1_171_172.html.	To use this name,
press <return> to continue, otherwise enter an alternative.


Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_1_171_172.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr.html

Using the report name awr.txt

<html lang="en"><head><title>AWR Report for DB: P30DB, Inst: p30db1, Snaps: 171-172</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY report for

</h1>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">DB Name</th><th class="awrbg" scope="col">DB Id</th><th class="awrbg" scope="col">Unique Name</th><th class="awrbg" scope="col">Role</th><th class="awrbg" scope="col">Edition</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">RAC</th><th class="awrbg" scope="col">CDB</th></tr>
<tr><td scope="row" class='awrnc'>P30DB</td><td align="right" class='awrnc'>3393773525</td><td class='awrnc'>p30db</td><td class='awrnc'>PRIMARY</td><td class='awrnc'>EE</td><td class='awrnc'>19.0.0.0.0</td><td class='awrnc'>YES</td><td class='awrnc'>NO</td></tr>
</table>
<p />
<p />
<table border="0" class="tdiff" summary="This table displays database instance information">
<tr><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Inst Num</th><th class="awrbg" scope="col">Startup Time</th></tr>
<tr><td scope="row" class='awrnc'>p30db1</td><td align="right" class='awrnc'>1</td><td class='awrnc'>10-Feb-20 19:29</td></tr>
</table>
<p />
<p />
<table border="0" width="600" class="tdiff" summary="This table displays host information">
<tr><th class="awrbg" scope="col">Host Name</th><th class="awrbg" scope="col">Platform</th><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Memory (GB)</th></tr>
<tr><td scope="row" class='awrnc'>mcracpoc1.example.com</td><td class='awrnc'>Linux x86 64-bit</td><td align="right" class='awrnc'>   8</td><td align="right" class='awrnc'>   4</td><td align="right" class='awrnc'>	1</td><td align="right" class='awrnc'>	 31.40</td></tr>
</table>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays snapshot information">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Snap Id</th><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Sessions</th><th class="awrbg" scope="col">Cursors/Session</th><th class="awrbg" scope="col">Instances</th></tr>
<tr><td scope="row" class='awrnc'>Begin Snap:</td><td align="right" class='awrnc'>171</td><td align="center" class='awrnc'>10-Feb-20 20:33:02</td><td align="right" class='awrnc'>108</td><td align="right" class='awrnc'>	1.5</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>End Snap:</td><td align="right" class='awrc'>172</td><td align="center" class='awrc'>10-Feb-20 20:43:07</td><td align="right" class='awrc'>90</td><td align="right" class='awrc'>	 .9</td><td align="right" class='awrc'>2</td></tr>
<tr><td scope="row" class='awrnc'>Elapsed:</td><td class='awrnc'>&#160;</td><td align="center" class='awrnc'>		   10.07 (mins)</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB Time:</td><td class='awrc'>&#160;</td><td align="center" class='awrc'>	       180.35 (mins)</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>17.89</td><td align="right" class='awrc'>98.91</td><td scope="row" class='awrc'>ADDM:3393773525_1_172</td><td class='awrc'>10-Feb-20 20:33</td><td class='awrc'>10-Feb-20 20:43</td></tr>
<tr><td class='awrnc'>&quot;User I/O&quot; wait Class</td><td align="right" class='awrnc'>17.89</td><td align="right" class='awrnc'>87.24</td><td scope="row" class='awrnc'>ADDM:3393773525_1_172</td><td class='awrnc'>10-Feb-20 20:33</td><td class='awrnc'>10-Feb-20 20:43</td></tr>
<tr><td class='awrc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrc'>17.89</td><td align="right" class='awrc'>25.76</td><td scope="row" class='awrc'>ADDM:3393773525_1_172</td><td class='awrc'>10-Feb-20 20:33</td><td class='awrc'>10-Feb-20 20:43</td></tr>
<tr><td class='awrnc'>Global Cache Messaging</td><td align="right" class='awrnc'>17.89</td><td align="right" class='awrnc'>6.51</td><td scope="row" class='awrnc'>ADDM:3393773525_1_172</td><td class='awrnc'>10-Feb-20 20:33</td><td class='awrnc'>10-Feb-20 20:43</td></tr>
<tr><td class='awrc'>Undersized SGA</td><td align="right" class='awrc'>17.89</td><td align="right" class='awrc'>3.35</td><td scope="row" class='awrc'>ADDM:3393773525_1_172</td><td class='awrc'>10-Feb-20 20:33</td><td class='awrc'>10-Feb-20 20:43</td></tr>
</table><p />
<p />Load Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays load profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th><th class="awrbg" scope="col">Per Exec</th><th class="awrbg" scope="col">Per Call</th></tr>
<tr><td scope="row" class='awrc'>DB Time(s):</td><td align="right" class='awrc'>	      17.9</td><td align="right" class='awrc'>		     0.1</td><td align="right" class='awrc'>	  0.01</td><td align="right" class='awrc'>     59.78</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU(s):</td><td align="right" class='awrnc'>		1.5</td><td align="right" class='awrnc'>	       0.0</td><td align="right" class='awrnc'>      0.00</td><td align="right" class='awrnc'>	    5.11</td></tr>
<tr><td scope="row" class='awrc'>Background CPU(s):</td><td align="right" class='awrc'> 	      0.8</td><td align="right" class='awrc'>		    0.0</td><td align="right" class='awrc'>	 0.00</td><td align="right" class='awrc'>      0.00</td></tr>
<tr><td scope="row" class='awrnc'>Redo size (bytes):</td><td align="right" class='awrnc'>	  565,091.9</td><td align="right" class='awrnc'>	   2,794.2</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logical read (blocks):</td><td align="right" class='awrc'>	      9,405.6</td><td align="right" class='awrc'>	       46.5</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Block changes:</td><td align="right" class='awrnc'>		1,656.1</td><td align="right" class='awrnc'>		   8.2</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Physical read (blocks):</td><td align="right" class='awrc'>	       3,888.6</td><td align="right" class='awrc'>		19.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Physical write (blocks):</td><td align="right" class='awrnc'> 	    559.1</td><td align="right" class='awrnc'>		     2.8</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO requests:</td><td align="right" class='awrc'>		 3,888.6</td><td align="right" class='awrc'>		  19.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO requests:</td><td align="right" class='awrnc'>	      537.1</td><td align="right" class='awrnc'>	       2.7</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Read IO (MB):</td><td align="right" class='awrc'>		30.4</td><td align="right" class='awrc'>	       0.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Write IO (MB):</td><td align="right" class='awrnc'>		    4.4</td><td align="right" class='awrnc'>		   0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM scan rows:</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Session Logical Read IM:</td><td align="right" class='awrnc'> 	      0.0</td><td align="right" class='awrnc'>		     0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Global Cache blocks received:</td><td align="right" class='awrc'>		23.1</td><td align="right" class='awrc'>	       0.1</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Global Cache blocks served:</td><td align="right" class='awrnc'>		28.2</td><td align="right" class='awrnc'>		0.1</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>User calls:</td><td align="right" class='awrc'>	       0.3</td><td align="right" class='awrc'>		     0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parses (SQL):</td><td align="right" class='awrnc'>		   2.2</td><td align="right" class='awrnc'>		  0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Hard parses (SQL):</td><td align="right" class='awrc'> 	      0.0</td><td align="right" class='awrc'>		    0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL Work Area (MB):</td><td align="right" class='awrnc'>		 0.2</td><td align="right" class='awrnc'>		0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Logons:</td><td align="right" class='awrc'>		   0.0</td><td align="right" class='awrc'>		 0.0</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>User logons:</td><td align="right" class='awrnc'>		  0.0</td><td align="right" class='awrnc'>		 0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Executes (SQL):</td><td align="right" class='awrc'>	       1,349.0</td><td align="right" class='awrc'>		 6.7</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Rollbacks:</td><td align="right" class='awrnc'>		0.0</td><td align="right" class='awrnc'>	       0.0</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Transactions:</td><td align="right" class='awrc'>	       202.2</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td></tr>
</table>
<p />
Instance Efficiency Percentages (Target 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays instance efficiency percentages">
<tr><td scope="row" class='awrc'>Buffer Nowait %:</td><td align="right" class='awrc'>		100.00</td><td class='awrc'>Redo NoWait %:</td><td align="right" class='awrc'>		 100.00</td></tr>
<tr><td scope="row" class='awrnc'>Buffer  Hit	%:</td><td align="right" class='awrnc'> 	   58.66</td><td class='awrnc'>In-memory Sort %:</td><td align="right" class='awrnc'>		100.00</td></tr>
<tr><td scope="row" class='awrc'>Library Hit   %:</td><td align="right" class='awrc'>		100.09</td><td class='awrc'>Soft Parse %:</td><td align="right" class='awrc'>		 98.44</td></tr>
<tr><td scope="row" class='awrnc'>Execute to Parse %:</td><td align="right" class='awrnc'>	      99.84</td><td class='awrnc'>Latch Hit %:</td><td align="right" class='awrnc'>	       99.98</td></tr>
<tr><td scope="row" class='awrc'>Parse CPU to Parse Elapsd %:</td><td align="right" class='awrc'>	     71.43</td><td class='awrc'>% Non-Parse CPU:</td><td align="right" class='awrc'>	       100.00</td></tr>
<tr><td scope="row" class='awrnc'>Flash Cache Hit %:</td><td align="right" class='awrnc'>	      0.00</td></tr>
</table>

<p />Top 10 Foreground Events by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top 10 wait events by total wait time"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Wait Class</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>2,345,128</td><td align="right" class='awrc'>9440.1</td><td align="right" class='awrc'>4.03ms</td><td align="right" class='awrc'>87.2</td><td class='awrc'>User I/O</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>925.6</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>8.6</td><td class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>951,203</td><td align="right" class='awrc'>571.8</td><td align="right" class='awrc'>601.17us</td><td align="right" class='awrc'>5.3</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>172,969</td><td align="right" class='awrnc'>105.5</td><td align="right" class='awrnc'>610.16us</td><td align="right" class='awrnc'>1.0</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>20,618</td><td align="right" class='awrc'>27.4</td><td align="right" class='awrc'>1.33ms</td><td align="right" class='awrc'>.3</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>8,138</td><td align="right" class='awrnc'>9.8</td><td align="right" class='awrnc'>1.20ms</td><td align="right" class='awrnc'>.1</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>9,061</td><td align="right" class='awrc'>6.6</td><td align="right" class='awrc'>730.87us</td><td align="right" class='awrc'>.1</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>2,749</td><td align="right" class='awrnc'>3.4</td><td align="right" class='awrnc'>1.22ms</td><td align="right" class='awrnc'>.0</td><td class='awrnc'>Cluster</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant congested</td><td align="right" class='awrc'>723</td><td align="right" class='awrc'>2.9</td><td align="right" class='awrc'>3.96ms</td><td align="right" class='awrc'>.0</td><td class='awrc'>Cluster</td></tr>
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>2,146</td><td align="right" class='awrnc'>2.1</td><td align="right" class='awrnc'>.99ms</td><td align="right" class='awrnc'>.0</td><td class='awrnc'>Cluster</td></tr>
</table><p />
<p />Wait Classes by Total Wait Time<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays wait class statistics ordered by total wait time"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (sec)</th><th class="awrbg" scope="col">Avg Wait Time</th><th class="awrbg" scope="col">% DB time</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>2,369,648</td><td align="right" class='awrc'>9,441</td><td align="right" class='awrc'>3.98ms</td><td align="right" class='awrc'>87.3</td><td align="right" class='awrc'>15.6</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>926</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>8.6</td><td align="right" class='awrnc'>1.5</td></tr>
<tr><td scope="row" class='awrc'>Cluster</td><td align="right" class='awrc'>1,169,521</td><td align="right" class='awrc'>733</td><td align="right" class='awrc'>626.68us</td><td align="right" class='awrc'>6.8</td><td align="right" class='awrc'>1.2</td></tr>
<tr><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>133,929</td><td align="right" class='awrnc'>630</td><td align="right" class='awrnc'>4.70ms</td><td align="right" class='awrnc'>5.8</td><td align="right" class='awrnc'>1.0</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>86,985</td><td align="right" class='awrc'>164</td><td align="right" class='awrc'>1.88ms</td><td align="right" class='awrc'>1.5</td><td align="right" class='awrc'>0.3</td></tr>
<tr><td scope="row" class='awrnc'>Network</td><td align="right" class='awrnc'>535</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>73.20us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
<tr><td scope="row" class='awrc'>Commit</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6.70ms</td><td align="right" class='awrc'>.0</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Concurrency</td><td align="right" class='awrnc'>538</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>55.10us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
<tr><td scope="row" class='awrc'>Application</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>555.83us</td><td align="right" class='awrc'>.0</td><td align="right" class='awrc'>0.0</td></tr>
<tr><td scope="row" class='awrnc'>Configuration</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>739.33us</td><td align="right" class='awrnc'>.0</td><td align="right" class='awrnc'>0.0</td></tr>
</table><p />

Host CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays system load statistics">
<tr><th class="awrbg" scope="col">CPUs</th><th class="awrbg" scope="col">Cores</th><th class="awrbg" scope="col">Sockets</th><th class="awrbg" scope="col">Load Average Begin</th><th class="awrbg" scope="col">Load Average End</th><th class="awrbg" scope="col">%User</th><th class="awrbg" scope="col">%System</th><th class="awrbg" scope="col">%WIO</th><th class="awrbg" scope="col">%Idle</th></tr>
<tr><td align="right" class='awrc'>    8</td><td align="right" class='awrc'>	4</td><td align="right" class='awrc'>	 1</td><td align="right" class='awrc'>	10.59</td><td align="right" class='awrc'>  13.09</td><td align="right" class='awrc'>  17.1</td><td align="right" class='awrc'>	22.2</td><td align="right" class='awrc'>  40.4</td><td align="right" class='awrc'>  50.9</td></tr>
</table>
<p />
Instance CPU
<p />
<table border="0" width="600" class="tdiff" summary="This table displays CPU usage and wait statistics">
<tr><th class="awrbg" scope="col">%Total CPU</th><th class="awrbg" scope="col">%Busy CPU</th><th class="awrbg" scope="col">%DB time waiting for CPU (Resource Manager)</th></tr>
<tr><td align="right" class='awrc'>	 32.3</td><td align="right" class='awrc'>      65.8</td><td align="right" class='awrc'>       0.0</td></tr>
</table>
<p />IO Profile<p />
<table border="0" width="600" class="tdiff" summary="This table displays IO profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Read+Write Per Second</th><th class="awrbg" scope="col">Read per Second</th><th class="awrbg" scope="col">Write Per Second</th></tr>
<tr><td scope="row" class='awrc'>Total Requests:</td><td align="right" class='awrc'>	       4,604.9</td><td align="right" class='awrc'>	     3,895.0</td><td align="right" class='awrc'>	     709.9</td></tr>
<tr><td scope="row" class='awrnc'>Database Requests:</td><td align="right" class='awrnc'>	    4,425.7</td><td align="right" class='awrnc'>	   3,888.6</td><td align="right" class='awrnc'> 	    537.1</td></tr>
<tr><td scope="row" class='awrc'>Optimized Requests:</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td><td align="right" class='awrc'>		   0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo Requests:</td><td align="right" class='awrnc'>		  172.7</td><td align="right" class='awrnc'>		   1.3</td><td align="right" class='awrnc'>		171.4</td></tr>
<tr><td scope="row" class='awrc'>Total (MB):</td><td align="right" class='awrc'>	      36.6</td><td align="right" class='awrc'>		    31.6</td><td align="right" class='awrc'>		   5.0</td></tr>
<tr><td scope="row" class='awrnc'>Database (MB):</td><td align="right" class='awrnc'>		   34.8</td><td align="right" class='awrnc'>		  30.4</td><td align="right" class='awrnc'>		  4.4</td></tr>
<tr><td scope="row" class='awrc'>Optimized Total (MB):</td><td align="right" class='awrc'>		 0.0</td><td align="right" class='awrc'>	       0.0</td><td align="right" class='awrc'>		     0.0</td></tr>
<tr><td scope="row" class='awrnc'>Redo (MB):</td><td align="right" class='awrnc'>		1.7</td><td align="right" class='awrnc'>	       1.1</td><td align="right" class='awrnc'> 	      0.6</td></tr>
<tr><td scope="row" class='awrc'>Database (blocks):</td><td align="right" class='awrc'> 	  4,447.8</td><td align="right" class='awrc'>		3,888.6</td><td align="right" class='awrc'>		559.1</td></tr>
<tr><td scope="row" class='awrnc'>Via Buffer Cache (blocks):</td><td align="right" class='awrnc'>	    4,447.7</td><td align="right" class='awrnc'>	   3,888.6</td><td align="right" class='awrnc'> 	    559.0</td></tr>
<tr><td scope="row" class='awrc'>Direct (blocks):</td><td align="right" class='awrc'>		    0.1</td><td align="right" class='awrc'>		  0.0</td><td align="right" class='awrc'>		0.1</td></tr>
</table>
<p />
Memory Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays memory statistics">
<tr><th class="awrbg" scope="col"> </th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Host Mem (MB):</td><td align="right" class='awrc'>    32,156.0</td><td align="right" class='awrc'>    32,156.0</td></tr>
<tr><td scope="row" class='awrnc'>SGA use (MB):</td><td align="right" class='awrnc'>	 9,664.0</td><td align="right" class='awrnc'>	  9,664.0</td></tr>
<tr><td scope="row" class='awrc'>PGA use (MB):</td><td align="right" class='awrc'>     1,020.0</td><td align="right" class='awrc'>	 909.7</td></tr>
<tr><td scope="row" class='awrc'>% Host Mem used for SGA+PGA:</td><td align="right" class='awrc'>   33.23</td><td align="right" class='awrc'>	32.88</td></tr>
</table>
<p />
Cache Sizes
<p />
<table border="0" width="600" class="tdiff" summary="This table displays cache sizes and other statistics for
		    different types of cache">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th><th class="awrnobg" scope="col"></th></tr>
<tr><td scope="row" class='awrnc'>Buffer Cache:</td><td align="right" class='awrnc'>	 8,000M</td><td align="right" class='awrnc'>	 8,000M</td><td class='awrnc'>Std Block Size:</td><td align="right" class='awrnc'>	   8K</td></tr>
<tr><td scope="row" class='awrc'>Shared Pool Size:</td><td align="right" class='awrc'>	   1,067M</td><td align="right" class='awrc'>	  1,056M</td><td class='awrc'>Log Buffer:</td><td align="right" class='awrc'>	 20,612K</td></tr>
<tr><td scope="row" class='awrnc'>In-Memory Area:</td><td align="right" class='awrnc'>	       0M</td><td align="right" class='awrnc'>	       0M</td></tr>
</table>
<p />
Shared Pool Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays shared pool statistics">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th></tr>
<tr><td scope="row" class='awrc'>Memory Usage %:</td><td align="right" class='awrc'>		91.92</td><td align="right" class='awrc'>	     90.83</td></tr>
<tr><td scope="row" class='awrnc'>% SQL with executions&gt;1:</td><td align="right" class='awrnc'>	      88.41</td><td align="right" class='awrnc'>	    87.72</td></tr>
<tr><td scope="row" class='awrc'>% Memory for SQL w/exec&gt;1:</td><td align="right" class='awrc'>	      86.67</td><td align="right" class='awrc'> 	   86.68</td></tr>
</table>
<p />
<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#21">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#22">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#23">Instance Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#24">IO Stats</a></li>
<li class="awr"><a class="awr" href="#25">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#26">Advisory Statistics</a></li>
<li class="awr"><a class="awr" href="#27">Wait Statistics</a></li>
<li class="awr"><a class="awr" href="#28">Undo Statistics</a></li>
<li class="awr"><a class="awr" href="#29">Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#30">Segment Statistics</a></li>
<li class="awr"><a class="awr" href="#31">Dictionary Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#32">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#33">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#39">Replication Statistics (GoldenGate, XStream)</a></li>
<li class="awr"><a class="awr" href="#34">Advanced Queuing</a></li>
<li class="awr"><a class="awr" href="#6700">Resource Limit Statistics</a></li>
<li class="awr"><a class="awr" href="#37">Shared Server Statistics</a></li>
<li class="awr"><a class="awr" href="#36">Initialization Parameters</a></li>
<li class="awr"><a class="awr" href="#42">Active Session History (ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99995">ADDM Reports</a></li>
</ul>
<h2 class="awr">
RAC Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<p />
<a class="awr" name="21"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1500">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#1600">Operating System Statistics</a></li>
<li class="awr"><a class="awr" href="#1610">Operating System Statistics - Detail</a></li>
<li class="awr"><a class="awr" href="#210">Foreground Wait Class</a></li>
<li class="awr"><a class="awr" href="#100">Foreground Wait Events</a></li>
<li class="awr"><a class="awr" href="#300">Background Wait Events</a></li>
<li class="awr"><a class="awr" href="#7400">Wait Event Histogram</a></li>
<li class="awr"><a class="awr" href="#7405">Wait Event Histogram (up to 64 us)</a></li>
<li class="awr"><a class="awr" href="#7410">Wait Event Histogram (up to 32 ms)</a></li>
<li class="awr"><a class="awr" href="#7420">Wait Event Histogram (up to 2 sec)</a></li>
<li class="awr"><a class="awr" href="#7430">Wait Event Histogram (up to 2 min)</a></li>
<li class="awr"><a class="awr" href="#7440">Wait Event Histogram (up to 1 hr)</a></li>
<li class="awr"><a class="awr" href="#5800">Service Statistics</a></li>
<li class="awr"><a class="awr" href="#5820">Service Wait Class Stats</a></li>
<li class="awr"><a class="awr" href="#5840">Top 10 Channel Waits</a></li>
<li class="awr"><a class="awr" href="#2310">Top Process Types by Wait Class</a></li>
<li class="awr"><a class="awr" href="#2320">Top Process Types by CPU Used</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1500"></a>
<h3 class="awr">Time Model Statistics</h3>
<ul>
<li class="awr">DB Time represents total time in user calls</li>
<li class="awr">DB CPU represents CPU time of foreground processes</li>
<li class="awr">Total CPU Time represents foreground and background processes</li>
<li class="awr">Statistics including the word "background" measure background process
   time, therefore do not contribute to the DB time statistic</li>
<li class="awr">Ordered by % of DB time in descending order, followed by Statistic Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays different time model statistics. For each statistic, time and % of DB time are displayed"><tr><th class="awrbg" scope="col">Statistic Name</th><th class="awrbg" scope="col">Time (s)</th><th class="awrbg" scope="col">% of  DB Time</th><th class="awrbg" scope="col">% of Total CPU Time</th></tr>
<tr><td scope="row" class='awrc'>sql execute elapsed time</td><td align="right" class='awrc'>10,820.65</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>925.55</td><td align="right" class='awrnc'>8.55</td><td align="right" class='awrnc'>64.46</td></tr>
<tr><td scope="row" class='awrc'>PL/SQL execution elapsed time</td><td align="right" class='awrc'>39.85</td><td align="right" class='awrc'>0.37</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hard parse elapsed time</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>connection management call elapsed time</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hard parse (bind mismatch) elapsed time</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>hard parse (sharing criteria) elapsed time</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sequence load elapsed time</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>repeated bind elapsed time</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DB time</td><td align="right" class='awrc'>10,820.93</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>background elapsed time</td><td align="right" class='awrnc'>1,098.94</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>background cpu time</td><td align="right" class='awrc'>510.19</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>35.54</td></tr>
<tr><td scope="row" class='awrnc'>total CPU time</td><td align="right" class='awrnc'>1,435.74</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1600"></a>
<h3 class="awr">Operating System Statistics</h3>
<ul>
<li class="awr"> *TIME statistic values are diffed.	 All others display actual values.  End Value is displayed if different </li>
<li class="awr"> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays operating systems statistics. For each statistic, actual value is displayed. If the end value is different, it is also displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>FREE_MEMORY_BYTES</td><td align="right" class='awrc'>7,923,159,040</td><td align="right" class='awrc'>8,388,681,728</td></tr>
<tr><td scope="row" class='awrnc'>INACTIVE_MEMORY_BYTES</td><td align="right" class='awrnc'>1,231,712,256</td><td align="right" class='awrnc'>1,232,556,032</td></tr>
<tr><td scope="row" class='awrc'>BUSY_TIME</td><td align="right" class='awrc'>218,337</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IDLE_TIME</td><td align="right" class='awrnc'>225,950</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IOWAIT_TIME</td><td align="right" class='awrc'>179,677</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SYS_TIME</td><td align="right" class='awrnc'>98,734</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>USER_TIME</td><td align="right" class='awrc'>76,065</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LOAD</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>13</td></tr>
<tr><td scope="row" class='awrc'>PHYSICAL_MEMORY_BYTES</td><td align="right" class='awrc'>33,717,977,088</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>NUM_CPUS</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>NUM_CPU_CORES</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>NUM_CPU_SOCKETS</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GLOBAL_RECEIVE_SIZE_MAX</td><td align="right" class='awrc'>4,194,304</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GLOBAL_SEND_SIZE_MAX</td><td align="right" class='awrnc'>1,048,576</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_RECEIVE_SIZE_DEFAULT</td><td align="right" class='awrc'>87,380</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_RECEIVE_SIZE_MAX</td><td align="right" class='awrnc'>6,291,456</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_RECEIVE_SIZE_MIN</td><td align="right" class='awrc'>4,096</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_SEND_SIZE_DEFAULT</td><td align="right" class='awrnc'>16,384</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TCP_SEND_SIZE_MAX</td><td align="right" class='awrc'>4,194,304</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TCP_SEND_SIZE_MIN</td><td align="right" class='awrnc'>4,096</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1610"></a>
<h3 class="awr">Operating System Statistics - Detail</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays some detailed operating systems statistics. load, % busy , % user, % sys, % idle, % iowait are displayed for begin and end snap time"><tr><th class="awrbg" scope="col">Snap Time</th><th class="awrbg" scope="col">Load</th><th class="awrbg" scope="col">%busy</th><th class="awrbg" scope="col">%user</th><th class="awrbg" scope="col">%sys</th><th class="awrbg" scope="col">%idle</th><th class="awrbg" scope="col">%iowait</th></tr>
<tr><td scope="row" class='awrc'>10-Feb 20:33:02</td><td align="right" class='awrc'>10.59</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>10-Feb 20:43:07</td><td align="right" class='awrnc'>13.09</td><td align="right" class='awrnc'>49.14</td><td align="right" class='awrnc'>17.12</td><td align="right" class='awrnc'>22.22</td><td align="right" class='awrnc'>50.86</td><td align="right" class='awrnc'>40.44</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="210"></a>
<h3 class="awr">Foreground Wait Class</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> ordered by wait time desc, waits desc </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
<li class="awr">Captured Time accounts for	  102.6%  of Total DB time	10,820.93 (s)</li>
<li class="awr">Total FG Wait Time:	       10,173.58 (s)  DB CPU time:	   925.55 (s)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait class statistics"><tr><th class="awrbg" scope="col">Wait Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">%DB time</th></tr>
<tr><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>2,345,182</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>9,440</td><td align="right" class='awrc'>4.03ms</td><td align="right" class='awrc'>87.24</td></tr>
<tr><td scope="row" class='awrnc'>DB CPU</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>926</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>8.55</td></tr>
<tr><td scope="row" class='awrc'>Cluster</td><td align="right" class='awrc'>1,169,475</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>732</td><td align="right" class='awrc'>626.25us</td><td align="right" class='awrc'>6.77</td></tr>
<tr><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>4,988</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>199.65us</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Commit</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6.70ms</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>136</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>245.10us</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Concurrency</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>33</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>504.50us</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Network</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>15.52us</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Application</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>593.00us</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Configuration</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>492.00us</td><td align="right" class='awrnc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="100"></a>
<h3 class="awr">Foreground Wait Events</h3>
<ul>
<li class="awr"> s  - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Foreground Wait Events and their wait statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% DB time</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>2,345,128</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>9,440</td><td align="right" class='awrc'>4.03ms</td><td align="right" class='awrc'>19.18</td><td align="right" class='awrc'>87.24</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>951,203</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>572</td><td align="right" class='awrnc'>601.17us</td><td align="right" class='awrnc'>7.78</td><td align="right" class='awrnc'>5.28</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>172,969</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>106</td><td align="right" class='awrc'>610.16us</td><td align="right" class='awrc'>1.42</td><td align="right" class='awrc'>0.98</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>20,618</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>1.33ms</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.25</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>8,138</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>1.20ms</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.09</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>9,061</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>730.87us</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>2,749</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>1.22ms</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>723</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3.96ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>2,146</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>.99ms</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>1,690</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>.96ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc cr block lost</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>605.17ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>128</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3.86ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>3,516</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>130.44us</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>190</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>626.62us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>275</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>429.36us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>165</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>684.22us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6.58ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>105</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>597.96us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>log file sync</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6.70ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>136</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>245.10us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block congested</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.00ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>68</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>323.07us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>926.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.75ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.23ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>641.05us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6.14ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>359.71us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>9.53ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>686.62us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>302</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28.62us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.08ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>908.56us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CSS initialization</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3.36ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.07ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.85ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>217</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>25.21us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>129.09us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>name-service call wait</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.08ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>216.88us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>317.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>907.00us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>441.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: query</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>220.17us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>81.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc index operation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.30ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current split</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>507.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>watchdog main loop</td><td align="right" class='awrnc'>808</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>2,424</td><td align="right" class='awrnc'>3000.07ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Execution Msg</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.71ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net message from client</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>833.39us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Msg Fragment</td><td align="right" class='awrc'>60</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>484.22us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="300"></a>
<h3 class="awr">Background Wait Events</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
<li class="awr"> Only events with Total Wait Time (s) &gt;= .001 are shown </li>
<li class="awr"> %Timeouts: value of 0 indicates value was &lt; .5%.  Value of null is truly 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait events statistics"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">%Time -outs</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg wait</th><th class="awrbg" scope="col">Waits /txn</th><th class="awrbg" scope="col">% bg time</th></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>100,845</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>561</td><td align="right" class='awrc'>5.56ms</td><td align="right" class='awrc'>0.82</td><td align="right" class='awrc'>51.05</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>41,200</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>127</td><td align="right" class='awrnc'>3.09ms</td><td align="right" class='awrnc'>0.34</td><td align="right" class='awrnc'>11.60</td></tr>
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>22,919</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>65</td><td align="right" class='awrc'>2.82ms</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrc'>5.89</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>7,089</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>2.77ms</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>1.79</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>2,227</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>4.26ms</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.86</td></tr>
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>281</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>10.39ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.27</td></tr>
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>54</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>22.24ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>2,001</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>473.49us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>ASM IO for non-blocking poll</td><td align="right" class='awrc'>23,492</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>37.12us</td><td align="right" class='awrc'>0.19</td><td align="right" class='awrc'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>2,911</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>272.82us</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>728</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1.03ms</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>1,815</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>295.20us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>253.04ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>861</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>508.20us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>90</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.20ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>10,463</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>31.18us</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>255</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.17ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>807</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>364.51us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>265</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.01ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>AQ: RAC AQ Network</td><td align="right" class='awrnc'>6,028</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>33.38us</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>6,175</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>30.86us</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10.89ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>575</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>259.30us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>203</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>574.01us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>23.12ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>148</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>467.40us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>6,577</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10.48us</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>105</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>616.77us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>57</td><td align="right" class='awrc'>70</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>.96ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>142</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>279.63us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>459</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>83.23us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>865</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>35.86us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.58ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>763.27us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>72</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>373.03us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.31ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.08ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>36</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>695.89us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6.83ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>606</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>28.87us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>687.48us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>854.27us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>9.61ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: CO - master slave det</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>941.40us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>os thread creation</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.82ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr disk read</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>777.11us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>row cache lock</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.30ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.38ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>513.60us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: US - contention</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>686.71us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>773.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>33</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.35ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>788.80us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>.96ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>libcache interrupt action by LCK</td><td align="right" class='awrc'>502</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6.49us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>591.60us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>67</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>42.19us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>437.33us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>472.80us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.02ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>236.25us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.89ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>222.00us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.25ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: TA - contention</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>621.50us</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>latch: undo global data</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.19ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>wait list latch free</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.13ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>337.67us</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rdbms ipc message</td><td align="right" class='awrnc'>202,628</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>13,629</td><td align="right" class='awrnc'>67.26ms</td><td align="right" class='awrnc'>1.66</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Idle Wait</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10,269</td><td align="right" class='awrc'>1140.96 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Space Manager: slave idle wait</td><td align="right" class='awrnc'>2,560</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>9,658</td><td align="right" class='awrnc'>3772.82ms</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>class slave wait</td><td align="right" class='awrc'>7,533</td><td align="right" class='awrc'>80</td><td align="right" class='awrc'>4,221</td><td align="right" class='awrc'>560.40ms</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>wait for unread message on broadcast channel</td><td align="right" class='awrnc'>926</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>1,813</td><td align="right" class='awrnc'>1957.39ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pmon timer</td><td align="right" class='awrc'>403</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>1,209</td><td align="right" class='awrc'>2999.91ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges remote message</td><td align="right" class='awrnc'>17,315</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,208</td><td align="right" class='awrnc'>69.77ms</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR sleep</td><td align="right" class='awrc'>4,024</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,208</td><td align="right" class='awrc'>300.13ms</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DIAG idle wait</td><td align="right" class='awrnc'>7,554</td><td align="right" class='awrnc'>83</td><td align="right" class='awrnc'>1,206</td><td align="right" class='awrnc'>159.66ms</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs yield cpu</td><td align="right" class='awrc'>41,176</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>1,203</td><td align="right" class='awrc'>29.21ms</td><td align="right" class='awrc'>0.34</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs remote message</td><td align="right" class='awrnc'>1,471,179</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,012</td><td align="right" class='awrnc'>687.91us</td><td align="right" class='awrnc'>12.04</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Data Guard: Gap Manager</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>660</td><td align="right" class='awrc'>60.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrnc'>44</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>616</td><td align="right" class='awrnc'>14.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>616</td><td align="right" class='awrc'>28.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>OFS idle</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>606</td><td align="right" class='awrnc'>3000.02ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pman timer</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>606</td><td align="right" class='awrc'>2999.69ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM background timer</td><td align="right" class='awrnc'>1,658</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>606</td><td align="right" class='awrnc'>365.20ms</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat redo informer</td><td align="right" class='awrc'>605</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>605</td><td align="right" class='awrc'>1000.15ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>604</td><td align="right" class='awrnc'>60.43 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SCM slave idle</td><td align="right" class='awrc'>6,056</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>604</td><td align="right" class='awrc'>99.69ms</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lreg timer</td><td align="right" class='awrnc'>201</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>604</td><td align="right" class='awrnc'>3002.65ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group idle</td><td align="right" class='awrc'>86,072</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>603</td><td align="right" class='awrc'>7.01ms</td><td align="right" class='awrc'>0.70</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM cluster membership changes</td><td align="right" class='awrnc'>344</td><td align="right" class='awrnc'>85</td><td align="right" class='awrnc'>602</td><td align="right" class='awrnc'>1750.40ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PING</td><td align="right" class='awrc'>559</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>1074.01ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher timer</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>100</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>60.01 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQPC idle</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>100</td><td align="right" class='awrc'>600</td><td align="right" class='awrc'>30.00 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Timer</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>600</td><td align="right" class='awrnc'>600.00 s</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>smon timer</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>481</td><td align="right" class='awrc'>48.10 s</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execute Reply</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>15.72ms</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message from client</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.25ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>RMA: IPC0 completion sync</td><td align="right" class='awrnc'>657</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>25.48us</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Parse Reply</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.43ms</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7400"></a>
<h3 class="awr">Wait Event Histogram</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (idle events last)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Total Waits</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&lt;128us">&lt;128us</th><th class="awrbg" scope="col" id="&lt;256us">&lt;256us</th><th class="awrbg" scope="col" id="&lt;512us">&lt;512us</th><th class="awrbg" scope="col" id="&gt;=512us">&gt;=512us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>6019</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>83.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.3</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>23.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>61.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>21.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.8</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>2000</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>31.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>35.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>8.5</td></tr>
<tr><td scope="row" class='awrnc'>AWR Flush</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>6167</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>79.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>CSS initialization</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: action</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data query</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data update</td><td align="right" class='awrc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: query</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>83.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>16.7</td></tr>
<tr><td scope="row" class='awrc'>DFS lock handle</td><td align="right" class='awrc'>265</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>13.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>84.5</td></tr>
<tr><td scope="row" class='awrnc'>DLM cross inst call completion</td><td align="right" class='awrnc'>13</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>61.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>15.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>7.7</td></tr>
<tr><td scope="row" class='awrc'>Disk file Mirror Read</td><td align="right" class='awrc'>838</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>48.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>42.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>8.9</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>159</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>2.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>51.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>28.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>5.7</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>88.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>1812</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>13.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>16.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>17.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>25.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>15.3</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>462</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>35.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>45.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.6</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>627</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>84.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>1.9</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>3511</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>40.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>43.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>2.8</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>728</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>36.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>21.0</td></tr>
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>2231</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>99.7</td></tr>
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>41.1K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>4.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>92.0</td></tr>
<tr><td scope="row" class='awrnc'>LGWR wait for redo copy</td><td align="right" class='awrnc'>146</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>4.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>13.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>21.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>28.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>25.3</td></tr>
<tr><td scope="row" class='awrc'>LGWR worker group ordering</td><td align="right" class='awrc'>7054</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>92.2</td></tr>
<tr><td scope="row" class='awrnc'>PGA memory operation</td><td align="right" class='awrnc'>369</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>51.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>32.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.5</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Join ACK</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>45.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>9.1</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>10.7K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>84.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>.3</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>71</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>88.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>54</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>1.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>9.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>46.3</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>25</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>88.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>280</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>3034</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>31.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>30.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>10.0</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>6578</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>92.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>22.9K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>69.7</td></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.3M</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>12.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>87.0</td></tr>
<tr><td scope="row" class='awrnc'>direct path write</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: CF - contention</td><td align="right" class='awrc'>57</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>98.2</td></tr>
<tr><td scope="row" class='awrnc'>enq: CO - master slave det</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>94</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>14.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>85.1</td></tr>
<tr><td scope="row" class='awrnc'>enq: DW - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: FB - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: HW - contention</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: PS - contention</td><td align="right" class='awrc'>12</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>75.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: RO - fast object reuse</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>60.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>40.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TA - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: TM - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>enq: US - contention</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>enq: WF - contention</td><td align="right" class='awrc'>19</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>94.7</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>26</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>69.2</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>2729</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>11.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>87.8</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block lost</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr disk read</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>55.6</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>947.9K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>52.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>43.5</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>8137</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>91.9</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>721</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>93.3</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>8912</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>27.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>71.1</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>2079</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>27.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>70.9</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>172.5K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>51.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>44.4</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>1682</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>90.1</td></tr>
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>128</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>20.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>98.8</td></tr>
<tr><td scope="row" class='awrc'>gc current multi block request</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current split</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>gc index operation</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>557</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>37.2</td></tr>
<tr><td scope="row" class='awrc'>ges inquiry response</td><td align="right" class='awrc'>39</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>35.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>64.1</td></tr>
<tr><td scope="row" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>25</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>32.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>52.0</td></tr>
<tr><td scope="row" class='awrnc'>ksxr poll remote instances</td><td align="right" class='awrnc'>869</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>80.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch free</td><td align="right" class='awrc'>850</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>31.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>16.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>25.0</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>140</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>17.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>27.9</td></tr>
<tr><td scope="row" class='awrnc'>latch: call allocation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>190</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>13.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>24.2</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>28.4</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>199</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>14.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>16.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>19.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>40.2</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>306</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>18.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>18.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>26.5</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>25.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>30.0</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>19</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>26.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>26.3</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>140</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>17.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>18.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>22.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>18.6</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>40.0</td></tr>
<tr><td scope="row" class='awrnc'>latch: undo global data</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>20.0</td></tr>
<tr><td scope="row" class='awrc'>libcache interrupt action by LCK</td><td align="right" class='awrc'>501</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>92.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>100.6K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>255</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>22.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>67.8</td></tr>
<tr><td scope="row" class='awrc'>log file sync</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>name-service call wait</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>16</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>undo_retention publish retry</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>wait list latch free</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>AQPC idle</td><td align="right" class='awrc'>20</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>ASM background timer</td><td align="right" class='awrnc'>1658</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>8.1</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>80.3</td></tr>
<tr><td scope="row" class='awrc'>ASM cluster membership changes</td><td align="right" class='awrc'>346</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>DIAG idle wait</td><td align="right" class='awrnc'>7545</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>97.7</td></tr>
<tr><td scope="row" class='awrc'>Data Guard: Gap Manager</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>Data Guard: Timer</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>GCR sleep</td><td align="right" class='awrc'>4018</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group idle</td><td align="right" class='awrnc'>85.9K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>3.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>7.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>65.5</td></tr>
<tr><td scope="row" class='awrc'>OFS idle</td><td align="right" class='awrc'>201</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>PING</td><td align="right" class='awrnc'>569</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>14.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>24.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>11.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>10.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>38.1</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Execute Reply</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Execution Msg</td><td align="right" class='awrnc'>24</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>66.7</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Msg Fragment</td><td align="right" class='awrc'>60</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>38.3</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>40.0</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Parse Reply</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>PX Idle Wait</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>RMA: IPC0 completion sync</td><td align="right" class='awrc'>654</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>24.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>65.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SCM slave idle</td><td align="right" class='awrnc'>6048</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message from client</td><td align="right" class='awrc'>72</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>15.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>31.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>50.0</td></tr>
<tr><td scope="row" class='awrnc'>Space Manager: slave idle wait</td><td align="right" class='awrnc'>2557</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>96.8</td></tr>
<tr><td scope="row" class='awrc'>Streams AQ: qmn coordinator idle wait</td><td align="right" class='awrc'>44</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>38.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>54.5</td></tr>
<tr><td scope="row" class='awrnc'>Streams AQ: qmn slave idle wait</td><td align="right" class='awrnc'>22</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>class slave wait</td><td align="right" class='awrc'>7522</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>89.3</td></tr>
<tr><td scope="row" class='awrnc'>dispatcher timer</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>gcs remote message</td><td align="right" class='awrc'>1.5M</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>16.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>15.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.9</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>34.6</td></tr>
<tr><td scope="row" class='awrnc'>gcs yield cpu</td><td align="right" class='awrnc'>41.1K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>97.7</td></tr>
<tr><td scope="row" class='awrc'>ges remote message</td><td align="right" class='awrc'>17.3K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>94.1</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat monitor sleep</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat redo informer</td><td align="right" class='awrc'>603</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>lreg timer</td><td align="right" class='awrnc'>201</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>pman timer</td><td align="right" class='awrc'>201</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>pmon timer</td><td align="right" class='awrnc'>402</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>rdbms ipc message</td><td align="right" class='awrc'>202.3K</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>18.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>66.3</td></tr>
<tr><td scope="row" class='awrnc'>smon timer</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
<tr><td scope="row" class='awrc'>wait for unread message on broadcast channel</td><td align="right" class='awrc'>926</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrcrb'>100.0</td></tr>
<tr><td scope="row" class='awrnc'>watchdog main loop</td><td align="right" class='awrnc'>804</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=512us" class='awrncrb'>100.0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7405"></a>
<h3 class="awr">Wait Event Histogram (up to 64 us)</h3>
<ul>
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
<li class="awr"> Units for % of Total Waits:	 us is microseconds  </li>
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1us  - 64us</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us">&lt;8us</th><th class="awrbg" scope="col" id="&lt;16us">&lt;16us</th><th class="awrbg" scope="col" id="&lt;32us">&lt;32us</th><th class="awrbg" scope="col" id="&lt;64us">&lt;64us</th><th class="awrbg" scope="col" id="&gt;=64us">&gt;=64us</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>5628</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>83.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>6.5</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>21.1K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>61.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>21.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>10.2</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>1562</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>31.8</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>35.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>21.9</td></tr>
<tr><td scope="row" class='awrnc'>AWR Flush</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CGS wait for IPC msg</td><td align="right" class='awrc'>5748</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>79.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>6.8</td></tr>
<tr><td scope="row" class='awrnc'>CSS initialization</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>50.0</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>16.7</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.6</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>61.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>15.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>23.1</td></tr>
<tr><td scope="row" class='awrnc'>Disk file operations I/O</td><td align="right" class='awrnc'>16</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>89.9</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group query</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>88.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group update</td><td align="right" class='awrnc'>16</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>11.1</td></tr>
<tr><td scope="row" class='awrc'>IMR slave acknowledgement msg</td><td align="right" class='awrc'>451</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>13.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>75.1</td></tr>
<tr><td scope="row" class='awrnc'>IPC group service call</td><td align="right" class='awrnc'>204</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>35.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>55.8</td></tr>
<tr><td scope="row" class='awrc'>IPC send completion sync</td><td align="right" class='awrc'>579</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>84.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>7.7</td></tr>
<tr><td scope="row" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrnc'>1435</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>40.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>59.1</td></tr>
<tr><td scope="row" class='awrc'>KSV master wait</td><td align="right" class='awrc'>408</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>36.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>7.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>44.0</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>152</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.6</td></tr>
<tr><td scope="row" class='awrc'>LGWR wait for redo copy</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>89.7</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>122</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>98.3</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>352</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>51.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>32.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.6</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>4.6</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>33.3</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>45.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>45.5</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>10.1K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>84.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>5.3</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>68</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>88.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>4.2</td></tr>

WORKLOAD REPOSITORY report for

<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>23</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>57.4</td></tr>
DB Name 	DB Id	 Unique Name DB Role	      Edition Release	 RAC CDB
------------ ----------- ----------- ---------------- ------- ---------- --- ---
P30DB	      3393773525 p30db	     PRIMARY	      EE      19.0.0.0.0 YES NO

Instance     Inst Num Startup Time
------------ -------- ---------------
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>25</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>88.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
p30db1		    1 10-Feb-20 19:29

Host Name	 Platform			  CPUs Cores Sockets Memory(GB)
---------------- -------------------------------- ---- ----- ------- ----------
mcracpoc1.exampl Linux x86 64-bit		     8	   4	   1	  31.40

	      Snap Id	   Snap Time	  Sessions Curs/Sess Instances
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>796</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>73.8</td></tr>
	    --------- ------------------- -------- --------- ---------
Begin Snap:	  171 10-Feb-20 20:33:02       108	 1.5	     2
  End Snap:	  172 10-Feb-20 20:43:07	90	  .9	     2
   Elapsed:		  10.07 (mins)
   DB Time:		 180.35 (mins)

<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>6457</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>92.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>1.8</td></tr>
Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name
---------------------------------------- ------- ------ ------------------------
Top SQL Statements			   17.89  98.91 ADDM:3393773525_1_172
"User I/O" wait Class			   17.89  87.24 ADDM:3393773525_1_172
Top Segments by "User I/O" and "Cluster"   17.89  25.76 ADDM:3393773525_1_172
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>1365</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>94.0</td></tr>
Global Cache Messaging			   17.89   6.51 ADDM:3393773525_1_172
Undersized SGA				   17.89   3.35 ADDM:3393773525_1_172
Load Profile			Per Second   Per Transaction  Per Exec	Per Call
~~~~~~~~~~~~~~~ 	   ---------------   --------------- --------- ---------
	     DB Time(s):	      17.9		 0.1	  0.01	   59.78
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>88.5</td></tr>
	      DB CPU(s):	       1.5		 0.0	  0.00	    5.11
      Background CPU(s):	       0.8		 0.0	  0.00	    0.00
      Redo size (bytes):	 565,091.9	     2,794.2
  Logical read (blocks):	   9,405.6		46.5
	  Block changes:	   1,656.1		 8.2
 Physical read (blocks):	   3,888.6		19.2
Physical write (blocks):	     559.1		 2.8
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.9</td></tr>
       Read IO requests:	   3,888.6		19.2
      Write IO requests:	     537.1		 2.7
	   Read IO (MB):	      30.4		 0.2
	  Write IO (MB):	       4.4		 0.0
	   IM scan rows:	       0.0		 0.0
Session Logical Read IM:	       0.0		 0.0
 RAC GC blocks received:	      23.1		 0.1
   RAC GC blocks served:	      28.2		 0.1
	     User calls:	       0.3		 0.0
	   Parses (SQL):	       2.2		 0.0
      Hard parses (SQL):	       0.0		 0.0
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>4412</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.5</td></tr>
     SQL Work Area (MB):	       0.2		 0.0
		 Logons:	       0.0		 0.0
	    User logons:	       0.0		 0.0
	 Executes (SQL):	   1,349.0		 6.7
	      Rollbacks:	       0.0		 0.0
	   Transactions:	     202.2

<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.9</td></tr>
Instance Efficiency Percentages (Target 100%)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	    Buffer Nowait %:  100.00	   Redo NoWait %:  100.00
	    Buffer  Hit   %:   58.66	In-memory Sort %:  100.00
	    Library Hit   %:  100.09	    Soft Parse %:   98.44
	 Execute to Parse %:   99.84	     Latch Hit %:   99.98
Parse CPU to Parse Elapsd %:   71.43	 % Non-Parse CPU:  100.00
<tr><td scope="row" class='awrc'>gc current block 2-way</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
	  Flash Cache Hit %:	0.00

Top 10 Foreground Events by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					   Total Wait	    Avg   % DB Wait
Event				     Waits Time (sec)	   Wait   time Class
<tr><td scope="row" class='awrnc'>gc current block busy</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.8</td></tr>
------------------------------ ----------- ---------- --------- ------ --------
db file sequential read 	 2,345,128     9440.1	 4.03ms   87.2 User I/O
DB CPU						925.6		   8.6
gc cr grant 2-way		   951,203	571.8  601.17us    5.3 Cluster
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>840</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.5</td></tr>
gc current grant 2-way		   172,969	105.5  610.16us    1.0 Cluster
gc current grant read-mostly i	    20,618	 27.4	 1.33ms     .3 Cluster
gc cr grant busy		     8,138	  9.8	 1.20ms     .1 Cluster
gc current block 2-way		     9,061	  6.6  730.87us     .1 Cluster
gc cr block 2-way		     2,749	  3.4	 1.22ms     .0 Cluster
gc cr grant congested		       723	  2.9	 3.96ms     .0 Cluster
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>99.9</td></tr>
gc current block busy		     2,146	  2.1	  .99ms     .0 Cluster

Wait Classes by Total Wait Time
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
							  Avg		  Avg
					Total Wait	 Wait	% DB   Active
Wait Class		    Waits	Time (sec)	 Time	time Sessions
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>99.9</td></tr>
---------------- ---------------- ---------------- ---------- ------ --------
User I/O		2,369,648	     9,441     3.98ms	87.3	 15.6
DB CPU					       926		 8.6	  1.5
Cluster 		1,169,521	       733   626.68us	 6.8	  1.2
System I/O		  133,929	       630     4.70ms	 5.8	  1.0
Other			   86,985	       164     1.88ms	 1.5	  0.3
<tr><td scope="row" class='awrnc'>gcs log flush sync</td><td align="right" class='awrnc'>97</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>82.6</td></tr>
Network 		      535		 0    73.20us	  .0	  0.0
Commit				5		 0     6.70ms	  .0	  0.0
Concurrency		      538		 0    55.10us	  .0	  0.0
Application		       12		 0   555.83us	  .0	  0.0
Configuration			6		 0   739.33us	  .0	  0.0

Host CPU
~~~~~~~~		  Load Average
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>&#160;</td></tr>
 CPUs Cores Sockets	Begin	    End     %User   %System	 %WIO	  %Idle
----- ----- ------- --------- --------- --------- --------- --------- ---------
    8	  4	  1	10.59	  13.09      17.1      22.2	 40.4	   50.9

Instance CPU
~~~~~~~~~~~~
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>88.0</td></tr>
	      % of total CPU for Instance:	32.3
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>784</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>80.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.7</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>9.8</td></tr>
	      % of busy  CPU for Instance:	65.8
  %DB time waiting for CPU - Resource Mgr:	 0.0

IO Profile		    Read+Write/Second	  Read/Second	 Write/Second
~~~~~~~~~~		    ----------------- --------------- ---------------
	    Total Requests:	      4,604.9	      3,895.0		709.9
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>108</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>87.3</td></tr>
	 Database Requests:	      4,425.7	      3,888.6		537.1
	Optimized Requests:		  0.0		  0.0		  0.0
	     Redo Requests:		172.7		  1.3		171.4
		Total (MB):		 36.6		 31.6		  5.0
	     Database (MB):		 34.8		 30.4		  4.4
      Optimized Total (MB):		  0.0		  0.0		  0.0
		 Redo (MB):		  1.7		  1.1		  0.6
	 Database (blocks):	      4,447.8	      3,888.6		559.1
 Via Buffer Cache (blocks):	      4,447.7	      3,888.6		559.0
	   Direct (blocks):		  0.1		  0.0		  0.1

Memory Statistics
~~~~~~~~~~~~~~~~~			Begin	       End
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>75.0</td></tr>
				 ------------ ------------
		  Host Mem (MB):     32,156.0	  32,156.0
		   SGA use (MB):      9,664.0	   9,664.0
		   PGA use (MB):      1,020.0	     909.7
    % Host Mem used for SGA+PGA:	33.23	     32.88

Cache Sizes			  Begin        End
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>29</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>15.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>79.3</td></tr>
~~~~~~~~~~~		     ---------- ----------
	       Buffer Cache:	 8,000M     8,000M  Std Block Size:	    8K
	   Shared Pool Size:	 1,067M     1,056M	Log Buffer:    20,612K
	     In-Memory Area:	     0M 	0M

 Shared Pool Statistics        Begin	End
~~~~~~~~~~~~~~~~~~~~~~~~~~~~  ------  ------
	     Memory Usage %:   91.92   90.83
    % SQL with executions>1:   88.41   87.72
  % Memory for SQL w/exec>1:   86.67   86.68


Time Model Statistics			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> DB Time represents total time in user calls
-> DB CPU represents CPU time of foreground processes
-> Total CPU Time represents foreground and background processes
-> Statistics including the word "background" measure background process
   time, therefore do not contribute to the DB time statistic
-> Ordered by % of DB time in descending order, followed by Statistic Name

								% of  % of Total
Statistic Name					     Time (s) DB Time	CPU Time
------------------------------------------ ------------------ ------- ----------
sql execute elapsed time			     10,820.6	100.0
DB CPU							925.6	  8.6	    64.5
PL/SQL execution elapsed time				 39.8	   .4
parse time elapsed					  0.1	   .0
hard parse elapsed time 				  0.1	   .0
connection management call elapsed time 		  0.0	   .0
hard parse (bind mismatch) elapsed time 		  0.0	   .0
hard parse (sharing criteria) elapsed time		  0.0	   .0
sequence load elapsed time				  0.0	   .0
repeated bind elapsed time				  0.0	   .0
DB time 					     10,820.9
background elapsed time 			      1,098.9
background cpu time					510.2		    35.5
total CPU time					      1,435.7
			  ------------------------------------------------------

Operating System Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> *TIME statistic values are diffed.
   All others display actual values.  End Value is displayed if different
-> ordered by statistic type (CPU Use, Virtual Memory, Hardware Config), Name

Statistic				   Value	End Value
------------------------- ---------------------- ----------------
FREE_MEMORY_BYTES		   7,923,159,040    8,388,681,728
INACTIVE_MEMORY_BYTES		   1,231,712,256    1,232,556,032
BUSY_TIME				 218,337
IDLE_TIME				 225,950
IOWAIT_TIME				 179,677
SYS_TIME				  98,734
USER_TIME				  76,065
LOAD					      11	       13
PHYSICAL_MEMORY_BYTES		  33,717,977,088
NUM_CPUS				       8
NUM_CPU_CORES				       4
NUM_CPU_SOCKETS 			       1
GLOBAL_RECEIVE_SIZE_MAX 	       4,194,304
GLOBAL_SEND_SIZE_MAX		       1,048,576
TCP_RECEIVE_SIZE_DEFAULT		  87,380
TCP_RECEIVE_SIZE_MAX		       6,291,456
TCP_RECEIVE_SIZE_MIN			   4,096
TCP_SEND_SIZE_DEFAULT			  16,384
TCP_SEND_SIZE_MAX		       4,194,304
TCP_SEND_SIZE_MIN			   4,096
			  ------------------------------------------------------

Operating System Statistics - Detail	 DB/Inst: P30DB/p30db1	Snaps: 171-172

Snap Time	    Load    %busy    %user     %sys    %idle  %iowait
--------------- -------- -------- -------- -------- -------- --------
10-Feb 20:33:02     10.6      N/A      N/A	N/A	 N/A	  N/A
10-Feb 20:43:07     13.1     49.1     17.1     22.2	50.9	 40.4
			  ------------------------------------------------------

Foreground Wait Class			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
-> ordered by wait time desc, waits desc
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0
-> Captured Time accounts for	     102.6%  of Total DB time	   10,820.93 (s)
-> Total FG Wait Time:		  10,173.58 (s)  DB CPU time:	      925.55 (s)

				     %Time	Total Wait
Wait Class		       Waits -outs	  Time (s)   Avg wait  %DB time
-------------------- --------------- ----- --------------- ---------- ---------
User I/O		   2,345,182	 0	     9,440     4.03ms	   87.2
DB CPU						       926		    8.6
Cluster 		   1,169,475	 0	       732   626.25us	    6.8
Other			       4,988	 4		 1   199.65us	    0.0
Commit				   5	 0		 0     6.70ms	    0.0
System I/O			 136	 0		 0   245.10us	    0.0
Concurrency			  24	33		 0   504.50us	    0.0
Network 			  54	 0		 0    15.52us	    0.0
Application			   1	 0		 0   593.00us	    0.0
Configuration			   1	 0		 0   492.00us	    0.0
			  ------------------------------------------------------


Foreground Wait Events			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> s  - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Only events with Total Wait Time (s) >= .001 are shown
-> ordered by wait time desc, waits desc (idle events last)
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
				       %Time	 Wait		   Waits   % DB
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
db file sequential read      2,345,128		9,440	 4.03ms     19.2   87.2
gc cr grant 2-way	       951,203		  572  601.17us      7.8    5.3
gc current grant 2-way	       172,969		  106  610.16us      1.4    1.0
gc current grant read-most	20,618		   27	 1.33ms      0.2     .3
gc cr grant busy		 8,138		   10	 1.20ms      0.1     .1
gc current block 2-way		 9,061		    7  730.87us      0.1     .1
gc cr block 2-way		 2,749		    3	 1.22ms      0.0     .0
gc cr grant congested		   723		    3	 3.96ms      0.0     .0
gc current block busy		 2,146		    2	  .99ms      0.0     .0
gc current grant busy		 1,690		    2	  .96ms      0.0     .0
gc cr block lost		     1		    1  605.17ms      0.0     .0
gc current grant congested	   128		    0	 3.86ms      0.0     .0
KJC: Wait for msg sends to	 3,516		    0  130.44us      0.0     .0
latch: enqueue hash chains	   190		    0  626.62us      0.0     .0
latch free			   275		    0  429.36us      0.0     .0
latch: gc element		   165		    0  684.22us      0.0     .0
gc buffer busy release		    17		    0	 6.58ms      0.0     .0
latch: gcs resource hash	   105		    0  597.96us      0.0     .0
log file sync			     5		    0	 6.70ms      0.0     .0
control file sequential re	   136		    0  245.10us      0.0     .0
gc current block congested	     6		    0	 4.00ms      0.0     .0
latch: redo allocation		    68		    0  323.07us      0.0     .0
enq: WF - contention		    18		    0  926.00us      0.0     .0
enq: FB - contention		     6		    0	 2.75ms      0.0     .0
gc cr multi block mixed 	    13		    0	 1.23ms      0.0     .0
IPC send completion sync	    21		    0  641.05us      0.0     .0
gc cr block busy		     2		    0	 6.14ms      0.0     .0
Disk file Mirror Read		    34		    0  359.71us      0.0     .0
direct path write		     1		    0	 9.53ms      0.0     .0
latch: object queue header	    13		    0  686.62us      0.0     .0
PGA memory operation		   302		    0	28.62us      0.0     .0
row cache lock			     8	 100	    0	 1.08ms      0.0     .0
enq: PS - contention		     9	  22	    0  908.56us      0.0     .0
CSS initialization		     2		    0	 3.36ms      0.0     .0
gc current multi block req	     6		    0	 1.07ms      0.0     .0
gc cr block congested		     2		    0	 2.85ms      0.0     .0
PX Deq: reap credit		   217	 100	    0	25.21us      0.0     .0
latch: cache buffers lru c	    35		    0  129.09us      0.0     .0
name-service call wait		     4		    0	 1.08ms      0.0     .0
latch: cache buffers chain	    16		    0  216.88us      0.0     .0
DLM cross inst call comple	     9		    0  317.00us      0.0     .0
CSS operation: action		     2		    0  907.00us      0.0     .0
latch: messages 		     4		    0  441.00us      0.0     .0
CSS operation: query		     6		    0  220.17us      0.0     .0
Disk file operations I/O	    16		    0	81.50us      0.0     .0
gc index operation		     1		    0	 1.30ms      0.0     .0
gc current split		     2		    0  507.50us      0.0     .0
watchdog main loop		   808		2,424 3000.07ms      0.0
PX Deq: Execution Msg		    24		    0	 2.71ms      0.0
SQL*Net message from clien	    49		    0  833.39us      0.0
PX Deq: Msg Fragment		    60		    0  484.22us      0.0
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>33.3</td></tr>
			  ------------------------------------------------------


Background Wait Events			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0

						Total
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>26</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>9.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>86.3</td></tr>
				       %Time	 Wait		   Waits   % bg
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
log file parallel write        100,845	   0	  561	 5.56ms      0.8   51.0
LGWR any worker group		41,200	   0	  127	 3.09ms      0.3   11.6
db file parallel write		22,919	   0	   65	 2.82ms      0.2    5.9
LGWR worker group ordering	 7,089	   0	   20	 2.77ms      0.1    1.8
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>91.0</td></tr>
LGWR all worker groups		 2,227	   0	    9	 4.26ms      0.0     .9
control file parallel writ	   281	   0	    3	10.39ms      0.0     .3
Sync ASM rebalance		    54	   0	    1	22.24ms      0.0     .1
ASM file metadata operatio	 2,001	   0	    1  473.49us      0.0     .1
ASM IO for non-blocking po	23,492	   0	    1	37.12us      0.2     .1
control file sequential re	 2,911	   0	    1  272.82us      0.0     .1
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>66</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.8</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>78.4</td></tr>
KSV master wait 		   728	  62	    1	 1.03ms      0.0     .1
IMR slave acknowledgement	 1,815	   0	    1  295.20us      0.0     .0
gc cr multi block mixed 	     2	   0	    1  253.04ms      0.0     .0
gcs log flush sync		   861	   0	    0  508.20us      0.0     .0
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>75.0</td></tr>
enq: CR - block range reus	    90	   0	    0	 4.20ms      0.0     .0
PX Deq: reap credit		10,463	 100	    0	31.18us      0.1     .0
log file sequential read	   255	   0	    0	 1.17ms      0.0     .0
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>70.0</td></tr>
Disk file Mirror Read		   807	   0	    0  364.51us      0.0     .0
DFS lock handle 		   265	 100	    0	 1.01ms      0.0     .0
AQ: RAC AQ Network		 6,028	 100	    0	33.38us      0.0     .0
CGS wait for IPC msg		 6,175	 100	    0	30.86us      0.1     .0
reliable message		    16	   0	    0	10.89ms      0.0     .0
latch free			   575	   0	    0  259.30us      0.0     .0
latch: gcs resource hash	   203	   0	    0  574.01us      0.0     .0
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>84.2</td></tr>
oracle thread bootstrap 	     4	   0	    0	23.12ms      0.0     .0
LGWR wait for redo copy 	   148	   0	    0  467.40us      0.0     .0
db file async I/O submit	 6,577	   0	    0	10.48us      0.1     .0
latch: cache buffers lru c	   105	   0	    0  616.77us      0.0     .0
enq: CF - contention		    57	  70	    0	  .96ms      0.0     .0
Disk file operations I/O	   142	   0	    0  279.63us      0.0     .0
IPC group service call		   459	   0	    0	83.23us      0.0     .0
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>31</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>77.9</td></tr>
ksxr poll remote instances	   865	 100	    0	35.86us      0.0     .0
CSS operation: data query	    18	   0	    0	 1.58ms      0.0     .0
ges inquiry response		    37	   0	    0  763.27us      0.0     .0
latch: redo allocation		    72	   0	    0  373.03us      0.0     .0
CSS operation: data update	    20	   0	    0	 1.31ms      0.0     .0
db file sequential read 	    24	   0	    0	 1.08ms      0.0     .0
latch: gc element		    36	   0	    0  695.89us      0.0     .0
<tr><td scope="row" class='awrc'>latch: undo global data</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>80.0</td></tr>
PX Deq: Join ACK		     3	   0	    0	 6.83ms      0.0     .0
IPC send completion sync	   606	 100	    0	28.87us      0.0     .0
kjctssqmg: quick message s	    25	 100	    0  687.48us      0.0     .0
gc current block 2-way		    15	   0	    0  854.27us      0.0     .0
direct path write		     1	   0	    0	 9.61ms      0.0     .0
enq: CO - master slave det	    10	 100	    0  941.40us      0.0     .0
os thread creation		     4	   0	    0	 1.82ms      0.0     .0
gc cr disk read 		     9	   0	    0  777.11us      0.0     .0
<tr><td scope="row" class='awrnc'>libcache interrupt action by LCK</td><td align="right" class='awrnc'>496</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>91.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>5.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>1.0</td></tr>
row cache lock			     5	 100	    0	 1.30ms      0.0     .0
latch: cache buffers chain	     4	   0	    0	 1.38ms      0.0     .0
enq: RO - fast object reus	    10	   0	    0  513.60us      0.0     .0
enq: US - contention		     7	   0	    0  686.71us      0.0     .0
gc current block busy		     6	   0	    0  773.50us      0.0     .0
enq: PS - contention		     3	  33	    0	 1.35ms      0.0     .0
latch: redo writing		     5	   0	    0  788.80us      0.0     .0
<tr><td scope="row" class='awrc'>log file sequential read</td><td align="right" class='awrc'>61</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>22.4</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrcrb'>76.1</td></tr>
gc cr block 2-way		     4	   0	    0	  .96ms      0.0     .0
libcache interrupt action	   502	   0	    0	 6.49us      0.0     .0
gc current grant busy		     5	   0	    0  591.60us      0.0     .0
PGA memory operation		    67	   0	    0	42.19us      0.0     .0
latch: object queue header	     6	   0	    0  437.33us      0.0     .0
gc current grant 2-way		     5	   0	    0  472.80us      0.0     .0
library cache lock		     1	 100	    0	 2.02ms      0.0     .0

<tr><td scope="row" class='awrnc'>undo_retention publish retry</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=64us" class='awrncrb'>&#160;</td></tr>
Background Wait Events			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> ordered by wait time desc, waits desc (idle events last)
-> Only events with Total Wait Time (s) >= .001 are shown
-> %Timeouts: value of 0 indicates value was < .5%.  Value of null is truly 0
</table><p />

						Total
				       %Time	 Wait		   Waits   % bg
Event				 Waits -outs Time (s)  Avg wait     /txn   time
-------------------------- ----------- ----- -------- --------- -------- ------
<hr align="left" width="20%" /><p />
latch: ges resource hash l	     8	   0	    0  236.25us      0.0     .0
enq: TD - KTF dump entries	     1	   0	    0	 1.89ms      0.0     .0
<a class="awr" href="#21">Back to Wait Events Statistics</a>
latch: messages 		     6	   0	    0  222.00us      0.0     .0
enq: WF - contention		     1	   0	    0	 1.25ms      0.0     .0
enq: TA - contention		     2	   0	    0  621.50us      0.0     .0
latch: undo global data 	     1	   0	    0	 1.19ms      0.0     .0
wait list latch free		     1	   0	    0	 1.13ms      0.0     .0
<br /><a class="awr" href="#top">Back to Top</a><p />
PX Deq: Slave Session Stat	     3	   0	    0  337.67us      0.0     .0
enq: DW - contention		     1	 100	    0	 1.00ms      0.0     .0
rdbms ipc message	       202,628	   6   13,629	67.26ms      1.7
PX Idle Wait			     9	   0   10,269 1140.96 s      0.0
<a class="awr" name="7410"></a>
Space Manager: slave idle	 2,560	   0	9,658 3772.82ms      0.0
class slave wait		 7,533	  80	4,221  560.40ms      0.1
wait for unread message on	   926	 100	1,813 1957.39ms      0.0
pmon timer			   403	 100	1,209 2999.91ms      0.0
ges remote message		17,315	   0	1,208	69.77ms      0.1
<h3 class="awr">Wait Event Histogram (up to 32 ms)</h3>
GCR sleep			 4,024	   0	1,208  300.13ms      0.0
DIAG idle wait			 7,554	  83	1,206  159.66ms      0.1
gcs yield cpu			41,176	 100	1,203	29.21ms      0.3
gcs remote message	     1,471,179	   0	1,012  687.91us     12.0
Data Guard: Gap Manager 	    11	   0	  660	60.00 s      0.0
Streams AQ: qmn coordinato	    44	   0	  616	14.00 s      0.0
Streams AQ: qmn slave idle	    22	   0	  616	28.00 s      0.0
OFS idle			   202	 100	  606 3000.02ms      0.0
<ul>
pman timer			   202	 100	  606 2999.69ms      0.0
ASM background timer		 1,658	   0	  606  365.20ms      0.0
heartbeat redo informer 	   605	   0	  605 1000.15ms      0.0
REPL Capture/Apply: RAC AQ	    10	 100	  604	60.43 s      0.0
SCM slave idle			 6,056	   0	  604	99.69ms      0.0
lreg timer			   201	 100	  604 3002.65ms      0.0
LGWR worker group idle		86,072	   0	  603	 7.01ms      0.7
ASM cluster membership cha	   344	  85	  602 1750.40ms      0.0
PING				   559	  21	  600 1074.01ms      0.0
dispatcher timer		    10	 100	  600	60.01 s      0.0
AQPC idle			    20	 100	  600	30.00 s      0.0
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
Data Guard: Timer		     1	   0	  600  600.00 s      0.0
smon timer			    10	   0	  481	48.10 s      0.0
PX Deq: Execute Reply		     3	   0	    0	15.72ms      0.0
SQL*Net message from clien	    23	   0	    0	 1.25ms      0.0
RMA: IPC0 completion sync	   657	   0	    0	25.48us      0.0
<li class="awr"> Units for % of Total Waits:	 us is microseconds,	ms is 1024 microseconds (approximately 1 millisecond) </li>
PX Deq: Parse Reply		     3	   0	    0	 2.43ms      0.0
			  ------------------------------------------------------


Wait Event Histogram			 DB/Inst: P30DB/p30db1	Snaps: 171-172
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
-> Ordered by Event (idle events last)

						 % of Total Waits
				 -----------------------------------------------
			   Total
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	    6019	  .5  83.7   9.3   4.1	 1.5	.5    .3
ASM IO for non-blocking p  23.5K    .3	61.1  21.3   7.1   5.5	 2.7   1.2    .8
</ul>
ASM file metadata operati   2000  31.9	 1.8  35.0   9.5   5.5	 3.1   4.9   8.5
AWR Flush		       5 100.0
CGS wait for IPC msg	    6167	 5.0  79.9   8.3   4.6	 1.3	.7    .2
CSS initialization	       2	      50.0			    50.0
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
CSS operation: action	       2					   100.0
CSS operation: data query     18					   100.0
CSS operation: data updat     20					   100.0
CSS operation: query	       6  83.3					    16.7
DFS lock handle 	     265		      .4	 1.5  13.6  84.5
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>
DLM cross inst call compl     13	      61.5  15.4	      15.4   7.7
Disk file Mirror Read	     838			    .1	48.1  42.8   8.9
Disk file operations I/O     159   2.5	 6.3   1.3	   3.8	51.6  28.9   5.7
GCR CSS group query	      18	88.9   5.6   5.6
</tr><tr>
GCR CSS group update	      18	66.7  11.1  11.1	11.1
IMR slave acknowledgement   1812	 5.0  13.1   6.7  16.9	17.7  25.2  15.3
IPC group service call	     462    .4	  .4   7.4  35.9  45.5	 8.4   1.3    .6
IPC send completion sync     627	  .8  84.5   7.0   2.7	 1.4   1.6   1.9
KJC: Wait for msg sends t   3511		    40.9  43.7	 8.9   3.7   2.8
KSV master wait 	     728    .1	12.6  36.3   7.0   5.6	13.0   4.3  21.0
LGWR all worker groups	    2231			    .0	  .2	    99.7
LGWR any worker group	   41.1K	  .2	.0    .2    .9	 2.1   4.6  92.0
LGWR wait for redo copy      146   4.1	  .7	.7   4.8  13.7	21.9  28.8  25.3
LGWR worker group orderin   7054    .4	  .3	.2    .8   2.0	 1.9   2.2  92.2
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 1ms  to 32ms</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms">&lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms">&lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&gt;=32ms">&gt;=32ms</th></tr>
PGA memory operation	     369  51.2	32.0   7.6   4.6   2.2	 1.4	.5    .5
PX Deq: Join ACK	       3					   100.0
PX Deq: Signal ACK EXT	       3	      66.7		      33.3
PX Deq: Slave Session Sta     11	 9.1  45.5	  18.2	 9.1   9.1   9.1
PX Deq: reap credit	   10.7K	 2.4  84.5   7.8   3.2	 1.2	.7    .3
SQL*Net message to client     71  88.7	 2.8	     4.2   1.4	 2.8
Sync ASM rebalance	      54   1.9	38.9	     1.9	 1.9   9.3  46.3
asynch descriptor resize      25  88.0	 8.0   4.0
buffer busy waits	       2			  50.0	50.0
control file parallel wri    280					   100.0
control file sequential r   3034	 8.4  16.2   1.5   1.9	31.5  30.4  10.0
db file async I/O submit    6578  92.2	 3.2   1.3   1.5    .9	  .6	.2    .2
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>20</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
db file parallel write	   22.9K	  .1	.6   5.3   5.5	 8.3  10.5  69.7
db file sequential read     2.3M			    .0	  .2  12.9  87.0
direct path write	       2					   100.0
enq: CF - contention	      57				       1.8  98.2
enq: CO - master slave de     10					   100.0
enq: CR - block range reu     94				      14.9  85.1
enq: DW - contention	       1					   100.0
enq: FB - contention	       1				     100.0
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>181</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>166</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>91.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.2</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS initialization</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>20</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>65.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>83.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>224</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>15.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>55.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>23.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>92.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>75</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>91.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>94.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>277</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>84.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>12.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>98.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>100</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>97.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>153</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>79.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>2217</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>73.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>21.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.4</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>37.6K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>8.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>20.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>49.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>9.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.4</td></tr>
enq: HW - contention	       1				     100.0
<tr><td scope="row" class='awrc'>LGWR wait for redo copy</td><td align="right" class='awrc'>37</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>74.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
enq: PS - contention	      12				      25.0  75.0
enq: RO - fast object reu     10				      60.0  40.0
enq: TA - contention	       2					   100.0
enq: TD - KTF dump entrie      1					   100.0
enq: TM - contention	       2					   100.0
enq: US - contention	       7					   100.0
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>6502</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>7.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>76.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
enq: WF - contention	      19			   5.3		    94.7
gc buffer busy release	      26	 7.7	     3.8  19.2		    69.2
gc cr block 2-way	    2729		      .1    .4	  .4  11.4  87.8
gc cr block busy	       3					   100.0
gc cr block congested	       2					   100.0
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>99.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
gc cr block lost	       1					   100.0
gc cr disk read 	       9			  11.1	      33.3  55.6
gc cr grant 2-way	  947.9K		      .5    .9	 2.3  52.8  43.5

Wait Event Histogram			 DB/Inst: P30DB/p30db1	Snaps: 171-172
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)
<tr><td scope="row" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>90.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>

						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
<tr><td scope="row" class='awrnc'>PX Deq: reap credit</td><td align="right" class='awrnc'>27</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
gc cr grant busy	    8137		.1    .0    .1	  .3   7.6  91.9
gc cr grant congested	     721					   100.0
gc cr multi block mixed       15				       6.7  93.3
gc current block 2-way	    8912		      .1    .6	  .5  27.6  71.1
gc current block busy	    2079		      .2    .6	 1.0  27.4  70.9
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>53.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>27.8</td></tr>
gc current block congeste      6					   100.0
gc current grant 2-way	  172.5K		      .5   1.0	 2.3  51.9  44.4
gc current grant busy	    1682	  .1	      .1    .1	  .5   9.1  90.1
gc current grant congeste    128					   100.0
gc current grant read-mos  20.6K	  .0	.0    .0    .1	  .1   1.0  98.8
gc current multi block re      1				     100.0
gc current split	       2				      50.0  50.0
gc index operation	       1					   100.0
gcs log flush sync	     557	 2.9   6.8   7.7  15.8	13.8  15.8  37.2
ges inquiry response	      39				      35.9  64.1
ges resource directory to      4  50.0	25.0	    25.0
kjctssqmg: quick message      25	 4.0   8.0		 4.0  32.0  52.0
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>259</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>22.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>53.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>8.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>7.5</td></tr>
ksxr poll remote instance    869	  .3  80.2   9.7   6.1	 3.0	.7
latch free		     850	 7.2   1.1   4.5  19.6	31.5  20.1  16.0
latch: cache buffers chai     20	15.0  10.0	  20.0	10.0  20.0  25.0
latch: cache buffers lru     140	15.0   2.9   2.9  17.1	17.9  16.4  27.9
latch: call allocation	       1				     100.0
latch: checkpoint queue l      3	66.7		  33.3
latch: enqueue hash chain    190	 9.5   1.1   3.2  13.2	20.5  24.2  28.4
<tr><td scope="row" class='awrc'>control file sequential read</td><td align="right" class='awrc'>303</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>90.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
latch: gc element	     199	 3.0	.5   5.5  14.6	16.6  19.6  40.2
latch: gcs resource hash     306	 7.5   4.2   9.8  18.3	18.6  15.0  26.5
latch: ges resource hash       8	12.5  12.5		50.0	    25.0
latch: messages 	      10	20.0  10.0		      40.0  30.0
latch: object queue heade     19	       5.3  10.5  15.8	15.8  26.3  26.3
latch: redo allocation	     140	14.3   2.9   5.0  17.9	18.6  22.9  18.6
<tr><td scope="row" class='awrnc'>db file async I/O submit</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>99.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
latch: redo writing	       5			  20.0	20.0  20.0  40.0
latch: undo global data        5	20.0		  40.0	      20.0  20.0
libcache interrupt action    501  92.8	 5.2	.6    .4   1.0
library cache lock	       1					   100.0
log file parallel write   100.6K					   100.0
log file sequential read     255    .4	       1.2  22.4   3.5	 1.2   3.5  67.8
<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>15.8K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>30.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>16.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>22.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>18.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.9</td></tr>
log file sync		       5					   100.0
name-service call wait	       5					   100.0
oracle thread bootstrap        4					   100.0
os thread creation	       4					   100.0
reliable message	      16					   100.0
row cache lock		      12					   100.0
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2M</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>13.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>63.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>14.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.8</td></tr>
undo_retention publish re      2  50.0	50.0
wait list latch free	       1					   100.0
AQPC idle		      20					   100.0
ASM background timer	    1658			    .1	11.5   8.1  80.3
ASM cluster membership ch    346					   100.0
DIAG idle wait		    7545		      .2    .7	  .5   1.0  97.7
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
Data Guard: Gap Manager       10					   100.0
Data Guard: Timer	       1					   100.0
GCR sleep		    4018					   100.0
LGWR worker group idle	   85.9K   3.2	 2.8   1.2   5.0   9.6	 7.3   5.4  65.5
OFS idle		     201					   100.0
PING			     569	       1.2  14.6  24.1	11.6  10.4  38.1
PX Deq: Execute Reply	       3					   100.0
PX Deq: Execution Msg	      24				      33.3  66.7
PX Deq: Msg Fragment	      60	       1.7  10.0   6.7	 3.3  38.3  40.0
PX Deq: Parse Reply	       3					   100.0
PX Idle Wait		       8					   100.0
REPL Capture/Apply: RAC A     10					   100.0

Wait Event Histogram			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (idle events last)

						 % of Total Waits
				 -----------------------------------------------
			   Total
Event			   Waits  <8us <16us <32us <64us <128u <256u <512u >=512
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
RMA: IPC0 completion sync    654	24.0  65.1   6.0   3.4	  .9	.6
SCM slave idle		    6048					   100.0
SQL*Net message from clie     72			   2.8	15.3  31.9  50.0
Space Manager: slave idle   2557	  .9	.3    .2    .7	  .6	.4  96.8
Streams AQ: qmn coordinat     44				38.6   6.8  54.5
Streams AQ: qmn slave idl     22					   100.0
class slave wait	    7522    .0	 3.0	.4   1.3   3.0	 2.1	.9  89.3
dispatcher timer	      10					   100.0
gcs remote message	    1.5M	  .5   2.7   9.8  16.0	15.5  20.9  34.6
gcs yield cpu		   41.1K	 2.0	.1    .1    .0	  .0	.0  97.7
ges remote message	   17.3K	  .0	.1    .2    .6	 1.3   3.8  94.1
heartbeat monitor sleep        2 100.0
heartbeat redo informer      603					   100.0
lreg timer		     201					   100.0
pman timer		     201					   100.0
pmon timer		     402					   100.0
rdbms ipc message	  202.3K    .0	18.3	.8   2.0   3.9	 3.7   5.0  66.3
smon timer		      10					   100.0
wait for unread message o    926					   100.0
watchdog main loop	     804					   100.0
			  ------------------------------------------------------


Wait Event Histogram (up to 64 us)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1us
Event			  - 64us  <1us	<2us  <4us  <8us <16us <32us <64us >=64u
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	    5628			    .5	83.7   9.3   6.5
ASM IO for non-blocking p  21.1K		      .3  61.1	21.3   7.1  10.2
ASM file metadata operati   1562		.1  31.8   1.8	35.0   9.5  21.9
AWR Flush		       5		   100.0
CGS wait for IPC msg	    5748			   5.0	79.9   8.3   6.8
CSS initialization	       1				50.0	    50.0
CSS operation: query	       5	      16.7  66.7		    16.7
DFS lock handle 	       1					.4  99.6
DLM cross inst call compl     10				61.5  15.4  23.1
Disk file operations I/O      16		     2.5   6.3	 1.3	    89.9
GCR CSS group query	      18			  88.9	 5.6   5.6
GCR CSS group update	      16			  66.7	11.1  11.1  11.1
IMR slave acknowledgement    451			   5.0	13.1   6.7  75.1
IPC group service call	     204		      .4    .4	 7.4  35.9  55.8
IPC send completion sync     579			    .8	84.5   7.0   7.7
KJC: Wait for msg sends t   1435				      40.9  59.1
KSV master wait 	     408		      .1  12.6	36.3   7.0  44.0
LGWR any worker group	     152			    .2	  .0	.2  99.6
LGWR wait for redo copy       15		     4.1    .7	  .7   4.8  89.7
LGWR worker group orderin    122		.0    .4    .3	  .2	.8  98.3
PGA memory operation	     352		    51.2  32.0	 7.6   4.6   4.6
PX Deq: Signal ACK EXT	       2				66.7	    33.3
PX Deq: Slave Session Sta      6			   9.1	45.5	    45.5
PX Deq: reap credit	   10.1K			   2.4	84.5   7.8   5.3
SQL*Net message to client     68		    88.7   2.8	       4.2   4.2
Sync ASM rebalance	      23		     1.9  38.9	       1.9  57.4
asynch descriptor resize      25		    88.0   8.0	 4.0
control file sequential r    796			   8.4	16.2   1.5  73.8
db file async I/O submit    6457		.2  92.0   3.2	 1.3   1.5   1.8
db file parallel write	    1365			    .1	  .6   5.3  94.0
gc buffer busy release	       3			   7.7	       3.8  88.5
gc cr block 2-way	       2					.1  99.9
gc cr grant 2-way	    4412					.5  99.5
gc cr grant busy	       9				  .1	.0  99.9
gc current block 2-way	       8					.1  99.9
gc current block busy	       4					.2  99.8
gc current grant 2-way	     840					.5  99.5
gc current grant busy	       2			    .1		.1  99.9
gc current grant read-mos     14			    .0	  .0	.0  99.9
gcs log flush sync	      97			   2.9	 6.8   7.7  82.6
ges resource directory to      4		    50.0  25.0	      25.0
kjctssqmg: quick message       3			   4.0	 8.0	    88.0
ksxr poll remote instance    784			    .3	80.2   9.7   9.8
latch free		     108			   7.2	 1.1   4.5  87.3
latch: cache buffers chai      5			  15.0	10.0	    75.0
latch: cache buffers lru      29			  15.0	 2.9   2.9  79.3
latch: checkpoint queue l      2			  66.7		    33.3
latch: enqueue hash chain     26			   9.5	 1.1   3.2  86.3
latch: gc element	      18			   3.0	  .5   5.5  91.0
latch: gcs resource hash      66			   7.5	 4.2   9.8  78.4
latch: ges resource hash       2			  12.5	12.5	    75.0
latch: messages 	       3			  20.0	10.0	    70.0
latch: object queue heade      3				 5.3  10.5  84.2
latch: redo allocation	      31			  14.3	 2.9   5.0  77.9
latch: undo global data        1			  20.0		    80.0
libcache interrupt action    496	       1.4  91.4   5.2	  .6	.4   1.0
log file sequential read      61		      .4	 1.2  22.4  76.1
undo_retention publish re      2		    50.0  50.0
			  ------------------------------------------------------


Wait Event Histogram (up to 32 ms)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1ms
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
AQ: RAC AQ Network	      20  99.7	  .2	.1	    .0
ASM IO for non-blocking p    181  99.2	  .5	.2    .0    .0
ASM file metadata operati    166  91.6	 1.2	.6   2.9   3.1	  .6	      .2
CGS wait for IPC msg	      10  99.8	  .1	.1
CSS initialization	       1  50.0			  50.0
CSS operation: action	       2       100.0
CSS operation: data query     18	50.0  11.1  38.9
CSS operation: data updat     20	30.0  65.0   5.0
CSS operation: query	       1  83.3	      16.7
DFS lock handle 	     224  15.5	55.1  23.4   4.5    .8	  .8
DLM cross inst call compl      1  92.3		     7.7
Disk file Mirror Read	      75  91.1	 6.2   1.9    .1    .5	  .1	.1
Disk file operations I/O       9  94.3	 3.8   1.9
IMR slave acknowledgement    277  84.7	12.9   1.9    .2    .2	  .1	.1
IPC group service call	       3  99.4	  .6
IPC send completion sync      12  98.1	 1.0   1.0
KJC: Wait for msg sends t    100  97.2	 1.7	.5    .3    .2	  .0
KSV master wait 	     153  79.0	 1.1   1.4   8.4   8.4	 1.8
LGWR all worker groups	    2217    .3	  .1	.9  73.0  21.7	 1.7   1.9    .4
LGWR any worker group	   37.6K   8.0	 9.6  20.2  49.0   9.7	 1.1   2.1    .4
LGWR wait for redo copy       37  74.7	13.0   9.6   2.1    .7
LGWR worker group orderin   6502   7.8	 2.9   6.0  76.9   6.0	  .4	      .0
PGA memory operation	       2  99.5	  .3		    .3
PX Deq: Join ACK	       3		    33.3  33.3	33.3
PX Deq: Slave Session Sta      1  90.9	 9.1
PX Deq: reap credit	      27  99.7	  .2	.1    .0    .0
Sync ASM rebalance	      10  53.7	 7.4   5.6		 5.6	    27.8
control file parallel wri    259		    22.9  53.6	 7.9   8.2   7.5
control file sequential r    303  90.0	 8.3   1.2    .4    .0	  .0	.0
db file async I/O submit      12  99.8	  .1	.1
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>56</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>1.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>71.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>24.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
db file parallel write	   15.8K  30.3	16.5  22.6  18.5   5.4	 2.1   3.7    .9
db file sequential read       2M  13.0	 4.0	.6  63.6  14.5	 1.7   1.9    .8
direct path write	       2			       100.0
enq: CF - contention	      56   1.8	71.9  24.6   1.8
enq: CO - master slave de     10	90.0	    10.0
enq: CR - block range reu     78  14.9	40.4  27.7   5.3   3.2	 1.1   5.3   2.1
enq: DW - contention	       1       100.0
<tr><td scope="row" class='awrc'>enq: CO - master slave det</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>90.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
enq: PS - contention	       9  25.0	25.0  50.0
enq: RO - fast object reu      4  60.0	40.0
enq: TA - contention	       2       100.0
enq: TD - KTF dump entrie      1	     100.0
enq: TM - contention	       2       100.0
enq: US - contention	       7       100.0
enq: WF - contention	      18   5.3	57.9  31.6   5.3
gc buffer busy release	      18  30.8	       3.8  23.1  23.1	19.2
<tr><td scope="row" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrnc'>78</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>14.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>40.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>27.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>2.1</td></tr>
gc cr block 2-way	    2395  12.2	58.9  11.1  15.8   1.7	  .1	.1
gc cr block busy	       3			  66.7	33.3
gc cr block congested	       2		   100.0
gc cr disk read 	       5  44.4	22.2  33.3
gc cr grant 2-way	  412.2K  56.5	35.3   6.5   1.3    .3	  .0	.0    .0
gc cr grant busy	    7476   8.1	67.1  20.7   3.1    .8	  .2	      .0
gc cr grant congested	     721	      14.4  50.2  30.5	 4.6	.3
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
gc cr multi block mixed       13   6.7	26.7  53.3   6.7		     6.7
gc current block 2-way	    6340  28.9	59.5   9.7   1.5    .4	  .1	.0
gc current block busy	    1473  29.1	57.2  10.1   1.5   1.2	  .6	.2
gc current block congeste      6		    50.0  50.0
gc current grant 2-way	   76.5K  55.6	35.7   6.8   1.4    .4	  .0	.0
gc current grant busy	    1516   9.9	65.6  20.4   3.0   1.0	  .2
gc current grant congeste    128	      13.3  55.5  27.3	 3.9
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
gc current grant read-mos  20.3K   1.2	36.1  53.6   7.7   1.1	  .2	.0    .0

Wait Event Histogram (up to 32 ms)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   us is microseconds,
   ms is 1024 microseconds (approximately 1 millisecond)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>60.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
			   Waits
			    1ms
Event			  to 32m  <512	<1ms  <2ms  <4ms  <8ms <16ms <32ms >=32m
<tr><td scope="row" class='awrnc'>enq: TA - contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
gc current split	       1  50.0	50.0
gc index operation	       1	     100.0
gcs log flush sync	     207  62.8	16.9   5.9   9.0   3.4	 2.0
ges inquiry response	      25  35.9	43.6  20.5
kjctssqmg: quick message      13  48.0	40.0   8.0   4.0
latch free		     136  84.0	11.8   3.2   1.1
latch: cache buffers chai      5  75.0	10.0  10.0   5.0
latch: cache buffers lru      39  72.1	13.6   8.6   5.0    .7
latch: enqueue hash chain     54  71.6	17.4   6.8   2.1   1.1	  .5	.5
latch: gc element	      80  59.8	21.6  13.1   4.0   1.0	  .5
<tr><td scope="row" class='awrc'>enq: TD - KTF dump entries</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
latch: gcs resource hash      81  73.5	11.4   9.2   3.6   1.6	  .7
latch: ges resource hash       2  75.0	25.0
latch: messages 	       3  70.0	30.0
latch: object queue heade      5  73.7	10.5  10.5   5.3
latch: redo allocation	      26  81.4	 9.3   7.1   2.1
latch: redo writing	       2  60.0	      40.0
latch: undo global data        1  80.0	      20.0
library cache lock	       1	     100.0
log file parallel write   100.1K		    38.6  52.8	 6.0   2.1    .5
log file sequential read     173  32.2	25.5  18.4  22.7    .8	  .4
log file sync		       5		    20.0  60.0	20.0
name-service call wait	       5	60.0  40.0
oracle thread bootstrap        4				25.0  75.0
os thread creation	       4	      75.0  25.0
reliable message	      14	 6.3   6.3  37.5  31.3	 6.3	    12.5
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
row cache lock		      12	58.3  41.7
wait list latch free	       1	     100.0
			  ------------------------------------------------------


Wait Event Histogram (up to 2 sec)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000
-> Units for % of Total Waits:
   ms is milliseconds
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
   s is 1024 milliseconds (approximately 1 second)
-> % of Total Waits: total waits for all wait classes, including Idle
-> % of Total Waits: value of .0 indicates value was <.05%;
   value of null is truly 0
-> Ordered by Event (only non-idle events are displayed)

						 % of Total Waits
				 -----------------------------------------------
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>5.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>57.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>31.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
			   Waits
			   64ms
Event			   to 2s <32ms <64ms <1/8s <1/4s <1/2s	 <1s   <2s  >=2s
------------------------- ------ ----- ----- ----- ----- ----- ----- ----- -----
ASM file metadata operati      3  99.9	  .2
LGWR all worker groups	       8  99.6	  .4
LGWR any worker group	     150  99.6	  .3	.1
LGWR worker group orderin      1 100.0		.0
Sync ASM rebalance	      15  72.2	13.0  13.0   1.9
control file parallel wri     21  92.5	 6.1   1.4
<tr><td scope="row" class='awrc'>gc buffer busy release</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>30.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>23.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>19.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
db file parallel write	     195  99.1	  .8	.0
db file sequential read    19.2K  99.2	  .8	.0
enq: CR - block range reu      2  97.9	 1.1   1.1
gc cr block lost	       1			       100.0
gc cr grant 2-way	       2 100.0	  .0	.0
gc cr grant busy	       2 100.0				  .0
gc cr multi block mixed        1  93.3			   6.7
gc current grant read-mos      1 100.0	  .0
<tr><td scope="row" class='awrnc'>gc cr block 2-way</td><td align="right" class='awrnc'>2395</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>12.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>58.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>15.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
log file parallel write      506  99.5	  .4	.1
reliable message	       2  87.5	 6.3   6.3
			  ------------------------------------------------------


Wait Event Histogram (up to 2 min)	 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>gc cr block busy</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>


Wait Event Histogram (up to 1 hr)	 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------


Service Statistics			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> ordered by DB Time
<tr><td scope="row" class='awrnc'>gc cr block congested</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>

							   Physical	 Logical
Service Name		      DB Time (s)   DB CPU (s)	  Reads (K)    Reads (K)
---------------------------- ------------ ------------ ------------ ------------
p30db.example.com		   10,806	   923	      2,343	   5,173
SYS$BACKGROUND				0	     0		  0	     494
SYS$USERS				0	     0		  0	       0
p30dbXDB				0	     0		  0	       0
			  ------------------------------------------------------

Service Wait Class Stats		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Wait Class info for services in the Service Statistics section.
-> Total Waits and Time Waited displayed for the following wait
<tr><td scope="row" class='awrc'>gc cr disk read</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>44.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
   classes:  User I/O, Concurrency, Administrative, Network
-> Time Waited (Wt Time) in seconds

Service Name
----------------------------------------------------------------
 User I/O  User I/O  Concurcy  Concurcy     Admin     Admin   Network	Network
Total Wts   Wt Time Total Wts	Wt Time Total Wts   Wt Time Total Wts	Wt Time
--------- --------- --------- --------- --------- --------- --------- ---------
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>412.2K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>56.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>35.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
p30db.example.com
  2342856      9431	   27	      0 	0	  0	   53	      0
SYS$BACKGROUND
    24476	  1	  513	      0 	0	  0	  458	      0
SYS$USERS
	0	  0	    0	      0 	0	  0	    0	      0
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>7476</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>8.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>67.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>20.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.0</td></tr>
			  ------------------------------------------------------

Top 10 Channel Waits			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Top 10 Channel Waits by wait time

Channel
----------------------------------------------------------------
	       Total
		Wait
      Waits Time (s)  Avg Wait
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>721</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>14.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>50.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>30.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.3</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
----------- -------- ---------
kxfp control signal channel
	  2	   0	1.04ms
RBR channel
	 12	   0	4.35ms
MMON remote action broadcast channel
	  1	   0  116.02ms
			  ------------------------------------------------------


<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>6.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>26.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>53.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>6.7</td></tr>
Top Process Types by Wait Class 	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> This table displays top process types ordered by wait class

Proce Description		     Wait Class Type  Wait Time (sec
----- ------------------------------ ---------------- --------------
      Others (foregrounds + unclassi User I/O		     9,447.0
      Others (foregrounds + unclassi Cluster		       731.1
LG    Log Writer Slave		     System I/O 	       559.9
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>6340</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>28.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>59.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
LGWR  Redo etc. 		     Other		       136.6
DBW0  db writer process 0	     System I/O 		64.7
LG    Log Writer Slave		     Other			19.6
CKPT  checkpoint		     System I/O 		 3.3
      Others (foregrounds + unclassi Other			 1.0
M     MMON slave class 1	     Other			  .9
DBW0  db writer process 0	     User I/O			  .9
RMS0  rac management server	     Other			  .8
LMON  global enqueue service monitor Other			  .7
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>1473</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>29.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>57.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
O     ASM Connection Pool	     Other			  .7
RMS0  rac management server	     System I/O 		  .7
MMNL  Manageability Monitor Process  Other			  .6
LM    global cache service process   Other			  .6
W     space management slave pool    Cluster			  .5
SMON  System Monitor Process	     Other			  .5
P     Parallel query slave	     Other			  .4
QM*   QMON MS			     Other			  .2
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
			  ------------------------------------------------------


Top Process Types by CPU Used		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> This table displays top process types ordered by CPU time

Proces Description		      CPU Time (sec)
------ ------------------------------ --------------
       Others (foregrounds + unclassi	       924.1
LM     global cache service process	       386.9
<tr><td scope="row" class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>76.5K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>55.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>35.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
LG     Log Writer Slave 			46.1
VKTM   Virtual Keeper of TiMe process		33.9
DBW0   db writer process 0			22.8
LGWR   Redo etc.				22.1
RS*    GCS RM Slave				 7.0
M      MMON slave class 1			 4.5
GCR    GCR Slaves (LMHB)			 4.1
IPC0   IPC Service 0				 3.0
DIA0   diagnosibility process 0 		 2.4
<tr><td scope="row" class='awrnc'>gc current grant busy</td><td align="right" class='awrnc'>1516</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>9.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>65.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>20.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
LMHB   lm heartbeat monitor			 1.4
P      Parallel query slave			 1.4
LMON   global enqueue service monitor		 1.4
LMD0   global enqueue service daemon		 1.3
RMS0   rac management server			 1.3
LMD1   global enqueue service daemon		 1.1
O      ASM Connection Pool			 1.1
IMR    CGS IMR Slave				 1.0
SCM    DLM Statistics Collection and		  .9
<tr><td scope="row" class='awrc'>gc current grant congested</td><td align="right" class='awrc'>128</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>55.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>27.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
			  ------------------------------------------------------


SQL ordered by Elapsed Time		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
   into the Total Database Time multiplied by 100
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>20.3K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>1.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>36.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>53.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>.0</td></tr>
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
<tr><td scope="row" class='awrc'>gc current split</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc index operation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>207</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>62.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>16.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>9.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>3.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>25</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>35.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>43.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjctssqmg: quick message send wait</td><td align="right" class='awrc'>13</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>48.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>136</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>84.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers chains</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>75.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers lru chain</td><td align="right" class='awrnc'>39</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>72.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>13.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: enqueue hash chains</td><td align="right" class='awrc'>54</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>71.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>.5</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gc element</td><td align="right" class='awrnc'>80</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>59.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>21.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>13.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gcs resource hash</td><td align="right" class='awrc'>81</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>73.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>9.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: ges resource hash list</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>75.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: messages</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>70.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: object queue header operation</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>73.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: redo allocation</td><td align="right" class='awrc'>26</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>81.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>9.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo writing</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>60.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: undo global data</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>80.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>100.1K</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>38.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>52.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>6.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>.5</td></tr>
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   97.9% of Total DB Time (s):	   10,821
-> Captured PL/SQL account for	 99.9% of Total DB Time (s):	      10,821

	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------
	 8,941.5	689,468 	 0.01	82.6	7.0   89.5 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	 1,653.5	121,676 	 0.01	15.3	8.2   86.0 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	   568.9	      1        568.91	 5.3	7.9   88.5 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.9	      1        568.91	 5.3	7.9   88.6 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.9	      1        568.85	 5.3	9.6   85.7 5wf99mx0r39xn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	   568.9	      1        568.85	 5.3	8.4   87.7 4tjq41wp5wggf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.8	      1        568.85	 5.3	9.6   85.5 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	   568.8	      1        568.84	 5.3	8.9   86.9 7m9rphfj2sxqy
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '34'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.8	      1        568.84	 5.3	7.1   90.1 5mrhuphq8yfw1
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.8	      1        568.83	 5.3	8.4   87.7 10yxz9a3s65pn
Module: SQL*Plus

SQL ordered by Elapsed Time		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   97.9% of Total DB Time (s):	   10,821
-> Captured PL/SQL account for	 99.9% of Total DB Time (s):	      10,821

	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.8	      1        568.80	 5.3	8.8   87.6 g679149chxm60
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	   568.8	      1        568.79	 5.3	9.7   84.8 amnkmrsjh10nv
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.8	      1        568.78	 5.3	8.3   87.6 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.7	      1        568.74	 5.3	8.5   87.3 07wu9h58t4tgt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.7	      1        568.72	 5.3	8.1   88.6 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.6	      1        568.61	 5.3	8.8   86.2 gdjc35y9zsuzm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.6	      1        568.60	 5.3	8.0   88.1 26cgg6g31fq8p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.6	      1        568.57	 5.3	8.0   88.0 bzs4fu7kk84h3
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

SQL ordered by Elapsed Time		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> % Total DB Time is the Elapsed Time of the SQL statement divided
   into the Total Database Time multiplied by 100
-> %Total - Elapsed Time  as a percentage of Total DB time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   97.9% of Total DB Time (s):	   10,821
-> Captured PL/SQL account for	 99.9% of Total DB Time (s):	      10,821

	Elapsed 		 Elapsed Time
	Time (s)    Executions	per Exec (s)  %Total   %CPU    %IO    SQL Id
---------------- -------------- ------------- ------ ------ ------ -------------

	   568.4	      1        568.38	 5.3	8.8   87.0 93dyj9jyyg3mj
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>173</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>32.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>22.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.1	      1        568.07	 5.2	8.9   87.0 6hgs8vfsdc56c
<tr><td scope="row" class='awrc'>log file sync</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	   568.0	      1        568.03	 5.2	8.4   88.1 bz8m3my689x30
<tr><td scope="row" class='awrnc'>name-service call wait</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>60.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  ------------------------------------------------------
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>


SQL ordered by CPU Time 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   81.9% of Total CPU Time (s):	       926
-> Captured PL/SQL account for	 99.8% of Total CPU Time (s):		  926

    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>14</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>31.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>12.5</td></tr>
     621.9	689,468       0.00   67.2    8,941.5	7.0   89.5 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

     135.6	121,676       0.00   14.6    1,653.5	8.2   86.0 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>12</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>58.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>41.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrncrb'>&#160;</td></tr>

      55.3	      1      55.30    6.0      568.8	9.7   84.8 amnkmrsjh10nv
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<tr><td scope="row" class='awrc'>wait list latch free</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=32ms" class='awrcrb'>&#160;</td></tr>

      54.9	      1      54.88    5.9      568.8	9.6   85.5 71v63sn4bfskh
Module: SQL*Plus
</table><p />
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
<hr align="left" width="20%" /><p />
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

      54.6	      1      54.56    5.9      568.9	9.6   85.7 5wf99mx0r39xn
Module: SQL*Plus
<a class="awr" href="#21">Back to Wait Events Statistics</a>
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
<br /><a class="awr" href="#top">Back to Top</a><p />

      50.8	      1      50.82    5.5      568.1	8.9   87.0 6hgs8vfsdc56c
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
<a class="awr" name="7420"></a>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<h3 class="awr">Wait Event Histogram (up to 2 sec)</h3>
      50.4	      1      50.45    5.5      568.8	8.9   86.9 7m9rphfj2sxqy
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '34'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<ul>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      50.0	      1      50.00    5.4      568.6	8.8   86.2 gdjc35y9zsuzm
<li class="awr"> Units for Total Waits column: K is 1000, M is 1000000, G is 1000000000 </li>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<li class="awr"> Units for % of Total Waits:	 ms is milliseconds    s is 1024 milliseconds (approximately 1 second) </li>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      49.9	      1      49.93    5.4      568.4	8.8   87.0 93dyj9jyyg3mj
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
<li class="awr"> % of Total Waits: total waits for all wait classes, including Idle </li>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      49.8	      1      49.79    5.4      568.8	8.8   87.6 g679149chxm60
Module: SQL*Plus

<li class="awr"> % of Total Waits: value of .0 indicates value was &lt;.05%;	 value of null is truly 0 </li>
SQL ordered by CPU Time 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Captured SQL account for   81.9% of Total CPU Time (s):	       926
<li class="awr"> Ordered by Event (only non-idle events are displayed)</li>
-> Captured PL/SQL account for	 99.8% of Total CPU Time (s):		  926

    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
</ul>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

      48.3	      1      48.27    5.2      568.7	8.5   87.3 07wu9h58t4tgt
Module: SQL*Plus
<table border="0" class="tdiff" summary="This table displays total number of waits, and information about total wait time, for each wait event"><tr>
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 8" id="%ofTotalWaits">% of Total Waits</th>

      47.7	      1      47.72    5.2      568.9	8.4   87.7 4tjq41wp5wggf
Module: SQL*Plus
</tr><tr>
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      47.7	      1      47.68    5.2      568.8	8.4   87.7 10yxz9a3s65pn
Module: SQL*Plus
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits 64ms  to 2s</th><th class="awrbg" scope="col" id="&lt;32ms">&lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms">&lt;64ms</th><th class="awrbg" scope="col" id="&lt;1/8s">&lt;1/8s</th><th class="awrbg" scope="col" id="&lt;1/4s">&lt;1/4s</th><th class="awrbg" scope="col" id="&lt;1/2s">&lt;1/2s</th><th class="awrbg" scope="col" id="&lt;1s">  &lt;1s</th><th class="awrbg" scope="col" id="&lt;2s">  &lt;2s</th><th class="awrbg" scope="col" id="&gt;=2s">&gt;=2s</th></tr>
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      47.7	      1      47.65    5.1      568.0	8.4   88.1 bz8m3my689x30
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
<tr><td scope="row" class='awrc'>ASM file metadata operation</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.2</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      47.3	      1      47.32    5.1      568.8	8.3   87.6 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
<tr><td scope="row" class='awrnc'>LGWR all worker groups</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      45.9	      1      45.88    5.0      568.7	8.1   88.6 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<tr><td scope="row" class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>150</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>

      45.7	      1      45.70    4.9      568.6	8.0   88.1 26cgg6g31fq8p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

      45.6	      1      45.62    4.9      568.6	8.0   88.0 bzs4fu7kk84h3
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>

SQL ordered by CPU Time 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - CPU Time	  as a percentage of Total DB CPU
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
<tr><td scope="row" class='awrc'>Sync ASM rebalance</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>72.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
-> Captured SQL account for   81.9% of Total CPU Time (s):	       926
-> Captured PL/SQL account for	 99.8% of Total CPU Time (s):		  926

    CPU 		  CPU per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------

      45.2	      1      45.23    4.9      568.9	7.9   88.5 72r567f4w1r2z
<tr><td scope="row" class='awrnc'>control file parallel write</td><td align="right" class='awrnc'>21</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>92.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<tr><td scope="row" class='awrc'>db file parallel write</td><td align="right" class='awrc'>195</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.8</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
      45.1	      1      45.06    4.9      568.9	7.9   88.6 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>19.2K</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>99.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.8</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
      40.6	      1      40.55    4.4      568.8	7.1   90.1 5mrhuphq8yfw1
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  ------------------------------------------------------

<tr><td scope="row" class='awrc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>97.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>

SQL ordered by User I/O Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
<tr><td scope="row" class='awrnc'>gc cr block lost</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
-> Captured SQL account for   99.8% of Total User I/O Wait Time (s):	       9
-> Captured PL/SQL account for	100.1% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
   8,000.5	689,468       0.01   84.7    8,941.5	7.0   89.5 bhdvtsvjhgvrh
Module: SQL*Plus
<tr><td scope="row" class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

   1,422.0	121,676       0.01   15.1    1,653.5	8.2   86.0 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

     512.8	      1     512.81    5.4      568.8	7.1   90.1 5mrhuphq8yfw1
Module: SQL*Plus
<tr><td scope="row" class='awrnc'>gc cr grant busy</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     504.2	      1     504.19    5.3      568.9	7.9   88.6 6x8682kb2y8vd
Module: SQL*Plus
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>93.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     503.8	      1     503.81    5.3      568.7	8.1   88.6 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     503.4	      1     503.36    5.3      568.9	7.9   88.5 72r567f4w1r2z
Module: SQL*Plus
<tr><td scope="row" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>100.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>.0</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     501.1	      1     501.05    5.3      568.6	8.0   88.1 26cgg6g31fq8p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>506</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrclb'>99.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>.4</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrc'>.1</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrcrb'>&#160;</td></tr>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     500.5	      1     500.51    5.3      568.0	8.4   88.1 bz8m3my689x30
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<tr><td scope="row" class='awrnc'>reliable message</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnclb'>87.5</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;1/8s" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;1/4s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1/2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=2s" class='awrncrb'>&#160;</td></tr>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     500.4	      1     500.41    5.3      568.6	8.0   88.0 bzs4fu7kk84h3
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
</table><p />
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<hr align="left" width="20%" /><p />
     499.0	      1     499.03    5.3      568.8	8.4   87.7 10yxz9a3s65pn
Module: SQL*Plus

SQL ordered by User I/O Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
<a class="awr" href="#21">Back to Wait Events Statistics</a>
   statements called by the code.
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
<br /><a class="awr" href="#top">Back to Top</a><p />
-> Captured SQL account for   99.8% of Total User I/O Wait Time (s):	       9
-> Captured PL/SQL account for	100.1% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed
<a class="awr" name="7430"></a>
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
---------- ------------ ---------- ------ ---------- ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<h3 class="awr">Wait Event Histogram (up to 2 min)</h3>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     499.0	      1     499.00    5.3      568.9	8.4   87.7 4tjq41wp5wggf

Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<p />
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     498.4	      1     498.36    5.3      568.8	8.8   87.6 g679149chxm60
Module: SQL*Plus
		  No data exists for this section of the report.
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
<p />

     498.2	      1     498.24    5.3      568.8	8.3   87.6 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" href="#21">Back to Wait Events Statistics</a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     496.6	      1     496.61    5.3      568.7	8.5   87.3 07wu9h58t4tgt
<br /><a class="awr" href="#top">Back to Top</a><p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<a class="awr" name="7440"></a>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     494.7	      1     494.66    5.2      568.4	8.8   87.0 93dyj9jyyg3mj
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
<h3 class="awr">Wait Event Histogram (up to 1 hr)</h3>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red

o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     494.4	      1     494.41    5.2      568.8	8.9   86.9 7m9rphfj2sxqy
Module: SQL*Plus
<p />
DECLARE v_default_schema_number PLS_INTEGER := '34'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

		  No data exists for this section of the report.
     494.1	      1     494.08    5.2      568.1	8.9   87.0 6hgs8vfsdc56c
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<p />
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     489.9	      1     489.85    5.2      568.6	8.8   86.2 gdjc35y9zsuzm
Module: SQL*Plus
<a class="awr" href="#21">Back to Wait Events Statistics</a>
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<br /><a class="awr" href="#top">Back to Top</a><p />

SQL ordered by User I/O Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
<a class="awr" name="5800"></a>
-> %Total - User I/O Time as a percentage of Total User I/O Wait time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
<h3 class="awr">Service Statistics</h3>
-> Captured SQL account for   99.8% of Total User I/O Wait Time (s):	       9
-> Captured PL/SQL account for	100.1% of Total User I/O Wait Time (s):

  User I/O		  UIO per	    Elapsed
  Time (s)  Executions	  Exec (s) %Total   Time (s)   %CPU    %IO    SQL Id
<ul>
---------- ------------ ---------- ------ ---------- ------ ------ -------------

     487.7	      1     487.74    5.2      568.9	9.6   85.7 5wf99mx0r39xn
Module: SQL*Plus
<li class="awr"> ordered by DB Time</li>
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
</ul>

     486.3	      1     486.32    5.2      568.8	9.6   85.5 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h
<table border="0" class="tdiff" summary="This table displays service statistics. It displays service names and corresponding DB time, DB CPU, Physical reads, logical reads."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">DB Time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">Physical Reads (K)</th><th class="awrbg" scope="col">Logical Reads (K)</th></tr>

     482.3	      1     482.32    5.1      568.8	9.7   84.8 amnkmrsjh10nv
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  ------------------------------------------------------


<tr><td scope="row" class='awrc'>p30db.example.com</td><td align="right" class='awrc'>10,806</td><td align="right" class='awrc'>923</td><td align="right" class='awrc'>2,343</td><td align="right" class='awrc'>5,173</td></tr>
SQL ordered by Gets			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    5,685,015
-> Captured SQL account for   88.5% of Total

     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
<tr><td scope="row" class='awrnc'>SYS$BACKGROUND</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>494</td></tr>
----------- ----------- ------------ ------ ---------- ----- ----- -------------
  4,142,224	689,468 	 6.0   72.9    8,941.5	   7  89.5 bhdvtsvjhgvrh
Module: SQL*Plus
<tr><td scope="row" class='awrc'>SYS$USERS</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>p30dbXDB</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5820"></a>
<h3 class="awr">Service Wait Class Stats</h3>
<ul>
<li class="awr"> Wait Class info for services in the Service Statistics section.  </li>
<li class="awr"> Total Waits and Time Waited displayed for the following wait	  classes:  User I/O, Concurrency, Administrative, Network </li>
<li class="awr"> Time Waited (Wt Time) in seconds</li>
</ul>
<table border="0" class="tdiff" summary="This table displays service wait class statistics. It displays user I/O total wait, user I/O wait time, concurrency total wait, concurrency wait time, etc."><tr><th class="awrbg" scope="col">Service Name</th><th class="awrbg" scope="col">User I/O Total Wts</th><th class="awrbg" scope="col">User I/O Wt Time</th><th class="awrbg" scope="col">Concurcy Total Wts</th><th class="awrbg" scope="col">Concurcy Wt Time</th><th class="awrbg" scope="col">Admin Total Wts</th><th class="awrbg" scope="col">Admin Wt Time</th><th class="awrbg" scope="col">Network Total Wts</th><th class="awrbg" scope="col">Network Wt Time</th></tr>
<tr><td scope="row" class='awrc'>p30db.example.com</td>
<td align="right" class='awrc'>2342856</td><td align="right" class='awrc'>9431</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SYS$BACKGROUND</td>
<td align="right" class='awrnc'>24476</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>513</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>458</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SYS$USERS</td>
<td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#21">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5840"></a>
<h3 class="awr">Top 10 Channel Waits</h3>
<ul>
<li class="awr"> Top 10 Channel Waits by wait time </li>
</ul>
<table border="0" class="tdiff" summary="This table displays top 10 Channel Watis by wait time."><tr><th class="awrbg" scope="col">Channel</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Wait</th></tr>
<tr><td scope="row" class='awrc'>kxfp control signal channel</td>
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

<td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.04ms</td></tr>
    880,092	121,676 	 7.2   15.5    1,653.5	 8.2	86 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
<tr><td scope="row" class='awrnc'>RBR channel</td>
< :B1 )

    306,580	      1    306,580.0	5.4	 568.9	 9.6  85.7 5wf99mx0r39xn
Module: SQL*Plus
<td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4.35ms</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
<tr><td scope="row" class='awrc'>MMON remote action broadcast channel</td>
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    302,862	      1    302,862.0	5.3	 568.8	 9.6  85.5 71v63sn4bfskh
Module: SQL*Plus
<td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>116.02ms</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
</table><p />
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    296,541	      1    296,541.0	5.2	 568.8	 9.7  84.8 amnkmrsjh10nv
<hr align="left" width="20%" /><p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" href="#21">Back to Wait Events Statistics</a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    294,859	      1    294,859.0	5.2	 568.8	 7.1  90.1 5mrhuphq8yfw1
<br /><a class="awr" href="#top">Back to Top</a><p />
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" name="2310"></a>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<h3 class="awr">Top Process Types by Wait Class</h3>
    283,608	      1    283,608.0	5.0	 568.1	 8.9	87 6hgs8vfsdc56c
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
<ul>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<li class="awr"> This table displays top process types ordered by wait class</li>
    282,189	      1    282,189.0	5.0	 568.8	 8.9  86.9 7m9rphfj2sxqy
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '34'; v_update_pct PLS_INTEGER :=
</ul>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    281,575	      1    281,575.0	5.0	 568.8	 8.8  87.6 g679149chxm60
<table border="0" class="tdiff" summary="Top Process Types by Wait Class. . This table displays top process types ordered by wait class"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">Wait Class Type</th><th class="awrbg" scope="col">Wait Time (sec)</th></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrc'>User I/O</td><td align="right" class='awrc'>9,446.98</td></tr>
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    278,038	      1    278,038.0	4.9	 568.4	 8.8	87 93dyj9jyyg3mj
Module: SQL*Plus
<tr><td scope="row" class='awrnc'>&#160;</td><td scope="row" class='awrnc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrnc'>Cluster</td><td align="right" class='awrnc'>731.09</td></tr>

SQL ordered by Gets			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
<tr><td scope="row" class='awrc'>LG</td><td scope="row" class='awrc'>Log Writer Slave</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>559.88</td></tr>
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    5,685,015
-> Captured SQL account for   88.5% of Total
<tr><td scope="row" class='awrnc'>LGWR</td><td scope="row" class='awrnc'>Redo etc.</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>136.61</td></tr>

     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
----------- ----------- ------------ ------ ---------- ----- ----- -------------
<tr><td scope="row" class='awrc'>DBW0</td><td scope="row" class='awrc'>db writer process 0</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>64.68</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td scope="row" class='awrnc'>LG</td><td scope="row" class='awrnc'>Log Writer Slave</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>19.63</td></tr>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    269,518	      1    269,518.0	4.7	 568.0	 8.4  88.1 bz8m3my689x30
<tr><td scope="row" class='awrc'>CKPT</td><td scope="row" class='awrc'>checkpoint</td><td scope="row" class='awrc'>System I/O</td><td align="right" class='awrc'>3.26</td></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<tr><td scope="row" class='awrnc'>&#160;</td><td scope="row" class='awrnc'>Others (foregrounds + unclassified backgrounds)</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.95</td></tr>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    266,656	      1    266,656.0	4.7	 568.7	 8.5  87.3 07wu9h58t4tgt
Module: SQL*Plus
<tr><td scope="row" class='awrc'>M</td><td scope="row" class='awrc'>MMON slave class 1</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.95</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<tr><td scope="row" class='awrnc'>DBW0</td><td scope="row" class='awrnc'>db writer process 0</td><td scope="row" class='awrnc'>User I/O</td><td align="right" class='awrnc'>0.87</td></tr>

    265,471	      1    265,471.0	4.7	 568.8	 8.4  87.7 10yxz9a3s65pn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
<tr><td scope="row" class='awrc'>RMS0</td><td scope="row" class='awrc'>rac management server</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.77</td></tr>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<tr><td scope="row" class='awrnc'>LMON</td><td scope="row" class='awrnc'>global enqueue service monitor</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.73</td></tr>
    264,765	      1    264,765.0	4.7	 568.9	 8.4  87.7 4tjq41wp5wggf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td scope="row" class='awrc'>O</td><td scope="row" class='awrc'>ASM Connection Pool</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.69</td></tr>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    259,630	      1    259,630.0	4.6	 568.7	 8.1  88.6 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
<tr><td scope="row" class='awrnc'>RMS0</td><td scope="row" class='awrnc'>rac management server</td><td scope="row" class='awrnc'>System I/O</td><td align="right" class='awrnc'>0.66</td></tr>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    258,660	      1    258,660.0	4.5	 568.6	 8.8  86.2 gdjc35y9zsuzm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td scope="row" class='awrc'>MMNL</td><td scope="row" class='awrc'>Manageability Monitor Process 2</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.60</td></tr>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    254,661	      1    254,661.0	4.5	 568.8	 8.3  87.6 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
<tr><td scope="row" class='awrnc'>LM</td><td scope="row" class='awrnc'>global cache service process</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.55</td></tr>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    250,447	      1    250,447.0	4.4	 568.9	 7.9  88.5 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<tr><td scope="row" class='awrc'>W</td><td scope="row" class='awrc'>space management slave pool</td><td scope="row" class='awrc'>Cluster</td><td align="right" class='awrc'>0.52</td></tr>
SQL ordered by Gets			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Resources reported for PL/SQL code includes the resources used by all SQL
   statements called by the code.
-> %Total - Buffer Gets   as a percentage of Total Buffer Gets
<tr><td scope="row" class='awrnc'>SMON</td><td scope="row" class='awrnc'>System Monitor Process</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.48</td></tr>
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Buffer Gets:	    5,685,015
-> Captured SQL account for   88.5% of Total
<tr><td scope="row" class='awrc'>P</td><td scope="row" class='awrc'>Parallel query slave</td><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.36</td></tr>

     Buffer		    Gets	      Elapsed
      Gets   Executions   per Exec   %Total   Time (s)	%CPU   %IO    SQL Id
<tr><td scope="row" class='awrnc'>QM*</td><td scope="row" class='awrnc'>QMON MS</td><td scope="row" class='awrnc'>Other</td><td align="right" class='awrnc'>0.20</td></tr>
----------- ----------- ------------ ------ ---------- ----- ----- -------------

    249,075	      1    249,075.0	4.4	 568.9	 7.9  88.6 6x8682kb2y8vd
Module: SQL*Plus
</table><p />
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<hr align="left" width="20%" /><p />
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    248,280	      1    248,280.0	4.4	 568.6	   8  88.1 26cgg6g31fq8p
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
<a class="awr" href="#21">Back to Wait Events Statistics</a>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    246,793	      1    246,793.0	4.3	 568.6	   8	88 bzs4fu7kk84h3
Module: SQL*Plus
<br /><a class="awr" href="#top">Back to Top</a><p />
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  ------------------------------------------------------


<a class="awr" name="2320"></a>
SQL ordered by Reads			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
<h3 class="awr">Top Process Types by CPU Used</h3>
-> Total Disk Reads:	   2,350,386
-> Captured SQL account for   99.6% of Total

   Physical		 Reads		    Elapsed
<ul>
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------
  1,989,075	689,468        2.9   84.6    8,941.5	7.0   89.5 bhdvtsvjhgvrh
<li class="awr"> This table displays top process types ordered by CPU time</li>
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

    350,978	121,676        2.9   14.9    1,653.5	8.2   86.0 35dumc2tpr9dv
</ul>
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

    138,731	      1  138,731.0    5.9      568.9	9.6   85.7 5wf99mx0r39xn
<table border="0" class="tdiff" summary="Top Process Types by CPU Used. . This table displays top process types ordered by CPU time"><tr><th class="awrbg" scope="col">Process Type</th><th class="awrbg" scope="col">Description</th><th class="awrbg" scope="col">CPU Time (sec)</th></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
<tr><td scope="row" class='awrc'>&#160;</td><td scope="row" class='awrc'>Others (foregrounds + unclassified backgrounds)</td><td align="right" class='awrc'>924.07</td></tr>
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    137,221	      1  137,221.0    5.8      568.8	9.6   85.5 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
<tr><td scope="row" class='awrnc'>LM</td><td scope="row" class='awrnc'>global cache service process</td><td align="right" class='awrnc'>386.95</td></tr>
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

<tr><td scope="row" class='awrc'>LG</td><td scope="row" class='awrc'>Log Writer Slave</td><td align="right" class='awrc'>46.12</td></tr>
    134,631	      1  134,631.0    5.7      568.8	9.7   84.8 amnkmrsjh10nv
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td scope="row" class='awrnc'>VKTM</td><td scope="row" class='awrnc'>Virtual Keeper of TiMe process</td><td align="right" class='awrnc'>33.92</td></tr>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    134,106	      1  134,106.0    5.7      568.8	7.1   90.1 5mrhuphq8yfw1
Module: SQL*Plus
<tr><td scope="row" class='awrc'>DBW0</td><td scope="row" class='awrc'>db writer process 0</td><td align="right" class='awrc'>22.82</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<tr><td scope="row" class='awrnc'>LGWR</td><td scope="row" class='awrnc'>Redo etc.</td><td align="right" class='awrnc'>22.10</td></tr>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    128,992	      1  128,992.0    5.5      568.1	8.9   87.0 6hgs8vfsdc56c
<tr><td scope="row" class='awrc'>RS*</td><td scope="row" class='awrc'>GCS RM Slave</td><td align="right" class='awrc'>7.00</td></tr>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<tr><td scope="row" class='awrnc'>M</td><td scope="row" class='awrnc'>MMON slave class 1</td><td align="right" class='awrnc'>4.53</td></tr>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    128,317	      1  128,317.0    5.5      568.8	8.9   86.9 7m9rphfj2sxqy
Module: SQL*Plus
<tr><td scope="row" class='awrc'>GCR</td><td scope="row" class='awrc'>GCR Slaves (LMHB)</td><td align="right" class='awrc'>4.14</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '34'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<tr><td scope="row" class='awrnc'>IPC0</td><td scope="row" class='awrnc'>IPC Service 0</td><td align="right" class='awrnc'>3.00</td></tr>

    128,128	      1  128,128.0    5.5      568.8	8.8   87.6 g679149chxm60
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
<tr><td scope="row" class='awrc'>DIA0</td><td scope="row" class='awrc'>diagnosibility process 0</td><td align="right" class='awrc'>2.37</td></tr>
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

<tr><td scope="row" class='awrnc'>LMHB</td><td scope="row" class='awrnc'>lm heartbeat monitor</td><td align="right" class='awrnc'>1.44</td></tr>
    126,467	      1  126,467.0    5.4      568.4	8.8   87.0 93dyj9jyyg3mj
Module: SQL*Plus

SQL ordered by Reads			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> %Total - Physical Reads as a percentage of Total Disk Reads
<tr><td scope="row" class='awrc'>P</td><td scope="row" class='awrc'>Parallel query slave</td><td align="right" class='awrc'>1.44</td></tr>
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   2,350,386
-> Captured SQL account for   99.6% of Total
<tr><td scope="row" class='awrnc'>LMON</td><td scope="row" class='awrnc'>global enqueue service monitor</td><td align="right" class='awrnc'>1.36</td></tr>

   Physical		 Reads		    Elapsed
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------
<tr><td scope="row" class='awrc'>LMD0</td><td scope="row" class='awrc'>global enqueue service daemon 0</td><td align="right" class='awrc'>1.29</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<tr><td scope="row" class='awrnc'>RMS0</td><td scope="row" class='awrnc'>rac management server</td><td align="right" class='awrnc'>1.26</td></tr>

    122,705	      1  122,705.0    5.2      568.0	8.4   88.1 bz8m3my689x30
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
<tr><td scope="row" class='awrc'>LMD1</td><td scope="row" class='awrc'>global enqueue service daemon 1</td><td align="right" class='awrc'>1.08</td></tr>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<tr><td scope="row" class='awrnc'>O</td><td scope="row" class='awrnc'>ASM Connection Pool</td><td align="right" class='awrnc'>1.06</td></tr>
    121,177	      1  121,177.0    5.2      568.7	8.5   87.3 07wu9h58t4tgt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td scope="row" class='awrc'>IMR</td><td scope="row" class='awrc'>CGS IMR Slave</td><td align="right" class='awrc'>1.01</td></tr>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    121,094	      1  121,094.0    5.2      568.8	8.4   87.7 10yxz9a3s65pn
Module: SQL*Plus
<tr><td scope="row" class='awrnc'>SCM</td><td scope="row" class='awrnc'>DLM Statistics Collection and Management Slave</td><td align="right" class='awrnc'>0.93</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
</table><p />
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    120,658	      1  120,658.0    5.1      568.9	8.4   87.7 4tjq41wp5wggf
Module: SQL*Plus
<hr align="left" width="20%" /><p />
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<a class="awr" href="#21">Back to Wait Events Statistics</a>

    118,362	      1  118,362.0    5.0      568.7	8.1   88.6 bhs63jbrb30ru
Module: SQL*Plus
<br /><a class="awr" href="#top">Back to Top</a><p />
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<p />
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    117,715	      1  117,715.0    5.0      568.6	8.8   86.2 gdjc35y9zsuzm
Module: SQL*Plus
<a class="awr" name="22"></a>
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<h2 class="awr">

    116,260	      1  116,260.0    4.9      568.8	8.3   87.6 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
SQL Statistics
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
</h2>

    114,102	      1  114,102.0    4.9      568.9	7.9   88.5 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
<ul>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<li class="awr"><a class="awr" href="#400">SQL ordered by Elapsed Time</a></li>

SQL ordered by Reads			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> %Total - Physical Reads as a percentage of Total Disk Reads
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
<li class="awr"><a class="awr" href="#500">SQL ordered by CPU Time</a></li>
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Disk Reads:	   2,350,386
-> Captured SQL account for   99.6% of Total

   Physical		 Reads		    Elapsed
<li class="awr"><a class="awr" href="#550">SQL ordered by User I/O Wait Time</a></li>
      Reads  Executions per Exec   %Total   Time (s)   %CPU    %IO    SQL Id
----------- ----------- ---------- ------ ---------- ------ ------ -------------

    113,318	      1  113,318.0    4.8      568.9	7.9   88.6 6x8682kb2y8vd
<li class="awr"><a class="awr" href="#600">SQL ordered by Gets</a></li>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<li class="awr"><a class="awr" href="#700">SQL ordered by Reads</a></li>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    113,149	      1  113,149.0    4.8      568.6	8.0   88.1 26cgg6g31fq8p
Module: SQL*Plus
<li class="awr"><a class="awr" href="#740">SQL ordered by Physical Reads (UnOptimized)</a></li>
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<li class="awr"><a class="awr" href="#800">SQL ordered by Executions</a></li>

    112,280	      1  112,280.0    4.8      568.6	8.0   88.0 bzs4fu7kk84h3
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
<li class="awr"><a class="awr" href="#900">SQL ordered by Parse Calls</a></li>
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<li class="awr"><a class="awr" href="#1000">SQL ordered by Sharable Memory</a></li>
			  ------------------------------------------------------


SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 171-1
-> UnOptimized Read Reqs = Physical Read Reqs -
<li class="awr"><a class="awr" href="#1100">SQL ordered by Version Count</a></li>
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
<li class="awr"><a class="awr" href="#1150">SQL ordered by Cluster Wait Time</a></li>
-> Total Physical Read Requests:       2,350,386
-> Captured SQL account for    4.8% of Total
-> Total UnOptimized Read Requests:	  2,350,386
-> Captured SQL account for    4.8% of Total
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
</ul>
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
    138,731	138,731 	 1    138,731.0    0.0	  5.9 5wf99mx0r39xn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<a class="awr" href="#top">Back to Top</a><p />
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

<a class="awr" name="400"></a>
    137,221	137,221 	 1    137,221.0    0.0	  5.8 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<h3 class="awr">SQL ordered by Elapsed Time</h3>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    134,631	134,631 	 1    134,631.0    0.0	  5.7 amnkmrsjh10nv
<ul>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    134,106	134,106 	 1    134,106.0    0.0	  5.7 5mrhuphq8yfw1
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    128,992	128,992 	 1    128,992.0    0.0	  5.5 6hgs8vfsdc56c
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    128,317	128,317 	 1    128,317.0    0.0	  5.5 7m9rphfj2sxqy
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '34'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    128,128	128,128 	 1    128,128.0    0.0	  5.5 g679149chxm60
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

    126,467	126,467 	 1    126,467.0    0.0	  5.4 93dyj9jyyg3mj
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    122,705	122,705 	 1    122,705.0    0.0	  5.2 bz8m3my689x30
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=

SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 171-1
-> UnOptimized Read Reqs = Physical Read Reqs -
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       2,350,386
-> Captured SQL account for    4.8% of Total
-> Total UnOptimized Read Requests:	  2,350,386
-> Captured SQL account for    4.8% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    121,177	121,177 	 1    121,177.0    0.0	  5.2 07wu9h58t4tgt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    121,094	121,094 	 1    121,094.0    0.0	  5.2 10yxz9a3s65pn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    120,658	120,658 	 1    120,658.0    0.0	  5.1 4tjq41wp5wggf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    118,362	118,362 	 1    118,362.0    0.0	  5.0 bhs63jbrb30ru
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    117,715	117,715 	 1    117,715.0    0.0	  5.0 gdjc35y9zsuzm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    116,260	116,260 	 1    116,260.0    0.0	  4.9 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    114,102	114,102 	 1    114,102.0    0.0	  4.9 72r567f4w1r2z
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    113,318	113,318 	 1    113,318.0    0.0	  4.8 6x8682kb2y8vd
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    113,149	113,149 	 1    113,149.0    0.0	  4.8 26cgg6g31fq8p

SQL ordered by Physical Reads (UnOptimized)DB/Inst: P30DB/p30db1  Snaps: 171-1
-> UnOptimized Read Reqs = Physical Read Reqs -
     (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile)
-> %Opt   - Optimized Reads as percentage of SQL Read Requests
-> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs
-> Total Physical Read Requests:       2,350,386
-> Captured SQL account for    4.8% of Total
-> Total UnOptimized Read Requests:	  2,350,386
-> Captured SQL account for    4.8% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

UnOptimized   Physical		    UnOptimized
  Read Reqs   Read Reqs Executions Reqs per Exe   %Opt %Total	 SQL Id
----------- ----------- ---------- ------------ ------ ------ -------------
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

    112,280	112,280 	 1    112,280.0    0.0	  4.8 bzs4fu7kk84h3
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

     95,821	 95,821    689,468	    0.1    0.0	  4.1 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

			  ------------------------------------------------------


SQL ordered by Executions		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Total Executions:	     815,374
-> Captured SQL account for   99.6% of Total

					      Elapsed
 Executions   Rows Processed  Rows per Exec   Time (s)	%CPU   %IO    SQL Id
------------ --------------- -------------- ---------- ----- ----- -------------
     689,468	     689,482		1.0    8,941.5	   7  89.5 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

     121,676	     365,028		3.0    1,653.5	 8.2	86 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

	 437		 432		1.0	   0.1	81.6	 0 24djtk7r8fz33
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
2 AND tsn = :3 AND objid = :4

	  92		  92		1.0	   0.4	 7.1   5.1 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

	  59		  59		1.0	   0.0	94.5	 0 fn5s5p6hr6702
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

	  43		  43		1.0	   0.0	65.6	 0 f80h0xb1qvbsk
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

	  29		  29		1.0	   0.0	84.1	13 6n2qqv1brfhpp
select ind.type#, ind.property, base_obj.obj#, base_owner.name, base_obj.name
 from sys.ind$ ind, sys.user$ base_owner, sys.obj$ base_obj where ind.obj#
 = :oid and ind.dataobj# = :doid and ind.bo# = base_obj
.obj# and base_obj.owner# = base_owner.user#

	  20		  20		1.0	   0.0	80.3	 0 gjaap3w3qbf8c
select count(*) from ilmobj$ where rownum = 1

	  19		  19		1.0	   0.0	46.6	 0 9babjv8yq8ru3
Module: SQL*Plus
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
<li class="awr"> % Total DB Time is the Elapsed Time of the SQL statement divided     into the Total Database Time multiplied by 100 </li>
<li class="awr"> %Total - Elapsed Time	as a percentage of Total DB time </li>
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
<li class="awr">Captured SQL account for   97.9% of Total DB Time (s):		10,821</li>
<li class="awr">Captured PL/SQL account for   99.9% of Total DB Time (s):	   10,821</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top SQL by elapsed time"><tr><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Elapsed Time per Exec (s) </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">	SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'>8,941.51</td><td align="right" class='awrc'>689,468</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>82.63</td><td align="right" class='awrc'>6.96</td><td align="right" class='awrc'>89.48</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>1,653.51</td><td align="right" class='awrnc'>121,676</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>15.28</td><td align="right" class='awrnc'>8.20</td><td align="right" class='awrnc'>86.00</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>568.91</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.91</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>7.95</td><td align="right" class='awrc'>88.48</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrc'>
SQL*Plus
BEGIN DBMS_OUTPUT.GET_LINES(:LINES, :NUMLINES); END;
</td>

	  18		  18		1.0	   0.0	80.5	 0 fs4p95w7yg25b
select pob.parttype from sys.tabpart$ tp, sys.partobj$ pob where tp.bo# = pob.o
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
bj# and tp.obj# = :oid

			  ------------------------------------------------------


<tr><td align="right" class='awrnc'>568.91</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.91</td><td align="right" class='awrnc'>5.26</td><td align="right" class='awrnc'>7.92</td><td align="right" class='awrnc'>88.62</td><td scope="row" class='awrnc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
SQL ordered by Parse Calls		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Parse Calls:		1,343
-> Captured SQL account for   63.4% of Total

			    % Total
<td class='awrnc'>
 Parse Calls  Executions     Parses    SQL Id
------------ ------------ --------- -------------
	 437	      437     32.54 24djtk7r8fz33
SQL*Plus
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
2 AND tsn = :3 AND objid = :4

</td>
	  92	       92      6.85 f7xnvp44nukp7
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>

	  59	       59      4.39 fn5s5p6hr6702
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

<tr><td align="right" class='awrc'>568.85</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.85</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>9.59</td><td align="right" class='awrc'>85.74</td><td scope="row" class='awrc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
	  43	       43      3.20 f80h0xb1qvbsk
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

	  29	       29      2.16 6n2qqv1brfhpp
<td class='awrc'>
select ind.type#, ind.property, base_obj.obj#, base_owner.name, base_obj.name
 from sys.ind$ ind, sys.user$ base_owner, sys.obj$ base_obj where ind.obj#
 = :oid and ind.dataobj# = :doid and ind.bo# = base_obj
SQL*Plus
.obj# and base_obj.owner# = base_owner.user#

	  20	       20      1.49 gjaap3w3qbf8c
</td>
select count(*) from ilmobj$ where rownum = 1

	  19	       19      1.41 9babjv8yq8ru3
Module: SQL*Plus
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
BEGIN DBMS_OUTPUT.GET_LINES(:LINES, :NUMLINES); END;

	  18	       18      1.34 fs4p95w7yg25b
select pob.parttype from sys.tabpart$ tp, sys.partobj$ pob where tp.bo# = pob.o
bj# and tp.obj# = :oid

<tr><td align="right" class='awrnc'>568.85</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.85</td><td align="right" class='awrnc'>5.26</td><td align="right" class='awrnc'>8.39</td><td align="right" class='awrnc'>87.72</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
	  16	       16      1.19 fkc81h2686aqc
select pob.parttype from sys.indpart$ ip, sys.partobj$ pob where ip.bo# = pob.o
bj# and ip.obj# = :oid

<td class='awrnc'>
	  10	       10      0.74 6wvzvgvg6qsyb
INSERT INTO wri$_adv_findings (id, task_id, type, parent, obj_id, impact_msg_id,
 impact_val, msg_id, more_info_id, name_msg_code, flags, exec_name) VALUES (:1,
SQL*Plus
:2, :3, :4, :5, :6, :7,:8, :9, :10, :11, :12)

			  ------------------------------------------------------

</td>

SQL ordered by Sharable Memory		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Only Statements with Sharable Memory greater than 1048576 are displayed

<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
Sharable Mem (b)  Executions   % Total	  SQL Id
---------------- ------------ -------- -------------
      13,231,793	    0	  1.19 9yv5dwv8k0awg
WITH MONITOR_DATA AS (SELECT INST_ID, KEY, NVL2(PX_QCSID, NULL, STATUS) STATUS,
FIRST_REFRESH_TIME, LAST_REFRESH_TIME, REFRESH_COUNT, PROCESS_NAME, SID, SQL_ID,
<tr><td align="right" class='awrc'>568.85</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.85</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>9.65</td><td align="right" class='awrc'>85.49</td><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
 SQL_EXEC_START, SQL_EXEC_ID, DBOP_NAME, DBOP_EXEC_ID, SQL_PLAN_HASH_VALUE, SQL_
FULL_PLAN_HASH_VALUE, SESSION_SERIAL#, SQL_TEXT, PX_SERVER#, PX_SERVER_GROUP, PX

       1,268,440      121,676	  0.11 35dumc2tpr9dv
<td class='awrc'>
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

SQL*Plus
       1,114,247      689,468	  0.10 bhdvtsvjhgvrh
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )
</td>

			  ------------------------------------------------------


<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
SQL ordered by Version Count		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Only Statements with Version Count greater than 20 are displayed

 Version
  Count   Executions	 SQL Id
<tr><td align="right" class='awrnc'>568.84</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.84</td><td align="right" class='awrnc'>5.26</td><td align="right" class='awrnc'>8.87</td><td align="right" class='awrnc'>86.92</td><td scope="row" class='awrnc'><a class="awr" href="#7m9rphfj2sxqy">7m9rphfj2sxqy</a></td>
-------- ------------ -------------
      38      121,676 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
<td class='awrnc'>
< :B1 )

      38      689,468 bhdvtsvjhgvrh
Module: SQL*Plus
SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

			  ------------------------------------------------------

</td>

SQL ordered by Cluster Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
-> Only SQL with Cluster Wait Time > .005 seconds is reported
<tr><td align="right" class='awrc'>568.84</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.84</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>7.13</td><td align="right" class='awrc'>90.15</td><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
-> Total Cluster Wait Time (s): 	    733
-> Captured SQL account for   99.4% of Total

       Cluster			      Elapsed
<td class='awrc'>
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
	 591.6	    689,468   80.7    8,941.5	 6.6	7.0   89.5 bhdvtsvjhgvrh
SQL*Plus
Module: SQL*Plus
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

</td>
	 135.8	    121,676   18.5    1,653.5	 8.2	8.2   86.0 35dumc2tpr9dv
Module: SQL*Plus
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>

	  48.2		  1    6.6	568.8	 8.5	9.7   84.8 amnkmrsjh10nv
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td align="right" class='awrnc'>568.83</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.83</td><td align="right" class='awrnc'>5.26</td><td align="right" class='awrnc'>8.38</td><td align="right" class='awrnc'>87.73</td><td scope="row" class='awrnc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<td class='awrnc'>
	  45.0		  1    6.1	568.6	 7.9	8.8   86.2 gdjc35y9zsuzm
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
SQL*Plus
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

</td>
	  44.1		  1    6.0	568.8	 7.8	9.6   85.5 71v63sn4bfskh
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	  43.4		  1    5.9	568.9	 7.6	9.6   85.7 5wf99mx0r39xn
Module: SQL*Plus
<tr><td align="right" class='awrc'>568.80</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.80</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>8.75</td><td align="right" class='awrc'>87.62</td><td scope="row" class='awrc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td>
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<td class='awrc'>
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	  39.5		  1    5.4	568.8	 6.9	8.9   86.9 7m9rphfj2sxqy
SQL*Plus
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '34'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
</td>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  39.4		  1    5.4	568.1	 6.9	8.9   87.0 6hgs8vfsdc56c
Module: SQL*Plus
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  39.4		  1    5.4	568.7	 6.9	8.5   87.3 07wu9h58t4tgt
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '22'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td align="right" class='awrnc'>568.79</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.79</td><td align="right" class='awrnc'>5.26</td><td align="right" class='awrnc'>9.72</td><td align="right" class='awrnc'>84.80</td><td scope="row" class='awrnc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  39.3		  1    5.4	568.4	 6.9	8.8   87.0 93dyj9jyyg3mj
Module: SQL*Plus
<td class='awrnc'>

SQL ordered by Cluster Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
SQL*Plus
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
</td>
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    733
-> Captured SQL account for   99.4% of Total

<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
       Cluster			      Elapsed
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------
DECLARE v_default_schema_number PLS_INTEGER := '10'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td align="right" class='awrc'>568.78</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.78</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>8.32</td><td align="right" class='awrc'>87.60</td><td scope="row" class='awrc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<td class='awrc'>
	  39.0		  1    5.3	568.8	 6.9	8.3   87.6 f5pbdmj9v6wga
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '38'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
SQL*Plus
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

</td>
	  37.6		  1    5.1	568.6	 6.6	8.0   88.0 bzs4fu7kk84h3
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '21'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  37.4		  1    5.1	568.8	 6.6	8.4   87.7 10yxz9a3s65pn
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '35'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

<tr><td align="right" class='awrnc'>568.74</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.74</td><td align="right" class='awrnc'>5.26</td><td align="right" class='awrnc'>8.49</td><td align="right" class='awrnc'>87.32</td><td scope="row" class='awrnc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
	  37.3		  1    5.1	568.9	 6.6	8.4   87.7 4tjq41wp5wggf
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '33'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  36.9		  1    5.0	568.8	 6.5	8.8   87.6 g679149chxm60
Module: SQL*Plus
<td class='awrnc'>
DECLARE v_default_schema_number PLS_INTEGER := '6'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
SQL*Plus
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

	  36.9		  1    5.0	568.6	 6.5	8.0   88.1 26cgg6g31fq8p
Module: SQL*Plus
</td>
DECLARE v_default_schema_number PLS_INTEGER := '32'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>

	  35.5		  1    4.8	568.0	 6.3	8.4   88.1 bz8m3my689x30
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '23'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
<tr><td align="right" class='awrc'>568.72</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.72</td><td align="right" class='awrc'>5.26</td><td align="right" class='awrc'>8.07</td><td align="right" class='awrc'>88.59</td><td scope="row" class='awrc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  35.0		  1    4.8	568.9	 6.2	7.9   88.5 72r567f4w1r2z
<td class='awrc'>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
SQL*Plus
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

SQL ordered by Cluster Wait Time	 DB/Inst: P30DB/p30db1	Snaps: 171-172
</td>
-> %Total - Cluster Time  as a percentage of Total Cluster Wait Time
-> %Clu   - Cluster Time  as a percentage of Elapsed Time
-> %CPU   - CPU Time	  as a percentage of Elapsed Time
-> %IO	  - User I/O Time as a percentage of Elapsed Time
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
-> Only SQL with Cluster Wait Time > .005 seconds is reported
-> Total Cluster Wait Time (s): 	    733
-> Captured SQL account for   99.4% of Total

       Cluster			      Elapsed
<tr><td align="right" class='awrnc'>568.61</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.61</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>8.79</td><td align="right" class='awrnc'>86.15</td><td scope="row" class='awrnc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
 Wait Time (s)	 Executions %Total    Time(s)	%Clu   %CPU    %IO    SQL Id
-------------- ------------ ------ ---------- ------ ------ ------ -------------

	  34.7		  1    4.7	568.9	 6.1	7.9   88.6 6x8682kb2y8vd
<td class='awrnc'>
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
SQL*Plus
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  33.6		  1    4.6	568.7	 5.9	8.1   88.6 bhs63jbrb30ru
Module: SQL*Plus
</td>
DECLARE v_default_schema_number PLS_INTEGER := '13'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	  27.7		  1    3.8	568.8	 4.9	7.1   90.1 5mrhuphq8yfw1
Module: SQL*Plus
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
<tr><td align="right" class='awrc'>568.60</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.60</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>8.04</td><td align="right" class='awrc'>88.12</td><td scope="row" class='awrc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

	    .5		  1    0.1	  0.5	96.7	1.4    2.1 9x2prazfz86dz
 select s.file#, s.block#, s.ts#, t.obj#, s.hwmincr, t.obj# from tab$ t, seg$ s
<td class='awrc'>
where bitand(s.spare1, 4503599627370496) = 4503599627370496 and bitand(s.spare1,
 65536) <> 65536 and s.file# = t.file# and s.ts# = t.ts# and s.block# = t.block
# UNION select s.file#, s.block#, s.ts#, t.obj#, s.hwmincr, tab.obj# from tabpa

SQL*Plus
	    .3		  1    0.0	  0.4	84.6   15.6    3.0 bjck50zs3nc95
insert into WRH$_SYSSTAT (dbid, per_pdb, con_dbid, snap_id, instance_number, s
tat_id, value) select /*+ use_hash(v$sysstat) */ :dbid, 0 per_pdb, :srcdbid
</td>
con_dbid, :snap_id, :instance_number, stat_id, value FROM v$sysstat syssta
t WHERE (1 = 1)

	    .3		 92    0.0	  0.4	90.4	7.1    5.1 f7xnvp44nukp7
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

	    .2		  1    0.0	  1.3	19.2   66.1    8.4 491wcfyfd6wc1
Module: SQL*Plus
<tr><td align="right" class='awrnc'>568.57</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.57</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>8.02</td><td align="right" class='awrnc'>88.01</td><td scope="row" class='awrnc'><a class="awr" href="#bzs4fu7kk84h3">bzs4fu7kk84h3</a></td>
BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;

	    .1		  1    0.0	  0.6	17.1   78.1    2.5 6ajkhukk78nsr
begin prvt_hdm.auto_execute( :dbid, :inst_num , :end_snap_id ); end;

<td class='awrnc'>
	    .1		  1    0.0	  0.1	61.6   26.0   20.2 9gumgzs3rf5cw
insert into WRH$_EVENT_HISTOGRAM (dbid, per_pdb, con_dbid, snap_id, instance_n
umber, event_id, wait_time_milli, wait_count ) select :dbid, 0 per_pdb, :s
SQL*Plus
rcdbid con_dbid, :snap_id, :instance_number, d.ksledhash, s.kslsesmaxdu
r/1024, s.kslsesval FROM x$kslseshist_micro s, x$ksled d WHERE (

	    .0		  2    0.0	  0.1	 7.7   35.4   38.2 8fgdzmkchnn1a
</td>
INSERT /*+ APPEND LEADING(@"SEL$F5BB74E1" "H"@"SEL$2" "A"@"SEL$1") USE_NL(@"SE
L$F5BB74E1" "A"@"SEL$1") */ INTO WRH$_ACTIVE_SESSION_HISTORY ( snap_id
, dbid, instance_number , sample_id, sample_time,sample_time_utc, usecs_per_row
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
, session_id, session_serial#, session_type , flags , user_id , sql_id, sql_chil

			  ------------------------------------------------------


Key Instance Activity Stats		 DB/Inst: P30DB/p30db1	Snaps: 171-172
<tr><td align="right" class='awrc'>568.38</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.38</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>8.78</td><td align="right" class='awrc'>87.03</td><td scope="row" class='awrc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
<td class='awrc'>
db block changes			  1,001,013	   1,656.1	     8.2
execute count				    815,374	   1,349.0	     6.7
gc cr block receive time			339	       0.6	     0.0
gc cr blocks received			      2,788	       4.6	     0.0
SQL*Plus
gc current block receive time			862	       1.4	     0.0
gc current blocks received		     11,163	      18.5	     0.1
logons cumulative				 14	       0.0	     0.0
opened cursors cumulative		    938,527	   1,552.8	     7.7
</td>
parse count (total)			      1,343	       2.2	     0.0
parse time elapsed				  7	       0.0	     0.0
physical reads				  2,350,386	   3,888.6	    19.2
physical writes 			    337,949	     559.1	     2.8
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
redo size				341,556,220	 565,091.9	 2,794.2
session cursor cache hits		    936,967	   1,550.2	     7.7
session logical reads			  5,685,015	   9,405.6	    46.5
user calls					181	       0.3	     0.0
user commits				    122,239	     202.2	     1.0
workarea executions - optimal			277	       0.5	     0.0
<tr><td align="right" class='awrnc'>568.07</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>568.07</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>8.95</td><td align="right" class='awrnc'>86.97</td><td scope="row" class='awrnc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td>
			  ------------------------------------------------------


Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
<td class='awrnc'>
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
SQL*Plus
ASSM bg: segment fix monitor			  1	       0.0	     0.0
ASSM cbk:blocks examined			544	       0.9	     0.0
ASSM cbk:blocks marked full			126	       0.2	     0.0
ASSM gsp:L1 bitmaps examined			426	       0.7	     0.0
</td>
ASSM gsp:L2 bitmap full 			  2	       0.0	     0.0
ASSM gsp:L2 bitmaps examined			110	       0.2	     0.0
ASSM gsp:Search all				  3	       0.0	     0.0
ASSM gsp:Search hint				  1	       0.0	     0.0
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
ASSM gsp:Search steal				  1	       0.0	     0.0
ASSM gsp:bump HWM				  1	       0.0	     0.0
ASSM gsp:get free block 			418	       0.7	     0.0
ASSM gsp:get free data block			336	       0.6	     0.0
ASSM gsp:get free index block			 82	       0.1	     0.0
ASSM gsp:good hint				312	       0.5	     0.0
<tr><td align="right" class='awrc'>568.03</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>568.03</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>8.39</td><td align="right" class='awrc'>88.11</td><td scope="row" class='awrc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td>
ASSM rsv:fill reserve				  1	       0.0	     0.0
ASSM wasted db state change			  1	       0.0	     0.0
Batched IO (bound) vector count 		 11	       0.0	     0.0
Batched IO block miss count		    660,720	   1,093.1	     5.4
<td class='awrc'>
Batched IO buffer defrag count			  0	       0.0	     0.0
Batched IO double miss count		    660,674	   1,093.1	     5.4
Batched IO same unit count			 28	       0.1	     0.0
SQL*Plus
Batched IO single block count		    660,681	   1,093.1	     5.4
Batched IO vector block count			 10	       0.0	     0.0
Batched IO vector read count			  4	       0.0	     0.0
Block Cleanout Optim referenced 		 15	       0.0	     0.0
</td>
CCursor + sql area evicted			 35	       0.1	     0.0
CPU used by this session		    133,775	     221.3	     1.1
CPU used when call started		     98,592	     163.1	     0.8
CR blocks created				522	       0.9	     0.0
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
Cached Commit SCN referenced		  1,766,229	   2,922.2	    14.5
Client Advertised Receive Window		140	       0.2	     0.0
Client Advertised Send Window			140	       0.2	     0.0
Client Path Maximum Transmission	  1,310,700	   2,168.5	    10.7
</table><p />
Client Send Congestion Window			200	       0.3	     0.0
Client Time (usec) Last Ack Rece		 10	       0.0	     0.0
Client Time (usec) Last Data Rec		 10	       0.0	     0.0
Client Time (usec) Last Data Sen		 56	       0.1	     0.0
<hr align="left" width="20%" /><p />
Client Time (usec) Round Trip Ti	     45,437	      75.2	     0.4
Client Time (usec) Round Trip Ti	     52,787	      87.3	     0.4
Client Total Bytes Acked		    305,068	     504.7	     2.5
<a class="awr" href="#22">Back to SQL Statistics</a>
Client Total Bytes Received		    121,152	     200.4	     1.0
Client Total Number of Retransmi		  0	       0.0	     0.0
Commit SCN cached				  0	       0.0	     0.0
DBWR checkpoint buffers written 	     21,459	      35.5	     0.2
<br /><a class="awr" href="#top">Back to Top</a><p />
DBWR checkpoints				 49	       0.1	     0.0
DBWR fusion writes				 51	       0.1	     0.0
DBWR object drop buffers written		  0	       0.0	     0.0
DBWR thread checkpoint buffers w		  0	       0.0	     0.0
<a class="awr" name="500"></a>
DBWR transaction table writes			294	       0.5	     0.0
DBWR undo block writes			     11,641	      19.3	     0.1
DFO trees parallelized				  2	       0.0	     0.0
Effective IO time				  0	       0.0	     0.0
<h3 class="awr">SQL ordered by CPU Time</h3>
HSC Heap Segment Block Changes		    367,036	     607.3	     3.0
Heap Segment Array Inserts			160	       0.3	     0.0
Heap Segment Array Updates			 14	       0.0	     0.0
Heatmap Blklevel Flush Task Coun		  0	       0.0	     0.0
<ul>
KTFB alloc req					  1	       0.0	     0.0
KTFB alloc space (block)		  1,048,576	   1,734.8	     8.6
KTFB alloc time (ms)				231	       0.4	     0.0
KTFB apply req					 13	       0.0	     0.0

<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
<li class="awr"> %Total - CPU Time	as a percentage of Total DB CPU </li>
KTFB apply time (ms)				861	       1.4	     0.0
KTFB free req					 12	       0.0	     0.0
KTFB free space (block) 		      1,296	       2.1	     0.0
KTFB free time (ms)				 77	       0.1	     0.0
LOB table id lookup cache misses		  0	       0.0	     0.0
PX local messages recv'd			  4	       0.0	     0.0
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
PX local messages sent				  4	       0.0	     0.0
PX remote messages recv'd			 78	       0.1	     0.0
PX remote messages sent 			 18	       0.0	     0.0
Parallel operations not downgrad		  2	       0.0	     0.0
Requests to/from client 			 68	       0.1	     0.0
SMON posted for undo segment shr		 10	       0.0	     0.0
SQL*Net roundtrips to/from clien		 49	       0.1	     0.0
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
TBS Extension: tasks created			  0	       0.0	     0.0
TBS Extension: tasks executed			  0	       0.0	     0.0
active txn count during cleanout		211	       0.4	     0.0
background checkpoints completed		  0	       0.0	     0.0
background checkpoints started			  0	       0.0	     0.0
background timeouts			      5,373	       8.9	     0.0
blocks cleaned out using minact 	    192,496	     318.5	     1.6
branch node splits				  1	       0.0	     0.0
buffer is not pinned count		  4,905,002	   8,115.1	    40.1
<li class="awr">Captured SQL account for   81.9% of Total CPU Time (s): 	    926</li>
buffer is pinned count			  1,755,904	   2,905.1	    14.4
bytes received via SQL*Net from 	     22,135	      36.6	     0.2
bytes sent via SQL*Net to client	     14,532	      24.0	     0.1
calls to get snapshot scn: kcmgs	    938,470	   1,552.7	     7.7
<li class="awr">Captured PL/SQL account for   99.8% of Total CPU Time (s):	       926</li>
calls to kcmgas 			    227,353	     376.2	     1.9
calls to kcmgcs 			      2,683	       4.4	     0.0
cell physical IO interconnect by     26,336,035,328   43,571,976.3     215,447.1
change write time			      1,705	       2.8	     0.0
</ul>
cleanout - number of ktugct call	      1,369	       2.3	     0.0
cleanouts and rollbacks - consis		  6	       0.0	     0.0
cleanouts only - consistent read		 24	       0.0	     0.0
cluster key scan block gets			 82	       0.1	     0.0
cluster key scans				 78	       0.1	     0.0
commit batch/immediate performed		  0	       0.0	     0.0
commit batch/immediate requested		  0	       0.0	     0.0
<table border="0" class="tdiff" summary="This table displays top SQL by CPU time"><tr><th class="awrbg" scope="col">CPU    Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">CPU per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
commit cleanout failures: block 		  9	       0.0	     0.0
commit cleanout failures: callba		  9	       0.0	     0.0
commit cleanout failures: cannot		  0	       0.0	     0.0
commit cleanouts			    367,233	     607.6	     3.0
commit cleanouts successfully co	    367,215	     607.5	     3.0
commit immediate performed			  0	       0.0	     0.0
<tr><td align="right" class='awrc'>621.94</td><td align="right" class='awrc'>689,468</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>67.20</td><td align="right" class='awrc'>8,941.51</td><td align="right" class='awrc'>6.96</td><td align="right" class='awrc'>89.48</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
commit immediate requested			  0	       0.0	     0.0
commit txn count during cleanout		120	       0.2	     0.0
consistent changes			    486,460	     804.8	     4.0
consistent gets 			  5,031,294	   8,324.1	    41.2
<td class='awrc'>
consistent gets examination		  2,117,717	   3,503.7	    17.3
consistent gets examination (fas	  2,117,560	   3,503.4	    17.3
consistent gets from cache		  5,031,294	   8,324.1	    41.2
consistent gets pin			  2,913,577	   4,820.4	    23.8
SQL*Plus
consistent gets pin (fastpath)		    902,927	   1,493.9	     7.4
cursor authentications				  5	       0.0	     0.0
cursor reload failures				  0	       0.0	     0.0
data blocks consistent reads - u		 48	       0.1	     0.0
</td>
db block changes			  1,001,013	   1,656.1	     8.2
db block gets				    653,704	   1,081.5	     5.4
db block gets direct				 62	       0.1	     0.0
db block gets from cache		    653,642	   1,081.4	     5.4
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
db block gets from cache (fastpa	    267,899	     443.2	     2.2

Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
deferred (CURRENT) block cleanou	    193,345	     319.9	     1.6
dirty buffers inspected 		    292,580	     484.1	     2.4
enqueue conversions				289	       0.5	     0.0
enqueue releases			    253,017	     418.6	     2.1
enqueue requests			    253,010	     418.6	     2.1
enqueue timeouts				 11	       0.0	     0.0
enqueue waits					217	       0.4	     0.0
<tr><td align="right" class='awrnc'>135.58</td><td align="right" class='awrnc'>121,676</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>14.65</td><td align="right" class='awrnc'>1,653.51</td><td align="right" class='awrnc'>8.20</td><td align="right" class='awrnc'>86.00</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
exchange deadlocks				  2	       0.0	     0.0
execute count				    815,374	   1,349.0	     6.7
fastpath consistent get quota li		  0	       0.0	     0.0
file io service time			345,952,790	 572,365.8	 2,830.1
free buffer inspected			  2,385,579	   3,946.9	    19.5
free buffer requested			  2,371,388	   3,923.4	    19.4
gc blocks compressed			     14,191	      23.5	     0.1
gc blocks lost					  2	       0.0	     0.0
gc cleanout applied				  0	       0.0	     0.0
<td class='awrnc'>
gc cleanout saved				  9	       0.0	     0.0
gc cr anti locks created		     31,162	      51.6	     0.3
gc cr anti locks shrunk 			 20	       0.0	     0.0
gc cr block build time				150	       0.3	     0.0
gc cr block flush time				 24	       0.0	     0.0
SQL*Plus
gc cr block receive time			339	       0.6	     0.0
gc cr blocks built			      2,769	       4.6	     0.0
gc cr blocks flushed				 35	       0.1	     0.0
gc cr blocks received			      2,788	       4.6	     0.0
gc cr blocks served			      4,260	       7.1	     0.0
</td>
gc cr multiblock grant time			  0	       0.0	     0.0
gc cr multiblock grants received		  0	       0.0	     0.0
gc current block flush time			 28	       0.1	     0.0
gc current block pin time			  0	       0.0	     0.0
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
gc current block receive time			862	       1.4	     0.0
gc current blocks flushed			 23	       0.0	     0.0
gc current blocks pinned			  1	       0.0	     0.0
gc current blocks received		     11,163	      18.5	     0.1
gc current blocks served		     12,804	      21.2	     0.1
gc force cr read cr				 15	       0.0	     0.0
gc force cr read current			  0	       0.0	     0.0
<tr><td align="right" class='awrc'>55.30</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>55.30</td><td align="right" class='awrc'>5.97</td><td align="right" class='awrc'>568.79</td><td align="right" class='awrc'>9.72</td><td align="right" class='awrc'>84.80</td><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
gc kbytes saved 			     60,002	      99.3	     0.5
gc kbytes sent				     76,510	     126.6	     0.6
gc local grants 			  1,211,467	   2,004.3	     9.9
gc merge pi bg					  1	       0.0	     0.0
<td class='awrc'>
gc merge pi fg					 21	       0.0	     0.0
gc no change made				  0	       0.0	     0.0
gc read time waited				  0	       0.0	     0.0
gc read waits					  0	       0.0	     0.0
gc reader bypass grants 			 23	       0.0	     0.0
SQL*Plus
gc reader bypass waits				  2	       0.0	     0.0
gc remote grants			  1,155,964	   1,912.5	     9.5
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>54.88</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>54.88</td><td align="right" class='awrnc'>5.93</td><td align="right" class='awrnc'>568.85</td><td align="right" class='awrnc'>9.65</td><td align="right" class='awrnc'>85.49</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>54.56</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>54.56</td><td align="right" class='awrc'>5.89</td><td align="right" class='awrc'>568.85</td><td align="right" class='awrc'>9.59</td><td align="right" class='awrc'>85.74</td><td scope="row" class='awrc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>50.82</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>50.82</td><td align="right" class='awrnc'>5.49</td><td align="right" class='awrnc'>568.07</td><td align="right" class='awrnc'>8.95</td><td align="right" class='awrnc'>86.97</td><td scope="row" class='awrnc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>50.45</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>50.45</td><td align="right" class='awrc'>5.45</td><td align="right" class='awrc'>568.84</td><td align="right" class='awrc'>8.87</td><td align="right" class='awrc'>86.92</td><td scope="row" class='awrc'><a class="awr" href="#7m9rphfj2sxqy">7m9rphfj2sxqy</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>50.00</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>50.00</td><td align="right" class='awrnc'>5.40</td><td align="right" class='awrnc'>568.61</td><td align="right" class='awrnc'>8.79</td><td align="right" class='awrnc'>86.15</td><td scope="row" class='awrnc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>49.93</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>49.93</td><td align="right" class='awrc'>5.39</td><td align="right" class='awrc'>568.38</td><td align="right" class='awrc'>8.78</td><td align="right" class='awrc'>87.03</td><td scope="row" class='awrc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>49.79</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>49.79</td><td align="right" class='awrnc'>5.38</td><td align="right" class='awrnc'>568.80</td><td align="right" class='awrnc'>8.75</td><td align="right" class='awrnc'>87.62</td><td scope="row" class='awrnc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td>
<td class='awrnc'>
SQL*Plus
</td>
gc status messages received		  1,134,970	   1,877.8	     9.3
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
gc status messages sent 		  1,122,272	   1,856.8	     9.2
gcs affinity lock grants		      6,483	      10.7	     0.1
gcs anti-locks created			     31,142	      51.5	     0.3
gcs data block access record dro		  0	       0.0	     0.0
gcs data block access records		  2,365,026	   3,912.9	    19.4
<tr><td align="right" class='awrc'>48.27</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>48.27</td><td align="right" class='awrc'>5.22</td><td align="right" class='awrc'>568.74</td><td align="right" class='awrc'>8.49</td><td align="right" class='awrc'>87.32</td><td scope="row" class='awrc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
gcs messages sent			  2,700,761	   4,468.3	    22.1
gcs read-mostly lock failures		     20,199	      33.4	     0.2
gcs read-mostly lock grants		    114,096	     188.8	     0.9
<td class='awrc'>
gcs stats management (SCM) proce		 13	       0.0	     0.0
ges messages sent			      1,451	       2.4	     0.0
global enqueue get time 			579	       1.0	     0.0
SQL*Plus

Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Ordered by statistic name

</td>
Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
global enqueue gets async			  0	       0.0	     0.0
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
global enqueue gets sync		    127,588	     211.1	     1.0
global enqueue releases 		    127,484	     210.9	     1.0
heap block compress			      9,027	      14.9	     0.1
hot buffers moved to head of LRU	     76,199	     126.1	     0.6
immediate (CR) block cleanout ap		 30	       0.1	     0.0
<tr><td align="right" class='awrnc'>47.72</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>47.72</td><td align="right" class='awrnc'>5.16</td><td align="right" class='awrnc'>568.85</td><td align="right" class='awrnc'>8.39</td><td align="right" class='awrnc'>87.72</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
immediate (CURRENT) block cleano		244	       0.4	     0.0
index crx upgrade (positioned)			  0	       0.0	     0.0
index fast full scans (full)			  4	       0.0	     0.0
<td class='awrnc'>
index fetch by key			      1,175	       1.9	     0.0
index range scans			    814,352	   1,347.3	     6.7
leaf node 90-10 splits				  6	       0.0	     0.0
SQL*Plus
leaf node splits				 79	       0.1	     0.0
lob reads					  0	       0.0	     0.0
lob writes					 25	       0.0	     0.0
</td>
lob writes unaligned				 25	       0.0	     0.0
logical read bytes from cache	     46,570,995,712   77,049,954.4     380,983.1
logons cumulative				 14	       0.0	     0.0
max cf enq hold time				  0	       0.0	     0.0
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
messages received			    129,904	     214.9	     1.1
messages sent				    129,904	     214.9	     1.1
no work - consistent read gets		  2,907,855	   4,810.9	    23.8
non-idle wait count			  5,042,735	   8,343.0	    41.3
<tr><td align="right" class='awrc'>47.68</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>47.68</td><td align="right" class='awrc'>5.15</td><td align="right" class='awrc'>568.83</td><td align="right" class='awrc'>8.38</td><td align="right" class='awrc'>87.73</td><td scope="row" class='awrc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
opened cursors cumulative		    938,527	   1,552.8	     7.7
parse count (describe)				  5	       0.0	     0.0
parse count (failures)				  0	       0.0	     0.0
parse count (hard)				 21	       0.0	     0.0
parse count (total)			      1,343	       2.2	     0.0
<td class='awrc'>
parse time cpu					  5	       0.0	     0.0
parse time elapsed				  7	       0.0	     0.0
physical read IO requests		  2,350,386	   3,888.6	    19.2
physical read bytes		     19,254,362,112   31,855,615.3     157,514.1
physical read total IO requests 	  2,354,218	   3,895.0	    19.3
SQL*Plus
physical read total bytes	     20,016,861,696   33,117,142.0     163,751.8
physical read total multi block 		685	       1.1	     0.0
physical reads				  2,350,386	   3,888.6	    19.2
physical reads cache			  2,350,386	   3,888.6	    19.2
physical reads cache prefetch			  0	       0.0	     0.0
physical reads direct				  0	       0.0	     0.0
physical reads direct (lob)			  0	       0.0	     0.0
</td>
physical reads direct temporary 		  0	       0.0	     0.0
physical reads prefetch warmup			  0	       0.0	     0.0
physical write IO requests		    324,628	     537.1	     2.7
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
physical write bytes		      2,768,478,208    4,580,342.7	22,648.1
physical write total IO requests	    429,097	     709.9	     3.5
physical write total bytes	      3,154,982,912    5,219,800.1	25,810.0
physical write total multi block		666	       1.1	     0.0
physical writes 			    337,949	     559.1	     2.8
<tr><td align="right" class='awrnc'>47.65</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>47.65</td><td align="right" class='awrnc'>5.15</td><td align="right" class='awrnc'>568.03</td><td align="right" class='awrnc'>8.39</td><td align="right" class='awrnc'>88.11</td><td scope="row" class='awrnc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td>
physical writes direct				 62	       0.1	     0.0
physical writes direct (lob)			  0	       0.0	     0.0
physical writes direct temporary		  0	       0.0	     0.0
<td class='awrnc'>
physical writes from cache		    337,887	     559.0	     2.8
physical writes non checkpoint		    331,197	     548.0	     2.7
pinned buffers inspected			373	       0.6	     0.0
SQL*Plus
prefetch warmup blocks aged out 		  0	       0.0	     0.0
prefetched blocks aged out befor		  1	       0.0	     0.0
process last non-idle time			605	       1.0	     0.0
</td>
recursive calls 			  1,072,621	   1,774.6	     8.8
recursive cpu usage			    125,575	     207.8	     1.0
redo KB read				    417,212	     690.3	     3.4

<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
<tr><td align="right" class='awrc'>47.32</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>47.32</td><td align="right" class='awrc'>5.11</td><td align="right" class='awrc'>568.78</td><td align="right" class='awrc'>8.32</td><td align="right" class='awrc'>87.60</td><td scope="row" class='awrc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
redo blocks checksummed by FG (e	    229,721	     380.1	     1.9
redo blocks written			    736,842	   1,219.1	     6.0
redo blocks written (group 0)		    485,230	     802.8	     4.0
<td class='awrc'>
redo blocks written (group 1)		    251,612	     416.3	     2.1
redo buffer allocation retries			  0	       0.0	     0.0
redo entries				    520,380	     861.0	     4.3
redo log space requests 			  0	       0.0	     0.0
SQL*Plus
redo size				341,556,220	 565,091.9	 2,794.2
redo size for direct writes			120	       0.2	     0.0
redo subscn max counts				 49	       0.1	     0.0
</td>
redo synch time 				  4	       0.0	     0.0
redo synch time (usec)			     33,693	      55.7	     0.3
redo synch time overhead (usec) 	      3,183	       5.3	     0.0
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
redo synch time overhead count (		  4	       0.0	     0.0
redo synch time overhead count (		  1	       0.0	     0.0
redo synch writes				 21	       0.0	     0.0
redo wastage				 23,763,852	  39,316.4	   194.4
redo write active strands		    103,869	     171.9	     0.9
redo write broadcast ack count			  0	       0.0	     0.0
redo write broadcast ack time			  0	       0.0	     0.0
redo write finish time			602,803,828	 997,316.2	 4,931.4
<tr><td align="right" class='awrnc'>45.88</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>45.88</td><td align="right" class='awrnc'>4.96</td><td align="right" class='awrnc'>568.72</td><td align="right" class='awrnc'>8.07</td><td align="right" class='awrnc'>88.59</td><td scope="row" class='awrnc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
redo write gather time			 36,610,443	  60,570.6	   299.5
redo write info find				  5	       0.0	     0.0
redo write schedule time		 38,018,984	  62,901.0	   311.0
redo write size count (   4KB)		     59,765	      98.9	     0.5
redo write size count (   8KB)		     36,780	      60.9	     0.3
redo write size count (  16KB)		      3,399	       5.6	     0.0
<td class='awrnc'>
redo write size count (  32KB)			676	       1.1	     0.0
redo write size count ( 128KB)			169	       0.3	     0.0
redo write size count ( 256KB)			  6	       0.0	     0.0
redo write size count ( 512KB)			  1	       0.0	     0.0
redo write size count (1024KB)			  0	       0.0	     0.0
redo write time 			     60,699	     100.4	     0.5
redo write time (usec)			606,979,207    1,004,224.2	 4,965.5
SQL*Plus
redo write total time			630,687,180    1,043,448.1	 5,159.5
redo write worker delay (usec)		 27,207,258	  45,013.4	   222.6
redo write worker delay count		    100,794	     166.8	     0.8
</td>
redo writes				    100,794	     166.8	     0.8
redo writes (group 0)			     59,577	      98.6	     0.5
redo writes (group 1)			     41,217	      68.2	     0.3
redo writes adaptive all		    100,794	     166.8	     0.8
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
redo writes adaptive worker		    100,794	     166.8	     0.8
rollback changes - undo records 		  0	       0.0	     0.0
rollbacks only - consistent read		 23	       0.0	     0.0
rows fetched via callback			539	       0.9	     0.0
saved cleanouts 				  0	       0.0	     0.0
<tr><td align="right" class='awrc'>45.70</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>45.70</td><td align="right" class='awrc'>4.94</td><td align="right" class='awrc'>568.60</td><td align="right" class='awrc'>8.04</td><td align="right" class='awrc'>88.12</td><td scope="row" class='awrc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
saved cleanouts successfully com		  0	       0.0	     0.0
securefile allocation bytes			  0	       0.0	     0.0
securefile allocation chunks			  0	       0.0	     0.0
<td class='awrc'>
securefile bytes non-transformed		  0	       0.0	     0.0
securefile direct read bytes			  0	       0.0	     0.0
securefile direct read ops			  0	       0.0	     0.0
securefile direct write bytes			  0	       0.0	     0.0
SQL*Plus
securefile direct write ops			  0	       0.0	     0.0
securefile number of non-transfo		  0	       0.0	     0.0
segment cfs allocations 			  0	       0.0	     0.0
</td>
segment chunks allocation from d		  0	       0.0	     0.0
segment dispenser allocations			  0	       0.0	     0.0
segment dispenser load empty			  0	       0.0	     0.0
segment dispenser load tasks			  0	       0.0	     0.0
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>

Instance Activity Stats 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Ordered by statistic name

Statistic				      Total	per Second     per Trans
-------------------------------- ------------------ -------------- -------------
<tr><td align="right" class='awrnc'>45.62</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>45.62</td><td align="right" class='awrnc'>4.93</td><td align="right" class='awrnc'>568.57</td><td align="right" class='awrnc'>8.02</td><td align="right" class='awrnc'>88.01</td><td scope="row" class='awrnc'><a class="awr" href="#bzs4fu7kk84h3">bzs4fu7kk84h3</a></td>
segment prealloc ops				  3	       0.0	     0.0
segment prealloc tasks				  0	       0.0	     0.0
segment prealloc time (ms)			 23	       0.0	     0.0
session connect time				642	       1.1	     0.0
<td class='awrnc'>
session cursor cache hits		    936,967	   1,550.2	     7.7
session logical reads			  5,685,015	   9,405.6	    46.5
shared hash latch upgrades - no 	    918,167	   1,519.1	     7.5
SQL*Plus
shared hash latch upgrades - wai		  0	       0.0	     0.0
shared io pool buffer get succes		  0	       0.0	     0.0
sorts (memory)					154	       0.3	     0.0
</td>
sorts (rows)				     27,707	      45.8	     0.2
sql area evicted				 45	       0.1	     0.0
sql area purged 				  2	       0.0	     0.0
summed dirty queue length		  1,561,449	   2,583.4	    12.8
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
switch current caused by our pin		 18	       0.0	     0.0
switch current to new buffer			 27	       0.0	     0.0
table fetch by rowid			  2,739,697	   4,532.7	    22.4
table fetch continued row			  2	       0.0	     0.0
table scan blocks gotten		      4,246	       7.0	     0.0
table scan disk non-IMC rows got	    245,112	     405.5	     2.0
<tr><td align="right" class='awrc'>45.23</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>45.23</td><td align="right" class='awrc'>4.89</td><td align="right" class='awrc'>568.91</td><td align="right" class='awrc'>7.95</td><td align="right" class='awrc'>88.48</td><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
table scan rows gotten			    245,112	     405.5	     2.0
table scans (short tables)			110	       0.2	     0.0
temp space allocated (bytes)			  0	       0.0	     0.0
total cf enq hold time			      1,444	       2.4	     0.0
<td class='awrc'>
total number of cf enq holders			155	       0.3	     0.0
total number of times SMON poste		 10	       0.0	     0.0
transaction lock background get 		  0	       0.0	     0.0
SQL*Plus
transaction lock background gets		  0	       0.0	     0.0
transaction lock foreground requ		  0	       0.0	     0.0
transaction rollbacks				  0	       0.0	     0.0
transaction tables consistent re		  0	       0.0	     0.0
</td>
transaction tables consistent re	    486,299	     804.6	     4.0
undo change vector size 		134,434,172	 222,416.3	 1,099.8
user calls					181	       0.3	     0.0
user commits				    122,239	     202.2	     1.0
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
user logons cumulative				  1	       0.0	     0.0
user logouts cumulative 			 20	       0.0	     0.0
workarea executions - optimal			277	       0.5	     0.0
write clones created in foregrou		 10	       0.0	     0.0
			  ------------------------------------------------------
<tr><td align="right" class='awrnc'>45.06</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>45.06</td><td align="right" class='awrnc'>4.87</td><td align="right" class='awrnc'>568.91</td><td align="right" class='awrnc'>7.92</td><td align="right" class='awrnc'>88.62</td><td scope="row" class='awrnc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>


Instance Activity Stats - Absolute ValuesDB/Inst: P30DB/p30db1	Snaps: 171-172
-> Statistics with absolute values (should not be diffed)
<td class='awrnc'>

Statistic			     Begin Value       End Value
-------------------------------- --------------- ---------------
logons current				     108	      90
SQL*Plus
opened cursors current			     157	      79
session cursor cache count		   4,293	   4,256
session pga memory		     586,862,392     483,335,944
session pga memory max		     709,385,976     607,284,264
</td>
session uga memory		     311,228,128     266,516,536
session uga memory max		   2,501,387,944   2,598,516,560
			  ------------------------------------------------------

<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
Instance Activity Stats - Thread ActivityDB/Inst: P30DB/p30db1	Snaps: 171-172
-> Statistics identified by '(derived)' come from sources other than SYSSTAT

Statistic				      Total  per Hour
<tr><td align="right" class='awrc'>40.55</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>40.55</td><td align="right" class='awrc'>4.38</td><td align="right" class='awrc'>568.84</td><td align="right" class='awrc'>7.13</td><td align="right" class='awrc'>90.15</td><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
-------------------------------- ------------------ ---------
log switches (derived)				  0	  .00
			  ------------------------------------------------------

<td class='awrc'>
IOStat by Function summary		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> ordered by (Data Read + Write) desc
SQL*Plus

		 Reads:  Reqs	 Data	Writes:  Reqs	 Data	 Waits:    Avg
</td>
Function Name	   Data per sec per sec    Data per sec per sec   Count    Time
--------------- ------- ------- ------- ------- ------- ------- ------- --------
Buffer Cache Re   17.9G  3872.2 30.257M      0M     0.0      0M    2.3M   4.05ms
DBWR		     0M     0.0      0M    2.6G   537.1  4.366M       0
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
Others		   726M     6.3  1.201M     10M     0.9   .017M    2553   1.49ms
LGWR		     0M     0.0      0M    359M   171.4   .594M  100.5K   5.58ms
TOTAL:		  18.6G  3878.5 31.458M    2.9G   709.5  4.977M    2.4M   4.11ms
</table><p />
			  ------------------------------------------------------

IOStat by Filetype summary		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
<hr align="left" width="20%" /><p />
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> Small Read and Large Read are average service times
-> Ordered by (Data Read + Write) desc

<a class="awr" href="#22">Back to SQL Statistics</a>
		Reads:	Reqs	Data   Writes:	Reqs	Data	  Small    Large
Filetype Name	  Data per sec per sec	  Data per sec per sec	   Read     Read
-------------- ------- ------- ------- ------- ------- ------- -------- --------
Data File	 17.9G	3873.5 30.263M	  2.6G	 537.1	4.371M	 3.56ms
<br /><a class="awr" href="#top">Back to Top</a><p />
Log File	  679M	   1.3	1.123M	  359M	 171.4	 .594M 206.90us 1388.60m
Control File	   47M	   5.0	 .078M	    8M	   0.9	 .013M	38.23us
TOTAL:		 18.6G	3879.8 31.465M	  2.9G	 709.4	4.978M	 3.55ms 1388.60m
<a class="awr" name="550"></a>
			  ------------------------------------------------------

IOStat by Function/Filetype summary	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> 'Data' columns suffixed with M,G,T,P are in multiples of 1024
<h3 class="awr">SQL ordered by User I/O Wait Time</h3>
    other columns suffixed with K,M,G,T,P are in multiples of 1000
-> Ordered by (Data Read + Write) desc for each function

  Reads:  Reqs	  Data	 Writes:  Reqs	  Data	  Waits:      Avg
<ul>
    Data per sec per sec    Data per sec per sec   Count     Time
 ------- ------- ------- ------- ------- ------- ------- ----------
 Buffer Cache Reads (Data File)
   17.9G  3872.0 30.257M      0M     0.0      0M    2.3M     4.05ms
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
Buffer Cache Reads
   17.9G  3872.0 30.257M      0M     0.0      0M    2.3M     4.05ms
 DBWR (Data File)
      0M     0.0      0M    2.6G   537.1  4.366M       0
DBWR
<li class="awr"> %Total - User I/O Time as a percentage of Total User I/O Wait time </li>
      0M     0.0      0M    2.6G   537.1  4.366M       0
Others
    726M     6.3  1.201M     10M     0.9   .017M    2273   387.51us
 Others (Log File)
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
    679M     1.3  1.123M      0M     0.0      0M      69   565.22us
 Others (Control File)
     47M     5.0   .078M      9M     0.9   .015M    2196   381.79us
 Others (Data File)
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
      0M     0.0      0M      1M     0.0   .002M       8   425.38us
 LGWR (Log File)
      0M     0.0      0M    359M   171.4   .594M       0
LGWR
      0M     0.0      0M    359M   171.4   .594M       0
<li class="awr">Captured SQL account for   99.8% of Total User I/O Wait Time (s):	    9,441</li>
TOTAL:
   18.6G  3878.3 31.458M    2.9G   709.4  4.977M    2.3M     4.05ms
			  ------------------------------------------------------

<li class="awr">Captured PL/SQL account for  100.1% of Total User I/O Wait Time (s):	       9,441</li>

Tablespace IO Stats			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
</ul>
			  ------------------------------------------------------


File IO Stats				 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

<table border="0" class="tdiff" summary="This table displays top SQL by user I/O time"><tr><th class="awrbg" scope="col">User I/O Time (s)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">UIO per  Exec (s)</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>

Buffer Pool Statistics			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Standard block size Pools  D: default,  K: keep,  R: recycle
-> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k

							    Free   Writ   Buffer
<tr><td align="right" class='awrc'>8,000.55</td><td align="right" class='awrc'>689,468</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>84.74</td><td align="right" class='awrc'>8,941.51</td><td align="right" class='awrc'>6.96</td><td align="right" class='awrc'>89.48</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
     Number of Pool	  Buffer     Physical	 Physical   Buff   Comp     Busy
P      Buffers Hit%	    Gets	Reads	   Writes   Wait   Wait    Waits
--- ---------- ---- ------------ ------------ ----------- ------ ------ --------
<td class='awrc'>
D      932,000	 59    5,686,866    2,351,369	  337,887      0      0        2
			  ------------------------------------------------------

SQL*Plus
Checkpoint Activity			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Physical Writes:		       337,949

					  Other    Autotune	 Thread
</td>
       MTTR    Log Size    Log Ckpt    Settings        Ckpt	   Ckpt
     Writes	 Writes      Writes	 Writes      Writes	 Writes
----------- ----------- ----------- ----------- ----------- -----------
	  0	      0 	  0	      0      21,459	      0
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
			  ------------------------------------------------------

Instance Recovery Stats 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> B: Begin Snapshot,  E: End Snapshot

									    Estd
  Targt  Estd					  Log Ckpt Log Ckpt    Opt   RAC
<tr><td align="right" class='awrnc'>1,422.01</td><td align="right" class='awrnc'>121,676</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>15.06</td><td align="right" class='awrnc'>1,653.51</td><td align="right" class='awrnc'>8.20</td><td align="right" class='awrnc'>86.00</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
  MTTR	 MTTR Recovery	Actual	 Target   Log Sz   Timeout Interval    Log Avail
   (s)	  (s) Estd IOs RedoBlks RedoBlks RedoBlks RedoBlks RedoBlks  Sz(M)  Time
- ----- ----- -------- -------- -------- -------- -------- -------- ------ -----
<td class='awrnc'>
B     0     6	 25528	  51852   120001 1.70E+07   120001	N/A    N/A     2
E     0    55	 70721	 348095  1670867 1.70E+07  1670867	N/A    N/A    20
			  ------------------------------------------------------

SQL*Plus
MTTR Advisory				      DB/Inst: P30DB/p30db1  Snap: 172

		  No data exists for this section of the report.
			  ------------------------------------------------------
</td>

Buffer Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 172
-> Only rows with estimated physical reads >0 are displayed
-> ordered by Block Size, Buffers For Estimate

<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
				    Est
				   Phys      Estimated			Est
    Size for   Size	 Buffers   Read     Phys Reads	   Est Phys %DBtime
P    Est (M) Factor  (thousands) Factor    (thousands)	  Read Time for Rds
--- -------- ------ ------------ ------ -------------- ------------ -------
<tr><td align="right" class='awrc'>512.81</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>512.81</td><td align="right" class='awrc'>5.43</td><td align="right" class='awrc'>568.84</td><td align="right" class='awrc'>7.13</td><td align="right" class='awrc'>90.15</td><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
D	 800	 .1	      93    1.2 	13,342		  1 5.4E+04
D      1,600	 .2	     186    1.1 	12,337		  1 5.0E+04
D      2,400	 .3	     280    1.1 	11,759		  1 4.7E+04
D      3,200	 .4	     373    1.0 	11,445		  1 4.6E+04
<td class='awrc'>
D      4,000	 .5	     466    1.0 	11,267		  1 4.5E+04
D      4,800	 .6	     559    1.0 	11,158		  1 4.5E+04
D      5,600	 .7	     652    1.0 	11,087		  1 4.4E+04
D      6,400	 .8	     746    1.0 	11,034		  1 4.4E+04
D      7,200	 .9	     839    1.0 	10,987		  1 4.4E+04
D      8,000	1.0	     932    1.0 	10,946		  1 4.4E+04
D      8,800	1.1	   1,025    1.0 	10,908		  1 4.4E+04
SQL*Plus
D      9,600	1.2	   1,118    1.0 	10,873		  1 4.4E+04
D     10,400	1.3	   1,212    1.0 	10,838		  1 4.3E+04
D     11,200	1.4	   1,305    1.0 	10,805		  1 4.3E+04
D     12,000	1.5	   1,398    1.0 	10,774		  1 4.3E+04
D     12,800	1.6	   1,491    1.0 	10,743		  1 4.3E+04
D     13,600	1.7	   1,584    1.0 	10,713		  1 4.3E+04
D     14,400	1.8	   1,678    1.0 	10,684		  1 4.3E+04
D     15,200	1.9	   1,771    1.0 	10,656		  1 4.3E+04
</td>
D     16,000	2.0	   1,864    1.0 	10,630		  1 4.3E+04
			  ------------------------------------------------------


PGA Aggr Summary			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory

PGA Cache Hit %   W/A MB Processed  Extra W/A MB Read/Written
--------------- ------------------ --------------------------
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
	  100.0 	       125			    0
			  ------------------------------------------------------

PGA Aggr Target Stats			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> B: Begin Snap   E: End Snap (rows dentified with B or E contain data
   which is absolute i.e. not diffed over the interval)
-> Auto PGA Target - actual workarea memory target
<tr><td align="right" class='awrnc'>504.19</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>504.19</td><td align="right" class='awrnc'>5.34</td><td align="right" class='awrnc'>568.91</td><td align="right" class='awrnc'>7.92</td><td align="right" class='awrnc'>88.62</td><td scope="row" class='awrnc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
-> W/A PGA Used    - amount of memory used for all Workareas (manual + auto)
-> %PGA W/A Mem    - percentage of PGA memory allocated to workareas
-> %Auto W/A Mem   - percentage of workarea memory controlled by Auto Mem Mgmt
<td class='awrnc'>
-> %Man W/A Mem    - percentage of workarea memory under manual control

						%PGA  %Auto   %Man
    PGA Aggr   Auto PGA   PGA Mem    W/A PGA	 W/A	W/A    W/A Global Mem
SQL*Plus
   Target(M)  Target(M)  Alloc(M)    Used(M)	 Mem	Mem    Mem   Bound(K)
- ---------- ---------- ---------- ---------- ------ ------ ------ ----------
B      3,215	  2,160    1,020.0	  0.0	  .0	 .0	.0    329,210
E      3,215	  2,246      909.7	  0.0	  .0	 .0	.0    329,210
</td>
			  ------------------------------------------------------

PGA Aggr Target Histogram		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Optimal Executions are purely in-memory operations
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>

  Low	  High
Optimal Optimal    Total Execs	Optimal Execs 1-Pass Execs M-Pass Execs
------- ------- -------------- -------------- ------------ ------------
     2K      4K 	   150		  150		 0	      0
    64K    128K 	     5		    5		 0	      0
<tr><td align="right" class='awrc'>503.81</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>503.81</td><td align="right" class='awrc'>5.34</td><td align="right" class='awrc'>568.72</td><td align="right" class='awrc'>8.07</td><td align="right" class='awrc'>88.59</td><td scope="row" class='awrc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
   128K    256K 	     2		    2		 0	      0
   256K    512K 	     8		    8		 0	      0
   512K   1024K 	    52		   52		 0	      0
     1M      2M 	    56		   56		 0	      0
<td class='awrc'>
     2M      4M 	     4		    4		 0	      0
			  ------------------------------------------------------

PGA Memory Advisory			      DB/Inst: P30DB/p30db1  Snap: 172
SQL*Plus
-> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value
   where Estd PGA Overalloc Count is 0

				       Estd Extra    Estd P Estd PGA
</td>
PGA Target    Size	     W/A MB   W/A MB Read/    Cache Overallo	Estd
  Est (MB)   Factr	  Processed Written to Disk   Hit %    Count	Time
---------- ------- ---------------- ---------------- ------ -------- -------
       402     0.1	    6,156.7	       253.6   96.0	  18 1.7E+07
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
       804     0.3	    6,156.7		 4.7  100.0	   2 1.6E+07
     1,608     0.5	    6,156.7		 0.0  100.0	   0 1.6E+07
     2,411     0.8	    6,156.7		 0.0  100.0	   0 1.6E+07
     3,215     1.0	    6,156.7		 0.0  100.0	   0 1.6E+07
     3,858     1.2	    6,156.7		 0.0  100.0	   0 1.6E+07
     4,501     1.4	    6,156.7		 0.0  100.0	   0 1.6E+07
<tr><td align="right" class='awrnc'>503.36</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>503.36</td><td align="right" class='awrnc'>5.33</td><td align="right" class='awrnc'>568.91</td><td align="right" class='awrnc'>7.95</td><td align="right" class='awrnc'>88.48</td><td scope="row" class='awrnc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
     5,144     1.6	    6,156.7		 0.0  100.0	   0 1.6E+07
     5,787     1.8	    6,156.7		 0.0  100.0	   0 1.6E+07
     6,430     2.0	    6,156.7		 0.0  100.0	   0 1.6E+07
     9,645     3.0	    6,156.7		 0.0  100.0	   0 1.6E+07
    12,860     4.0	    6,156.7		 0.0  100.0	   0 1.6E+07
    19,290     6.0	    6,156.7		 0.0  100.0	   0 1.6E+07
<td class='awrnc'>
    25,720     8.0	    6,156.7		 0.0  100.0	   0 1.6E+07
			  ------------------------------------------------------


Shared Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 172
SQL*Plus
-> SP: Shared Pool     Est LC: Estimated Library Cache	 Factr: Factor
-> Note there is often a 1:Many correlation between a single logical object
   in the Library Cache, and the physical number of memory objects associated
   with it.  Therefore comparing the number of Lib Cache objects (e.g. in
   v$librarycache), with the number of Lib Cache Memory Objects is invalid.

				       Est LC Est LC  Est LC Est LC
</td>
  Shared    SP	 Est LC 		 Time	Time	Load   Load	  Est LC
    Pool  Size	   Size       Est LC	Saved  Saved	Time   Time	 Mem Obj
 Size(M) Factr	    (M)      Mem Obj	  (s)  Factr	 (s)  Factr	Hits (K)
-------- ----- -------- ------------ -------- ------ ------- ------ ------------
   1,280    .9	     44        2,215   13,834	 1.0	 126	3.1	   1,638
   1,312    .9	     76        2,633   13,858	 1.0	 102	2.5	   1,639
   1,344    .9	    107        3,185   13,868	 1.0	  92	2.2	   1,640
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
   1,376   1.0	    139        3,687   13,893	 1.0	  67	1.6	   1,641
   1,408   1.0	    170        4,811   13,911	 1.0	  49	1.2	   1,642
   1,440   1.0	    202        6,105   13,919	 1.0	  41	1.0	   1,643
   1,472   1.0	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   1,504   1.0	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   1,536   1.1	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   1,568   1.1	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   1,600   1.1	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   1,632   1.1	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   1,664   1.2	    226        7,056   13,919	 1.0	  41	1.0	   1,643
<tr><td align="right" class='awrc'>501.05</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>501.05</td><td align="right" class='awrc'>5.31</td><td align="right" class='awrc'>568.60</td><td align="right" class='awrc'>8.04</td><td align="right" class='awrc'>88.12</td><td scope="row" class='awrc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
   1,696   1.2	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   1,728   1.2	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   1,760   1.2	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   1,920   1.3	    226        7,056   13,919	 1.0	  41	1.0	   1,643
<td class='awrc'>
   2,080   1.4	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   2,240   1.6	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   2,400   1.7	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   2,560   1.8	    226        7,056   13,919	 1.0	  41	1.0	   1,643
SQL*Plus
   2,720   1.9	    226        7,056   13,919	 1.0	  41	1.0	   1,643
   2,880   2.0	    226        7,056   13,919	 1.0	  41	1.0	   1,643
			  ------------------------------------------------------

</td>
SGA Target Advisory			      DB/Inst: P30DB/p30db1  Snap: 172

SGA Target   SGA Size	    Est DB     Est Physical
  Size (M)     Factor	  Time (s)	      Reads
---------- ---------- ------------ ----------------
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
     2,416	  0.3	    60,284	 13,341,588
     3,624	  0.4	    55,968	 12,336,782
     4,832	  0.5	    52,143	 11,444,716
     6,040	  0.6	    50,998	 11,157,942
     7,248	  0.8	    50,608	 11,086,795
     8,456	  0.9	    50,183	 10,987,190
     9,664	  1.0	    50,003	 10,945,597
<tr><td align="right" class='awrnc'>500.51</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>500.51</td><td align="right" class='awrnc'>5.30</td><td align="right" class='awrnc'>568.03</td><td align="right" class='awrnc'>8.39</td><td align="right" class='awrnc'>88.11</td><td scope="row" class='awrnc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td>
    10,872	  1.1	    49,688	 10,872,262
    12,080	  1.3	    49,458	 10,804,399
    13,288	  1.4	    49,263	 10,773,751
    14,496	  1.5	    49,003	 10,712,456
    15,704	  1.6	    48,883	 10,683,997
<td class='awrnc'>
    16,912	  1.8	    48,648	 10,630,364
    18,120	  1.9	    48,648	 10,630,364
    19,328	  2.0	    48,648	 10,630,364
			  ------------------------------------------------------

SQL*Plus
Streams Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 172

		  No data exists for this section of the report.
			  ------------------------------------------------------

</td>
Java Pool Advisory			      DB/Inst: P30DB/p30db1  Snap: 172

		  No data exists for this section of the report.
			  ------------------------------------------------------

<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
Buffer Wait Statistics			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> ordered by wait time desc, waits desc

Class			 Waits Total Wait Time (s)  Avg Time (ms)
<tr><td align="right" class='awrc'>500.41</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>500.41</td><td align="right" class='awrc'>5.30</td><td align="right" class='awrc'>568.57</td><td align="right" class='awrc'>8.02</td><td align="right" class='awrc'>88.01</td><td scope="row" class='awrc'><a class="awr" href="#bzs4fu7kk84h3">bzs4fu7kk84h3</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>499.03</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>499.03</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>568.83</td><td align="right" class='awrnc'>8.38</td><td align="right" class='awrnc'>87.73</td><td scope="row" class='awrnc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>499.00</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>499.00</td><td align="right" class='awrc'>5.29</td><td align="right" class='awrc'>568.85</td><td align="right" class='awrc'>8.39</td><td align="right" class='awrc'>87.72</td><td scope="row" class='awrc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>498.36</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>498.36</td><td align="right" class='awrnc'>5.28</td><td align="right" class='awrnc'>568.80</td><td align="right" class='awrnc'>8.75</td><td align="right" class='awrnc'>87.62</td><td scope="row" class='awrnc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>498.24</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>498.24</td><td align="right" class='awrc'>5.28</td><td align="right" class='awrc'>568.78</td><td align="right" class='awrc'>8.32</td><td align="right" class='awrc'>87.60</td><td scope="row" class='awrc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>496.61</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>496.61</td><td align="right" class='awrnc'>5.26</td><td align="right" class='awrnc'>568.74</td><td align="right" class='awrnc'>8.49</td><td align="right" class='awrnc'>87.32</td><td scope="row" class='awrnc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>494.66</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>494.66</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>568.38</td><td align="right" class='awrc'>8.78</td><td align="right" class='awrc'>87.03</td><td scope="row" class='awrc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
------------------ ----------- ------------------- --------------
undo header		     1			 0		0
			  ------------------------------------------------------

<tr><td align="right" class='awrnc'>494.41</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>494.41</td><td align="right" class='awrnc'>5.24</td><td align="right" class='awrnc'>568.84</td><td align="right" class='awrnc'>8.87</td><td align="right" class='awrnc'>86.92</td><td scope="row" class='awrnc'><a class="awr" href="#7m9rphfj2sxqy">7m9rphfj2sxqy</a></td>

Enqueue Activity			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> only enqueues with requests are shown
<td class='awrnc'>
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
-> ordered by Wait Time desc, Waits desc, Requests desc

SQL*Plus
Enqueue Type (Request Reason)
------------------------------------------------------------------------------
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
</td>
------------ ------------ ----------- ----------- ------------ --------------
CR-Reuse Block Range (block range reuse ckpt)
	 236	      236	    0	       94	     0		 4.18
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
CF-Controlfile Transaction
       1,419	    1,418	    1	       57	     0		 1.02
WF-AWR Flush
	  25	       25	    0	       15	     0		 1.07
PS-PX Process Reservation
	  19	       19	    0	       12	     0		 1.00
<tr><td align="right" class='awrc'>494.08</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>494.08</td><td align="right" class='awrc'>5.23</td><td align="right" class='awrc'>568.07</td><td align="right" class='awrc'>8.95</td><td align="right" class='awrc'>86.97</td><td scope="row" class='awrc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td>
CO-KTUCLO Master Slave enq (master slave det)
	  10		0	   10	       10	     0		 1.00
US-Undo Segment
	  10	       10	    0		7	     0		  .86
RO-Multiple Object Reuse (fast object reuse)
	  40	       40	    0	       10	     0		  .40
<td class='awrc'>
TM-DML
     122,017	  122,009	    0		2	     0		 1.00
HW-Segment High Water Mark
	 192	      192	    0		2	     0		 1.00
DW-In memory Dispenser
	   3		3	    0		1	     0		 2.00
SQL*Plus
TD-KTF map table enqueue (KTF dump entries)
	   1		1	    0		1	     0		 2.00
TA-Instance Undo
</td>
	   2		2	    0		2	     0		  .00
FB-Format Block
	   3		3	    0		1	     0		  .00
TX-Transaction
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
     121,933	  121,926	    0		0	     0		  N/A
JG-Job Scheduler1
       2,520	    2,520	    0		0	     0		  N/A
JG-Job Scheduler1 (queue lock)
       2,520	    2,520	    0		0	     0		  N/A
<tr><td align="right" class='awrnc'>489.85</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>489.85</td><td align="right" class='awrnc'>5.19</td><td align="right" class='awrnc'>568.61</td><td align="right" class='awrnc'>8.79</td><td align="right" class='awrnc'>86.15</td><td scope="row" class='awrnc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
SJ-KTSJ Slave Task Cancel (Slave Task Cancel)
	 415	      416	    0		0	     0		  N/A
DD-ASM Local Disk Group
<td class='awrnc'>
	 339	      339	    0		0	     0		  N/A
JG-Job Scheduler1 (q mem clnup lck)
	 240	      240	    0		0	     0		  N/A
SQL*Plus
BU-Buddy Instance Context (recovery set construct)
	 187	      187	    0		0	     0		  N/A
FP-File Object (global fob contention)
</td>
	  69	       69	    0		0	     0		  N/A
IS-Instance State
	  51	       51	    0		0	     0		  N/A
TT-Tablespace
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
	  32	       32	    0		0	     0		  N/A
WT-AWR CDB-Wide Table Lock
	  21	       21	    0		0	     0		  N/A
CU-Cursor
	  19	       19	    0		0	     0		  N/A
<tr><td align="right" class='awrc'>487.74</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>487.74</td><td align="right" class='awrc'>5.17</td><td align="right" class='awrc'>568.85</td><td align="right" class='awrc'>9.59</td><td align="right" class='awrc'>85.74</td><td scope="row" class='awrc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
MR-Media Recovery
	  14	       14	    0		0	     0		  N/A
SE-Session Migration
	  14	       14	    0		0	     0		  N/A
<td class='awrc'>
AF-Advisor Framework (task serialization)
	  13	       13	    0		0	     0		  N/A
TH-Threshold Chain (metric threshold evaluation)
SQL*Plus
	  10	       10	    0		0	     0		  N/A
SQ-Sequence Cache
	   5		5	    0		0	     0		  N/A

</td>
Enqueue Activity			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> only enqueues with requests are shown
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
-> Enqueue stats gathered prior to 10g should not be compared with 10g data
-> ordered by Wait Time desc, Waits desc, Requests desc

Enqueue Type (Request Reason)
------------------------------------------------------------------------------
<tr><td align="right" class='awrnc'>486.32</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>486.32</td><td align="right" class='awrnc'>5.15</td><td align="right" class='awrnc'>568.85</td><td align="right" class='awrnc'>9.65</td><td align="right" class='awrnc'>85.49</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
    Requests	Succ Gets Failed Gets	    Waits  Wt Time (s) Av Wt Time(ms)
------------ ------------ ----------- ----------- ------------ --------------
PR-Process Startup
<td class='awrnc'>
	   4		4	    0		0	     0		  N/A
TO-Temp Object
	   4		4	    0		0	     0		  N/A
AE-Edition Lock (lock)
SQL*Plus
	   3		3	    0		0	     0		  N/A
PV-KSV slave startup (syncstart)
	   3		3	    0		0	     0		  N/A
</td>
PW-Buffer Cache PreWarm (flush prewarm buffers)
	   2		2	    0		0	     0		  N/A
SH-Active Session History Flushing
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
	   2		2	    0		0	     0		  N/A
XR-Quiesce / Force Logging (database force logging)
	   2		2	    0		0	     0		  N/A
DA-Instance DP Array (Slave Process Array)
	   1		1	    0		0	     0		  N/A
			  ------------------------------------------------------


Undo Segment Summary			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Min/Max TR (mins) - Min and Max Tuned Retention (minutes)
-> STO - Snapshot Too Old count,  OOS - Out of Space count
-> Undo segment block stats:
-> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed
-> eS - expired   Stolen,   eR - expired   Released,   eU - expired   reUsed

Undo   Num Undo       Number of  Max Qry   Max Tx Min/Max   STO/     uS/uR/uU/
 TS# Blocks (K)    Transactions  Len (s) Concurcy TR (mins) OOS      eS/eR/eU
---- ---------- --------------- -------- -------- --------- ----- --------------
   2	   14.0 	101,013    1,579       12 40.3/40.3 11/0  0/0/0/0/0/0
			  ------------------------------------------------------

Undo Segment Stats			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Most recent 35 Undostat rows, ordered by Time desc

		Num Undo    Number of Max Qry  Max Tx Tun Ret STO/    uS/uR/uU/
End Time	  Blocks Transactions Len (s)	Concy  (mins) OOS     eS/eR/eU
------------ ----------- ------------ ------- ------- ------- ----- ------------
10-Feb 20:39	  13,964      101,013	1,579	   12	   40 11/0  0/0/0/0/0/0
			  ------------------------------------------------------


Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
AQ Background: interrupt	      1    0.0		   0	       22    0.0
AQ Coord jobx_kwsbgsgn l	     20    0.0		   0		0    N/A
AQ Message drive state o	      1    0.0		   0		0    N/A
AQ Sharded master pool l	     20    0.0		   0		0    N/A
AQ deq hash table latch 	      1    0.0		   0		0    N/A
ASM Keyed state latch		     30    0.0		   0		0    N/A
ASM allocation			 35,414    0.0		   0		0    N/A
ASM connection state lat	  3,894    0.0		   0		0    N/A
ASM db client latch		    586    0.0		   0		0    N/A
ASM map headers 		    483    0.0		   0		0    N/A
ASM map load waiting lis	    138    0.0		   0		0    N/A
ASM map operation freeli	     50    0.0		   0		0    N/A
ASM map operation hash t      5,855,132    0.0	  0.1	   0		0    N/A
ASM network background l	  4,191    0.0		   0		0    N/A
ASM network state latch 	    147    0.0		   0		0    N/A
ASM remote client latch 	      9    0.0		   0		0    N/A
AWR Alerted Metric Eleme	  5,938    0.0		   0		0    N/A
Autotask management		     10    0.0		   0		0    N/A
Change Notification Hash	    204    0.0		   0		0    N/A
Column stats entry latch	      1    0.0		   0		0    N/A
Consistent RBA			100,849    0.0	  0.6	   0		0    N/A
DML lock allocation		245,006    0.0	  0.1	   0		0    N/A
Event Group Locks		     20    0.0		   0		0    N/A
FIB s.o chain latch		    138    0.0		   0		0    N/A
FOB consolidated s.o lis	    138    0.0		   0		0    N/A
File State Object Pool P	      1    0.0		   0		0    N/A
GCS logfile block		      1    0.0		   0		0    N/A
GCS logfile write queue 	      1    0.0		   0		0    N/A
Hang Manager wait event 	     40    0.0		   0	    7,119    0.0
I/O Staticstics latch		      1    0.0		   0		0    N/A
ILM Stats Stripe Latch		      1    0.0		   0		0    N/A
ILM Stats main anchor la	    122    0.0		   0		0    N/A
ILM access tracking exte	      1    0.0		   0		0    N/A
ILM activity tracking la	      1    0.0		   0		0    N/A
IM Global dictionary lat	      1    0.0		   0		0    N/A
IM Global dictionary que	      1    0.0		   0		0    N/A
IM Global dictionary rw 	      1    0.0		   0		0    N/A
IM area sb latch		      1    0.0		   0		0    N/A
IM area scb latch		      1    0.0		   0		0    N/A
IM emb latch			      1    0.0		   0		0    N/A
IM seg hdr latch		      1    0.0		   0		0    N/A
IMFS defer write list		      1    0.0		   0		0    N/A
IMXT hash table latch		      1    0.0		   0		0    N/A
IPC other latch 		      7    0.0		   0		0    N/A
IPC stats buffer allocat	      1    0.0		   0		0    N/A
In memory undo latch		      1    0.0		   0		0    N/A
JS Sh mem access		    122    0.0		   0		0    N/A
JS broadcast add buf lat	    138    0.0		   0		0    N/A
JS broadcast drop buf la	    138    0.0		   0		0    N/A
JS broadcast load blnc l	    138    0.0		   0		0    N/A
JS queue access latch		      1    0.0		   0		0    N/A
JS queue state obj latch	  5,082    0.0		   0		0    N/A
JS slv state obj latch		      1    0.0		   0		0    N/A
KCNIBR - invalid block r	      1    0.0		   0		0    N/A
KDCStatHash latch		      1    0.0		   0		0    N/A
KDFI Buffer Latch		      1    0.0		   0		0    N/A
KDFI Hash Bucket Latch		      1    0.0		   0		0    N/A
KDFI Hash Elem Latch		      1    0.0		   0		0    N/A
KDMADO action list latch	      1    0.0		   0		0    N/A
KDMADO bll latch		      1    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
KDMADO latch			      1    0.0		   0		0    N/A
KFC FX Hash Latch		      1    0.0		   0		0    N/A
KFC Hash Latch			      1    0.0		   0		0    N/A
KFCL LE Freelist		      1    0.0		   0		0    N/A
KFIAS client latch		      1    0.0		   0		0    N/A
KFIAS cluster latch		      1    0.0		   0		0    N/A
KFIAS endpoint latch		      1    0.0		   0		0    N/A
KFIAS node latch		      1    0.0		   0		0    N/A
KFIAS process latch		      1    0.0		   0		0    N/A
KFIAS queue latch		      1    0.0		   0		0    N/A
KFK SGA Libload latch		  4,560    0.0		   0		0    N/A
KFMD SGA			    345    0.0		   0		0    N/A
KGNFS-NFS:SHM structure 	      1    0.0		   0		0    N/A
KGNFS-NFS:SVR LIST		    203    0.0		   0		0    N/A
KJC message pool KGH cal	      1    0.0		   0		0    N/A
KJC message pool free li	 60,846    0.0	  0.1	   0	  167,614    0.2
KJC message pool pending	      1    0.0		   0		0    N/A
KJCT flow control latch       2,228,776    0.1	  0.1	   0		0    N/A
KMG MMAN ready and start	    202    0.0		   0		0    N/A
KSFS OFS ctx level paren	      1    0.0		   0		0    N/A
KSFS OFS req layer paren	      1    0.0		   0		0    N/A
KSFS OFS sess layer pare	      1    0.0		   0		0    N/A
KSFS Receive and Send Qu	      1    0.0		   0		0    N/A
KSFS id table parent lat	      1    0.0		   0		0    N/A
KSFS ksfs_node latch		      1    0.0		   0		0    N/A
KSFSD name cache parent 	      1    0.0		   0		0    N/A
KSGL LS Segment latch		      1    0.0		   0		0    N/A
KSGL SGA anchor latch		      1    0.0		   0		0    N/A
KSIPC ASPC anchor latch 	      1    0.0		   0		0    N/A
KSIPC SGA allocation par	     54    0.0		   0		0    N/A
KSIPCGSN Hash Table latc	      1    0.0		   0		0    N/A
KSIPCGSN Namespace latch	      1    0.0		   0		0    N/A
KSK PDB IO STAT 		      1    0.0		   0		0    N/A
KSRMA SGA anchor latch		      1    0.0		   0		0    N/A
KSRMF SGA anchor latch		      1    0.0		   0		0    N/A
KSWL SGA anchor latch		      1    0.0		   0		0    N/A
KSXR hang analysis phase	    187    0.0		   0		0    N/A
KSXR hang analysis phase	    109    0.0		   0		0    N/A
KSXR large replies		      4    0.0		   0		0    N/A
KTF sga latch			      2    0.0		   0	      257    0.0
KTILM latch			      1    0.0		   0		0    N/A
KTU in-memory txn table 	      1    0.0		   0		0    N/A
KTURMA ODPSCN latch		      1    0.0		   0		0    N/A
KTURMA SGA allocation pa	      1    0.0		   0		0    N/A
KWQMN job cache list lat	     88    0.0		   0		0    N/A
Latch for NonceHistory		      1    0.0		   0		0    N/A
Locator state objects po	      1    0.0		   0		0    N/A
Lost write change tracki	      1    0.0		   0		0    N/A
Lsod array latch		     29    0.0		   0		0    N/A
MGA asr alloc latch		     10    0.0		   0		0    N/A
MGA heap latch			     51    0.0		   0		0    N/A
MGA shared context latch	  1,290    0.4	  0.0	   0		0    N/A
MGA shared context root 	     68   10.3	  0.0	   0		0    N/A
MQL Tracking Latch		      0    N/A		   0	       12    0.0
Memory Management Latch 	      0    N/A		   0	      202    0.0
Memory Queue			      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A
Memory Queue Message Sub	      1    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
Memory Queue Subscriber 	      1    0.0		   0		0    N/A
Message cache latch		      1    0.0		   0		0    N/A
MinActiveScn Latch		     30    0.0		   0		0    N/A
Mutex				      1    0.0		   0		0    N/A
<tr><td align="right" class='awrc'>482.32</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>482.32</td><td align="right" class='awrc'>5.11</td><td align="right" class='awrc'>568.79</td><td align="right" class='awrc'>9.72</td><td align="right" class='awrc'>84.80</td><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
Mutex Stats			      1    0.0		   0		0    N/A
Nologging Standby SCN Ti	    199    0.0		   0		0    N/A
OS process			    506    0.0		   0		0    N/A
OS process allocation		  1,249    0.0		   0		0    N/A
OS process: request allo	     29    0.0		   0		0    N/A
PDB Hash Table Latch		      1    0.0		   0		0    N/A
PDB LRU structure		      1    0.0		   0		0    N/A
<td class='awrc'>
PL/SQL warning settings 	     14    0.0		   0		0    N/A
PX hash array latch		      1    0.0		   0		0    N/A
Parent latch for depende	      1    0.0		   0		0    N/A
Parent latch for query h	      1    0.0		   0		0    N/A
SQL*Plus
Parent latch for segment	      1    0.0		   0		0    N/A
QMT				      1    0.0		   0		0    N/A
Real-time descriptor lat	  1,900    0.0		   0		0    N/A
Report Request stats lat	     40    0.0		   0		0    N/A
</td>
Request holder compeltio	      9    0.0		   0		0    N/A
Retry Ht elm latch		      1    0.0		   0		0    N/A
Retry bkt latch 		      1    0.0		   0		0    N/A
SGA Blackbox latch		      3    0.0		   0		0    N/A
SGA Logging Bkt Latch		      1    0.0		   0		0    N/A
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
SGA Logging Log Latch		  2,857    0.0		   0		0    N/A
SGA blob parent 		      1    0.0		   0		0    N/A
SGA bucket locks		      1    0.0		   0		0    N/A
</table><p />
SGA heap locks			      1    0.0		   0		0    N/A
SGA pool locks			      1    0.0		   0		0    N/A
SO private so latch		     55    0.0		   0	       10    0.0
SQL memory manager latch	      1    0.0		   0	      201    0.0
SQL memory manager worka	 13,933    0.0		   0		0    N/A
<hr align="left" width="20%" /><p />
SR Stats Stripe Latch		      1    0.0		   0		0    N/A
Sched IM Job latch		     10    0.0		   0		0    N/A
Sched InMem Job Cache		      1    0.0		   0		0    N/A
Shared B-Tree			     23    0.0		   0		0    N/A
<a class="awr" href="#22">Back to SQL Statistics</a>
Streams Generic 		      1    0.0		   0		0    N/A
Subscriber Ht elm latch 	      1    0.0		   0		0    N/A
Testing 			      1    0.0		   0		0    N/A
Token Manager			      1    0.0		   0		0    N/A
<br /><a class="awr" href="#top">Back to Top</a><p />
Txn Ht elm latch		      1    0.0		   0		0    N/A
Txn bkt latch			      1    0.0		   0		0    N/A
UM object latch 		      1    0.0		   0		0    N/A
WCR: sync			      1    0.0		   0		0    N/A
Write State Object Pool 	      1    0.0		   0		0    N/A
<a class="awr" name="600"></a>
X$KSFQP 			      1    0.0		   0		0    N/A
XDB NFS Security Latch		      1    0.0		   0		0    N/A
XDB unused session pool 	      1    0.0		   0		0    N/A
XDB used session pool		      1    0.0		   0		0    N/A
<h3 class="awr">SQL ordered by Gets</h3>
active checkpoint queue 	 26,844    0.0		   0		0    N/A
active service list		  2,631    0.0		   0	      602    0.2
archive destination		     22    0.0		   0		0    N/A
begin backup scn array		      2    0.0		   0		0    N/A
<ul>
buffer pool			      1    0.0		   0		0    N/A
business card			      5    0.0		   0		0    N/A
cache buffer handles		     56    0.0		   0		0    N/A
cache buffers chains	     17,639,007    0.0	  0.1	   0	2,398,670    0.1
cache buffers lru chain       2,688,319    0.1	  0.0	   0	2,728,066    0.3
<li class="awr"> Resources reported for PL/SQL code includes the resources used by all SQL     statements called by the code. </li>
call allocation 		    152    0.7	  1.0	   0		0    N/A
change notification clie	      1    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
<li class="awr"> %Total - Buffer Gets	as a percentage of Total Buffer Gets </li>
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
channel handle pool latc	     61    0.0		   0		0    N/A
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
channel operations paren	  1,415    0.1	  0.0	   0		0    N/A
checkpoint queue latch	      1,129,582    0.0	  0.2	   0	  382,005    0.0
client/application info 	    104    0.0		   0		0    N/A
compile environment latc	     14    0.0		   0		0    N/A
cp handoff latch		      1    0.0		   0		0    N/A
<li class="awr">Total Buffer Gets:	 5,685,015</li>
cp pool latch			      1    0.0		   0		0    N/A
cp server hash latch		      1    0.0		   0		0    N/A
cp sga latch			      9    0.0		   0		0    N/A
cp srv type state latch 	    607    0.0		   0		0    N/A
<li class="awr">Captured SQL account for   88.5% of Total</li>
cp srv type wait latch		      1    0.0		   0		0    N/A
cr slave free list		      1    0.0		   0		0    N/A
cvmap freelist lock		      1    0.0		   0		0    N/A
deferred cleanup latch		      9    0.0		   0		0    N/A
</ul>
dispatcher info 		      6    0.0		   0		0    N/A
dml lock allocation		      9    0.0		   0		0    N/A
done queue latch		      1    0.0		   0		0    N/A
dtp latch			     28    0.0		   0		0    N/A
dummy allocation		     47    0.0		   0		0    N/A
eighth spare latch - X p	      1    0.0		   0		0    N/A
eleventh spare latch - c	      1    0.0		   0		0    N/A
enqueue freelist latch		      1    0.0		   0	   16,390    0.0
<table border="0" class="tdiff" summary="This table displays top SQL by buffer gets"><tr><th class="awrbg" scope="col">Buffer Gets </th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Gets     per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">	%IO</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
enqueue hash chains		753,130    0.1	  0.3	   0		0    N/A
enqueues			    120    0.0		   0		0    N/A
error message lists		      8    0.0		   0		0    N/A
fifteenth spare latch - 	      1    0.0		   0		0    N/A
file cache latch		     47    0.0		   0		0    N/A
first Audit Vault latch 	      1    0.0		   0		0    N/A
flash file access latch 	      1    0.0		   0		0    N/A
<tr><td align="right" class='awrc'>4,142,224</td><td align="right" class='awrc'>689,468</td><td align="right" class='awrc'>6.01</td><td align="right" class='awrc'>72.86</td><td align="right" class='awrc'>8,941.51</td><td class='awrc'>7</td><td class='awrc'>89.5</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
flashback copy			      1    0.0		   0		0    N/A
fourteenth spare latch -	      1    0.0		   0		0    N/A
fourth Audit Vault latch	      1    0.0		   0		0    N/A
gc element		     10,123,744    0.0	  0.1	   0	  974,009    0.1
<td class='awrc'>
gc xid list			    103    0.0		   0		0    N/A
gcr global ctx			      8    0.0		   0		0    N/A
gcs commit scn state		      1    0.0		   0		0    N/A
gcs nodemap pool		 63,456    0.0	  0.0	   0		0    N/A
gcs opaque info freelist	 86,805    0.0	  1.0	   0		0    N/A
SQL*Plus
gcs partitioned table ha      5,900,956    0.0	  0.0	   0	  140,908    0.0
gcs pcm hashed value buc	      1    0.0		   0		0    N/A
gcs remaster request que	      2    0.0		   0		0    N/A
gcs resource freelist	      2,323,774    0.1	  0.1	   0	1,095,874    0.2
gcs resource hash	     10,243,204    0.0	  0.3	   0	    1,665    0.0
gcs resource scan list		      3    0.0		   0		0    N/A
gcs resource timerq list	      1    0.0		   0		0    N/A
</td>
gcs resource validate li	      1    0.0		   0		0    N/A
gcs shadows freelist	      1,224,747    0.0	  0.0	   0		0    N/A
ges cached resource list	 88,527    0.0	  0.0	   0	   17,746    0.0
ges deadlock list		      4    0.0		   0		0    N/A
ges domain table		254,790    0.0		   0		0    N/A
ges enqueue table freeli	246,760    0.0	  0.1	   0		0    N/A
ges group table 		255,112    0.0		   0		0    N/A
ges process hash list		 10,378    0.0	  1.0	   0		0    N/A
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
ges process parent latch	511,565    0.0		   0		0    N/A
ges process table freeli	     29    0.0		   0		0    N/A
ges remote lock freelist	     88    0.0		   0		0    N/A
ges resource hash list		262,013    0.0	  0.5	   0	      432    0.0
ges resource scan list		      1    0.0		   0		0    N/A
ges resource table freel	    699    0.0		   0		0    N/A
ges s-lock bitvec freeli	     38    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 171-172
<tr><td align="right" class='awrnc'>880,092</td><td align="right" class='awrnc'>121,676</td><td align="right" class='awrnc'>7.23</td><td align="right" class='awrnc'>15.48</td><td align="right" class='awrnc'>1,653.51</td><td class='awrnc'>8.2</td><td class='awrnc'>86</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

<td class='awrnc'>
					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
SQL*Plus
ges timeout list		     47    0.0		   0		2    0.0
ges value block free lis	      1    0.0		   0		0    N/A
global KZLD latch for au	      1    0.0		   0		0    N/A
global tx hash mapping		      1    0.0		   0		0    N/A
granule from data transf	      1    0.0		   0		0    N/A
</td>
gws:Sharding global desc	     42    0.0		   0		0    N/A
hash table Sql Plan Find	      0    N/A		   0		6    0.0
hash table column usage 	      0    N/A		   0	      465    0.0
hash table expression us	      1    0.0		   0		0    N/A
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
hash table sql contorl l	      1    0.0		   0		0    N/A
heartbeat check 		      1    0.0		   0	      291    0.0
heartbeat structure mana	      0    N/A		   0	      303    0.0
imc buf hdl lat 		      1    0.0		   0		0    N/A
imc cr clone buf		      1    0.0		   0		0    N/A
imc hash lat			      1    0.0		   0		0    N/A
imc sj lat			      1    0.0		   0		0    N/A
<tr><td align="right" class='awrc'>306,580</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>306,580.00</td><td align="right" class='awrc'>5.39</td><td align="right" class='awrc'>568.85</td><td class='awrc'>9.6</td><td class='awrc'>85.7</td><td scope="row" class='awrc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
imc srchsp lat			      1    0.0		   0		0    N/A
imc-txn-wrk-lat 		      1    0.0		   0		0    N/A
in-memory area latch		      1    0.0		   0		0    N/A
in-memory columnar segme	      1    0.0		   0		0    N/A
<td class='awrc'>
in-memory columnar ts ex	      1    0.0		   0		0    N/A
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>302,862</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>302,862.00</td><td align="right" class='awrnc'>5.33</td><td align="right" class='awrnc'>568.85</td><td class='awrnc'>9.6</td><td class='awrnc'>85.5</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>296,541</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>296,541.00</td><td align="right" class='awrc'>5.22</td><td align="right" class='awrc'>568.79</td><td class='awrc'>9.7</td><td class='awrc'>84.8</td><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>294,859</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>294,859.00</td><td align="right" class='awrnc'>5.19</td><td align="right" class='awrnc'>568.84</td><td class='awrnc'>7.1</td><td class='awrnc'>90.1</td><td scope="row" class='awrnc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>283,608</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>283,608.00</td><td align="right" class='awrc'>4.99</td><td align="right" class='awrc'>568.07</td><td class='awrc'>8.9</td><td class='awrc'>87</td><td scope="row" class='awrc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>282,189</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>282,189.00</td><td align="right" class='awrnc'>4.96</td><td align="right" class='awrnc'>568.84</td><td class='awrnc'>8.9</td><td class='awrnc'>86.9</td><td scope="row" class='awrnc'><a class="awr" href="#7m9rphfj2sxqy">7m9rphfj2sxqy</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>281,575</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>281,575.00</td><td align="right" class='awrc'>4.95</td><td align="right" class='awrc'>568.80</td><td class='awrc'>8.8</td><td class='awrc'>87.6</td><td scope="row" class='awrc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td>
in-memory global pool la	      1    0.0		   0		0    N/A
<td class='awrc'>
internal temp table obje	      6    0.0		   0		0    N/A
interrupt manipulation		     38    0.0		   0		0    N/A
SQL*Plus
intra txn parallel recov	      1    0.0		   0		0    N/A
</td>
io pool granule metadata	      1    0.0		   0		0    N/A
job workq parent latch		      1    0.0		   0		0    N/A
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
job_queue_processes para	     11    0.0		   0		0    N/A
k2q global data latch		    402    0.0		   0		0    N/A
<tr><td align="right" class='awrnc'>278,038</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>278,038.00</td><td align="right" class='awrnc'>4.89</td><td align="right" class='awrnc'>568.38</td><td class='awrnc'>8.8</td><td class='awrnc'>87</td><td scope="row" class='awrnc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
k2q lock allocation		      1    0.0		   0		0    N/A
kKCN Cqn SGA			      1    0.0		   0		0    N/A
kcb DW scan objtemp hash	      1    0.0		   0		0    N/A
<td class='awrnc'>
kcn buffer chains		      1    0.0		   0		0    N/A
kdlx hb parent latch		      1    0.0		   0		0    N/A
kgb parent			      1    0.0		   0		0    N/A
SQL*Plus
kgnfs mount latch		      1    0.0		   0		0    N/A
kjbr roi instance map		      1    0.0		   0		0    N/A
kjci objects freelist la	    137    0.0		   0		0    N/A
</td>
kjci process context lat	    116    0.0		   0	   30,725    0.0
kjci process list latch 	     75    0.0		   0		0    N/A
kjci request sequence la	     14    0.0		   0		0    N/A
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
kjcipctx state object fr	     21    0.0		   0		0    N/A
kjoedcso state object fr	      9    0.0		   0		0    N/A
kjoeq omni enqueue hash 	      1    0.0		   0		0    N/A
kjoer owner hash bucket 	      1    0.0		   0		0    N/A
kjpm my inst data		     20    0.0		   0		0    N/A
<tr><td align="right" class='awrc'>269,518</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>269,518.00</td><td align="right" class='awrc'>4.74</td><td align="right" class='awrc'>568.03</td><td class='awrc'>8.4</td><td class='awrc'>88.1</td><td scope="row" class='awrc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td>
kjsc Request obj freelis	     42    0.0		   0		0    N/A
kjsc Ring Buffer obj fre	     21    0.0		   0		0    N/A
kjsc protect control req	     21    0.0		   0	    6,056    0.0
<td class='awrc'>
kjsc protect warm up con	    103    0.0		   0		0    N/A
kjsca pkey obj freelist 	      5    0.0		   0		0    N/A
kjsca protect pkey hash 	    698    0.0		   0		0    N/A
SQL*Plus
kjsca protect service ha	  6,076    0.0		   0		0    N/A
kjscpss state object fre	     21    0.0		   0		0    N/A
kokc descriptor allocati	     22    0.0		   0		0    N/A
</td>
kpoxft latch			      0    N/A		   0	       20    0.0
krso process			     21    0.0		   0		0    N/A
ksevn object root latch 	    202    0.0		   0		0    N/A
ksfv messages			      1    0.0		   0		0    N/A
ksi resource reuse count	      1    0.0		   0		0    N/A

<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
<tr><td align="right" class='awrnc'>266,656</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>266,656.00</td><td align="right" class='awrnc'>4.69</td><td align="right" class='awrnc'>568.74</td><td class='awrnc'>8.5</td><td class='awrnc'>87.3</td><td scope="row" class='awrnc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
<td class='awrnc'>
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
ksim group membership ca	     69    0.0		   0		0    N/A
SQL*Plus
ksim membership request 	      0    N/A		   0	      273    0.0
ksns object latch		      1    0.0		   0		0    N/A
kss move lock			      7    0.0		   0		0    N/A
ksuosstats global area		     49    0.0		   0	      231    0.0
ksutcpistat latch		      1    0.0		   0		0    N/A
ksv allocation latch		     20    0.0		   0		0    N/A
</td>
ksv class latch 		 14,218    0.1	  0.0	   0		0    N/A
ksv msg queue latch		    188    0.0		   0	      187    0.0
ksxp shared latch		     29    0.0		   0		0    N/A
ksxp so latch			     29    0.0		   0		0    N/A
ksz_so allocation latch 	     29    0.0		   0		0    N/A
ktfbn latch			    131    0.0		   0		0    N/A
ktm adg jrnls			      1    0.0		   0		0    N/A
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
ktm adg lookuptable leve	      1    0.0		   0		0    N/A
ktm adg space			      1    0.0		   0		0    N/A
ktm adg stages			      1    0.0		   0		0    N/A
ktm adg worklink		      1    0.0		   0		0    N/A
<tr><td align="right" class='awrc'>265,471</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>265,471.00</td><td align="right" class='awrc'>4.67</td><td align="right" class='awrc'>568.83</td><td class='awrc'>8.4</td><td class='awrc'>87.7</td><td scope="row" class='awrc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
ktm global data 		     47    0.0		   0		0    N/A
ktm prv jrnls			      1    0.0		   0		0    N/A
ktmpj HT ls			      1    0.0		   0		0    N/A
<td class='awrc'>
kwqbsn:qsga			     22    0.0		   0		0    N/A
kwslbmdl: metadata latch	     21    0.0		   0		0    N/A
kwslbql: queue latch		      1    0.0		   0		0    N/A
SQL*Plus
kwslbutl: uncommitted tx	      1    0.0		   0		0    N/A
kwsptQcachLt: queue cach	      1    0.0		   0		0    N/A
kwsptTrncTsksLt: trunc t	      1    0.0		   0		0    N/A
</td>
kwsptjobAdPtLt: AdPt lis	     15    0.0		   0		0    N/A
kwsslLat: skiplist latch	      1    0.0		   0		0    N/A
kxfxscanrate_latch		      1    0.0		   0		0    N/A
lgwr LWN SCN			103,107    0.0	  0.2	   0		0    N/A
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
list of block allocation	     46    0.0		   0		0    N/A
loader state object free	      4    0.0		   0		0    N/A
lob segment dispenser la	      1    0.0		   0		0    N/A
lob segment hash table l	     17    0.0		   0		0    N/A
lob segment query latch 	      1    0.0		   0		0    N/A
<tr><td align="right" class='awrnc'>264,765</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>264,765.00</td><td align="right" class='awrnc'>4.66</td><td align="right" class='awrnc'>568.85</td><td class='awrnc'>8.4</td><td class='awrnc'>87.7</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
lock DBA buffer during m	      1    0.0		   0		0    N/A
log write info			      0    N/A		   0	  117,915    3.6
log write worker phase		 14,182    0.0	  0.0	   0		0    N/A
<td class='awrnc'>
logical standby cache		      1    0.0		   0		0    N/A
logminer context allocat	      1    0.0		   0		0    N/A
logminer local			      1    0.0		   0		0    N/A
logminer work area		      1    0.0		   0		0    N/A
SQL*Plus
longop free list parent 	      1    0.0		   0		0    N/A
managed standby 		     20    0.0		   0		0    N/A
message bitmap latch		      1    0.0		   0		0    N/A
</td>
message pool operations 	    666    0.0		   0		0    N/A
messages			581,948    0.0	  0.1	   0		0    N/A
msg queue latch 		      1    0.0		   0		0    N/A
multiblock read objects 	    118    0.0		   0		0    N/A
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
name-service memory obje	     70    0.0		   0		0    N/A
name-service namespace b	  3,109    0.0		   0		0    N/A
name-service pending que	     42    0.0		   0		0    N/A
name-service request		     10    0.0		   0		0    N/A
name-service request que	  6,228    0.0		   0		0    N/A
<tr><td align="right" class='awrc'>259,630</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>259,630.00</td><td align="right" class='awrc'>4.57</td><td align="right" class='awrc'>568.72</td><td class='awrc'>8.1</td><td class='awrc'>88.6</td><td scope="row" class='awrc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
ncodef allocation latch 	      9    0.0		   0		0    N/A
ninth spare latch - X pa	      1    0.0		   0		0    N/A
object queue header free	    640    0.0		   0		0    N/A
<td class='awrc'>
object queue header oper      5,804,825    0.0	  0.2	   0	   16,256    0.0

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
SQL*Plus
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0
</td>

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
object queue memory		      1    0.0		   0		0    N/A
object stats modificatio	     20    0.0		   0		0    N/A
parallel query alloc buf	     68    0.0		   0	       90    0.0
parallel query stats		     15    0.0		   0		0    N/A
parallel txn reco latch 	    636    0.0		   0		0    N/A
parameter table manageme	    110    0.0		   0		0    N/A
<tr><td align="right" class='awrnc'>258,660</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>258,660.00</td><td align="right" class='awrnc'>4.55</td><td align="right" class='awrnc'>568.61</td><td class='awrnc'>8.8</td><td class='awrnc'>86.2</td><td scope="row" class='awrnc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
pdb enqueue hash chains 	      1    0.0		   0		0    N/A
peshm				      1    0.0		   0		0    N/A
pesom_free_list 		      1    0.0		   0		0    N/A
pesom_hash_node 		      1    0.0		   0		0    N/A
pkey global statistics		      1    0.0		   0		0    N/A
pmon dead latch 		      9    0.0		   0		0    N/A
post/wait queue 		 27,172    0.1	  0.0	   0	   27,423    0.1
<td class='awrnc'>
process allocation		  3,036    0.0		   0		0    N/A
process group creation		     29    0.0		   0		0    N/A
process memory detail		      1    0.0		   0		0    N/A
process pkey statistics 	      1    0.0		   0		0    N/A
process queue			     35    0.0		   0		0    N/A
process queue reference 	    529    0.0		   0	      107    0.0
SQL*Plus
qmn task queue latch		     88    0.0		   0		0    N/A
quarantine object		     10    0.0		   0		0    N/A
query server freelists		     32    0.0		   0		0    N/A
</td>
query server process		    438    0.0		   0		2    0.0
queued dump request		      2    0.0		   0		0    N/A
queuing load statistics 	      1    0.0		   0		0    N/A
read-moslty lock queue u	      1    0.0		   0		0    N/A
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
recovery domain hash buc	    319    0.0		   0		0    N/A
redo allocation 		310,906    0.3	  0.2	   0	  519,841    0.4
redo copy			      1    0.0		   0	  520,670    0.1
redo transport task		      1    0.0		   0		0    N/A
redo writing			332,661    0.0	  0.1	   0		0    N/A
<tr><td align="right" class='awrc'>254,661</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>254,661.00</td><td align="right" class='awrc'>4.48</td><td align="right" class='awrc'>568.78</td><td class='awrc'>8.3</td><td class='awrc'>87.6</td><td scope="row" class='awrc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
remote tool request latc	     32    0.0		   0		0    N/A
resmgr group change latc	      9    0.0		   0		0    N/A
resmgr:active threads		     50    0.0		   0	       11    0.0
resmgr:actses change gro	     13    0.0		   0		0    N/A
<td class='awrc'>
resmgr:actses change sta	      1    0.0		   0		0    N/A
resmgr:free threads list	     46    2.2	  0.0	   0		0    N/A
resmgr:plan CPU method		      1    0.0		   0		0    N/A
SQL*Plus
resmgr:plan change alloc	      1    0.0		   0		0    N/A
resmgr:plan change latch	      1    0.0		   0		0    N/A
resmgr:resource group CP	      1    0.0		   0		0    N/A
resmgr:schema config		      6    0.0		   0	       11    0.0
</td>
resmgr:session queuing		      1    0.0		   0		0    N/A
row cache objects		      1    0.0		   0		0    N/A
rt rmv count latch		      0    N/A		   0	      303    0.0
second Audit Vault latch	      1    0.0		   0		0    N/A
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
segmented array pool		    138    0.0		   0		0    N/A
sequence cache			    160    0.0		   0		0    N/A
service drain list		    604    0.0		   0		0    N/A
session allocation		110,627    0.0	  0.0	   0	  110,566    0.0
session idle bit		221,518    0.0	  0.0	   0		0    N/A
<tr><td align="right" class='awrnc'>250,447</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>250,447.00</td><td align="right" class='awrnc'>4.41</td><td align="right" class='awrnc'>568.91</td><td class='awrnc'>7.9</td><td class='awrnc'>88.5</td><td scope="row" class='awrnc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
session queue latch		      1    0.0		   0		0    N/A
session state list latch	     49    0.0		   0		0    N/A
session statistics		     47    0.0		   0		0    N/A
session switching		     34    2.9	  0.0	   0		0    N/A
<td class='awrnc'>
session timer			    202    0.0		   0		0    N/A
seventh spare latch - X 	      1    0.0		   0		0    N/A
sga hash table parent la	      1    0.0		   0		0    N/A
SQL*Plus
shard latch			      1    0.0		   0		0    N/A
shardgroup list latch		     21    0.0		   0		0    N/A

Latch Activity				 DB/Inst: P30DB/p30db1	Snaps: 171-172
</td>
-> "Get Requests", "Pct Get Miss" and "Avg Slps/Miss" are statistics for
   willing-to-wait latch get requests
-> "NoWait Requests", "Pct NoWait Miss" are for no-wait latch get requests
-> "Pct Misses" for both should be very close to 0.0

					   Pct	  Avg	Wait		     Pct
				    Get    Get	 Slps	Time	   NoWait NoWait
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
Latch Name		       Requests   Miss	/Miss	 (s)	 Requests   Miss
------------------------ -------------- ------ ------ ------ ------------ ------
shared pool			  8,705    0.2	  0.0	   0	       12    0.0
shared pool sim alloc		      2    0.0		   0		0    N/A
shared pool simulator		    178    0.0		   0		0    N/A
shared server configurat	    202    0.0		   0		0    N/A
sim partition latch		      1    0.0		   0		0    N/A
simulator hash latch		793,120    0.0		   0		0    N/A
simulator lru latch		      1    0.0		   0	  506,497    0.0
sixth spare latch - X pa	      1    0.0		   0		0    N/A
<tr><td align="right" class='awrc'>249,075</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>249,075.00</td><td align="right" class='awrc'>4.38</td><td align="right" class='awrc'>568.91</td><td class='awrc'>7.9</td><td class='awrc'>88.6</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
sort extent pool		     65    0.0		   0		0    N/A
space background task la	  1,431   43.0	  0.8	   0	      386    4.4
state object free list		      2    0.0		   0		0    N/A
statistics aggregation		    145    0.0		   0		0    N/A
subscriber Ht bkt		      1    0.0		   0		0    N/A
<td class='awrc'>
tablespace key chain		      1    0.0		   0		0    N/A
temp lob duration state 	     10    0.0		   0		0    N/A
temporary table state ob	      2    0.0		   0		0    N/A
tenth spare latch - X pa	      1    0.0		   0		0    N/A
SQL*Plus
test excl. parent l0		      1    0.0		   0		0    N/A
test excl. parent2 l0		      1    0.0		   0		0    N/A
test excl. parent2 lmid 	      1    0.0		   0		0    N/A
</td>
test mixed exclusive		      1    0.0		   0		0    N/A
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
test mode exclusive		      1    0.0		   0		0    N/A
<tr><td align="right" class='awrnc'>248,280</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>248,280.00</td><td align="right" class='awrnc'>4.37</td><td align="right" class='awrnc'>568.60</td><td class='awrnc'>8</td><td class='awrnc'>88.1</td><td scope="row" class='awrnc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
test open exclusive		      1    0.0		   0		0    N/A
test pdb exclusive		      1    0.0		   0		0    N/A
test shared parent2 lmid	      1    0.0		   0		0    N/A
thirteenth spare latch -	      1    0.0		   0		0    N/A
<td class='awrnc'>
threshold alerts latch		     20    0.0		   0		0    N/A
transaction allocation		     46    0.0		   0		0    N/A
twelfth spare latch - ch	      1    0.0		   0		0    N/A
SQL*Plus
twenty-fifth spare latch	      1    0.0		   0		0    N/A
twenty-first spare latch	      1    0.0		   0		0    N/A
twenty-fourth spare latc	      1    0.0		   0		0    N/A
twenty-second spare latc	      1    0.0		   0		0    N/A
</td>
twenty-third spare latch	      1    0.0		   0		0    N/A
undo global data		385,985    0.0	  0.2	   0		0    N/A
virtual circuit buffers 	      1    0.0		   0		0    N/A
virtual circuit holder		      1    0.0		   0		0    N/A
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
virtual circuit queues		      1    0.0		   0		0    N/A
			  ------------------------------------------------------


<tr><td align="right" class='awrc'>246,793</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>246,793.00</td><td align="right" class='awrc'>4.34</td><td align="right" class='awrc'>568.57</td><td class='awrc'>8</td><td class='awrc'>88</td><td scope="row" class='awrc'><a class="awr" href="#bzs4fu7kk84h3">bzs4fu7kk84h3</a></td>
Latch Sleep Breakdown			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> ordered by misses desc

				       Get				   Spin
Latch Name			  Requests	 Misses      Sleeps	   Gets
<td class='awrc'>
-------------------------- --------------- ------------ ----------- -----------
cache buffers lru chain 	 2,688,319	  3,766 	142	  3,626
gc element			10,123,744	  2,253 	218	  2,052
SQL*Plus
KJCT flow control latch 	 2,228,776	  2,059 	153	  1,915
gcs resource freelist		 2,323,774	  1,645 	218	  1,448
gcs resource hash		10,243,204	  1,199 	325	    891
redo allocation 		   310,906	    783 	148	    643
</td>
enqueue hash chains		   753,130	    622 	208	    430
space background task latc	     1,431	    615 	505	    153
cache buffers chains		17,639,007	    350 	 20	    330
messages			   581,948	    154 	 11	    144
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
object queue header operat	 5,804,825	    136 	 21	    117
ges enqueue table freelist	   246,760	    108 	 14	     96
ASM map operation hash tab	 5,855,132	    104 	 13	     91
redo writing			   332,661	     50 	  5	     45
</table><p />
DML lock allocation		   245,006	     27 	  2	     25
lgwr LWN SCN			   103,107	     26 	  5	     21
KJC message pool free list	    60,846	     23 	  3	     20
undo global data		   385,985	     22 	  5	     17
<hr align="left" width="20%" /><p />
ges resource hash list		   262,013	     17 	  9	      9
checkpoint queue latch		 1,129,582	     15 	  3	     12
Consistent RBA			   100,849	      5 	  3	      3
call allocation 		       152	      1 	  1	      0
<a class="awr" href="#22">Back to SQL Statistics</a>
gcs opaque info freelist	    86,805	      1 	  1	      0
ges process hash list		    10,378	      1 	  1	      0
			  ------------------------------------------------------


<br /><a class="awr" href="#top">Back to Top</a><p />
Latch Miss Sources			 DB/Inst: P30DB/p30db1	Snaps: 171-172
<a class="awr" name="700"></a>
-> only latches with sleeps are shown
-> ordered by name, sleeps desc
<h3 class="awr">SQL ordered by Reads</h3>

						     NoWait		 Waiter
<ul>
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
ASM map operation hash t kffmTranslate			  0	     8	     11
ASM map operation hash t kffmDoDone_1			  0	     5	      2
<li class="awr"> %Total - Physical Reads as a percentage of Total Disk Reads </li>
DML lock allocation	 ktaiam 			  0	     2	      1
KJC message pool free li kjcsmpav: allocate a msg b	  0	     2	      3
KJC message pool free li kjcspfmbq: free vector of	  0	     1	      0
KJCT flow control latch  kjctcsnd: send normal mess	  0	    94	     94
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
KJCT flow control latch  kjcts_sedeqv3: dequeue a v	  0	    25	      6
KJCT flow control latch  kjcts_sqenq: queue a messa	  0	    17	     21
KJCT flow control latch  kjctr_updatetkt: update ti	  0	     9	     16
KJCT flow control latch  kjctr_releasetkt: change t	  0	     7	      7
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
KJCT flow control latch  kjcts_sqenq2: queue a mess	  0	     1	      7
cache buffers chains	 kcbgtcr: slow path excl	  0	     6	      0
cache buffers chains	 kcbzgb: scan from tail now	  0	     4	      0
cache buffers chains	 kclbla 			  0	     3	      0
<li class="awr">Total Disk Reads:	2,350,386</li>
cache buffers chains	 kcbbic2			  0	     2	      1
cache buffers chains	 kcbbic1			  0	     1	      0
cache buffers chains	 kcbchg: aux pin		  0	     1	      1
<li class="awr">Captured SQL account for   99.6% of Total</li>
cache buffers chains	 kcbchg: change complete	  0	     1	      0
cache buffers chains	 kcbgtcr: convert latch 	  0	     1	      0
cache buffers chains	 kcbgtcr: fast path exam	  0	     1	      3
cache buffers chains	 kcbzib: finish processing	  0	     1	      1
</ul>
cache buffers chains	 kclpdcl			  0	     1	      0
cache buffers lru chain  kcbzgb_2			  0	   121	     37
cache buffers lru chain  kcbzgws			  0	    18	      0
cache buffers lru chain  kcbbwlru			  0	     2	     83
cache buffers lru chain  kcbo_write_bufs		  0	     1	      2
call allocation 	 ksuxds 			  0	     1	      0
checkpoint queue latch	 kcbklbc_cql			  0	     3	      0
<table border="0" class="tdiff" summary="This table displays top SQL by physical reads"><tr><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">Reads	  per Exec  </th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed  Time (s)</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
gc element		 kclnfndnewm			  0	   149	     78
gc element		 kclulb 			  0	    18	     68
gc element		 kclfwrite1			  0	    14	      9
gc element		 kclplz 			  0	    11	      0
gc element		 KCLUNLNK			  0	     8	     33
gc element		 kclpdcl			  0	     7	      0
gc element		 kclnfnds			  0	     6	     23
gc element		 kclrwrite			  0	     5	      7
<tr><td align="right" class='awrc'>1,989,075</td><td align="right" class='awrc'>689,468</td><td align="right" class='awrc'>2.88</td><td align="right" class='awrc'>84.63</td><td align="right" class='awrc'>8,941.51</td><td align="right" class='awrc'>6.96</td><td align="right" class='awrc'>89.48</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
gc element		 kclplz_1			  0	     2	      2
gc element		 kclantilock_1			  0	     1	      0
gc element		 kclebs 			  0	     1	      3
gc element		 kclhngcbk1			  0	     1	      0
<td class='awrc'>
gc element		 kclrwrite_1			  0	     1	      0
gcs opaque info freelist kjbrinfoalloc			  0	     1	      1
gcs resource freelist	 kjbralc: check freelist no	  0	   144	      0
gcs resource freelist	 kjbralc add resource		  0	    42	    176
SQL*Plus
gcs resource freelist	 kjbrralc: reserve allocati	  0	    20	      9
gcs resource freelist	 kjbrfr_bg2			  0	    12	     33
gcs resource hash	 kjbcropen			  0	   141	     67
gcs resource hash	 kclfwrite1			  0	    91	      9
</td>
gcs resource hash	 kjbopen			  0	    28	     15
gcs resource hash	 kjbclose_remaster		  0	    19	     42
gcs resource hash	 kjbassume			  0	    15	     27
gcs resource hash	 kjbmpopen			  0	    11	     45
gcs resource hash	 kjbmpclose			  0	     6	     31
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
gcs resource hash	 kclpdc 			  0	     4	     56
gcs resource hash	 kjbconvert			  0	     3	      0
gcs resource hash	 kclrwrite			  0	     2	     11
gcs resource hash	 kjblocalobj_nolock		  0	     2	      5
gcs resource hash	 kjbopen:affinity		  0	     1	      0
gcs resource hash	 kjbrdowncvt			  0	     1	      0
<tr><td align="right" class='awrnc'>350,978</td><td align="right" class='awrnc'>121,676</td><td align="right" class='awrnc'>2.88</td><td align="right" class='awrnc'>14.93</td><td align="right" class='awrnc'>1,653.51</td><td align="right" class='awrnc'>8.20</td><td align="right" class='awrnc'>86.00</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
gcs resource hash	 kjbrprmexpack			  0	     1	      0

Latch Miss Sources			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> only latches with sleeps are shown
-> ordered by name, sleeps desc
<td class='awrnc'>

						     NoWait		 Waiter
Latch Name		 Where			     Misses	Sleeps	 Sleeps
------------------------ -------------------------- ------- ---------- --------
SQL*Plus
ges enqueue table freeli kjlalc: lock allocation	  0	    14	      6
ges process hash list	 kjakiqa: set inquiry respo	  0	     1	      0
ges resource hash list	 kjakcai: search for resp b	  0	     5	      0
</td>
ges resource hash list	 kjrmas1: lookup master nod	  0	     3	      0
ges resource hash list	 kjlmfnd: search for lockp	  0	     1	      3
messages		 ksarcv 			  0	     7	      1
messages		 ksaamb: after wakeup		  0	     2	      6
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
messages		 ksarcv: after wait		  0	     2	      4
mostly latch-free SCN	 kcs024 			  0	     5	      0
mostly latch-free SCN	 kcsnew_scn_rba 		  0	     3	      0
object queue header oper kcbo_unlink_q			  0	    19	     12
object queue header oper kcbo_link_q			  0	     3	      3
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	   116	      0
<tr><td align="right" class='awrc'>138,731</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>138,731.00</td><td align="right" class='awrc'>5.90</td><td align="right" class='awrc'>568.85</td><td align="right" class='awrc'>9.59</td><td align="right" class='awrc'>85.74</td><td scope="row" class='awrc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
redo allocation 	 kcrfw_redo_write: before w	  0	    15	     38
redo allocation 	 kcrfw_post: more space 	  0	    13	     31
redo allocation 	 kcrfw_redo_gen: redo alloc	  0	     4	     79
redo writing		 kcrfw_post: rba scn pair	  0	     2	      0
<td class='awrc'>
redo writing		 kcrfw_cal_target_rba		  0	     1	      4
redo writing		 kcrfw_post: after write	  0	     1	      0
redo writing		 kcrfwcr			  0	     1	      1
space background task la ktsj_grab_task 		  0	   344	    488
SQL*Plus
space background task la ktsj_detach_task		  0	   115	     17
space background task la ktsj_smco_purgeexpired 	  0	    42	      0
space background task la ktsj_smco_movetasks		  0	     4	      0
undo global data	 ktudnx:child			  0	     3	      3
</td>
undo global data	 ktudba: KSLBEGIN		  0	     1	      1
undo global data	 ktufrbs_2			  0	     1	      1
unknown latch		 ksqgtl3			  0	    64	     83
unknown latch		 ksqcmi: if lk mode not req	  0	    58	      5
unknown latch		 ksqcmi: if lk mode request	  0	    43	      8
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
unknown latch		 ksqrcl 			  0	    42	    112
unknown latch		 ksqcnl 			  0	     1	      0
			  ------------------------------------------------------

Mutex Sleep Summary			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
<tr><td align="right" class='awrnc'>137,221</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>137,221.00</td><td align="right" class='awrnc'>5.84</td><td align="right" class='awrnc'>568.85</td><td align="right" class='awrnc'>9.65</td><td align="right" class='awrnc'>85.49</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
			  ------------------------------------------------------


Parent Latch Statistics 		 DB/Inst: P30DB/p30db1	Snaps: 171-172

<td class='awrnc'>
		  No data exists for this section of the report.
			  ------------------------------------------------------

Child Latch Statistics			 DB/Inst: P30DB/p30db1	Snaps: 171-172

SQL*Plus
		  No data exists for this section of the report.
			  ------------------------------------------------------


Segments by Logical Reads		 DB/Inst: P30DB/p30db1	Snaps: 171-172
</td>
-> Total Logical Reads:       5,685,015
-> Captured Segments account for   81.9% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				 Logical
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER3		     IOPS
I_CF1				INDEX	   73417      73417	 145,024    2.55
USER3		     IOPS
CF1				TABLE	   73413      73416	 144,672    2.54
<tr><td align="right" class='awrc'>134,631</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>134,631.00</td><td align="right" class='awrc'>5.73</td><td align="right" class='awrc'>568.79</td><td align="right" class='awrc'>9.72</td><td align="right" class='awrc'>84.80</td><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
USER7		     IOPS
I_CF1				INDEX	   73438      73438	 143,264    2.52
USER7		     IOPS
CF1				TABLE	   73433      73436	 142,928    2.51
USER28		     IOPS
I_CF1				INDEX	   73549      73549	 140,240    2.47
			  ------------------------------------------------------

<td class='awrc'>
Segments by Physical Reads		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Physical Reads:       2,350,386
-> Captured Segments account for   99.6% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
SQL*Plus
		     Subobject	Obj.				Physical
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER3		     IOPS
</td>
CF1				TABLE	   73413      73416	 138,333    5.89
USER7		     IOPS
CF1				TABLE	   73433      73436	 136,847    5.82
USER28		     IOPS
CF1				TABLE	   73541      73548	 134,261    5.71
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
USER16		     IOPS
CF1				TABLE	   73481      73483	 133,752    5.69
USER11		     IOPS
CF1				TABLE	   73449      73456	 128,837    5.48
			  ------------------------------------------------------

Segments by Physical Read Requests	 DB/Inst: P30DB/p30db1	Snaps: 171-172
<tr><td align="right" class='awrnc'>134,106</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>134,106.00</td><td align="right" class='awrnc'>5.71</td><td align="right" class='awrnc'>568.84</td><td align="right" class='awrnc'>7.13</td><td align="right" class='awrnc'>90.15</td><td scope="row" class='awrnc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
-> Total Physical Read Requests:       2,350,386
-> Captured Segments account for   99.6% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
<td class='awrnc'>
Owner			Name
-------------------- ----------
		     Subobject	Obj.			       Phys Read
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total
SQL*Plus
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER3		     IOPS
CF1				TABLE	   73413      73416	 138,333    5.89
USER7		     IOPS
CF1				TABLE	   73433      73436	 136,847    5.82
</td>
USER28		     IOPS
CF1				TABLE	   73541      73548	 134,261    5.71
USER16		     IOPS
CF1				TABLE	   73481      73483	 133,752    5.69
USER11		     IOPS
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
CF1				TABLE	   73449      73456	 128,837    5.48
			  ------------------------------------------------------

<tr><td align="right" class='awrc'>128,992</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>128,992.00</td><td align="right" class='awrc'>5.49</td><td align="right" class='awrc'>568.07</td><td align="right" class='awrc'>8.95</td><td align="right" class='awrc'>86.97</td><td scope="row" class='awrc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>128,317</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>128,317.00</td><td align="right" class='awrnc'>5.46</td><td align="right" class='awrnc'>568.84</td><td align="right" class='awrnc'>8.87</td><td align="right" class='awrnc'>86.92</td><td scope="row" class='awrnc'><a class="awr" href="#7m9rphfj2sxqy">7m9rphfj2sxqy</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>128,128</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>128,128.00</td><td align="right" class='awrc'>5.45</td><td align="right" class='awrc'>568.80</td><td align="right" class='awrc'>8.75</td><td align="right" class='awrc'>87.62</td><td scope="row" class='awrc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>126,467</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>126,467.00</td><td align="right" class='awrnc'>5.38</td><td align="right" class='awrnc'>568.38</td><td align="right" class='awrnc'>8.78</td><td align="right" class='awrnc'>87.03</td><td scope="row" class='awrnc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>122,705</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>122,705.00</td><td align="right" class='awrc'>5.22</td><td align="right" class='awrc'>568.03</td><td align="right" class='awrc'>8.39</td><td align="right" class='awrc'>88.11</td><td scope="row" class='awrc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>121,177</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>121,177.00</td><td align="right" class='awrnc'>5.16</td><td align="right" class='awrnc'>568.74</td><td align="right" class='awrnc'>8.49</td><td align="right" class='awrnc'>87.32</td><td scope="row" class='awrnc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>121,094</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>121,094.00</td><td align="right" class='awrc'>5.15</td><td align="right" class='awrc'>568.83</td><td align="right" class='awrc'>8.38</td><td align="right" class='awrc'>87.73</td><td scope="row" class='awrc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
<td class='awrc'>
SQL*Plus
Segments by UnOptimized Reads		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total UnOptimized Read Requests:	  2,350,386
-> Captured Segments account for   99.6% of Total
</td>
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
Owner			Name
-------------------- ----------
		     Subobject	Obj.			     UnOptimized
Object Name	       Name	Type	    Obj#   Dataobj#	   Reads  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
<tr><td align="right" class='awrnc'>120,658</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>120,658.00</td><td align="right" class='awrnc'>5.13</td><td align="right" class='awrnc'>568.85</td><td align="right" class='awrnc'>8.39</td><td align="right" class='awrnc'>87.72</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
USER3		     IOPS
CF1				TABLE	   73413      73416	 138,333    5.89
USER7		     IOPS
<td class='awrnc'>
CF1				TABLE	   73433      73436	 136,847    5.82
USER28		     IOPS
CF1				TABLE	   73541      73548	 134,261    5.71
USER16		     IOPS
SQL*Plus
CF1				TABLE	   73481      73483	 133,752    5.69
USER11		     IOPS
CF1				TABLE	   73449      73456	 128,837    5.48
</td>
			  ------------------------------------------------------

Segments by Optimized Reads		 DB/Inst: P30DB/p30db1	Snaps: 171-172
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by Direct Physical Reads	 DB/Inst: P30DB/p30db1	Snaps: 171-172
<tr><td align="right" class='awrc'>118,362</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>118,362.00</td><td align="right" class='awrc'>5.04</td><td align="right" class='awrc'>568.72</td><td align="right" class='awrc'>8.07</td><td align="right" class='awrc'>88.59</td><td scope="row" class='awrc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>

		  No data exists for this section of the report.
<td class='awrc'>
			  ------------------------------------------------------

Segments by Physical Writes		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Physical Writes:	  337,949
SQL*Plus
-> Captured Segments account for   96.4% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

</td>
		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				Physical
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER16		     IOPS
CF1				TABLE	   73481      73483	  21,252    6.29
USER3		     IOPS
<tr><td align="right" class='awrnc'>117,715</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>117,715.00</td><td align="right" class='awrnc'>5.01</td><td align="right" class='awrnc'>568.61</td><td align="right" class='awrnc'>8.79</td><td align="right" class='awrnc'>86.15</td><td scope="row" class='awrnc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
CF1				TABLE	   73413      73416	  19,108    5.65
USER7		     IOPS
CF1				TABLE	   73433      73436	  18,818    5.57
USER28		     IOPS
<td class='awrnc'>
CF1				TABLE	   73541      73548	  18,508    5.48
USER11		     IOPS
CF1				TABLE	   73449      73456	  17,629    5.22
			  ------------------------------------------------------
SQL*Plus

Segments by Physical Write Requests	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Physical Write Requests:	  324,628
</td>
-> Captured Segments account for   99.6% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
Owner			Name
-------------------- ----------
		     Subobject	Obj.			      Phys Write
Object Name	       Name	Type	    Obj#   Dataobj#	Requests  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
<tr><td align="right" class='awrc'>116,260</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>116,260.00</td><td align="right" class='awrc'>4.95</td><td align="right" class='awrc'>568.78</td><td align="right" class='awrc'>8.32</td><td align="right" class='awrc'>87.60</td><td scope="row" class='awrc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
USER16		     IOPS
CF1				TABLE	   73481      73483	  21,221    6.54
USER3		     IOPS
<td class='awrc'>
CF1				TABLE	   73413      73416	  18,954    5.84
USER7		     IOPS
CF1				TABLE	   73433      73436	  18,648    5.74
USER28		     IOPS
SQL*Plus
CF1				TABLE	   73541      73548	  18,361    5.66
USER11		     IOPS
CF1				TABLE	   73449      73456	  17,482    5.39
</td>
			  ------------------------------------------------------

Segments by Direct Physical Writes	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Direct Physical Writes:	      62
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
-> Captured Segments account for  100.0% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
		     Subobject	Obj.				  Direct
<tr><td align="right" class='awrnc'>114,102</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>114,102.00</td><td align="right" class='awrnc'>4.85</td><td align="right" class='awrnc'>568.91</td><td align="right" class='awrnc'>7.95</td><td align="right" class='awrnc'>88.48</td><td scope="row" class='awrnc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
Object Name	       Name	Type	    Obj#   Dataobj#	  Writes  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
SYS		     SYSAUX
<td class='awrnc'>
WRH$_ACTIVE_SESSION_ 773525_131 TABLE	   74322      74322	      62  100.00
			  ------------------------------------------------------

Segments by Table Scans 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
SQL*Plus

		  No data exists for this section of the report.
			  ------------------------------------------------------

</td>
Segments by DB Blocks Changes		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> % of Capture shows % of DB Block Changes for each top segment compared
-> with total DB Block Changes for all segments captured by the Snapshot
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
<tr><td align="right" class='awrc'>113,318</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>113,318.00</td><td align="right" class='awrc'>4.82</td><td align="right" class='awrc'>568.91</td><td align="right" class='awrc'>7.92</td><td align="right" class='awrc'>88.62</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
		     Subobject	Obj.				DB Block    % of
Object Name	       Name	Type	    Obj#   Dataobj#	 Changes Capture
-------------------- ---------- ----- ---------- ---------- ------------ -------
<td class='awrc'>
USER3		     IOPS
CF1				TABLE	   73413      73416	  21,696    5.85
USER10		     IOPS
CF1				TABLE	   73453      73455	  21,664    5.84
USER7		     IOPS
CF1				TABLE	   73433      73436	  21,424    5.78
SQL*Plus
USER28		     IOPS
CF1				TABLE	   73541      73548	  20,976    5.66
USER16		     IOPS
CF1				TABLE	   73481      73483	  20,752    5.59
			  ------------------------------------------------------


</td>
Segments by Row Lock Waits		 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

Segments by ITL Waits			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
			  ------------------------------------------------------

Segments by Buffer Busy Waits		 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
<tr><td align="right" class='awrnc'>113,149</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>113,149.00</td><td align="right" class='awrnc'>4.81</td><td align="right" class='awrnc'>568.60</td><td align="right" class='awrnc'>8.04</td><td align="right" class='awrnc'>88.12</td><td scope="row" class='awrnc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
			  ------------------------------------------------------

Segments by Global Cache Buffer Busy	 DB/Inst: P30DB/p30db1	Snaps: 171-172

<td class='awrnc'>
		  No data exists for this section of the report.
			  ------------------------------------------------------


SQL*Plus
Segments by CR Blocks Received		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total CR Blocks Received:	       2,788
-> Captured Segments account for   96.9% of Total
</td>
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
								   CR
		     Subobject	Obj.				 Blocks
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER20		     IOPS
<tr><td align="right" class='awrc'>112,280</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>112,280.00</td><td align="right" class='awrc'>4.78</td><td align="right" class='awrc'>568.57</td><td align="right" class='awrc'>8.02</td><td align="right" class='awrc'>88.01</td><td scope="row" class='awrc'><a class="awr" href="#bzs4fu7kk84h3">bzs4fu7kk84h3</a></td>
CF1				TABLE	   73501      73506	     404   14.49
USER21		     IOPS
CF1				TABLE	   73503      73505	     370   13.27
USER40		     IOPS
<td class='awrc'>
CF1				TABLE	   73603      73605	     233    8.36
USER32		     IOPS
CF1				TABLE	   73562      73567	     231    8.29
USER13		     IOPS
SQL*Plus
CF1				TABLE	   73458      73466	     224    8.03
			  ------------------------------------------------------

</td>
Segments by Current Blocks Received	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Current Blocks Received:	   11,163
-> Captured Segments account for   97.0% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>

		     Tablespace
Owner			Name
-------------------- ----------
</table><p />
								 Current
		     Subobject	Obj.				 Blocks
Object Name	       Name	Type	    Obj#   Dataobj#	Received  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
<hr align="left" width="20%" /><p />
USER21		     IOPS
CF1				TABLE	   73503      73505	   1,289   11.55
USER20		     IOPS
CF1				TABLE	   73501      73506	   1,241   11.12
<a class="awr" href="#22">Back to SQL Statistics</a>
USER17		     IOPS
CF1				TABLE	   73486      73488	     804    7.20
USER32		     IOPS
CF1				TABLE	   73562      73567	     780    6.99
<br /><a class="awr" href="#top">Back to Top</a><p />
USER40		     IOPS
CF1				TABLE	   73603      73605	     773    6.92
			  ------------------------------------------------------

Segments by Global Cache Remote Grants	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Global Cache Remote Grants:	   1,155,964
<a class="awr" name="740"></a>
-> Captured Segments account for   99.6% of Total
-> When ** MISSING ** occurs, some of the object attributes may not be available

		     Tablespace
Owner			Name
-------------------- ----------
								      GC
		     Subobject	Obj.				  Remote
<h3 class="awr">SQL ordered by Physical Reads (UnOptimized)</h3>
Object Name	       Name	Type	    Obj#   Dataobj#	  Grants  %Total
-------------------- ---------- ----- ---------- ---------- ------------ -------
USER28		     IOPS
CF1				TABLE	   73541      73548	  78,504    6.79
<ul>
USER7		     IOPS
CF1				TABLE	   73433      73436	  72,461    6.27
USER40		     IOPS
CF1				TABLE	   73603      73605	  72,045    6.23
USER3		     IOPS
<li class="awr"> UnOptimized Read Reqs = Physical Read Reqs -	    (Optimized Read Reqs - Cell Flash Cache Read Hits for Controlfile) </li>
CF1				TABLE	   73413      73416	  70,370    6.09
USER11		     IOPS
CF1				TABLE	   73449      73456	  64,592    5.59
			  ------------------------------------------------------
<li class="awr"> %Opt	- Optimized Reads as percentage of SQL Read Requests </li>


Dictionary Cache Stats			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> "Pct Misses"  should be very low (< 2% in most cases)
<li class="awr"> %Total - UnOptimized Read Reqs as a percentage of Total UnOptimized Read Reqs</li>
-> "Final Usage" is the number of cache entries being used

				   Get	  Pct	 Scan	Pct	 Mod	  Final
Cache			      Requests	 Miss	 Reqs  Miss	Reqs	  Usage
<li class="awr">Total Physical Read Requests:	    2,350,386</li>
------------------------- ------------ ------ ------- ----- -------- ----------
dc_awr_control			    18	  0.0	    0	N/A	   4	      1
dc_global_oids			   168	  2.4	    0	N/A	   0	    207
dc_histogram_data		   367	  0.0	    0	N/A	   0	  3,578
<li class="awr">Captured SQL account for    4.8% of Total</li>
dc_histogram_defs		   124	  0.0	    0	N/A	   0	  6,746
dc_objects			   897	  0.1	    0	N/A	   0	  2,818
dc_profiles			     2	  0.0	    0	N/A	   0	      1
dc_props			   492	  0.0	    0	N/A	   0	      4
<li class="awr">Total UnOptimized Read Requests:       2,350,386</li>
dc_rollback_segments		   981	  0.0	    0	N/A	   0	    320
dc_segments			    31	  6.5	    0	N/A	   1	    677
<li class="awr">Captured SQL account for    4.8% of Total</li>
dc_sequences			     5	 20.0	    0	N/A	   5	      6
dc_tablespaces			   159	  0.0	    0	N/A	   0	      7
dc_users			   166	  0.0	    4	0.0	   0	    233
outstanding_alerts		     2	100.0	    0	N/A	   0	      2
<li class="awr">Total Optimized Read Requests:		     1</li>
			  ------------------------------------------------------

Dictionary Cache Stats (RAC)		 DB/Inst: P30DB/p30db1	Snaps: 171-172

<li class="awr">Captured SQL account for    0.0% of Total</li>
		  No data exists for this section of the report.
			  ------------------------------------------------------

Library Cache Activity			 DB/Inst: P30DB/p30db1	Snaps: 171-172
</ul>
-> "Pct Misses"  should be very low

			 Get	Pct	       Pin    Pct	      Invali-
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations
--------------- ------------ ------ -------------- ------ ---------- --------
ACCOUNT_STATUS		   4	0.0		 0    N/A	   0	    0
<table border="0" class="tdiff" summary="This table displays top SQL by unoptimized read requests"><tr><th class="awrbg" scope="col">UnOptimized Read Reqs</th><th class="awrbg" scope="col">Physical  Read Reqs</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">UnOptimized Reqs per Exec</th><th class="awrbg" scope="col">%Opt</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
AUDIT POLICY		   2	0.0		 2    0.0	   0	    0
BODY			  36	0.0		55    0.0	   0	    0
DBLINK			   4	0.0		 0    N/A	   0	    0
EDITION 		   3	0.0		 6    0.0	   0	    0
INDEX			  17	0.0		17    0.0	   0	    0
<tr><td align="right" class='awrc'>138,731</td><td align="right" class='awrc'>138,731</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>138,731.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.90</td><td scope="row" class='awrc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
SCHEMA			   1	0.0		 0    N/A	   0	    0
SQL AREA		 403	4.5	   816,658   -0.1	   2	    2
<td class='awrc'>
SQL AREA BUILD		  14   64.3		 0    N/A	   0	    0
SQL AREA STATS		  16   87.5		16   87.5	   0	    0
TABLE/PROCEDURE 	  59	0.0	       451    0.0	   0	    0
TRIGGER 		   7	0.0		 7    0.0	   0	    0
			  ------------------------------------------------------

Library Cache Activity (RAC)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
SQL*Plus

		    GES Lock	  GES Pin      GES Pin	 GES Inval GES Invali-
Namespace	    Requests	 Requests     Releases	  Requests     dations
--------------- ------------ ------------ ------------ ----------- -----------
ACCOUNT_STATUS		   4		0	     0		 0	     0
AUDIT POLICY		   2		2	     2		 0	     0
</td>
BODY			   0	       55	    55		 0	     0
DBLINK			   4		0	     0		 0	     0
EDITION 		   3		3	     3		 0	     0
INDEX			  17	       17	    17		 0	     0
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
SCHEMA			   1		0	     0		 0	     0
TABLE/PROCEDURE 	 137	      312	   312		 0	     0
TRIGGER 		   0		7	     7		 0	     0
			  ------------------------------------------------------


<tr><td align="right" class='awrnc'>137,221</td><td align="right" class='awrnc'>137,221</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>137,221.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.84</td><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
Memory Dynamic Components		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Min/Max sizes since instance startup
-> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred
<td class='awrnc'>
-> ordered by Component

		 Begin Snap	Current 	Min	    Max   Oper Last Op
Component	  Size (Mb)   Size (Mb)   Size (Mb)   Size (Mb)  Count Typ/Mod
SQL*Plus
--------------- ----------- ----------- ----------- ----------- ------ -------
ASM Buffer Cach 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 16K buf 	.00	    .00 	.00	    .00      0 STA/
</td>
DEFAULT 2K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 32K buf 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 4K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT 8K buff 	.00	    .00 	.00	    .00      0 STA/
DEFAULT buffer	   8,000.00    8,000.00    8,000.00    8,000.00      0 INI/
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
Data Transfer C 	.00	    .00 	.00	    .00      0 STA/
In Memory RO Ex 	.00	    .00 	.00	    .00      0 STA/
In Memory RW Ex 	.00	    .00 	.00	    .00      0 STA/
In-Memory Area		.00	    .00 	.00	    .00      0 STA/
KEEP buffer cac 	.00	    .00 	.00	    .00      0 STA/
<tr><td align="right" class='awrc'>134,631</td><td align="right" class='awrc'>134,631</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>134,631.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.73</td><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
PGA Target	   3,232.00    3,232.00    3,232.00    3,232.00      0 STA/
RECYCLE buffer		.00	    .00 	.00	    .00      0 STA/
SGA Target	   9,664.00    9,664.00    9,664.00    9,664.00      0 STA/
Shared IO Pool	     128.00	 128.00      128.00	 128.00      0 STA/
<td class='awrc'>
java pool		.00	    .00 	.00	    .00      0 STA/
large pool	      64.00	  64.00       64.00	  64.00      0 STA/
memoptimize buf 	.00	    .00 	.00	    .00      0 STA/
SQL*Plus
shared pool	   1,440.00    1,440.00    1,440.00    1,440.00      0 STA/
streams pool		.00	    .00 	.00	    .00      0 STA/
unified pga poo 	.00	    .00 	.00	    .00      0 STA/
			  ------------------------------------------------------
</td>

Memory Resize Operations Summary	 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
			  ------------------------------------------------------

Memory Resize Ops			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
<tr><td align="right" class='awrnc'>134,106</td><td align="right" class='awrnc'>134,106</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>134,106.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.71</td><td scope="row" class='awrnc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
			  ------------------------------------------------------

Process Memory Summary			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> B: Begin Snap   E: End Snap
<td class='awrnc'>
-> All rows below contain absolute values (i.e. not diffed over the interval)
-> Max Alloc is Maximum PGA Allocation size at snapshot time
-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
SQL*Plus
-> ordered by Begin/End snapshot, Alloc (MB) desc
-> Top 10 containers by Alloc (MB) at end snapshot time are displayed

							     Hist
</td>
				     Avg  Std Dev     Max     Max
		Alloc	   Used    Alloc    Alloc   Alloc   Alloc    Num    Num
   Category	 (MB)	   (MB)     (MB)     (MB)    (MB)    (MB)   Proc  Alloc
 - -------- --------- --------- -------- -------- ------- ------- ------ ------
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
B Freeable     144.6	    .0	    4.3      7.8      32     N/A     34     34
  Other        595.7	   N/A	    4.7      6.8      38      38    128    128
  PL/SQL	14.9	  14.1	     .1       .3       2       3    110    109
  SQL		 9.0	   7.6	     .1       .3       1      11     60     46
<tr><td align="right" class='awrc'>128,992</td><td align="right" class='awrc'>128,992</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>128,992.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.49</td><td scope="row" class='awrc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td>
  Total        764.1	  21.7	    9.2     15.2      73      52    332    317
E Freeable     139.5	    .0	    5.0      8.5      35     N/A     28     28
  Other        507.0	   N/A	    4.7      7.2      39      39    109    109
<td class='awrc'>
  PL/SQL	 5.9	   5.3	     .1       .3       2       3     91     90
  SQL		 1.4	   1.1	     .0       .1       1      11     41     26
  Total        653.8	   6.4	    9.7     16.1      76      53    269    253
			  ------------------------------------------------------
SQL*Plus

SGA Memory Summary			 DB/Inst: P30DB/p30db1	Snaps: 171-172

						      End Size (Bytes)
</td>
SGA regions			Begin Size (Bytes)	(if different)
------------------------------ ------------------- -------------------
Database Buffers		     8,522,825,728
Fixed Size				12,445,928
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
Redo Buffers				21,106,688
Variable Size			     1,577,058,304
			       -------------------
sum				    10,133,436,648
			  ------------------------------------------------------

<tr><td align="right" class='awrnc'>128,317</td><td align="right" class='awrnc'>128,317</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>128,317.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.46</td><td scope="row" class='awrnc'><a class="awr" href="#7m9rphfj2sxqy">7m9rphfj2sxqy</a></td>
SGA breakdown difference by Pool and NameDB/Inst: P30DB/p30db1	Snaps: 171-172
-> ordered by Pool, Name
-> N/A value for Begin MB or End MB indicates the size of that Pool/Name was
   insignificant, or zero in that snapshot
<td class='awrnc'>

Pool   Name				    Begin MB	     End MB  % Diff
------ ------------------------------ -------------- -------------- -------
large  PX msg pool				15.0	       15.0    0.00
SQL*Plus
large  free memory				48.6	       48.6    0.00
shared ASH buffers				16.0	       16.0    0.00
shared KGLH0					49.0	       48.9   -0.14
shared KGLS					15.8	       15.5   -1.62
</td>
shared KJSC rnb slots				20.4		N/A -100.00
shared SO private sga				28.7	       28.7    0.00
shared SQLA				       268.7	      268.2   -0.19
shared db_block_hash_buckets			32.0	       32.0    0.00
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
shared free memory				86.3	       96.9   12.29
shared gc name table				32.0	       32.0    0.00
shared gcs resources			       271.0	      271.0    0.00
shared gcs resv res hash bucket 		48.0	       48.0    0.00
shared gcs shadows			       147.8	      147.8    0.00
<tr><td align="right" class='awrc'>128,128</td><td align="right" class='awrc'>128,128</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>128,128.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.45</td><td scope="row" class='awrc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td>
shared ges big msg buffers			26.3	       26.3    0.00
shared ksunfy_meta 1				25.0	       25.0    0.00
shared row cache				  .0		 .0    0.00
<td class='awrc'>
       buffer_cache			     8,000.0	    8,000.0    0.00
       fixed_sga				11.9	       11.9    0.00
       log_buffer				20.1	       20.1    0.00
       shared_io_pool			       128.0	      128.0    0.00
SQL*Plus
			  ------------------------------------------------------


Replication System Resource Usage	 DB/Inst: P30DB/p30db1	Snaps: 171-172

</td>
		  No data exists for this section of the report.
			  ------------------------------------------------------

Replication SGA Usage			 DB/Inst: P30DB/p30db1	Snaps: 171-172
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>

		  No data exists for this section of the report.
			  ------------------------------------------------------


GoldenGate Capture			 DB/Inst: P30DB/p30db1	Snaps: 171-172

<tr><td align="right" class='awrnc'>126,467</td><td align="right" class='awrnc'>126,467</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>126,467.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.38</td><td scope="row" class='awrnc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Capture Rate 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
<td class='awrnc'>

		  No data exists for this section of the report.
			  ------------------------------------------------------

SQL*Plus
GoldenGate Apply Reader 		 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

</td>
GoldenGate Apply Coordinator		 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
GoldenGate Apply Server 		 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

GoldenGate Apply Coordinator Rate	 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

<tr><td align="right" class='awrc'>122,705</td><td align="right" class='awrc'>122,705</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>122,705.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.22</td><td scope="row" class='awrc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td>
GoldenGate Apply Reader and Server Rate  DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------


XStream Capture 			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
<td class='awrc'>
			  ------------------------------------------------------

XStream Capture Rate			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

SQL*Plus
XStream Apply Reader			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

</td>
XStream Apply Coordinator		 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
XStream Apply Server			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

XStream Apply Coordinator Rate		 DB/Inst: P30DB/p30db1	Snaps: 171-172
<tr><td align="right" class='awrnc'>121,177</td><td align="right" class='awrnc'>121,177</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>121,177.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.16</td><td scope="row" class='awrnc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>

		  No data exists for this section of the report.
			  ------------------------------------------------------

<td class='awrnc'>
XStream Apply Reader and Server Rate	 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

SQL*Plus

Table Statistics by DML Operations	 DB/Inst: P30DB/p30db1	Snaps: 171-172

</td>
		  No data exists for this section of the report.
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
			  ------------------------------------------------------

<tr><td align="right" class='awrc'>121,094</td><td align="right" class='awrc'>121,094</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>121,094.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.15</td><td scope="row" class='awrc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
Table Statistics by Conflict Resolutions DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------
<td class='awrc'>

Replication Large Transaction Statistics DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
SQL*Plus
			  ------------------------------------------------------

Replication Long Running Transaction StatisticsDB/Inst: P30DB/p30db1  Snaps: 1

</td>
		  No data exists for this section of the report.
			  ------------------------------------------------------


Advanced Queue CPU/IO Usage		 DB/Inst: P30DB/p30db1	Snaps: 171-172
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>

		  No data exists for this section of the report.
			  ------------------------------------------------------

Buffered Queues 			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------
<tr><td align="right" class='awrnc'>120,658</td><td align="right" class='awrnc'>120,658</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>120,658.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.13</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>

Buffered Queue Subscribers		 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

<td class='awrnc'>
Rule Set				 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queues			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------
SQL*Plus

Persistent Queues Rate			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  ------------------------------------------------------

Persistent Queue Subscribers		 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
</td>
			  ------------------------------------------------------


Resource Limit Stats			      DB/Inst: P30DB/p30db1  Snap: 172
-> Only rows with Current or Maximum Utilization > 80% of Limit are shown
-> For "UNLIMITED" resources, rows whose Current or Maximum Utilization
   exceeds 2*Initial Allocation are shown
-> Ordered by Resource Name
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>

				  Current      Maximum	   Initial
Resource Name			Utilization  Utilization Allocation   Limit
------------------------------ ------------ ------------ ---------- ----------
ges_cache_ress			      2,835	   3,508	  0  UNLIMITED
			  ------------------------------------------------------
<tr><td align="right" class='awrc'>118,362</td><td align="right" class='awrc'>118,362</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>118,362.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>5.04</td><td scope="row" class='awrc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>

Shared Servers Activity 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Values represent averages for all samples

<td class='awrc'>
   Avg Total   Avg Active    Avg Total	 Avg Active    Avg Total   Avg Active
 Connections  Connections Shared Srvrs Shared Srvrs  Dispatchers  Dispatchers
------------ ------------ ------------ ------------ ------------ ------------
	   0		0	     1		  0	       1	    0
SQL*Plus
			  ------------------------------------------------------

Shared Servers Rates			 DB/Inst: P30DB/p30db1	Snaps: 171-172

  Common     Disp			 Common       Disp     Server
</td>
   Queue    Queue   Server    Server	  Queue      Queue	Total	  Server
 Per Sec  Per Sec Msgs/Sec    KB/Sec	  Total      Total	 Msgs  Total(KB)
-------- -------- -------- --------- ---------- ---------- ---------- ----------
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
       0	0	 0	 0.0	      0 	 0	    0	       0
			  ------------------------------------------------------

Shared Servers Utilization		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Statistics are combined for all servers
-> Incoming and Outgoing Net % are included in %Busy
<tr><td align="right" class='awrnc'>117,715</td><td align="right" class='awrnc'>117,715</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>117,715.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>5.01</td><td scope="row" class='awrnc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>

  Total Server			  Incoming  Outgoing
      Time (s)	  %Busy    %Idle     Net %     Net %
-------------- -------- -------- --------- ---------
<td class='awrnc'>
	   604	    0.0    100.0       0.0	 0.0
			  ------------------------------------------------------

Shared Servers Common Queue		 DB/Inst: P30DB/p30db1	Snaps: 171-172

SQL*Plus
		  No data exists for this section of the report.
			  ------------------------------------------------------

Shared Servers Dispatchers		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Ordered by %Busy, descending
</td>
-> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue
-> Name suffixes:
     "(N)" - dispatcher started between begin and end snapshots
     "(R)" - dispatcher re-started between begin and end snapshots
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>

	      Avg Total Disp			    Total Total Queue  Avg Queue
Name	    Conns   Time (s)	%Busy	 %Idle	   Queued    Wait (s)  Wait (ms)
------- --------- ---------- -------- -------- ---------- ----------- ----------
D000	      0.0	 604	  0.0	 100.0		0	    0
<tr><td align="right" class='awrc'>116,260</td><td align="right" class='awrc'>116,260</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>116,260.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.95</td><td scope="row" class='awrc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
			  ------------------------------------------------------


Modified Parameters			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> This section shows all the modified initialization parameters that
<td class='awrc'>
were in effect during the entire snapshot interval
-> End Value is displayed only if the parameter value was modified within
the snapshot interval

								End value
SQL*Plus
Parameter Name		      Begin value			(if different)
----------------------------- --------------------------------- --------------
_ipddb_enable		      TRUE
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>114,102</td><td align="right" class='awrnc'>114,102</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>114,102.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.85</td><td scope="row" class='awrnc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>113,318</td><td align="right" class='awrc'>113,318</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>113,318.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.82</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>113,149</td><td align="right" class='awrnc'>113,149</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>113,149.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.81</td><td scope="row" class='awrnc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>112,280</td><td align="right" class='awrc'>112,280</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>112,280.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.78</td><td scope="row" class='awrc'><a class="awr" href="#bzs4fu7kk84h3">bzs4fu7kk84h3</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>95,821</td><td align="right" class='awrnc'>95,821</td><td align="right" class='awrnc'>689,468</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.08</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="800"></a>
audit_file_dest 	      /u01/app/oracle/admin/p30db/adump
audit_trail		      DB
cluster_database	      TRUE
compatible		      19.0.0
control_files		      +DATA/P30DB/CONTROLFILE/current.2
db_block_size		      8192
db_create_file_dest	      +DATA
db_domain		      example.com
db_name 		      p30db
db_recovery_file_dest	      +FRA
db_recovery_file_dest_size    274877906944
diagnostic_dest 	      /u01/app/oracle
dispatchers		      (PROTOCOL=TCP) (SERVICE=p30dbXDB)
instance_number 	      1
listener_networks
local_listener		       (ADDRESS=(PROTOCOL=TCP)(HOST=192
nls_language		      AMERICAN
nls_territory		      AMERICA
open_cursors		      300
pga_aggregate_target	      3371171840
processes		      640
remote_listener 	       mcracpoc-scan.example.com:1521
remote_login_passwordfile     EXCLUSIVE
sga_target		      10133438464
thread			      1
undo_tablespace 	      UNDOTBS1
			  ------------------------------------------------------


Modified Multi-Valued Parameters	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> This section only displays parameters that have more than one value
->'(NULL)' indicates a missing parameter value
-> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot

								End value
Parameter Name		      Begin value			(if different)
----------------------------- --------------------------------- --------------
control_files		      +DATA/P30DB/CONTROLFILE/current.2
			      +FRA/P30DB/CONTROLFILE/current.25
			  ------------------------------------------------------

Top SQL with Top Events 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Top SQL statements by DB Time along with the top events by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the
   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
									   % Row
Event			       % Event Top Row Source			  Source
------------------------------ ------- --------------------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		      944	   78.10
db file sequential read 	 70.33 TABLE ACCESS - BY INDEX ROWID BAT   70.33
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


CPU + Wait for CPU		  3.80 TABLE ACCESS - BY INDEX ROWID BAT    2.89


gc cr grant 2-way		  3.80 TABLE ACCESS - BY INDEX ROWID BAT    3.80

	  35dumc2tpr9dv 	   203653710		      146	   12.07
db file sequential read 	 10.41 UPDATE				   10.41
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )


gc current grant 2-way		  1.16 UPDATE				    1.16

			  ------------------------------------------------------

Top SQL with Top Row Sources		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Top SQL statements by DB Time along with the top row sources by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
   that SQL.
-> % Event is the percentage of DB Time spent on the event by the
   SQL executing the row source.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
					   % Row
Row Source				  Source Top Event		 % Event
---------------------------------------- ------- ----------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		      944	   78.10
TABLE ACCESS - BY INDEX ROWID BATCHED	   77.11 db file sequential read   70.33
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	  35dumc2tpr9dv 	   203653710		      146	   12.07
UPDATE					   11.98 db file sequential read   10.41
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  ------------------------------------------------------

Top Sessions				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> '# Samples Active' shows the number of ASH samples in which the session
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
      and not total database activity.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
       18,58372       4.79 db file sequential read		4.30
USER22		     sqlplus@mcracp...m (TNS V1-V3)	  52/61 [ 86%]	      4

      137,13399       4.79 db file sequential read		4.05
USER20		     sqlplus@mcracp...m (TNS V1-V3)	  49/61 [ 81%]	      4

      138,51898       4.79 db file sequential read		4.21
USER10		     sqlplus@mcracp...m (TNS V1-V3)	  51/61 [ 84%]	      0

      267, 4184       4.79 db file sequential read		4.13
USER32		     sqlplus@mcracp...m (TNS V1-V3)	  50/61 [ 83%]	      5

      382,46337       4.79 db file sequential read		4.30
USER33		     sqlplus@mcracp...m (TNS V1-V3)	  52/61 [ 86%]	      5

			  ------------------------------------------------------

Top Blocking Sessions			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Blocking session activity percentages are calculated with respect to
      waits on enqueues, latches and "buffer busy" only
-> '% Activity' represents the load on the database caused by
      a particular blocking session
-> '# Samples Active' shows the number of ASH samples in which the
      blocking session was found active.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the blocking session was found active.

 Blocking Sid (Inst) % Activity Event Caused			  % Event
-------------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
   374,14000(	  1)	   1.65 LGWR any worker group		     1.32
SYS		     oracle@mcracpo...le.com (LG00)	  32/61 [ 53%]	      0

			  ------------------------------------------------------

Top PL/SQL Procedures			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
      at the point of sampling . If the value is 'SQL', it represents
      the percentage of time spent executing SQL for the particular
      PL/SQL entry subprogram

PL/SQL Entry Subprogram 					  % Activity
----------------------------------------------------------------- ----------
PL/SQL Current Subprogram					   % Current
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       12.31
   SQL								       12.31
<h3 class="awr">SQL ordered by Executions</h3>
			  ------------------------------------------------------

Top Events				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Top Events by DB Time
<ul>
-> % Activity is the percentage of DB Time due to the event

Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
	   Avg Active
% Activity   Sessions
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
---------- ----------
db file sequential read 	    User I/O	    FOREGROUND
     80.74	16.15
CPU + Wait for CPU		    CPU 	    FOREGROUND
<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time</li>
      5.21	 1.04
log file parallel write 	    System I/O	    BACKGROUND
      4.30	 0.86
gc cr grant 2-way		    Cluster	    FOREGROUND
<li class="awr">Total Executions:	  815,374</li>
      3.80	 0.76
CPU + Wait for CPU		    CPU 	    BACKGROUND
      2.15	 0.43
			  ------------------------------------------------------

<li class="awr">Captured SQL account for   99.6% of Total</li>
Top Event P1/P2/P3 Values		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
-> % Event is the percentage of DB Time due to the event
</ul>
-> % Activity is the percentage of DB Time due to the event with the given
   P1,P2,P3 Values.

Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
<table border="0" class="tdiff" summary="This table displays top SQL by number of executions"><tr><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">Rows Processed</th><th class="awrbg" scope="col">Rows per Exec</th><th class="awrbg" scope="col">Elapsed	Time (s)</th><th class="awrbg" scope="col"> %CPU</th><th class="awrbg" scope="col">  %IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
Parameter 1		   Parameter 2		      Parameter 3
-------------------------- -------------------------- --------------------------
db file sequential read 	 80.74		  "2","28106684","1"	   0.08
file#			   block#		      blocks

<tr><td align="right" class='awrc'>689,468</td><td align="right" class='awrc'>689,482</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>8,941.51</td><td class='awrc'>7</td><td class='awrc'>89.5</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
log file parallel write 	  4.30			 "1","4","1"	   0.99
files			   blocks		      requests

			  ------------------------------------------------------

<td class='awrc'>
Top DB Objects				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Top DB Objects by DB Time with respect to Application, Cluster,
   User I/O,  buffer busy waits and In-Memory DB events only.
SQL*Plus
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available

</td>
      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
Object Name (Type)				      Tablespace
----------------------------------------------------- --------------------------
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
	  73458       4.79 db file sequential read		4.71
USER13.CF1 (TABLE)				      IOPS
	  73503       4.79 db file sequential read		4.63
USER21.CF1 (TABLE)				      IOPS
	  73603       4.71 db file sequential read		4.21
<tr><td align="right" class='awrnc'>121,676</td><td align="right" class='awrnc'>365,028</td><td align="right" class='awrnc'>3.00</td><td align="right" class='awrnc'>1,653.51</td><td class='awrnc'>8.2</td><td class='awrnc'>86</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
USER40.CF1 (TABLE)				      IOPS
	  73449       4.63 db file sequential read		4.46
USER11.CF1 (TABLE)				      IOPS
	  73514       4.63 db file sequential read		4.30
<td class='awrnc'>
USER22.CF1 (TABLE)				      IOPS
			  ------------------------------------------------------

Activity Over Time			 DB/Inst: P30DB/p30db1	Snaps: 171-172
SQL*Plus
-> Analysis period is divided into smaller time slots as indicated
   in the 'Slot Time (Duration)'.
-> Top 3 events are reported in each of those slots
</td>
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
   that event in that slot
-> '% Event' is 'Event Count' over all ASH samples in the analysis period
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>

			 Slot					Event
Slot Time (Duration)	Count Event				Count % Event
-------------------- -------- ------------------------------ -------- -------
20:33:02   (2.0 min)	  279 db file sequential read		  207	17.11
<tr><td align="right" class='awrc'>437</td><td align="right" class='awrc'>432</td><td align="right" class='awrc'>0.99</td><td align="right" class='awrc'>0.06</td><td class='awrc'>81.6</td><td class='awrc'>0</td><td scope="row" class='awrc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td>
			      CPU + Wait for CPU		   30	 2.48
			      log file parallel write		   16	 1.32
20:35:00   (5.0 min)	  622 db file sequential read		  512	42.31
			      CPU + Wait for CPU		   43	 3.55
<td class='awrc'>&#160;
			      gc cr grant 2-way 		   24	 1.98
20:40:00   (3.1 min)	  309 db file sequential read		  258	21.32
			      CPU + Wait for CPU		   16	 1.32
			      gc cr grant 2-way 		   12	 0.99
</td>
			  ------------------------------------------------------



	  ADDM Report for Task 'ADDM:3393773525_1_172'
<td class='awrc'>update svcobj_access$ set acce...</td></tr>
	  --------------------------------------------

Analysis Period
---------------
AWR snapshot range from 171 to 172.
Time period starts at 10-FEB-20 08.33.03 PM
<tr><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.35</td><td class='awrnc'>7.1</td><td class='awrnc'>5.1</td><td scope="row" class='awrnc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
Time period ends at 10-FEB-20 08.43.07 PM

Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
<td class='awrnc'>&#160;
Database version 19.0.0.0.0.
ADDM performed an analysis of instance p30db1, numbered 1 and hosted at
mcracpoc1.example.com.

</td>
Activity During the Analysis Period
-----------------------------------
Total database time was 10821 seconds.
The average number of active sessions was 17.92.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendation
s
					     Percent of Activity
   ----------------------------------------  -------------------  --------------
-
<td class='awrnc'>insert into wrm$_snapshot_deta...</td></tr>
1  Top SQL Statements			     17.72 | 98.91	  2
2  "User I/O" wait Class		     15.63 | 87.24	  0
3  Top Segments by "User I/O" and "Cluster"  4.62 | 25.76	  5
4  Global Cache Messaging		     1.17 | 6.51	  1
5  Undersized SGA			     .6 | 3.35		  1
<tr><td align="right" class='awrc'>59</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.01</td><td class='awrc'>94.5</td><td class='awrc'>0</td><td scope="row" class='awrc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

<td class='awrc'>&#160;

	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
</td>
Impact is 17.69 active sessions, 98.91% of total activity.
----------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.
<td class='awrc'>INSERT INTO wri$_adv_message_g...</td></tr>

   Recommendation 1: SQL Tuning
   Estimated benefit is 15.35 active sessions, 85.68% of total activity.
   ---------------------------------------------------------------------
   Action
<tr><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.02</td><td class='awrnc'>65.6</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td>
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      "bhdvtsvjhgvrh".
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
<td class='awrnc'>&#160;
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND
	 (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
</td>
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
<td class='awrnc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
      execution.
   Rationale
      SQL statement with SQL_ID "bhdvtsvjhgvrh" was executed 689468 times and
      had an average elapsed time of 0.012 seconds.

   Recommendation 2: SQL Tuning
   Estimated benefit is 2.37 active sessions, 13.24% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      "35dumc2tpr9dv".
<tr><td align="right" class='awrc'>29</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.00</td><td class='awrc'>84.1</td><td class='awrc'>13</td><td scope="row" class='awrc'><a class="awr" href="#6n2qqv1brfhpp">6n2qqv1brfhpp</a></td>
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
<td class='awrc'>&#160;
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
</td>
   Rationale
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 121676 times and
      had an average elapsed time of 0.013 seconds.


<td class='awrc'>select ind.type#, ind.property...</td></tr>
Finding 2: "User I/O" wait Class
Impact is 15.6 active sessions, 87.24% of total activity.
---------------------------------------------------------
Wait class "User I/O" was consuming significant database time.
Waits for I/O to temporary tablespaces were not consuming significant database
<tr><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.00</td><td class='awrnc'>80.3</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#gjaap3w3qbf8c">gjaap3w3qbf8c</a></td>
time.
The throughput of the I/O subsystem was not significantly lower than expected.

   No recommendations are available.

<td class='awrnc'>&#160;

Finding 3: Top Segments by "User I/O" and "Cluster"
Impact is 4.61 active sessions, 25.76% of total activity.
---------------------------------------------------------
</td>
Individual database segments responsible for significant "User I/O" and
"Cluster" waits were found.

   Recommendation 1: Segment Tuning
   Estimated benefit is .94 active sessions, 5.24% of total activity.
<td class='awrnc'>select count(*) from ilmobj$ w...</td></tr>
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER13.CF1" with
      object ID 73458.
      Related Object
	 Database object with ID 73458.
   Rationale
<tr><td align="right" class='awrc'>19</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.02</td><td class='awrc'>46.6</td><td class='awrc'>0</td><td scope="row" class='awrc'><a class="awr" href="#9babjv8yq8ru3">9babjv8yq8ru3</a></td>
      The I/O usage statistics for the object are: 0 full object scans, 118041
      physical reads, 16242 physical writes and 0 direct reads.

<td class='awrc'>
   Recommendation 2: Segment Tuning
   Estimated benefit is .94 active sessions, 5.24% of total activity.
   ------------------------------------------------------------------
SQL*Plus
   Action
      Investigate application logic involving I/O on TABLE "USER21.CF1" with
      object ID 73503.
      Related Object
</td>
	 Database object with ID 73503.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 112053
      physical reads, 15418 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
<td class='awrc'>BEGIN DBMS_OUTPUT.GET_LINES(:L...</td></tr>
   Estimated benefit is .92 active sessions, 5.15% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER40.CF1" with
      object ID 73603.
      Related Object
	 Database object with ID 73603.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 117440
      physical reads, 16157 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
<tr><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0.00</td><td class='awrnc'>80.5</td><td class='awrnc'>0</td><td scope="row" class='awrnc'><a class="awr" href="#fs4p95w7yg25b">fs4p95w7yg25b</a></td>
   Estimated benefit is .91 active sessions, 5.06% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER11.CF1" with
      object ID 73449.
      Related Object
	 Database object with ID 73449.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 128837
<td class='awrnc'>&#160;
      physical reads, 17629 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .91 active sessions, 5.06% of total activity.
</td>
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER22.CF1" with
      object ID 73514.
      Related Object
<td class='awrnc'>select pob.parttype from sys.t...</td></tr>
	 Database object with ID 73514.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 120827
      physical reads, 16714 physical writes and 0 direct reads.

</table><p />
   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 15.63 active sessions, 87.24% of total activity.
<hr align="left" width="20%" /><p />


Finding 4: Global Cache Messaging
Impact is 1.17 active sessions, 6.51% of total activity.
--------------------------------------------------------
<a class="awr" href="#22">Back to SQL Statistics</a>
Inter-instance messaging was consuming significant database time on this
instance.

   Recommendation 1: Application Analysis
   Estimated benefit is 1.17 active sessions, 6.51% of total activity.
<br /><a class="awr" href="#top">Back to Top</a><p />
   -------------------------------------------------------------------
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
<a class="awr" name="900"></a>
      with SQL_ID "bhdvtsvjhgvrh" is responsible for 66% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
<h3 class="awr">SQL ordered by Parse Calls</h3>
      Wait class "Cluster" was consuming significant database time.
      Impact is 1.21 active sessions, 6.77% of total activity.


Finding 5: Undersized SGA
<ul>
Impact is .6 active sessions, 3.35% of total activity.
------------------------------------------------------
The SGA was inadequately sized, causing additional I/O or hard parses.
<li class="awr">Total Parse Calls:	     1,343</li>
The value of parameter "sga_target" was "9664 M" during the analysis period.

   Recommendation 1: Database Configuration
   Estimated benefit is .15 active sessions, .81% of total activity.
   -----------------------------------------------------------------
<li class="awr">Captured SQL account for   63.4% of Total</li>
   Action
      Increase the size of the SGA by setting the parameter "sga_target" to
      10872 M.

   Symptoms That Led to the Finding:
</ul>
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 15.63 active sessions, 87.24% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<table border="0" class="tdiff" summary="This table displays top SQL by number of parse calls"><tr><th class="awrbg" scope="col">Parse Calls</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total Parses</th><th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

<tr><td align="right" class='awrc'>437</td><td align="right" class='awrc'>437</td><td align="right" class='awrc'>32.54</td><td scope="row" class='awrc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td>
Miscellaneous Information
-------------------------
Wait class "Application" was not consuming significant database time.
Wait class "Commit" was not consuming significant database time.
<td class='awrc'>&#160;
Wait class "Concurrency" was not consuming significant database time.
Wait class "Configuration" was not consuming significant database time.
CPU was not a bottleneck for the instance.
Wait class "Network" was not consuming significant database time.
</td>
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.
<td class='awrc'>update svcobj_access$ set acce...</td></tr>
Hard parsing of SQL statements was not consuming significant database time.

RAC Statistics  DB/Inst: P30DB/p30db1	Snaps: 171-172

				Begin	End
				----- -----
<tr><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>6.85</td><td scope="row" class='awrnc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
	   Number of Instances:     2	  2
	       Number of LMS's:     2	  2
      Number of realtime LMS's:     2	  2  (0 priority changes)


<td class='awrnc'>&#160;
Global Cache Load Profile
~~~~~~~~~~~~~~~~~~~~~~~~~		   Per Second	    Per Transaction
				      ---------------	    ---------------
  Global Cache blocks received: 		23.08		       0.11
</td>
    Global Cache blocks served: 		28.23		       0.14
     GCS/GES messages received: 	     6,380.06		      31.55
	 GCS/GES messages sent: 	     6,327.46		      31.29
	    DBWR Fusion writes: 		 0.08		       0.00
 Estd Interconnect traffic (KB) 	     2,892.44
<td class='awrnc'>insert into wrm$_snapshot_deta...</td></tr>


Global Cache Efficiency Percentages (Target local+remote 100%)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Buffer access -  local cache %:   58.41
Buffer access - remote cache %:    0.25
<tr><td align="right" class='awrc'>59</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>4.39</td><td scope="row" class='awrc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td>
Buffer access - 	disk %:   41.34
Global Cache Locality	     %:   51.17


Global Cache and Enqueue Services - Workload Characteristics
<td class='awrc'>&#160;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	  Avg global cache cr block receive time (us):		1,215.9
     Avg global cache current block receive time (us):		  772.2
			       Avg LMS process busy %:		   16.3
</td>

	    Avg global cache cr block build time (us):		  541.7
      Global cache log flushes for cr blocks served %:		    0.8
	    Avg global cache cr block flush time (us):		6,857.1

<td class='awrc'>INSERT INTO wri$_adv_message_g...</td></tr>
	 Avg global cache current block pin time (us):		    0.0
 Global cache log flushes for current blocks served %:		    0.3
       Avg global cache current block flush time (us):		7,368.4

		     Avg global enqueue get time (us):		   45.4

<tr><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>3.20</td><td scope="row" class='awrnc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td>
Global Cache and Enqueue Services - Messaging Statistics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Avg message sent queue time (us):		  700.4
	     Avg message sent queue time on ksxp (us):		  933.9
<td class='awrnc'>&#160;
	  Avg message received kernel queue time (us):		   46.7
		 Avg message received queue time (us):		   17.6
		    Avg GCS message process time (us):		   40.7
		    Avg GES message process time (us):		   22.5

</td>
			    % of direct sent messages:		  44.97
			  % of indirect sent messages:		  54.99
			% of flow controlled messages:		   0.04
	  -------------------------------------------------------------

<td class='awrnc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
Cluster Interconnect
-> if Public/Source at End snap is different a '*' is displayed
~~~~~~~~~~~~~~~~~~~~
				    Begin			    End
	     --------------------------------------------------   -------
<tr><td align="right" class='awrc'>29</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>2.16</td><td scope="row" class='awrc'><a class="awr" href="#6n2qqv1brfhpp">6n2qqv1brfhpp</a></td>
Interface    IP Address      Pub Source 			  Pub Src
----------   --------------- --- ------------------------------   --- ---
fg-priv:1    169.254.22.248  N

Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172
<td class='awrc'>&#160;

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
</td>
Cluster reconfiguration count			 0	    0.0 	 0.0
Domain reconfiguration count			 0	    0.0 	 0.0
Global Enqueue S-optim Broadcasts		38	    0.1 	 0.0
Global Enqueue S-optim S-lock get	     3,561	    5.9 	 0.0
Global Enqueue S-optim anti-locks		 6	    0.0 	 0.0
<td class='awrc'>select ind.type#, ind.property...</td></tr>
KA local message waits				 0	    0.0 	 0.0
KA local messages received			 0	    0.0 	 0.0
KA messages received actual			 0	    0.0 	 0.0
KA messages received logical			 0	    0.0 	 0.0
KA requests failed				 0	    0.0 	 0.0
<tr><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>1.49</td><td scope="row" class='awrnc'><a class="awr" href="#gjaap3w3qbf8c">gjaap3w3qbf8c</a></td>
KA requests succeeded				 0	    0.0 	 0.0
Pseudo reconfiguration count			 0	    0.0 	 0.0
Pseudo rm reconfig count			 0	    0.0 	 0.0
acks for commit broadcast(actual)	    21,109	   34.9 	 0.2
acks for commit broadcast(logical	    55,897	   92.5 	 0.5
<td class='awrnc'>&#160;
broadcast msgs on commit(actual)	    63,927	  105.8 	 0.5
broadcast msgs on commit(logical)	   100,684	  166.6 	 0.8
broadcast msgs on commit(wasted)	    35,858	   59.3 	 0.3
dynamically allocated gcs resourc		 0	    0.0 	 0.0
</td>
dynamically allocated gcs shadows		 0	    0.0 	 0.0
flow control messages received			 0	    0.0 	 0.0
flow control messages sent			 0	    0.0 	 0.0
gcs assume cvt					 0	    0.0 	 0.0
gcs assume no cvt			     6,778	   11.2 	 0.1
<td class='awrnc'>select count(*) from ilmobj$ w...</td></tr>
gcs ast to fg				 1,120,774	1,854.3 	 9.2
gcs ast xid					 0	    0.0 	 0.0
gcs bidless ast to lms				46	    0.1 	 0.0
gcs blocked converts			    32,994	   54.6 	 0.3
gcs blocked cr converts 		     4,250	    7.0 	 0.0
gcs compatible basts				 5	    0.0 	 0.0
<tr><td align="right" class='awrc'>19</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>1.41</td><td scope="row" class='awrc'><a class="awr" href="#9babjv8yq8ru3">9babjv8yq8ru3</a></td>
gcs compatible cr basts (global)		15	    0.0 	 0.0
gcs compatible cr basts (local) 	    10,186	   16.9 	 0.1
gcs cr basts to PIs				 0	    0.0 	 0.0
gcs cr requests to slave			 0	    0.0 	 0.0
gcs cr serve without current lock		 0	    0.0 	 0.0
<td class='awrc'>
gcs dbwr flush pi msgs			   166,548	  275.5 	 1.4
gcs dbwr write request msgs			51	    0.1 	 0.0
gcs error msgs					 0	    0.0 	 0.0
gcs flash read serve requests to		 0	    0.0 	 0.0
SQL*Plus
gcs force cr block only 			 0	    0.0 	 0.0
gcs force cr grant				 0	    0.0 	 0.0
gcs force cr no current 			 0	    0.0 	 0.0
gcs forward cr to pinged instance		 0	    0.0 	 0.0
gcs grant ast				 1,120,821	1,854.4 	 9.2
</td>
gcs grant request in partial open		 0	    0.0 	 0.0
gcs immediate (compatible) conver	     8,641	   14.3 	 0.1
gcs immediate (null) converts		   331,800	  549.0 	 2.7
gcs immediate cr (compatible) con	       111	    0.2 	 0.0
<td class='awrc'>BEGIN DBMS_OUTPUT.GET_LINES(:L...</td></tr>
gcs immediate cr (null) converts	 1,880,853	3,111.8 	15.4
gcs lms flush pi msgs				 0	    0.0 	 0.0
gcs lms write request msgs			34	    0.1 	 0.0
gcs msgs process time(ms)		   110,581	  183.0 	 0.9
gcs msgs received			 2,719,123	4,498.7 	22.2
<tr><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>1.34</td><td scope="row" class='awrnc'><a class="awr" href="#fs4p95w7yg25b">fs4p95w7yg25b</a></td>
gcs new served by master			32	    0.1 	 0.0
gcs out-of-order msgs				 1	    0.0 	 0.0
gcs pings refused			     1,053	    1.7 	 0.0
gcs pkey conflicts retry			 0	    0.0 	 0.0
gcs queued converts				 0	    0.0 	 0.0
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>select pob.parttype from sys.t...</td></tr>
<tr><td align="right" class='awrc'>16</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>1.19</td><td scope="row" class='awrc'><a class="awr" href="#fkc81h2686aqc">fkc81h2686aqc</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>select pob.parttype from sys.i...</td></tr>
<tr><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.74</td><td scope="row" class='awrnc'><a class="awr" href="#6wvzvgvg6qsyb">6wvzvgvg6qsyb</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>INSERT INTO wri$_adv_findings ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1000"></a>
<h3 class="awr">SQL ordered by Sharable Memory</h3>
<ul>
<li class="awr">Only Statements with Sharable Memory greater than 1048576 are displayed</li>
gcs read-mostly failure unmount d		 0	    0.0 	 0.0
gcs reader bypass N->Xw ping loca		 0	    0.0 	 0.0

Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172
</ul>

Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
gcs reader bypass N->Xw ping remo		 0	    0.0 	 0.0
gcs reader bypass grant X on assu		 0	    0.0 	 0.0
gcs reader bypass grant ast			 0	    0.0 	 0.0
<table border="0" class="tdiff" summary="This table displays top SQL by amount of shared memory used"><tr><th class="awrbg" scope="col">Sharable Mem (b)</th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">% Total</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
gcs reader bypass grant fg ast			 0	    0.0 	 0.0
gcs reader bypass grant immediate		23	    0.0 	 0.0
gcs recovery claim msgs 			 0	    0.0 	 0.0
gcs refuse xid					 1	    0.0 	 0.0
gcs refuse xid to fg				 1	    0.0 	 0.0
gcs refuse xid to lms				 0	    0.0 	 0.0
gcs refuse xid to master			 0	    0.0 	 0.0
<tr><td align="right" class='awrc'>13,231,793</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.19</td><td scope="row" class='awrc'><a class="awr" href="#9yv5dwv8k0awg">9yv5dwv8k0awg</a></td>
gcs regular cr					 0	    0.0 	 0.0
gcs resources for dynamic sga			 0	    0.0 	 0.0
gcs retry convert request			 0	    0.0 	 0.0
gcs shadows for dynamic sga			 0	    0.0 	 0.0
gcs share recovery bast 			 0	    0.0 	 0.0
<td class='awrc'>&#160;
gcs side channel msgs actual		     4,811	    8.0 	 0.0
gcs side channel msgs logical		 1,148,876	1,900.8 	 9.4
gcs stale cr					12	    0.0 	 0.0
</td>
gcs undo cr					 2	    0.0 	 0.0
gcs write notification msgs			 0	    0.0 	 0.0
gcs writes refused				 2	    0.0 	 0.0
ges msgs process time(ms)			49	    0.1 	 0.0
<td class='awrc'>WITH MONITOR_DATA AS (SELECT I...</td></tr>
ges msgs received			     2,180	    3.6 	 0.0
ges remote lock allocation			-7	    0.0 	 0.0
global posts dropped				 0	    0.0 	 0.0
global posts queue time 			 0	    0.0 	 0.0
<tr><td align="right" class='awrnc'>1,268,440</td><td align="right" class='awrnc'>121,676</td><td align="right" class='awrnc'>0.11</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
global posts queued				 0	    0.0 	 0.0
global posts requested				 0	    0.0 	 0.0
global posts sent				 0	    0.0 	 0.0
<td class='awrnc'>
implicit batch messages received	    36,427	   60.3 	 0.3
implicit batch messages sent		    33,121	   54.8 	 0.3
lmd msg send time(ms)				 0	    0.0 	 0.0
SQL*Plus
lms(s) msg send time(ms)			 0	    0.0 	 0.0
messages flow controlled		     1,090	    1.8 	 0.0
messages queue sent actual		   252,251	  417.3 	 2.1
</td>
messages queue sent logical		   218,571	  361.6 	 1.8
messages received actual		 1,440,578	2,383.4 	11.8
messages received logical		 2,721,303	4,502.3 	22.3
messages sent directly			 1,189,230	1,967.5 	 9.7
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
messages sent indirectly		 1,454,247	2,406.0 	11.9
messages sent not implicit batche	    15,081	   25.0 	 0.1
messages sent pbatched			 1,243,085	2,056.6 	10.2
<tr><td align="right" class='awrc'>1,114,247</td><td align="right" class='awrc'>689,468</td><td align="right" class='awrc'>0.10</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
msgs causing lmd to send msgs			 0	    0.0 	 0.0
msgs causing lms(s) to send msgs		 0	    0.0 	 0.0
msgs received kernel queue time (  126,985,810,560 2.100932E+08  1,038,832.2
<td class='awrc'>
msgs received queue time (ms)		    47,838	   79.1 	 0.4
msgs received queued			 2,721,303	4,502.3 	22.3
msgs sent queue time (ms)		   272,015	  450.0 	 2.2
SQL*Plus
msgs sent queue time on ksxp (ms)	 1,347,790	2,229.9 	11.0
msgs sent queued			   388,348	  642.5 	 3.2
msgs sent queued on ksxp		 1,443,138	2,387.6 	11.8
number of broadcasted resources 		 0	    0.0 	 0.0
</td>
number of directly freed master r		 0	    0.0 	 0.0
number of ges deadlock detected 		 0	    0.0 	 0.0
number of lock borrowed by LMD			 0	    0.0 	 0.0
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
number of received ODPS messages		 0	    0.0 	 0.0
number of received RBA messages 		 0	    0.0 	 0.0
number of resource borrowed by LM		 0	    0.0 	 0.0
number of sent ODPS messages			 0	    0.0 	 0.0
</table><p />
number of sent RBA messages			 0	    0.0 	 0.0

Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172

<hr align="left" width="20%" /><p />
Statistic				     Total   per Second    per Trans
--------------------------------- ---------------- ------------ ------------
process batch messages received 	   102,895	  170.2 	 0.8
<a class="awr" href="#22">Back to SQL Statistics</a>
process batch messages sent		   123,657	  204.6 	 1.0
receiver cycle time			   366,784	  606.8 	 3.0
receiver loop count			 1,486,743	2,459.8 	12.2
			  ------------------------------------------------------
<br /><a class="awr" href="#top">Back to Top</a><p />


Global CR Server Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172

<a class="awr" name="1100"></a>
Statistic				    Total
------------------------------ ------------------
CR Block Requests			    2,767
CURRENT Block Requests			    1,496
<h3 class="awr">SQL ordered by Version Count</h3>
Data Block Requests			    2,767
Undo Block Requests				2
TX Block Requests			    1,481
<ul>
Current Results 			    4,251
Private results 				0
Zero Results					6
Disk Read Results				6
Fail Results					0
<li class="awr">Only Statements with Version Count greater than 20 are displayed</li>
Fairness Down Converts			    2,750
Light Works				    1,128
Flushes 				       35
Builds					    2,766
</ul>
Errors						0
			  ------------------------------------------------------

Global Current Server Statistics	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Pins    = CURRENT Block Pin Operations
<table border="0" class="tdiff" summary="This table displays top SQL by version counts"><tr><th class="awrbg" scope="col">Version Count </th><th class="awrbg" scope="col">Executions </th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
-> Flushes = Redo Flush before CURRENT Block Served Operations

Statistic	  Total % <100us   % <1ms  % <10ms % <100ms    % <1s   % <10s
---------- ------------ -------- -------- -------- -------- -------- --------
<tr><td align="right" class='awrc'>38</td><td align="right" class='awrc'>121,676</td><td scope="row" class='awrc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
Pins		      4    75.00    25.00
Flushes 	     38 		     68.42    31.58
			  ------------------------------------------------------

Global Cache Transfer Statistics	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested (Congst) - Block Transfer impacted by Remote System Load
-> ordered by CR + Current Blocks Received desc

<td class='awrc'>
			       CR			  Current
		 ----------------------------- -----------------------------
Inst Block	   Blocks      %      %      %	 Blocks      %	    %	   %
SQL*Plus
  No Class	 Received  Immed   Busy Congst Received  Immed	 Busy Congst
---- ----------- -------- ------ ------ ------ -------- ------ ------ ------
</td>
   2 data block     2,761   99.9     .1     .1	 11,066   81.1	 18.9	  .1
   2 Others	       13  100.0     .0     .0	     21   76.2	 23.8	  .0
   2 undo header	7   85.7   14.3     .0	      5   40.0	 60.0	  .0
<td class='awrc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
			  ------------------------------------------------------

Global Cache Transfer Times (us)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Avg Time - average time of all blocks (Immed,Busy,Congst) in us
<tr><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>689,468</td><td scope="row" class='awrnc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
-> Immed, Busy, Congst -  Average times in us
-> ordered by CR + Current Blocks Received desc

		    CR Avg Time (us)	     Current Avg Time (us)
	      --------------------------- ---------------------------
Inst Block
  No Class	 All  Immed   Busy Congst    All  Immed   Busy Congst
<td class='awrnc'>
---- -------- ------ ------ ------ ------ ------ ------ ------ ------
   2 data blo	1231   1226   6137   2854    761    729    890	 3680
   2 others	 457	457    N/A    N/A   1498   1666    964	  N/A
SQL*Plus
   2 undo hea	2263	511  12776    N/A    770    705    814	  N/A
   2 undo blo	 N/A	N/A    N/A    N/A    N/A    N/A    N/A	  N/A
			  ------------------------------------------------------

</td>
Global Cache Transfer (Immediate)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> % of Blocks Received requiring 2 or 3 hops
<td class='awrnc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
-> ordered by CR + Current Blocks Received desc

				   CR			    Current
		      --------------------------- ---------------------------
 Src Block     Blocks  Immed Blks	%	%  Immed Blks	    %	    %
</table><p />
Inst Class	 Lost	 Received    2hop    3hop    Received	 2hop	 3hop
---- -------- ------- ----------- ------- ------- ----------- ------- -------
   2 data blo		    2,757   100.0     0.0	8,969	100.0	  0.0
   2 others		       13   100.0     0.0	   16	100.0	  0.0
   2 undo hea			6   100.0     0.0	    2	100.0	  0.0
   2 undo blo		      N/A     N/A     N/A	  N/A	  N/A	  N/A
<hr align="left" width="20%" /><p />
			  ------------------------------------------------------

Global Cache Times (Immediate)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Blocks Lost, 2-hop and 3-hop Average times in (us)
-> ordered by CR + Current Blocks Received desc

		       CR Avg Time (us)   Current Avg Time (us)
<a class="awr" href="#22">Back to SQL Statistics</a>
		     -------------------- --------------------
 Src Block	Lost
Inst Class	Time  Immed   2hop   3hop  Immed   2hop   3hop
---- -------- ------ ------ ------ ------ ------ ------ ------
<br /><a class="awr" href="#top">Back to Top</a><p />
   2 data blo	       1226   1226    N/A    729    729    N/A
   2 others		457    457    N/A   1666   1666    N/A
   2 undo hea		511    511    N/A    705    705    N/A
<a class="awr" name="1150"></a>
   2 undo blo		N/A    N/A    N/A    N/A    N/A    N/A
			  ------------------------------------------------------

Interconnect Ping Latency Statistics	 DB/Inst: P30DB/p30db1	Snaps: 171-172
<h3 class="awr">SQL ordered by Cluster Wait Time</h3>
-> Ping latency of the roundtrip of a message from this instance to -> target in
-> The target instance is identified by an instance number.
-> Average and standard deviation of ping latency is given in microseconds
-> for message sizes of 500 bytes and 8K.
<ul>
-> Note that latency of a message from the instance to itself is used as
-> control, since message latency can include wait for CPU

   Target 500B Pin Avg La      Stddev  8K Ping Avg La	   Stddev
<li class="awr"> %Total - Cluster Time	as a percentage of Total Cluster Wait Time </li>
 Instance    Count 500B m    500B msg	 Count 8K msg	   8K msg
--------- -------- ------ ----------- -------- ------ -----------
<li class="awr"> %Clu	- Cluster Time	as a percentage of Elapsed Time </li>
	1	56    673	  .35	    61	  652	      .29
	2	56    960	  .55	    61	 1086	      .66
			  ------------------------------------------------------

Interconnect Throughput by Client	 DB/Inst: P30DB/p30db1	Snaps: 171-172
<li class="awr"> %CPU	- CPU Time	as a percentage of Elapsed Time </li>
-> Throughput of interconnect usage by major consumers
-> All throughput numbers are megabytes per second

<li class="awr"> %IO	- User I/O Time as a percentage of Elapsed Time </li>
			Send	 Receive
Used By 	  Mbytes/sec  Mbytes/sec
<li class="awr"> Only SQL with Cluster Wait Time &gt; .005 seconds is reported</li>
---------------- ----------- -----------
Global Cache		 .32	     .30
Parallel Query		 .00	     .00
DB Locks		1.36	    1.38
DB Streams		 N/A	     N/A
Other			 .00	     .00
<li class="awr">Total Cluster Wait Time (s):		 733</li>
			  ------------------------------------------------------

Interconnect Device Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Throughput and errors of interconnect devices (at OS level)
-> All throughput numbers are megabytes per second

Device Name	IP Address	 Public Source
--------------- ---------------- ------ -------------------------------
				  Send	   Send
<li class="awr">Captured SQL account for   99.4% of Total</li>
       Send	Send	 Send	Buffer	Carrier
 Mbytes/sec   Errors  Dropped  Overrun	   Lost
----------- -------- -------- -------- --------
			       Receive	Receive
</ul>
    Receive  Receive  Receive	Buffer	  Frame
 Mbytes/sec   Errors  Dropped  Overrun	 Errors
----------- -------- -------- -------- --------
fg-priv:1	169.254.22.248	 NO
	.00	   0	    0	     0	      0
	.00	   0	    0	     0	      0
			  ------------------------------------------------------

<table border="0" class="tdiff" summary="This table displays top SQL by cluster wait time"><tr><th class="awrbg" scope="col">Cluster Wait Time (s)</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">Elapsed Time(s)</th><th class="awrbg" scope="col">%Clu</th><th class="awrbg" scope="col">%CPU</th><th class="awrbg" scope="col">%IO</th><th class="awrbg" scope="col">   SQL Id</th><th class="awrbg" scope="col">SQL Module</th><th class="awrbg" scope="col">SQL Text</th></tr>
Dynamic Remastering Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Times are in seconds
-> Affinity objects - Affinity objects mastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot

							per    Begin	  End
<tr><td align="right" class='awrc'>591.61</td><td align="right" class='awrc'>689,468</td><td align="right" class='awrc'>80.72</td><td align="right" class='awrc'>8,941.51</td><td align="right" class='awrc'>6.62</td><td align="right" class='awrc'>6.96</td><td align="right" class='awrc'>89.48</td><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td>
Name					Total	Remaster Op	Snap	 Snap
-------------------------------- ------------ ------------- -------- --------
affinity objects					N/A	   1	    1
read-mostly objects					N/A	   3	    3
<td class='awrc'>
affinity objects (other inst)				N/A	   1	    1
read-mostly objects (persistent)			N/A	   3	    3
			  ------------------------------------------------------

SQL*Plus
End of Report
</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'>135.79</td><td align="right" class='awrnc'>121,676</td><td align="right" class='awrnc'>18.53</td><td align="right" class='awrnc'>1,653.51</td><td align="right" class='awrnc'>8.21</td><td align="right" class='awrnc'>8.20</td><td align="right" class='awrnc'>86.00</td><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'>48.25</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>6.58</td><td align="right" class='awrc'>568.79</td><td align="right" class='awrc'>8.48</td><td align="right" class='awrc'>9.72</td><td align="right" class='awrc'>84.80</td><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>44.97</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>6.14</td><td align="right" class='awrnc'>568.61</td><td align="right" class='awrnc'>7.91</td><td align="right" class='awrnc'>8.79</td><td align="right" class='awrnc'>86.15</td><td scope="row" class='awrnc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>44.13</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>6.02</td><td align="right" class='awrc'>568.85</td><td align="right" class='awrc'>7.76</td><td align="right" class='awrc'>9.65</td><td align="right" class='awrc'>85.49</td><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>43.42</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>5.92</td><td align="right" class='awrnc'>568.85</td><td align="right" class='awrnc'>7.63</td><td align="right" class='awrnc'>9.59</td><td align="right" class='awrnc'>85.74</td><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>39.52</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>5.39</td><td align="right" class='awrc'>568.84</td><td align="right" class='awrc'>6.95</td><td align="right" class='awrc'>8.87</td><td align="right" class='awrc'>86.92</td><td scope="row" class='awrc'><a class="awr" href="#7m9rphfj2sxqy">7m9rphfj2sxqy</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>39.45</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>5.38</td><td align="right" class='awrnc'>568.07</td><td align="right" class='awrnc'>6.94</td><td align="right" class='awrnc'>8.95</td><td align="right" class='awrnc'>86.97</td><td scope="row" class='awrnc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>39.40</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>5.38</td><td align="right" class='awrc'>568.74</td><td align="right" class='awrc'>6.93</td><td align="right" class='awrc'>8.49</td><td align="right" class='awrc'>87.32</td><td scope="row" class='awrc'><a class="awr" href="#07wu9h58t4tgt">07wu9h58t4tgt</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>39.29</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>5.36</td><td align="right" class='awrnc'>568.38</td><td align="right" class='awrnc'>6.91</td><td align="right" class='awrnc'>8.78</td><td align="right" class='awrnc'>87.03</td><td scope="row" class='awrnc'><a class="awr" href="#93dyj9jyyg3mj">93dyj9jyyg3mj</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>39.02</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>5.32</td><td align="right" class='awrc'>568.78</td><td align="right" class='awrc'>6.86</td><td align="right" class='awrc'>8.32</td><td align="right" class='awrc'>87.60</td><td scope="row" class='awrc'><a class="awr" href="#f5pbdmj9v6wga">f5pbdmj9v6wga</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>37.58</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>5.13</td><td align="right" class='awrnc'>568.57</td><td align="right" class='awrnc'>6.61</td><td align="right" class='awrnc'>8.02</td><td align="right" class='awrnc'>88.01</td><td scope="row" class='awrnc'><a class="awr" href="#bzs4fu7kk84h3">bzs4fu7kk84h3</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>37.40</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>5.10</td><td align="right" class='awrc'>568.83</td><td align="right" class='awrc'>6.57</td><td align="right" class='awrc'>8.38</td><td align="right" class='awrc'>87.73</td><td scope="row" class='awrc'><a class="awr" href="#10yxz9a3s65pn">10yxz9a3s65pn</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>37.31</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>5.09</td><td align="right" class='awrnc'>568.85</td><td align="right" class='awrnc'>6.56</td><td align="right" class='awrnc'>8.39</td><td align="right" class='awrnc'>87.72</td><td scope="row" class='awrnc'><a class="awr" href="#4tjq41wp5wggf">4tjq41wp5wggf</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>36.90</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>5.03</td><td align="right" class='awrc'>568.80</td><td align="right" class='awrc'>6.49</td><td align="right" class='awrc'>8.75</td><td align="right" class='awrc'>87.62</td><td scope="row" class='awrc'><a class="awr" href="#g679149chxm60">g679149chxm60</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>36.86</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>5.03</td><td align="right" class='awrnc'>568.60</td><td align="right" class='awrnc'>6.48</td><td align="right" class='awrnc'>8.04</td><td align="right" class='awrnc'>88.12</td><td scope="row" class='awrnc'><a class="awr" href="#26cgg6g31fq8p">26cgg6g31fq8p</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>35.50</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.84</td><td align="right" class='awrc'>568.03</td><td align="right" class='awrc'>6.25</td><td align="right" class='awrc'>8.39</td><td align="right" class='awrc'>88.11</td><td scope="row" class='awrc'><a class="awr" href="#bz8m3my689x30">bz8m3my689x30</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>35.00</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.78</td><td align="right" class='awrnc'>568.91</td><td align="right" class='awrnc'>6.15</td><td align="right" class='awrnc'>7.95</td><td align="right" class='awrnc'>88.48</td><td scope="row" class='awrnc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>34.74</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>4.74</td><td align="right" class='awrc'>568.91</td><td align="right" class='awrc'>6.11</td><td align="right" class='awrc'>7.92</td><td align="right" class='awrc'>88.62</td><td scope="row" class='awrc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>33.58</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4.58</td><td align="right" class='awrnc'>568.72</td><td align="right" class='awrnc'>5.90</td><td align="right" class='awrnc'>8.07</td><td align="right" class='awrnc'>88.59</td><td scope="row" class='awrnc'><a class="awr" href="#bhs63jbrb30ru">bhs63jbrb30ru</a></td>
<td class='awrnc'>
SQL*Plus
</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrc'>27.69</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3.78</td><td align="right" class='awrc'>568.84</td><td align="right" class='awrc'>4.87</td><td align="right" class='awrc'>7.13</td><td align="right" class='awrc'>90.15</td><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td>
<td class='awrc'>
SQL*Plus
</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td align="right" class='awrnc'>0.51</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.52</td><td align="right" class='awrnc'>96.73</td><td align="right" class='awrnc'>1.35</td><td align="right" class='awrnc'>2.06</td><td scope="row" class='awrnc'><a class="awr" href="#9x2prazfz86dz">9x2prazfz86dz</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'> select s.file#, s.block#, s.t...</td></tr>
<tr><td align="right" class='awrc'>0.32</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.38</td><td align="right" class='awrc'>84.57</td><td align="right" class='awrc'>15.56</td><td align="right" class='awrc'>2.96</td><td scope="row" class='awrc'><a class="awr" href="#bjck50zs3nc95">bjck50zs3nc95</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into WRH$_SYSSTAT (dbid...</td></tr>
<tr><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.35</td><td align="right" class='awrnc'>90.39</td><td align="right" class='awrnc'>7.06</td><td align="right" class='awrnc'>5.12</td><td scope="row" class='awrnc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td>
Report written to awr.txt
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>1.30</td><td align="right" class='awrc'>19.19</td><td align="right" class='awrc'>66.15</td><td align="right" class='awrc'>8.39</td><td scope="row" class='awrc'><a class="awr" href="#491wcfyfd6wc1">491wcfyfd6wc1</a></td>
<td class='awrc'>
SQL*Plus
SQL> </td>
SQL> SQL> SQL> <td class='awrc'>BEGIN DBMS_WORKLOAD_REPOSITORY...</td></tr>
SQL> SQL> SQL> <tr><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.58</td><td align="right" class='awrnc'>17.13</td><td align="right" class='awrnc'>78.14</td><td align="right" class='awrnc'>2.54</td><td scope="row" class='awrnc'><a class="awr" href="#6ajkhukk78nsr">6ajkhukk78nsr</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>begin prvt_hdm.auto_execute( :...</td></tr>
<tr><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>61.57</td><td align="right" class='awrc'>26.03</td><td align="right" class='awrc'>20.17</td><td scope="row" class='awrc'><a class="awr" href="#9gumgzs3rf5cw">9gumgzs3rf5cw</a></td>
<td class='awrc'>&#160;
</td>
<td class='awrc'>insert into WRH$_EVENT_HISTOGR...</td></tr>
<tr><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>7.69</td><td align="right" class='awrnc'>35.45</td><td align="right" class='awrnc'>38.24</td><td scope="row" class='awrnc'><a class="awr" href="#8fgdzmkchnn1a">8fgdzmkchnn1a</a></td>
<td class='awrnc'>&#160;
</td>
<td class='awrnc'>INSERT /*+ APPEND LEADING(@&quot;SE...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="07wu9h58t4tgt"></a>07wu9h58t4tgt</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '22';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;





v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the

name of the format at the prompt.  Default value is 'html'.

'html'		HTML format (default)
IF ( v_hot_schema_modulus != 0 ) THEN
'text'		Text format
'active-html'	Includes Performance Hub active report

	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP


Type Specified:  text

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="10yxz9a3s65pn"></a>10yxz9a3s65pn</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '35';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;


			END IF;

		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN

				v_scan_query_quota := TRUE;


			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="24djtk7r8fz33"></a>24djtk7r8fz33</td><td class='awrc'><pre_sqltext class="awr">update svcobj_access$ set accesses = :5,  inc_no = :6 where name = :1 AND pdb = :2 AND tsn = :3 AND objid = :4</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="26cgg6g31fq8p"></a>26cgg6g31fq8p</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '32';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,	C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="491wcfyfd6wc1"></a>491wcfyfd6wc1</td><td class='awrnc'><pre_sqltext class="awr">BEGIN DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT; END;
</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="4tjq41wp5wggf"></a>4tjq41wp5wggf</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '33';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
Current Database
~~~~~~~~~~~~~~~~
-- The type of SQL is now determined...execute it in the following section
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db


----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5mrhuphq8yfw1"></a>5mrhuphq8yfw1</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '16';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5wf99mx0r39xn"></a>5wf99mx0r39xn</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '3';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN

			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';

			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE


						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6ajkhukk78nsr"></a>6ajkhukk78nsr</td><td class='awrnc'><pre_sqltext class="awr">begin prvt_hdm.auto_execute( :dbid,  :inst_num ,  :end_snap_id ); end;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6hgs8vfsdc56c"></a>6hgs8vfsdc56c</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '11';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6n2qqv1brfhpp"></a>6n2qqv1brfhpp</td><td class='awrnc'><pre_sqltext class="awr">select ind.type#,  ind.property,    base_obj.obj#,  base_owner.name,   base_obj.name  from sys.ind$ ind,  sys.user$ base_owner,	sys.obj$  base_obj  where ind.obj#	    = :oid    and ind.dataobj#	    = :doid    and ind.bo#	   = base_obj.obj#    and base_obj.owner# = base_owner.user#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6wvzvgvg6qsyb"></a>6wvzvgvg6qsyb</td><td class='awrc'><pre_sqltext class="awr">INSERT INTO wri$_adv_findings (id,  task_id,  type,  parent,  obj_id,  impact_msg_id,  impact_val,  msg_id,  more_info_id,  name_msg_code,  flags,  exec_name) VALUES (:1,  :2,  :3,  :4,	:5,  :6,  :7, :8,  :9,	:10,  :11,  :12) </pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6x8682kb2y8vd"></a>6x8682kb2y8vd</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '20';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';





v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;


v_seconds_to_run := v_seconds_to_run * 100 ;

Instances in this Workload Repository schema

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="71v63sn4bfskh"></a>71v63sn4bfskh</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '7';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
v_hotspot_mb  NUMBER := '8';
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex
v_hotspot_offset_mb NUMBER := '16';

v_hotspot_modulus  PLS_INTEGER := '3';
Using 3393773525 for database Id
Using instances ALL (default 'ALL')

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)

----------------------------------------------------------------------------------------------------------------------

Specify the number of days of snapshots to choose from

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
	IF  ( v_select_only_workload = TRUE ) THEN
specifying a number lists all completed snapshots.


		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
Enter value for num_days: 			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)

			v_do_scan_query := FALSE;
Listing all Completed Snapshots
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="72r567f4w1r2z"></a>72r567f4w1r2z</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '17';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="7m9rphfj2sxqy"></a>7m9rphfj2sxqy</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '34';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
DB Name      Snap Id	   Snap Started    Snap Level
					v_do_update := FALSE;
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
				END IF;
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
			ELSE
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
		    13	06 Feb 2020 07:00    1
		    14	06 Feb 2020 08:00    1
				IF ( v_scan_query_quota = FALSE ) THEN
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
		    19	06 Feb 2020 13:00    1
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
		    24	06 Feb 2020 15:55    1
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1

		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
			v_scan_queries_cnt := v_scan_queries_cnt + 1;
		    38	07 Feb 2020 04:00    1
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
			v_update_quota := TRUE;
		    45	07 Feb 2020 11:00    1
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
		END IF;
		    50	08 Feb 2020 08:13    1
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
	END IF ;
		    55	08 Feb 2020 08:48    1
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
------------ ---------- ------------------ ----------
		v_scan_query_quota := FALSE;

P30DB		    57	08 Feb 2020 09:00    1
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
		    60	08 Feb 2020 09:17    1
		v_scan_queries_cnt := 0;
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
		    63	08 Feb 2020 09:43    1
		    64	08 Feb 2020 09:53    1
		    65	08 Feb 2020 10:03    1
		v_random_access_queries_cnt := 0;
		    66	08 Feb 2020 10:08    1
		    67	08 Feb 2020 10:18    1
		    68	08 Feb 2020 10:27    1
		    69	08 Feb 2020 10:37    1
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;
		    70	08 Feb 2020 10:44    1

		    71	08 Feb 2020 10:54    1
		    72	08 Feb 2020 11:36    1
		    73	08 Feb 2020 11:46    1
		    74	08 Feb 2020 13:00    1
		    75	08 Feb 2020 14:00    1
END;</pre_sqltext></td></tr>
		    76	08 Feb 2020 14:20    1
		    77	08 Feb 2020 14:30    1
		    78	08 Feb 2020 15:55    1
		    79	08 Feb 2020 16:05    1
		    80	08 Feb 2020 17:00    1
		    81	08 Feb 2020 17:33    1
		    82	08 Feb 2020 17:43    1
		    83	08 Feb 2020 19:00    1
		    84	08 Feb 2020 20:00    1
<tr><td scope="row" class='awrnc'><a class="awr" name="8fgdzmkchnn1a"></a>8fgdzmkchnn1a</td><td class='awrnc'><pre_sqltext class="awr">INSERT /*+ APPEND  LEADING(@&quot;SEL$F5BB74E1&quot; &quot;H&quot;@&quot;SEL$2&quot; &quot;A&quot;@&quot;SEL$1&quot;)  USE_NL(@&quot;SEL$F5BB74E1&quot; &quot;A&quot;@&quot;SEL$1&quot;) 	*/ INTO  WRH$_ACTIVE_SESSION_HISTORY  ( snap_id,  dbid,  instance_number ,  sample_id,	sample_time, sample_time_utc,  usecs_per_row ,	session_id,  session_serial#,  session_type ,  flags ,	user_id ,  sql_id,  sql_child_number,  sql_opcode,  force_matching_signature ,	top_level_sql_id,  top_level_sql_opcode ,  sql_plan_hash_value,  sql_full_plan_hash_value ,  sql_adaptive_plan_resolved ,  sql_plan_line_id ,  sql_plan_operation#,  sql_plan_options# ,  sql_exec_id,	sql_exec_start ,  plsql_entry_object_id,  plsql_entry_subprogram_id ,  plsql_object_id,        plsql_subprogram_id ,  qc_instance_id,  qc_session_id,  qc_session_serial#,  px_flags ,	event_id,  seq#,  p1,  p2,  p3 ,  wait_time,  time_waited ,  blocking_session,	blocking_session_serial#,  blocking_inst_id ,  current_obj#,  current_file#,  current_block#,  current_row# ,  top_level_call#,  consumer_group_id,  xid,  remote_instance#,  time_model ,  service_hash,  program,  module,  action,  client_id,  machine,  port,    ecid ,  dbreplay_file_id,  dbreplay_call_counter ,  con_dbid,  per_pdb ,	tm_delta_time,	tm_delta_cpu_time,  tm_delta_db_time,  delta_time,  delta_read_io_requests,  delta_write_io_requests,  delta_read_io_bytes,  delta_write_io_bytes,  delta_interconnect_io_bytes,  pga_allocated,  temp_space_allocated ,  dbop_name,  dbop_exec_id  )  (SELECT /*+ PARAM('_module_action_old_length', 0) */:snap_id,  :dbid,  :instance_number ,  a.sample_id,	a.sample_time, a.sample_time_utc ,  a.usecs_per_row * :disk_filter_ratio ,  a.session_id,  a.session_serial#,  a.session_type ,  decode(a.flags,  0,  to_number(NULL),	a.flags) ,  a.user_id ,  a.sql_id,  a.sql_child_number,  a.sql_opcode,	a.force_matching_signature ,  a.top_level_sql_id,  a.top_level_sql_opcode ,  a.sql_plan_hash_value,  a.sql_full_plan_hash_value ,  a.sql_adaptive_plan_resolved ,  a.sql_plan_line_id ,  a.sql_plan_operation#,  a.sql_plan_options# ,	a.sql_exec_id,	a.sql_exec_start ,  a.plsql_entry_object_id,  a.plsql_entry_subprogram_id ,  a.plsql_object_id,        a.plsql_subprogram_id ,	a.qc_instance_id,  a.qc_session_id,  a.qc_session_serial#,  a.px_flags ,  a.event_id,  a.seq#,	a.p1,  a.p2,  a.p3 ,  a.wait_time,  a.time_waited ,  a.blocking_session,  a.blocking_session_serial#,  a.blocking_inst_id ,  a.current_obj#,  a.current_file#,	a.current_block#,  a.current_row# ,  a.top_level_call#,  a.consumer_group_id,  a.xid,  a.remote_instance# ,  a.time_model ,  a.service_hash ,  substrb(a.program,  1,  64) ,  a.module,  a.action,  a.client_id,  a.machine,  a.port,  a.ecid ,  a.dbreplay_file_id,  a.dbreplay_call_counter ,  a.con_dbid,  a.con_id ,  decode(a.tm_delta_time,  0,  to_number(null),  a.tm_delta_time),  decode(a.tm_delta_time,  0,  to_number(null),  a.tm_delta_cpu_time),  decode(a.tm_delta_time,  0,  to_number(null),  a.tm_delta_db_time),  decode(a.delta_time,  0,  to_number(null),	    a.delta_time),  decode(a.delta_time,  0,  to_number(null),		 decode(a.delta_read_io_requests,  0,  to_number(null), 		 a.delta_read_io_requests)),  decode(a.delta_time,  0,	to_number(null),	   decode(a.delta_write_io_requests,  0,  to_number(null),		    a.delta_write_io_requests)),  decode(a.delta_time,	0,  to_number(null),	       decode(a.delta_read_io_bytes,  0,  to_number(null),		    a.delta_read_io_bytes)),  decode(a.delta_time,  0,	to_number(null),	   decode(a.delta_write_io_bytes,  0,  to_number(null), 		 a.delta_write_io_bytes)),  decode(a.delta_time,  0,  to_number(null),		 decode(a.delta_interconnect_io_bytes,	0,  to_number(null),		      a.delta_interconnect_io_bytes)),	decode(a.pga_allocated,  0,  to_number(null),  a.pga_allocated),  decode(a.pga_allocated,  0,  to_number(null), 	  decode(a.temp_space_allocated,  0,  to_number(null),			a.temp_space_allocated)) ,  a.dbop_name,  a.dbop_exec_id FROM	   x$ash a,	      (SELECT h.sample_addr,  h.sample_id	    FROM   x$kewash h	       WHERE		      ( (h.sample_id &gt;= :begin_flushing) and 		  (h.sample_id &lt;  :latest_sample_id) )	      and (nlssort(h.is_awr_sample, 'nls_sort=BINARY') =		  nlssort('Y',	'nls_sort=BINARY'))	      ) shdr  WHERE (1 = 1)	and shdr.sample_addr	 = a.sample_addr     and shdr.sample_id       = a.sample_id	and nlssort(a.need_awr_sample,	'nls_sort=BINARY') =	     nlssort('Y',  'nls_sort=BINARY')) </pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="93dyj9jyyg3mj"></a>93dyj9jyyg3mj</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '10';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

		    85	08 Feb 2020 21:00    1
		    86	08 Feb 2020 22:00    1
		    87	08 Feb 2020 23:00    1
v_sleep_modulus PLS_INTEGER := '0';
		    88	09 Feb 2020 00:00    1
		    89	09 Feb 2020 01:00    1
		    90	09 Feb 2020 02:00    1
		    91	09 Feb 2020 03:00    1
		    92	09 Feb 2020 04:00    1
v_sleep_min NUMBER := '.1';
		    93	09 Feb 2020 05:00    1
		    94	09 Feb 2020 06:00    1
		    95	09 Feb 2020 07:00    1
		    96	09 Feb 2020 08:00    1
		    97	09 Feb 2020 09:00    1
v_sleep_max NUMBER := '.5';
		    98	09 Feb 2020 10:00    1
		    99	09 Feb 2020 11:20    1
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
		   100	09 Feb 2020 11:30    1
		   101	09 Feb 2020 11:33    1
v_random_workload_only BOOLEAN := FALSE;
		   102	09 Feb 2020 11:43    1
		   103	09 Feb 2020 11:46    1
		   104	09 Feb 2020 11:56    1
		   105	09 Feb 2020 11:58    1

		   106	09 Feb 2020 12:08    1
		   107	09 Feb 2020 13:00    1
		   108	09 Feb 2020 14:00    1
		   109	09 Feb 2020 14:09    1
		   110	09 Feb 2020 14:19    1

		   111	09 Feb 2020 14:52    1
		   112	09 Feb 2020 15:02    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------
v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;

P30DB		   113	09 Feb 2020 16:00    1
		   114	09 Feb 2020 17:00    1
		   115	09 Feb 2020 18:00    1
		   116	09 Feb 2020 19:00    1
v_do_hot_schema BOOLEAN := FALSE;
		   117	09 Feb 2020 20:00    1
		   118	09 Feb 2020 20:30    1
		   119	09 Feb 2020 20:40    1
		   120	09 Feb 2020 20:47    1
		   121	09 Feb 2020 20:57    1
v_stop_immediate BOOLEAN := FALSE;
		   122	09 Feb 2020 22:00    1
		   123	09 Feb 2020 23:00    1
		   124	10 Feb 2020 00:00    1
		   125	10 Feb 2020 01:00    1
		   126	10 Feb 2020 02:00    1
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
		   127	10 Feb 2020 03:00    1
	v_do_sleeps := TRUE;
		   128	10 Feb 2020 04:00    1
		   129	10 Feb 2020 05:00    1
		   130	10 Feb 2020 06:00    1
		   131	10 Feb 2020 07:00    1
		   132	10 Feb 2020 08:00    1
END IF;
		   133	10 Feb 2020 09:00    1
		   134	10 Feb 2020 09:08    1
		   135	10 Feb 2020 09:18    1

		   136	10 Feb 2020 10:00    1
		   137	10 Feb 2020 10:47    1
		   138	10 Feb 2020 10:58    1
IF ( v_max_loop_iterations &gt; 0 )  THEN
		   139	10 Feb 2020 11:09    1
		   140	10 Feb 2020 11:19    1
		   141	10 Feb 2020 11:21    1
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);
		   142	10 Feb 2020 11:31    1
		   143	10 Feb 2020 13:00    1

		   144	10 Feb 2020 14:00    1
		   145	10 Feb 2020 14:19    1
		   146	10 Feb 2020 14:29    1
		   147	10 Feb 2020 14:33    1
		   148	10 Feb 2020 14:41    1
-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
		   149	10 Feb 2020 14:47    1
		   150	10 Feb 2020 14:57    1
		   151	10 Feb 2020 15:04    1
		   152	10 Feb 2020 15:05    1
		   153	10 Feb 2020 15:15    1
-- DBMS_RANDOM.seed (val =&gt; v_seed);
		   154	10 Feb 2020 15:24    1
		   155	10 Feb 2020 15:34    1
		   156	10 Feb 2020 15:44    1

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

		   157	10 Feb 2020 15:54    1
	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		   158	10 Feb 2020 16:18    1
		   159	10 Feb 2020 16:28    1
		   160	10 Feb 2020 16:34    1
		   161	10 Feb 2020 16:44    1
		   162	10 Feb 2020 16:46    1
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
		   163	10 Feb 2020 16:56    1
		   164	10 Feb 2020 18:02    1
		   165	10 Feb 2020 19:32    1
		   166	10 Feb 2020 19:42    1
		   167	10 Feb 2020 19:49    1
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
		   168	10 Feb 2020 19:59    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

P30DB		   169	10 Feb 2020 20:13    1
----------------------------------------------------------------------------------------------------------------------
		   170	10 Feb 2020 20:23    1
		   171	10 Feb 2020 20:33    1
		   172	10 Feb 2020 20:43    1
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------


	IF  ( v_select_only_workload = TRUE ) THEN

		-- handle case where user specified zero pct updates (a SELECT-only workload)
Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		v_do_update := FALSE;
Begin Snapshot Id specified: 171

		v_update_quota := TRUE ;
End   Snapshot Id specified: 172

	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS

					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="9babjv8yq8ru3"></a>9babjv8yq8ru3</td><td class='awrnc'><pre_sqltext class="awr">BEGIN DBMS_OUTPUT.GET_LINES(:LINES,  :NUMLINES); END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9gumgzs3rf5cw"></a>9gumgzs3rf5cw</td><td class='awrc'><pre_sqltext class="awr">insert into  WRH$_EVENT_HISTOGRAM	(dbid,	per_pdb,  con_dbid,  snap_id,  instance_number,      event_id,	wait_time_milli,  wait_count ) select  :dbid,  0 per_pdb,   :srcdbid  con_dbid,   :snap_id,  :instance_number,	       d.ksledhash,  s.kslsesmaxdur/1024,	  s.kslsesval  FROM   x$kslseshist_micro   s,	x$ksled   d  WHERE (1 = 1)   and s.kslsesenum = d.indx	 and s.kslsesval &gt; 0 </pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="9x2prazfz86dz"></a>9x2prazfz86dz</td><td class='awrnc'><pre_sqltext class="awr"> select s.file#,  s.block#,  s.ts#,  t.obj#,  s.hwmincr,  t.obj# from tab$ t,  seg$ s where bitand(s.spare1,  4503599627370496) = 4503599627370496 and bitand(s.spare1,	65536) &lt;&gt; 65536  and s.file# = t.file# and s.ts# = t.ts# and s.block# = t.block# UNION  select s.file#,  s.block#,  s.ts#,  t.obj#,  s.hwmincr,  tab.obj# from tabpart$ t,  tab$ tab,  seg$ s  where bitand(s.spare1,  4503599627370496) = 4503599627370496 and bitand(s.spare1,	65536) &lt;&gt; 65536  and s.file# = t.file# and s.ts# = t.ts# and s.block# = t.block# and tab.obj# = t.bo# UNION  select s.file#,  s.block#,  s.ts#,  t.obj#,	s.hwmincr,   tab.obj# from tabsubpart$ t,  tab$ tab,  tabcompart$ tcp,	 seg$ s  where bitand(s.spare1,  4503599627370496) = 4503599627370496 and bitand(s.spare1,  65536) &lt;&gt; 65536  and s.file# = t.file# and s.ts# = t.ts# and s.block# = t.block# and t.pobj# = tcp.obj# and tab.obj# = tcp.bo#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9yv5dwv8k0awg"></a>9yv5dwv8k0awg</td><td class='awrc'><pre_sqltext class="awr">WITH MONITOR_DATA AS (SELECT INST_ID,  KEY,  NVL2(PX_QCSID,  NULL,  STATUS) STATUS,  FIRST_REFRESH_TIME,  LAST_REFRESH_TIME,  REFRESH_COUNT,  PROCESS_NAME,  SID,	SQL_ID,  SQL_EXEC_START,  SQL_EXEC_ID,	DBOP_NAME,  DBOP_EXEC_ID,  SQL_PLAN_HASH_VALUE,  SQL_FULL_PLAN_HASH_VALUE,  SESSION_SERIAL#,  SQL_TEXT,  PX_SERVER#,  PX_SERVER_GROUP,	PX_SERVER_SET,	PX_QCINST_ID,  PX_QCSID,  CASE WHEN ELAPSED_TIME &lt; (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) THEN (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) ELSE ELAPSED_TIME END ELAPSED_TIME,  QUEUING_TIME,  CPU_TIME,  APPLICATION_WAIT_TIME,  CONCURRENCY_WAIT_TIME,  CLUSTER_WAIT_TIME,	USER_IO_WAIT_TIME,  CASE WHEN ELAPSED_TIME &lt; (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) THEN 0 ELSE ELAPSED_TIME - (CPU_TIME+ APPLICATION_WAIT_TIME+ CONCURRENCY_WAIT_TIME+ CLUSTER_WAIT_TIME+ USER_IO_WAIT_TIME+ QUEUING_TIME) END OTHER_WAIT_TIME,  PLSQL_EXEC_TIME,  JAVA_EXEC_TIME,  FETCHES,	BUFFER_GETS,  IO_INTERCONNECT_BYTES IO_INTER_BYTES,  PHYSICAL_READ_REQUESTS READ_REQS,	PHYSICAL_READ_BYTES READ_BYTES,  PHYSICAL_WRITE_REQUESTS WRITE_REQS,  PHYSICAL_WRITE_BYTES WRITE_BYTES,  NVL(PHYSICAL_READ_BYTES,  0) + NVL(PHYSICAL_WRITE_BYTES,  0) IO_BYTES,  NVL(PHYSICAL_READ_REQUESTS,  0) + NVL(PHYSICAL_WRITE_REQUESTS,  0) IO_REQS,  IO_CELL_UNCOMPRESSED_BYTES IO_UNC_BYTES,	IO_CELL_OFFLOAD_ELIGIBLE_BYTES IO_ELIG_BYTES,  IO_CELL_OFFLOAD_RETURNED_BYTES IO_RET_BYTES,  USER# USERID,  USERNAME,  MODULE,	ACTION,  SERVICE_NAME,	CLIENT_IDENTIFIER,  CLIENT_INFO,  PROGRAM,  PLSQL_OBJECT_ID PL_OID,  PLSQL_SUBPROGRAM_ID PL_PROGID,  PLSQL_ENTRY_OBJECT_ID PL_ENTRY_OID,  PLSQL_ENTRY_SUBPROGRAM_ID PL_ENTRY_PROGID,  PX_MAXDOP MAX_DOP,  PX_IS_CROSS_INSTANCE,  PX_MAXDOP_INSTANCES MAX_DOP_INSTANCES,  PX_SERVERS_REQUESTED SERVERS_REQUESTED,  PX_SERVERS_ALLOCATED SERVERS_ALLOCATED,  ERROR_NUMBER,  ERROR_FACILITY,  ERROR_MESSAGE,  NVL2(OTHER_XML,  'Y',  NULL) HAS_OTHER_XML,	NVL2(BINDS_XML,  'Y',  NULL) HAS_BINDS_XML,  NVL2(RM_CONSUMER_GROUP,  NVL2(RM_LAST_ACTION_TIME,  TO_CHAR(RM_LAST_ACTION_TIME,  :B12 ),	'00/00/0000 00:00:01') || XMLELEMENT( &quot;rminfo&quot;,  XMLATTRIBUTES( RM_LAST_ACTION AS &quot;rmlastact&quot;,  RM_LAST_ACTION_REASON AS &quot;rmlastreason&quot;,	TO_CHAR(RM_LAST_ACTION_TIME,  :B12 ) AS &quot;rmlasttime&quot;,  RM_CONSUMER_GROUP AS &quot;rmcg&quot;)).GETSTRINGVAL(),  '00/00/0000 00:00:00') RM_INFO,  CON_NAME,  CON_ID FROM GV$ALL_SQL_MONITOR MO1 WHERE MO1.INST_ID BETWEEN :B11 AND :B10 AND MO1.SQL_ID = NVL(:B9 ,  MO1.SQL_ID) AND MO1.SQL_EXEC_START = NVL(:B8 ,  MO1.SQL_EXEC_START) AND MO1.SQL_EXEC_ID = NVL(:B7 ,  MO1.SQL_EXEC_ID) OR (MO1.DBOP_NAME = NVL(:B6 ,  MO1.DBOP_NAME) AND MO1.DBOP_EXEC_ID = NVL(:B5 ,  MO1.DBOP_EXEC_ID)) AND ((:B4 = 1 AND MO1.PX_QCSID IS NULL) OR (MO1.PX_SERVER_GROUP = NVL(:B3 ,  MO1.PX_SERVER_GROUP) AND MO1.PX_SERVER_SET = NVL(:B2 ,  MO1.PX_SERVER_SET) AND MO1.PX_SERVER# = NVL(:B1 ,  MO1.PX_SERVER#)))),  MONITOR_AGG AS (SELECT MAX_PX_QCSID,  MAX_KEY,  MAX_INST_ID,  MAX_SESSION_ID,  MAX_SESSION_SERIAL,  MAX_PX_DOP,  MAX_PX_DOP_INSTANCES,  MAX_PX_IS_CROSS_INSTANCE,  SUM_SERVERS_REQUESTED,  SUM_SERVERS_ALLOCATED,  DIST_INST_COUNT,	DIST_PX_GROUP_COUNT,  DIST_PX_SET_COUNT,  MAX_PLAN_HASH_VALUE,	MAX_FULL_PLAN_HASH_VALUE,  MAX_USERID,	MAX_PROGRAM,  MAX_USERNAME,  MAX_MODULE,  MAX_ACTION,  MAX_SERVICE_NAME,  MAX_CLIENT_ID,  MAX_CLIENT_INFO,  MAX_ERROR_NUMBER,  MAX_ERROR_FACILITY,  MAX_ERROR_MESSAGE,	QC_HAS_OTHER_XML,  QC_HAS_BINDS_XML,  MAX_PL_OID,  MAX_PL_PROGID,  MAX_PL_ENTRY_OID,  MAX_PL_ENTRY_PROGID,  MAX_SQL_ID,  MAX_SQL_EXEC_START,  MAX_SQL_EXEC_ID,	MAX_LAST_REFRESH_TIME,	MAX_DBOP_NAME,	MAX_DBOP_EXEC_ID,  CASE WHEN MAX_PL_OID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,  NULL,  '',  '.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = MAX_PL_OID AND P.SUBPROGRAM_ID = MAX_PL_PROGID AND ROWNUM = 1),  'Unavailable') END MAX_PL_NAME,  CASE WHEN MAX_PL_ENTRY_OID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,	NULL,  '',  '.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = MAX_PL_ENTRY_OID AND P.SUBPROGRAM_ID = MAX_PL_ENTRY_PROGID AND ROWNUM = 1),  'Unavailable') END MAX_PL_ENTRY_NAME,  MAX_STATUS,	SUM_REFRESH_COUNT,  MIN_FIRST_REFRESH_TIME,  SQLMON_TEXT,  SUM_ELAPSED_TIME,  MAX_ELAPSED_TIME,  MAX_QUEUING_TIME,  SUM_CPU_TIME,  SUM_USER_IO_WAIT_TIME,  SUM_APPLICATION_WAIT_TIME,  SUM_CONCURRENCY_WAIT_TIME,  SUM_CLUSTER_WAIT_TIME,  SUM_PLSQL_EXEC_TIME,  SUM_JAVA_EXEC_TIME,  SUM_OTHER_WAIT_TIME,  SUM_FETCHES,  SUM_BUFFER_GETS,  SUM_READ_REQS,  SUM_READ_BYTES,  SUM_WRITE_REQS,  SUM_WRITE_BYTES,	SUM_IO_BYTES,  SUM_IO_INTER_BYTES,  SUM_IO_UNC_BYTES,  SUM_IO_ELIG_BYTES,  SUM_IO_RET_BYTES,  DECODE(:B14 ,  1,  'db_name',  SYS_CONTEXT('userenv',  'db_unique_name')) DB_UNIQUE_NAME,  DECODE(:B14 ,	1,  'platform_name',  SYS.DBMS_UTILITY.PORT_STRING) PLATFORM_NAME,  DECODE(:B14 ,  1,  'host_name',  SYS_CONTEXT('userenv',  'server_host')) HOST_NAME,  AGG_RM_INFO MAX_RM_INFO,  MAX_CON_NAME,  DECODE(MAX_CON_ID,  0,  NULL,  MAX_CON_ID) MAX_CON_ID FROM (SELECT MAX(PX_QCSID) MAX_PX_QCSID,  MAX(CASE WHEN PX_QCSID IS NULL THEN KEY ELSE NULL END) MAX_KEY,  MAX(CASE WHEN PX_QCSID IS NULL THEN INST_ID ELSE NULL END) MAX_INST_ID,  MAX(CASE WHEN PX_QCSID IS NULL THEN SID ELSE NULL END) MAX_SESSION_ID,  MAX(CASE WHEN PX_QCSID IS NULL THEN SESSION_SERIAL# ELSE NULL END) MAX_SESSION_SERIAL,  MAX(MAX_DOP) MAX_PX_DOP,  MAX(MAX_DOP_INSTANCES) MAX_PX_DOP_INSTANCES,  MAX(PX_IS_CROSS_INSTANCE) MAX_PX_IS_CROSS_INSTANCE,  SUM(SERVERS_REQUESTED) SUM_SERVERS_REQUESTED,	SUM(SERVERS_ALLOCATED) SUM_SERVERS_ALLOCATED,  COUNT(DISTINCT INST_ID) DIST_INST_COUNT,  COUNT(DISTINCT PX_SERVER_GROUP) DIST_PX_GROUP_COUNT,  COUNT(DISTINCT PX_SERVER_SET) DIST_PX_SET_COUNT,  MAX(SQL_PLAN_HASH_VALUE) MAX_PLAN_HASH_VALUE,	MAX(SQL_FULL_PLAN_HASH_VALUE) MAX_FULL_PLAN_HASH_VALUE,  MAX(USERID) MAX_USERID,  MAX(PROGRAM) MAX_PROGRAM,  MAX(USERNAME) MAX_USERNAME,  MAX(MODULE) MAX_MODULE,  MAX(ACTION) MAX_ACTION,  MAX(SERVICE_NAME) MAX_SERVICE_NAME,  MAX(CLIENT_IDENTIFIER) MAX_CLIENT_ID,	MAX(CLIENT_INFO) MAX_CLIENT_INFO,  MAX(ERROR_NUMBER) MAX_ERROR_NUMBER,	MAX(ERROR_FACILITY) MAX_ERROR_FACILITY,  MAX(ERROR_MESSAGE) MAX_ERROR_MESSAGE,	MAX(NVL2(PX_QCSID,  HAS_OTHER_XML,  NULL)) QC_HAS_OTHER_XML,  MAX(HAS_BINDS_XML) QC_HAS_BINDS_XML,  MAX(PL_OID) MAX_PL_OID,  MAX(PL_PROGID) MAX_PL_PROGID,  MAX(PL_ENTRY_OID) MAX_PL_ENTRY_OID,  MAX(PL_ENTRY_PROGID) MAX_PL_ENTRY_PROGID,  MAX(SQL_ID) MAX_SQL_ID,  MAX(SQL_EXEC_START) MAX_SQL_EXEC_START,  MAX(SQL_EXEC_ID) MAX_SQL_EXEC_ID,  MAX(LAST_REFRESH_TIME) MAX_LAST_REFRESH_TIME,	MAX(STATUS) MAX_STATUS,  SUM(REFRESH_COUNT) SUM_REFRESH_COUNT,	MIN(FIRST_REFRESH_TIME) MIN_FIRST_REFRESH_TIME,  MAX(DBOP_NAME) MAX_DBOP_NAME,	MAX(DBOP_EXEC_ID) MAX_DBOP_EXEC_ID,  CASE WHEN :B13 = 0 THEN NULL ELSE MAX(SQL_TEXT) END SQLMON_TEXT,  SUM(ELAPSED_TIME) SUM_ELAPSED_TIME,  MAX(ELAPSED_TIME) MAX_ELAPSED_TIME,  MAX(QUEUING_TIME) MAX_QUEUING_TIME,  SUM(CPU_TIME) SUM_CPU_TIME,  SUM(USER_IO_WAIT_TIME) SUM_USER_IO_WAIT_TIME,  SUM(APPLICATION_WAIT_TIME) SUM_APPLICATION_WAIT_TIME,  SUM(CONCURRENCY_WAIT_TIME) SUM_CONCURRENCY_WAIT_TIME,	SUM(CLUSTER_WAIT_TIME) SUM_CLUSTER_WAIT_TIME,  SUM(PLSQL_EXEC_TIME) SUM_PLSQL_EXEC_TIME,  SUM(JAVA_EXEC_TIME) SUM_JAVA_EXEC_TIME,  SUM(OTHER_WAIT_TIME) SUM_OTHER_WAIT_TIME,  SUM(FETCHES) SUM_FETCHES,  SUM(BUFFER_GETS) SUM_BUFFER_GETS,  SUM(READ_REQS) SUM_READ_REQS,  SUM(READ_BYTES) SUM_READ_BYTES,  SUM(WRITE_REQS) SUM_WRITE_REQS,  SUM(WRITE_BYTES) SUM_WRITE_BYTES,	NVL(SUM(READ_BYTES),  0) + NVL(SUM(WRITE_BYTES),  0) SUM_IO_BYTES,  SUM(IO_INTER_BYTES) SUM_IO_INTER_BYTES,  SUM(IO_UNC_BYTES) S
UM_IO_UNC_BYTES,  SUM(IO_ELIG_BYTES) SUM_IO_ELIG_BYTES,  SUM(IO_RET_BYTES) SUM_IO_RET_BYTES,  MAX(RM_INFO) AGG_RM_INFO,  MAX(CON_NAME) MAX_CON_NAME,  MAX(CON_ID) MAX_CON_ID FROM MONITOR_DATA) MD),  ASH_DATA AS (SELECT AD0.INST_ID,	AD0.SESSION_ID,  AD0.PLAN_LINE_ID,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  AD0.ACTIVITY_BUCKET_NUM,  AD0.PLAN_ACTIVITY_BUCKET_NUM,  AD0.SQL,  AD0.TOP_LEVEL_SQL_ID,  AD0.DBOP_NAME,  AD0.IS_MONITORED_SQL,  AD0.IS_PX_SLAVE,  AD0.BUCKET_ACTIVITY_START,  AD0.ACTIVITY_START,	AD0.BUCKET_ACTIVITY_END,  AD0.ACTIVITY_END,  AD0.ACTIVITY_COUNT,  AD0.ACTIVITY_TYPE,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.IMQ_COUNT,  AD0.WAIT_COUNT,  AD0.CPU_COUNT,  AD0.OTHER_SQL_COUNT,  AD0.PX_SERVER_SET,	AD0.PX_DFO_ACTIVITY_COUNT,  AD0.DFO_MOST_ACTIVE_IID,  AD0.DFO_MOST_ACTIVE_SID,	(CASE WHEN AD0.DFO_MOST_ACTIVE_IID = AD0.INST_ID AND AD0.DFO_MOST_ACTIVE_SID = AD0.SESSION_ID AND (((AD0.PX_DFO_ACTIVITY_COUNT / AD0.DFO_MOST_ACTIVE_COUNT) &gt;= AD0.PX_DOP * 1.05) OR ((AD0.PX_DFO_ACTIVITY_COUNT / AD0.DFO_MOST_ACTIVE_COUNT) &lt;= AD0.PX_DOP *0.95)) AND (AD0.DFO_DURATION * 100) &gt; :B32 THEN AD0.ACTIVITY_COUNT ELSE NULL END) DFO_MOST_ACTIVE_COUNT,	AD0.BUCKET_DISTINCT_SAMPLES,  AD0.SQL_BUCKET_DISTINCT_SAMPLES,	CASE WHEN AD0.PX_SERVER_GROUP IS NULL AND AD0.IS_PX_SLAVE = 1 THEN 1 ELSE AD0.PX_SERVER_GROUP END PX_SERVER_GROUP,  AD0.PX_STEP_ID,  AD0.PX_DFO_PAIR_TYPE,  AD0.PX_DFO_PAIR_ID,  AD0.PX_STEP_ARG,  AD0.PX_DOP,	CASE WHEN AD0.PX_DOP IS NOT NULL AND AD0.PX_DOP &lt;&gt; AD0.PX_MIN_DOP AND AD0.PX_MIN_DOP != 0 THEN PX_MIN_DOP ELSE NULL END PX_MIN_DOP FROM (SELECT /*+ use_hash(ash) leading(mo) */ ASH.INST_ID,  ASH.IS_PX_SLAVE,  ASH.SESSION_ID,	ASH.PLAN_LINE_ID,  ASH.PLSQL_OBJECT_ID,  ASH.PLSQL_SUBPROGRAM_ID,  ASH.ACTIVITY_BUCKET_NUM,  ASH.PLAN_ACTIVITY_BUCKET_NUM,  ASH.SQL,  ASH.TOP_LEVEL_SQL_ID,  ASH.DBOP_NAME,  ASH.IS_MONITORED_SQL,  ASH.BUCKET_ACTIVITY_START,	ASH.ACTIVITY_START,  ASH.BUCKET_ACTIVITY_END,  ASH.ACTIVITY_END,  ASH.ACTIVITY_COUNT,  ASH.ACTIVITY_TYPE,  ASH.OTHER_SQL_ACTIVITY_TYPE,  ASH.EVENT_NAME,  ASH.IMQ_COUNT,  ASH.WAIT_COUNT,  ASH.CPU_COUNT,  ASH.OTHER_SQL_COUNT,  MO.PX_SERVER_SET,  ASH.PX_DFO_ACTIVITY_COUNT,	TRUNC(ASH.MOST_ACTIVE_IN_DFO / 10000000000) DFO_MOST_ACTIVE_COUNT,  MOD(TRUNC(ASH.MOST_ACTIVE_IN_DFO / 1000000),  10000) DFO_MOST_ACTIVE_IID,  MOD(ASH.MOST_ACTIVE_IN_DFO,  1000000) DFO_MOST_ACTIVE_SID,  ASH.DFO_DURATION,  ASH.BUCKET_DISTINCT_SAMPLES,  ASH.SQL_BUCKET_DISTINCT_SAMPLES,  MO.PX_SERVER_GROUP,  ASH.PX_STEP_ID,  ASH.PX_DFO_PAIR_TYPE,  ASH.PX_DFO_PAIR_ID,	ASH.PX_STEP_ARG,  ASH.PX_DOP,  ASH.PX_MIN_DOP FROM (SELECT /*+ no_merge */ MD.INST_ID,	MD.SID,  MD.SESSION_SERIAL#,  MD.PX_SERVER_SET,  MD.PX_SERVER_GROUP FROM MONITOR_DATA MD WHERE MD.SID IS NOT NULL OR :B31 = 1) MO,  (SELECT /*+ no_merge */ GVTF.INST_ID,  GVTF.GLOBAL_SAMPLE_ID,  GVTF.IS_PX_SLAVE,  GVTF.SESSION_ID,	GVTF.PLAN_LINE_ID,  GVTF.PLSQL_OBJECT_ID,  GVTF.PLSQL_SUBPROGRAM_ID,  GVTF.ACTIVITY_BUCKET_NUM,  GVTF.PLAN_ACTIVITY_BUCKET_NUM,  GVTF.SQL,  GVTF.TOP_LEVEL_SQL_ID,  GVTF.DBOP_NAME,  GVTF.IS_MONITORED_SQL,  GVTF.BUCKET_ACTIVITY_START,  GVTF.ACTIVITY_START,	GVTF.BUCKET_ACTIVITY_END,  GVTF.ACTIVITY_END,  GVTF.ACTIVITY_COUNT,  GVTF.ACTIVITY_TYPE,  GVTF.OTHER_SQL_ACTIVITY_TYPE,  GVTF.EVENT_NAME,  GVTF.IMQ_COUNT,  GVTF.WAIT_COUNT,  GVTF.CPU_COUNT,  GVTF.OTHER_SQL_COUNT,  MAX(GVTF.PER_SERVER_DFO_COUNT * 10000000000 + GVTF.INST_ID * 1000000 + GVTF.SESSION_ID) OVER(PARTITION BY GVTF.PX_DFO_PAIR_TYPE,	GVTF.PX_DFO_PAIR_ID) MOST_ACTIVE_IN_DFO,  SUM(GVTF.ACTIVITY_COUNT) OVER(PARTITION BY GVTF.PX_DFO_PAIR_TYPE,  GVTF.PX_DFO_PAIR_ID) PX_DFO_ACTIVITY_COUNT,  GVTF.DFO_DURATION,  GVTF.PX_STEP_ID,	GVTF.PX_DFO_PAIR_TYPE,	GVTF.PX_DFO_PAIR_ID,  GVTF.PX_STEP_ARG,  GVTF.PX_DOP,  GVTF.PX_MIN_DOP,  COUNT(DISTINCT GVTF.GLOBAL_SAMPLE_ID) OVER(PARTITION BY GVTF.ACTIVITY_BUCKET_NUM) BUCKET_DISTINCT_SAMPLES,  COUNT(DISTINCT GVTF.GLOBAL_SAMPLE_ID) OVER(PARTITION BY GVTF.SQL,	GVTF.ACTIVITY_BUCKET_NUM) SQL_BUCKET_DISTINCT_SAMPLES FROM TABLE(SYS.GV$(CURSOR( (SELECT USERENV('INSTANCE') INST_ID,  ASH2.GLOBAL_SAMPLE_ID,  CASE WHEN :B30 = 1 AND :B27 &gt; 1 THEN BUCKET_NUM ELSE NULL END ACTIVITY_BUCKET_NUM,  CASE WHEN :B29 = 1 AND :B27 &gt; 1 THEN BUCKET_NUM ELSE NULL END PLAN_ACTIVITY_BUCKET_NUM,  ASH2.SQL,  ASH2.TOP_LEVEL_SQL_ID,  ASH2.DBOP_NAME,  ASH2.IS_MONITORED_SQL,  ASH2.PLAN_LINE_ID,  ASH2.PLSQL_OBJECT_ID,  ASH2.PLSQL_SUBPROGRAM_ID,  ASH2.ACTIVITY_TYPE,  ASH2.OTHER_SQL_ACTIVITY_TYPE,	ASH2.EVENT_NAME,  ASH2.IS_PX_SLAVE,  ASH2.SESSION_ID,  ASH2.PX_STEP_ID,  ASH2.PX_DFO_PAIR_TYPE,  ASH2.PX_DFO_PAIR_ID,  ASH2.PX_STEP_ARG,  CASE WHEN ASH2.PX_DFO_PAIR_ID IS NOT NULL THEN DECODE(ASH2.PX_DOP,  0,  :B28 ,  ASH2.PX_DOP) ELSE NULL END PX_DOP,  ASH2.PX_MIN_DOP,	:B20 + NUMTODSINTERVAL(:B26 * (ASH2.BUCKET_NUM-1),  'SECOND') BUCKET_ACTIVITY_START,  :B20 + NUMTODSINTERVAL( :B26 * ASH2.BUCKET_NUM - 1,  'SECOND') BUCKET_ACTIVITY_END,  ASH2.ACTIVITY_START,  ASH2.ACTIVITY_END,  ASH2.ACTIVITY_COUNT,  ASH2.IMQ_COUNT,  ASH2.WAIT_COUNT,  ASH2.CPU_COUNT,  ASH2.OTHER_SQL_COUNT,  SUM(ASH2.ACTIVITY_COUNT) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE,  DECODE(ASH2.PX_DFO_PAIR_ID,  NULL,  NULL,  ASH2.SESSION_ID)) PER_SERVER_DFO_COUNT,  CEIL((MAX(ASH2.MAX_SAMPLE_DATE) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE) - MIN(ASH2.MIN_SAMPLE_DATE) OVER(PARTITION BY ASH2.PX_DFO_PAIR_ID,  ASH2.PX_DFO_PAIR_TYPE)) * 3600 * 24) DFO_DURATION FROM (SELECT ASH1.BUCKET_NUM,  ASH1.GLOBAL_SAMPLE_ID,  ASH1.PLAN_LINE_ID,  ASH1.PLSQL_OBJECT_ID,  ASH1.PLSQL_SUBPROGRAM_ID,  ASH1.ACTIVITY_TYPE,  ASH1.OTHER_SQL_ACTIVITY_TYPE,  ASH1.EVENT_NAME,  ASH1.SESSION_ID,  ASH1.PX_STEP_ID,  ASH1.PX_STEP_ARG,  MAX(ASH1.SQL) SQL,  MAX(ASH1.IS_MONITORED_SQL) IS_MONITORED_SQL,  MAX(ASH1.PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  MAX(ASH1.PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  MIN(SAMPLE_DATE) MIN_SAMPLE_DATE,  MAX(SAMPLE_DATE) MAX_SAMPLE_DATE,  MAX(ASH1.IS_PX_SLAVE) IS_PX_SLAVE,  MAX(ASH1.PX_DOP) PX_DOP,	MIN(ASH1.PX_DOP) PX_MIN_DOP,  MIN(ASH1.SAMPLE_DATE) ACTIVITY_START,  MAX(ASH1.SAMPLE_DATE) ACTIVITY_END,  COUNT(ASH1.SQL) ACTIVITY_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Cpu' AND ASH1.EVENT_NAME = 'in memory' THEN 1 ELSE NULL END) IMQ_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE != 'Other SQL Execution' AND ASH1.ACTIVITY_TYPE != 'Non SQL' AND ASH1.ACTIVITY_TYPE != 'Cpu' THEN 1 ELSE NULL END) WAIT_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Cpu' AND ASH1.EVENT_NAME IS NULL THEN 1 ELSE NULL END) CPU_COUNT,  COUNT(CASE WHEN ASH1.ACTIVITY_TYPE = 'Other SQL Execution' AND ASH1.ACTIVITY_TYPE != 'Non SQL' THEN 1 ELSE NULL END) OTHER_SQL_COUNT,  MAX(ASH1.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  MAX(ASH1.DBOP_NAME) DBOP_NAME FROM ( SELECT (CASE WHEN :B27 &gt; 1 THEN (TRUNC(DELTA_TIME_SECONDS/ :B26 ) + 1) ELSE 1 END) BUCKET_NUM,  ASH00.SQL,  ASH00.SAMPLE_DATE,  NVL2(DUP.C2,  TRUNC(DELTA_TIME_SECONDS/ (:B25 )) + 1,  NULL) GLOBAL_SAMPLE_ID,  NVL2(DUP.C2,  NULL,	ASH00.IS_MONITORED_SQL) IS_MONITORED_SQL,  NVL2(DUP.C2,  NULL,	ASH00.IN_INMEMORY_QUERY) IN_INMEMORY_QUERY,  NVL2(DUP.C2,  NULL,  ASH00.WAIT_CLASS) WAIT_CLASS,  NVL2(DUP.C2,  NULL,  ASH00.ACTIVITY_TYPE) ACTIVITY_TYPE,  NVL2(DUP.C2,  NULL,	ASH00.OTHER_SQL_ACTIVITY_TYPE) OTHER_SQL_ACTIVITY_TYPE,  NVL2(DUP.C2,  NULL,  ASH00.EVENT_NAME) EVENT_NAME,  NVL2(DUP.C2,  NULL,  ASH00.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  NVL2(DUP.C2,  NULL,  ASH00.DBOP_NAME) DBOP_NAME,  NVL2(DUP.C2,  NULL,  ASH00.IS_PX_SLAVE) IS_PX_SLAVE,  NVL2(DUP.C2,  NULL,  ASH00.SESSION_ID) SESSION_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLSQL_OBJECT_ID) PLSQL_OBJECT_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLSQL_SUBPROGRAM_ID) PLSQL_SUBPROGRAM_ID,  NVL2(DUP.C2,  NULL,  ASH00.PLAN_LINE_ID) PLAN_LINE_ID,  NVL2(DUP.C2,  NULL,  ASH00.PX_STEP_ID) PX_STEP_ID,  NVL2(DUP.C2,  NULL,  ASH00.PX_STEP_ARG) PX_STEP_ARG,  NVL2(DUP.C2,  NULL,  ASH00.PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  NVL2(DUP.C2,  NULL,	ASH00.PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  NVL2(DUP.C2,  NULL,	ASH00.PX_DOP) PX_DOP FROM (SELECT 1 C1,  NULL C2 FROM V$DUAL UNI
ON ALL SELECT 1 C1,  1 C2 FROM V$DUAL) DUP,  (SELECT /*+ no_merge */ 1 C1,  ASH000.SAMPLE_DATE,  ASH000.IS_MONITORED_SQL,  ((EXTRACT(SECOND FROM(DELTA_TIME)) + EXTRACT(MINUTE FROM(DELTA_TIME)) * 60 + EXTRACT(HOUR FROM(DELTA_TIME)) * 3600 + EXTRACT(DAY FROM(DELTA_TIME)) * 86400)) DELTA_TIME_SECONDS,  ASH000.IN_INMEMORY_QUERY,	ASH000.WAIT_CLASS,  DECODE(ASH000.IS_MONITORED_SQL,  1,  NVL(ASH000.WAIT_CLASS,  'Cpu'),  DECODE(SQL_ID,  NULL,  'Non SQL',  'Other SQL Execution')) ACTIVITY_TYPE,  NVL(ASH000.WAIT_CLASS,  'Cpu') OTHER_SQL_ACTIVITY_TYPE,  DECODE(:B24 ,  1,  CASE WHEN ASH000.IS_MONITORED_SQL = 1 THEN NVL(ASH000.EVENT,  DECODE(ASH000.IN_INMEMORY_QUERY,  'Y',  'in memory',  ASH000.EVENT)) WHEN ASH000.SQL_ID IS NOT NULL THEN 'sql_id: ' || ASH000.SQL_ID WHEN ASH000.CALL_NAME IS NOT NULL THEN 'call: ' || ASH000.CALL_NAME ELSE 'anonymous: '|| ASH000.EVENT END,	NULL) EVENT_NAME,  CASE WHEN ASH000.IS_MONITORED_SQL = 1 AND (NVL(ASH000.SQL_ID,  :B9 ) = :B9 OR NVL(ASH000.DBOP_NAME,	:B6 ) = :B6 ) THEN 'this' WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.SQL_ID IS NOT NULL AND ASH000.TOP_LEVEL_SQL_ID != ASH000.SQL_ID THEN ASH000.TOP_LEVEL_SQL_ID WHEN ASH000.SQL_ID IS NOT NULL THEN ASH000.SQL_ID ELSE NVL(CALL_NAME,  'anonymous') END SQL,  CASE WHEN ASH000.IS_PX_SLAVE = 0 AND (ASH000.SQL_ID IS NULL OR ASH000.TOP_LEVEL_SQL_ID != ASH000.SQL_ID) THEN ASH000.TOP_LEVEL_SQL_ID END TOP_LEVEL_SQL_ID,  ASH000.DBOP_NAME,  ASH000.IS_PX_SLAVE,  CASE WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.IS_MONITORED_SQL != 1 THEN 65536 ELSE ASH000.SESSION_ID END SESSION_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PLSQL_OBJECT_ID,  NULL) PLSQL_OBJECT_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PLSQL_SUBPROGRAM_ID,  NULL) PLSQL_SUBPROGRAM_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.SQL_PLAN_LINE_ID,  NULL) PLAN_LINE_ID,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_STEP_ID,  NULL) PX_STEP_ID,  CASE WHEN ASH000.IS_PX_SLAVE = 1 AND ASH000.IS_MONITORED_SQL = 1 AND ASH000.PX_STEP_ID IN (1,  2,  3) THEN ASH000.PX_STEP_ARG ELSE NULL END PX_DFO_PAIR_ID,  CASE WHEN ASH000.IS_PX_SLAVE = 0 OR ASH000.IS_MONITORED_SQL != 1 THEN NULL WHEN ASH000.PX_STEP_ID = 1 THEN 1 WHEN ASH000.PX_STEP_ID IN (2,  3) THEN 0 ELSE NULL END PX_DFO_PAIR_TYPE,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_STEP_ARG,	NULL) PX_STEP_ARG,  DECODE(ASH000.IS_MONITORED_SQL,  1,  ASH000.PX_DOP,  NULL) PX_DOP FROM (SELECT ASH0.*,  CASE WHEN ASH0.IS_TARGET_SQL = 1 OR (ASH0.IS_PX_SLAVE = 1 AND ((NVL(ASH0.TOP_LEVEL_SQL_ID,	ASH0.SQL_ID) IS NOT NULL AND NVL(ASH0.TOP_LEVEL_SQL_ID,  ASH0.SQL_ID) = :B9 ) OR (SQL_ID IS NULL AND :B23 = 'Y'))) THEN 1 ELSE 0 END IS_MONITORED_SQL FROM (SELECT (CASE WHEN (ASH.SQL_ID = :B9 AND ASH.SQL_EXEC_ID = :B7 AND ASH.SQL_EXEC_START = :B8 ) THEN 1 ELSE 0 END) IS_TARGET_SQL,  ASH.SQL_ID,  ASH.SQL_PLAN_LINE_ID,	ASH.PLSQL_OBJECT_ID,  ASH.PLSQL_SUBPROGRAM_ID,	ASH.TOP_LEVEL_SQL_ID,  DECODE(ASH.SQL_ID,  NULL,  ASH.TOP_LEVEL_CALL_NAME,  NULL) CALL_NAME,  ASH.EVENT,  ASH.IN_INMEMORY_QUERY,  ASH.WAIT_CLASS,  ASH.SQL_EXEC_ID,  ASH.SQL_EXEC_START,  ASH.DBOP_NAME,  ASH.DBOP_EXEC_ID,  ASH.SESSION_ID,  ASH.SESSION_SERIAL#,  CASE WHEN QC_INSTANCE_ID IS NOT NULL AND (ASH.SESSION_ID != ASH.QC_SESSION_ID OR ASH.SESSION_SERIAL# != ASH.QC_SESSION_SERIAL# OR USERENV('instance') != ASH.QC_INSTANCE_ID) THEN 1 ELSE 0 END IS_PX_SLAVE,  SAMPLE_TIME - CAST(:B20 AS TIMESTAMP) DELTA_TIME,  CAST(FROM_TZ(ASH.SAMPLE_TIME,  DBTIMEZONE) AS DATE) SAMPLE_DATE,  TRUNC(MOD(PX_FLAGS/65536,  32)) PX_STEP_ID,  MOD(PX_FLAGS,  65536) PX_STEP_ARG,  TRUNC(PX_FLAGS/2097152) PX_DOP FROM V$ALL_ACTIVE_SESSION_HISTORY ASH WHERE ((ASH.SESSION_ID = :B19 AND ASH.SESSION_SERIAL# = :B18 AND USERENV('INSTANCE') = :B17 ) OR (ASH.QC_SESSION_ID IS NOT NULL AND ASH.QC_SESSION_ID = :B19 AND ASH.QC_SESSION_SERIAL# = :B18 AND ASH.QC_INSTANCE_ID = :B17 )) AND SAMPLE_TIME BETWEEN :B16 AND :B15 ) ASH0 WHERE (ASH0.SAMPLE_DATE BETWEEN :B20 + 1/24/3600 AND :B22 - 1/24/3600 OR (ASH0.SQL_ID = :B9 AND ASH0.SQL_EXEC_START = :B8 AND ASH0.SQL_EXEC_ID = :B7 ) OR (ASH0.DBOP_NAME = :B6 AND ASH0.DBOP_EXEC_ID = :B5 )) AND (:B21 IS NULL OR ASH0.SQL_PLAN_LINE_ID = :B21 ) AND (ASH0.IS_PX_SLAVE = 0 OR ASH0.SQL_ID IS NOT NULL)) ASH000 ) ASH00 WHERE ASH00.C1 = DUP.C1) ASH1 WHERE ASH1.BUCKET_NUM &gt; 0 AND ASH1.BUCKET_NUM &lt;= :B27 GROUP BY USERENV('INSTANCE'),  ASH1.GLOBAL_SAMPLE_ID,  ASH1.BUCKET_NUM,  ASH1.SESSION_ID,  ASH1.PLAN_LINE_ID,  ASH1.PLSQL_OBJECT_ID,  ASH1.PLSQL_SUBPROGRAM_ID,  ASH1.ACTIVITY_TYPE,  ASH1.EVENT_NAME,  ASH1.OTHER_SQL_ACTIVITY_TYPE,  ASH1.PX_STEP_ID,  ASH1.PX_STEP_ARG) ASH2)))) GVTF WHERE GVTF.INST_ID BETWEEN :B11 AND :B10 ) ASH WHERE ASH.GLOBAL_SAMPLE_ID IS NULL AND ASH.SESSION_ID = MO.SID(+) AND ASH.INST_ID = MO.INST_ID(+)) AD0),  RESPONSE_TIME_DATA AS (SELECT ADH.BUCKET_NUM,  ADH.SQL_ROWNUM,  ADH.SQL,	ADH.TOP_LEVEL_SQL_ID,  ADH.DBOP_NAME,  ADH.PX_ID,  DECODE( ADH.PX_STEP_ID,  NULL,  NULL,  0,  NULL,  1,  'PX Server(s) - Executing Parent DFO',  2,  'PX Server(s) - Executing Child DFO',  3,	'PX Server(s) - Sampling Child DFO',  4,  'PX Server(s) - Joining Group',  5,  'QC - Scheduling Child DFO',  6,  'QC - Scheduling Parent DFO',	7,  'QC - Initializing Objects',  8,  'QC - Flushing Objects',	9,  'QC - Allocating Slaves',  10,  'QC - Initializing Granules',  11,	'PX Server(s) - Parsing Cursor',  12,  'PX Server(s) - Executing Cursor',  13,	'PX Server(s) - Preparing Transaction',  14,  'PX Server(s) - Joining Transaction',  15,  'PX Server(s) - Load Commit',  16,  'PX Server(s) - Aborting Transaction',  17,  'QC - Executing Child DFO',	18,  'QC - Executing Parent DFO',  'PX Step - ' || PX_STEP_ID) PX_STEP_ID,  ADH.PX_STEP_ARG,  ADH.PX_DFO_PAIR_ID,  ADH.PX_DOP,	ADH.PX_MIN_DOP,  ADH.DFO_MOST_ACTIVE_IID,  ADH.DFO_MOST_ACTIVE_SID,  ADH.DFO_MOST_ACTIVE_COUNT,  ADH.ACTIVITY_START,  ADH.ACTIVITY_END,  ADH.ACTIVITY_TYPE,  ADH.OTHER_SQL_ACTIVITY_TYPE,  ADH.EVENT_NAME,  ADH.PLAN_LINE_ID,  ADH.PLSQL_OBJECT_ID,  ADH.PLSQL_SUBPROGRAM_ID,  CASE WHEN PLSQL_ROWNUM = 1 AND ADH.PLSQL_OBJECT_ID IS NOT NULL THEN NVL((SELECT P.OWNER || '.' || P.OBJECT_NAME || DECODE(P.PROCEDURE_NAME,  NULL,  '',	'.' || P.PROCEDURE_NAME) FROM ALL_PROCEDURES P WHERE P.OBJECT_ID = ADH.PLSQL_OBJECT_ID AND P.SUBPROGRAM_ID = ADH.PLSQL_SUBPROGRAM_ID),	'Unavailable') ELSE NULL END PLSQL_NAME,  ADH.ACTIVITY_COUNT,  ADH.BUCKET_ACTIVE_SECONDS,  ADH.BUCKET_IDLE_SECONDS,  (CASE WHEN ADH.IS_MONITORED_SQL = 0 THEN ADH.ACTIVE_SECONDS WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_CPU_HEIGHT &gt;= :B34 THEN DECODE(ADH.ACTIVITY_TYPE,  'Cpu',  (ADH.DFO_PAIR_ACTIVITY_HEIGHT / ADH.DFO_PAIR_CPU_HEIGHT) * ADH.DFO_PAIR_TOTAL_SECONDS,  0) WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.PX_DOP &gt; :B34 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * DECODE(ADH.ACTIVITY_TYPE,  'Cpu',  ADH.DFO_PAIR_ACTIVITY_HEIGHT,  (ADH.DFO_PAIR_ACTIVITY_HEIGHT * (:B34 - ADH.DFO_PAIR_CPU_HEIGHT)) / (ADH.DFO_PAIR_TOTAL_HEIGHT_ADJ - ADH.DFO_PAIR_CPU_HEIGHT))) / :B34 WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL THEN (ADH.DFO_PAIR_TOTAL_SECONDS * ADH.DFO_PAIR_ACTIVITY_HEIGHT) / ADH.PX_DOP ELSE ADH.ACTIVE_SECONDS END) RESP_TIME,  (CASE WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_IDLE_HEIGHT &gt; 0 AND ADH.PX_DOP &gt; :B34 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * (ADH.DFO_PAIR_IDLE_HEIGHT * (:B34 - ADH.DFO_PAIR_CPU_HEIGHT)) / (ADH.DFO_PAIR_TOTAL_HEIGHT_ADJ - ADH.DFO_PAIR_CPU_HEIGHT)) / :B34 WHEN ADH.PX_DFO_PAIR_ID IS NOT NULL AND ADH.DFO_PAIR_IDLE_HEIGHT &gt; 0 THEN (ADH.DFO_PAIR_TOTAL_SECONDS * ADH.DFO_PAIR_IDLE_HEIGHT) / ADH.PX_DOP ELSE 0 END) DFO_PAIR_IDLE_RESP_TIME,  ADH.DFO_PAIR_ACTIVITY_HEIGHT,  ADH.DFO_PAIR_CPU_HEIGHT,	ADH.DFO_PAIR_IDLE_HEIGHT,  ADH.DFO_PAIR_TOTAL_HEIGHT,  ADH.DFO_PAIR_CPU_ACTIVITY,  ADH.DFO_PAIR_TOTAL_SECONDS FROM (SELECT ADH_1.*,  (ROW_NUMBER() OVER(PARTITION BY ADH_1.PLSQL_OBJECT_ID,  ADH_1.PLSQL_SUBPROGRAM_ID ORDER BY ADH_1.BUCKET_NUM,  ADH_1.ACTIVITY_TYPE,  ADH_1.EVENT_NAME)) PLSQL_ROWNUM,  (ROW_NUMBER() OVER(PARTITION BY ADH_1.SQL ORDER BY ADH_1.BUCKET_NUM,  ADH_1.ACTIVITY_TYPE,  ADH_1.EVENT_NAME)) SQL_ROWNUM,  (
CASE WHEN ADH_1.PX_DFO_PAIR_ID IS NOT NULL AND (ADH_1.DFO_PAIR_TOTAL_HEIGHT &lt; ADH_1.PX_DOP) AND (ADH_1.DFO_PAIR_CPU_HEIGHT &lt; :B34 ) THEN ADH_1.PX_DOP - ADH_1.DFO_PAIR_TOTAL_HEIGHT ELSE 0 END) DFO_PAIR_IDLE_HEIGHT,  (CASE WHEN ADH_1.PX_DFO_PAIR_ID IS NOT NULL AND (ADH_1.DFO_PAIR_TOTAL_HEIGHT &lt; ADH_1.PX_DOP) AND (ADH_1.DFO_PAIR_CPU_HEIGHT &lt; :B34 ) THEN ADH_1.PX_DOP ELSE ADH_1.DFO_PAIR_TOTAL_HEIGHT END) DFO_PAIR_TOTAL_HEIGHT_ADJ FROM (SELECT ADH_0.*,  (CASE WHEN ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.DFO_PAIR_TOTAL_ACTIVITY * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_TOTAL_HEIGHT,	(CASE WHEN ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.DFO_PAIR_CPU_ACTIVITY * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_CPU_HEIGHT,  (CASE WHEN ADH_0.PX_DFO_PAIR_ID IS NOT NULL AND ADH_0.DFO_PAIR_TOTAL_SECONDS &gt; 0 THEN (ADH_0.ACTIVITY_COUNT * :B25 ) / ADH_0.DFO_PAIR_TOTAL_SECONDS ELSE 0 END) DFO_PAIR_ACTIVITY_HEIGHT FROM (SELECT AD3.*,  (SUM(DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  0,	AD3.ACTIVE_SECONDS)) OVER(PARTITION BY DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  NULL,  AD3.BUCKET_NUM),  DECODE(AD3.PX_DFO_PAIR_ID,  NULL,  NULL,  AD3.PX_STEP_ARG))) DFO_PAIR_TOTAL_SECONDS FROM (SELECT AD2.*,  CASE WHEN AD2.IS_MONITORED_SQL = 0 THEN SQL_BUCKET_DISTINCT_SAMPLES * :B25 WHEN AD2.PX_ID IS NULL THEN AD2.ACTIVITY_COUNT * :B25 WHEN AD2.BUCKET_PARALLEL_MON_ACTIVITY &gt; 0 THEN (AD2.ACTIVITY_COUNT * AD2.BUCKET_PARALLEL_MON_SECONDS) / AD2.BUCKET_PARALLEL_MON_ACTIVITY ELSE 0 END ACTIVE_SECONDS,  CASE WHEN AD2.BUCKET_INTERVAL &gt; BUCKET_ACTIVE_SECONDS THEN AD2.BUCKET_INTERVAL - BUCKET_ACTIVE_SECONDS ELSE 0 END BUCKET_IDLE_SECONDS FROM (SELECT AD1.*,  (AD1.BUCKET_SERIAL_MON_ACTIVITY * :B25 ) BUCKET_SERIAL_MON_SECONDS,	(AD1.BUCKET_TOTAL_MON_ACTIVITY - AD1.BUCKET_SERIAL_MON_ACTIVITY) BUCKET_PARALLEL_MON_ACTIVITY,	(AD1.BUCKET_ACTIVE_SECONDS - (AD1.BUCKET_OTHER_ACTIVITY + AD1.BUCKET_SERIAL_MON_ACTIVITY) * :B25 ) BUCKET_PARALLEL_MON_SECONDS,  (AD1.BUCKET_OTHER_ACTIVITY * :B25 ) BUCKET_OTHER_SECONDS,  DECODE(AD1.PX_DFO_PAIR_ID,	NULL,  NULL,  SUM(AD1.ACTIVITY_COUNT) OVER(PARTITION BY DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  AD1.BUCKET_NUM),  AD1.PX_DFO_PAIR_ID)) DFO_PAIR_TOTAL_ACTIVITY,  DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  SUM(DECODE(AD1.ACTIVITY_TYPE,  'Cpu',  AD1.ACTIVITY_COUNT,  0)) OVER(PARTITION BY DECODE(AD1.PX_DFO_PAIR_ID,  NULL,  NULL,  AD1.BUCKET_NUM),  AD1.PX_DFO_PAIR_ID)) DFO_PAIR_CPU_ACTIVITY FROM (SELECT AD01.*,  NVL((SUM(DECODE(AD01.IS_MONITORED_SQL,  1,	AD01.ACTIVITY_COUNT,  NULL)) OVER(PARTITION BY AD01.BUCKET_NUM)),  0) BUCKET_TOTAL_MON_ACTIVITY,  (NVL(SUM(CASE WHEN AD01.IS_MONITORED_SQL = 1 AND AD01.PX_ID IS NULL THEN AD01.ACTIVITY_COUNT ELSE NULL END) OVER(PARTITION BY AD01.BUCKET_NUM),  0)) BUCKET_SERIAL_MON_ACTIVITY,  (NVL((SUM(DECODE(AD01.IS_MONITORED_SQL,  0,  AD01.SQL_BUCKET_DISTINCT_SAMPLES,  NULL)) OVER(PARTITION BY AD01.BUCKET_NUM)),  0)) BUCKET_OTHER_ACTIVITY,  (NVL(AD01.BUCKET_DISTINCT_SAMPLES,  0) * :B25 ) BUCKET_ACTIVE_SECONDS,  DECODE(AD01.BUCKET_NUM,  :B27 ,  MOD(:B32 ,  :B26 ),  :B26 ) BUCKET_INTERVAL FROM (SELECT AD0.ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.PX_ID,	AD0.ACTIVITY_TYPE,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.PLAN_LINE_ID,  AD0.PX_STEP_ID,  AD0.PX_STEP_ARG,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,	MAX(AD0.IS_MONITORED_SQL) IS_MONITORED_SQL,  MAX(AD0.SQL) SQL,	MAX(AD0.TOP_LEVEL_SQL_ID) TOP_LEVEL_SQL_ID,  MAX(AD0.DBOP_NAME) DBOP_NAME,  MAX(DECODE(AD0.DFO_MOST_ACTIVE_COUNT,  NULL,  NULL,  AD0.DFO_MOST_ACTIVE_IID)) DFO_MOST_ACTIVE_IID,  MAX(DECODE(AD0.DFO_MOST_ACTIVE_COUNT,	NULL,  NULL,  AD0.DFO_MOST_ACTIVE_SID)) DFO_MOST_ACTIVE_SID,  SUM(AD0.DFO_MOST_ACTIVE_COUNT) DFO_MOST_ACTIVE_COUNT,  MAX(PX_DFO_PAIR_TYPE) PX_DFO_PAIR_TYPE,  MAX(PX_DFO_PAIR_ID) PX_DFO_PAIR_ID,  MAX(AD0.PX_DOP) PX_DOP,  MIN(AD0.PX_MIN_DOP) PX_MIN_DOP,  MAX(AD0.BUCKET_DISTINCT_SAMPLES) BUCKET_DISTINCT_SAMPLES,	MAX(AD0.SQL_BUCKET_DISTINCT_SAMPLES) SQL_BUCKET_DISTINCT_SAMPLES FROM (SELECT AD00.*,  (CASE WHEN AD00.IS_MONITORED_SQL = 1 AND (AD00.SESSION_ID != :B19 OR AD00.INST_ID != :B17 ) THEN AD00.PX_SERVER_GROUP END) PX_ID FROM ASH_DATA AD00 WHERE :B33 = 1 ) AD0 GROUP BY AD0.ACTIVITY_BUCKET_NUM,  AD0.PX_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  AD0.OTHER_SQL_ACTIVITY_TYPE,  AD0.PLAN_LINE_ID,  AD0.PLSQL_OBJECT_ID,  AD0.PLSQL_SUBPROGRAM_ID,  AD0.PX_STEP_ID,  AD0.PX_STEP_ARG ) AD01) AD1) AD2) AD3) ADH_0) ADH_1) ADH) SELECT /*+ no_monitor no_xml_query_rewrite
		 opt_param('_gby_hash_aggregation_enabled',  'false') */ XMLELEMENT( &quot;sql_monitor_report&quot;,  XMLATTRIBUTES(:B59 AS &quot;version&quot;,  TO_CHAR(:B58 ,  :B12 ) AS &quot;sysdate&quot;),  XMLELEMENT( &quot;report_parameters&quot;,  NULL,  CASE WHEN :B57 IS NOT NULL THEN XMLFOREST( :B57 AS &quot;dbop_name&quot;,  :B56 AS &quot;dbop_exec_id&quot;) ELSE XMLFOREST( :B55 AS

Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_rac_171_172.txt.  To use this name,
press <return> to continue, otherwise enter an alternative.

&quot;sql_id&quot;,  :B54 AS &quot;sql_exec_id&quot;) END,  XMLFOREST( :B53 AS &quot;session_id&quot;,	:B52 AS &quot;session_serial&quot;,  TO_CHAR(:B51 ,  :B12 ) AS &quot;sql_exec_start&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR(:B50 ,  :B12 ) AS &quot;interval_start&quot;,  TO_CHAR(:B22 ,  :B12 ) AS &quot;interval_end&quot;,  DECODE(:B49 ,  'Y',	:B48 ,	NULL) AS &quot;auto_refresh&quot;,  :B47 AS &quot;base_path&quot;),  CASE WHEN :B23 = 'Y' AND :B46 IS NOT NULL AND NOT (:B4 = 1 AND :B3 IS NULL AND :B2 IS NULL AND :B1 IS NULL) THEN XMLELEMENT( &quot;parallel_filter&quot;,	NULL,  XMLFOREST( DECODE(:B4 ,	1,  'yes',  'no') AS &quot;qc&quot;,  :B3 AS &quot;server_group&quot;,	:B2 AS &quot;server_set&quot;,	:B1 AS &quot;server_number&quot;)) ELSE NULL END),  CASE WHEN :B14 = 1 THEN XMLELEMENT( &quot;derived_parameters_testing&quot;,  NULL,	XMLFOREST(:B11 AS &quot;instance_id_low&quot;,	:B10 AS &quot;instance_id_high&quot;,  :B26 AS &quot;bucket_interval_sec&quot;,  :B32 AS &quot;interval_second&quot;,  :B27 AS &quot;bucket_calc_count&quot;,  :B45 AS &quot;bucket_calc_max_count&quot;,  :B13 AS &quot;sel_sqltext&quot;)) ELSE NULL END,  (SELECT XMLCONCAT( CASE WHEN :B46 IS NULL AND :B67 IS NULL THEN XMLELEMENT( &quot;target&quot;,  XMLATTRIBUTES(:B17 AS &quot;instance_id&quot;,  :B19 AS &quot;session_id&quot;,  :B18 AS &quot;session_serial&quot;,  NVL2(:B6 ,	NULL,  :B9 ) AS &quot;sql_id&quot;,  NVL2(:B6 ,  NULL,	TO_CHAR(:B8 ,  :B12 )) AS &quot;sql_exec_start&quot;,  NVL2(:B6 ,  NULL,  :B7 ) AS &quot;sql_exec_id&quot;,  NVL2(:B6 ,  :B6 ,	NULL) AS &quot;dbop_name&quot;,  NVL2(:B6 ,  :B5 ,  NULL) AS &quot;dbop_exec_id&quot;,	NVL2(:B6 ,  TO_CHAR(:B8 ,  :B12 ),  NULL) AS &quot;dbop_exec_start&quot;,  NVL2(:B6 ,  NULL,  MAX_PLAN_HASH_VALUE) AS &quot;sql_plan_hash&quot;,  NVL2(:B6 ,  NULL,  MAX_FULL_PLAN_HASH_VALUE) AS &quot;sql_full_plan_hash&quot;,  MAGG.DB_UNIQUE_NAME AS &quot;db_unique_name&quot;,  MAGG.PLATFORM_NAME AS &quot;db_platform_name&quot;,  MAGG.HOST_NAME AS &quot;report_host_name&quot;),  NVL2(SUM_SERVERS_REQUESTED,  XMLELEMENT( &quot;servers_requested&quot;,  NULL,  SUM_SERVERS_REQUESTED),  NULL),  NVL2(SUM_SERVERS_ALLOCATED,  XMLELEMENT( &quot;servers_allocated&quot;,	NULL,  SUM_SERVERS_ALLOCATED),	NULL),	NVL2(MAX_USERID,  XMLELEMENT( &quot;user_id&quot;,  NULL,  MAX_USERID),  NULL),  NVL2(MAX_USERNAME,  XMLELEMENT( &quot;user&quot;,  NULL,  MAX_USERNAME),  NULL),  NVL2(MAX_CON_ID,  XMLELEMENT( &quot;con_id&quot;,  NULL,  MAX_CON_ID),  NULL),  NVL2(MAX_CON_NAME,  XMLELEMENT( &quot;con_name&quot;,  NULL,  MAX_CON_NAME),  NULL),  NVL2(MAX_PROGRAM,  XMLELEMENT( &quot;program&quot;,  NULL,  MAX_PROGRAM),  NULL),  NVL2(MAX_MODULE,  XMLELEMENT( &quot;module&quot;,  NULL,  MAX_MODULE),  NULL),  NVL2(MAX_ACTION,  XMLELEMENT( &quot;action&quot;,  NULL,  MAX_ACTION),  NULL),  NVL2(MAX_SERVICE_NAME,  XMLELEMENT( &quot;service&quot;,  NULL,  MAX_SERVICE_NAME),  NULL),  NVL2(MAX_CLIENT_ID,  XMLELEMENT( &quot;client_id&quot;,  NULL,  MAX_CLIENT_ID),  NULL),  NVL2(MAX_CLIENT_INFO,  XMLELEMENT( &quot;client_info&quot;,  NULL,  MAX_CLIENT_INFO),  NULL),  NVL2(MAX_PL_ENTRY_OID,  XMLELEMENT( &quot;plsql_entry_object_id&quot;,  NULL,	MAX_PL_ENTRY_OID),  NULL),  NVL2(MAX_PL_ENTRY_PROGID,  XMLELEMENT( &quot;plsql_entry_subprogram_id&quot;,  NULL,  MAX_PL_ENTRY_PROGID),  NULL),  NVL2(MAX_PL_ENTRY_NAME,  XMLELEMENT( &quot;plsql_entry_name&quot;,  NULL,  MAX_PL_ENTRY_NAME),  NULL),  NVL2(MAX_PL_OID,  XMLELEMENT( &quot;plsql_object_id&quot;,  NULL,  MAX_PL_OID),  NULL),  NVL2(MAX_PL_PROGID,  XMLELEMENT( &quot;plsql_subprogram_id&quot;,  NULL,  MAX_PL_PROGID),  NULL),  NVL2(MAX_PL_NAME,	XMLELEMENT( &quot;plsql_name&quot;,  NULL,  MAX_PL_NAME),  NULL),  CASE WHEN (:B13 = 0 OR :B6 IS NOT NULL) THEN NULL ELSE XMLELEMENT( &quot;sql_fulltext&quot;,  XMLATTRIBUTES( NVL2(:B65 ,  'Y',  :B66 ) AS &quot;is_full&quot;),  NVL2(:B65 ,  :B65 ,  SQLMON_TEXT)) END,  XMLELEMENT( &quot;status&quot;,  NULL,  MAX_STATUS),  XMLELEMENT( &quot;refresh_count&quot;,  NULL,  SUM_REFRESH_COUNT),  XMLELEMENT( &quot;first_refresh_time&quot;,  NULL,  TO_CHAR(MIN_FIRST_REFRESH_TIME,  :B12 )),  XMLELEMENT( &quot;last_refresh_time&quot;,  NULL,  TO_CHAR(:B58 ,  :B12 )),  XMLELEMENT( &quot;duration&quot;,  NULL,  GREATEST(:B64 ,  LEAST(MAX_ELAPSED_TIME/1000000,  1),  CEIL(MAX_QUEUING_TIME/1000000))),  DECODE(MAX_RM_INFO,  '00/00/0000 00:00:00',  NULL,  XMLTYPE(SUBSTR(MAX_RM_INFO,	20))),	CASE WHEN (:B62 = 'Y') THEN XMLELEMENT( &quot;adaptive_plan&quot;,  XMLATTRIBUTES(:B63 AS &quot;is_final&quot;),  :B62 ) ELSE NULL END ) END,  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  DECODE(NVL(SUM_ELAPSED_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  SUM_ELAPSED_TIME)),  DECODE(NVL(MAX_QUEUING_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX_QUEUING_TIME)),  DECODE(NVL(SUM_CPU_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  SUM_CPU_TIME)),  DECODE(NVL(SUM_USER_IO_WAIT_TIME,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  SUM_USER_IO_WAIT_TIME)),  DECODE(NVL(SUM_APPLICATION_WAIT_TIME,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  SUM_APPLICATION_WAIT_TIME)),  DECODE(NVL(SUM_CONCURRENCY_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  SUM_CONCURRENCY_WAIT_TIME)),  DECODE(NVL(SUM_CLUSTER_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  SUM_CLUSTER_WAIT_TIME)),	DECODE(NVL(SUM_PLSQL_EXEC_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  SUM_PLSQL_EXEC_TIME)),  DECODE(NVL(SUM_JAVA_EXEC_TIME,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  SUM_JAVA_EXEC_TIME)),  DECODE(NVL(SUM_OTHER_WAIT_TIME,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  SUM_OTHER_WAIT_TIME)),  DECODE(NVL(SUM_FETCHES,  0),	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  SUM_FETCHES)),  DECODE(NVL(SUM_BUFFER_GETS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  SUM_BUFFER_GETS)),  DECODE(NVL(SUM_READ_REQS,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),  SUM_READ_REQS)),  DECODE(NVL(SUM_WRITE_REQS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  SUM_WRITE_REQS)),  DECODE(NVL(SUM_READ_REQS,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  SUM_READ_REQS)),  DECODE(NVL(SUM_READ_BYTES,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),	SUM_READ_BYTES)),  DECODE(NVL(SUM_WRITE_REQS,  0),  0,	NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),	SUM_WRITE_REQS)),  DECODE(NVL(SUM_WRITE_BYTES,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  SUM_WRITE_BYTES)),  DECODE(NVL(SUM_IO_UNC_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  SUM_IO_UNC_BYTES)),  DECODE(NVL(SUM_IO_ELIG_BYTES,	0),  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  SUM_IO_ELIG_BYTES)),  DECODE(NVL(SUM_IO_RET_BYTES,  0),  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  SUM_IO_RET_BYTES)),  CASE WHEN SUM_IO_INTER_BYTES IS NULL OR SUM_IO_BYTES = 0 OR SUM_IO_INTER_BYTES = SUM_IO_BYTES OR NVL(SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE
 XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(SUM_IO_BYTES / DECODE(SUM_IO_INTER_BYTES,	0,  1,	SUM_IO_INTER_BYTES),  2)) END,	CASE WHEN NVL(SUM_IO_ELIG_BYTES,  0) = 0 OR SUM_IO_BYTES = 0 OR SUM_IO_UNC_BYTES = SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100* (GREATEST(SUM_IO_UNC_BYTES,  SUM_IO_ELIG_BYTES) - SUM_IO_RET_BYTES) / SUM_IO_ELIG_BYTES,  2))) END),	CASE WHEN :B33 = 1 THEN (SELECT CASE WHEN SUM(ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLAGG( XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME)) ELSE NULL END FROM (SELECT AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1) ELSE NULL END,  NVL2(MAX_ERROR_NUMBER,  XMLELEMENT( &quot;error&quot;,  XMLATTRIBUTES(MAX_ERROR_NUMBER AS &quot;number&quot;,  MAX_ERROR_FACILITY AS &quot;facility&quot;),  MAX_ERROR_MESSAGE),  NULL),  CASE WHEN :B61 = 1 AND MAGG.QC_HAS_BINDS_XML = 'Y' THEN (SELECT XMLTYPE(BINDS_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = :B17 AND MON.KEY = MAGG.MAX_KEY AND MON.SID = MAGG.MAX_SESSION_ID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END,  CASE WHEN :B60 = 1 AND MAGG.QC_HAS_OTHER_XML = 'Y' THEN (SELECT XMLTYPE(OTHER_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = MAGG.MAX_INST_ID AND MON.KEY = MAGG.MAX_KEY AND MON.SID = MAGG.MAX_SESSION_ID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END) FROM MONITOR_AGG MAGG),  CASE WHEN :B44 = 1 THEN (SELECT CASE WHEN AT.ACTIVITY_COUNT &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( :B41 AS
&quot;ash_missing_seconds&quot;,  TO_CHAR(AT.ACTIVITY_START,  :B12 ) AS &quot;first_sample_time&quot;,	TO_CHAR(AT.ACTIVITY_END,  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((AT.ACTIVITY_END - AT.ACTIVITY_START) * 3600 * 24) + 1 AS &quot;duration&quot;,  AT.ACTIVITY_COUNT AS &quot;count&quot;,  AT.IMQ_COUNT AS &quot;imq_count&quot;,  AT.WAIT_COUNT AS &quot;wait_count&quot;,  AT.CPU_COUNT AS &quot;cpu_count&quot;,  DECODE(AT.OTHER_SQL_COUNT,  0,  NULL,  AT.OTHER_SQL_COUNT) AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  AT.ACTIVITY_TOTAL,	AH.GLOB_ACTIVITY_HISTO) WHEN :B41 IS NOT NULL THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( DECODE( :B41 ,  -1,  'all',  TO_CHAR( :B41 )) AS &quot;ash_missing_seconds&quot;)) ELSE NULL END FROM (SELECT MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) IMQ_COUNT,  SUM(AD1.WAIT_COUNT) WAIT_COUNT,  SUM(AD1.CPU_COUNT) CPU_COUNT,  SUM(AD1.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG( XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME) ACTIVITY_TOTAL FROM (SELECT AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME,  MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,	SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,	SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1) AT,  (SELECT CASE WHEN :B30 = 1 AND :B27 &gt; 1 THEN XMLELEMENT( &quot;activity_histogram&quot;,  XMLATTRIBUTES( :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR( :B20 ,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR( :B22 ,  :B12 ) AS &quot;end_time&quot;,  ROUND(( :B22 - :B20 ) *3600*24) + 1 AS &quot;duration&quot;),  XMLAGG( XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),  ACTIVITY_BUCKET) ORDER BY AD2.BUCKET_NUM)) ELSE NULL END GLOB_ACTIVITY_HISTO FROM (SELECT AD1.BUCKET_NUM,  SUM(ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(IMQ_COUNT) IMQ_COUNT,  SUM(WAIT_COUNT) WAIT_COUNT,  SUM(CPU_COUNT) CPU_COUNT,  SUM(OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  MIN(AD1.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD1.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG( XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,  AD1.EVENT_NAME AS &quot;event&quot;),	AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,  AD1.EVENT_NAME) ACTIVITY_BUCKET FROM (SELECT AD0.ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,	MIN(AD0.ACTIVITY_START) ACTIVITY_START,  MAX(AD0.ACTIVITY_END) ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(AD0.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,	MAX(AD0.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END FROM ASH_DATA AD0 GROUP BY AD0.ACTIVITY_BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1 GROUP BY AD1.BUCKET_NUM) AD2) AH) ELSE NULL END,	CASE WHEN :B33 = 1 THEN (SELECT CASE WHEN AH.ACTIVITY_COUNT &gt; 0 THEN XMLELEMENT( &quot;activity_detail&quot;,  XMLATTRIBUTES( TO_CHAR( :B20 ,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR( :B22 ,  :B12 ) AS &quot;end_time&quot;,  :B41 AS &quot;ash_missing_seconds&quot;,  TO_CHAR(AH.ACTIVITY_START,  :B12 ) AS &quot;first_sample_time&quot;,  TO_CHAR(AH.ACTIVITY_END,  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((AH.ACTIVITY_END - AH.ACTIVITY_START) * 3600 * 24) + 1 AS &quot;duration&quot;,  :B25 AS &quot;sample_interval&quot;,  :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,	ROUND((:B22 - :B20 ) *3600*24) + 1 AS &quot;bucket_duration&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B34 AS &quot;total_cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  AH.GLOB_ACTIVITY_HISTO) WHEN :B41 IS NOT NULL THEN XMLELEMENT( &quot;activity_detail&quot;,  XMLATTRIBUTES( DECODE( :B41 ,  -1,  'all',  TO_CHAR( :B41 )) AS &quot;ash_missing_seconds&quot;)) ELSE NULL END FROM (SELECT MIN(AD2.ACTIVITY_START) ACTIVITY_START,	MAX(AD2.ACTIVITY_END) ACTIVITY_END,  SUM(AD2.ACTIVITY_COUNT) ACTIVITY_COUNT,  XMLAGG( XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),  ACTIVITY_BUCKET_XML) ORDER BY AD2.BUCKET_NUM) GLOB_ACTIVITY_HISTO FROM (SELECT AD1.BUCKET_NUM,  MIN(AD1.ACTIVITY_START) ACTIVITY_START,  MAX(AD1.ACTIVITY_END) ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  MAX(AD1.BUCKET_IDLE_SECONDS) BUCKET_IDLE_SECONDS,	XMLAGG( XMLCONCAT( CASE WHEN AD1.DFO_PAIR_IDLE_RESP_TIME != 0 AND DFO_PAIR_ROWNUM = 1 THEN XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( 'Parallel Skew' AS &quot;class&quot;,  AD1.PX_STEP_ARG AS &quot;line&quot;,  AD1.PX_ID AS &quot;px&quot;,	ROUND(AD1.DFO_PAIR_IDLE_RESP_TIME,  2) AS &quot;rt&quot;),  0) ELSE NULL END,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( NVL(AD1.OTHER_SQL,  AD1.RPI) AS &quot;sql&quot;,  AD1.NON_SQL AS &quot;non_sql&quot;,	AD1.CLASS AS &quot;class&quot;,  AD1.OTHER_SQL_CLASS AS &quot;other_sql_class&quot;,  AD1.EVENT AS &quot;event&quot;,  AD1.PLAN_LINE_ID AS &quot;line&quot;,  NVL2(AD1.PLSQL_OBJECT_ID,  AD1.PLSQL_OBJECT_ID||'.'|| AD1.PLSQL_SUBPROGRAM_ID,  NULL) AS &quot;plsql_id&quot;,  AD1.PLSQL_NAME AS &quot;plsql_name&quot;,  CASE WHEN AD1.SQL_ROWNUM = 1 THEN AD1.TOP_LEVEL_SQL_ID END AS &quot;top_sql_id&quot;,	CASE WHEN AD1.DBOP_NAME IS NOT NULL THEN AD1.DBOP_NAME END AS &quot;dbop_name&quot;,  CASE WHEN AD1.DFO_MOST_ACTIVE_IID IS NOT NULL AND :B68 = 'Y' THEN AD1.DFO_MOST_ACTIVE_IID END AS &quot;skew_iid&quot;,  DECODE(AD1.DFO_MOST_ACTIVE_COUNT,  NULL, NULL,  AD1.DFO_MOST_ACTIVE_SID) AS &quot;skew_sid&quot;,  AD1.DFO_MOST_ACTIVE_COUNT AS &quot;skew_count&quot;,  DECODE(AD1.PX_DOP,  :B28 ,  NULL,  AD1.PX_DOP) AS &quot;dop&quot;,  DECODE(AD1.PX_DOP,  AD1.PX_MIN_DOP,	NULL,  AD1.PX_MIN_DOP) AS &quot;min_dop&quot;,	AD1.PX_ID AS &quot;px&quot;,  AD1.PX_STEP_ID AS &quot;step&quot;,  AD1.PX_STEP_ARG AS &quot;arg&quot;,	DECODE(AD1.ACTIVITY_COUNT,  AD1.RESP_TIME,  NULL,  ROUND(AD1.RESP_TIME,  2)) AS &quot;rt&quot;),  AD1.ACTIVITY_COUNT)) ORDER BY AD1.PX_STEP_ID,  AD1.PX_STEP_ARG,  AD1.DFO_PAIR_ROWNUM) ACTIVITY_BUCKET_XML FROM (SELECT AD01.*,  CASE WHEN AD01.ACTIVITY_TYPE != 'Other SQL Execution' AND AD01.ACTIVITY_TYPE != 'Non SQL' THEN AD01.ACTIVITY_TYPE END CLASS,	CASE WHEN (AD01.ACTIVITY_TYPE = 'Other SQL Execution' OR AD01.ACTIVITY_TYPE = 'Non SQL') THEN AD01.OTHER_SQL_ACTIVITY_TYPE END OTHER_SQL_CLASS,  CASE WHEN AD01.ACTIVITY_TYPE != 'Other SQL Execution' AND AD01.ACTIVITY_TYPE != 'Non SQL' THEN AD01.EVENT_NAME END EVENT,  CASE WHEN AD01.SQL IN ('this',  'anonymous') THEN NULL ELSE AD01.SQL END RPI,  DECODE(AD01.ACTIVITY_TYPE,  'Other SQL Execution',  SUBSTR(AD01.EVENT_NAME,	9),  NULL) OTHER_SQL,  DECODE(AD01.ACTIVITY_TYPE,  'Non SQL',  AD01.EVENT_NAME,  NULL) NON_SQL,  ROW_NUMBER() OVER(PARTITION BY AD01.BUCKET_NUM,  AD01.PX_DFO_PAIR_ID ORDER BY AD01.ACTIVITY_TYPE,  AD01.EVENT_NAME,  AD01.PLAN_LINE_ID) DFO_PAIR_ROWNUM FROM RESPONSE_TIME_DATA AD01) AD1 GROUP BY AD1.BUCKET_NUM) AD2) AH) ELSE NULL END,  CASE WHEN :B23 = 'Y' THEN (SELECT XMLELEMENT( &quot;parallel_info&quot;,  XMLATTRIBUTES( :B17 AS &quot;qc_instance_id&quot;,  MAX_PX_QCSID AS &quot;qc_session_id&quot;,  MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,  MAX_PX_DOP AS &quot;dop&quot;,  MAX_PX_DOP_INSTANCES AS &quot;max_dop_instances&quot;,  DIST_INST_COUNT AS &quot;inst_count&quot;,  DIST_PX_GROUP_COUNT AS &quot;serv
er_group_count&quot;,  DIST_PX_SET_COUNT AS &quot;server_set_count&quot;),  CASE WHEN :B70 = 1 THEN PX_SESSIONS ELSE NULL END,	CASE WHEN :B68 = 'Y' THEN DECODE(:B69 ,  1,  PX_INSTANCES,  NULL) ELSE NULL END) FROM (SELECT MAX_PX_QCSID,  MAX_PX_DOP,  MAX_PX_DOP_INSTANCES,  MAX_PX_IS_CROSS_INSTANCE,  SUM_SERVERS_REQUESTED,  SUM_SERVERS_ALLOCATED,  DIST_INST_COUNT,  DIST_PX_GROUP_COUNT,  DIST_PX_SET_COUNT,	(SELECT XMLELEMENT( &quot;sessions&quot;,  XMLATTRIBUTES(MAX(PX_SESSION.ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PX_SESSION.IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PX_SESSION.CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PX_SESSION.WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PX_SESSION.OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;,  MAX(PX_SESSION.MAX_IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PX_SESSION.MAX_IO_BYTES) AS &quot;max_io_bytes&quot;,  MAX(PX_SESSION.MAX_BUFFER_GETS) AS &quot;max_buffer_gets&quot;,  MAX(PX_SESSION.MAX_ELAPSED_TIME) AS &quot;max_elapsed_time&quot;),  XMLAGG(PX_SESSION.PX_SESSION_XML ORDER BY PX_SERVER_GROUP NULLS FIRST,  PX_SERVER_SET,  PX_SERVER#)) FROM (SELECT PX_SERVER_GROUP,  PX_SERVER_SET,  PX_SERVER#,	MAX(PI.MAX_ELAPSED_TIME) MAX_ELAPSED_TIME,  MAX(PI.MAX_IO_REQS) MAX_IO_REQS,  MAX(PI.MAX_IO_BYTES) MAX_IO_BYTES,  MAX(PI.MAX_BUFFER_GETS) MAX_BUFFER_GETS,  SUM(PI.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(PI.IMQ_COUNT) IMQ_COUNT,  SUM(PI.WAIT_COUNT) WAIT_COUNT,  SUM(PI.CPU_COUNT) CPU_COUNT,	SUM(PI.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  XMLELEMENT( &quot;session&quot;,  XMLATTRIBUTES( INST_ID AS &quot;inst_id&quot;,  PROCESS_NAME AS &quot;process_name&quot;,  SID AS &quot;session_id&quot;,  SESSION_SERIAL# AS &quot;session_serial&quot;,  PX_SERVER_GROUP AS &quot;server_group&quot;,  PX_SERVER_SET AS &quot;server_set&quot;,  PX_SERVER# AS &quot;server_num&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES( 'monitor' AS &quot;type&quot;),  NVL2(MAX(ELAPSED_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MAX(ELAPSED_TIME)),	NULL),	NVL2(MAX(QUEUING_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX(QUEUING_TIME)),  NULL),  NVL2(MAX(CPU_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MAX(CPU_TIME)),  NULL),  NVL2(MAX(USER_IO_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MAX(USER_IO_WAIT_TIME)),  NULL),  NVL2(MAX(APPLICATION_WAIT_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MAX(APPLICATION_WAIT_TIME)),  NULL),  NVL2(MAX(CONCURRENCY_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),	MAX(CONCURRENCY_WAIT_TIME)),  NULL),  NVL2(MAX(CLUSTER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MAX(CLUSTER_WAIT_TIME)),  NULL),  NVL2(MAX(PLSQL_EXEC_TIME),  XMLELEMENT(
&quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MAX(PLSQL_EXEC_TIME)),  NULL),  NVL2(MAX(JAVA_EXEC_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MAX(JAVA_EXEC_TIME)),  NULL),  NVL2(MAX(OTHER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'other_wait_time' AS &quot;name&quot;),  MAX(OTHER_WAIT_TIME)),  NULL),  NVL2(MAX(FETCHES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MAX(FETCHES)),  NULL),  NVL2(MAX(BUFFER_GETS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MAX(BUFFER_GETS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),  MAX(READ_REQS)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MAX(READ_REQS)),  NULL),  NVL2(MAX(READ_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MAX(READ_BYTES)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(WRITE_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MAX(WRITE_BYTES)),	NULL),	NVL2(MAX(IO_UNC_BYTES),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MAX(IO_UNC_BYTES)),  NULL),  NVL2(MAX(IO_ELIG_BYTES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MAX(IO_ELIG_BYTES)),  NULL),  NVL2(MAX(IO_RET_BYTES),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),	MAX(IO_RET_BYTES)),  NULL),  CASE WHEN MAX(IO_INTER_BYTES) IS NULL OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_INTER_BYTES) = MAX(IO_BYTES) OR NVL(MAX(IO_ELIG_BYTES),  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),	ROUND(MAX(IO_BYTES) / DECODE(MAX(IO_INTER_BYTES),  0,  1,  MAX(IO_INTER_BYTES)),  2)) END,  CASE WHEN NVL(MAX(IO_ELIG_BYTES),  0) = 0 OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_UNC_BYTES) = MAX(IO_RET_BYTES) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,	ROUND(100* (GREATEST( NVL(MAX(IO_UNC_BYTES), 0),  NVL(MAX(IO_ELIG_BYTES), 0)) - MAX(IO_RET_BYTES)) / MAX(IO_ELIG_BYTES),  2))) END),  CASE WHEN SUM(PI.ACTIVITY_COUNT) &gt; 0 AND :B33 = 1 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( TO_CHAR(MIN(PI.ACTIVITY_START),  :B12 ) AS &quot;first_sample_time&quot;,  TO_CHAR(MAX(PI.ACTIVITY_END),  :B12 ) AS &quot;last_sample_time&quot;,  ROUND((MAX(PI.ACTIVITY_END) - MIN(PI.ACTIVITY_START)) * 3600 * 24) + 1 AS &quot;duration&quot;,  SUM(PI.ACTIVITY_COUNT) AS &quot;count&quot;,  SUM(PI.IMQ_COUNT) AS &quot;imq_count&quot;,  SUM(PI.CPU_COUNT) AS &quot;cpu_count&quot;,  SUM(PI.WAIT_COUNT) AS &quot;wait_count&quot;,  SUM(PI.OTHER_SQL_COUNT)AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),	XMLAGG( NVL2(ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( PI.ACTIVITY_TYPE AS &quot;class&quot;,  PI.EVENT_NAME AS &quot;event&quot;),  ACTIVITY_COUNT),  NULL) ORDER BY PI.ACTIVITY_TYPE,  PI.EVENT_NAME)) ELSE NULL END,  CASE WHEN :B60 = 1 AND PI.HAS_OTHER_XML = 'Y' THEN (SELECT XMLTYPE(OTHER_XML) FROM GV$ALL_SQL_MONITOR MON WHERE MON.INST_ID = PI.INST_ID AND MON.KEY = PI.KEY AND MON.SID = PI.SID AND MON.SQL_ID = :B9 AND MON.SQL_EXEC_START = :B8 AND MON.SQL_EXEC_ID = :B7 AND ROWNUM = 1) ELSE NULL END) PX_SESSION_XML FROM (SELECT MO.HAS_OTHER_XML,  MO.KEY,  MO.INST_ID,  DECODE(MO.PROCESS_NAME,  'ora',  'PX Coordinator',	MO.PROCESS_NAME) PROCESS_NAME,	MO.SID,  MO.SESSION_SERIAL#,  MO.PX_SERVER_GROUP,  MO.PX_SERVER_SET,  MO.PX_SERVER#,  ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME,  MAX(MO.IO_REQS) MAX_IO_REQS,  MAX(MO.IO_BYTES) MAX_IO_BYTES,  MAX(MO.BUFFER_GETS) MAX_BUFFER_GETS,  MAX(MO.ELAPSED_TIME) MAX_ELAPSED_TIME,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.ACTIVITY_COUNT)) ACTIVITY_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,  NULL,  ASH0.IMQ_COUNT)) IMQ_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.WAIT_COUNT)) WAIT_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,  NULL,  ASH0.CPU_COUNT)) CPU_COUNT,  SUM(DECODE(ASH0.ACTIVITY_TYPE,  NULL,	NULL,  ASH0.OTHER_SQL_COUNT)) OTHER_SQL_COUNT,	MIN(ASH0.ACTIVITY_START) ACTIVITY_START,  MAX(ASH0.ACTIVITY_END) ACTIVITY_END,	MAX(DECODE(MO.ELAPSED_TIME,  0,  NULL,	MO.ELAPSED_TIME)) ELAPSED_TIME,  MAX(DECODE(MO.QUEUING_TIME,  0,  NULL,  MO.QUEUING_TIME)) QUEUING_TIME,  MAX(DECODE(MO.CPU_TIME,  0,  NULL,  CPU_TIME)) CPU_TIME,  MAX(DECODE(MO.FETCHES,  0,	NULL,  FETCHES)) FETCHES,  MAX(DECODE(MO.BUFFER_GETS,  0,  NULL,  MO.BUFFER_GETS)) BUFFER_GETS,  MAX(DECODE(MO.IO_INTER_BYTES,	0,  NULL,  MO.IO_INTER_BYTES)) IO_INTER_BYTES,	MAX(DECODE(MO.READ_REQS,  0,  NULL,  MO.READ_REQS)) READ_REQS,	MAX(DECODE(MO.READ_BYTES,  0,  NULL,  MO.READ_BYTES)) READ_BYTES,  MAX(DECODE(MO.WRITE_REQS,  0,  NULL,  MO.WRITE_REQS)) WRITE_REQS,  MAX(DECODE(MO.WRITE_BYTES,  0,  NULL,  MO.WRITE_BYTES)) WRITE_BYTES,  MAX(DECODE(MO.IO_BYTES,  0,  NULL,	MO.IO_BYTES)) IO_BYTES,  MAX(DECODE(MO.IO_UNC_BYTES,  0,  NULL,  MO.IO_UNC_BYTES)) IO_UNC_BYTES,  MAX(DECODE(MO.IO_ELIG_BYTES,	0,  NULL,  MO.IO_ELIG_BYTES)) IO_ELIG_BYTES,  MAX(DECODE(MO.IO_RET_BYTES,  0,  NULL,  MO.IO_RET_BYTES)) IO_RET_BYTES,  MAX(DECODE(MO.APPLICATION_WAIT_TIME,  0,  NULL,	MO.APPLICATION_WAIT_TIME)) APPLICATION_WAIT_TIME,  MAX(DECODE(MO.CONCURRENCY_WAIT_TIME,  0,  NULL,  MO.CONCURRENCY_WAIT_TIME)) CONCURRENCY_WAIT_TIME,  MAX(DECODE(MO.CLUSTER_WAIT_TIME,  0,  NULL,  MO.CLUSTER_WAIT_TIME)) CLUSTER_WAIT_TIME,  MAX(DECODE(MO.USER_IO_WAIT_TIME,  0,  NULL,  MO.USER_IO_WAIT_TIME)) USER_IO_WAIT_TIME,  MAX(DECODE(PLSQL_EXEC_TIME,  0,	NULL,  PLSQL_EXEC_TIME)) PLSQL_EXEC_TIME,  MAX(DECODE(MO.JAVA_EXEC_TIME,  0,  NULL,  MO.JAVA_EXEC_TIME)) JAVA_EXEC_TIME,  MAX(DECODE(MO.OTHER_WAIT_TIME,  0,  NULL,  MO.OTHER_WAIT_TIME)) OTHER_WAIT_TIME FROM MONITOR_DATA MO,  (SELECT ASH1.INST_ID,	ASH1.SESSION_ID,  ASH1.ACTIVITY_TYPE,  ASH1.EVENT_NAME,  SUM(ASH1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(ASH1.IMQ_COUNT) IMQ_COUNT,  SUM(ASH1.WAIT_COUNT) WAIT_COUNT,  SUM(ASH1.CPU_COUNT) CPU_COUNT,  SUM(ASH1.OTHER_SQL_COUNT)OTHER_SQL_COUNT,	MIN(ASH1.ACTIVITY_START) ACTIVITY_START,  MAX(ASH1.ACTIVITY_END) ACTIVITY_END FROM ASH_DATA ASH1 GROUP BY ASH1.INST_ID,  ASH1.SESSION_ID,  ASH1.ACTIVITY_TYPE,	ASH1.EVENT_NAME) ASH0 WHERE MO.INST_ID = ASH0.INST_ID(+) AND MO.SID = ASH0.SESSION_ID(+) AND (:B70 = 1 OR :B69 = 1) GROUP BY MO.INST_ID,  MO.KEY,  MO.HAS_OTHER_XML,  MO.PROCESS_NAME,	MO.SID,  MO.SESSION_SERIAL#,  MO.PX_SERVER_GROUP,  MO.PX_SERVER_SET,  MO.PX_SERVER#,  ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME) PI WHERE (:B70 = 1) GROUP BY PI.INST_ID,  PI.KEY,  PI.HAS_OTHER_XML,  PI.SID,  PI.PROCESS_NAME,  PI.SESSION_SERIAL#,  PI.PX_SERVER_GROUP,  PI.PX_SERVER_SET,  PI.PX_SERVER#) PX_SESSION) PX_SESSIONS,  (SELECT XMLELEMENT( &quot;instances&quot;,  XMLATTRIBUTES( MAX(PX_INSTANCE.ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PX_INSTANCE.IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PX_INSTANCE.CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PX_INSTANCE.WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PX_INSTANCE.OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;,	MAX(PX_INSTANCE.ELAPSED_TIME) AS &quot;max_elapsed_time&quot;,	MAX(PX_INSTANCE.BUFFER_GETS) AS &quot;max_buffer_gets&quot;,  MAX(PX_INSTANCE.IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PX_INSTANCE.IO_BYTES) AS &quot;max_io_bytes&quot;),  XMLAGG(PX_INSTANCE.PX_INSTANCES_XML ORDER BY INST_ID)) FROM (SELECT PI.INST_ID,  MAX(PI.ELAPSED_TIME) ELAPSED_TIME,  MAX(PI.IO_REQS) IO_REQS,  MAX(PI.IO_BYTES) IO_BYTES,	MAX(PI.BUFFER_GETS) BUFFER_GETS,  SUM(PI
.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(PI.IMQ_COUNT) IMQ_COUNT,	SUM(PI.WAIT_COUNT) WAIT_COUNT,	SUM(PI.CPU_COUNT) CPU_COUNT,  SUM(PI.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	XMLELEMENT( &quot;instance&quot;,  XMLATTRIBUTES( INST_ID AS &quot;inst_id&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES( 'monitor' AS &quot;type&quot;),  NVL2(MAX(ELAPSED_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),	MAX(ELAPSED_TIME)),  NULL),  NVL2(MAX(QUEUING_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MAX(QUEUING_TIME)),  NULL),  NVL2(MAX(CPU_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MAX(CPU_TIME)),  NULL),  NVL2(MAX(USER_IO_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MAX(USER_IO_WAIT_TIME)),  NULL),  NVL2(MAX(APPLICATION_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name
&quot;),  MAX(APPLICATION_WAIT_TIME)),	NULL),	NVL2(MAX(CONCURRENCY_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MAX(CONCURRENCY_WAIT_TIME)),  NULL),  NVL2(MAX(CLUSTER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MAX(CLUSTER_WAIT_TIME)),  NULL),  NVL2(MAX(PLSQL_EXEC_TIME),	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MAX(PLSQL_EXEC_TIME)),  NULL),  NVL2(MAX(JAVA_EXEC_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MAX(JAVA_EXEC_TIME)),  NULL),  NVL2(MAX(OTHER_WAIT_TIME),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'other_wait_time' AS &quot;name&quot;),	MAX(OTHER_WAIT_TIME)),	NULL),	NVL2(MAX(FETCHES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MAX(FETCHES)),  NULL),  NVL2(MAX(BUFFER_GETS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MAX(BUFFER_GETS)),  NULL),  NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('disk_reads' AS &quot;name&quot;),	MAX(READ_REQS)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('direct_writes' AS &quot;name&quot;),  MAX(WRITE_REQS)),	NULL),	NVL2(MAX(READ_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MAX(READ_REQS)),	NULL),	NVL2(MAX(READ_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),	MAX(READ_BYTES)),  NULL),  NVL2(MAX(WRITE_REQS),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MAX(WRITE_REQS)),  NULL),  NVL2(MAX(WRITE_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),	MAX(WRITE_BYTES)),  NULL),  NVL2(MAX(IO_UNC_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MAX(IO_UNC_BYTES)),  NULL),  NVL2(MAX(IO_ELIG_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MAX(IO_ELIG_BYTES)),  NULL),  NVL2(MAX(IO_RET_BYTES),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  MAX(IO_RET_BYTES)),  NULL),  CASE WHEN MAX(IO_INTER_BYTES) IS NULL OR NVL(MAX(IO_BYTES),  0) = 0 OR MAX(IO_INTER_BYTES) = MAX(IO_BYTES) OR NVL(MAX(IO_ELIG_BYTES),	0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MAX(IO_BYTES)/ DECODE(MAX(IO_INTER_BYTES),  0,  1,  MAX(IO_INTER_BYTES)),  2)) END,  CASE WHEN NVL(MAX(IO_ELIG_BYTES),  0) = 0 OR NVL(MAX(IO_BYTES),	0) = 0 OR MAX(IO_UNC_BYTES) = MAX(IO_RET_BYTES) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100* (GREATEST( NVL(MAX(IO_UNC_BYTES),  0),  NVL(MAX(IO_ELIG_BYTES),  0)) - MAX(IO_RET_BYTES)) / MAX(IO_ELIG_BYTES),  2))) END),  CASE WHEN :B33 = 1 AND SUM(PI.ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_sampled&quot;,	XMLATTRIBUTES( TO_CHAR(MIN(PI.ACTIVITY_START),	:B12 ) AS &quot;start_time&quot;,  TO_CHAR(MAX(PI.ACTIVITY_END),  :B12 ) AS &quot;end_time&quot;,  ROUND((MAX(PI.ACTIVITY_END) - MIN(PI.ACTIVITY_START)) * 3600 * 24) + 1 AS &quot;duration&quot;,  SUM(PI.ACTIVITY_COUNT) AS &quot;count&quot;,  SUM(PI.IMQ_COUNT) AS &quot;imq_count&quot;,  SUM(PI.WAIT_COUNT) AS &quot;wait_count&quot;,  SUM(PI.CPU_COUNT) AS &quot;cpu_count&quot;,  SUM(PI.OTHER_SQL_COUNT) AS &quot;other_sql_count&quot;,  :B40 AS &quot;cpu_cores&quot;,  :B39 AS &quot;hyperthread&quot;),  XMLAGG( NVL2(ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( PI.ACTIVITY_TYPE AS &quot;class&quot;,  PI.EVENT_NAME AS &quot;event&quot;),  ACTIVITY_COUNT),  NULL) ORDER BY PI.ACTIVITY_TYPE,	PI.EVENT_NAME)) ELSE NULL END) PX_INSTANCES_XML FROM (SELECT MO.INST_ID,  ASH.ACTIVITY_TYPE,  ASH.EVENT_NAME,  ASH.ACTIVITY_COUNT,  ASH.IMQ_COUNT,  ASH.WAIT_COUNT,  ASH.CPU_COUNT,  ASH.OTHER_SQL_COUNT,  ASH.ACTIVITY_START,	ASH.ACTIVITY_END,  MO.ELAPSED_TIME,  MO.QUEUING_TIME,  MO.CPU_TIME,  MO.APPLICATION_WAIT_TIME,	MO.CONCURRENCY_WAIT_TIME,  MO.CLUSTER_WAIT_TIME,  MO.USER_IO_WAIT_TIME,  MO.PLSQL_EXEC_TIME,  MO.JAVA_EXEC_TIME,  MO.OTHER_WAIT_TIME,  MO.FETCHES,  MO.BUFFER_GETS,  MO.IO_INTER_BYTES,  MO.IO_BYTES,  MO.READ_REQS,  MO.READ_BYTES,  MO.WRITE_REQS,  MO.WRITE_BYTES,  MO.IO_REQS,  MO.IO_UNC_BYTES,  MO.IO_ELIG_BYTES,  MO.IO_RET_BYTES FROM (SELECT MO0.INST_ID,  SUM(MO0.ELAPSED_TIME) ELAPSED_TIME,  SUM(MO0.QUEUING_TIME) QUEUING_TIME,  SUM(MO0.CPU_TIME) CPU_TIME,  SUM(MO0.FETCHES) FETCHES,  SUM(MO0.BUFFER_GETS) BUFFER_GETS,  SUM(MO0.IO_INTER_BYTES) IO_INTER_BYTES,  SUM(MO0.IO_BYTES) IO_BYTES,  SUM(MO0.READ_REQS) READ_REQS,  SUM(MO0.READ_BYTES) READ_BYTES,  SUM(MO0.WRITE_REQS) WRITE_REQS,	SUM(MO0.WRITE_BYTES) WRITE_BYTES,  SUM(MO0.IO_REQS) IO_REQS,  SUM(MO0.IO_UNC_BYTES) IO_UNC_BYTES,  SUM(MO0.IO_ELIG_BYTES) IO_ELIG_BYTES,  SUM(MO0.IO_RET_BYTES) IO_RET_BYTES,  SUM(MO0.APPLICATION_WAIT_TIME) APPLICATION_WAIT_TIME,  SUM(MO0.CONCURRENCY_WAIT_TIME) CONCURRENCY_WAIT_TIME,  SUM(MO0.CLUSTER_WAIT_TIME) CLUSTER_WAIT_TIME,  SUM(MO0.USER_IO_WAIT_TIME) USER_IO_WAIT_TIME,  SUM(MO0.PLSQL_EXEC_TIME) PLSQL_EXEC_TIME,  SUM(MO0.JAVA_EXEC_TIME) JAVA_EXEC_TIME,  SUM(MO0.OTHER_WAIT_TIME) OTHER_WAIT_TIME FROM MONITOR_DATA MO0 GROUP BY MO0.INST_ID) MO,  (SELECT ASH0.INST_ID,	ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME,  SUM(ASH0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(ASH0.IMQ_COUNT) IMQ_COUNT,  SUM(ASH0.WAIT_COUNT) WAIT_COUNT,  SUM(ASH0.CPU_COUNT) CPU_COUNT,  SUM(ASH0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MIN(ASH0.ACTIVITY_START) ACTIVITY_START,  MAX(ASH0.ACTIVITY_END) ACTIVITY_END FROM ASH_DATA ASH0 GROUP BY ASH0.INST_ID,	ASH0.ACTIVITY_TYPE,  ASH0.EVENT_NAME) ASH,  MONITOR_AGG WHERE MO.INST_ID = ASH.INST_ID(+) AND MONITOR_AGG.DIST_INST_COUNT &gt; 0 ) PI GROUP BY PI.INST_ID)PX_INSTANCE) PX_INSTANCES FROM MONITOR_AGG)) ELSE NULL END,  XPLAN_XML,  CASE WHEN :B43 = 1 THEN (SELECT XMLELEMENT( &quot;plan_monitor&quot;,  XMLATTRIBUTES(MAX(PLI.MAX_LINE_ACTIVITY_COUNT) AS &quot;max_activity_count&quot;,  MAX(PLI.OVERALL_MAX_IO_REQS) AS &quot;max_io_reqs&quot;,  MAX(PLI.OVERALL_MAX_IO_BYTES) AS &quot;max_io_bytes&quot;,  MAX(PLI.MAX_LINE_IMQ_COUNT) AS &quot;max_imq_count&quot;,  MAX(PLI.MAX_LINE_CPU_COUNT) AS &quot;max_cpu_count&quot;,  MAX(PLI.MAX_LINE_WAIT_COUNT) AS &quot;max_wait_count&quot;,  MAX(PLI.MAX_LINE_OTHER_SQL_COUNT) AS &quot;max_other_sql_count&quot;),  XMLAGG( XMLELEMENT( &quot;operation&quot;,  XMLATTRIBUTES( PLI.PLAN_LINE_ID AS &quot;id&quot;,  PLI.PARENT_ID AS &quot;parent_id&quot;,  PLI.OPERATION AS &quot;name&quot;,  PLI.OPTIONS AS &quot;options&quot;,	PLI.DEPTH AS &quot;depth&quot;,  PLI.POSITION AS &quot;position&quot;,	PLI.INACTIVE AS &quot;skp&quot;,  PLI.PX_TYPE AS &quot;px_type&quot;),	NVL2(PLI.OBJECT_NAME,  XMLELEMENT( &quot;object&quot;,	XMLATTRIBUTES(PLI.OBJECT_TYPE AS &quot;type&quot;),  XMLFOREST(PLI.OBJECT_OWNER AS &quot;owner&quot;),	XMLFOREST(PLI.OBJECT_NAME AS &quot;name&quot;)),  NULL),  XMLFOREST(PLI.PARTITION_START AS &quot;partition_start&quot;,  PLI.PARTITION_STOP AS &quot;partition_stop&quot;),  CASE WHEN PLI.CARDINALITY IS NULL AND PLI.BYTES IS NULL AND PLI.COST IS NULL AND PLI.TEMP_SPACE IS NULL AND PLI.TIME IS NULL THEN NULL ELSE XMLELEMENT( &quot;optimizer&quot;,  NULL,  NVL2(PLI.CARDINALITY,  XMLFOREST(PLI.CARDINALITY AS &quot;cardinality&quot;),  NULL),  NVL2(PLI.BYTES,  XMLFOREST(PLI.BYTES AS &quot;bytes&quot;),	NULL),	NVL2(PLI.COST,	XMLFOREST(PLI.COST AS &quot;cost&quot;),  NULL),  NVL2(PLI.CPU_COST,  XMLFOREST(PLI.CPU_COST AS &quot;cpu_cost&quot;),	NULL),	NVL2(PLI.IO_COST,  XMLFOREST(PLI.IO_COST AS &quot;io_cost&quot;),  NULL),  NVL2(PLI.TEMP_SPACE,  XMLFOREST(PLI.TEMP_SPACE AS &quot;temp&quot;),  NULL),  NVL2(PLI.TIME,  XMLFOREST(PLI.TIME AS &quot;time&quot;),  NULL)) END,	XMLELEMENT( &quot;stats&quot;,	XMLATTRIBUTES('plan_monitor' AS &quot;type&quot;),  NVL2(PLI.FIR
ST_MOVE_TIME,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('first_active' AS &quot;name&quot;),  TO_CHAR(FIRST_MOVE_TIME,  :B12 )),  NULL),  CASE WHEN PLI.FIRST_MOVE_TIME != PLI.FIRST_CHANGE_TIME THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('first_row' AS &quot;name&quot;),  TO_CHAR(FIRST_CHANGE_TIME,  :B12 )) ELSE NULL END,  NVL2(PLI.LAST_MOVE_TIME,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('last_active' AS &quot;name&quot;),  TO_CHAR(LAST_MOVE_TIME,  :B12 )),  NULL),  CASE WHEN (PLI.FIRST_MOVE_TIME IS NULL OR PLI.LAST_MOVE_TIME IS NULL) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('duration' AS &quot;name&quot;),  ROUND((LAST_MOVE_TIME - FIRST_MOVE_TIME) * 3600 * 24)+1) END,	CASE WHEN (PLI.OVERALL_LAST_MOVE_TIME IS NULL OR PLI.LAST_MOVE_TIME IS NULL) THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('from_most_recent' AS &quot;name&quot;),  ROUND((PLI.OVERALL_LAST_MOVE_TIME - PLI.LAST_MOVE_TIME) * 3600 * 24)) END,  NVL2(PLI.LAST_MOVE_TIME,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'from_sql_exec_start' AS &quot;name&quot;),  ROUND( (FIRST_MOVE_TIME - :B8 ) * 3600*24)),  NULL),  NVL2(PLI.PERCENT_COMPLETE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('percent_complete' AS &quot;name&quot;),  PLI.PERCENT_COMPLETE),  NULL),  NVL2(PLI.TIME_REMAINING,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('time_left' AS &quot;name&quot;),  PLI.TIME_REMAINING),  NULL),  CASE WHEN PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('starts' AS &quot;name&quot;),  PLI.STARTS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'max_starts' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_STARTS/1000000),  10000),	NULL) AS &quot;iid&quot;,  MOD(MAX_STARTS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_STARTS/10000000000)) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.HAS_EXECUTED = 1 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('dop' AS
&quot;name&quot;),  PLI.DOP) ELSE NULL END,  CASE WHEN NEED_ROWS IS NOT NULL AND PLI.FIRST_MOVE_TIME IS NOT NULL THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cardinality' AS &quot;name&quot;),	PLI.OUTPUT_ROWS) ELSE NULL END,  CASE WHEN PLI.NEED_ROWS IS NOT NULL AND PLI.DOP &gt; 0 AND PLI.MAX_OUTPUT_ROWS IS NOT NULL AND (PLI.FIRST_MOVE_TIME IS NOT NULL) THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_card' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_OUTPUT_ROWS/1000000),	10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_OUTPUT_ROWS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_OUTPUT_ROWS/10000000000)) ELSE NULL END,  CASE WHEN PLI.MEM &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('memory' AS &quot;name&quot;),  PLI.MEM) ELSE NULL END,  CASE WHEN PLI.MAX_MEM &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('max_memory' AS &quot;name&quot;),	PLI.MAX_MEM) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MIN_MAX_MEM IS NOT NULL AND PLI.MAX_MEM

&gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'min_max_mem' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MIN_MAX_MEM/1000000),  10000),  NULL) AS &quot;iid&quot;,	MOD(MIN_MAX_MEM,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MIN_MAX_MEM/10000000000)) ELSE NULL END,  CASE WHEN PLI.TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('temp' AS &quot;name&quot;),  PLI.TEMP) ELSE NULL END,  CASE WHEN PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('max_temp' AS &quot;name&quot;),  PLI.MAX_TEMP) ELSE NULL END,  CASE WHEN PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('spill_count' AS &quot;name&quot;),  PLI.SPILL_COUNT) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_MAX_TEMP IS NOT NULL AND PLI.MAX_TEMP &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_max_temp' AS &quot;name&quot;,  DECODE(:B68 ,	'Y',  MOD(TRUNC(MAX_MAX_TEMP/1000000),	10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_MAX_TEMP,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_MAX_TEMP/10000000000)) ELSE NULL END,  CASE WHEN PLI.READ_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  PLI.READ_REQS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_READ_REQS IS NOT NULL AND PLI.READ_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_read_reqs' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',	MOD(TRUNC(PLI.MAX_READ_REQS/1000000),  10000),	NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_READ_REQS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_READ_REQS/10000000000)) ELSE NULL END,	CASE WHEN PLI.READ_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  PLI.READ_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_READ_BYTES IS NOT NULL AND PLI.READ_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES( 'max_read_bytes' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_READ_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_READ_BYTES,	1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_READ_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.WRITE_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  PLI.WRITE_REQS) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_WRITE_REQS IS NOT NULL AND PLI.WRITE_REQS &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_write_reqs' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_WRITE_REQS/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_WRITE_REQS,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_WRITE_REQS/10000000000)) ELSE NULL END,  CASE WHEN PLI.WRITE_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  PLI.WRITE_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_WRITE_BYTES IS NOT NULL AND PLI.WRITE_BYTES &gt; 0 THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_write_bytes' AS &quot;name&quot;,	DECODE(:B68 ,  'Y',  MOD(TRUNC(PLI.MAX_WRITE_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(PLI.MAX_WRITE_BYTES,  1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_WRITE_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('io_inter_bytes' AS &quot;name&quot;),  PLI.IO_INTER_BYTES) ELSE NULL END,  CASE WHEN PLI.DOP &gt; 0 AND PLI.MAX_IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( 'max_io_inter_bytes' AS &quot;name&quot;,  DECODE(:B68 ,  'Y',  MOD(TRUNC(MAX_IO_INTER_BYTES/1000000),  10000),  NULL) AS &quot;iid&quot;,  MOD(MAX_IO_INTER_BYTES, 1000000) AS &quot;sid&quot;),  TRUNC(PLI.MAX_IO_INTER_BYTES/10000000000)) ELSE NULL END,  CASE WHEN PLI.IO_INTER_BYTES IS NOT NULL AND PLI.IO_BYTES &gt; 0 AND PLI.IO_BYTES != PLI.IO_INTER_BYTES THEN XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(PLI.IO_BYTES / DECODE(PUsing the report name awr_rac.txt
LI.IO_INTER_BYTES,  0,  1,  PLI.IO_INTER_BYTES),  2)) ELSE NULL END),	NVL2(STAT_GID,	XMLELEMENT( &quot;rwsstats&quot;,  XMLATTRIBUTES( PLI.STAT_GID AS &quot;group_id&quot;),  DECODE(GID_ROWNUM,  1,  (SELECT XMLELEMENT( &quot;metadata&quot;,  NULL,  XMLAGG( XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES( ROWNUM AS &quot;id&quot;,  NAME AS &quot;name&quot;,	DESCRIPTION AS &quot;desc&quot;,  TYPE AS &quot;type&quot;,  DECODE(FLAGS,  0,	NULL,  FLAGS) AS &quot;flags&quot;),  NULL) ORDER BY ID)) FROM V$SQL_MONITOR_STATNAME WHERE GROUP_ID = PLI.STAT_GID),  NULL),  NVL2(STAT1_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(1 AS &quot;id&quot;),  STAT1_VALUE),  NULL),  NVL2(STAT2_VALUE,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(2 AS &quot;id&quot;),  STAT2_VALUE),  NULL),  NVL2(STAT3_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(3 AS &quot;id&quot;),  STAT3_VALUE),  NULL),  NVL2(STAT4_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(4 AS &quot;id&quot;),	STAT4_VALUE),  NULL),  NVL2(STAT5_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(5 AS &quot;id&quot;),  STAT5_VALUE),  NULL),  NVL2(STAT6_VALUE,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(6 AS &quot;id&quot;),  STAT6_VALUE),  NULL),  NVL2(STAT7_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(7 AS &quot;id&quot;),  STAT7_VALUE),  NULL),  NVL2(STAT8_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(8 AS &quot;id&quot;),	STAT8_VALUE),  NULL),  NVL2(STAT9_VALUE,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES(9 AS &quot;id&quot;),  STAT9_VALUE),  NULL),  NVL2(STAT10_VALUE,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES(10 AS &quot;id&quot;),  STAT10_VALUE),  NULL)),  NULL),  CASE WHEN PLI.LINE_ACTIVITY_COUNT &gt; 0 AND :B33 = 1 THEN XMLELEMENT( &quot;activity_sampled&quot;,  XMLATTRIBUTES( TO_CHAR(PLI.LINE_ACTIVITY_START,  :B12 ) AS &quot;start_time&quot;,  TO_CHAR(PLI.LINE_ACTIVITY_END,  :B12 ) AS &quot;end_time&quot;,  ROUND((PLI.LINE_ACTIVITY_END - PLI.LINE_ACTIVITY_START) * 3600*24) + 1 AS &quot;duration&quot;,  PLI.LINE_ACTIVITY_COUNT AS &quot;count&quot;,  PLI.LINE_IMQ_COUNT AS &quot;imq_count&quot;,	PLI.LINE_WAIT_COUNT AS &quot;wait_count&quot;,	PLI.LINE_CPU_COUNT AS &quot;cpu_count&quot;,  PLI.LINE_OTHER_SQL_COUNT AS &quot;other_sql_count&quot;,	:B40 AS &quot;cpu_cores&quot;,	:B39 AS &quot;hyperthread&quot;),  PLI.ACTIVITY_TOTAL,	PLI.PLAN_ACTIVITY_HISTO) ELSE NULL END) ORDER BY PLI.PLAN_LINE_ID) ) FROM (SELECT AT.MAX_LINE_ACTIVITY_COUNT,  PM.OVERALL_MAX_IO_REQS,	PM.OVERALL_MAX_IO_BYTES,  AT.MAX_LINE_IMQ_COUNT,  AT.MAX_LINE_CPU_COUNT,  AT.MAX_LINE_WAIT_COUNT,  AT.LINE_OTHER_SQL_COUNT,  AT.MAX_LINE_OTHER_SQL_COUNT,  PM.PLAN_LINE_ID,  PM.PARENT_ID,  PM.OPERATION,  PM.OPTIONS,	PM.DEPTH,  PM.POSITION,  PM.INACTIVE,  CASE WHEN PM.OPERATION = 'PX COORDINATOR' AND :B23 = 'Y' AND (PM.PX_SERVER_SET IS NOT NULL OR AH.PX_SERVER_SET IS NOT NULL) THEN 'QC' WHEN PM.PX_SERVER_SET IS NOT NULL THEN TO_CHAR(PM.PX_SERVER_SET) WHEN AH.PX_SERVER_SET IS NOT NULL THEN TO_CHAR(AH.PX_SERVER_SET) WHEN (:B23 = 'N' OR (PM.LAST_CHANGE_TIME IS NULL AND AT.LINE_ACTIVITY_END IS NULL)) THEN NULL ELSE 'QC' END PX_TYPE,  PM.FIRST_CHANGE_TIME,  AT.LINE_ACTIVITY_START,  PM.LAST_CHANGE_TIME,  PM.OVERALL_LAST_CHANGE_TIME,  AT.LINE_ACTIVITY_END,	AT.OVERALL_LINE_ACTIVITY_END,  LEAST(NVL(AT.LINE_ACTIVITY_START,  PM.FIRST_CHANGE_TIME),  NVL(PM.FIRST_CHANGE_TIME,  AT.LINE_ACTIVITY_START)) FIRST_MOVE_TIME,	GREATEST(NVL(AT.LINE_ACTIVITY_END,  PM.LAST_CHANGE_TIME),  NVL(PM.LAST_CHANGE_TIME,  AT.LINE_ACTIVITY_END)) LAST_MOVE_TIME,  GREATEST(NVL(AT.OVERALL_LINE_ACTIVITY_END,  PM.OVERALL_LAST_CHANGE_TIME),	NVL(PM.OVERALL_LAST_CHANGE_TIME,  AT.OVERALL_LINE_ACTIVITY_END)) OVERALL_LAST_MOVE_TIME,  CASE WHEN PM.STARTS IS NOT NULL AND PM.STARTS &gt; 0 THEN 1 ELSE 0 END HAS_EXECUTED,	PM.OBJECT_NAME,  PM.OBJECT_TYPE,  PM.OBJECT_OWNER,  PM.PARTITION_START,  PM.PARTITION_STOP,  PM.CARDINAL
ITY,  PM.BYTES,  PM.COST,  PM.TEMP_SPACE,  PM.TIME,  PM.CPU_COST,  PM.IO_COST,	LO.PERCENT_COMPLETE,  LO.TIME_REMAINING,  PM.STARTS,  PM.DOP,  PM.MAX_STARTS,  PM.OUTPUT_ROWS,	PM.NEED_ROWS,  PM.MAX_OUTPUT_ROWS,  PM.MEM,  PM.MAX_MEM,  PM.MIN_MAX_MEM,  PM.TEMP,  PM.MAX_TEMP,  PM.SPILL_COUNT,  PM.MAX_MAX_TEMP,  PM.READ_REQS,  PM.MAX_READ_REQS,	PM.READ_BYTES,	PM.MAX_READ_BYTES,  PM.WRITE_REQS,  PM.MAX_WRITE_REQS,	PM.WRITE_BYTES,  PM.MAX_WRITE_BYTES,  PM.IO_INTER_BYTES,  PM.IO_BYTES,	PM.MAX_IO_INTER_BYTES,	AT.LINE_ACTIVITY_COUNT,  AT.LINE_IMQ_COUNT,  AT.LINE_WAIT_COUNT,  AT.LINE_CPU_COUNT,  AT.ACTIVITY_TOTAL,  AH.PLAN_ACTIVITY_HISTO,  PM.STAT_GID,  PM.GID_ROWNUM,  PM.STAT1_VALUE,  PM.STAT2_VALUE,  PM.STAT3_VALUE,  PM.STAT4_VALUE,  PM.STAT5_VALUE,  PM.STAT6_VALUE,  PM.STAT7_VALUE,	PM.STAT8_VALUE,  PM.STAT9_VALUE,  PM.STAT10_VALUE FROM (SELECT AT0.*,  MAX(LINE_ACTIVITY_END) OVER() OVERALL_LINE_ACTIVITY_END,  MAX(LINE_ACTIVITY_COUNT) OVER() MAX_LINE_ACTIVITY_COUNT,  MAX(LINE_IMQ_COUNT) OVER() MAX_LINE_IMQ_COUNT,  MAX(LINE_CPU_COUNT) OVER() MAX_LINE_CPU_COUNT,  MAX(LINE_WAIT_COUNT) OVER() MAX_LINE_WAIT_COUNT,  MAX(LINE_OTHER_SQL_COUNT) OVER() MAX_LINE_OTHER_SQL_COUNT FROM (SELECT AD1.PLAN_LINE_ID,  MIN(AD1.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD1.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) LINE_ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) LINE_IMQ_COUNT,  SUM(AD1.WAIT_COUNT) LINE_WAIT_COUNT,  SUM(AD1.OTHER_SQL_COUNT) LINE_OTHER_SQL_COUNT,  SUM(AD1.CPU_COUNT) LINE_CPU_COUNT,  SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG(XMLELEMENT( &quot;activity&quot;,	XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,	AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT) ORDER BY AD1.ACTIVITY_TYPE,	AD1.EVENT_NAME) ACTIVITY_TOTAL FROM (SELECT AD0.PLAN_LINE_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  MIN(AD0.ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD0.ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  MAX(AD0.DFO_MOST_ACTIVE_IID) DFO_MOST_ACTIVE_IID,  MAX(AD0.DFO_MOST_ACTIVE_SID) DFO_MOST_ACTIVE_SID,  SUM(AD0.DFO_MOST_ACTIVE_COUNT) DFO_MOST_ACTIVE_COUNT FROM ASH_DATA AD0 WHERE AD0.PLAN_LINE_ID IS NOT NULL GROUP BY AD0.PLAN_LINE_ID,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME) AD1 GROUP BY AD1.PLAN_LINE_ID) AT0) AT,	(SELECT AD2.PLAN_LINE_ID,  MIN(AD2.PX_SERVER_SET) PX_SERVER_SET,  MIN(AD2.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD2.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  SUM(AD2.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD2.IMQ_COUNT) IMQ_COUNT,  SUM(AD2.WAIT_COUNT) WAIT_COUNT,  SUM(AD2.CPU_COUNT) CPU_COUNT,  SUM(AD2.OTHER_SQL_COUNT) OTHER_SQL_COUNT,  CASE WHEN :B29 = 1 AND SUM(AD2.ACTIVITY_COUNT) &gt; 0 THEN XMLELEMENT( &quot;activity_histogram&quot;,  XMLATTRIBUTES( :B26 AS &quot;bucket_interval&quot;,  :B27 AS &quot;bucket_count&quot;,  TO_CHAR( :B20 ,	:B12 ) AS &quot;start_time&quot;,  TO_CHAR(:B22 ,  :B12 ) AS &quot;end_time&quot;,  ROUND((:B22 -:B20 ) *3600*24) + 1 AS &quot;duration&quot;),  XMLAGG(XMLELEMENT( &quot;bucket&quot;,  XMLATTRIBUTES( AD2.BUCKET_NUM AS &quot;number&quot;),	AD2.ACTIVITY_BUCKET) ORDER BY AD2.BUCKET_NUM)) ELSE NULL END PLAN_ACTIVITY_HISTO FROM (SELECT AD1.PLAN_LINE_ID,  AD1.BUCKET_NUM,  MIN(AD1.PX_SERVER_SET) PX_SERVER_SET,  MIN(AD1.LINE_ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD1.LINE_ACTIVITY_END) LINE_ACTIVITY_END,  MIN(AD1.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD1.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUM(AD1.ACTIVITY_COUNT) ACTIVITY_COUNT,  SUM(AD1.IMQ_COUNT) IMQ_COUNT,  SUM(AD1.WAIT_COUNT) WAIT_COUNT,  SUM(AD1.CPU_COUNT) CPU_COUNT,  SUM(AD1.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	SUBSTR(MAX(LPAD(AD1.ACTIVITY_COUNT, 10)|| AD1.ACTIVITY_TYPE),  11) MOST_ACTIVE,  XMLAGG(NVL2(AD1.ACTIVITY_TYPE,  XMLELEMENT( &quot;activity&quot;,  XMLATTRIBUTES( AD1.ACTIVITY_TYPE AS &quot;class&quot;,  AD1.EVENT_NAME AS &quot;event&quot;),  AD1.ACTIVITY_COUNT),  NULL) ORDER BY AD1.ACTIVITY_TYPE,  AD1.EVENT_NAME) ACTIVITY_BUCKET FROM (SELECT AD0.PLAN_LINE_ID,  AD0.PLAN_ACTIVITY_BUCKET_NUM BUCKET_NUM,  AD0.ACTIVITY_TYPE,  AD0.EVENT_NAME,  MIN(NVL2(AD0.ACTIVITY_START,  AD0.PX_SERVER_SET,  NULL)) PX_SERVER_SET,  MIN(AD0.ACTIVITY_START) LINE_ACTIVITY_START,  MAX(AD0.ACTIVITY_END) LINE_ACTIVITY_END,  MIN(AD0.BUCKET_ACTIVITY_START) BUCKET_ACTIVITY_START,  MAX(AD0.BUCKET_ACTIVITY_END) BUCKET_ACTIVITY_END,  SUM(AD0.IMQ_COUNT) IMQ_COUNT,  SUM(AD0.CPU_COUNT) CPU_COUNT,  SUM(AD0.WAIT_COUNT) WAIT_COUNT,  SUM(AD0.OTHER_SQL_COUNT) OTHER_SQL_COUNT,	SUM(AD0.ACTIVITY_COUNT) ACTIVITY_COUNT FROM ASH_DATA AD0 GROUP BY AD0.PLAN_LINE_ID,  AD0.PLAN_ACTIVITY_BUCKET_NUM,  AD0.ACTIVITY_TYPE,	AD0.EVENT_NAME) AD1 GROUP BY AD1.PLAN_LINE_ID,	AD1.BUCKET_NUM) AD2 GROUP BY AD2.PLAN_LINE_ID) AH,  (SELECT LO.SQL_PLAN_LINE_ID PLAN_LINE_ID,  DECODE(SUM(LO.TOTALWORK),  0,  NULL,  ROUND(SUM(LO.SOFAR)*100/SUM(LO.TOTALWORK))) PERCENT_COMPLETE,  MAX(LO.TIME_REMAINING) TIME_REMAINING FROM GV$SESSION_LONGOPS LO,  MONITOR_DATA MO WHERE (:B49 = 'Y' OR :B71 = 'DONE (ERROR)') AND LO.SQL_ID = :B9 AND LO.SQL_EXEC_START = :B8 AND LO.SQL_EXEC_ID = :B7 AND LO.INST_ID = MO.INST_ID AND LO.SID = MO.SID GROUP BY LO.SQL_PLAN_LINE_ID) LO,  (SELECT PM0.*,  CASE WHEN PM0.STARTS IS NULL OR PM0.STARTS = 0 OR PM0.OUTPUT_ROWS IS NULL THEN NULL ELSE 1 END NEED_ROWS,  ROW_NUMBER() OVER(PARTITION BY PM0.STAT_GID ORDER BY PM0.PLAN_LINE_ID ) GID_ROWNUM,  MAX(LAST_CHANGE_TIME) OVER() OVERALL_LAST_CHANGE_TIME,  MAX(MAX_IO_REQS) OVER() OVERALL_MAX_IO_REQS,  MAX(MAX_IO_BYTES) OVER() OVERALL_MAX_IO_BYTES FROM (SELECT /*+ leading(mo) use_hash(plm) */ PLM.PLAN_LINE_ID PLAN_LINE_ID,  PLM.PLAN_OPERATION OPERATION,	PLM.PLAN_OPTIONS OPTIONS,  MAX(PLM.PLAN_PARENT_ID) PARENT_ID,  MAX(PLM.PLAN_DEPTH) DEPTH,  MAX(PLM.PLAN_POSITION) POSITION,  MAX(PLM.PLAN_OPERATION_INACTIVE) INACTIVE,  MAX(PLM.PLAN_OBJECT_OWNER) OBJECT_OWNER,  MAX(PLM.PLAN_OBJECT_NAME) OBJECT_NAME,  MAX(PLM.PLAN_OBJECT_TYPE) OBJECT_TYPE,  MAX(PLM.PLAN_COST) COST,  MAX(PLM.PLAN_CARDINALITY) CARDINALITY,  MAX(PLM.PLAN_BYTES) BYTES,  MAX(PLM.PLAN_CPU_COST) CPU_COST,  MAX(PLM.PLAN_IO_COST) IO_COST,  MAX(PLM.PLAN_TEMP_SPACE) TEMP_SPACE,  MAX(PLM.PLAN_TIME) TIME,  MAX(PLM.PLAN_PARTITION_START) PARTITION_START,  MAX(PLM.PLAN_PARTITION_STOP) PARTITION_STOP,  MIN(PLM.FIRST_CHANGE_TIME) FIRST_CHANGE_TIME,	MAX(PLM.LAST_CHANGE_TIME) LAST_CHANGE_TIME,  MIN(PLM.LAST_CHANGE_TIME) MIN_LAST_CHANGE_TIME,  MIN(NVL2(PLM.FIRST_CHANGE_TIME,  MO.PX_SERVER_SET,  NULL)) PX_SERVER_SET,  COUNT(CASE WHEN PLM.PAR IS NOT NULL AND PLM.STARTS IS NOT NULL AND PLM.STARTS &gt; 0 AND PLM.PLAN_LINE_ID != 0 AND PLM.PLAN_OPERATION != 'PX COORDINATOR' THEN 1 ELSE NULL END) DOP,  SUM(PLM.STARTS) STARTS,	MAX(NVL2(PAR,  PLM.STARTS * 10000000000 + PLM.ES,  NULL)) MAX_STARTS,  SUM(PLM.OUTPUT_ROWS) OUTPUT_ROWS,  MAX(NVL2(PAR,  PLM.OUTPUT_ROWS * 10000000000 +PLM.ES,  NULL)) MAX_OUTPUT_ROWS,  SUM(PLM.WORKAREA_MEM) MEM,  SUM(PLM.WORKAREA_MAX_MEM) MAX_MEM,  MIN(NVL2(PAR,  PLM.WORKAREA_MAX_MEM * 10000000000 + PLM.ES,  NULL)) MIN_MAX_MEM,  SUM(PLM.WORKAREA_TEMPSEG) TEMP,  SUM(PLM.WORKAREA_MAX_TEMPSEG) MAX_TEMP,  MAX(NVL2(PAR,  PLM.WORKAREA_MAX_TEMPSEG * 10000000000 + PLM.ES,  NULL)) MAX_MAX_TEMP,  COUNT(PLM.WORKAREA_MAX_TEMPSEG) SPILL_COUNT,  SUM(PLM.PHYSICAL_READ_REQUESTS) READ_REQS,  MAX(NVL2(PAR,  PLM.PHYSICAL_READ_REQUESTS * 10000000000 + PLM.ES,  NULL)) MAX_READ_REQS,  SUM(PLM.PHYSICAL_READ_BYTES) READ_BYTES,  MAX(NVL2(PAR,  PLM.PHYSICAL_READ_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_READ_BYTES,  SUM(PLM.PHYSICAL_WRITE_REQUESTS) WRITE_REQS,  MAX(NVL2(PAR,	PLM.PHYSICAL_WRITE_REQUESTS * 10000000000 + PLM.ES,  NULL)) MAX_WRITE_REQS,  SUM(PLM.PHYSICAL_WRITE_BYTES) WRITE_BYTES,  MAX(NVL2(PAR,	PLM.PHYSICAL_WRITE_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_WRITE_BYTES,  NVL(SUM(PLM.PHYSICAL_READ_BYTES),  0) + NVL(SUM(PLM.PHYSICAL_WRITE_BYTES),  0) IO_BYTES,  SUM(NVL(PLM.PHYSICA
L_READ_REQUESTS,  0) + NVL(PLM.PHYSICAL_WRITE_REQUESTS,  0)) MAX_IO_REQS,  SUM(NVL(PLM.PHYSICAL_READ_BYTES,  0) + NVL(PLM.PHYSICAL_WRITE_BYTES,  0)) MAX_IO_BYTES,  SUM(PLM.IO_INTERCONNECT_BYTES) IO_INTER_BYTES,  MAX(NVL2(PAR,  PLM.IO_INTERCONNECT_BYTES * 10000000000 + PLM.ES,  NULL)) MAX_IO_INTER_BYTES,  MAX(OTHERSTAT_GROUP_ID) STAT_GID,  NVL(DECODE(MAX(OTHERSTAT_1_TYPE),	3,  MAX(OTHERSTAT_1_VALUE),  4,  MAX(OTHERSTAT_1_VALUE),  6,  MIN(OTHERSTAT_1_VALUE),  7,  MIN(OTHERSTAT_1_VALUE),  NULL),  SUM(DECODE(OTHERSTAT_1_TYPE,  1,  OTHERSTAT_1_VALUE,  2,  OTHERSTAT_1_VALUE,  NULL))) STAT1_VALUE,	NVL(MOD((DECODE(MAX(OTHERSTAT_2_TYPE),	3,  MAX(OTHERSTAT_2_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),	4,  MAX(RMAX1 + OTHERSTAT_2_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_2_VALUE),  NULL),  6,  MIN(OTHERSTAT_2_VALUE),  NULL)),	10000000000000000),  SUM(DECODE(OTHERSTAT_2_TYPE,  1,  OTHERSTAT_2_VALUE,  2,  OTHERSTAT_2_VALUE,  NULL))) STAT2_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_3_TYPE),  3,  MAX(OTHERSTAT_3_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_3_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_3_VALUE),  NULL),  6,  MIN(OTHERSTAT_3_VALUE),	NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_3_TYPE,  1,	OTHERSTAT_3_VALUE,  2,	OTHERSTAT_3_VALUE,  NULL))) STAT3_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_4_TYPE),  3,  MAX(OTHERSTAT_4_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_4_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_4_VALUE),  NULL),  6,	MIN(OTHERSTAT_4_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_4_TYPE,  1,  OTHERSTAT_4_VALUE,  2,  OTHERSTAT_4_VALUE,  NULL))) STAT4_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_5_TYPE),  3,  MAX(OTHERSTAT_5_VALUE),	5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_5_VALUE),	7,  MIN(RMAX1 + OTHERSTAT_5_VALUE),  NULL),  6,  MIN(OTHERSTAT_5_VALUE),  NULL)),  10000000000000000),	SUM(DECODE(OTHERSTAT_5_TYPE,  1,  OTHERSTAT_5_VALUE,  2,  OTHERSTAT_5_VALUE,  NULL))) STAT5_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_6_TYPE),  3,	MAX(OTHERSTAT_6_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,	MAX(RMAX1 + OTHERSTAT_6_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_6_VALUE),  NULL),  6,  MIN(OTHERSTAT_6_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_6_TYPE,  1,  OTHERSTAT_6_VALUE,  2,  OTHERSTAT_6_VALUE,  NULL))) STAT6_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_7_TYPE),  3,  MAX(OTHERSTAT_7_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_7_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_7_VALUE),  NULL),  6,  MIN(OTHERSTAT_7_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_7_TYPE,	1,  OTHERSTAT_7_VALUE,	2,  OTHERSTAT_7_VALUE,	NULL))) STAT7_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_8_TYPE),  3,  MAX(OTHERSTAT_8_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_8_VALUE),  7,  MIN(RMAX1 + OTHERSTAT_8_VALUE),	NULL),	6,  MIN(OTHERSTAT_8_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_8_TYPE,  1,  OTHERSTAT_8_VALUE,  2,  OTHERSTAT_8_VALUE,  NULL))) STAT8_VALUE,  NVL(MOD((DECODE(MAX(OTHERSTAT_9_TYPE),  3,  MAX(OTHERSTAT_9_VALUE),  5,	DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_9_VALUE),  7,	MIN(RMAX1 + OTHERSTAT_9_VALUE),  NULL),  6,  MIN(OTHERSTAT_9_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_9_TYPE,  1,  OTHERSTAT_9_VALUE,  2,  OTHERSTAT_9_VALUE,  NULL))) STAT9_VALUE,	NVL(MOD((DECODE(MAX(OTHERSTAT_10_TYPE),  3,  MAX(OTHERSTAT_10_VALUE),  5,  DECODE(MAX(OTHERSTAT_1_TYPE),  4,  MAX(RMAX1 + OTHERSTAT_10_VALUE),	7,  MIN(RMAX1 + OTHERSTAT_10_VALUE),  NULL),  6,  MIN(OTHERSTAT_10_VALUE),  NULL)),  10000000000000000),  SUM(DECODE(OTHERSTAT_10_TYPE,  1,  OTHERSTAT_10_VALUE,  2,  OTHERSTAT_10_VALUE,  NULL))) STAT10_VALUE FROM (SELECT A.*,  OTHERSTAT_1_VALUE * 10000000000000000 RMAX1,  A.INST_ID * 1000000 + A.SID ES,  DECODE(A.PROCESS_NAME,  'ora',  NULL,  1) PAR FROM GV$ALL_SQL_PLAN_MONITOR A) PLM,  MONITOR_DATA MO WHERE PLM.SQL_ID = :B9 AND PLM.SQL_EXEC_START = :B8 AND PLM.SQL_EXEC_ID = :B7 AND PLM.INST_ID = MO.INST_ID AND PLM.INST_ID BETWEEN :B11 AND :B10 AND PLM.KEY = MO.KEY GROUP BY PLM.PLAN_LINE_ID,	PLM.PLAN_OPERATION,  PLM.PLAN_OPTIONS) PM0) PM WHERE AH.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND AT.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND LO.PLAN_LINE_ID(+) = PM.PLAN_LINE_ID AND (:B21 IS NULL OR PM.PLAN_LINE_ID = :B21 )) PLI) ELSE NULL END,	CASE WHEN :B42 = 1 THEN DBMS_SQLTUNE.BUILD_STASH_XML( SESSION_ID=&gt;:B19 ,  SESSION_SERIAL=&gt;:B18 ,	SESSION_INST_ID=&gt;:B17 ,  PX_MODE=&gt;'yes',	START_TIME=&gt;:B20 ,  END_TIME=&gt;:B22 ,  MISSING_SECONDS=&gt; :B41 ,  INSTANCE_LOW_FILTER=&gt;:B11 ,  INSTANCE_HIGH_FILTER=&gt;:B10 ,  BUCKET_MAX_COUNT=&gt;NULL,  BUCKET_INTERVAL=&gt;:B26 ,  REPORT_LEVEL=&gt;'typical',  CPU_CORES=&gt;:B40 ,  IS_HYPER=&gt;:B39 ) ELSE NULL END),  (CASE WHEN :B38 = 1 THEN (SELECT XMLELEMENT( &quot;skewed_sessions&quot;,  XMLATTRIBUTES( DECODE(MIN(INST_ID),  NULL,  :B17 ,  MIN(INST_ID)) AS &quot;min_iid&quot;,	DECODE(MAX(INST_ID),  NULL,  :B17 ,  MAX(INST_ID)) AS
&quot;max_iid&quot;),  XMLAGG( XMLELEMENT( &quot;s&quot;,  XMLATTRIBUTES( INST_ID AS &quot;i&quot;),  SESSION_ID) ORDER BY INST_ID,  SESSION_ID)) FROM (SELECT SESS.* FROM (SELECT DECODE(AD.DFO_MOST_ACTIVE_IID,  :B17 ,  NULL,  AD.DFO_MOST_ACTIVE_IID) INST_ID,  AD.DFO_MOST_ACTIVE_SID SESSION_ID FROM ASH_DATA AD WHERE AD.DFO_MOST_ACTIVE_COUNT IS NOT NULL GROUP BY AD.DFO_MOST_ACTIVE_IID,  AD.DFO_MOST_ACTIVE_SID ORDER BY MAX(AD.DFO_MOST_ACTIVE_COUNT) DESC) SESS WHERE ROWNUM &lt;= 100)) ELSE NULL END),  (CASE WHEN :B37 = 1 THEN (SELECT XMLELEMENT( &quot;report_repository_summary&quot;,  CASE WHEN MA.MAX_DBOP_NAME IS NOT NULL THEN XMLELEMENT( &quot;dbop&quot;,  XMLATTRIBUTES('F' AS &quot;detail&quot;,  MA.MAX_DBOP_NAME AS &quot;dbop_name&quot;,  TO_CHAR(MA.MIN_FIRST_REFRESH_TIME,  :B12 ) AS &quot;dbop_exec_start&quot;,  MA.MAX_DBOP_EXEC_ID AS &quot;dbop_exec_id&quot;),  XMLFOREST( MA.MAX_STATUS AS &quot;status&quot;,  TO_CHAR(NVL(MA.MAX_SQL_EXEC_START,  MA.MIN_FIRST_REFRESH_TIME),  :B12 )AS
&quot;first_refresh_time&quot;,  TO_CHAR(MA.MAX_LAST_REFRESH_TIME,  :B12 )AS &quot;last_refresh_time&quot;,  MA.SUM_REFRESH_COUNT AS &quot;refresh_count&quot;,  MA.MAX_INST_ID AS &quot;inst_id&quot;,  MA.MAX_SESSION_ID AS &quot;session_id&quot;,  MA.MAX_SESSION_SERIAL AS &quot;session_serial&quot;,  MA.MAX_USERID AS &quot;user_id&quot;,  MA.MAX_USERNAME AS &quot;user&quot;,  MA.MAX_CON_ID AS &quot;con_id&quot;,	MA.MAX_CON_NAME AS &quot;con_name&quot;,  MA.MAX_MODULE AS &quot;module&quot;,	MA.MAX_ACTION AS &quot;action&quot;,  MA.MAX_SERVICE_NAME AS &quot;service&quot;,  MA.MAX_CLIENT_ID AS &quot;client_id&quot;,  MA.MAX_CLIENT_INFO AS &quot;client_info&quot;,  MA.MAX_PROGRAM AS &quot;program&quot;,  MA.MAX_PL_ENTRY_OID AS &quot;plsql_entry_object_id&quot;,  MA.MAX_PL_ENTRY_PROGID AS &quot;plsql_entry_subprogram_id&quot;,  MA.MAX_PL_OID AS &quot;plsql_object_id&quot;,  MA.MAX_PL_PROGID AS &quot;plsql_subprogram_id&quot;,  MA.MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,	MA.MAX_PX_DOP AS &quot;dop&quot;,  MA.MAX_PX_DOP_INSTANCES AS &quot;instances&quot;),  CASE WHEN MA.MAX_ERROR_NUMBER IS NULL THEN NULL ELSE XMLELEMENT( &quot;error&quot;,  XMLATTRIBUTES(MA.MAX_ERROR_NUMBER AS &quot;number&quot;,  MA.MAX_ERROR_FACILITY AS &quot;facility&quot;),  MA.MAX_ERROR_MESSAGE) END,  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('duration' AS &quot;name&quot;),  GREATEST(ROUND((MA.MAX_LAST_REFRESH_TIME- NVL(MA.MAX_SQL_EXEC_START,  MA.MIN_FIRST_REFRESH_TIME))*86400),  LEAST(MA.SUM_ELAPSED_TIME/1000000,	1),  CEIL(MA.MAX_QUEUING_TIME/1000000))),  DECODE(MA.SUM_ELAPSED_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MA.SUM_ELAPSED_TIME)),  DECODE(MA.MAX_QUEUING_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MA.MAX_QUEUING_TIME)),  DECODE(MA.SUM_CPU_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MA.SUM_CPU_TIME)),	DECODE(MA.SUM_USER_IO_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MA.SUM_USER_IO_WAIT_TIME)),  DECODE(MA.SUM_APPLICATION_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MA.SUM_APPLICATION_WAIT_TIME)),	DECODE(MA.SUM_CONCURRENCY_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MA.SUM_CONCURRENCY_WAIT_TIME)),  DECODE(MA.SUM_CLUSTER_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MA.SUM_CLUSTER_WAIT_TIME)),	DECODE(MA.SUM_PLSQL_EXEC_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MA.SUM_PLSQL_EXEC_TIME)),  DECODE(MA.SUM_JAVA_EXEC_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MA.SUM_JAVA_EXEC_TIME)),  DECODE(MA.SUM_OTHER_WAIT_TIME,  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  MA.SUM_OTHER_WAIT_TIME)),  DECODE(MA.SUM_FETCHES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MA.SUM_FETCHES)),  DECODE(MA.SUM_BUFFER_GETS,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MA.SUM_BUFFER_GETS)),  DECODE(MA.SUM_READ_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MA.SUM_READ_REQS)),	DECODE(MA.SUM_READ_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MA.SUM_READ_BYTES)),  DECODE(MA.SUM_WRITE_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MA.SUM_WRITE_REQS)),  DECODE(MA.SUM_WRITE_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MA.SUM_WRITE_BYTES)),  CASE WHEN MA.SUM_IO_INTER_BYTES IS NULL OR MA.SUM_IO_INTER_BYTES = MA.SUM_IO_BYTES OR MA.SUM_IO_BYTES = 0 OR NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MA.SUM_IO_BYTES / DECODE(MA.SUM_IO_INTER_BYTES,  0,  1,  MA.SUM_IO_INTER_BYTES),  2)) END,	CASE WHEN NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 OR MA.SUM_IO_BYTES = 0 OR MA.SUM_IO_UNC_BYTES = MA.SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100 * (GREATEST(MA.SUM_IO_UNC_BYTES,  MA.SUM_IO_ELIG_BYTES) - MA.SUM_IO_RET_BYTES) / MA.SUM_IO_ELIG_BYTES,  2))) END) ) ELSE XMLELEMENT( &quot;sql&quot;,  XMLATTRIBUTES( MA.MAX_SQL_ID AS &quot;sql_id&quot;,  TO_CHAR(MA.MAX_SQL_EXEC_START,  :B12 ) AS &quot;sql_exec_start&quot;,	MA.MAX_SQL_EXEC_ID AS &quot;sql_exec_id&quot;),  XMLFOREST(MA.MAX_STATUS AS &quot;status&quot;,  SUBSTR(MA.SQLMON_TEXT,  1,  100) AS &quot;sql_text&quot;,  TO_CHAR(MA.MIN_FIRST_REFRESH_TIME,	:B12 ) AS &quot;first_refresh_time&quot;,  TO_CHAR(MA.MAX_LAST_REFRESH_TIME,  :B12 ) AS &quot;last_refresh_time&quot;,	MA.SUM_REFRESH_COUNT AS &quot;refresh_count&quot;,  MA.MAX_INST_ID AS &quot;inst_id&quot;,  MA.MAX_SESSION_ID AS &quot;session_id&quot;,  MA.MAX_SESSION_SERIAL AS &quot;session_serial&quot;,	MA.MAX_USERID AS &quot;user_id&quot;,  MA.MAX_USERNAME AS &quot;user&quot;,  MA.MAX_CON_ID AS &quot;con_id&quot;,  MA.MAX_CON_NAME AS &quot;con_name&quot;,  MA.MAX_MODULE AS &quot;module&quot;,  MA.MAX_ACTION AS &quot;action&quot;,  MA.MAX_SERVICE_NAME AS &quot;service&quot;,  MA.MAX_CLIENT_ID AS &quot;client_id&quot;,  MA.MAX_CLIENT_INFO AS &quot;client_info&quot;,  MA.MAX_PROGRAM AS &quot;program&quot;,  MA.MAX_PLAN_HASH_VALUE AS &quot;plan_hash&quot;,  MA.MAX_PL_ENTRY_OID AS &quot;plsql_entry_object_id&quot;,  MA.MAX_PL_ENTRY_PROGID AS &quot;plsql_entry_subprogram_id&quot;,  MA.MAX_PL_OID AS &quot;plsql_object_id&quot;,	MA.MAX_PL_PROGID AS &quot;plsql_subprogram_id&quot;,  MA.MAX_PX_IS_CROSS_INSTANCE AS &quot;is_cross_instance&quot;,  MA.MAX_PX_DOP AS &quot;dop&quot;,	MA.MAX_PX_DOP_INSTANCES AS &quot;instances&quot;,  MA.SUM_SERVERS_REQUESTED AS &quot;px_servers_requested&quot;,  MA.SUM_SERVERS_ALLOCATED AS &quot;px_servers_allocated&quot;),  XMLELEMENT( &quot;stats&quot;,  XMLATTRIBUTES('monitor' AS &quot;type&quot;),  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('duration' AS &quot;name&quot;),	GREATEST(ROUND((MA.MAX_LAST_REFRESH_TIME- MA.MAX_SQL_EXEC_START) * 86400),  LEAST(MA.SUM_ELAPSED_TIME/1000000,	1),  CEIL(MA.MAX_QUEUING_TIME/1000000))),  DECODE(MA.SUM_ELAPSED_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elapsed_time' AS &quot;name&quot;),  MA.SUM_ELAPSED_TIME)),  DECODE(MA.MAX_QUEUING_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('queuing_time' AS &quot;name&quot;),  MA.MAX_QUEUING_TIME)),  DECODE(MA.SUM_CPU_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cpu_time' AS &quot;name&quot;),  MA.SUM_CPU_TIME)),	DECODE(MA.SUM_USER_IO_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_io_wait_time' AS &quot;name&quot;),  MA.SUM_USER_IO_WAIT_TIME)),  DECODE(MA.SUM_APPLICATION_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('application_wait_time' AS &quot;name&quot;),  MA.SUM_APPLICATION_WAIT_TIME)),	DECODE(MA.SUM_CONCURRENCY_WAIT_TIME,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('concurrency_wait_time' AS &quot;name&quot;),  MA.SUM_CONCURRENCY_WAIT_TIME)),  DECODE(MA.SUM_CLUSTER_WAIT_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cluster_wait_time' AS &quot;name&quot;),  MA.SUM_CLUSTER_WAIT_TIME)),	DECODE(MA.SUM_PLSQL_EXEC_TIME,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('plsql_exec_time' AS &quot;name&quot;),  MA.SUM_PLSQL_EXEC_TIME)),  DECODE(MA.SUM_JAVA_EXEC_TIME
,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('java_exec_time' AS &quot;name&quot;),  MA.SUM_JAVA_EXEC_TIME)),  DECODE(MA.SUM_OTHER_WAIT_TIME,  0,  NULL,	XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('other_wait_time' AS &quot;name&quot;),  MA.SUM_OTHER_WAIT_TIME)),  DECODE(MA.SUM_FETCHES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('user_fetch_count' AS &quot;name&quot;),  MA.SUM_FETCHES)),  DECODE(MA.SUM_BUFFER_GETS,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('buffer_gets' AS &quot;name&quot;),  MA.SUM_BUFFER_GETS)),  DECODE(MA.SUM_READ_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_reqs' AS &quot;name&quot;),  MA.SUM_READ_REQS)),	DECODE(MA.SUM_READ_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('read_bytes' AS &quot;name&quot;),  MA.SUM_READ_BYTES)),  DECODE(MA.SUM_WRITE_REQS,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('write_reqs' AS &quot;name&quot;),  MA.SUM_WRITE_REQS)),  DECODE(MA.SUM_WRITE_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,	XMLATTRIBUTES('write_bytes' AS &quot;name&quot;),  MA.SUM_WRITE_BYTES)),  DECODE(MA.SUM_IO_UNC_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('unc_bytes' AS &quot;name&quot;),  MA.SUM_IO_UNC_BYTES)),  DECODE(MA.SUM_IO_ELIG_BYTES,	0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('elig_bytes' AS &quot;name&quot;),  MA.SUM_IO_ELIG_BYTES)),  DECODE(MA.SUM_IO_RET_BYTES,  0,  NULL,  XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('ret_bytes' AS &quot;name&quot;),  MA.SUM_IO_RET_BYTES)),  CASE WHEN MA.SUM_IO_INTER_BYTES IS NULL OR MA.SUM_IO_INTER_BYTES = MA.SUM_IO_BYTES OR MA.SUM_IO_BYTES = 0 OR NVL(MA.SUM_IO_ELIG_BYTES,  0) = 0 THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency' AS &quot;name&quot;),  ROUND(MA.SUM_IO_BYTES / DECODE(MA.SUM_IO_INTER_BYTES,	0,  1,	MA.SUM_IO_INTER_BYTES),  2)) END,  CASE WHEN NVL(MA.SUM_IO_ELIG_BYTES,	0) = 0 OR MA.SUM_IO_BYTES = 0 OR MA.SUM_IO_UNC_BYTES = MA.SUM_IO_RET_BYTES THEN NULL ELSE XMLELEMENT( &quot;stat&quot;,  XMLATTRIBUTES('cell_offload_efficiency2' AS &quot;name&quot;),  GREATEST(0,  ROUND(100 * (GREATEST(MA.SUM_IO_UNC_BYTES,  MA.SUM_IO_ELIG_BYTES) - MA.SUM_IO_RET_BYTES) / MA.SUM_IO_ELIG_BYTES,	2))) END) ) END) FROM MONITOR_AGG MA) ELSE NULL END) FROM (SELECT CASE WHEN V1.XPLAN_XML IS NULL OR V1.XPLAN_XML.EXISTSNODE('/error') &gt; 0 THEN NULL ELSE V1.XPLAN_XML END XPLAN_XML FROM (SELECT CASE WHEN :B36 = 1 THEN DBMS_XPLAN.BUILD_PLAN_XML( TABLE_NAME=&gt;'gv$all_sql_plan',  PLAN_TAG=&gt;'plan',	FILTER_PREDS=&gt;:B35 ,  FORMAT=&gt;'-PROJECTION +ALIAS +ADAPTIVE') ELSE NULL END XPLAN_XML FROM DUAL) V1) CONST_VIEW</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="amnkmrsjh10nv"></a>amnkmrsjh10nv</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '28';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bhdvtsvjhgvrh"></a>bhdvtsvjhgvrh</td><td class='awrc'><pre_sqltext class="awr">SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bhs63jbrb30ru"></a>bhs63jbrb30ru</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '13';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bjck50zs3nc95"></a>bjck50zs3nc95</td><td class='awrc'><pre_sqltext class="awr">insert into  WRH$_SYSSTAT	(dbid,	per_pdb,  con_dbid,  snap_id,  instance_number,  stat_id,  value)  select /*+ use_hash(v$sysstat) */  :dbid,  0 per_pdb,   :srcdbid  con_dbid,	 :snap_id,  :instance_number,  stat_id,  value FROM   v$sysstat    sysstat  WHERE (1 = 1) </pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="bz8m3my689x30"></a>bz8m3my689x30</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '23';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bzs4fu7kk84h3"></a>bzs4fu7kk84h3</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '21';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f5pbdmj9v6wga"></a>f5pbdmj9v6wga</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '38';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f7xnvp44nukp7"></a>f7xnvp44nukp7</td><td class='awrc'><pre_sqltext class="awr">insert into  wrm$_snapshot_details  (snap_id, dbid, instance_number, table_id, begin_time, end_time, step_id)    values (:snap_id, :dbid, :instance_number, :bind1, :bind2, :bind3, :step_id)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f80h0xb1qvbsk"></a>f80h0xb1qvbsk</td><td class='awrnc'><pre_sqltext class="awr">SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fkc81h2686aqc"></a>fkc81h2686aqc</td><td class='awrc'><pre_sqltext class="awr">select pob.parttype from sys.indpart$ ip,	sys.partobj$ pob  where ip.bo# = pob.obj# and ip.obj# = :oid</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fn5s5p6hr6702"></a>fn5s5p6hr6702</td><td class='awrnc'><pre_sqltext class="awr">INSERT INTO wri$_adv_message_groups (task_id, id, seq, message#, fac, hdr, lm, nl, p1, p2, p3, p4, p5) VALUES (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fs4p95w7yg25b"></a>fs4p95w7yg25b</td><td class='awrc'><pre_sqltext class="awr">select pob.parttype from sys.tabpart$ tp,	sys.partobj$ pob  where tp.bo# = pob.obj# and tp.obj# = :oid</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="g679149chxm60"></a>g679149chxm60</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '6';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="gdjc35y9zsuzm"></a>gdjc35y9zsuzm</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '40';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)
				v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="gjaap3w3qbf8c"></a>gjaap3w3qbf8c</td><td class='awrnc'><pre_sqltext class="awr">select count(*) from ilmobj$ where rownum = 1</pre_sqltext></td></tr>
</table>
<p />
<a class="awr" href="#22">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="23"></a>
<h2 class="awr">
Instance Activity Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1200">Key Instance Activity Stats</a></li>
<li class="awr"><a class="awr" href="#1250">Instance Activity Stats</a></li>
<li class="awr"><a class="awr" href="#1300">Instance Activity Stats - Absolute Values</a></li>
<li class="awr"><a class="awr" href="#1400">Instance Activity Stats - Thread Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1200"></a>
<h3 class="awr">Key Instance Activity Stats</h3>
<ul>
<li class="awr"> Ordered by statistic name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Key Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>1,001,013</td><td align="right" class='awrc'>1,656.14</td><td align="right" class='awrc'>8.19</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>815,374</td><td align="right" class='awrnc'>1,349.01</td><td align="right" class='awrnc'>6.67</td></tr>
<tr><td scope="row" class='awrc'>gc cr block receive time</td><td align="right" class='awrc'>339</td><td align="right" class='awrc'>0.56</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks received</td><td align="right" class='awrnc'>2,788</td><td align="right" class='awrnc'>4.61</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>862</td><td align="right" class='awrc'>1.43</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>11,163</td><td align="right" class='awrnc'>18.47</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>logons cumulative</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>938,527</td><td align="right" class='awrnc'>1,552.76</td><td align="right" class='awrnc'>7.68</td></tr>
<tr><td scope="row" class='awrc'>parse count (total)</td><td align="right" class='awrc'>1,343</td><td align="right" class='awrc'>2.22</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical reads</td><td align="right" class='awrc'>2,350,386</td><td align="right" class='awrc'>3,888.62</td><td align="right" class='awrc'>19.23</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>337,949</td><td align="right" class='awrnc'>559.12</td><td align="right" class='awrnc'>2.76</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>341,556,220</td><td align="right" class='awrc'>565,091.87</td><td align="right" class='awrc'>2,794.17</td></tr>
<tr><td scope="row" class='awrnc'>session cursor cache hits</td><td align="right" class='awrnc'>936,967</td><td align="right" class='awrnc'>1,550.18</td><td align="right" class='awrnc'>7.67</td></tr>
<tr><td scope="row" class='awrc'>session logical reads</td><td align="right" class='awrc'>5,685,015</td><td align="right" class='awrc'>9,405.64</td><td align="right" class='awrc'>46.51</td></tr>
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>181</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>122,239</td><td align="right" class='awrc'>202.24</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>workarea executions - optimal</td><td align="right" class='awrnc'>277</td><td align="right" class='awrnc'>0.46</td><td align="right" class='awrnc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1250"></a>
<h3 class="awr">Instance Activity Stats</h3>
<ul>
<li class="awr"> Ordered by statistic name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Instance activity statistics. For each instance, activity total, activity per second, and activity per transaction are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>544</td><td align="right" class='awrnc'>0.90</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>126</td><td align="right" class='awrc'>0.21</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>426</td><td align="right" class='awrnc'>0.70</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>110</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search all</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search hint</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search steal</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:bump HWM</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free block</td><td align="right" class='awrc'>418</td><td align="right" class='awrc'>0.69</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free data block</td><td align="right" class='awrnc'>336</td><td align="right" class='awrnc'>0.56</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free index block</td><td align="right" class='awrc'>82</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:good hint</td><td align="right" class='awrnc'>312</td><td align="right" class='awrnc'>0.52</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM rsv:fill reserve</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM wasted db state change</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO (bound) vector count</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO block miss count</td><td align="right" class='awrnc'>660,720</td><td align="right" class='awrnc'>1,093.14</td><td align="right" class='awrnc'>5.41</td></tr>
<tr><td scope="row" class='awrc'>Batched IO buffer defrag count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO double miss count</td><td align="right" class='awrnc'>660,674</td><td align="right" class='awrnc'>1,093.06</td><td align="right" class='awrnc'>5.40</td></tr>
<tr><td scope="row" class='awrc'>Batched IO same unit count</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO single block count</td><td align="right" class='awrnc'>660,681</td><td align="right" class='awrnc'>1,093.07</td><td align="right" class='awrnc'>5.40</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector block count</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector read count</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Block Cleanout Optim referenced</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>CCursor + sql area evicted</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>CPU used by this session</td><td align="right" class='awrc'>133,775</td><td align="right" class='awrc'>221.33</td><td align="right" class='awrc'>1.09</td></tr>
<tr><td scope="row" class='awrnc'>CPU used when call started</td><td align="right" class='awrnc'>98,592</td><td align="right" class='awrnc'>163.12</td><td align="right" class='awrnc'>0.81</td></tr>
<tr><td scope="row" class='awrc'>CR blocks created</td><td align="right" class='awrc'>522</td><td align="right" class='awrc'>0.86</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Cached Commit SCN referenced</td><td align="right" class='awrnc'>1,766,229</td><td align="right" class='awrnc'>2,922.16</td><td align="right" class='awrnc'>14.45</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Receive Window</td><td align="right" class='awrc'>140</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Send Window</td><td align="right" class='awrnc'>140</td><td align="right" class='awrnc'>0.23</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrc'>1,310,700</td><td align="right" class='awrc'>2,168.50</td><td align="right" class='awrc'>10.72</td></tr>
<tr><td scope="row" class='awrnc'>Client Send Congestion Window</td><td align="right" class='awrnc'>200</td><td align="right" class='awrnc'>0.33</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Received</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrc'>56</td><td align="right" class='awrc'>0.09</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrnc'>45,437</td><td align="right" class='awrnc'>75.17</td><td align="right" class='awrnc'>0.37</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrc'>52,787</td><td align="right" class='awrc'>87.33</td><td align="right" class='awrc'>0.43</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Acked</td><td align="right" class='awrnc'>305,068</td><td align="right" class='awrnc'>504.72</td><td align="right" class='awrnc'>2.50</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Received</td><td align="right" class='awrc'>121,152</td><td align="right" class='awrc'>200.44</td><td align="right" class='awrc'>0.99</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Number of Retransmitted Packets</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Commit SCN cached</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoint buffers written</td><td align="right" class='awrnc'>21,459</td><td align="right" class='awrnc'>35.50</td><td align="right" class='awrnc'>0.18</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoints</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR fusion writes</td><td align="right" class='awrnc'>51</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR object drop buffers written</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR thread checkpoint buffers written</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DBWR transaction table writes</td><td align="right" class='awrc'>294</td><td align="right" class='awrc'>0.49</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>DBWR undo block writes</td><td align="right" class='awrnc'>11,641</td><td align="right" class='awrnc'>19.26</td><td align="right" class='awrnc'>0.10</td></tr>
<tr><td scope="row" class='awrc'>DFO trees parallelized</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Effective IO time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>HSC Heap Segment Block Changes</td><td align="right" class='awrc'>367,036</td><td align="right" class='awrc'>607.25</td><td align="right" class='awrc'>3.00</td></tr>
<tr><td scope="row" class='awrnc'>Heap Segment Array Inserts</td><td align="right" class='awrnc'>160</td><td align="right" class='awrnc'>0.26</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Heap Segment Array Updates</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Heatmap Blklevel Flush Task Count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc req</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc space (block)</td><td align="right" class='awrnc'>1,048,576</td><td align="right" class='awrnc'>1,734.83</td><td align="right" class='awrnc'>8.58</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc time (ms)</td><td align="right" class='awrc'>231</td><td align="right" class='awrc'>0.38</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KTFB apply req</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KTFB apply time (ms)</td><td align="right" class='awrc'>861</td><td align="right" class='awrc'>1.42</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free req</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KTFB free space (block)</td><td align="right" class='awrc'>1,296</td><td align="right" class='awrc'>2.14</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free time (ms)</td><td align="right" class='awrnc'>77</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>LOB table id lookup cache misses</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX local messages recv'd</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX local messages sent</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>PX remote messages recv'd</td><td align="right" class='awrnc'>78</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>PX remote messages sent</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Parallel operations not downgraded</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Requests to/from client</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SMON posted for undo segment shrink</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>TBS Extension: tasks created</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>TBS Extension: tasks executed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>active txn count during cleanout</td><td align="right" class='awrnc'>211</td><td align="right" class='awrnc'>0.35</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>background checkpoints completed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>background checkpoints started</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>background timeouts</td><td align="right" class='awrc'>5,373</td><td align="right" class='awrc'>8.89</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>blocks cleaned out using minact</td><td align="right" class='awrnc'>192,496</td><td align="right" class='awrnc'>318.48</td><td align="right" class='awrnc'>1.57</td></tr>
<tr><td scope="row" class='awrc'>branch node splits</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>buffer is not pinned count</td><td align="right" class='awrnc'>4,905,002</td><td align="right" class='awrnc'>8,115.14</td><td align="right" class='awrnc'>40.13</td></tr>
<tr><td scope="row" class='awrc'>buffer is pinned count</td><td align="right" class='awrc'>1,755,904</td><td align="right" class='awrc'>2,905.08</td><td align="right" class='awrc'>14.36</td></tr>
<tr><td scope="row" class='awrnc'>bytes received via SQL*Net from client</td><td align="right" class='awrnc'>22,135</td><td align="right" class='awrnc'>36.62</td><td align="right" class='awrnc'>0.18</td></tr>
<tr><td scope="row" class='awrc'>bytes sent via SQL*Net to client</td><td align="right" class='awrc'>14,532</td><td align="right" class='awrc'>24.04</td><td align="right" class='awrc'>0.12</td></tr>
<tr><td scope="row" class='awrnc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrnc'>938,470</td><td align="right" class='awrnc'>1,552.66</td><td align="right" class='awrnc'>7.68</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgas</td><td align="right" class='awrc'>227,353</td><td align="right" class='awrc'>376.15</td><td align="right" class='awrc'>1.86</td></tr>
<tr><td scope="row" class='awrnc'>calls to kcmgcs</td><td align="right" class='awrnc'>2,683</td><td align="right" class='awrnc'>4.44</td><td align="right" class='awrnc'>0.02</td></tr>
<tr><td scope="row" class='awrc'>cell physical IO interconnect bytes</td><td align="right" class='awrc'>26,336,035,328</td><td align="right" class='awrc'>43,571,976.27</td><td align="right" class='awrc'>215,447.08</td></tr>
<tr><td scope="row" class='awrnc'>change write time</td><td align="right" class='awrnc'>1,705</td><td align="right" class='awrnc'>2.82</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>cleanout - number of ktugct calls</td><td align="right" class='awrc'>1,369</td><td align="right" class='awrc'>2.26</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>cleanouts and rollbacks - consistent read gets</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>cleanouts only - consistent read gets</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>cluster key scan block gets</td><td align="right" class='awrnc'>82</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>cluster key scans</td><td align="right" class='awrc'>78</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit batch/immediate performed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit batch/immediate requested</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: block lost</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: callback failure</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: cannot pin</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit cleanouts</td><td align="right" class='awrc'>367,233</td><td align="right" class='awrc'>607.57</td><td align="right" class='awrc'>3.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanouts successfully completed</td><td align="right" class='awrnc'>367,215</td><td align="right" class='awrnc'>607.54</td><td align="right" class='awrnc'>3.00</td></tr>
<tr><td scope="row" class='awrc'>commit immediate performed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit immediate requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit txn count during cleanout</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>consistent changes</td><td align="right" class='awrnc'>486,460</td><td align="right" class='awrnc'>804.83</td><td align="right" class='awrnc'>3.98</td></tr>
<tr><td scope="row" class='awrc'>consistent gets</td><td align="right" class='awrc'>5,031,294</td><td align="right" class='awrc'>8,324.09</td><td align="right" class='awrc'>41.16</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets examination</td><td align="right" class='awrnc'>2,117,717</td><td align="right" class='awrnc'>3,503.68</td><td align="right" class='awrnc'>17.32</td></tr>
<tr><td scope="row" class='awrc'>consistent gets examination (fastpath)</td><td align="right" class='awrc'>2,117,560</td><td align="right" class='awrc'>3,503.42</td><td align="right" class='awrc'>17.32</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets from cache</td><td align="right" class='awrnc'>5,031,294</td><td align="right" class='awrnc'>8,324.09</td><td align="right" class='awrnc'>41.16</td></tr>
<tr><td scope="row" class='awrc'>consistent gets pin</td><td align="right" class='awrc'>2,913,577</td><td align="right" class='awrc'>4,820.40</td><td align="right" class='awrc'>23.84</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets pin (fastpath)</td><td align="right" class='awrnc'>902,927</td><td align="right" class='awrnc'>1,493.86</td><td align="right" class='awrnc'>7.39</td></tr>
<tr><td scope="row" class='awrc'>cursor authentications</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>cursor reload failures</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrc'>48</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>db block changes</td><td align="right" class='awrnc'>1,001,013</td><td align="right" class='awrnc'>1,656.14</td><td align="right" class='awrnc'>8.19</td></tr>
<tr><td scope="row" class='awrc'>db block gets</td><td align="right" class='awrc'>653,704</td><td align="right" class='awrc'>1,081.53</td><td align="right" class='awrc'>5.35</td></tr>
<tr><td scope="row" class='awrnc'>db block gets direct</td><td align="right" class='awrnc'>62</td><td align="right" class='awrnc'>0.10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>db block gets from cache</td><td align="right" class='awrc'>653,642</td><td align="right" class='awrc'>1,081.43</td><td align="right" class='awrc'>5.35</td></tr>
<tr><td scope="row" class='awrnc'>db block gets from cache (fastpath)</td><td align="right" class='awrnc'>267,899</td><td align="right" class='awrnc'>443.23</td><td align="right" class='awrnc'>2.19</td></tr>
<tr><td scope="row" class='awrc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrc'>193,345</td><td align="right" class='awrc'>319.88</td><td align="right" class='awrc'>1.58</td></tr>
<tr><td scope="row" class='awrnc'>dirty buffers inspected</td><td align="right" class='awrnc'>292,580</td><td align="right" class='awrnc'>484.06</td><td align="right" class='awrnc'>2.39</td></tr>
<tr><td scope="row" class='awrc'>enqueue conversions</td><td align="right" class='awrc'>289</td><td align="right" class='awrc'>0.48</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>enqueue releases</td><td align="right" class='awrnc'>253,017</td><td align="right" class='awrnc'>418.61</td><td align="right" class='awrnc'>2.07</td></tr>
<tr><td scope="row" class='awrc'>enqueue requests</td><td align="right" class='awrc'>253,010</td><td align="right" class='awrc'>418.60</td><td align="right" class='awrc'>2.07</td></tr>
<tr><td scope="row" class='awrnc'>enqueue timeouts</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>enqueue waits</td><td align="right" class='awrc'>217</td><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>exchange deadlocks</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>execute count</td><td align="right" class='awrc'>815,374</td><td align="right" class='awrc'>1,349.01</td><td align="right" class='awrc'>6.67</td></tr>
<tr><td scope="row" class='awrnc'>fastpath consistent get quota limit</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>file io service time</td><td align="right" class='awrc'>345,952,790</td><td align="right" class='awrc'>572,365.83</td><td align="right" class='awrc'>2,830.13</td></tr>
<tr><td scope="row" class='awrnc'>free buffer inspected</td><td align="right" class='awrnc'>2,385,579</td><td align="right" class='awrnc'>3,946.85</td><td align="right" class='awrnc'>19.52</td></tr>
<tr><td scope="row" class='awrc'>free buffer requested</td><td align="right" class='awrc'>2,371,388</td><td align="right" class='awrc'>3,923.37</td><td align="right" class='awrc'>19.40</td></tr>
<tr><td scope="row" class='awrnc'>gc blocks compressed</td><td align="right" class='awrnc'>14,191</td><td align="right" class='awrnc'>23.48</td><td align="right" class='awrnc'>0.12</td></tr>
<tr><td scope="row" class='awrc'>gc blocks lost</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cleanout applied</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cleanout saved</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks created</td><td align="right" class='awrnc'>31,162</td><td align="right" class='awrnc'>51.56</td><td align="right" class='awrnc'>0.25</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks shrunk</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block build time</td><td align="right" class='awrnc'>150</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr block flush time</td><td align="right" class='awrc'>24</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block receive time</td><td align="right" class='awrnc'>339</td><td align="right" class='awrnc'>0.56</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks built</td><td align="right" class='awrc'>2,769</td><td align="right" class='awrc'>4.58</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks flushed</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks received</td><td align="right" class='awrc'>2,788</td><td align="right" class='awrc'>4.61</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks served</td><td align="right" class='awrnc'>4,260</td><td align="right" class='awrnc'>7.05</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grant time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc cr multiblock grants received</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block flush time</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block pin time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>862</td><td align="right" class='awrc'>1.43</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks flushed</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks pinned</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>11,163</td><td align="right" class='awrnc'>18.47</td><td align="right" class='awrnc'>0.09</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks served</td><td align="right" class='awrc'>12,804</td><td align="right" class='awrc'>21.18</td><td align="right" class='awrc'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>gc force cr read cr</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc force cr read current</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes saved</td><td align="right" class='awrnc'>60,002</td><td align="right" class='awrnc'>99.27</td><td align="right" class='awrnc'>0.49</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes sent</td><td align="right" class='awrc'>76,510</td><td align="right" class='awrc'>126.58</td><td align="right" class='awrc'>0.63</td></tr>
<tr><td scope="row" class='awrnc'>gc local grants</td><td align="right" class='awrnc'>1,211,467</td><td align="right" class='awrnc'>2,004.33</td><td align="right" class='awrnc'>9.91</td></tr>
<tr><td scope="row" class='awrc'>gc merge pi bg</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc merge pi fg</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc no change made</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc read time waited</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc read waits</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass grants</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass waits</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc remote grants</td><td align="right" class='awrnc'>1,155,964</td><td align="right" class='awrnc'>1,912.50</td><td align="right" class='awrnc'>9.46</td></tr>
<tr><td scope="row" class='awrc'>gc status messages received</td><td align="right" class='awrc'>1,134,970</td><td align="right" class='awrc'>1,877.77</td><td align="right" class='awrc'>9.28</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages sent</td><td align="right" class='awrnc'>1,122,272</td><td align="right" class='awrnc'>1,856.76</td><td align="right" class='awrnc'>9.18</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity lock grants</td><td align="right" class='awrc'>6,483</td><td align="right" class='awrc'>10.73</td><td align="right" class='awrc'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>gcs anti-locks created</td><td align="right" class='awrnc'>31,142</td><td align="right" class='awrnc'>51.52</td><td align="right" class='awrnc'>0.25</td></tr>
<tr><td scope="row" class='awrc'>gcs data block access record drops</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs data block access records</td><td align="right" class='awrnc'>2,365,026</td><td align="right" class='awrnc'>3,912.85</td><td align="right" class='awrnc'>19.35</td></tr>
<tr><td scope="row" class='awrc'>gcs messages sent</td><td align="right" class='awrc'>2,700,761</td><td align="right" class='awrc'>4,468.31</td><td align="right" class='awrc'>22.09</td></tr>
<tr><td scope="row" class='awrnc'>gcs read-mostly lock failures</td><td align="right" class='awrnc'>20,199</td><td align="right" class='awrnc'>33.42</td><td align="right" class='awrnc'>0.17</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly lock grants</td><td align="right" class='awrc'>114,096</td><td align="right" class='awrc'>188.77</td><td align="right" class='awrc'>0.93</td></tr>
<tr><td scope="row" class='awrnc'>gcs stats management (SCM) process posts</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges messages sent</td><td align="right" class='awrc'>1,451</td><td align="right" class='awrc'>2.40</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue get time</td><td align="right" class='awrnc'>579</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global enqueue gets async</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue gets sync</td><td align="right" class='awrnc'>127,588</td><td align="right" class='awrnc'>211.09</td><td align="right" class='awrnc'>1.04</td></tr>
<tr><td scope="row" class='awrc'>global enqueue releases</td><td align="right" class='awrc'>127,484</td><td align="right" class='awrc'>210.92</td><td align="right" class='awrc'>1.04</td></tr>
<tr><td scope="row" class='awrnc'>heap block compress</td><td align="right" class='awrnc'>9,027</td><td align="right" class='awrnc'>14.93</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>hot buffers moved to head of LRU</td><td align="right" class='awrc'>76,199</td><td align="right" class='awrc'>126.07</td><td align="right" class='awrc'>0.62</td></tr>
<tr><td scope="row" class='awrnc'>immediate (CR) block cleanout applications</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrc'>244</td><td align="right" class='awrc'>0.40</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>index crx upgrade (positioned)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>index fast full scans (full)</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>index fetch by key</td><td align="right" class='awrnc'>1,175</td><td align="right" class='awrnc'>1.94</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>index range scans</td><td align="right" class='awrc'>814,352</td><td align="right" class='awrc'>1,347.31</td><td align="right" class='awrc'>6.66</td></tr>
<tr><td scope="row" class='awrnc'>leaf node 90-10 splits</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>leaf node splits</td><td align="right" class='awrc'>79</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>lob reads</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>lob writes</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>lob writes unaligned</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>logical read bytes from cache</td><td align="right" class='awrc'>46,570,995,712</td><td align="right" class='awrc'>77,049,954.36</td><td align="right" class='awrc'>380,983.12</td></tr>
<tr><td scope="row" class='awrnc'>logons cumulative</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>max cf enq hold time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>messages received</td><td align="right" class='awrnc'>129,904</td><td align="right" class='awrnc'>214.92</td><td align="right" class='awrnc'>1.06</td></tr>
<tr><td scope="row" class='awrc'>messages sent</td><td align="right" class='awrc'>129,904</td><td align="right" class='awrc'>214.92</td><td align="right" class='awrc'>1.06</td></tr>
<tr><td scope="row" class='awrnc'>no work - consistent read gets</td><td align="right" class='awrnc'>2,907,855</td><td align="right" class='awrnc'>4,810.94</td><td align="right" class='awrnc'>23.79</td></tr>
<tr><td scope="row" class='awrc'>non-idle wait count</td><td align="right" class='awrc'>5,042,735</td><td align="right" class='awrc'>8,343.01</td><td align="right" class='awrc'>41.25</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors cumulative</td><td align="right" class='awrnc'>938,527</td><td align="right" class='awrnc'>1,552.76</td><td align="right" class='awrnc'>7.68</td></tr>
<tr><td scope="row" class='awrc'>parse count (describe)</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse count (failures)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>parse count (hard)</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse count (total)</td><td align="right" class='awrnc'>1,343</td><td align="right" class='awrnc'>2.22</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>parse time cpu</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical read IO requests</td><td align="right" class='awrc'>2,350,386</td><td align="right" class='awrc'>3,888.62</td><td align="right" class='awrc'>19.23</td></tr>
<tr><td scope="row" class='awrnc'>physical read bytes</td><td align="right" class='awrnc'>19,254,362,112</td><td align="right" class='awrnc'>31,855,615.26</td><td align="right" class='awrnc'>157,514.07</td></tr>
<tr><td scope="row" class='awrc'>physical read total IO requests</td><td align="right" class='awrc'>2,354,218</td><td align="right" class='awrc'>3,894.96</td><td align="right" class='awrc'>19.26</td></tr>
<tr><td scope="row" class='awrnc'>physical read total bytes</td><td align="right" class='awrnc'>20,016,861,696</td><td align="right" class='awrnc'>33,117,142.04</td><td align="right" class='awrnc'>163,751.84</td></tr>
<tr><td scope="row" class='awrc'>physical read total multi block requests</td><td align="right" class='awrc'>685</td><td align="right" class='awrc'>1.13</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical reads</td><td align="right" class='awrnc'>2,350,386</td><td align="right" class='awrnc'>3,888.62</td><td align="right" class='awrnc'>19.23</td></tr>
<tr><td scope="row" class='awrc'>physical reads cache</td><td align="right" class='awrc'>2,350,386</td><td align="right" class='awrc'>3,888.62</td><td align="right" class='awrc'>19.23</td></tr>
<tr><td scope="row" class='awrnc'>physical reads cache prefetch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical reads direct</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical reads direct (lob)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical reads direct temporary tablespace</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical reads prefetch warmup</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical write IO requests</td><td align="right" class='awrc'>324,628</td><td align="right" class='awrc'>537.08</td><td align="right" class='awrc'>2.66</td></tr>
<tr><td scope="row" class='awrnc'>physical write bytes</td><td align="right" class='awrnc'>2,768,478,208</td><td align="right" class='awrnc'>4,580,342.69</td><td align="right" class='awrnc'>22,648.08</td></tr>
<tr><td scope="row" class='awrc'>physical write total IO requests</td><td align="right" class='awrc'>429,097</td><td align="right" class='awrc'>709.92</td><td align="right" class='awrc'>3.51</td></tr>
<tr><td scope="row" class='awrnc'>physical write total bytes</td><td align="right" class='awrnc'>3,154,982,912</td><td align="right" class='awrnc'>5,219,800.13</td><td align="right" class='awrnc'>25,809.95</td></tr>
<tr><td scope="row" class='awrc'>physical write total multi block requests</td><td align="right" class='awrc'>666</td><td align="right" class='awrc'>1.10</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>337,949</td><td align="right" class='awrnc'>559.12</td><td align="right" class='awrnc'>2.76</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct (lob)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct temporary tablespace</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>physical writes from cache</td><td align="right" class='awrnc'>337,887</td><td align="right" class='awrnc'>559.02</td><td align="right" class='awrnc'>2.76</td></tr>
<tr><td scope="row" class='awrc'>physical writes non checkpoint</td><td align="right" class='awrc'>331,197</td><td align="right" class='awrc'>547.95</td><td align="right" class='awrc'>2.71</td></tr>
<tr><td scope="row" class='awrnc'>pinned buffers inspected</td><td align="right" class='awrnc'>373</td><td align="right" class='awrnc'>0.62</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>prefetch warmup blocks aged out before use</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>prefetched blocks aged out before use</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>process last non-idle time</td><td align="right" class='awrc'>605</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>recursive calls</td><td align="right" class='awrnc'>1,072,621</td><td align="right" class='awrnc'>1,774.61</td><td align="right" class='awrnc'>8.77</td></tr>
<tr><td scope="row" class='awrc'>recursive cpu usage</td><td align="right" class='awrc'>125,575</td><td align="right" class='awrc'>207.76</td><td align="right" class='awrc'>1.03</td></tr>
<tr><td scope="row" class='awrnc'>redo KB read</td><td align="right" class='awrnc'>417,212</td><td align="right" class='awrnc'>690.26</td><td align="right" class='awrnc'>3.41</td></tr>
<tr><td scope="row" class='awrc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrc'>229,721</td><td align="right" class='awrc'>380.06</td><td align="right" class='awrc'>1.88</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written</td><td align="right" class='awrnc'>736,842</td><td align="right" class='awrnc'>1,219.08</td><td align="right" class='awrnc'>6.03</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written (group 0)</td><td align="right" class='awrc'>485,230</td><td align="right" class='awrc'>802.79</td><td align="right" class='awrc'>3.97</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written (group 1)</td><td align="right" class='awrnc'>251,612</td><td align="right" class='awrnc'>416.28</td><td align="right" class='awrnc'>2.06</td></tr>
<tr><td scope="row" class='awrc'>redo buffer allocation retries</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo entries</td><td align="right" class='awrnc'>520,380</td><td align="right" class='awrnc'>860.95</td><td align="right" class='awrnc'>4.26</td></tr>
<tr><td scope="row" class='awrc'>redo log space requests</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo size</td><td align="right" class='awrnc'>341,556,220</td><td align="right" class='awrnc'>565,091.87</td><td align="right" class='awrnc'>2,794.17</td></tr>
<tr><td scope="row" class='awrc'>redo size for direct writes</td><td align="right" class='awrc'>120</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo subscn max counts</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time (usec)</td><td align="right" class='awrnc'>33,693</td><td align="right" class='awrnc'>55.74</td><td align="right" class='awrnc'>0.28</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead (usec)</td><td align="right" class='awrc'>3,183</td><td align="right" class='awrc'>5.27</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead count (  8ms)</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo synch writes</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo wastage</td><td align="right" class='awrc'>23,763,852</td><td align="right" class='awrc'>39,316.40</td><td align="right" class='awrc'>194.40</td></tr>
<tr><td scope="row" class='awrnc'>redo write active strands</td><td align="right" class='awrnc'>103,869</td><td align="right" class='awrnc'>171.85</td><td align="right" class='awrnc'>0.85</td></tr>
<tr><td scope="row" class='awrc'>redo write broadcast ack count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write broadcast ack time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write finish time</td><td align="right" class='awrc'>602,803,828</td><td align="right" class='awrc'>997,316.18</td><td align="right" class='awrc'>4,931.35</td></tr>
<tr><td scope="row" class='awrnc'>redo write gather time</td><td align="right" class='awrnc'>36,610,443</td><td align="right" class='awrnc'>60,570.60</td><td align="right" class='awrnc'>299.50</td></tr>
<tr><td scope="row" class='awrc'>redo write info find</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write schedule time</td><td align="right" class='awrnc'>38,018,984</td><td align="right" class='awrnc'>62,900.97</td><td align="right" class='awrnc'>311.02</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (   4KB)</td><td align="right" class='awrc'>59,765</td><td align="right" class='awrc'>98.88</td><td align="right" class='awrc'>0.49</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (   8KB)</td><td align="right" class='awrnc'>36,780</td><td align="right" class='awrnc'>60.85</td><td align="right" class='awrnc'>0.30</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (  16KB)</td><td align="right" class='awrc'>3,399</td><td align="right" class='awrc'>5.62</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (  32KB)</td><td align="right" class='awrnc'>676</td><td align="right" class='awrnc'>1.12</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 128KB)</td><td align="right" class='awrc'>169</td><td align="right" class='awrc'>0.28</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 256KB)</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 512KB)</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (1024KB)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write time</td><td align="right" class='awrc'>60,699</td><td align="right" class='awrc'>100.42</td><td align="right" class='awrc'>0.50</td></tr>
<tr><td scope="row" class='awrnc'>redo write time (usec)</td><td align="right" class='awrnc'>606,979,207</td><td align="right" class='awrnc'>1,004,224.18</td><td align="right" class='awrnc'>4,965.51</td></tr>
<tr><td scope="row" class='awrc'>redo write total time</td><td align="right" class='awrc'>630,687,180</td><td align="right" class='awrc'>1,043,448.13</td><td align="right" class='awrc'>5,159.46</td></tr>
<tr><td scope="row" class='awrnc'>redo write worker delay (usec)</td><td align="right" class='awrnc'>27,207,258</td><td align="right" class='awrnc'>45,013.38</td><td align="right" class='awrnc'>222.57</td></tr>
<tr><td scope="row" class='awrc'>redo write worker delay count</td><td align="right" class='awrc'>100,794</td><td align="right" class='awrc'>166.76</td><td align="right" class='awrc'>0.82</td></tr>
<tr><td scope="row" class='awrnc'>redo writes</td><td align="right" class='awrnc'>100,794</td><td align="right" class='awrnc'>166.76</td><td align="right" class='awrnc'>0.82</td></tr>
<tr><td scope="row" class='awrc'>redo writes (group 0)</td><td align="right" class='awrc'>59,577</td><td align="right" class='awrc'>98.57</td><td align="right" class='awrc'>0.49</td></tr>
<tr><td scope="row" class='awrnc'>redo writes (group 1)</td><td align="right" class='awrnc'>41,217</td><td align="right" class='awrnc'>68.19</td><td align="right" class='awrnc'>0.34</td></tr>
<tr><td scope="row" class='awrc'>redo writes adaptive all</td><td align="right" class='awrc'>100,794</td><td align="right" class='awrc'>166.76</td><td align="right" class='awrc'>0.82</td></tr>
<tr><td scope="row" class='awrnc'>redo writes adaptive worker</td><td align="right" class='awrnc'>100,794</td><td align="right" class='awrnc'>166.76</td><td align="right" class='awrnc'>0.82</td></tr>
<tr><td scope="row" class='awrc'>rollback changes - undo records applied</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>rollbacks only - consistent read gets</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>rows fetched via callback</td><td align="right" class='awrc'>539</td><td align="right" class='awrc'>0.89</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>saved cleanouts</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>saved cleanouts successfully completed</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile allocation bytes</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile allocation chunks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile bytes non-transformed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile direct read bytes</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct read ops</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile direct write bytes</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct write ops</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>securefile number of non-transformed flushes</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment cfs allocations</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment chunks allocation from dispenser</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser allocations</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment dispenser load empty</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment dispenser load tasks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc ops</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc tasks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc time (ms)</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>session connect time</td><td align="right" class='awrnc'>642</td><td align="right" class='awrnc'>1.06</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache hits</td><td align="right" class='awrc'>936,967</td><td align="right" class='awrc'>1,550.18</td><td align="right" class='awrc'>7.67</td></tr>
<tr><td scope="row" class='awrnc'>session logical reads</td><td align="right" class='awrnc'>5,685,015</td><td align="right" class='awrnc'>9,405.64</td><td align="right" class='awrnc'>46.51</td></tr>
<tr><td scope="row" class='awrc'>shared hash latch upgrades - no wait</td><td align="right" class='awrc'>918,167</td><td align="right" class='awrc'>1,519.07</td><td align="right" class='awrc'>7.51</td></tr>
<tr><td scope="row" class='awrnc'>shared hash latch upgrades - wait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>shared io pool buffer get success</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>sorts (memory)</td><td align="right" class='awrnc'>154</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>sorts (rows)</td><td align="right" class='awrc'>27,707</td><td align="right" class='awrc'>45.84</td><td align="right" class='awrc'>0.23</td></tr>
<tr><td scope="row" class='awrnc'>sql area evicted</td><td align="right" class='awrnc'>45</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>sql area purged</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>summed dirty queue length</td><td align="right" class='awrnc'>1,561,449</td><td align="right" class='awrnc'>2,583.36</td><td align="right" class='awrnc'>12.77</td></tr>
<tr><td scope="row" class='awrc'>switch current caused by our pin</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>switch current to new buffer</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>table fetch by rowid</td><td align="right" class='awrc'>2,739,697</td><td align="right" class='awrc'>4,532.73</td><td align="right" class='awrc'>22.41</td></tr>
<tr><td scope="row" class='awrnc'>table fetch continued row</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>table scan blocks gotten</td><td align="right" class='awrc'>4,246</td><td align="right" class='awrc'>7.02</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrnc'>245,112</td><td align="right" class='awrnc'>405.53</td><td align="right" class='awrnc'>2.01</td></tr>
<tr><td scope="row" class='awrc'>table scan rows gotten</td><td align="right" class='awrc'>245,112</td><td align="right" class='awrc'>405.53</td><td align="right" class='awrc'>2.01</td></tr>
<tr><td scope="row" class='awrnc'>table scans (short tables)</td><td align="right" class='awrnc'>110</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>temp space allocated (bytes)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>total cf enq hold time</td><td align="right" class='awrnc'>1,444</td><td align="right" class='awrnc'>2.39</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>total number of cf enq holders</td><td align="right" class='awrc'>155</td><td align="right" class='awrc'>0.26</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>total number of times SMON posted</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction lock background get time</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction lock background gets</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction lock foreground requests</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction rollbacks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>transaction tables consistent read rollbacks</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>transaction tables consistent reads - undo records applied</td><td align="right" class='awrnc'>486,299</td><td align="right" class='awrnc'>804.56</td><td align="right" class='awrnc'>3.98</td></tr>
<tr><td scope="row" class='awrc'>undo change vector size</td><td align="right" class='awrc'>134,434,172</td><td align="right" class='awrc'>222,416.26</td><td align="right" class='awrc'>1,099.76</td></tr>
<tr><td scope="row" class='awrnc'>user calls</td><td align="right" class='awrnc'>181</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>user commits</td><td align="right" class='awrc'>122,239</td><td align="right" class='awrc'>202.24</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>user logons cumulative</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>user logouts cumulative</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>workarea executions - optimal</td><td align="right" class='awrnc'>277</td><td align="right" class='awrnc'>0.46</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>write clones created in foreground</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1300"></a>
<h3 class="awr">Instance Activity Stats - Absolute Values</h3>
<ul>
<li class="awr"> Statistics with absolute values (should not be diffed)</li>
</ul>
<table border="0" class="tdiff" summary="This table displays absolute values of instance-related features. For each instance, activity begin value and end value are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Begin Value</th><th class="awrbg" scope="col">End Value</th></tr>
<tr><td scope="row" class='awrc'>logons current</td><td align="right" class='awrc'>108</td><td align="right" class='awrc'>90</td></tr>
<tr><td scope="row" class='awrnc'>opened cursors current</td><td align="right" class='awrnc'>157</td><td align="right" class='awrnc'>79</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache count</td><td align="right" class='awrc'>4,293</td><td align="right" class='awrc'>4,256</td></tr>
<tr><td scope="row" class='awrnc'>session pga memory</td><td align="right" class='awrnc'>586,862,392</td><td align="right" class='awrnc'>483,335,944</td></tr>
<tr><td scope="row" class='awrc'>session pga memory max</td><td align="right" class='awrc'>709,385,976</td><td align="right" class='awrc'>607,284,264</td></tr>
<tr><td scope="row" class='awrnc'>session uga memory</td><td align="right" class='awrnc'>311,228,128</td><td align="right" class='awrnc'>266,516,536</td></tr>
<tr><td scope="row" class='awrc'>session uga memory max</td><td align="right" class='awrc'>2,501,387,944</td><td align="right" class='awrc'>2,598,516,560</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1400"></a>
<h3 class="awr">Instance Activity Stats - Thread Activity</h3>
<ul>
<li class="awr"> Statistics identified by '(derived)' come from sources other than SYSSTAT</li>
</ul>
<table border="0" class="tdiff" summary="This table displays thread activity stats in the instance. For each activity , total number of activity and activity per hour are displayed"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Hour</th></tr>
<tr><td scope="row" class='awrc'>log switches (derived)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#23">Back to Instance Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="24"></a>
<h2 class="awr">
IO Stats
</h2>
<ul>
<li class="awr"><a class="awr" href="#8760">IOStat by Function summary</a></li>
<li class="awr"><a class="awr" href="#8770">IOStat by Filetype summary</a></li>
<li class="awr"><a class="awr" href="#8780">IOStat by Function/Filetype summary</a></li>
<li class="awr"><a class="awr" href="#1700">Tablespace IO Stats</a></li>
<li class="awr"><a class="awr" href="#1800">File IO Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8760"></a>
<h3 class="awr">IOStat by Function summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the IO Statistics for different functions. IO stats includes amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td scope="row" class='awrc'>Buffer Cache Reads</td><td align="right" class='awrc'>17.9G</td><td align="right" class='awrc'>3872.18</td><td align="right" class='awrc'>30.257M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2.3M</td><td align="right" class='awrc'>4.05ms</td></tr>
<tr><td scope="row" class='awrnc'>DBWR</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2.6G</td><td align="right" class='awrnc'>537.10</td><td align="right" class='awrnc'>4.366M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Others</td><td align="right" class='awrc'>726M</td><td align="right" class='awrc'>6.31</td><td align="right" class='awrc'>1.201M</td><td align="right" class='awrc'>10M</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>.017M</td><td align="right" class='awrc'>2553</td><td align="right" class='awrc'>1.49ms</td></tr>
<tr><td scope="row" class='awrnc'>LGWR</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>359M</td><td align="right" class='awrnc'>171.43</td><td align="right" class='awrnc'>.594M</td><td align="right" class='awrnc'>100.5K</td><td align="right" class='awrnc'>5.58ms</td></tr>
<tr><td scope="row" class='awrc'>TOTAL:</td><td align="right" class='awrc'>18.6G</td><td align="right" class='awrc'>3878.49</td><td align="right" class='awrc'>31.458M</td><td align="right" class='awrc'>2.9G</td><td align="right" class='awrc'>709.46</td><td align="right" class='awrc'>4.977M</td><td align="right" class='awrc'>2.4M</td><td align="right" class='awrc'>4.11ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8770"></a>
<h3 class="awr">IOStat by Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Small Read and Large Read are average service times </li>
<li class="awr"> Ordered by (Data Read + Write) desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IO Statistics for different file types, such as data files, control files, log files and temp files. IO Statistics include amount of reads and writes, requests per second, data per second, wait count and average wait time"><tr><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Small Read</th><th class="awrbg" scope="col">Large Read</th></tr>
<tr><td scope="row" class='awrc'>Data File</td><td align="right" class='awrc'>17.9G</td><td align="right" class='awrc'>3873.46</td><td align="right" class='awrc'>30.263M</td><td align="right" class='awrc'>2.6G</td><td align="right" class='awrc'>537.11</td><td align="right" class='awrc'>4.371M</td><td align="right" class='awrc'>3.56ms</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Log File</td><td align="right" class='awrnc'>679M</td><td align="right" class='awrnc'>1.28</td><td align="right" class='awrnc'>1.123M</td><td align="right" class='awrnc'>359M</td><td align="right" class='awrnc'>171.41</td><td align="right" class='awrnc'>.594M</td><td align="right" class='awrnc'>206.90us</td><td align="right" class='awrnc'>1388.60ms</td></tr>
<tr><td scope="row" class='awrc'>Control File</td><td align="right" class='awrc'>47M</td><td align="right" class='awrc'>5.02</td><td align="right" class='awrc'>.078M</td><td align="right" class='awrc'>8M</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>.013M</td><td align="right" class='awrc'>38.23us</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TOTAL:</td><td align="right" class='awrnc'>18.6G</td><td align="right" class='awrnc'>3879.76</td><td align="right" class='awrnc'>31.465M</td><td align="right" class='awrnc'>2.9G</td><td align="right" class='awrnc'>709.44</td><td align="right" class='awrnc'>4.978M</td><td align="right" class='awrnc'>3.55ms</td><td align="right" class='awrnc'>1388.60ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8780"></a>
<h3 class="awr">IOStat by Function/Filetype summary</h3>
<ul>
<li class="awr"> 'Data' columns suffixed with M,G,T,P are in multiples of 1024	   other columns suffixed with K,M,G,T,P are in multiples of 1000 </li>
<li class="awr"> Ordered by (Data Read + Write) desc for each function</li>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function/Filetype summary. . 'Data' columns suffixed with M,G,T,P are in multiples of 1024 other columns suffixed with K,M,G,T,P are in multiples of 1000. Ordered by (Data Read + Write) desc for each function"><tr><th class="awrbg" scope="col">Function/File Name</th><th class="awrbg" scope="col">Reads: Data</th><th class="awrbg" scope="col">Reqs	 per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Writes: Data</th><th class="awrbg" scope="col">Reqs   per sec</th><th class="awrbg" scope="col">Data   per sec</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time	</th></tr>
<tr><td scope="row" class='awrc'>
 Buffer Cache Reads (Data File)
</td><td align="right" class='awrc'>17.9G</td><td align="right" class='awrc'>3872.01</td><td align="right" class='awrc'>30.257M</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2.3M</td><td align="right" class='awrc'>4.05ms</td></tr>
<tr><td scope="row" class='awrnc'>
Buffer Cache Reads
</td><td align="right" class='awrnc'>17.9G</td><td align="right" class='awrnc'>3872.01</td><td align="right" class='awrnc'>30.257M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2.3M</td><td align="right" class='awrnc'>4.05ms</td></tr>
<tr><td scope="row" class='awrc'>
 DBWR (Data File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>2.6G</td><td align="right" class='awrc'>537.10</td><td align="right" class='awrc'>4.366M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
DBWR
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>2.6G</td><td align="right" class='awrnc'>537.10</td><td align="right" class='awrnc'>4.366M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
Others
</td><td align="right" class='awrc'>726M</td><td align="right" class='awrc'>6.31</td><td align="right" class='awrc'>1.201M</td><td align="right" class='awrc'>10M</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>.017M</td><td align="right" class='awrc'>2273</td><td align="right" class='awrc'>387.51us</td></tr>
<tr><td scope="row" class='awrnc'>
 Others (Log File)
</td><td align="right" class='awrnc'>679M</td><td align="right" class='awrnc'>1.28</td><td align="right" class='awrnc'>1.123M</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>69</td><td align="right" class='awrnc'>565.22us</td></tr>
<tr><td scope="row" class='awrc'>
 Others (Control File)
</td><td align="right" class='awrc'>47M</td><td align="right" class='awrc'>5.02</td><td align="right" class='awrc'>.078M</td><td align="right" class='awrc'>9M</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>.015M</td><td align="right" class='awrc'>2196</td><td align="right" class='awrc'>381.79us</td></tr>
<tr><td scope="row" class='awrnc'>
 Others (Data File)
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>1M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>.002M</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>425.38us</td></tr>
<tr><td scope="row" class='awrc'>
 LGWR (Log File)
</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0M</td><td align="right" class='awrc'>359M</td><td align="right" class='awrc'>171.42</td><td align="right" class='awrc'>.594M</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>
LGWR
</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0M</td><td align="right" class='awrnc'>359M</td><td align="right" class='awrnc'>171.42</td><td align="right" class='awrnc'>.594M</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>
TOTAL:
</td><td align="right" class='awrc'>18.6G</td><td align="right" class='awrc'>3878.32</td><td align="right" class='awrc'>31.458M</td><td align="right" class='awrc'>2.9G</td><td align="right" class='awrc'>709.45</td><td align="right" class='awrc'>4.977M</td><td align="right" class='awrc'>2.3M</td><td align="right" class='awrc'>4.05ms</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1700"></a>
<h3 class="awr">Tablespace IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1800"></a>
<h3 class="awr">File IO Stats</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#24">Back to IO Stats</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="25"></a>
<h2 class="awr">
Buffer Pool Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#1900">Buffer Pool Statistics</a></li>
<li class="awr"><a class="awr" href="#1910">Checkpoint Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1900"></a>
<h3 class="awr">Buffer Pool Statistics</h3>
<ul>
<li class="awr"> Standard block size Pools  D: default,  K: keep,  R: recycle </li>
<li class="awr"> Default Pools for other block sizes: 2k, 4k, 8k, 16k, 32k</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer pool statistics for different types of buffers, such as default, keep, and recycle. Statistics include number of buffers, % Pool hit, buffer gets, physical reads, physical writes, free buffer wait, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Number of Buffers</th><th class="awrbg" scope="col">Pool Hit%</th><th class="awrbg" scope="col">Buffer Gets</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Free Buff Wait</th><th class="awrbg" scope="col">Writ Comp Wait</th><th class="awrbg" scope="col">Buffer Busy Waits</th></tr>
<tr><td scope="row" class='awrc'>D</td><td align="right" class='awrc'>932,000</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>5,686,866</td><td align="right" class='awrc'>2,351,369</td><td align="right" class='awrc'>337,887</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="1910"></a>
<h3 class="awr">Checkpoint Activity</h3>
<ul>
<li class="awr">Total Physical Writes:			    337,949</li>
</ul>
<table border="0" class="tdiff" summary="This table displays checkpoint activity statistics. Statistics include MTTR writes, log size writes, autotune checkpoint writes, etc."><tr><th class="awrbg" scope="col">MTTR Writes</th><th class="awrbg" scope="col">Log Size Writes</th><th class="awrbg" scope="col">Log Ckpt Writes</th><th class="awrbg" scope="col">Other Settings Writes</th><th class="awrbg" scope="col">Autotune Ckpt Writes</th><th class="awrbg" scope="col">Thread Ckpt Writes</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>21,459</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#25">Back to Buffer Pool Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="26"></a>
<h2 class="awr">
Advisory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#2000">Instance Recovery Stats</a></li>
<li class="awr"><a class="awr" href="#2010">MTTR Advisory</a></li>
<li class="awr"><a class="awr" href="#2100">Buffer Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#2400">PGA Aggr Summary</a></li>
<li class="awr"><a class="awr" href="#2600">PGA Aggr Target Stats</a></li>
<li class="awr"><a class="awr" href="#2700">PGA Aggr Target Histogram</a></li>
<li class="awr"><a class="awr" href="#2800">PGA Memory Advisory</a></li>
<li class="awr"><a class="awr" href="#5500">Shared Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#6900">SGA Target Advisory</a></li>
<li class="awr"><a class="awr" href="#7100">Streams Pool Advisory</a></li>
<li class="awr"><a class="awr" href="#5700">Java Pool Advisory</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2000"></a>
<h3 class="awr">Instance Recovery Stats</h3>
<ul>
<li class="awr"> B: Begin Snapshot,  E: End Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="This table displays instance recovery statistics at begin and end snapshot. It displays target MTTR, estimated MTTR, recovery estimated IO per second, redo blocks, target redo blocks, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Targt MTTR  (s) </th><th class="awrbg" scope="col">Estd MTTR (s)</th><th class="awrbg" scope="col">Recovery Estd IOs</th><th class="awrbg" scope="col">Actual  RedoBlks</th><th class="awrbg" scope="col">Target	RedoBlks</th><th class="awrbg" scope="col">Log Sz  RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Timeout RedoBlks</th><th class="awrbg" scope="col">Log Ckpt Interval RedoBlks</th><th class="awrbg" scope="col">Opt Log Sz(M)</th><th class="awrbg" scope="col">Estd RAC Avail Time</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>25528</td><td align="right" class='awrc'>51852</td><td align="right" class='awrc'>120001</td><td align="right" class='awrc'>16986915</td><td align="right" class='awrc'>120001</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>2</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>70721</td><td align="right" class='awrnc'>348095</td><td align="right" class='awrnc'>1670867</td><td align="right" class='awrnc'>16986915</td><td align="right" class='awrnc'>1670867</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>20</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2010"></a>
<h3 class="awr">MTTR Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2100"></a>
<h3 class="awr">Buffer Pool Advisory</h3>
<ul>
<li class="awr"> Only rows with estimated physical reads &gt;0 are displayed </li>
<li class="awr"> ordered by Block Size, Buffers For Estimate</li>
</ul>
<table border="0" class="tdiff" summary="This table displays MTTR advisory. It displays size for estimate, dirty limit, estimated cache writes, estimated cache write factor, estimated total write, estimated total IO per second, etc."><tr><th class="awrbg" scope="col">P</th><th class="awrbg" scope="col">Size for Est (M)</th><th class="awrbg" scope="col">Size Factor</th><th class="awrbg" scope="col">Buffers (thousands)</th><th class="awrbg" scope="col">Est Phys Read Factor</th><th class="awrbg" scope="col">Estimated Phys Reads (thousands)</th><th class="awrbg" scope="col">Est Phys Read Time</th><th class="awrbg" scope="col">Est %DBtime for Rds</th></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>800</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>93</td><td align="right" class='awrc'>1.22</td><td align="right" class='awrc'>13,342</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>54129.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>1,600</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>186</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>12,337</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>49822.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>2,400</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>280</td><td align="right" class='awrc'>1.07</td><td align="right" class='awrc'>11,759</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>47342.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>3,200</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>373</td><td align="right" class='awrnc'>1.05</td><td align="right" class='awrnc'>11,445</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>45997.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>4,000</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>466</td><td align="right" class='awrc'>1.03</td><td align="right" class='awrc'>11,267</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>45237.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>4,800</td><td align="right" class='awrnc'>0.60</td><td align="right" class='awrnc'>559</td><td align="right" class='awrnc'>1.02</td><td align="right" class='awrnc'>11,158</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>44769.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>5,600</td><td align="right" class='awrc'>0.70</td><td align="right" class='awrc'>652</td><td align="right" class='awrc'>1.01</td><td align="right" class='awrc'>11,087</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>44462.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>6,400</td><td align="right" class='awrnc'>0.80</td><td align="right" class='awrnc'>746</td><td align="right" class='awrnc'>1.01</td><td align="right" class='awrnc'>11,034</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>44234.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>7,200</td><td align="right" class='awrc'>0.90</td><td align="right" class='awrc'>839</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>10,987</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>44036.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>8,000</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>932</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>10,946</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>43858.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>8,800</td><td align="right" class='awrc'>1.10</td><td align="right" class='awrc'>1,025</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>10,908</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>43695.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>9,600</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>1,118</td><td align="right" class='awrnc'>0.99</td><td align="right" class='awrnc'>10,873</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>43544.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>10,400</td><td align="right" class='awrc'>1.30</td><td align="right" class='awrc'>1,212</td><td align="right" class='awrc'>0.99</td><td align="right" class='awrc'>10,838</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>43395.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>11,200</td><td align="right" class='awrnc'>1.40</td><td align="right" class='awrnc'>1,305</td><td align="right" class='awrnc'>0.99</td><td align="right" class='awrnc'>10,805</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>43254.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>12,000</td><td align="right" class='awrc'>1.50</td><td align="right" class='awrc'>1,398</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>10,774</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>43120.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>12,800</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>1,491</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>10,743</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>42987.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>13,600</td><td align="right" class='awrc'>1.70</td><td align="right" class='awrc'>1,584</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>10,713</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>42858.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>14,400</td><td align="right" class='awrnc'>1.80</td><td align="right" class='awrnc'>1,678</td><td align="right" class='awrnc'>0.98</td><td align="right" class='awrnc'>10,684</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>42737.00</td></tr>
<tr><td class='awrc'>D</td><td align="right" class='awrc'>15,200</td><td align="right" class='awrc'>1.90</td><td align="right" class='awrc'>1,771</td><td align="right" class='awrc'>0.97</td><td align="right" class='awrc'>10,656</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>42618.00</td></tr>
<tr><td class='awrnc'>D</td><td align="right" class='awrnc'>16,000</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>1,864</td><td align="right" class='awrnc'>0.97</td><td align="right" class='awrnc'>10,630</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>42506.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2400"></a>
<h3 class="awr">PGA Aggr Summary</h3>
<ul>
<li class="awr"> PGA cache hit % - percentage of W/A (WorkArea) data processed only in-memory</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate summary. It includes PGA cache hits, total wait time, average time for each class of buffer wait and WorkArea data processed."><tr><th class="awrbg" scope="col">PGA Cache Hit %</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Extra W/A MB Read/Written</th></tr>
<tr><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>125</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2600"></a>
<h3 class="awr">PGA Aggr Target Stats</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap (rows dentified with B or E contain data	 which is absolute i.e. not diffed over the interval) </li>
<li class="awr"> Auto PGA Target - actual workarea memory target </li>
<li class="awr"> W/A PGA Used	 - amount of memory used for all Workareas (manual + auto) </li>
<li class="awr"> %PGA W/A Mem	 - percentage of PGA memory allocated to workareas </li>
<li class="awr"> %Auto W/A Mem	 - percentage of workarea memory controlled by Auto Mem Mgmt </li>
<li class="awr"> %Man W/A Mem	 - percentage of workarea memory under manual control</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target statistics for begin and end snapshot. Statistics include PGA aggregate target, auto PGA target, PGA memory allocation, etc."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">PGA Aggr Target(M)</th><th class="awrbg" scope="col">Auto PGA Target(M)</th><th class="awrbg" scope="col">PGA Mem  Alloc(M) </th><th class="awrbg" scope="col">W/A PGA  Used(M) </th><th class="awrbg" scope="col">%PGA W/A Mem</th><th class="awrbg" scope="col">%Auto W/A Mem</th><th class="awrbg" scope="col">%Man W/A Mem</th><th class="awrbg" scope="col">Global Mem Bound(K)</th></tr>
<tr><td scope="row" class='awrc'>B</td><td align="right" class='awrc'>3,215</td><td align="right" class='awrc'>2,160</td><td align="right" class='awrc'>1,020.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>329,210</td></tr>
<tr><td scope="row" class='awrnc'>E</td><td align="right" class='awrnc'>3,215</td><td align="right" class='awrnc'>2,246</td><td align="right" class='awrnc'>909.71</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>329,210</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2700"></a>
<h3 class="awr">PGA Aggr Target Histogram</h3>
<ul>
<li class="awr"> Optimal Executions are purely in-memory operations</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA aggregate target histograms."><tr><th class="awrbg" scope="col">  Low Optimal</th><th class="awrbg" scope="col">  High Optimal</th><th class="awrbg" scope="col">Total Execs</th><th class="awrbg" scope="col">Optimal Execs</th><th class="awrbg" scope="col">1-Pass Execs</th><th class="awrbg" scope="col">M-Pass Execs</th></tr>
<tr><td class='awrc'>2K</td><td class='awrc'>4K</td><td align="right" class='awrc'>150</td><td align="right" class='awrc'>150</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>64K</td><td class='awrnc'>128K</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>128K</td><td class='awrc'>256K</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>256K</td><td class='awrnc'>512K</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>512K</td><td class='awrc'>1024K</td><td align="right" class='awrc'>52</td><td align="right" class='awrc'>52</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>1M</td><td class='awrnc'>2M</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>2M</td><td class='awrc'>4M</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2800"></a>
<h3 class="awr">PGA Memory Advisory</h3>
<ul>
<li class="awr"> When using Auto Memory Mgmt, minimally choose a pga_aggregate_target value    where Estd PGA Overalloc Count is 0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays PGA memory advisory for different estimated PGA target sizes. It displays size factor, Workarea MB processed, estimated PGA cache hit, estimated extra Workarea MB read written to disk, etc., for each target size."><tr><th class="awrbg" scope="col">PGA Target Est (MB)</th><th class="awrbg" scope="col">Size Factr</th><th class="awrbg" scope="col">W/A MB Processed</th><th class="awrbg" scope="col">Estd Extra	 W/A MB Read/	Written to Disk </th><th class="awrbg" scope="col">Estd PGA Cache Hit %</th><th class="awrbg" scope="col">Estd PGA Overalloc Count</th><th class="awrbg" scope="col">Estd Time</th></tr>
<tr><td align="right" scope="row" class='awrc'>402</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>6,156.72</td><td align="right" class='awrc'>253.62</td><td align="right" class='awrc'>96.00</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>16,851,986</td></tr>
<tr><td align="right" scope="row" class='awrnc'>804</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>6,156.72</td><td align="right" class='awrnc'>4.67</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>16,197,537</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,608</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>6,156.72</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16,185,255</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,411</td><td align="right" class='awrnc'>0.75</td><td align="right" class='awrnc'>6,156.72</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16,185,255</td></tr>
<tr><td align="right" scope="row" class='awrc'>3,215</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>6,156.72</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16,185,255</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,858</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>6,156.72</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16,185,255</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,501</td><td align="right" class='awrc'>1.40</td><td align="right" class='awrc'>6,156.72</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16,185,255</td></tr>
<tr><td align="right" scope="row" class='awrnc'>5,144</td><td align="right" class='awrnc'>1.60</td><td align="right" class='awrnc'>6,156.72</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16,185,255</td></tr>
<tr><td align="right" scope="row" class='awrc'>5,787</td><td align="right" class='awrc'>1.80</td><td align="right" class='awrc'>6,156.72</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16,185,255</td></tr>
<tr><td align="right" scope="row" class='awrnc'>6,430</td><td align="right" class='awrnc'>2.00</td><td align="right" class='awrnc'>6,156.72</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16,185,255</td></tr>
<tr><td align="right" scope="row" class='awrc'>9,645</td><td align="right" class='awrc'>3.00</td><td align="right" class='awrc'>6,156.72</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16,185,255</td></tr>
<tr><td align="right" scope="row" class='awrnc'>12,860</td><td align="right" class='awrnc'>4.00</td><td align="right" class='awrnc'>6,156.72</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16,185,255</td></tr>
<tr><td align="right" scope="row" class='awrc'>19,290</td><td align="right" class='awrc'>6.00</td><td align="right" class='awrc'>6,156.72</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>16,185,255</td></tr>
<tr><td align="right" scope="row" class='awrnc'>25,720</td><td align="right" class='awrnc'>8.00</td><td align="right" class='awrnc'>6,156.72</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>100.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16,185,255</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5500"></a>
<h3 class="awr">Shared Pool Advisory</h3>
<ul>
<li class="awr"> SP: Shared Pool     Est LC: Estimated Library Cache   Factr: Factor </li>
<li class="awr"> Note there is often a 1:Many correlation between a single logical object    in the Library Cache, and the physical number of memory objects associated    with it.  Therefore comparing the number of Lib Cache objects (e.g. in     v$librarycache), with the number of Lib Cache Memory Objects is invalid.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared pool advisory. Size factor, estimated library cache size, estimated library cache memory object and other info is displayed for different shared pool sizes"><tr><th class="awrbg" scope="col">Shared Pool Size(M)</th><th class="awrbg" scope="col">SP Size Factr</th><th class="awrbg" scope="col">Est LC Size (M)</th><th class="awrbg" scope="col">Est LC Mem Obj</th><th class="awrbg" scope="col">Est LC Time Saved (s)</th><th class="awrbg" scope="col">Est LC Time Saved Factr</th><th class="awrbg" scope="col">Est LC Load Time (s)</th><th class="awrbg" scope="col">Est LC Load Time Factr</th><th class="awrbg" scope="col">Est LC Mem Obj Hits (K)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1,280</td><td align="right" class='awrc'>0.89</td><td align="right" class='awrc'>44</td><td align="right" class='awrc'>2,215</td><td align="right" class='awrc'>13,834</td><td align="right" class='awrc'>0.99</td><td align="right" class='awrc'>126</td><td align="right" class='awrc'>3.07</td><td align="right" class='awrc'>1,638</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,312</td><td align="right" class='awrnc'>0.91</td><td align="right" class='awrnc'>76</td><td align="right" class='awrnc'>2,633</td><td align="right" class='awrnc'>13,858</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>102</td><td align="right" class='awrnc'>2.49</td><td align="right" class='awrnc'>1,639</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,344</td><td align="right" class='awrc'>0.93</td><td align="right" class='awrc'>107</td><td align="right" class='awrc'>3,185</td><td align="right" class='awrc'>13,868</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>92</td><td align="right" class='awrc'>2.24</td><td align="right" class='awrc'>1,640</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,376</td><td align="right" class='awrnc'>0.96</td><td align="right" class='awrnc'>139</td><td align="right" class='awrnc'>3,687</td><td align="right" class='awrnc'>13,893</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>67</td><td align="right" class='awrnc'>1.63</td><td align="right" class='awrnc'>1,641</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,408</td><td align="right" class='awrc'>0.98</td><td align="right" class='awrc'>170</td><td align="right" class='awrc'>4,811</td><td align="right" class='awrc'>13,911</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>1.20</td><td align="right" class='awrc'>1,642</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,440</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>6,105</td><td align="right" class='awrnc'>13,919</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,472</td><td align="right" class='awrc'>1.02</td><td align="right" class='awrc'>226</td><td align="right" class='awrc'>7,056</td><td align="right" class='awrc'>13,919</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,504</td><td align="right" class='awrnc'>1.04</td><td align="right" class='awrnc'>226</td><td align="right" class='awrnc'>7,056</td><td align="right" class='awrnc'>13,919</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,536</td><td align="right" class='awrc'>1.07</td><td align="right" class='awrc'>226</td><td align="right" class='awrc'>7,056</td><td align="right" class='awrc'>13,919</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,568</td><td align="right" class='awrnc'>1.09</td><td align="right" class='awrnc'>226</td><td align="right" class='awrnc'>7,056</td><td align="right" class='awrnc'>13,919</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,600</td><td align="right" class='awrc'>1.11</td><td align="right" class='awrc'>226</td><td align="right" class='awrc'>7,056</td><td align="right" class='awrc'>13,919</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,632</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>226</td><td align="right" class='awrnc'>7,056</td><td align="right" class='awrnc'>13,919</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,664</td><td align="right" class='awrc'>1.16</td><td align="right" class='awrc'>226</td><td align="right" class='awrc'>7,056</td><td align="right" class='awrc'>13,919</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,696</td><td align="right" class='awrnc'>1.18</td><td align="right" class='awrnc'>226</td><td align="right" class='awrnc'>7,056</td><td align="right" class='awrnc'>13,919</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,728</td><td align="right" class='awrc'>1.20</td><td align="right" class='awrc'>226</td><td align="right" class='awrc'>7,056</td><td align="right" class='awrc'>13,919</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrnc'>1,760</td><td align="right" class='awrnc'>1.22</td><td align="right" class='awrnc'>226</td><td align="right" class='awrnc'>7,056</td><td align="right" class='awrnc'>13,919</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrc'>1,920</td><td align="right" class='awrc'>1.33</td><td align="right" class='awrc'>226</td><td align="right" class='awrc'>7,056</td><td align="right" class='awrc'>13,919</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,080</td><td align="right" class='awrnc'>1.44</td><td align="right" class='awrnc'>226</td><td align="right" class='awrnc'>7,056</td><td align="right" class='awrnc'>13,919</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,240</td><td align="right" class='awrc'>1.56</td><td align="right" class='awrc'>226</td><td align="right" class='awrc'>7,056</td><td align="right" class='awrc'>13,919</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,400</td><td align="right" class='awrnc'>1.67</td><td align="right" class='awrnc'>226</td><td align="right" class='awrnc'>7,056</td><td align="right" class='awrnc'>13,919</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,560</td><td align="right" class='awrc'>1.78</td><td align="right" class='awrc'>226</td><td align="right" class='awrc'>7,056</td><td align="right" class='awrc'>13,919</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2,720</td><td align="right" class='awrnc'>1.89</td><td align="right" class='awrnc'>226</td><td align="right" class='awrnc'>7,056</td><td align="right" class='awrnc'>13,919</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>1,643</td></tr>
<tr><td align="right" scope="row" class='awrc'>2,880</td><td align="right" class='awrc'>2.00</td><td align="right" class='awrc'>226</td><td align="right" class='awrc'>7,056</td><td align="right" class='awrc'>13,919</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>1,643</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6900"></a>
<h3 class="awr">SGA Target Advisory</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA target advisory for different SGA target sizes. It displays SGA size factor, estimated DB time and estimated physical reads for different SGA target sizes."><tr><th class="awrbg" scope="col">SGA Target Size (M)</th><th class="awrbg" scope="col">SGA Size Factor</th><th class="awrbg" scope="col">Est DB Time (s)</th><th class="awrbg" scope="col">Est Physical Reads</th></tr>
<tr><td align="right" scope="row" class='awrc'>2,416</td><td align="right" class='awrc'>0.25</td><td align="right" class='awrc'>60,284</td><td align="right" class='awrc'>13,341,588</td></tr>
<tr><td align="right" scope="row" class='awrnc'>3,624</td><td align="right" class='awrnc'>0.38</td><td align="right" class='awrnc'>55,968</td><td align="right" class='awrnc'>12,336,782</td></tr>
<tr><td align="right" scope="row" class='awrc'>4,832</td><td align="right" class='awrc'>0.50</td><td align="right" class='awrc'>52,143</td><td align="right" class='awrc'>11,444,716</td></tr>
<tr><td align="right" scope="row" class='awrnc'>6,040</td><td align="right" class='awrnc'>0.63</td><td align="right" class='awrnc'>50,998</td><td align="right" class='awrnc'>11,157,942</td></tr>
<tr><td align="right" scope="row" class='awrc'>7,248</td><td align="right" class='awrc'>0.75</td><td align="right" class='awrc'>50,608</td><td align="right" class='awrc'>11,086,795</td></tr>
<tr><td align="right" scope="row" class='awrnc'>8,456</td><td align="right" class='awrnc'>0.88</td><td align="right" class='awrnc'>50,183</td><td align="right" class='awrnc'>10,987,190</td></tr>
<tr><td align="right" scope="row" class='awrc'>9,664</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>50,003</td><td align="right" class='awrc'>10,945,597</td></tr>
<tr><td align="right" scope="row" class='awrnc'>10,872</td><td align="right" class='awrnc'>1.13</td><td align="right" class='awrnc'>49,688</td><td align="right" class='awrnc'>10,872,262</td></tr>
<tr><td align="right" scope="row" class='awrc'>12,080</td><td align="right" class='awrc'>1.25</td><td align="right" class='awrc'>49,458</td><td align="right" class='awrc'>10,804,399</td></tr>
<tr><td align="right" scope="row" class='awrnc'>13,288</td><td align="right" class='awrnc'>1.38</td><td align="right" class='awrnc'>49,263</td><td align="right" class='awrnc'>10,773,751</td></tr>
<tr><td align="right" scope="row" class='awrc'>14,496</td><td align="right" class='awrc'>1.50</td><td align="right" class='awrc'>49,003</td><td align="right" class='awrc'>10,712,456</td></tr>
<tr><td align="right" scope="row" class='awrnc'>15,704</td><td align="right" class='awrnc'>1.63</td><td align="right" class='awrnc'>48,883</td><td align="right" class='awrnc'>10,683,997</td></tr>
<tr><td align="right" scope="row" class='awrc'>16,912</td><td align="right" class='awrc'>1.75</td><td align="right" class='awrc'>48,648</td><td align="right" class='awrc'>10,630,364</td></tr>
<tr><td align="right" scope="row" class='awrnc'>18,120</td><td align="right" class='awrnc'>1.88</td><td align="right" class='awrnc'>48,648</td><td align="right" class='awrnc'>10,630,364</td></tr>
<tr><td align="right" scope="row" class='awrc'>19,328</td><td align="right" class='awrc'>2.00</td><td align="right" class='awrc'>48,648</td><td align="right" class='awrc'>10,630,364</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7100"></a>
<h3 class="awr">Streams Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5700"></a>
<h3 class="awr">Java Pool Advisory</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#26">Back to Advisory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="27"></a>
<h2 class="awr">
Wait Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#2300">Buffer Wait Statistics</a></li>
<li class="awr"><a class="awr" href="#3000">Enqueue Activity</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="2300"></a>
<h3 class="awr">Buffer Wait Statistics</h3>
<ul>
<li class="awr"> ordered by wait time desc, waits desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays buffer wait statistics. Statistics include waits, total wait time and average time for each class of buffer wait."><tr><th class="awrbg" scope="col">Class</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Total Wait Time (s)</th><th class="awrbg" scope="col">Avg Time (ms)</th></tr>
<tr><td scope="row" class='awrc'>undo header</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#27">Back to Wait Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3000"></a>
<h3 class="awr">Enqueue Activity</h3>
<ul>
<li class="awr"> only enqueues with requests are shown	</li>
<li class="awr"> Enqueue stats gathered prior to 10g should not be compared with 10g data </li>
<li class="awr"> ordered by Wait Time desc, Waits desc, Requests desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays enqueue activity statistics. Requests, success gets, failed gets, waits, wait time and average wait time are displayed for each enqueue type."><tr><th class="awrbg" scope="col">Enqueue Type (Request Reason)</th><th class="awrbg" scope="col">Requests</th><th class="awrbg" scope="col">Succ Gets</th><th class="awrbg" scope="col">Failed Gets</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col">Wt Time (s)</th><th class="awrbg" scope="col">Av Wt Time(ms)</th></tr>
<tr><td scope="row" class='awrc'>CR-Reuse Block Range (block range reuse ckpt)</td>
<td align="right" class='awrc'>236</td><td align="right" class='awrc'>236</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>94</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4.18</td></tr>
<tr><td scope="row" class='awrnc'>CF-Controlfile Transaction</td>
<td align="right" class='awrnc'>1,419</td><td align="right" class='awrnc'>1,418</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>57</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.02</td></tr>
<tr><td scope="row" class='awrc'>WF-AWR Flush</td>
<td align="right" class='awrc'>25</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.07</td></tr>
<tr><td scope="row" class='awrnc'>PS-PX Process Reservation</td>
<td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>CO-KTUCLO Master Slave enq (master slave det)</td>
<td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>US-Undo Segment</td>
<td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.86</td></tr>
<tr><td scope="row" class='awrc'>RO-Multiple Object Reuse (fast object reuse)</td>
<td align="right" class='awrc'>40</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.40</td></tr>
<tr><td scope="row" class='awrnc'>TM-DML</td>
<td align="right" class='awrnc'>122,017</td><td align="right" class='awrnc'>122,009</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1.00</td></tr>
<tr><td scope="row" class='awrc'>HW-Segment High Water Mark</td>
<td align="right" class='awrc'>192</td><td align="right" class='awrc'>192</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1.00</td></tr>
<tr><td scope="row" class='awrnc'>DW-In memory Dispenser</td>
<td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2.00</td></tr>
<tr><td scope="row" class='awrc'>TD-KTF map table enqueue (KTF dump entries)</td>
<td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2.00</td></tr>
<tr><td scope="row" class='awrnc'>TA-Instance Undo</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>FB-Format Block</td>
<td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>TX-Transaction</td>
<td align="right" class='awrnc'>121,933</td><td align="right" class='awrnc'>121,926</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JG-Job Scheduler1</td>
<td align="right" class='awrc'>2,520</td><td align="right" class='awrc'>2,520</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JG-Job Scheduler1 (queue lock)</td>
<td align="right" class='awrnc'>2,520</td><td align="right" class='awrnc'>2,520</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SJ-KTSJ Slave Task Cancel (Slave Task Cancel)</td>
<td align="right" class='awrc'>415</td><td align="right" class='awrc'>416</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DD-ASM Local Disk Group</td>
<td align="right" class='awrnc'>339</td><td align="right" class='awrnc'>339</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JG-Job Scheduler1 (q mem clnup lck)</td>
<td align="right" class='awrc'>240</td><td align="right" class='awrc'>240</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>BU-Buddy Instance Context (recovery set construct)</td>
<td align="right" class='awrnc'>187</td><td align="right" class='awrnc'>187</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>FP-File Object (global fob contention)</td>
<td align="right" class='awrc'>69</td><td align="right" class='awrc'>69</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IS-Instance State</td>
<td align="right" class='awrnc'>51</td><td align="right" class='awrnc'>51</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TT-Tablespace</td>
<td align="right" class='awrc'>32</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>WT-AWR CDB-Wide Table Lock</td>
<td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CU-Cursor</td>
<td align="right" class='awrc'>19</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MR-Media Recovery</td>
<td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SE-Session Migration</td>
<td align="right" class='awrc'>14</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AF-Advisor Framework (task serialization)</td>
<td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>TH-Threshold Chain (metric threshold evaluation)</td>
<td align="right" class='awrc'>10</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQ-Sequence Cache</td>
<td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PR-Process Startup</td>
<td align="right" class='awrc'>4</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>TO-Temp Object</td>
<td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AE-Edition Lock (lock)</td>
<td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PV-KSV slave startup (syncstart)</td>
<td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PW-Buffer Cache PreWarm (flush prewarm buffers)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SH-Active Session History Flushing</td>
<td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XR-Quiesce / Force Logging (database force logging)</td>
<td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DA-Instance DP Array (Slave Process Array)</td>
<td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#27">Back to Wait Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="28"></a>
<h2 class="awr">
Undo Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3300">Undo Segment Summary</a></li>
<li class="awr"><a class="awr" href="#3400">Undo Segment Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3300"></a>
<h3 class="awr">Undo Segment Summary</h3>
<ul>
<li class="awr"> Min/Max TR (mins) - Min and Max Tuned Retention (minutes) </li>
<li class="awr"> STO - Snapshot Too Old count,	OOS - Out of Space count </li>
<li class="awr"> Undo segment block stats: </li>
<li class="awr"> uS - unexpired Stolen,   uR - unexpired Released,   uU - unexpired reUsed </li>
<li class="awr"> eS - expired	Stolen,   eR - expired	 Released,   eU - expired   reUsed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays undo segment summary. It displays undo tablespace number, number of undo blocks, number of transactions, max query length, etc."><tr><th class="awrbg" scope="col">Undo TS#</th><th class="awrbg" scope="col">Num Undo Blocks (K)</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concurcy</th><th class="awrbg" scope="col">Min/Max TR (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">	uS/uR/uU/    eS/eR/eU</th></tr>
<tr><td align="right" scope="row" class='awrc'>2</td><td align="right" class='awrc'>13.96</td><td align="right" class='awrc'>101,013</td><td align="right" class='awrc'>1,579</td><td align="right" class='awrc'>12</td><td class='awrc'>40.3/40.3</td><td class='awrc'>11/0</td><td class='awrc'>0/0/0/0/0/0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#28">Back to Undo Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3400"></a>
<h3 class="awr">Undo Segment Stats</h3>
<ul>
<li class="awr"> Most recent 35 Undostat rows, ordered by Time desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the 35 most recent Undostat rows."><tr><th class="awrbg" scope="col">End Time</th><th class="awrbg" scope="col">Num Undo Blocks</th><th class="awrbg" scope="col">Number of Transactions</th><th class="awrbg" scope="col">Max Qry Len (s)</th><th class="awrbg" scope="col">Max Tx Concy</th><th class="awrbg" scope="col">Tun Ret (mins)</th><th class="awrbg" scope="col">STO/ OOS</th><th class="awrbg" scope="col">  uS/uR/uU/   eS/eR/eU</th></tr>
<tr><td scope="row" class='awrc'>10-Feb 20:39</td><td align="right" class='awrc'>13,964</td><td align="right" class='awrc'>101,013</td><td align="right" class='awrc'>1,579</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>40</td><td class='awrc'>11/0</td><td class='awrc'>0/0/0/0/0/0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#28">Back to Undo Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="29"></a>
<h2 class="awr">
Latch Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#3500">Latch Activity</a></li>
<li class="awr"><a class="awr" href="#3600">Latch Sleep Breakdown</a></li>
<li class="awr"><a class="awr" href="#3700">Latch Miss Sources</a></li>
<li class="awr"><a class="awr" href="#7500">Mutex Sleep Summary</a></li>
<li class="awr"><a class="awr" href="#3800">Parent Latch Statistics</a></li>
<li class="awr"><a class="awr" href="#3900">Child Latch Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3500"></a>
<h3 class="awr">Latch Activity</h3>
<ul>
<li class="awr"> &quot;Get Requests&quot;, &quot;Pct Get Miss&quot; and &quot;Avg Slps/Miss&quot; are statistics for	 willing-to-wait latch get requests </li>
<li class="awr"> &quot;NoWait Requests&quot;, &quot;Pct NoWait Miss&quot; are for no-wait latch get requests </li>
<li class="awr"> &quot;Pct Misses&quot; for both should be very close to 0.0</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch statistics. Get requests, % get miss, wait time, noWait requests are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Get Miss</th><th class="awrbg" scope="col">Avg Slps /Miss</th><th class="awrbg" scope="col">Wait Time (s)</th><th class="awrbg" scope="col">NoWait Requests</th><th class="awrbg" scope="col">Pct NoWait Miss</th></tr>
<tr><td scope="row" class='awrc'>AQ Background: interrupt command latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>AQ Coord jobx_kwsbgsgn latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ Message drive state object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>AQ Sharded master pool latch</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AQ deq hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM Keyed state latch</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM allocation</td><td align="right" class='awrc'>35,414</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM connection state latch</td><td align="right" class='awrnc'>3,894</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM db client latch</td><td align="right" class='awrc'>586</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map headers</td><td align="right" class='awrnc'>483</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM map load waiting list</td><td align="right" class='awrc'>138</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM map operation freelist</td><td align="right" class='awrnc'>50</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM map operation hash table</td><td align="right" class='awrc'>5,855,132</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM network background latch</td><td align="right" class='awrnc'>4,191</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM network state latch</td><td align="right" class='awrc'>147</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM remote client latch</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AWR Alerted Metric Element list</td><td align="right" class='awrc'>5,938</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Autotask management</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Change Notification Hash table latch</td><td align="right" class='awrc'>204</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Column stats entry latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Consistent RBA</td><td align="right" class='awrc'>100,849</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.60</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DML lock allocation</td><td align="right" class='awrnc'>245,006</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Event Group Locks</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>FIB s.o chain latch</td><td align="right" class='awrnc'>138</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>FOB consolidated s.o list latch</td><td align="right" class='awrc'>138</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>File State Object Pool Parent Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCS logfile block</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCS logfile write queue</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Hang Manager wait event statistics</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7,119</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>I/O Staticstics latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM Stats Stripe Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM Stats main anchor latch</td><td align="right" class='awrnc'>122</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ILM access tracking extent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ILM activity tracking latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM Global dictionary latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM Global dictionary queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM Global dictionary rw latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM area sb latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM area scb latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IM emb latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IM seg hdr latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMFS defer write list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IMXT hash table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC other latch</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC stats buffer allocation latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>In memory undo latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS Sh mem access</td><td align="right" class='awrc'>122</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS broadcast add buf latch</td><td align="right" class='awrnc'>138</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS broadcast drop buf latch</td><td align="right" class='awrc'>138</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS broadcast load blnc latch</td><td align="right" class='awrnc'>138</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS queue access latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>JS queue state obj latch</td><td align="right" class='awrnc'>5,082</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>JS slv state obj latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KCNIBR - invalid block range tree</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDCStatHash latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDFI Buffer Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDFI Hash Bucket Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDFI Hash Elem Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDMADO action list latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KDMADO bll latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KDMADO latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFC FX Hash Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFC Hash Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFCL LE Freelist</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS client latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS cluster latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS endpoint latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS node latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFIAS process latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFIAS queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KFK SGA Libload latch</td><td align="right" class='awrc'>4,560</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KFMD SGA</td><td align="right" class='awrnc'>345</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KGNFS-NFS:SHM structure</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KGNFS-NFS:SVR LIST</td><td align="right" class='awrnc'>203</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC message pool KGH calls</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJC message pool free list</td><td align="right" class='awrnc'>60,846</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>167,614</td><td align="right" class='awrnc'>0.19</td></tr>
<tr><td scope="row" class='awrc'>KJC message pool pending avail list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KJCT flow control latch</td><td align="right" class='awrnc'>2,228,776</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KMG MMAN ready and startup request latch</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS OFS ctx level parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS OFS req layer parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS OFS sess layer parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS Receive and Send Queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFS id table parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSFS ksfs_node latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSFSD name cache parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSGL LS Segment latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSGL SGA anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPC ASPC anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPC SGA allocation parent latch</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSIPCGSN Hash Table latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSIPCGSN Namespace latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSK PDB IO STAT</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSRMA SGA anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSRMF SGA anchor latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSWL SGA anchor latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSXR hang analysis phase 1 latch</td><td align="right" class='awrc'>187</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSXR hang analysis phase 2 latch</td><td align="right" class='awrnc'>109</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KSXR large replies</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTF sga latch</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>257</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KTILM latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTU in-memory txn table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KTURMA ODPSCN latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KTURMA SGA allocation parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KWQMN job cache list latch</td><td align="right" class='awrc'>88</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Latch for NonceHistory</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Locator state objects pool parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Lost write change tracking</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Lsod array latch</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA asr alloc latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA heap latch</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MGA shared context latch</td><td align="right" class='awrnc'>1,290</td><td align="right" class='awrnc'>0.39</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MGA shared context root latch</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>10.29</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>MQL Tracking Latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Memory Management Latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>202</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #2</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Message Subscriber #3</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Memory Queue Message Subscriber #4</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Memory Queue Subscriber</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Message cache latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>MinActiveScn Latch</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Mutex</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Mutex Stats</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Nologging Standby SCN Time Map cache</td><td align="right" class='awrnc'>199</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OS process</td><td align="right" class='awrc'>506</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>OS process allocation</td><td align="right" class='awrnc'>1,249</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>OS process: request allocation</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PDB Hash Table Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PDB LRU structure</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PL/SQL warning settings</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX hash array latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parent latch for dependency tracking</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Parent latch for query hash table access</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Parent latch for segments scanning</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>QMT</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Real-time descriptor latch</td><td align="right" class='awrnc'>1,900</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Report Request stats latch</td><td align="right" class='awrc'>40</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Request holder compeltion list latch</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Retry Ht elm latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Retry bkt latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA Blackbox latch</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA Logging Bkt Latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA Logging Log Latch</td><td align="right" class='awrc'>2,857</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA blob parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA bucket locks</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SGA heap locks</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SGA pool locks</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SO private so latch</td><td align="right" class='awrnc'>55</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>SQL memory manager latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>201</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>SQL memory manager workarea list latch</td><td align="right" class='awrnc'>13,933</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SR Stats Stripe Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sched IM Job latch</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Sched InMem Job Cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Shared B-Tree</td><td align="right" class='awrnc'>23</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Streams Generic</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Subscriber Ht elm latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Testing</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Token Manager</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Txn Ht elm latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Txn bkt latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>UM object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>WCR: sync</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Write State Object Pool Parent Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>X$KSFQP</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XDB NFS Security Latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>XDB unused session pool</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>XDB used session pool</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>active checkpoint queue latch</td><td align="right" class='awrnc'>26,844</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>active service list</td><td align="right" class='awrc'>2,631</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>602</td><td align="right" class='awrc'>0.17</td></tr>
<tr><td scope="row" class='awrnc'>archive destination</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>begin backup scn array</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer pool</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>business card</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cache buffer handles</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cache buffers chains</td><td align="right" class='awrc'>17,639,007</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2,398,670</td><td align="right" class='awrc'>0.12</td></tr>
<tr><td scope="row" class='awrnc'>cache buffers lru chain</td><td align="right" class='awrnc'>2,688,319</td><td align="right" class='awrnc'>0.14</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2,728,066</td><td align="right" class='awrnc'>0.30</td></tr>
<tr><td scope="row" class='awrc'>call allocation</td><td align="right" class='awrc'>152</td><td align="right" class='awrc'>0.66</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>change notification client cache latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>channel handle pool latch</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>channel operations parent latch</td><td align="right" class='awrnc'>1,415</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>checkpoint queue latch</td><td align="right" class='awrc'>1,129,582</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>382,005</td><td align="right" class='awrc'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>client/application info</td><td align="right" class='awrnc'>104</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>compile environment latch</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp handoff latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp pool latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp server hash latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp sga latch</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cp srv type state latch</td><td align="right" class='awrnc'>607</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cp srv type wait latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cr slave free list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>cvmap freelist lock</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>deferred cleanup latch</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dispatcher info</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dml lock allocation</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>done queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dtp latch</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>dummy allocation</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>eighth spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>eleventh spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enqueue freelist latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16,390</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>enqueue hash chains</td><td align="right" class='awrc'>753,130</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.33</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enqueues</td><td align="right" class='awrnc'>120</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>error message lists</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fifteenth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>file cache latch</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>first Audit Vault latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>flash file access latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>flashback copy</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>fourteenth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>fourth Audit Vault latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc element</td><td align="right" class='awrc'>10,123,744</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>974,009</td><td align="right" class='awrc'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>gc xid list</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcr global ctx</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs commit scn state</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs nodemap pool</td><td align="right" class='awrc'>63,456</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs opaque info freelist</td><td align="right" class='awrnc'>86,805</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs partitioned table hash</td><td align="right" class='awrc'>5,900,956</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>140,908</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs pcm hashed value bucket hash</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs remaster request queue</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource freelist</td><td align="right" class='awrnc'>2,323,774</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1,095,874</td><td align="right" class='awrnc'>0.15</td></tr>
<tr><td scope="row" class='awrc'>gcs resource hash</td><td align="right" class='awrc'>10,243,204</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1,665</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource scan list</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs resource timerq list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource validate list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs shadows freelist</td><td align="right" class='awrc'>1,224,747</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges cached resource lists</td><td align="right" class='awrnc'>88,527</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>17,746</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges deadlock list</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges domain table</td><td align="right" class='awrnc'>254,790</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges enqueue table freelist</td><td align="right" class='awrc'>246,760</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges group table</td><td align="right" class='awrnc'>255,112</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges process hash list</td><td align="right" class='awrc'>10,378</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges process parent latch</td><td align="right" class='awrnc'>511,565</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges process table freelist</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges remote lock freelist</td><td align="right" class='awrnc'>88</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges resource hash list</td><td align="right" class='awrc'>262,013</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.53</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>432</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges resource scan list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges resource table freelist</td><td align="right" class='awrc'>699</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges s-lock bitvec freelist</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges timeout list</td><td align="right" class='awrc'>47</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges value block free list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>global KZLD latch for auth type mem in SGA</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>global tx hash mapping</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>granule from data transfer cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gws:Sharding global descriptor latch</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>hash table Sql Plan Finding latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>hash table column usage latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>465</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>hash table expression usage tracking latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>hash table sql contorl latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>heartbeat check</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>291</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>heartbeat structure management</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>303</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>imc buf hdl lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc cr clone buf</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc hash lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc sj lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>imc srchsp lat</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>imc-txn-wrk-lat</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory area latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory columnar segment hash table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>in-memory columnar ts extent map chunk latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>in-memory global pool latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>internal temp table object number allocation latch</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>interrupt manipulation</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>intra txn parallel recovery</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>io pool granule metadata list</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>job workq parent latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>job_queue_processes parameter latch</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>k2q global data latch</td><td align="right" class='awrc'>402</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>k2q lock allocation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kKCN Cqn SGA</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kcb DW scan objtemp hash table latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kcn buffer chains</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kdlx hb parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kgb parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kgnfs mount latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjbr roi instance map</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjci objects freelist latch</td><td align="right" class='awrnc'>137</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjci process context latch</td><td align="right" class='awrc'>116</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>30,725</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>kjci process list latch</td><td align="right" class='awrnc'>75</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjci request sequence latch</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjcipctx state object freelist latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjoedcso state object freelist latch</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjoeq omni enqueue hash bucket latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjoer owner hash bucket</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjpm my inst data</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsc Request obj freelist latch</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsc Ring Buffer obj freelist latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsc protect control request queue</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6,056</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>kjsc protect warm up context</td><td align="right" class='awrnc'>103</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsca pkey obj freelist latch</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjsca protect pkey hash table bucket</td><td align="right" class='awrnc'>698</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kjsca protect service hash table bucket</td><td align="right" class='awrc'>6,076</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjscpss state object freelist latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kokc descriptor allocation latch</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kpoxft latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>krso process</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksevn object root latch</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksfv messages</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksi resource reuse count</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksim group membership cache</td><td align="right" class='awrc'>69</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksim membership request latch</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>273</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ksns object latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kss move lock</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksuosstats global area</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>231</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksutcpistat latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksv allocation latch</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksv class latch</td><td align="right" class='awrnc'>14,218</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksv msg queue latch</td><td align="right" class='awrc'>188</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>187</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ksxp shared latch</td><td align="right" class='awrnc'>29</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksxp so latch</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ksz_so allocation latch</td><td align="right" class='awrnc'>29</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktfbn latch</td><td align="right" class='awrc'>131</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg jrnls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg lookuptable level 1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg lookuptable level 2</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg space</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm adg stages</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm adg worklink</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktm global data</td><td align="right" class='awrnc'>47</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ktm prv jrnls</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ktmpj HT ls</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwqbsn:qsga</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwslbmdl: metadata latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwslbql: queue latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwslbutl: uncommitted txn latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsptQcachLt: queue cache latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsptTrncTsksLt: trunc task latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kwsptjobAdPtLt: AdPt list latch</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kwsslLat: skiplist latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>kxfxscanrate_latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lgwr LWN SCN</td><td align="right" class='awrnc'>103,107</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>list of block allocation</td><td align="right" class='awrc'>46</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>loader state object freelist</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lob segment dispenser latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lob segment hash table latch</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>lob segment query latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lock DBA buffer during media recovery</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log write info</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>117,915</td><td align="right" class='awrc'>3.62</td></tr>
<tr><td scope="row" class='awrnc'>log write worker phase</td><td align="right" class='awrnc'>14,182</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logical standby cache</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logminer context allocation</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>logminer local</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>logminer work area</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>longop free list parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>managed standby</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>message bitmap latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>message pool operations parent latch</td><td align="right" class='awrnc'>666</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>messages</td><td align="right" class='awrc'>581,948</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>msg queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>multiblock read objects</td><td align="right" class='awrc'>118</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service memory objects</td><td align="right" class='awrnc'>70</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service namespace bucket</td><td align="right" class='awrc'>3,109</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service pending queue</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>name-service request</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service request queue</td><td align="right" class='awrnc'>6,228</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ncodef allocation latch</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ninth spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>object queue header freelist</td><td align="right" class='awrc'>640</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>object queue header operation</td><td align="right" class='awrnc'>5,804,825</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>16,256</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>object queue memory</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>object stats modification</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>parallel query alloc buffer</td><td align="right" class='awrc'>68</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>90</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>parallel query stats</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>parallel txn reco latch</td><td align="right" class='awrc'>636</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>parameter table management</td><td align="right" class='awrnc'>110</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pdb enqueue hash chains</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>peshm</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pesom_free_list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pesom_hash_node</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>pkey global statistics</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>pmon dead latch</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>post/wait queue</td><td align="right" class='awrc'>27,172</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>27,423</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>process allocation</td><td align="right" class='awrnc'>3,036</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process group creation</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process memory detail</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process pkey statistics list</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>process queue</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>process queue reference</td><td align="right" class='awrc'>529</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>107</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>qmn task queue latch</td><td align="right" class='awrnc'>88</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>quarantine object</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>query server freelists</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>query server process</td><td align="right" class='awrc'>438</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>queued dump request</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>queuing load statistics</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>read-moslty lock queue under pkey</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>recovery domain hash bucket</td><td align="right" class='awrc'>319</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>redo allocation</td><td align="right" class='awrnc'>310,906</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>0.19</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>519,841</td><td align="right" class='awrnc'>0.38</td></tr>
<tr><td scope="row" class='awrc'>redo copy</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>520,670</td><td align="right" class='awrc'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>redo transport task</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>redo writing</td><td align="right" class='awrc'>332,661</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remote tool request latch</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr group change latch</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:active threads</td><td align="right" class='awrnc'>50</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>resmgr:actses change group</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:actses change state</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:free threads list</td><td align="right" class='awrc'>46</td><td align="right" class='awrc'>2.17</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:plan CPU method</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:plan change alloc latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:plan change latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>resmgr:resource group CPU method</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>resmgr:schema config</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>resmgr:session queuing</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>row cache objects</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>rt rmv count latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>303</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>second Audit Vault latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>segmented array pool</td><td align="right" class='awrc'>138</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sequence cache</td><td align="right" class='awrnc'>160</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>service drain list</td><td align="right" class='awrc'>604</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session allocation</td><td align="right" class='awrnc'>110,627</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>110,566</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>session idle bit</td><td align="right" class='awrc'>221,518</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session queue latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session state list latch</td><td align="right" class='awrc'>49</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session statistics</td><td align="right" class='awrnc'>47</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>session switching</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>2.94</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>session timer</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>seventh spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>sga hash table parent latch</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shard latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shardgroup list latch</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shared pool</td><td align="right" class='awrc'>8,705</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>shared pool sim alloc</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>shared pool simulator</td><td align="right" class='awrc'>178</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>shared server configuration</td><td align="right" class='awrnc'>202</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sim partition latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>simulator hash latch</td><td align="right" class='awrnc'>793,120</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>simulator lru latch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>506,497</td><td align="right" class='awrc'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>sixth spare latch - X parent</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>sort extent pool</td><td align="right" class='awrc'>65</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>space background task latch</td><td align="right" class='awrnc'>1,431</td><td align="right" class='awrnc'>42.98</td><td align="right" class='awrnc'>0.82</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>386</td><td align="right" class='awrnc'>4.40</td></tr>
<tr><td scope="row" class='awrc'>state object free list</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>statistics aggregation</td><td align="right" class='awrnc'>145</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>subscriber Ht bkt</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>tablespace key chain</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>temp lob duration state obj allocation</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>temporary table state object allocation</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>tenth spare latch - X parent</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test excl. parent l0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test excl. parent2 l0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test excl. parent2 lmid cln</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test mixed exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test mode exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test open exclusive</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>test pdb exclusive</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>test shared parent2 lmid</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>thirteenth spare latch - children</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>threshold alerts latch</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>transaction allocation</td><td align="right" class='awrnc'>46</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twelfth spare latch - children</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-fifth spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-first spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-fourth spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>twenty-second spare latch - S par</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>twenty-third spare latch - S par</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo global data</td><td align="right" class='awrc'>385,985</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.23</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>virtual circuit buffers</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>virtual circuit holder</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>virtual circuit queues</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3600"></a>
<h3 class="awr">Latch Sleep Breakdown</h3>
<ul>
<li class="awr"> ordered by misses desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch sleep statistics. Get requests, misses, sleeps, spin gets are displayed for each latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Misses</th><th class="awrbg" scope="col">Sleeps</th><th class="awrbg" scope="col">Spin Gets</th></tr>
<tr><td scope="row" class='awrc'>cache buffers lru chain</td><td align="right" class='awrc'>2,688,319</td><td align="right" class='awrc'>3,766</td><td align="right" class='awrc'>142</td><td align="right" class='awrc'>3,626</td></tr>
<tr><td scope="row" class='awrnc'>gc element</td><td align="right" class='awrnc'>10,123,744</td><td align="right" class='awrnc'>2,253</td><td align="right" class='awrnc'>218</td><td align="right" class='awrnc'>2,052</td></tr>
<tr><td scope="row" class='awrc'>KJCT flow control latch</td><td align="right" class='awrc'>2,228,776</td><td align="right" class='awrc'>2,059</td><td align="right" class='awrc'>153</td><td align="right" class='awrc'>1,915</td></tr>
<tr><td scope="row" class='awrnc'>gcs resource freelist</td><td align="right" class='awrnc'>2,323,774</td><td align="right" class='awrnc'>1,645</td><td align="right" class='awrnc'>218</td><td align="right" class='awrnc'>1,448</td></tr>
<tr><td scope="row" class='awrc'>gcs resource hash</td><td align="right" class='awrc'>10,243,204</td><td align="right" class='awrc'>1,199</td><td align="right" class='awrc'>325</td><td align="right" class='awrc'>891</td></tr>
<tr><td scope="row" class='awrnc'>redo allocation</td><td align="right" class='awrnc'>310,906</td><td align="right" class='awrnc'>783</td><td align="right" class='awrnc'>148</td><td align="right" class='awrnc'>643</td></tr>
<tr><td scope="row" class='awrc'>enqueue hash chains</td><td align="right" class='awrc'>753,130</td><td align="right" class='awrc'>622</td><td align="right" class='awrc'>208</td><td align="right" class='awrc'>430</td></tr>
<tr><td scope="row" class='awrnc'>space background task latch</td><td align="right" class='awrnc'>1,431</td><td align="right" class='awrnc'>615</td><td align="right" class='awrnc'>505</td><td align="right" class='awrnc'>153</td></tr>
<tr><td scope="row" class='awrc'>cache buffers chains</td><td align="right" class='awrc'>17,639,007</td><td align="right" class='awrc'>350</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>330</td></tr>
<tr><td scope="row" class='awrnc'>messages</td><td align="right" class='awrnc'>581,948</td><td align="right" class='awrnc'>154</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>144</td></tr>
<tr><td scope="row" class='awrc'>object queue header operation</td><td align="right" class='awrc'>5,804,825</td><td align="right" class='awrc'>136</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>117</td></tr>
<tr><td scope="row" class='awrnc'>ges enqueue table freelist</td><td align="right" class='awrnc'>246,760</td><td align="right" class='awrnc'>108</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>96</td></tr>
<tr><td scope="row" class='awrc'>ASM map operation hash table</td><td align="right" class='awrc'>5,855,132</td><td align="right" class='awrc'>104</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>91</td></tr>
<tr><td scope="row" class='awrnc'>redo writing</td><td align="right" class='awrnc'>332,661</td><td align="right" class='awrnc'>50</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>45</td></tr>
<tr><td scope="row" class='awrc'>DML lock allocation</td><td align="right" class='awrc'>245,006</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>25</td></tr>
<tr><td scope="row" class='awrnc'>lgwr LWN SCN</td><td align="right" class='awrnc'>103,107</td><td align="right" class='awrnc'>26</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>21</td></tr>
<tr><td scope="row" class='awrc'>KJC message pool free list</td><td align="right" class='awrc'>60,846</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>20</td></tr>
<tr><td scope="row" class='awrnc'>undo global data</td><td align="right" class='awrnc'>385,985</td><td align="right" class='awrnc'>22</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>17</td></tr>
<tr><td scope="row" class='awrc'>ges resource hash list</td><td align="right" class='awrc'>262,013</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>9</td></tr>
<tr><td scope="row" class='awrnc'>checkpoint queue latch</td><td align="right" class='awrnc'>1,129,582</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>12</td></tr>
<tr><td scope="row" class='awrc'>Consistent RBA</td><td align="right" class='awrc'>100,849</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td></tr>
<tr><td scope="row" class='awrnc'>call allocation</td><td align="right" class='awrnc'>152</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>gcs opaque info freelist</td><td align="right" class='awrc'>86,805</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>ges process hash list</td><td align="right" class='awrnc'>10,378</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3700"></a>
<h3 class="awr">Latch Miss Sources</h3>
<ul>
<li class="awr"> only latches with sleeps are shown </li>
<li class="awr"> ordered by name, sleeps desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays latch miss sources. Place where latch was requested, no-wait misses, sleeps, waiter sleeps are displayed for each missed latch"><tr><th class="awrbg" scope="col">Latch Name</th><th class="awrbg" scope="col">Where</th><th class="awrbg" scope="col">NoWait Misses</th><th class="awrbg" scope="col">   Sleeps</th><th class="awrbg" scope="col">Waiter Sleeps</th></tr>
<tr><td class='awrc'>ASM map operation hash table</td><td class='awrc'>kffmTranslate</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>11</td></tr>
<tr><td class='awrnc'>ASM map operation hash table</td><td class='awrnc'>kffmDoDone_1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>2</td></tr>
<tr><td class='awrc'>DML lock allocation</td><td class='awrc'>ktaiam</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>KJC message pool free list</td><td class='awrnc'>kjcsmpav: allocate a msg buffer</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>KJC message pool free list</td><td class='awrc'>kjcspfmbq: free vector of msg buffers</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjctcsnd: send normal message</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>94</td><td align="right" class='awrnc'>94</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjcts_sedeqv3: dequeue a vector of msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>6</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjcts_sqenq: queue a message</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>21</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjctr_updatetkt: update ticket info</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>9</td><td align="right" class='awrc'>16</td></tr>
<tr><td class='awrnc'>KJCT flow control latch</td><td class='awrnc'>kjctr_releasetkt: change ticket allocation</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>7</td></tr>
<tr><td class='awrc'>KJCT flow control latch</td><td class='awrc'>kjcts_sqenq2: queue a message</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>7</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbgtcr: slow path excl</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbzgb: scan from tail nowait</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kclbla</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbbic2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbbic1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbchg: aux pin</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbchg: change complete</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbgtcr: convert latch</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kcbgtcr: fast path exam</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>cache buffers chains</td><td class='awrc'>kcbzib: finish processing buffer</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>cache buffers chains</td><td class='awrnc'>kclpdcl</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers lru chain</td><td class='awrc'>kcbzgb_2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>121</td><td align="right" class='awrc'>37</td></tr>
<tr><td class='awrnc'>cache buffers lru chain</td><td class='awrnc'>kcbzgws</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>cache buffers lru chain</td><td class='awrc'>kcbbwlru</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>83</td></tr>
<tr><td class='awrnc'>cache buffers lru chain</td><td class='awrnc'>kcbo_write_bufs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>2</td></tr>
<tr><td class='awrc'>call allocation</td><td class='awrc'>ksuxds</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>checkpoint queue latch</td><td class='awrnc'>kcbklbc_cql</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclnfndnewm</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>149</td><td align="right" class='awrc'>78</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclulb</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>18</td><td align="right" class='awrnc'>68</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclfwrite1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>9</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclplz</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>KCLUNLNK</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>8</td><td align="right" class='awrc'>33</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclpdcl</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclnfnds</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>23</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclrwrite</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>7</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclplz_1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>2</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclantilock_1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclebs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>gc element</td><td class='awrnc'>kclhngcbk1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gc element</td><td class='awrc'>kclrwrite_1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gcs opaque info freelist</td><td class='awrnc'>kjbrinfoalloc</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>gcs resource freelist</td><td class='awrc'>kjbralc: check freelist nowait</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>144</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gcs resource freelist</td><td class='awrnc'>kjbralc add resource</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>42</td><td align="right" class='awrnc'>176</td></tr>
<tr><td class='awrc'>gcs resource freelist</td><td class='awrc'>kjbrralc: reserve allocation</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>9</td></tr>
<tr><td class='awrnc'>gcs resource freelist</td><td class='awrnc'>kjbrfr_bg2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>33</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbcropen</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>141</td><td align="right" class='awrc'>67</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kclfwrite1</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>9</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbopen</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>28</td><td align="right" class='awrc'>15</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbclose_remaster</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>19</td><td align="right" class='awrnc'>42</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbassume</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>27</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbmpopen</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>45</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbmpclose</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>31</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kclpdc</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>56</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbconvert</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kclrwrite</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>11</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjblocalobj_nolock</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>5</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbopen:affinity</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>gcs resource hash</td><td class='awrc'>kjbrdowncvt</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>gcs resource hash</td><td class='awrnc'>kjbrprmexpack</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges enqueue table freelist</td><td class='awrc'>kjlalc: lock allocation</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>6</td></tr>
<tr><td class='awrnc'>ges process hash list</td><td class='awrnc'>kjakiqa: set inquiry response</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges resource hash list</td><td class='awrc'>kjakcai: search for resp by resname</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>ges resource hash list</td><td class='awrnc'>kjrmas1: lookup master node</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>ges resource hash list</td><td class='awrc'>kjlmfnd: search for lockp by rename and inst id</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>messages</td><td class='awrnc'>ksarcv</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>messages</td><td class='awrc'>ksaamb: after wakeup</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>6</td></tr>
<tr><td class='awrnc'>messages</td><td class='awrnc'>ksarcv: after wait</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>4</td></tr>
<tr><td class='awrc'>mostly latch-free SCN</td><td class='awrc'>kcs024</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>mostly latch-free SCN</td><td class='awrnc'>kcsnew_scn_rba</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>object queue header operation</td><td class='awrc'>kcbo_unlink_q</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>12</td></tr>
<tr><td class='awrnc'>object queue header operation</td><td class='awrnc'>kcbo_link_q</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td></tr>
<tr><td class='awrc'>redo allocation</td><td class='awrc'>kcrfw_redo_gen: redo allocation 1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>116</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_redo_write: before write</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>38</td></tr>
<tr><td class='awrc'>redo allocation</td><td class='awrc'>kcrfw_post: more space</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>31</td></tr>
<tr><td class='awrnc'>redo allocation</td><td class='awrnc'>kcrfw_redo_gen: redo allocation 3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>79</td></tr>
<tr><td class='awrc'>redo writing</td><td class='awrc'>kcrfw_post: rba scn pair</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>redo writing</td><td class='awrnc'>kcrfw_cal_target_rba</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>4</td></tr>
<tr><td class='awrc'>redo writing</td><td class='awrc'>kcrfw_post: after write</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>redo writing</td><td class='awrnc'>kcrfwcr</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_grab_task</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>344</td><td align="right" class='awrc'>488</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_detach_task</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>115</td><td align="right" class='awrnc'>17</td></tr>
<tr><td class='awrc'>space background task latch</td><td class='awrc'>ktsj_smco_purgeexpired</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0</td></tr>
<tr><td class='awrnc'>space background task latch</td><td class='awrnc'>ktsj_smco_movetasks</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td></tr>
<tr><td class='awrc'>undo global data</td><td class='awrc'>ktudnx:child</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td></tr>
<tr><td class='awrnc'>undo global data</td><td class='awrnc'>ktudba: KSLBEGIN</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>1</td></tr>
<tr><td class='awrc'>undo global data</td><td class='awrc'>ktufrbs_2</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqgtl3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>64</td><td align="right" class='awrnc'>83</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>ksqcmi: if lk mode not requested</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>58</td><td align="right" class='awrc'>5</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqcmi: if lk mode requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>43</td><td align="right" class='awrnc'>8</td></tr>
<tr><td class='awrc'>unknown latch</td><td class='awrc'>ksqrcl</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>112</td></tr>
<tr><td class='awrnc'>unknown latch</td><td class='awrnc'>ksqcnl</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7500"></a>
<h3 class="awr">Mutex Sleep Summary</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3800"></a>
<h3 class="awr">Parent Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="3900"></a>
<h3 class="awr">Child Latch Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#29">Back to Latch Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="30"></a>
<h2 class="awr">
Segment Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4000">Segments by Logical Reads</a></li>
<li class="awr"><a class="awr" href="#4100">Segments by Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4104">Segments by Physical Read Requests</a></li>
<li class="awr"><a class="awr" href="#4108">Segments by UnOptimized Reads</a></li>
<li class="awr"><a class="awr" href="#4106">Segments by Optimized Reads</a></li>
<li class="awr"><a class="awr" href="#4110">Segments by Direct Physical Reads</a></li>
<li class="awr"><a class="awr" href="#4120">Segments by Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4124">Segments by Physical Write Requests</a></li>
<li class="awr"><a class="awr" href="#4130">Segments by Direct Physical Writes</a></li>
<li class="awr"><a class="awr" href="#4140">Segments by Table Scans</a></li>
<li class="awr"><a class="awr" href="#4150">Segments by DB Blocks Changes</a></li>
<li class="awr"><a class="awr" href="#4200">Segments by Row Lock Waits</a></li>
<li class="awr"><a class="awr" href="#4300">Segments by ITL Waits</a></li>
<li class="awr"><a class="awr" href="#4400">Segments by Buffer Busy Waits</a></li>
<li class="awr"><a class="awr" href="#4450">Segments by Global Cache Buffer Busy</a></li>
<li class="awr"><a class="awr" href="#4500">Segments by CR Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4600">Segments by Current Blocks Received</a></li>
<li class="awr"><a class="awr" href="#4605">Segments by Global Cache Remote Grants</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4000"></a>
<h3 class="awr">Segments by Logical Reads</h3>
<ul>
<li class="awr">Total Logical Reads:	   5,685,015</li>
<li class="awr">Captured Segments account for	81.9% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by logical reads. Owner, tablespace name, object type, logical read, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER3</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73417</td><td align="right" class='awrc'>73417</td><td align="right" class='awrc'>145,024</td><td align="right" class='awrc'>2.55</td></tr>
<tr><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>144,672</td><td align="right" class='awrnc'>2.54</td></tr>
<tr><td class='awrc'>USER7</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73438</td><td align="right" class='awrc'>73438</td><td align="right" class='awrc'>143,264</td><td align="right" class='awrc'>2.52</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>142,928</td><td align="right" class='awrnc'>2.51</td></tr>
<tr><td class='awrc'>USER28</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73549</td><td align="right" class='awrc'>73549</td><td align="right" class='awrc'>140,240</td><td align="right" class='awrc'>2.47</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4100"></a>
<h3 class="awr">Segments by Physical Reads</h3>
<ul>
<li class="awr">Total Physical Reads:	    2,350,386</li>
<li class="awr">Captured Segments account for	99.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical reads. Owner, tablespace name, object type, physical reads, etc. are displayed for each segment "><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	 Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER3</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>138,333</td><td align="right" class='awrc'>5.89</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>136,847</td><td align="right" class='awrnc'>5.82</td></tr>
<tr><td class='awrc'>USER28</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73541</td><td align="right" class='awrc'>73548</td><td align="right" class='awrc'>134,261</td><td align="right" class='awrc'>5.71</td></tr>
<tr><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>133,752</td><td align="right" class='awrnc'>5.69</td></tr>
<tr><td class='awrc'>USER11</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73449</td><td align="right" class='awrc'>73456</td><td align="right" class='awrc'>128,837</td><td align="right" class='awrc'>5.48</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4104"></a>
<h3 class="awr">Segments by Physical Read Requests</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    2,350,386</li>
<li class="awr">Captured Segments account for	99.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical read requests. Owner, tablespace name, object type, physical read requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Read Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER3</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>138,333</td><td align="right" class='awrc'>5.89</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>136,847</td><td align="right" class='awrnc'>5.82</td></tr>
<tr><td class='awrc'>USER28</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73541</td><td align="right" class='awrc'>73548</td><td align="right" class='awrc'>134,261</td><td align="right" class='awrc'>5.71</td></tr>
<tr><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>133,752</td><td align="right" class='awrnc'>5.69</td></tr>
<tr><td class='awrc'>USER11</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73449</td><td align="right" class='awrc'>73456</td><td align="right" class='awrc'>128,837</td><td align="right" class='awrc'>5.48</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4108"></a>
<h3 class="awr">Segments by UnOptimized Reads</h3>
<ul>
<li class="awr">Total UnOptimized Read Requests:       2,350,386</li>
<li class="awr">Captured Segments account for	99.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by unoptimized reads. Owner, tablespace name, object type, unoptimized reads, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">UnOptimized Reads</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER3</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>138,333</td><td align="right" class='awrc'>5.89</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>136,847</td><td align="right" class='awrnc'>5.82</td></tr>
<tr><td class='awrc'>USER28</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73541</td><td align="right" class='awrc'>73548</td><td align="right" class='awrc'>134,261</td><td align="right" class='awrc'>5.71</td></tr>
<tr><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>133,752</td><td align="right" class='awrnc'>5.69</td></tr>
<tr><td class='awrc'>USER11</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73449</td><td align="right" class='awrc'>73456</td><td align="right" class='awrc'>128,837</td><td align="right" class='awrc'>5.48</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4106"></a>
<h3 class="awr">Segments by Optimized Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4110"></a>
<h3 class="awr">Segments by Direct Physical Reads</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4120"></a>
<h3 class="awr">Segments by Physical Writes</h3>
<ul>
<li class="awr">Total Physical Writes:	       337,949</li>
<li class="awr">Captured Segments account for	96.4% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical writes. Owner, tablespace name, object type, physical writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>21,252</td><td align="right" class='awrc'>6.29</td></tr>
<tr><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>19,108</td><td align="right" class='awrnc'>5.65</td></tr>
<tr><td class='awrc'>USER7</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73433</td><td align="right" class='awrc'>73436</td><td align="right" class='awrc'>18,818</td><td align="right" class='awrc'>5.57</td></tr>
<tr><td class='awrnc'>USER28</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73541</td><td align="right" class='awrnc'>73548</td><td align="right" class='awrnc'>18,508</td><td align="right" class='awrnc'>5.48</td></tr>
<tr><td class='awrc'>USER11</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73449</td><td align="right" class='awrc'>73456</td><td align="right" class='awrc'>17,629</td><td align="right" class='awrc'>5.22</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4124"></a>
<h3 class="awr">Segments by Physical Write Requests</h3>
<ul>
<li class="awr">Total Physical Write Requests:	       324,628</li>
<li class="awr">Captured Segments account for	99.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by physical write requests. Owner, tablespace name, object type, physical write requests, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Phys Write Requests</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>21,221</td><td align="right" class='awrc'>6.54</td></tr>
<tr><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>18,954</td><td align="right" class='awrnc'>5.84</td></tr>
<tr><td class='awrc'>USER7</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73433</td><td align="right" class='awrc'>73436</td><td align="right" class='awrc'>18,648</td><td align="right" class='awrc'>5.74</td></tr>
<tr><td class='awrnc'>USER28</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73541</td><td align="right" class='awrnc'>73548</td><td align="right" class='awrnc'>18,361</td><td align="right" class='awrnc'>5.66</td></tr>
<tr><td class='awrc'>USER11</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73449</td><td align="right" class='awrc'>73456</td><td align="right" class='awrc'>17,482</td><td align="right" class='awrc'>5.39</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4130"></a>
<h3 class="awr">Segments by Direct Physical Writes</h3>
<ul>
<li class="awr">Total Direct Physical Writes:		   62</li>
<li class="awr">Captured Segments account for  100.0% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by direct physical writes. Owner, tablespace name, object type, direct writes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Direct Writes</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td>
<td scope="row" class='awrc'>WRH$_ACTIVE_SESSION_HISTORY</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_131</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>74322</td><td align="right" class='awrc'>74322</td><td align="right" class='awrc'>62</td><td align="right" class='awrc'>100.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4140"></a>
<h3 class="awr">Segments by Table Scans</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4150"></a>
<h3 class="awr">Segments by DB Blocks Changes</h3>
<ul>
<li class="awr"> % of Capture shows % of DB Block Changes for each top segment compared  </li>
<li class="awr"> with total DB Block Changes for all segments captured by the Snapshot </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by DB blocks changes. Owner, tablespace name, object type, db block changes, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">DB Block Changes</th><th class="awrbg" scope="col">% of Capture</th></tr>
<tr><td class='awrc'>USER3</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>21,696</td><td align="right" class='awrc'>5.85</td></tr>
<tr><td class='awrnc'>USER10</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73453</td><td align="right" class='awrnc'>73455</td><td align="right" class='awrnc'>21,664</td><td align="right" class='awrnc'>5.84</td></tr>
<tr><td class='awrc'>USER7</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73433</td><td align="right" class='awrc'>73436</td><td align="right" class='awrc'>21,424</td><td align="right" class='awrc'>5.78</td></tr>
<tr><td class='awrnc'>USER28</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73541</td><td align="right" class='awrnc'>73548</td><td align="right" class='awrnc'>20,976</td><td align="right" class='awrnc'>5.66</td></tr>
<tr><td class='awrc'>USER16</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73481</td><td align="right" class='awrc'>73483</td><td align="right" class='awrc'>20,752</td><td align="right" class='awrc'>5.59</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4200"></a>
<h3 class="awr">Segments by Row Lock Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4300"></a>
<h3 class="awr">Segments by ITL Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4400"></a>
<h3 class="awr">Segments by Buffer Busy Waits</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4450"></a>
<h3 class="awr">Segments by Global Cache Buffer Busy</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4500"></a>
<h3 class="awr">Segments by CR Blocks Received</h3>
<ul>
<li class="awr">Total CR Blocks Received:	    2,788</li>
<li class="awr">Captured Segments account for	96.9% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by CR blocks received. Owner, tablespace name, object type, CR blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject	Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">CR    Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER20</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73501</td><td align="right" class='awrc'>73506</td><td align="right" class='awrc'>404</td><td align="right" class='awrc'>14.49</td></tr>
<tr><td class='awrnc'>USER21</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73503</td><td align="right" class='awrnc'>73505</td><td align="right" class='awrnc'>370</td><td align="right" class='awrnc'>13.27</td></tr>
<tr><td class='awrc'>USER40</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73603</td><td align="right" class='awrc'>73605</td><td align="right" class='awrc'>233</td><td align="right" class='awrc'>8.36</td></tr>
<tr><td class='awrnc'>USER32</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73562</td><td align="right" class='awrnc'>73567</td><td align="right" class='awrnc'>231</td><td align="right" class='awrnc'>8.29</td></tr>
<tr><td class='awrc'>USER13</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73458</td><td align="right" class='awrc'>73466</td><td align="right" class='awrc'>224</td><td align="right" class='awrc'>8.03</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4600"></a>
<h3 class="awr">Segments by Current Blocks Received</h3>
<ul>
<li class="awr">Total Current Blocks Received:		11,163</li>
<li class="awr">Captured Segments account for	97.0% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by current blocks received. Owner, tablespace name, object type, Current blocks received, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace	 Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Current Blocks  Received</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER21</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73503</td><td align="right" class='awrc'>73505</td><td align="right" class='awrc'>1,289</td><td align="right" class='awrc'>11.55</td></tr>
<tr><td class='awrnc'>USER20</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73501</td><td align="right" class='awrnc'>73506</td><td align="right" class='awrnc'>1,241</td><td align="right" class='awrnc'>11.12</td></tr>
<tr><td class='awrc'>USER17</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73486</td><td align="right" class='awrc'>73488</td><td align="right" class='awrc'>804</td><td align="right" class='awrc'>7.20</td></tr>
<tr><td class='awrnc'>USER32</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73562</td><td align="right" class='awrnc'>73567</td><td align="right" class='awrnc'>780</td><td align="right" class='awrnc'>6.99</td></tr>
<tr><td class='awrc'>USER40</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73603</td><td align="right" class='awrc'>73605</td><td align="right" class='awrc'>773</td><td align="right" class='awrc'>6.92</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4605"></a>
<h3 class="awr">Segments by Global Cache Remote Grants</h3>
<ul>
<li class="awr">Total Global Cache Remote Grants:	1,155,964</li>
<li class="awr">Captured Segments account for	99.6% of Total</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="This table displays top segments by gc remote grants. Owner, tablespace name, object type, gc remote grants, etc. are displayed for each segment"><tr><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace    Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject   Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">GC Remote Grants</th><th class="awrbg" scope="col">%Total</th></tr>
<tr><td class='awrc'>USER28</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73541</td><td align="right" class='awrc'>73548</td><td align="right" class='awrc'>78,504</td><td align="right" class='awrc'>6.79</td></tr>
<tr><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>72,461</td><td align="right" class='awrnc'>6.27</td></tr>
<tr><td class='awrc'>USER40</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73603</td><td align="right" class='awrc'>73605</td><td align="right" class='awrc'>72,045</td><td align="right" class='awrc'>6.23</td></tr>
<tr><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td>
<td scope="row" class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>70,370</td><td align="right" class='awrnc'>6.09</td></tr>
<tr><td class='awrc'>USER11</td><td class='awrc'>IOPS</td>
<td scope="row" class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73449</td><td align="right" class='awrc'>73456</td><td align="right" class='awrc'>64,592</td><td align="right" class='awrc'>5.59</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#30">Back to Segment Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="31"></a>
<h2 class="awr">
Dictionary Cache Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4700">Dictionary Cache Stats</a></li>
<li class="awr"><a class="awr" href="#4800">Dictionary Cache Stats (RAC)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4700"></a>
<h3 class="awr">Dictionary Cache Stats</h3>
<ul>
<li class="awr"> &quot;Pct Misses&quot;  should be very low (&lt; 2% in most cases) </li>
<li class="awr"> &quot;Final Usage&quot; is the number of cache entries being used</li>
</ul>
<table border="0" class="tdiff" summary="This table displays dictionary cache statistics. Get requests, % misses, scan requests, final usage, etc. are displayed for each cache"><tr><th class="awrbg" scope="col">Cache</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Scan Reqs</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Mod Reqs</th><th class="awrbg" scope="col">Final Usage</th></tr>
<tr><td scope="row" class='awrc'>dc_awr_control</td><td align="right" class='awrc'>18</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>dc_global_oids</td><td align="right" class='awrnc'>168</td><td align="right" class='awrnc'>2.38</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>207</td></tr>
<tr><td scope="row" class='awrc'>dc_histogram_data</td><td align="right" class='awrc'>367</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>3,578</td></tr>
<tr><td scope="row" class='awrnc'>dc_histogram_defs</td><td align="right" class='awrnc'>124</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>6,746</td></tr>
<tr><td scope="row" class='awrc'>dc_objects</td><td align="right" class='awrc'>897</td><td align="right" class='awrc'>0.11</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2,818</td></tr>
<tr><td scope="row" class='awrnc'>dc_profiles</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>1</td></tr>
<tr><td scope="row" class='awrc'>dc_props</td><td align="right" class='awrc'>492</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td></tr>
<tr><td scope="row" class='awrnc'>dc_rollback_segments</td><td align="right" class='awrnc'>981</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>320</td></tr>
<tr><td scope="row" class='awrc'>dc_segments</td><td align="right" class='awrc'>31</td><td align="right" class='awrc'>6.45</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>677</td></tr>
<tr><td scope="row" class='awrnc'>dc_sequences</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>20.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>6</td></tr>
<tr><td scope="row" class='awrc'>dc_tablespaces</td><td align="right" class='awrc'>159</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td></tr>
<tr><td scope="row" class='awrnc'>dc_users</td><td align="right" class='awrnc'>166</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>233</td></tr>
<tr><td scope="row" class='awrc'>outstanding_alerts</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>2</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4800"></a>
<h3 class="awr">Dictionary Cache Stats (RAC)</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#31">Back to Dictionary Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="32"></a>
<h2 class="awr">
Library Cache Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#4900">Library Cache Activity</a></li>
<li class="awr"><a class="awr" href="#5000">Library Cache Activity (RAC)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="4900"></a>
<h3 class="awr">Library Cache Activity</h3>
<ul>
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
</ul>
<table border="0" class="tdiff" summary="This table displays library cache statistics. Get requests, % misses, pin request, % miss, reloads, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>ACCOUNT_STATUS</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>AUDIT POLICY</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>DBLINK</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>INDEX</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SCHEMA</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA</td><td align="right" class='awrnc'>403</td><td align="right" class='awrnc'>4.47</td><td align="right" class='awrnc'>816,658</td><td align="right" class='awrnc'>-0.09</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA BUILD</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>64.29</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA STATS</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>87.50</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>87.50</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TABLE/PROCEDURE</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>451</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRIGGER</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>7</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#32">Back to Library Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5000"></a>
<h3 class="awr">Library Cache Activity (RAC)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays library cache statistics. Ges lock requests, GES pin requests, GES pin releases, etc. are displayed for each library cache namespace"><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>ACCOUNT_STATUS</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>AUDIT POLICY</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>55</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>DBLINK</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>EDITION</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>INDEX</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>17</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SCHEMA</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TABLE/PROCEDURE</td><td align="right" class='awrnc'>137</td><td align="right" class='awrnc'>312</td><td align="right" class='awrnc'>312</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TRIGGER</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#32">Back to Library Cache Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="33"></a>
<h2 class="awr">
Memory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#8500">Memory Dynamic Components</a></li>
<li class="awr"><a class="awr" href="#8600">Memory Resize Operations Summary</a></li>
<li class="awr"><a class="awr" href="#8650">Memory Resize Ops</a></li>
<li class="awr"><a class="awr" href="#7300">Process Memory Summary</a></li>
<li class="awr"><a class="awr" href="#5900">SGA Memory Summary</a></li>
<li class="awr"><a class="awr" href="#6100">SGA breakdown difference by Pool and Name</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8500"></a>
<h3 class="awr">Memory Dynamic Components</h3>
<ul>
<li class="awr"> Min/Max sizes since instance startup </li>
<li class="awr"> Oper Types/Modes: INItializing,GROw,SHRink,STAtic/IMMediate,DEFerred </li>
<li class="awr"> ordered by Component </li>
</ul>
<table border="0" class="tdiff" summary="This table displays memory dynamic component statistics. Begin snap size, current size, min size, etc. are displayed for each component"><tr><th class="awrbg" scope="col">Component</th><th class="awrbg" scope="col">Begin Snap Size (Mb)</th><th class="awrbg" scope="col">Current Size (Mb)</th><th class="awrbg" scope="col">Min Size (Mb)</th><th class="awrbg" scope="col">Max Size (Mb)</th><th class="awrbg" scope="col">Oper Count</th><th class="awrbg" scope="col">Last Op Typ/Mod</th></tr>
<tr><td scope="row" class='awrc'>ASM Buffer Cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 16K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT 2K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 32K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT 4K buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>DEFAULT 8K buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>DEFAULT buffer cache</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>8,000.00</td><td align="right" class='awrc'>0</td><td class='awrc'>INI/</td></tr>
<tr><td scope="row" class='awrnc'>Data Transfer Cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>In Memory RO Extension Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>In Memory RW Extension Area</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>In-Memory Area</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>KEEP buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>PGA Target</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>3,232.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>RECYCLE buffer cache</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>SGA Target</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>9,664.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>Shared IO Pool</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>128.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>java pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>large pool</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>64.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>memoptimize buffer cache</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>shared pool</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>1,440.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
<tr><td scope="row" class='awrc'>streams pool</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td class='awrc'>STA/</td></tr>
<tr><td scope="row" class='awrnc'>unified pga pool</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td class='awrnc'>STA/</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8600"></a>
<h3 class="awr">Memory Resize Operations Summary</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8650"></a>
<h3 class="awr">Memory Resize Ops</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7300"></a>
<h3 class="awr">Process Memory Summary</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap  </li>
<li class="awr"> All rows below contain absolute values (i.e. not diffed over the interval) </li>
<li class="awr"> Max Alloc is Maximum PGA Allocation size at snapshot time  </li>
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>
<li class="awr"> ordered by Begin/End snapshot, Alloc (MB) desc </li>
<li class="awr"> Top 10 containers by Alloc (MB) at end snapshot time are displayed</li>
</ul>
<table border="0" class="tdiff" summary="This table displays process memory summary. Allocation, used, average allocation, etc. are displayed for different category of process memory."><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
<tr><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>144.56</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.25</td><td align="right" class='awrc'>7.84</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>34</td></tr>
<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>595.67</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>4.65</td><td align="right" class='awrnc'>6.75</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>128</td><td align="right" class='awrnc'>128</td></tr>
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>14.85</td><td align="right" class='awrc'>14.12</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>109</td></tr>
<tr><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>8.97</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>46</td></tr>
<tr><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>764.06</td><td align="right" class='awrc'>21.72</td><td align="right" class='awrc'>9.19</td><td align="right" class='awrc'>15.20</td><td align="right" class='awrc'>73</td><td align="right" class='awrc'>52</td><td align="right" class='awrc'>332</td><td align="right" class='awrc'>317</td></tr>
<tr><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>139.50</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.98</td><td align="right" class='awrnc'>8.53</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>28</td></tr>
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>506.99</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>4.65</td><td align="right" class='awrc'>7.22</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>109</td></tr>
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>5.87</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.27</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>90</td></tr>
<tr><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>1.39</td><td align="right" class='awrc'>1.09</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>26</td></tr>
<tr><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>653.76</td><td align="right" class='awrnc'>6.38</td><td align="right" class='awrnc'>9.73</td><td align="right" class='awrnc'>16.15</td><td align="right" class='awrnc'>76</td><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>269</td><td align="right" class='awrnc'>253</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5900"></a>
<h3 class="awr">SGA Memory Summary</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA memory summary. For each SGA region, begin size and end size is displayed."><tr><th class="awrbg" scope="col">SGA regions</th><th class="awrbg" scope="col">Begin Size (Bytes)</th><th class="awrbg" scope="col">End Size (Bytes) (if different)</th></tr>
<tr><td scope="row" class='awrc'>Database Buffers</td><td align="right" class='awrc'>8,522,825,728</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Fixed Size</td><td align="right" class='awrnc'>12,445,928</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Redo Buffers</td><td align="right" class='awrc'>21,106,688</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Variable Size</td><td align="right" class='awrnc'>1,577,058,304</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6100"></a>
<h3 class="awr">SGA breakdown difference by Pool and Name</h3>
<ul>
<li class="awr"> ordered by Pool, Name	</li>
<li class="awr"> N/A value for Begin MB or End MB indicates the size of that Pool/Name was    insignificant, or zero in that snapshot</li>
</ul>
<table border="0" class="tdiff" summary="This table displays SGA breakdown difference. For each pool name, begin and end size are displayed."><tr><th class="awrbg" scope="col">Pool</th><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Begin MB</th><th class="awrbg" scope="col">End MB</th><th class="awrbg" scope="col">% Diff</th></tr>
<tr><td class='awrc'>large</td><td class='awrc'>PX msg pool</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>15.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>large</td><td class='awrnc'>free memory</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>48.63</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>ASH buffers</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>16.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>KGLH0</td><td align="right" class='awrnc'>49.00</td><td align="right" class='awrnc'>48.93</td><td align="right" class='awrnc'>-0.14</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>KGLS</td><td align="right" class='awrc'>15.75</td><td align="right" class='awrc'>15.50</td><td align="right" class='awrc'>-1.62</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>KJSC rnb slots</td><td align="right" class='awrnc'>20.36</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>-100.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>SO private sga</td><td align="right" class='awrc'>28.73</td><td align="right" class='awrc'>28.73</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>SQLA</td><td align="right" class='awrnc'>268.72</td><td align="right" class='awrnc'>268.21</td><td align="right" class='awrnc'>-0.19</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>db_block_hash_buckets</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>free memory</td><td align="right" class='awrnc'>86.26</td><td align="right" class='awrnc'>96.86</td><td align="right" class='awrnc'>12.29</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gc name table</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>32.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gcs resources</td><td align="right" class='awrnc'>271.02</td><td align="right" class='awrnc'>271.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>gcs resv res hash bucket</td><td align="right" class='awrc'>48.00</td><td align="right" class='awrc'>48.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>gcs shadows</td><td align="right" class='awrnc'>147.83</td><td align="right" class='awrnc'>147.83</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>ges big msg buffers</td><td align="right" class='awrc'>26.29</td><td align="right" class='awrc'>26.29</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>shared</td><td class='awrnc'>ksunfy_meta 1</td><td align="right" class='awrnc'>25.03</td><td align="right" class='awrnc'>25.03</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>shared</td><td class='awrc'>row cache</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>buffer_cache</td><td align="right" class='awrnc'>8,000.00</td><td align="right" class='awrnc'>8,000.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>fixed_sga</td><td align="right" class='awrc'>11.87</td><td align="right" class='awrc'>11.87</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>&#160;</td><td class='awrnc'>log_buffer</td><td align="right" class='awrnc'>20.13</td><td align="right" class='awrnc'>20.13</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td class='awrc'>&#160;</td><td class='awrc'>shared_io_pool</td><td align="right" class='awrc'>128.00</td><td align="right" class='awrc'>128.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#33">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="39"></a>
<h2 class="awr">
Replication Statistics (GoldenGate, XStream)
</h2>
<ul>
<li class="awr"><a class="awr" href="#9000">Replication System Resource Usage</a></li>
<li class="awr"><a class="awr" href="#9010">Replication SGA Usage</a></li>
<li class="awr"><a class="awr" href="#9020">GoldenGate Capture</a></li>
<li class="awr"><a class="awr" href="#9030">GoldenGate Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9040">GoldenGate Apply Reader</a></li>
<li class="awr"><a class="awr" href="#9041">GoldenGate Apply Coordinator</a></li>
<li class="awr"><a class="awr" href="#9042">GoldenGate Apply Server</a></li>
<li class="awr"><a class="awr" href="#9051">GoldenGate Apply Coordinator Rate</a></li>
<li class="awr"><a class="awr" href="#9050">GoldenGate Apply Reader and Server Rate</a></li>
<li class="awr"><a class="awr" href="#9060">XStream Capture</a></li>
<li class="awr"><a class="awr" href="#9070">XStream Capture Rate</a></li>
<li class="awr"><a class="awr" href="#9080">XStream Apply Reader</a></li>
<li class="awr"><a class="awr" href="#9081">XStream Apply Coordinator</a></li>
<li class="awr"><a class="awr" href="#9082">XStream Apply Server</a></li>
<li class="awr"><a class="awr" href="#9091">XStream Apply Coordinator Rate</a></li>
<li class="awr"><a class="awr" href="#9090">XStream Apply Reader and Server Rate</a></li>
<li class="awr"><a class="awr" href="#9100">Table Statistics by DML Operations</a></li>
<li class="awr"><a class="awr" href="#9110">Table Statistics by Conflict Resolutions</a></li>
<li class="awr"><a class="awr" href="#9120">Replication Large Transaction Statistics</a></li>
<li class="awr"><a class="awr" href="#9130">Replication Long Running Transaction Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9000"></a>
<h3 class="awr">Replication System Resource Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9010"></a>
<h3 class="awr">Replication SGA Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9020"></a>
<h3 class="awr">GoldenGate Capture</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9030"></a>
<h3 class="awr">GoldenGate Capture Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9040"></a>
<h3 class="awr">GoldenGate Apply Reader</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9041"></a>
<h3 class="awr">GoldenGate Apply Coordinator</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9042"></a>
<h3 class="awr">GoldenGate Apply Server</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9051"></a>
<h3 class="awr">GoldenGate Apply Coordinator Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9050"></a>
<h3 class="awr">GoldenGate Apply Reader and Server Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9060"></a>
<h3 class="awr">XStream Capture</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9070"></a>
<h3 class="awr">XStream Capture Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9080"></a>
<h3 class="awr">XStream Apply Reader</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9081"></a>
<h3 class="awr">XStream Apply Coordinator</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9082"></a>
<h3 class="awr">XStream Apply Server</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9091"></a>
<h3 class="awr">XStream Apply Coordinator Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9090"></a>
<h3 class="awr">XStream Apply Reader and Server Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9100"></a>
<h3 class="awr">Table Statistics by DML Operations</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9110"></a>
<h3 class="awr">Table Statistics by Conflict Resolutions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9120"></a>
<h3 class="awr">Replication Large Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9130"></a>
<h3 class="awr">Replication Long Running Transaction Statistics</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#39">Back to Replication Statistics (GoldenGate, XStream)</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="34"></a>
<h2 class="awr">
Advanced Queuing
</h2>
<ul>
<li class="awr"><a class="awr" href="#6150">Advanced Queue CPU/IO Usage</a></li>
<li class="awr"><a class="awr" href="#6400">Buffered Queues</a></li>
<li class="awr"><a class="awr" href="#6500">Buffered Queue Subscribers</a></li>
<li class="awr"><a class="awr" href="#6600">Rule Set</a></li>
<li class="awr"><a class="awr" href="#7600">Persistent Queues</a></li>
<li class="awr"><a class="awr" href="#7610">Persistent Queues Rate</a></li>
<li class="awr"><a class="awr" href="#7700">Persistent Queue Subscribers</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6150"></a>
<h3 class="awr">Advanced Queue CPU/IO Usage</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6400"></a>
<h3 class="awr">Buffered Queues</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6500"></a>
<h3 class="awr">Buffered Queue Subscribers</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6600"></a>
<h3 class="awr">Rule Set</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7600"></a>
<h3 class="awr">Persistent Queues</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7610"></a>
<h3 class="awr">Persistent Queues Rate</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7700"></a>
<h3 class="awr">Persistent Queue Subscribers</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#34">Back to Advanced Queuing</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="6700"></a>
<h3 class="awr">Resource Limit Stats</h3>
<ul>
<li class="awr"> Only rows with Current or Maximum Utilization &gt; 80% of Limit are shown  </li>
<li class="awr"> For &quot;UNLIMITED&quot; resources, rows whose Current or Maximum Utilization    exceeds 2*Initial Allocation are shown </li>
<li class="awr"> Ordered by Resource Name</li>
</ul>
<table border="0" class="tdiff" summary="This table displays resource limit statistics. Current utilization, maximum utilization, initial allocation and limit are displayed for each resource name"><tr><th class="awrbg" scope="col">Resource Name</th><th class="awrbg" scope="col">Current	 Utilization</th><th class="awrbg" scope="col">Maximum	 Utilization</th><th class="awrbg" scope="col">  Initial Allocation</th><th class="awrbg" scope="col">	Limit</th></tr>
<tr><td scope="row" class='awrc'>ges_cache_ress</td><td align="right" class='awrc'>2,835</td><td align="right" class='awrc'>3,508</td><td class='awrc'>0</td><td class='awrc'>UNLIMITED</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="37"></a>
<h2 class="awr">
Shared Server Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#8710">Shared Servers Activity</a></li>
<li class="awr"><a class="awr" href="#8720">Shared Servers Rates</a></li>
<li class="awr"><a class="awr" href="#8730">Shared Servers Utilization</a></li>
<li class="awr"><a class="awr" href="#8740">Shared Servers Common Queue</a></li>
<li class="awr"><a class="awr" href="#8750">Shared Servers Dispatchers</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8710"></a>
<h3 class="awr">Shared Servers Activity</h3>
<ul>
<li class="awr"> Values represent averages for all samples</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers activity statistics. It displays average total connections, average active connections, average total shared servers, etc."><tr><th class="awrbg" scope="col">Avg Total Connections</th><th class="awrbg" scope="col">Avg Active Connections</th><th class="awrbg" scope="col">Avg Total Shared Srvrs</th><th class="awrbg" scope="col">Avg Active Shared Srvrs</th><th class="awrbg" scope="col">Avg Total Dispatchers</th><th class="awrbg" scope="col">Avg Active Dispatchers</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8720"></a>
<h3 class="awr">Shared Servers Rates</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers rate statistics. It displays common queue per second, disp queue per second, server messages per second, common queue total, etc."><tr><th class="awrbg" scope="col">Common Queue Per Sec</th><th class="awrbg" scope="col">Disp Queue Per Sec</th><th class="awrbg" scope="col">Server Msgs/Sec</th><th class="awrbg" scope="col">Server KB/Sec</th><th class="awrbg" scope="col">Common Queue Total</th><th class="awrbg" scope="col">Disp Queue Total</th><th class="awrbg" scope="col">Server Total Msgs</th><th class="awrbg" scope="col">Server Total(KB)</th></tr>
<tr><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8730"></a>
<h3 class="awr">Shared Servers Utilization</h3>
<ul>
<li class="awr"> Statistics are combined for all servers </li>
<li class="awr"> Incoming and Outgoing Net % are included in %Busy</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers utilization statistics. It displays total server time second, % busy, % idle, incoming net %, outgoing net %, etc."><tr><th class="awrbg" scope="col">Total Server Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Incoming Net %</th><th class="awrbg" scope="col">Outgoing Net %</th></tr>
<tr><td align="right" class='awrc'>604</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8740"></a>
<h3 class="awr">Shared Servers Common Queue</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8750"></a>
<h3 class="awr">Shared Servers Dispatchers</h3>
<ul>
<li class="awr"> Ordered by %Busy, descending </li>
<li class="awr"> Total Queued, Total Queue Wait and Avg Queue Wait are for dispatcher queue </li>
<li class="awr"> Name suffixes:       &quot;(N)&quot; - dispatcher started between begin and end snapshots	&quot;(R)&quot; - dispatcher re-started between begin and end snapshots</li>
</ul>
<table border="0" class="tdiff" summary="This table displays shared servers dispatcher statistics. Average connections, total dispatch time, % busy, % idle, total queued, total queued wait, etc. are displayed for each dispatcher"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Avg Conns</th><th class="awrbg" scope="col">Total Disp Time (s)</th><th class="awrbg" scope="col">%Busy</th><th class="awrbg" scope="col">%Idle</th><th class="awrbg" scope="col">Total Queued</th><th class="awrbg" scope="col">Total Queue Wait (s)</th><th class="awrbg" scope="col">Avg Queue Wait (ms)</th></tr>
<tr><td scope="row" class='awrc'>D000</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>604</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>100.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#37">Back to Shared Server Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="36"></a>
<h2 class="awr">
Initialization Parameters
</h2>
<ul>
<li class="awr"><a class="awr" href="#6800">Modified Parameters</a></li>
<li class="awr"><a class="awr" href="#6850">Modified Multi-Valued Parameters</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6800"></a>
<h3 class="awr">Modified Parameters</h3>
<ul>
<li class="awr"> This section shows all the modified initialization parameters that  were in effect during the entire snapshot interval </li>
<li class="awr"> End Value is displayed only if the parameter value was modified within the snapshot interval</li>
</ul>
<table border="0" class="tdiff" summary="This table displays name and value of the modified initialization parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>TRUE</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>DB</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>TRUE</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>19.0.0</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>8192</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>+DATA</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>example.com</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>p30db</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>+FRA</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>274877906944</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>1</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>listener_networks</td><td class='awrnc'>&#160;&#160;</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>local_listener</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522))</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>AMERICAN</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>AMERICA</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>300</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>3371171840</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>640</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>10133438464</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>1</td><td class='awrnc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo_tablespace</td><td class='awrc'>UNDOTBS1</td><td class='awrc'>&#160;&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#36">Back to Initialization Parameters</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="6850"></a>
<h3 class="awr">Modified Multi-Valued Parameters</h3>
<ul>
<li class="awr"> This section only displays parameters that have more than one value </li>
<li class="awr">'(NULL)' indicates a missing parameter value </li>
<li class="awr"> A blank in the 'End Snapshot' indicates the same value as the 'Begin Snapshot'</li>
</ul>
<table border="0" class="tdiff" summary="This table displays name and value of multi-valued parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>control_files</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'>&#160;&#160;</td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'>&#160;&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#36">Back to Initialization Parameters</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="42"></a>
<h2 class="awr">
Active Session History (ASH) Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#9990">Top SQL with Top Events</a></li>
<li class="awr"><a class="awr" href="#9989">Top SQL with Top Row Sources</a></li>
<li class="awr"><a class="awr" href="#9993">Top Sessions</a></li>
<li class="awr"><a class="awr" href="#9992">Top Blocking Sessions</a></li>
<li class="awr"><a class="awr" href="#9991">Top PL/SQL Procedures</a></li>
<li class="awr"><a class="awr" href="#9988">Top Events</a></li>
<li class="awr"><a class="awr" href="#9994">Top Event P1/P2/P3 Values</a></li>
<li class="awr"><a class="awr" href="#9987">Top DB Objects</a></li>
<li class="awr"><a class="awr" href="#9986">Activity Over Time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9990"></a>
<h3 class="awr">Top SQL with Top Events</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>944</td><td align="right" class='awrc'>78.10</td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>70.33</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>70.33</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrnc'><div class="hidden">1497866750</div></td><td align="right" class='awrnc'><div class="hidden">944</div></td><td align="right" class='awrnc'><div class="hidden">78.09917355371900826446280991735537190083</div></td>
<td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>3.80</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>2.89</td>
<td class='awrnc'></td></tr>
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">944</div></td><td align="right" class='awrc'><div class="hidden">78.09917355371900826446280991735537190083</div></td>
<td class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>3.80</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>3.80</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>146</td><td align="right" class='awrnc'>12.07</td>
<td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>10.41</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>10.41</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">35dumc2tpr9dv</div></td><td align="right" class='awrc'><div class="hidden">203653710</div></td><td align="right" class='awrc'><div class="hidden">146</div></td><td align="right" class='awrc'><div class="hidden">12.06611570247933884297520661157024793388</div></td>
<td class='awrc'>gc current grant 2-way</td><td align="right" class='awrc'>1.16</td><td class='awrc'>UPDATE</td><td align="right" class='awrc'>1.16</td>
<td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9989"></a>
<h3 class="awr">Top SQL with Top Row Sources</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>944</td><td align="right" class='awrc'>78.10</td>
<td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>77.11</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>70.33</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>146</td><td align="right" class='awrnc'>12.07</td>
<td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>11.98</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>10.41</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9993"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>18,58372</td><td align="right" class='awrc'>4.79</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.30</td>
<td class='awrc'>USER22</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>52/61 [ 86%]</td><td align="right" class='awrc'>4</td></tr>
<tr><td align="right" scope="row" class='awrnc'>137,13399</td><td align="right" class='awrnc'>4.79</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.05</td>
<td class='awrnc'>USER20</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>49/61 [ 81%]</td><td align="right" class='awrnc'>4</td></tr>
<tr><td align="right" scope="row" class='awrc'>138,51898</td><td align="right" class='awrc'>4.79</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.21</td>
<td class='awrc'>USER10</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>51/61 [ 84%]</td><td align="right" class='awrc'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>267, 4184</td><td align="right" class='awrnc'>4.79</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.13</td>
<td class='awrnc'>USER32</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>50/61 [ 83%]</td><td align="right" class='awrnc'>5</td></tr>
<tr><td align="right" scope="row" class='awrc'>382,46337</td><td align="right" class='awrc'>4.79</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.30</td>
<td class='awrc'>USER33</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>52/61 [ 86%]</td><td align="right" class='awrc'>5</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9992"></a>
<h3 class="awr">Top Blocking Sessions</h3>
<ul>
<li class="awr"> Blocking session activity percentages are calculated with respect to	     waits on enqueues, latches and &quot;buffer busy&quot; only  </li>
<li class="awr"> '% Activity' represents the load on the database caused by	   a particular blocking session </li>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the	blocking session was found active. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the blocking session was found active.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top sessions that are blocking other sessions."><tr><th class="awrbg" scope="col">Blocking Sid (Inst)</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event Caused</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>374,14000(     1)</td><td align="right" class='awrc'>1.65</td><td class='awrc'>LGWR any worker group</td><td align="right" class='awrc'>1.32</td>
<td class='awrc'>SYS</td><td class='awrc'>oracle@mcracpo...le.com (LG00)</td><td align="right" class='awrc'>32/61 [ 53%]</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9991"></a>
<h3 class="awr">Top PL/SQL Procedures</h3>
<ul>
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>12.31</td>
<td class='awrc'>SQL</td><td align="right" class='awrc'>12.31</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9988"></a>
<h3 class="awr">Top Events</h3>
<ul>
<li class="awr"> Top Events by DB Time </li>
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>80.74</td><td align="right" class='awrc'>16.15</td></tr>
<tr><td scope="row" class='awrnc'>CPU + Wait for CPU</td><td class='awrnc'>CPU</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>5.21</td><td align="right" class='awrnc'>1.04</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td class='awrc'>System I/O</td><td class='awrc'>BACKGROUND</td>
<td align="right" class='awrc'>4.30</td><td align="right" class='awrc'>0.86</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td class='awrnc'>Cluster</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>3.80</td><td align="right" class='awrnc'>0.76</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>BACKGROUND</td>
<td align="right" class='awrc'>2.15</td><td align="right" class='awrc'>0.43</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9994"></a>
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
<ul>
<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>80.74</td><td align="right" class='awrc'>&quot;2&quot;,&quot;28106684&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.08</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>4.30</td><td align="right" class='awrnc'>&quot;1&quot;,&quot;4&quot;,&quot;1&quot;</td><td align="right" class='awrnc'>0.99</td>
<td class='awrnc'>files</td><td class='awrnc'>blocks</td><td class='awrnc'>requests</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9987"></a>
<h3 class="awr">Top DB Objects</h3>
<ul>
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
<tr><td align="right" scope="row" class='awrc'>73458</td><td align="right" class='awrc'>4.79</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.71</td>
<td class='awrc'>USER13.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73503</td><td align="right" class='awrnc'>4.79</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.63</td>
<td class='awrnc'>USER21.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73603</td><td align="right" class='awrc'>4.71</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.21</td>
<td class='awrc'>USER40.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73449</td><td align="right" class='awrnc'>4.63</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.46</td>
<td class='awrnc'>USER11.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73514</td><td align="right" class='awrc'>4.63</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>4.30</td>
<td class='awrc'>USER22.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9986"></a>
<h3 class="awr">Activity Over Time</h3>
<ul>
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
<li class="awr"> Top 3 events are reported in each of those slots </li>
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
</ul>
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
<tr><td align="right" class='awrc'>20:33:02   (2.0 min)</td><td align="right" class='awrc'>279</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>207</td><td align="right" class='awrc'>17.11</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">20:33:02   (2.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">279</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>30</td><td align="right" class='awrnc'>2.48</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">20:33:02   (2.0 min)</div></td><td align="right" class='awrc'><div class="hidden">279</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>1.32</td></tr>
<tr><td align="right" class='awrnc'>20:35:00   (5.0 min)</td><td align="right" class='awrnc'>622</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>512</td><td align="right" class='awrnc'>42.31</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">20:35:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">622</div></td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>3.55</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">20:35:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">622</div></td><td class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>24</td><td align="right" class='awrnc'>1.98</td></tr>
<tr><td align="right" class='awrc'>20:40:00   (3.1 min)</td><td align="right" class='awrc'>309</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>258</td><td align="right" class='awrc'>21.32</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">20:40:00   (3.1 min)</div></td><td align="right" class='awrnc'><div class="hidden">309</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>1.32</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">20:40:00   (3.1 min)</div></td><td align="right" class='awrc'><div class="hidden">309</div></td><td class='awrc'>gc cr grant 2-way</td><td align="right" class='awrc'>12</td><td align="right" class='awrc'>0.99</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#42">Back to Active Session History (ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99995"></a>
<h2>ADDM Task ADDM:3393773525_1_172</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_1_172&apos;
	  --------------------------------------------

Analysis Period
---------------
AWR snapshot range from 171 to 172.
Time period starts at 10-FEB-20 08.33.03 PM
Time period ends at 10-FEB-20 08.43.07 PM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of instance p30db1, numbered 1 and hosted at
mcracpoc1.example.com.

Activity During the Analysis Period
-----------------------------------
Total database time was 10821 seconds.
The average number of active sessions was 17.92.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendations
					     Percent of Activity
   ----------------------------------------  -------------------  ---------------
1  Top SQL Statements			     17.72 | 98.91	  2
2  &quot;User I/O&quot; wait Class		       15.63 | 87.24	    0
3  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  4.62 | 25.76	      5
4  Global Cache Messaging		     1.17 | 6.51	  1
5  Undersized SGA			     .6 | 3.35		  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 17.69 active sessions, 98.91% of total activity.
----------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

   Recommendation 1: SQL Tuning
   Estimated benefit is 15.35 active sessions, 85.68% of total activity.
   ---------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      &quot;bhdvtsvjhgvrh&quot;.
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND
	 (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;bhdvtsvjhgvrh&quot; was executed 689468 times and
      had an average elapsed time of 0.012 seconds.

   Recommendation 2: SQL Tuning
   Estimated benefit is 2.37 active sessions, 13.24% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
	 AND (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 121676 times and
      had an average elapsed time of 0.013 seconds.


Finding 2: &quot;User I/O&quot; wait Class
Impact is 15.6 active sessions, 87.24% of total activity.
---------------------------------------------------------
Wait class &quot;User I/O&quot; was consuming significant database time.
Waits for I/O to temporary tablespaces were not consuming significant database
time.
The throughput of the I/O subsystem was not significantly lower than expected.

   No recommendations are available.


Finding 3: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 4.61 active sessions, 25.76% of total activity.
---------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

   Recommendation 1: Segment Tuning
   Estimated benefit is .94 active sessions, 5.24% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER13.CF1&quot; with
      object ID 73458.
      Related Object
	 Database object with ID 73458.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 118041
      physical reads, 16242 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .94 active sessions, 5.24% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER21.CF1&quot; with
      object ID 73503.
      Related Object
	 Database object with ID 73503.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 112053
      physical reads, 15418 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .92 active sessions, 5.15% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER40.CF1&quot; with
      object ID 73603.
      Related Object
	 Database object with ID 73603.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 117440
      physical reads, 16157 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .91 active sessions, 5.06% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER11.CF1&quot; with
      object ID 73449.
      Related Object
	 Database object with ID 73449.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 128837
      physical reads, 17629 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .91 active sessions, 5.06% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER22.CF1&quot; with
      object ID 73514.
      Related Object
	 Database object with ID 73514.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 120827
      physical reads, 16714 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 15.63 active sessions, 87.24% of total activity.


Finding 4: Global Cache Messaging
Impact is 1.17 active sessions, 6.51% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time on this
instance.

   Recommendation 1: Application Analysis
   Estimated benefit is 1.17 active sessions, 6.51% of total activity.
   -------------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 66% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is 1.21 active sessions, 6.77% of total activity.


Finding 5: Undersized SGA
Impact is .6 active sessions, 3.35% of total activity.
------------------------------------------------------
The SGA was inadequately sized, causing additional I/O or hard parses.
The value of parameter &quot;sga_target&quot; was &quot;9664 M&quot; during the analysis period.

   Recommendation 1: Database Configuration
   Estimated benefit is .15 active sessions, .81% of total activity.
   -----------------------------------------------------------------
   Action
      Increase the size of the SGA by setting the parameter &quot;sga_target&quot; to
      10872 M.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 15.63 active sessions, 87.24% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Miscellaneous Information
-------------------------
Wait class &quot;Application&quot; was not consuming significant database time.
Wait class &quot;Commit&quot; was not consuming significant database time.
Wait class &quot;Concurrency&quot; was not consuming significant database time.
Wait class &quot;Configuration&quot; was not consuming significant database time.
CPU was not a bottleneck for the instance.
Wait class &quot;Network&quot; was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.
Hard parsing of SQL statements was not consuming significant database time.

</pre>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="9997"></a>
<a class="awr" name="9997"></a><h3 class="awr">RAC Statistics</h3>
<p />
<table border="0" width="600" class="tdiff" summary="This table displays information about RAC instances">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Begin</th><th class="awrbg" scope="col">End</th><th class="awrnobg" scope="col"></th></tr>
<tr><td scope="row" class='awrnc'>Number of Instances:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>	 2</td></tr>
<tr><td scope="row" class='awrc'>Number of LMS's:</td><td align="right" class='awrc'>	 2</td><td align="right" class='awrc'>	  2</td></tr>
<tr><td scope="row" class='awrnc'>Number of realtime LMS's:</td><td align="right" class='awrnc'>    2</td><td align="right" class='awrnc'>    2</td><td class='awrnc'> (0 priority changes)</td></tr>
</table><p />
Global Cache Load Profile
<p />
<table border="0" width="600" class="tdiff" summary="This table displays information about global cache load
		     profile">
<tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Per Second</th><th class="awrbg" scope="col">Per Transaction</th></tr>
<tr><td scope="row" class='awrnc'>Global Cache blocks received:</td><td align="right" class='awrnc'>		    23.08</td><td align="right" class='awrnc'>		       0.11</td></tr>
<tr><td scope="row" class='awrc'>Global Cache blocks served:</td><td align="right" class='awrc'>		28.23</td><td align="right" class='awrc'>		  0.14</td></tr>
<tr><td scope="row" class='awrnc'>GCS/GES messages received:</td><td align="right" class='awrnc'>	      6,380.06</td><td align="right" class='awrnc'>		   31.55</td></tr>
<tr><td scope="row" class='awrc'>GCS/GES messages sent:</td><td align="right" class='awrc'>		6,327.46</td><td align="right" class='awrc'>		    31.29</td></tr>
<tr><td scope="row" class='awrnc'>DBWR Fusion writes:</td><td align="right" class='awrnc'>		   0.08</td><td align="right" class='awrnc'>		     0.00</td></tr>
<tr><td scope="row" class='awrc'>Estd Interconnect traffic (KB)</td><td align="right" class='awrc'>		2,892.44</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
Global Cache Efficiency Percentages (Target local+remote 100%)
<p />
<table border="0" width="600" class="tdiff" summary="This table displays global cache efficiency percentages">
<tr><td scope="row" class='awrnc'>Buffer access -  local cache %:</td><td align="right" class='awrnc'>	58.41</td></tr>
<tr><td scope="row" class='awrc'>Buffer access - remote cache %:</td><td align="right" class='awrc'>   0.25</td></tr>
<tr><td scope="row" class='awrnc'>Buffer access -	  disk %:</td><td align="right" class='awrnc'>	41.34</td></tr>
<tr><td scope="row" class='awrc'>Global Cache Locality	      %:</td><td align="right" class='awrc'>  51.17</td></tr>
</table><p />
Global Cache and Enqueue Services - Workload Characteristics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays workload characteristics for global
		    cache and enqueue services">
<tr><td scope="row" class='awrnc'>Avg global cache cr block receive time (us):</td><td align="right" class='awrnc'>	    1,215.9</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache current block receive time (us):</td><td align="right" class='awrc'>		 772.2</td></tr>
<tr><td scope="row" class='awrnc'>Avg LMS process busy %:</td><td align="right" class='awrnc'>		  16.3</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block build time (us):</td><td align="right" class='awrc'> 	  541.7</td></tr>
<tr><td scope="row" class='awrnc'>Global cache log flushes for cr blocks served %:</td><td align="right" class='awrnc'> 	    0.8</td></tr>
<tr><td scope="row" class='awrc'>Avg global cache cr block flush time (us):</td><td align="right" class='awrc'> 	6,857.1</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block pin time (us):</td><td align="right" class='awrnc'>		 0.0</td></tr>
<tr><td scope="row" class='awrc'>Global cache log flushes for current blocks served %:</td><td align="right" class='awrc'>	       0.3</td></tr>
<tr><td scope="row" class='awrnc'>Avg global cache current block flush time (us):</td><td align="right" class='awrnc'>	       7,368.4</td></tr>
<tr><td scope="row" class='awrc'>Avg global enqueue get time (us):</td><td align="right" class='awrc'>		  45.4</td></tr>
</table><p />
Global Cache and Enqueue Services - Messaging Statistics
<p />
<table border="0" width="600" class="tdiff" summary="This table displays messaging statistics for Global Cache
		    and Enqueue Services">
<tr><td scope="row" class='awrnc'>Avg message sent queue time (us):</td><td align="right" class='awrnc'>	   700.4</td></tr>
<tr><td scope="row" class='awrc'>Avg message sent queue time on ksxp (us):</td><td align="right" class='awrc'>		 933.9</td></tr>
<tr><td scope="row" class='awrnc'>Avg message received kernel queue time (us):</td><td align="right" class='awrnc'>	       46.7</td></tr>
<tr><td scope="row" class='awrc'>Avg message received queue time (us):</td><td align="right" class='awrc'>	      17.6</td></tr>
<tr><td scope="row" class='awrnc'>Avg GCS message process time (us):</td><td align="right" class='awrnc'>	     40.7</td></tr>
<tr><td scope="row" class='awrc'>Avg GES message process time (us):</td><td align="right" class='awrc'> 	   22.5</td></tr>
<tr><td scope="row" class='awrnc'>% of direct sent messages:</td><td align="right" class='awrnc'>   44.97</td></tr>
<tr><td scope="row" class='awrc'>% of indirect sent messages:</td><td align="right" class='awrc'>   54.99</td></tr>
<tr><td scope="row" class='awrnc'>% of flow controlled messages:</td><td align="right" class='awrnc'>	 0.04</td></tr>
</table><p />
<hr />
<p />Cluster Interconnect<p />
<ul>
<li class="awr"> if Public/Source at End snap is different a '*' is displayed</li>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect. . if Public/Source at End snap is different a '*' is displayed"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 2" id="End">End</th>
</tr><tr>
<th class="awrbg" scope="col">Interface</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Src">Src</th></tr>
<tr><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.22.248</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End Pub" class='awrclb'>&#160;</td><td headers="End Src" class='awrcrb'>&#160;</td></tr>
</table><p />
<a class="awr" name="top"></a>
<h2 class="awr">
RAC Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#9997">RAC Report Summary</a></li>
<li class="awr"><a class="awr" href="#5100">Global Messaging Statistics</a></li>
<li class="awr"><a class="awr" href="#5200">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#5300">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#7">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#8">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#8790">Dynamic Remastering Statistics</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5100"></a>
<h3 class="awr">Global Messaging Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays global messaging statistics. Total, per second, per transaction values are displayed for each statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th></tr>
<tr><td scope="row" class='awrc'>Cluster reconfiguration count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Domain reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>3,561</td><td align="right" class='awrnc'>5.89</td><td align="right" class='awrnc'>0.03</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA local message waits</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA local messages received</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA messages received actual</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA messages received logical</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>KA requests failed</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>KA requests succeeded</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>Pseudo reconfiguration count</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Pseudo rm reconfig count</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>21,109</td><td align="right" class='awrnc'>34.92</td><td align="right" class='awrnc'>0.17</td></tr>
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>55,897</td><td align="right" class='awrc'>92.48</td><td align="right" class='awrc'>0.46</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>63,927</td><td align="right" class='awrnc'>105.76</td><td align="right" class='awrnc'>0.52</td></tr>
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>100,684</td><td align="right" class='awrc'>166.58</td><td align="right" class='awrc'>0.82</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>35,858</td><td align="right" class='awrnc'>59.33</td><td align="right" class='awrnc'>0.29</td></tr>
<tr><td scope="row" class='awrc'>dynamically allocated gcs resources</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>dynamically allocated gcs shadows</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>flow control messages received</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>flow control messages sent</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs assume cvt</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs assume no cvt</td><td align="right" class='awrnc'>6,778</td><td align="right" class='awrnc'>11.21</td><td align="right" class='awrnc'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gcs ast to fg</td><td align="right" class='awrc'>1,120,774</td><td align="right" class='awrc'>1,854.28</td><td align="right" class='awrc'>9.17</td></tr>
<tr><td scope="row" class='awrnc'>gcs ast xid</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs bidless ast to lms</td><td align="right" class='awrc'>46</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs blocked converts</td><td align="right" class='awrnc'>32,994</td><td align="right" class='awrnc'>54.59</td><td align="right" class='awrnc'>0.27</td></tr>
<tr><td scope="row" class='awrc'>gcs blocked cr converts</td><td align="right" class='awrc'>4,250</td><td align="right" class='awrc'>7.03</td><td align="right" class='awrc'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible basts</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (global)</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (local)</td><td align="right" class='awrnc'>10,186</td><td align="right" class='awrnc'>16.85</td><td align="right" class='awrnc'>0.08</td></tr>
<tr><td scope="row" class='awrc'>gcs cr basts to PIs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs cr requests to slave</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs cr serve without current lock</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs dbwr flush pi msgs</td><td align="right" class='awrnc'>166,548</td><td align="right" class='awrnc'>275.55</td><td align="right" class='awrnc'>1.36</td></tr>
<tr><td scope="row" class='awrc'>gcs dbwr write request msgs</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs error msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs flash read serve requests to slave</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr block only</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs force cr grant</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs force cr no current</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs forward cr to pinged instance</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs grant ast</td><td align="right" class='awrnc'>1,120,821</td><td align="right" class='awrnc'>1,854.36</td><td align="right" class='awrnc'>9.17</td></tr>
<tr><td scope="row" class='awrc'>gcs grant request in partial open</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate (compatible) converts</td><td align="right" class='awrnc'>8,641</td><td align="right" class='awrnc'>14.30</td><td align="right" class='awrnc'>0.07</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate (null) converts</td><td align="right" class='awrc'>331,800</td><td align="right" class='awrc'>548.95</td><td align="right" class='awrc'>2.71</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrnc'>111</td><td align="right" class='awrnc'>0.18</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate cr (null) converts</td><td align="right" class='awrc'>1,880,853</td><td align="right" class='awrc'>3,111.80</td><td align="right" class='awrc'>15.39</td></tr>
<tr><td scope="row" class='awrnc'>gcs lms flush pi msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs lms write request msgs</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs msgs process time(ms)</td><td align="right" class='awrnc'>110,581</td><td align="right" class='awrnc'>182.95</td><td align="right" class='awrnc'>0.90</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs received</td><td align="right" class='awrc'>2,719,123</td><td align="right" class='awrc'>4,498.69</td><td align="right" class='awrc'>22.24</td></tr>
<tr><td scope="row" class='awrnc'>gcs new served by master</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs out-of-order msgs</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs pings refused</td><td align="right" class='awrnc'>1,053</td><td align="right" class='awrnc'>1.74</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gcs pkey conflicts retry</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs queued converts</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly failure unmount db</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass N-&gt;Xw ping local</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass N-&gt;Xw ping remote</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant X on assume</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass grant ast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant fg ast</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs reader bypass grant immediate</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs recovery claim msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to fg</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid to lms</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to master</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs regular cr</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs resources for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs retry convert request</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs shadows for dynamic sga</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs share recovery bast</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs side channel msgs actual</td><td align="right" class='awrnc'>4,811</td><td align="right" class='awrnc'>7.96</td><td align="right" class='awrnc'>0.04</td></tr>
<tr><td scope="row" class='awrc'>gcs side channel msgs logical</td><td align="right" class='awrc'>1,148,876</td><td align="right" class='awrc'>1,900.77</td><td align="right" class='awrc'>9.40</td></tr>
<tr><td scope="row" class='awrnc'>gcs stale cr</td><td align="right" class='awrnc'>12</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs undo cr</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs write notification msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs writes refused</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges msgs process time(ms)</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ges msgs received</td><td align="right" class='awrc'>2,180</td><td align="right" class='awrc'>3.61</td><td align="right" class='awrc'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ges remote lock allocation</td><td align="right" class='awrnc'>-7</td><td align="right" class='awrnc'>-0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts dropped</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global posts queue time</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts queued</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>global posts requested</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>global posts sent</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>implicit batch messages received</td><td align="right" class='awrnc'>36,427</td><td align="right" class='awrnc'>60.27</td><td align="right" class='awrnc'>0.30</td></tr>
<tr><td scope="row" class='awrc'>implicit batch messages sent</td><td align="right" class='awrc'>33,121</td><td align="right" class='awrc'>54.80</td><td align="right" class='awrc'>0.27</td></tr>
<tr><td scope="row" class='awrnc'>lmd msg send time(ms)</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>lms(s) msg send time(ms)</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>messages flow controlled</td><td align="right" class='awrnc'>1,090</td><td align="right" class='awrnc'>1.80</td><td align="right" class='awrnc'>0.01</td></tr>
<tr><td scope="row" class='awrc'>messages queue sent actual</td><td align="right" class='awrc'>252,251</td><td align="right" class='awrc'>417.34</td><td align="right" class='awrc'>2.06</td></tr>
<tr><td scope="row" class='awrnc'>messages queue sent logical</td><td align="right" class='awrnc'>218,571</td><td align="right" class='awrnc'>361.62</td><td align="right" class='awrnc'>1.79</td></tr>
<tr><td scope="row" class='awrc'>messages received actual</td><td align="right" class='awrc'>1,440,578</td><td align="right" class='awrc'>2,383.38</td><td align="right" class='awrc'>11.78</td></tr>
<tr><td scope="row" class='awrnc'>messages received logical</td><td align="right" class='awrnc'>2,721,303</td><td align="right" class='awrnc'>4,502.29</td><td align="right" class='awrnc'>22.26</td></tr>
<tr><td scope="row" class='awrc'>messages sent directly</td><td align="right" class='awrc'>1,189,230</td><td align="right" class='awrc'>1,967.54</td><td align="right" class='awrc'>9.73</td></tr>
<tr><td scope="row" class='awrnc'>messages sent indirectly</td><td align="right" class='awrnc'>1,454,247</td><td align="right" class='awrnc'>2,406.00</td><td align="right" class='awrnc'>11.90</td></tr>
<tr><td scope="row" class='awrc'>messages sent not implicit batched</td><td align="right" class='awrc'>15,081</td><td align="right" class='awrc'>24.95</td><td align="right" class='awrc'>0.12</td></tr>
<tr><td scope="row" class='awrnc'>messages sent pbatched</td><td align="right" class='awrnc'>1,243,085</td><td align="right" class='awrnc'>2,056.64</td><td align="right" class='awrnc'>10.17</td></tr>
<tr><td scope="row" class='awrc'>msgs causing lmd to send msgs</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>msgs causing lms(s) to send msgs</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>msgs received kernel queue time (ns)</td><td align="right" class='awrc'>126,985,810,560</td><td align="right" class='awrc'>210,093,229.87</td><td align="right" class='awrc'>1,038,832.21</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queue time (ms)</td><td align="right" class='awrnc'>47,838</td><td align="right" class='awrnc'>79.15</td><td align="right" class='awrnc'>0.39</td></tr>
<tr><td scope="row" class='awrc'>msgs received queued</td><td align="right" class='awrc'>2,721,303</td><td align="right" class='awrc'>4,502.29</td><td align="right" class='awrc'>22.26</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time (ms)</td><td align="right" class='awrnc'>272,015</td><td align="right" class='awrnc'>450.04</td><td align="right" class='awrnc'>2.23</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrc'>1,347,790</td><td align="right" class='awrc'>2,229.87</td><td align="right" class='awrc'>11.03</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued</td><td align="right" class='awrnc'>388,348</td><td align="right" class='awrnc'>642.51</td><td align="right" class='awrnc'>3.18</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued on ksxp</td><td align="right" class='awrc'>1,443,138</td><td align="right" class='awrc'>2,387.62</td><td align="right" class='awrc'>11.81</td></tr>
<tr><td scope="row" class='awrnc'>number of broadcasted resources</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of directly freed master res</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of ges deadlock detected</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of lock borrowed by LMD</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of received ODPS messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of received RBA messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of resource borrowed by LMD</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>number of sent ODPS messages</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>number of sent RBA messages</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>process batch messages received</td><td align="right" class='awrc'>102,895</td><td align="right" class='awrc'>170.24</td><td align="right" class='awrc'>0.84</td></tr>
<tr><td scope="row" class='awrnc'>process batch messages sent</td><td align="right" class='awrnc'>123,657</td><td align="right" class='awrnc'>204.59</td><td align="right" class='awrnc'>1.01</td></tr>
<tr><td scope="row" class='awrc'>receiver cycle time</td><td align="right" class='awrc'>366,784</td><td align="right" class='awrc'>606.83</td><td align="right" class='awrc'>3.00</td></tr>
<tr><td scope="row" class='awrnc'>receiver loop count</td><td align="right" class='awrnc'>1,486,743</td><td align="right" class='awrnc'>2,459.76</td><td align="right" class='awrnc'>12.16</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5200"></a>
<h3 class="awr">Global CR Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="This table displays global CR served statistics. For each statistics, total value is shown"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th></tr>
<tr><td scope="row" class='awrc'>CR Block Requests</td><td align="right" class='awrc'>2,767</td></tr>
<tr><td scope="row" class='awrnc'>CURRENT Block Requests</td><td align="right" class='awrnc'>1,496</td></tr>
<tr><td scope="row" class='awrc'>Data Block Requests</td><td align="right" class='awrc'>2,767</td></tr>
<tr><td scope="row" class='awrnc'>Undo Block Requests</td><td align="right" class='awrnc'>2</td></tr>
<tr><td scope="row" class='awrc'>TX Block Requests</td><td align="right" class='awrc'>1,481</td></tr>
<tr><td scope="row" class='awrnc'>Current Results</td><td align="right" class='awrnc'>4,251</td></tr>
<tr><td scope="row" class='awrc'>Private results</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>Zero Results</td><td align="right" class='awrnc'>6</td></tr>
<tr><td scope="row" class='awrc'>Disk Read Results</td><td align="right" class='awrc'>6</td></tr>
<tr><td scope="row" class='awrnc'>Fail Results</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>Fairness Down Converts</td><td align="right" class='awrc'>2,750</td></tr>
<tr><td scope="row" class='awrnc'>Light Works</td><td align="right" class='awrnc'>1,128</td></tr>
<tr><td scope="row" class='awrc'>Flushes</td><td align="right" class='awrc'>35</td></tr>
<tr><td scope="row" class='awrnc'>Builds</td><td align="right" class='awrnc'>2,766</td></tr>
<tr><td scope="row" class='awrc'>Errors</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="5300"></a>
<h3 class="awr">Global Current Server Statistics</h3>
<ul>
<li class="awr"> Pins	 = CURRENT Block Pin Operations </li>
<li class="awr"> Flushes = Redo Flush before CURRENT Block Served Operations</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global current served statistics"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
<tr><td scope="row" class='awrc'>Pins</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>75.00</td><td align="right" class='awrc'>25.00</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Flushes</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>68.42</td><td align="right" class='awrnc'>31.58</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="7"></a>
<h2 class="awr">
Global Cache Transfer Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#5400">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#5450">Global Cache Transfer Times (us)</a></li>
<li class="awr"><a class="awr" href="#5460">Global Cache Transfer (Immediate)</a></li>
<li class="awr"><a class="awr" href="#5470">Global Cache Times (Immediate)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5400"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
<li class="awr"> Congested (Congst) - Block Transfer impacted by Remote System Load </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer stats. CR, blocks received, % immediate, % busy, % congestion are displayed for each instance and block class"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CR">CR</th>
<th class="awrbg" colspan=" 4" id="Current">Current</th>
</tr><tr>
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th><th class="awrbg" scope="col" id="Blocks|Received">Blocks Received</th><th class="awrbg" scope="col" id="%|Immed">% Immed</th><th class="awrbg" scope="col" id="%|Busy">% Busy</th><th class="awrbg" scope="col" id="%|Congst">% Congst</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" headers="CR Blocks|Received" class='awrclb'>2,761</td><td align="right" headers="CR %|Immed" class='awrc'>99.86</td><td align="right" headers="CR %|Busy" class='awrc'>0.07</td><td align="right" headers="CR %|Congst" class='awrc'>0.07</td><td align="right" headers="Current Blocks|Received" class='awrclb'>11,066</td><td align="right" headers="Current %|Immed" class='awrc'>81.05</td><td align="right" headers="Current %|Busy" class='awrc'>18.89</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.06</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>Others</td><td align="right" headers="CR Blocks|Received" class='awrnclb'>13</td><td align="right" headers="CR %|Immed" class='awrnc'>100.00</td><td align="right" headers="CR %|Busy" class='awrnc'>0.00</td><td align="right" headers="CR %|Congst" class='awrnc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrnclb'>21</td><td align="right" headers="Current %|Immed" class='awrnc'>76.19</td><td align="right" headers="Current %|Busy" class='awrnc'>23.81</td><td align="right" headers="Current %|Congst" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" headers="CR Blocks|Received" class='awrclb'>7</td><td align="right" headers="CR %|Immed" class='awrc'>85.71</td><td align="right" headers="CR %|Busy" class='awrc'>14.29</td><td align="right" headers="CR %|Congst" class='awrc'>0.00</td><td align="right" headers="Current Blocks|Received" class='awrclb'>5</td><td align="right" headers="Current %|Immed" class='awrc'>40.00</td><td align="right" headers="Current %|Busy" class='awrc'>60.00</td><td align="right" headers="Current %|Congst" class='awrcrb'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5450"></a>
<h3 class="awr">Global Cache Transfer Times (us)</h3>
<ul>
<li class="awr"> Avg Time - average time of all blocks (Immed,Busy,Congst) in us </li>
<li class="awr"> Immed, Busy, Congst -	Average times in us </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer time statistics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Inst No</th><th class="awrbg" scope="col">Block	Class  </th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Congst">Congst</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>1231</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>1226</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>6137</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>2854</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>761</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>729</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>890</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>3680</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>others</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>457</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>457</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>1498</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>1666</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>964</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>2263</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>511</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>12776</td><td align="right" headers="CRAvgTime(us) Congst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>770</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>705</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>814</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Congst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Congst" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5460"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> % of Blocks Received requiring 2 or 3 hops </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache transfer (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CR">CR</th>
<th class="awrbg" colspan=" 3" id="Current">Current</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Blocks Lost</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th><th class="awrbg" scope="col" id="ImmedBlks|Received">Immed Blks Received</th><th class="awrbg" scope="col" id="%|2hop">% 2hop</th><th class="awrbg" scope="col" id="%|3hop">% 3hop</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>2,757</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>8,969</td><td align="right" headers="Current %|2hop" class='awrc'>100.00</td><td align="right" headers="Current %|3hop" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>others</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>13</td><td align="right" headers="CR %|2hop" class='awrnc'>100.00</td><td align="right" headers="CR %|3hop" class='awrnc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>16</td><td align="right" headers="Current %|2hop" class='awrnc'>100.00</td><td align="right" headers="Current %|3hop" class='awrncrb'>0.00</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrclb'>6</td><td align="right" headers="CR %|2hop" class='awrc'>100.00</td><td align="right" headers="CR %|3hop" class='awrc'>0.00</td><td align="right" headers="Current ImmedBlks|Received" class='awrclb'>2</td><td align="right" headers="Current %|2hop" class='awrc'>100.00</td><td align="right" headers="Current %|3hop" class='awrcrb'>0.00</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CR ImmedBlks|Received" class='awrnclb'>&#160;</td><td align="right" headers="CR %|2hop" class='awrnc'>&#160;</td><td align="right" headers="CR %|3hop" class='awrnc'>&#160;</td><td align="right" headers="Current ImmedBlks|Received" class='awrnclb'>&#160;</td><td align="right" headers="Current %|2hop" class='awrnc'>&#160;</td><td align="right" headers="Current %|3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="5470"></a>
<h3 class="awr">Global Cache Times (Immediate)</h3>
<ul>
<li class="awr"> Blocks Lost, 2-hop and 3-hop Average times in (us) </li>
<li class="awr"> ordered by CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="This table displays global cache times (immediate) statistics"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col">Src Inst#</th><th class="awrbg" scope="col">Block   Class  </th><th class="awrbg" scope="col">Lost Time</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="2hop">2hop</th><th class="awrbg" scope="col" id="3hop">3hop</th></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>data block</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>1226</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>1226</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>729</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>729</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>others</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>457</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>457</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>1666</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>1666</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>undo header</td><td align="right" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrclb'>511</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrc'>511</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrclb'>705</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrc'>705</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'>2</td><td class='awrnc'>undo block</td><td align="right" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnclb'>&#160;</td><td align="right" headers="CRAvgTime(us) 2hop" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) 3hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 2hop" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) 3hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#7">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#7800">Interconnect Latency Stats</a></li>
<li class="awr"><a class="awr" href="#7900">Interconnect Throughput by Client</a></li>
<li class="awr"><a class="awr" href="#8000">Interconnect Device Stats</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7800"></a>
<h3 class="awr">Interconnect Ping Latency Statistics</h3>
<ul>
<li class="awr"> Ping latency of the roundtrip of a message from this instance to </li>
<li class="awr"> target instances.  </li>
<li class="awr"> The target instance is identified by an instance number. </li>
<li class="awr"> Average and standard deviation of ping latency is given in microseconds </li>
<li class="awr"> for message sizes of 500 bytes and 8K. </li>
<li class="awr"> Note that latency of a message from the instance to itself is used as </li>
<li class="awr"> control, since message latency can include wait for CPU</li>
</ul>
<table border="0" class="tdiff" summary="This table displays IC ping latency statistics"><tr><th class="awrbg" scope="col">Target Instance</th><th class="awrbg" scope="col">500B Ping Count</th><th class="awrbg" scope="col">Avg Latency 500B msg</th><th class="awrbg" scope="col">Stddev 500B msg</th><th class="awrbg" scope="col">8K Ping Count</th><th class="awrbg" scope="col">Avg Latency 8K msg</th><th class="awrbg" scope="col">Stddev 8K msg</th></tr>
<tr><td align="right" class='awrc'>1</td><td align="right" class='awrc'>56</td><td align="right" class='awrc'>673</td><td align="right" class='awrc'>0.35</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>652</td><td align="right" class='awrc'>0.29</td></tr>
<tr><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>960</td><td align="right" class='awrnc'>0.55</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>1086</td><td align="right" class='awrnc'>0.66</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="7900"></a>
<h3 class="awr">Interconnect Throughput by Client</h3>
<ul>
<li class="awr"> Throughput of interconnect usage by major consumers </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect throughput by client statistics"><tr><th class="awrbg" scope="col">Used By</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Receive Mbytes/sec</th></tr>
<tr><td scope="row" class='awrc'>Global Cache</td><td align="right" class='awrc'>0.32</td><td align="right" class='awrc'>0.30</td></tr>
<tr><td scope="row" class='awrnc'>Parallel Query</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td scope="row" class='awrc'>DB Locks</td><td align="right" class='awrc'>1.36</td><td align="right" class='awrc'>1.38</td></tr>
<tr><td scope="row" class='awrnc'>DB Streams</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Other</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="8000"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Throughput and errors of interconnect devices (at OS level) </li>
<li class="awr"> All throughput numbers are megabytes per second</li>
</ul>
<table border="0" class="tdiff" summary="This table displays Interconnect device statistics. IP address, public, source, etc. are displayed for each device"><tr><th class="awrbg" scope="col">Device Name</th><th class="awrbg" scope="col">IP Address</th><th class="awrbg" scope="col">Public</th><th class="awrbg" scope="col">Source</th><th class="awrbg" scope="col">Send Mbytes/sec</th><th class="awrbg" scope="col">Send Errors</th><th class="awrbg" scope="col">Send Dropped</th><th class="awrbg" scope="col">Send Buffer Overrun</th><th class="awrbg" scope="col">Send Carrier Lost</th><th class="awrbg" scope="col">Receive Mbytes/sec</th><th class="awrbg" scope="col">Receive Errors</th><th class="awrbg" scope="col">Receive Dropped</th><th class="awrbg" scope="col">Receive Buffer Overrun</th><th class="awrbg" scope="col">Receive Frame Errors</th></tr>
<tr><td scope="row" class='awrc'>fg-priv:1</td><td class='awrc'>169.254.22.248</td><td class='awrc'>NO</td><td class='awrc'>&#160;</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td>
<td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#8">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="8790"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Times are in seconds </li>
<li class="awr"> Affinity objects - Affinity objects mastered at the begin/end snapshot </li>
<li class="awr"> Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Times are in seconds. Affinity objects - Affinity objects mastered at the begin/end snapshot. Read-mostly objects - Read-mostly objects mastered at the begin/end snapshot"><tr><th class="awrbg" scope="col">Name</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Remaster Op</th><th class="awrbg" scope="col">Begin Snap</th><th class="awrbg" scope="col">End Snap</th></tr>
<tr><td scope="row" class='awrc'>affinity objects</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>read-mostly objects</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td></tr>
<tr><td scope="row" class='awrc'>affinity objects (other inst)</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1</td></tr>
<tr><td scope="row" class='awrnc'>read-mostly objects (persistent)</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>
Report written to awr.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0

WORKLOAD REPOSITORY REPORT (RAC)

Database Summary
~~~~~~~~~~~~~~~~
				   Database					   Snapshot Ids     Number of Instances     Number of Hosts	Report Total (minutes)
-----------------------------------------------------------------------------	-----------------   ------------------	 ------------------   ------------------------
	 Id Name      Unique Name Role		   Edition RAC CDB Block Size	   Begin      End   In Report	 Total	 In Report    Total	  DB time Elapsed time
----------- --------- ----------- ---------------- ------- --- --- ----------	-------- --------   --------- --------	 --------- --------   ----------- ------------
 3393773525 P30DB     p30db	  PRIMARY	   EE	   YES NO	 8192	     171      172	    2	     2		 2	  2	   379.77	 10.07
Database Instances Included In Report
-> Listed in order of instance number, I#
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
																      Avg Active
  I# Instance  Host	  Startup	  Begin Snap Time End Snap Time   Release	  Elapsed Time(min) DB time(min) Up Time(hrs)	Sessions Platform
---- --------- ---------- --------------- --------------- --------------- --------------- ----------------- ------------ ------------ ---------- ---------------
   1 p30db1    mcracpoc1. 10-Feb-20 19:29 10-Feb-20 20:33 10-Feb-20 20:43 19.0.0.0.0		      10.08	  180.35	 1.22	   17.89 Linux x86 64-bi
   2 p30db2    mcracpoc2. 10-Feb-20 19:29 10-Feb-20 20:33 10-Feb-20 20:43 19.0.0.0.0		      10.08	  199.42	 1.22	   19.78 Linux x86 64-bi

Top ADDM Findings by Average Active Sessions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Finding Name				 Avg act Percen Task Name		       Begin Snap Time End Snap Time
---------------------------------------- ------- ------ ------------------------------ --------------- ---------------
Top SQL Statements			   37.66  99.31 ADDM:3393773525_172	       10-Feb-20 20:33 10-Feb-20 20:43
"User I/O" wait Class			   37.66  87.57 ADDM:3393773525_172	       10-Feb-20 20:33 10-Feb-20 20:43
Top Segments by "User I/O" and "Cluster"   37.66  12.21 ADDM:3393773525_172	       10-Feb-20 20:33 10-Feb-20 20:43
Global Cache Messaging			   37.66   6.35 ADDM:3393773525_172	       10-Feb-20 20:33 10-Feb-20 20:43
Cache Sizes
-> All values are in Megabytes
-> Listed in order of instance number, I#
-> End values displayed only if different from Begin values
~~~~~~~~~~~
	 Memory Target	       Sga Target	    DB Cache	      Shared Pool	   Large Pool	       Java Pool	  Streams Pool	       PGA Target
       -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------   -----------------
  I#	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End	  Begin      End      Begin	 End   Log Buffer
----   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   -------- --------   ----------
   1			      9,664		  8,000 	      1,440		     64 						      3,232		     19.4
   2			      9,664		  7,840 	      1,600		     64 						      3,232		     19.4
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~
 Avg			      9,664		  7,920 	      1,520		     64 						      3,232		     19.4
 Min			      9,664		  7,840 	      1,440		     64 						      3,232		     19.4
 Max			      9,664		  8,000 	      1,600		     64 						      3,232		     19.4

OS Statistics By Instance		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Listed in order of instance number, I#
-> End values are diplayed only if different from begin values

	      CPU		Load			  % CPU 				  Time (s)			 Memory 	    End Values
       -----------------   -------------   ----------------------------------	--------------------------------------------   ----------   -------------------------
  I#   #CPUs #Core #Sckt    Begin    End   % Busy  % Usr  % Sys  % WIO	% Idl		  Busy		 Idle	       Total	       MB   #CPU #Cor #Sck Memory (M)
----   ----- ----- -----   ------ ------   ------ ------ ------ ------ ------	-------------- -------------- --------------   ----------   ---- ---- ---- ----------
   1	   8	 4     1     10.6   13.1     49.1   17.1   22.2   40.4	 50.9	       2,183.4	      2,259.5	     4,442.9	 32,156.0
   2	   8	 4     1      9.5   13.8     48.6   17.4   22.2   41.7	 51.4	       2,144.6	      2,269.3	     4,413.9	 32,156.0
 ~~~										~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum										       4,327.9	      4,528.8	     8,856.8
			  --------------------------------------------------------------------------------------------------------------------


Time Model				 DB/Inst: P30DB/p30db1	Snaps: 171-172

					 SQL Exec		     Hard Parse
  I#	DB time (s)	DB CPU (s)	  Ela (s)  Parse Ela (s)	Ela (s) PL/SQL Ela (s)	 Java Ela (s)	 bg time (s)	 bg CPU (s)
---- -------------- -------------- -------------- -------------- -------------- -------------- -------------- -------------- --------------
   1	   10,820.9	     925.6	 10,820.6	     0.1	    0.1 	  39.8		  0.0	     1,098.9	      510.2
   2	   11,965.5	     929.9	 11,965.2	     0.0	    0.0 	  39.9		  0.0	     1,236.1	      486.6
 ~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	   22,786.4	   1,855.5	 22,785.9	     0.2	    0.1 	  79.8		  0.0	     2,335.1	      996.8
 Avg	   11,393.2	     927.7	 11,392.9	     0.1	    0.0 	  39.9		  0.0	     1,167.5	      498.4
 Std	      809.3	       3.1	    809.3	     0.1	    0.1 	   0.1		  0.0		97.0	       16.6
			  --------------------------------------------------------------------------------------------------------------------

Time Model - % of DB time		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]

							      % DB time 							      % bg time
		      ----------------------------------------------------------------------------------------- 		   --------------
	    % Total													 % Total
  I#	    DB time	      DB CPU   SQL Exec Ela	 Parse Ela     Hard Parse     PL/SQL Ela       Java Ela 	 bg time	   bg CPU
---- --------------   -------------- -------------- -------------- -------------- -------------- --------------   --------------   --------------
   1	       47.5		 8.6	      100.0	       0.0	      0.0	     0.0	    0.0 	    47.1	     46.4
   2	       52.5		 7.8	      100.0	       0.0	      0.0	     0.0	    0.0 	    52.9	     39.4
 ~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~   ~~~~~~~~~~~~~~
 Avg	       50.0		 8.2	      100.0	       0.0	      0.0	     0.0	    0.0 	    50.0	     42.9
			  --------------------------------------------------------------------------------------------------------------------


Foreground Wait Classes -  % of Total DB timeDB/Inst: P30DB/p30db1  Snaps: 171
-> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time

	  User I/O	 Sys I/O	 Other	      Applic	    Commit	 Network      Concurcy	      Config	   Cluster	   Admin     Scheduler	      DB CPU
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------
	      87.6	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 0.0	       6.7	     N/A	   N/A		 8.1
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes 		 DB/Inst: P30DB/p30db1	Snaps: 171-172

  I#   User I/O(s)    Sys I/O(s)      Other(s)	  Applic (s)	Commit (s)   Network (s)  Concurcy (s)	  Config (s)   Cluster (s)     Admin (s) Scheduler (s)	  DB CPU (s)	    DB time
---- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- --------------
   1	   9,440.1	     0.0	   1.0		 0.0	       0.0	     0.0	   0.0		 0.0	     732.4	     N/A	   N/A	       925.6	   10,820.9
   2	  10,514.7	     0.0	   0.7		 0.0	       0.0	     0.0	   0.0		 0.0	     796.5	     N/A	   N/A	       929.9	   11,965.5
 ~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~~
 Sum	  19,954.8	     0.0	   1.7		 0.0	       0.0	     0.0	   0.0		 0.0	   1,528.9	     0.0	   0.0	     1,855.5	   22,786.4
 Avg	   9,977.4	     0.0	   0.8		 0.0	       0.0	     0.0	   0.0		 0.0	     764.5	     N/A	   N/A	       927.7	   11,393.2
 Std	     759.8	     0.0	   0.2		 0.0	       0.0	     0.0	   0.0		 0.0	      45.4	     N/A	   N/A		 3.1	      809.3
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Classes -  % of DB time  DB/Inst: P30DB/p30db1	Snaps: 171-172
-> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time

										      % DB time
       -----------------------------------------------------------------------------------------------------------------------------------------------------------------------
																						       % Total
  I#	    User I/O	   Sys I/O	   Other	Applic	      Commit	   Network	Concurcy	Config	     Cluster	     Admin     Scheduler	DB CPU	       DB time
----   ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- ------------- -------------	 -------------
   1		87.2	       0.0	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 6.8	       N/A	     N/A	   8.6		  47.5
   2		87.9	       0.0	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 6.7	       N/A	     N/A	   7.8		  52.5
 ~~~   ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~ ~~~~~~~~~~~~~
 Avg		87.6	       0.0	     0.0	   0.0		 0.0	       0.0	     0.0	   0.0		 6.7	       N/A	     N/A	   8.2
			  --------------------------------------------------------------------------------------------------------------------


Top Timed Events			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time '	       : Per-instance 'Wait Time Avg ' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			4,853,007	0.0	  19,955.02   4.11ms	87.57	    4.11ms     4.03ms	  4.19ms   118.37us    2
		  DB CPU					      N/A	N/A	   1,855.50		 8.14						       2
       System I/O log file parallel write			  201,137	0.0	   1,194.44   5.94ms	 5.24	    5.94ms     5.56ms	  6.32ms   532.91us    2
       Cluster	  gc cr grant 2-way				1,883,913	0.0	   1,151.63 611.30us	 5.05	  611.40us   601.17us	621.63us    14.47us    2
       Other	  LGWR any worker group 			   93,265	0.0	     299.26   3.21ms	 1.31	    3.20ms     3.09ms	  3.30ms   145.87us    2
       Cluster	  gc current grant 2-way			  342,368	0.0	     212.06 619.38us	 0.93	  619.48us   610.16us	628.80us    13.18us    2
       System I/O db file parallel write			   47,298	0.0	     135.96   2.87ms	 0.60	    2.87ms     2.82ms	  2.92ms    71.88us    2
       Cluster	  gc current grant read-mostly invalidatio	   60,796	0.0	      81.44   1.34ms	 0.36	    1.34ms     1.33ms	  1.35ms    12.15us    2
       Other	  LGWR worker group ordering			   16,289	0.0	      46.78   2.87ms	 0.21	    2.86ms     2.77ms	  2.95ms   130.64us    2
       Cluster	  gc cr grant busy				   34,695	0.0	      39.39   1.14ms	 0.17	    1.16ms     1.12ms	  1.20ms    61.04us    2

   1   User I/O   db file sequential read			2,345,152	0.0	   9,440.12   4.03ms	87.24
		  DB CPU					      N/A	N/A	     925.55		 8.55
       Cluster	  gc cr grant 2-way				  951,203	0.0	     571.83 601.17us	 5.28
       System I/O log file parallel write			  100,850	0.0	     561.00   5.56ms	 5.18
       Other	  LGWR any worker group 			   41,204	0.0	     127.47   3.09ms	 1.18
       Cluster	  gc current grant 2-way			  172,974	0.0	     105.54 610.16us	 0.98
       System I/O db file parallel write			   22,919	0.0	      64.68   2.82ms	 0.60
       Cluster	  gc current grant read-mostly invalidatio	   20,618	0.0	      27.38   1.33ms	 0.25
       Other	  LGWR worker group ordering			    7,090	0.0	      19.62   2.77ms	 0.18
       Cluster	  gc cr grant busy				    8,138	0.0	       9.78   1.20ms	 0.09

   2   User I/O   db file sequential read			2,507,855	0.0	  10,514.89   4.19ms	87.88
		  DB CPU					      N/A	N/A	     929.95		 7.77
       System I/O log file parallel write			  100,287	0.0	     633.45   6.32ms	 5.29
       Cluster	  gc cr grant 2-way				  932,710	0.0	     579.80 621.63us	 4.85
       Other	  LGWR any worker group 			   52,061	0.0	     171.79   3.30ms	 1.44
       Cluster	  gc current grant 2-way			  169,394	0.0	     106.51 628.80us	 0.89
       System I/O db file parallel write			   24,379	0.0	      71.28   2.92ms	 0.60
       Cluster	  gc current grant read-mostly invalidatio	   40,178	0.0	      54.05   1.35ms	 0.45
       Cluster	  gc cr grant busy				   26,557	0.0	      29.61   1.12ms	 0.25
       Other	  LGWR worker group ordering			    9,199	0.0	      27.16   2.95ms	 0.23
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Foreground Events		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Foreground Activity is captured in release 11g and above
-> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   User I/O   db file sequential read			4,852,742	0.0	  19,954.76   4.11ms	87.57	    4.11ms     4.03ms	  4.19ms   118.57us    2
		  DB CPU					      N/A	N/A	   1,855.50		 8.14						       2
       Cluster	  gc cr grant 2-way				1,883,896	0.0	   1,151.62 611.30us	 5.05	  611.40us   601.17us	621.63us    14.47us    2
       Cluster	  gc current grant 2-way			  342,209	0.0	     211.97 619.41us	 0.93	  619.51us   610.16us	628.86us    13.22us    2
       Cluster	  gc current grant read-mostly invalidatio	   60,796	0.0	      81.44   1.34ms	 0.36	    1.34ms     1.33ms	  1.35ms    12.15us    2
       Cluster	  gc cr grant busy				   34,694	0.0	      39.39   1.14ms	 0.17	    1.16ms     1.12ms	  1.20ms    61.03us    2
       Cluster	  gc current block 2-way			   19,638	0.0	      14.68 747.46us	 0.06	  746.27us   730.87us	761.66us    21.77us    2
       Cluster	  gc cr block 2-way				    5,463	0.0	       6.95   1.27ms	 0.03	    1.27ms     1.22ms	  1.33ms    75.11us    2
       Cluster	  gc cr grant congested 			    1,768	0.0	       6.64   3.75ms	 0.03	    3.78ms     3.61ms	  3.96ms   245.63us    2
       Cluster	  gc current grant busy 			    6,516	0.0	       6.57   1.01ms	 0.03	     .99ms	.96ms	  1.03ms    49.65us    2

   1   User I/O   db file sequential read			2,345,128	0.0	   9,440.10   4.03ms	87.24
		  DB CPU					      N/A	N/A	     925.55		 8.55
       Cluster	  gc cr grant 2-way				  951,203	0.0	     571.83 601.17us	 5.28
       Cluster	  gc current grant 2-way			  172,969	0.0	     105.54 610.16us	 0.98
       Cluster	  gc current grant read-mostly invalidatio	   20,618	0.0	      27.38   1.33ms	 0.25
       Cluster	  gc cr grant busy				    8,138	0.0	       9.78   1.20ms	 0.09
       Cluster	  gc current block 2-way			    9,061	0.0	       6.62 730.87us	 0.06
       Cluster	  gc cr block 2-way				    2,749	0.0	       3.35   1.22ms	 0.03
       Cluster	  gc cr grant congested 			      723	0.0	       2.86   3.96ms	 0.03
       Cluster	  gc current block busy 			    2,146	0.0	       2.12    .99ms	 0.02

   2   User I/O   db file sequential read			2,507,614	0.0	  10,514.66   4.19ms	87.87
		  DB CPU					      N/A	N/A	     929.95		 7.77
       Cluster	  gc cr grant 2-way				  932,693	0.0	     579.79 621.63us	 4.85
       Cluster	  gc current grant 2-way			  169,240	0.0	     106.43 628.86us	 0.89
       Cluster	  gc current grant read-mostly invalidatio	   40,178	0.0	      54.05   1.35ms	 0.45
       Cluster	  gc cr grant busy				   26,556	0.0	      29.61   1.12ms	 0.25
       Cluster	  gc current block 2-way			   10,577	0.0	       8.06 761.66us	 0.07
       Cluster	  gc current grant busy 			    4,826	0.0	       4.95   1.03ms	 0.04
       Cluster	  gc cr grant congested 			    1,045	0.0	       3.77   3.61ms	 0.03
       Cluster	  gc cr block 2-way				    2,714	0.0	       3.60   1.33ms	 0.03
			  --------------------------------------------------------------------------------------------------------------------

Top Timed Background Events		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> % of bg time: % of background elapsed time
-> Instance '*'  - cluster wide summary
->	    '*'  Waits, %Timeouts, Wait Time Total(s)	   : Cluster-wide total for the wait event
->	    '*'  'Wait Time Avg'		      : Cluster-wide average computed as (Wait Time Total / Event Waits)
->	    '*'  Summary 'Avg Wait Time'	      : Per-instance 'Wait Time Avg' used to compute the following statistics
->	    '*'  [Avg/Min/Max/Std Dev]			   : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'
->	    '*'  Cnt					   : count of instances with wait times for the event

			       Wait				      Event			 Wait Time			      Summary Avg Wait Time
       ---------------------------------------------------   ----------------------   -------------------------------	------------------------------------------------
  I#   Class	  Event 					    Waits %Timeouts	   Total(s) Avg Wait %DB time	       Avg	  Min	     Max    Std Dev  Cnt
----   ---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	---------- ---------- ---------- ---------- ----
   *   System I/O log file parallel write			  201,125	0.0	   1,194.32   5.94ms	51.15	    5.94ms     5.56ms	  6.32ms   532.62us    2
		  background cpu time				      N/A	N/A	     996.84		42.69						       2
       Other	  LGWR any worker group 			   93,260	0.0	     299.24   3.21ms	12.81	    3.20ms     3.09ms	  3.30ms   146.00us    2
       System I/O db file parallel write			   47,298	0.0	     135.96   2.87ms	 5.82	    2.87ms     2.82ms	  2.92ms    71.88us    2
       Other	  LGWR worker group ordering			   16,288	0.0	      46.78   2.87ms	 2.00	    2.86ms     2.77ms	  2.95ms   130.37us    2
       Other	  LGWR all worker groups			    4,965	0.0	      22.09   4.45ms	 0.95	    4.43ms     4.26ms	  4.60ms   235.66us    2
       System I/O control file parallel write			      601	0.0	       5.93   9.87ms	 0.25	    9.90ms     9.40ms	 10.39ms   702.53us    2
       User I/O   Disk file Mirror Read 			    1,818	0.0	       3.99   2.19ms	 0.17	    2.01ms   364.51us	  3.65ms     2.33ms    2
       Other	  IMR slave acknowledgement msg 		    3,624	0.0	       3.32 917.19us	 0.14	  918.22us   295.20us	  1.54ms   881.08us    2
       Other	  Sync ASM rebalance				      108	0.0	       2.28  21.08ms	 0.10	   21.08ms    19.92ms	 22.24ms     1.65ms    2

   1   System I/O log file parallel write			  100,845	0.0	     560.96   5.56ms	51.05
		  background cpu time				      N/A	N/A	     510.19		46.43
       Other	  LGWR any worker group 			   41,200	0.0	     127.45   3.09ms	11.60
       System I/O db file parallel write			   22,919	0.0	      64.68   2.82ms	 5.89
       Other	  LGWR worker group ordering			    7,089	0.0	      19.62   2.77ms	 1.79
       Other	  LGWR all worker groups			    2,227	0.0	       9.50   4.26ms	 0.86
       System I/O control file parallel write			      281	0.0	       2.92  10.39ms	 0.27
       Other	  Sync ASM rebalance				       54	0.0	       1.20  22.24ms	 0.11
       Other	  ASM file metadata operation			    2,001	0.0	       0.95 473.49us	 0.09
       User I/O   ASM IO for non-blocking poll			   23,492	0.0	       0.87  37.12us	 0.08

   2   System I/O log file parallel write			  100,280	0.0	     633.35   6.32ms	51.24
		  background cpu time				      N/A	N/A	     486.65		39.37
       Other	  LGWR any worker group 			   52,060	0.0	     171.79   3.30ms	13.90
       System I/O db file parallel write			   24,379	0.0	      71.28   2.92ms	 5.77
       Other	  LGWR worker group ordering			    9,199	0.0	      27.16   2.95ms	 2.20
       Other	  LGWR all worker groups			    2,738	0.0	      12.59   4.60ms	 1.02
       User I/O   Disk file Mirror Read 			    1,011	0.0	       3.69   3.65ms	 0.30
       System I/O control file parallel write			      320	0.0	       3.01   9.40ms	 0.24
       Other	  IMR slave acknowledgement msg 		    1,809	0.0	       2.79   1.54ms	 0.23
       Other	  Sync ASM rebalance				       54	0.0	       1.08  19.92ms	 0.09
			  --------------------------------------------------------------------------------------------------------------------

Foreground Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
User I/O   db file sequential read			 4,852,742	 0.0	   19,954.76   4.11ms	 87.57	     4.11ms	4.03ms	   4.19ms   118.57us
Cluster    gc cr grant 2-way				 1,883,896	 0.0	    1,151.62 611.30us	  5.05	   611.40us   601.17us	 621.63us    14.47us
Cluster    gc current grant 2-way			   342,209	 0.0	      211.97 619.41us	  0.93	   619.51us   610.16us	 628.86us    13.22us
Cluster    gc current grant read-mostly invalidatio	    60,796	 0.0	       81.44   1.34ms	  0.36	     1.34ms	1.33ms	   1.35ms    12.15us
Cluster    gc cr grant busy				    34,694	 0.0	       39.39   1.14ms	  0.17	     1.16ms	1.12ms	   1.20ms    61.03us
Cluster    gc current block 2-way			    19,638	 0.0	       14.68 747.46us	  0.06	   746.27us   730.87us	 761.66us    21.77us
Cluster    gc cr block 2-way				     5,463	 0.0		6.95   1.27ms	  0.03	     1.27ms	1.22ms	   1.33ms    75.11us
Cluster    gc cr grant congested			     1,768	 0.0		6.64   3.75ms	  0.03	     3.78ms	3.61ms	   3.96ms   245.63us
Cluster    gc current grant busy			     6,516	 0.0		6.57   1.01ms	  0.03	      .99ms	 .96ms	   1.03ms    49.65us
Cluster    gc cr block lost					 7	 0.0		3.88 554.07ms	  0.02	   575.36ms   545.55ms	 605.17ms    42.15ms
Cluster    gc current block busy			     4,290	 0.0		3.79 883.20us	  0.02	   883.15us   779.27us	    .99ms   146.91us
Cluster    gc current grant congested			       310	 0.0		1.22   3.94ms	  0.01	     3.92ms	3.86ms	   3.99ms    95.60us
Other	   KJC: Wait for msg sends to complete		     5,778	 0.0		0.78 134.26us	  0.00	   135.32us   130.44us	 140.20us     6.91us
Cluster    gc current block lost				 1	 0.0		0.52 522.68ms	  0.00	   522.68ms   522.68ms	 522.68ms
Other	   latch: gc element				       311	 0.0		0.22 717.03us	  0.00	   719.16us   684.22us	 754.10us    49.41us
Other	   latch free					       506	 0.0		0.20 404.12us	  0.00	   401.72us   374.08us	 429.36us    39.09us
Other	   latch: enqueue hash chains			       349	 0.0		0.20 561.09us	  0.00	   554.70us   482.78us	 626.62us   101.71us
Cluster    gc buffer busy release				17	 0.0		0.11   6.58ms	  0.00	     6.58ms	6.58ms	   6.58ms
Other	   latch: gcs resource hash			       186	 0.0		0.10 534.66us	  0.00	   525.28us   452.59us	 597.96us   102.79us
Cluster    gc current block congested				19	 0.0		0.07   3.45ms	  0.00	     3.60ms	3.19ms	   4.00ms   575.53us
Other	   latch: redo allocation			       125	 0.0		0.04 318.30us	  0.00	   317.84us   312.60us	 323.07us     7.41us
System I/O control file sequential read 		       144	 0.0		0.04 245.03us	  0.00	   244.43us   243.75us	 245.10us      .96us
Commit	   log file sync					 6	 0.0		0.04   5.83ms	  0.00	     4.10ms	1.49ms	   6.70ms     3.68ms
Cluster    gc cr block congested				 7	 0.0		0.03   4.40ms	  0.00	     3.93ms	2.85ms	   5.01ms     1.53ms
User I/O   Disk file operations I/O				22	 0.0		0.03   1.36ms	  0.00	     2.43ms    81.50us	   4.78ms     3.32ms
User I/O   Disk file Mirror Read				36	 0.0		0.03 801.33us	  0.00	     4.33ms   359.71us	   8.31ms     5.62ms
Other	   IPC send completion sync				27	 0.0		0.02 671.37us	  0.00	   709.27us   641.05us	 777.50us    96.49us
Other	   enq: WF - contention 				18	 0.0		0.02 926.00us	  0.00	   926.00us   926.00us	 926.00us
Other	   enq: FB - contention 				 6	 0.0		0.02   2.75ms	  0.00	     2.75ms	2.75ms	   2.75ms
Cluster    gc cr multi block mixed				13	 0.0		0.02   1.23ms	  0.00	     1.23ms	1.23ms	   1.23ms
Other	   latch: object queue header operation 		25	 0.0		0.01 530.12us	  0.00	   523.60us   360.58us	 686.62us   230.54us
Cluster    gc cr block busy					 2	 0.0		0.01   6.14ms	  0.00	     6.14ms	6.14ms	   6.14ms
Other	   enq: PS - contention 				11	18.2		0.01   1.07ms	  0.00	     1.37ms   908.56us	   1.82ms   645.90us
Other	   latch: cache buffers lru chain			65	 0.0		0.01 172.85us	  0.00	   176.49us   129.09us	 223.90us    67.04us
Applicatio SQL*Net break/reset to client		       122	 0.0		0.01  84.56us	  0.00	    84.56us    84.56us	  84.56us
Other	   PGA memory operation 			       470	 0.0		0.01  20.94us	  0.00	    17.88us	7.13us	  28.62us    15.19us
User I/O   direct path write					 1	 0.0		0.01   9.53ms	  0.00	     9.53ms	9.53ms	   9.53ms
Concurrenc library cache: mutex X				 2	 0.0		0.01   4.46ms	  0.00	     4.46ms	4.46ms	   4.46ms
Concurrenc row cache lock					 8     100.0		0.01   1.08ms	  0.00	     1.08ms	1.08ms	   1.08ms
Other	   name-service call wait				 8	 0.0		0.01   1.01ms	  0.00	     1.01ms   945.50us	   1.08ms    94.05us
Other	   PX Deq: Slave Session Stats				16	 0.0		0.01 448.38us	  0.00	   448.38us    91.50us	 805.25us   504.70us
Other	   CSS initialization					 2	 0.0		0.01   3.36ms	  0.00	     3.36ms	3.36ms	   3.36ms
Cluster    gc current multi block request			 6	 0.0		0.01   1.07ms	  0.00	     1.07ms	1.07ms	   1.07ms
Other	   PX Deq: reap credit				       235     100.0		0.01  24.82us	  0.00	    22.69us    20.17us	  25.21us     3.56us
Concurrenc latch: cache buffers chains				26	 0.0		0.01 215.35us	  0.00	   214.89us   212.90us	 216.88us     2.81us
Other	   latch: call allocation				 3	 0.0		0.00   1.11ms	  0.00	     1.11ms	1.11ms	   1.11ms
Other	   DLM cross inst call completion			 9	 0.0		0.00 317.00us	  0.00	   317.00us   317.00us	 317.00us
Network    SQL*Net message to client			       213	 0.0		0.00  10.49us	  0.00	    12.36us	8.89us	  15.84us     4.91us
Other	   latch: messages					 5	 0.0		0.00 424.60us	  0.00	   400.00us   359.00us	 441.00us    57.98us
Other	   CSS operation: action				 2	 0.0		0.00 907.00us	  0.00	   907.00us   907.00us	 907.00us
Other	   CSS operation: query 				 6	 0.0		0.00 220.17us	  0.00	   220.17us   220.17us	 220.17us
Cluster    gc index operation					 1	 0.0		0.00   1.30ms	  0.00	     1.30ms	1.30ms	   1.30ms
Other	   latch: undo global data				 6	 0.0		0.00 204.00us	  0.00	   239.63us   132.75us	 346.50us   151.14us
Cluster    gc current split					 2	 0.0		0.00 507.50us	  0.00	   507.50us   507.50us	 507.50us
Applicatio enq: TM - contention 				 1	 0.0		0.00 593.00us	  0.00	   593.00us   593.00us	 593.00us
Configurat enq: HW - contention 				 1	 0.0		0.00 492.00us	  0.00	   492.00us   492.00us	 492.00us
Other	   lock deadlock retry					 1     100.0		0.00 100.00us	  0.00	   100.00us   100.00us	 100.00us
Network    IPC group service call				 6	 0.0		0.00  12.83us	  0.00	    13.70us    12.40us	  15.00us     1.84us
Other	   asynch descriptor resize				 3     100.0		0.00  25.00us	  0.00	    28.25us    18.50us	  38.00us    13.79us
User I/O   ASM IO for non-blocking poll 			 3	 0.0		0.00  10.00us	  0.00	    10.00us    10.00us	  10.00us
Foreground Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %DB time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Other	   ges resource directory to be unfrozen		 3	 0.0		0.00   9.33us	  0.00	    10.25us	7.50us	  13.00us     3.89us
Other	   AWR Flush						 5	 0.0		0.00   5.40us	  0.00	     5.40us	5.40us	   5.40us
Idle	   watchdog main loop				     1,612	 0.0	    4,836.09 3000.05m	 21.22	  3000.05ms  3000.04ms	3000.07ms    16.05us
Idle	   SQL*Net message from client			       213	 0.0	      610.16 2864.59m	  2.68	  1860.53ms   833.39us	3720.23ms  2630.01ms
Idle	   PX Deq: Execution Msg				48	 0.0		0.10   2.06ms	  0.00	     2.06ms	1.42ms	   2.71ms   911.93us
Idle	   PX Deq: Msg Fragment 			       120	 0.0		0.06 497.42us	  0.00	   497.42us   484.22us	 510.62us    18.67us
			  --------------------------------------------------------------------------------------------------------------------

Background Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
System I/O log file parallel write			   201,125	 0.0	    1,194.32   5.94ms	  0.51	     5.94ms	5.56ms	   6.32ms   532.62us
Other	   LGWR any worker group			    93,260	 0.0	      299.24   3.21ms	  0.13	     3.20ms	3.09ms	   3.30ms   146.00us
System I/O db file parallel write			    47,298	 0.0	      135.96   2.87ms	  0.06	     2.87ms	2.82ms	   2.92ms    71.88us
Other	   LGWR worker group ordering			    16,288	 0.0	       46.78   2.87ms	  0.02	     2.86ms	2.77ms	   2.95ms   130.37us
Other	   LGWR all worker groups			     4,965	 0.0	       22.09   4.45ms	  0.01	     4.43ms	4.26ms	   4.60ms   235.66us
System I/O control file parallel write			       601	 0.0		5.93   9.87ms	  0.00	     9.90ms	9.40ms	  10.39ms   702.53us
User I/O   Disk file Mirror Read			     1,818	 0.0		3.99   2.19ms	  0.00	     2.01ms   364.51us	   3.65ms     2.33ms
Other	   IMR slave acknowledgement msg		     3,624	 0.0		3.32 917.19us	  0.00	   918.22us   295.20us	   1.54ms   881.08us
Other	   Sync ASM rebalance				       108	 0.0		2.28  21.08ms	  0.00	    21.08ms    19.92ms	  22.24ms     1.65ms
Other	   ASM file metadata operation			     4,033	 0.0		1.98 490.49us	  0.00	   490.36us   473.49us	 507.24us    23.86us
System I/O control file sequential read 		     6,697	 0.0		1.74 259.28us	  0.00	   260.84us   248.86us	 272.82us    16.94us
User I/O   ASM IO for non-blocking poll 		    48,343	 0.0		1.72  35.66us	  0.00	    35.70us    34.28us	  37.12us     2.01us
Other	   KSV master wait				     1,448	62.2		1.58   1.09ms	  0.00	     1.09ms	1.03ms	   1.15ms    84.47us
Other	   enq: CR - block range reuse ckpt		       156	 0.0		1.29   8.28ms	  0.00	     9.03ms	4.20ms	  13.85ms     6.82ms
Cluster    gc cr block 2-way				     1,499	 0.0		0.88 586.79us	  0.00	   773.27us   585.78us	    .96ms   265.14us
Other	   gcs log flush sync				     1,593	 0.0		0.86 540.50us	  0.00	   543.35us   508.20us	 578.50us    49.71us
Other	   DFS lock handle				       851     100.0		0.81 946.52us	  0.00	      .96ms   919.79us	   1.01ms    60.70us
Other	   PX Deq: reap credit				    21,212     100.0		0.66  30.92us	  0.00	    30.93us    30.68us	  31.18us   354.90ns
System I/O log file sequential read			       504	 0.0		0.63   1.24ms	  0.00	     1.24ms	1.17ms	   1.31ms    99.50us
Cluster    gc cr multi block mixed				 5	 0.0		0.51 102.24ms	  0.00	   127.37ms	1.71ms	 253.04ms   177.72ms
Other	   AQ: RAC AQ Network				    12,056     100.0		0.41  34.02us	  0.00	    34.02us    33.38us	  34.66us   905.12ns
Other	   CGS wait for IPC msg 			    12,329     100.0		0.39  31.54us	  0.00	    31.54us    30.86us	  32.23us      .97us
Cluster    gc current block busy			       112	 0.0		0.39   3.46ms	  0.00	     2.19ms   773.50us	   3.61ms     2.01ms
Other	   reliable message					70	 0.0		0.39   5.52ms	  0.00	     7.41ms	3.93ms	  10.89ms     4.92ms
Other	   latch free					     1,080	 0.0		0.28 262.14us	  0.00	   262.33us   259.30us	 265.37us     4.29us
Cluster    gc cr block busy					35	 0.0		0.27   7.84ms	  0.00	     7.84ms	7.84ms	   7.84ms
Other	   latch: gcs resource hash			       483	 0.0		0.26 547.12us	  0.00	   550.82us   527.62us	 574.01us    32.80us
User I/O   db file sequential read			       264	 0.0		0.26	.97ms	  0.00	     1.02ms	 .96ms	   1.08ms    86.86us
Cluster    gc buffer busy release				15	 0.0		0.22  14.70ms	  0.00	    14.70ms    14.70ms	  14.70ms
Other	   oracle thread bootstrap				 8	 0.0		0.21  26.17ms	  0.00	    26.17ms    23.12ms	  29.23ms     4.32ms
System I/O db file async I/O submit			    13,832	 0.0		0.15  10.76us	  0.00	    10.75us    10.48us	  11.02us   381.32ns
Other	   LGWR wait for redo copy			       280	 0.0		0.14 517.69us	  0.00	   520.74us   467.40us	 574.08us    75.44us
User I/O   direct path write temp				30	 0.0		0.14   4.50ms	  0.00	     4.50ms	4.50ms	   4.50ms
Other	   latch: cache buffers lru chain		       189	 0.0		0.11 561.20us	  0.00	   554.25us   491.73us	 616.77us    88.42us
Other	   enq: CF - contention 				94	66.0		0.09	.97ms	  0.00	      .97ms	 .96ms	    .99ms    19.74us
Cluster    gc current grant 2-way			       159	 0.0		0.09 560.99us	  0.00	   518.33us   472.80us	 563.85us    64.38us
User I/O   Disk file operations I/O			       341	 0.0		0.08 231.11us	  0.00	   238.06us   196.50us	 279.63us    58.78us
Network    IPC group service call			       919	 0.0		0.08  84.87us	  0.00	    84.87us    83.23us	  86.50us     2.31us
Cluster    gc current grant busy				86	 0.0		0.08 883.14us	  0.00	   746.37us   591.60us	 901.14us   218.87us
Applicatio enq: TM - contention 				 3	 0.0		0.06  20.32ms	  0.00	    15.47ms   941.00us	  30.01ms    20.55ms
Other	   CSS operation: data query				36	 0.0		0.06   1.65ms	  0.00	     1.65ms	1.58ms	   1.72ms   101.98us
Other	   ges inquiry response 				69	 0.0		0.06 842.65us	  0.00	   848.85us   763.27us	 934.44us   121.03us
Other	   ksxr poll remote instances			     1,666     100.0		0.06  34.39us	  0.00	    34.33us    32.80us	  35.86us     2.17us
Other	   latch: redo allocation			       122	 0.0		0.05 450.14us	  0.00	   467.10us   373.03us	 561.18us   133.04us
Applicatio enq: RO - fast object reuse				41	 0.0		0.05   1.23ms	  0.00	      .99ms   513.60us	   1.47ms   673.40us
Other	   CSS operation: data update				40	 0.0		0.05   1.24ms	  0.00	     1.24ms	1.17ms	   1.31ms   102.32us
Other	   PX Deq: Join ACK					16	 0.0		0.05   2.92ms	  0.00	     4.42ms	2.02ms	   6.83ms     3.40ms
User I/O   direct path write					 8	 0.0		0.04   5.19ms	  0.00	     7.09ms	4.56ms	   9.61ms     3.57ms
Other	   IPC send completion sync			     1,217	99.3		0.04  32.72us	  0.00	    32.70us    28.87us	  36.54us     5.43us
Other	   latch: gc element					68	 0.0		0.04 560.66us	  0.00	   552.21us   408.53us	 695.89us   203.19us
Cluster    gc current block 2-way				42	 0.0		0.03 775.86us	  0.00	   793.28us   732.30us	 854.27us    86.25us
Other	   kjctssqmg: quick message send wait			47     100.0		0.03 609.26us	  0.00	   603.92us   520.36us	 687.48us   118.17us
Concurrenc row cache lock					17     100.0		0.02   1.37ms	  0.00	     1.35ms	1.30ms	   1.41ms    77.58us
Other	   KJC: Wait for msg sends to complete			40	50.0		0.02 576.05us	  0.00	   345.53us    74.33us	 616.73us   383.53us
Other	   os thread creation					 8	 0.0		0.02   2.56ms	  0.00	     2.56ms	1.82ms	   3.30ms     1.04ms
Other	   enq: US - contention 				16	 0.0		0.02	.96ms	  0.00	   930.52us   686.71us	   1.17ms   344.80us
Cluster    gc cr grant 2-way					17	 0.0		0.01 783.88us	  0.00	   783.88us   783.88us	 783.88us
Other	   enq: PS - contention 				13	23.1		0.01 913.23us	  0.00	     1.06ms   783.30us	   1.35ms   398.12us
Cluster    gc cr disk read					15	 0.0		0.01 783.80us	  0.00	   785.47us   777.11us	 793.83us    11.82us
Other	   enq: WF - contention 				12	 0.0		0.01 883.92us	  0.00	     1.05ms   850.27us	   1.25ms   285.48us
Background Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Concurrenc latch: cache buffers chains				19	 0.0		0.01 552.16us	  0.00	   854.23us   332.47us	   1.38ms   737.89us
Other	   enq: WT - contention 				 8	 0.0		0.01   1.30ms	  0.00	     1.30ms	1.30ms	   1.30ms
Other	   enq: CO - master slave det				10     100.0		0.01 941.40us	  0.00	   941.40us   941.40us	 941.40us
Concurrenc latch: MGA shared context latch			 3	 0.0		0.01   2.71ms	  0.00	     2.71ms	2.71ms	   2.71ms
Concurrenc libcache interrupt action by LCK		     1,007	 0.0		0.01   7.19us	  0.00	     7.19us	6.49us	   7.88us      .98us
Other	   PGA memory operation 			       154	 0.0		0.01  46.25us	  0.00	    45.78us    42.19us	  49.37us     5.07us
Configurat latch: redo writing					11	 0.0		0.00 452.00us	  0.00	   480.07us   171.33us	 788.80us   436.61us
Other	   latch: ges resource hash list			16	 0.0		0.00 261.88us	  0.00	   261.88us   236.25us	 287.50us    36.24us
User I/O   db file scattered read				15	 0.0		0.00 278.87us	  0.00	   278.87us   278.87us	 278.87us
Other	   latch: messages					10	 0.0		0.00 413.00us	  0.00	   460.75us   222.00us	 699.50us   337.64us
Other	   PX Deq: Slave Session Stats				16	 0.0		0.00 245.88us	  0.00	   281.18us   224.69us	 337.67us    79.88us
Other	   DLM cross inst call completion			17	 0.0		0.00 212.53us	  0.00	   182.45us   109.40us	 255.50us   103.31us
Other	   enq: TA - contention 				 5	 0.0		0.00 685.60us	  0.00	   674.92us   621.50us	 728.33us    75.54us
Other	   enq: TD - KTF dump entries				 3	 0.0		0.00   1.12ms	  0.00	     1.31ms   738.00us	   1.89ms   811.05us
Other	   latch: object queue header operation 		 9	 0.0		0.00 330.89us	  0.00	   277.67us   118.00us	 437.33us   225.80us
Cluster    gc index operation					 2	 0.0		0.00   1.24ms	  0.00	     1.24ms	1.24ms	   1.24ms
Other	   enq: DW - contention 				 2     100.0		0.00   1.13ms	  0.00	     1.13ms	1.00ms	   1.25ms   176.78us
Concurrenc library cache lock					 1     100.0		0.00   2.02ms	  0.00	     2.02ms	2.02ms	   2.02ms
Concurrenc enq: TX - index contention				 2	 0.0		0.00   1.00ms	  0.00	     1.00ms	1.00ms	   1.00ms
Other	   name-service call wait				 2	 0.0		0.00	.99ms	  0.00	      .99ms   866.00us	   1.11ms   175.36us
Concurrenc latch: MGA shared context root latch 		 3	 0.0		0.00 659.33us	  0.00	   659.33us   659.33us	 659.33us
Configurat enq: HW - contention 				 2	 0.0		0.00 940.00us	  0.00	   940.00us   940.00us	 940.00us
Other	   PX Deq: Signal ACK EXT				16	 0.0		0.00 113.50us	  0.00	   124.72us   106.77us	 142.67us    25.38us
Other	   enq: FB - contention 				 2	 0.0		0.00 844.50us	  0.00	   844.50us   844.50us	 844.50us
Other	   enq: AF - task serialization 			 1	 0.0		0.00   1.69ms	  0.00	     1.69ms	1.69ms	   1.69ms
Other	   latch: enqueue hash chains				 3	 0.0		0.00 534.33us	  0.00	   710.00us   183.00us	   1.24ms   745.29us
Cluster    gc current multi block request			 1	 0.0		0.00   1.27ms	  0.00	     1.27ms	1.27ms	   1.27ms
Cluster    gc current split					 2	 0.0		0.00 626.50us	  0.00	   626.50us   626.50us	 626.50us
Other	   latch: undo global data				 1	 0.0		0.00   1.19ms	  0.00	     1.19ms	1.19ms	   1.19ms
Other	   wait list latch free 				 1	 0.0		0.00   1.13ms	  0.00	     1.13ms	1.13ms	   1.13ms
Other	   GCR CSS group update 				36	 0.0		0.00  27.36us	  0.00	    27.36us    18.94us	  35.78us    11.90us
Other	   enq: TO - contention 				 1	 0.0		0.00 873.00us	  0.00	   873.00us   873.00us	 873.00us
Cluster    gc cr grant busy					 1	 0.0		0.00 806.00us	  0.00	   806.00us   806.00us	 806.00us
Other	   GCR CSS group query					36	 0.0		0.00  19.56us	  0.00	    19.56us    16.28us	  22.83us     4.64us
Concurrenc buffer busy waits					 6	 0.0		0.00 105.33us	  0.00	   112.75us    90.50us	 135.00us    31.47us
Concurrenc latch: MGA heap latch				 1	 0.0		0.00 514.00us	  0.00	   514.00us   514.00us	 514.00us
Other	   latch: checkpoint queue latch			 5	 0.0		0.00  93.80us	  0.00	   107.67us    38.33us	 177.00us    98.05us
Other	   latch: call allocation				 1	 0.0		0.00 443.00us	  0.00	   443.00us   443.00us	 443.00us
Other	   asynch descriptor resize				47     100.0		0.00   7.32us	  0.00	     7.30us	6.52us	   8.08us     1.10us
Network    SQL*Net message to client				43	 0.0		0.00   5.49us	  0.00	     5.49us	5.48us	   5.50us    16.84ns
Other	   transaction						 1	 0.0		0.00 187.00us	  0.00	   187.00us   187.00us	 187.00us
Other	   ges resource directory to be unfrozen		 3	 0.0		0.00  19.33us	  0.00	    15.75us	5.00us	  26.50us    15.20us
Other	   undo_retention publish retry 			 4	 0.0		0.00   7.00us	  0.00	     7.00us	6.00us	   8.00us     1.41us
Other	   AWR Flush						 4	 0.0		0.00   5.25us	  0.00	     5.25us	5.25us	   5.25us
Other	   ASM background starting				 1	 0.0		0.00   5.00us	  0.00	     5.00us	5.00us	   5.00us
Idle	   rdbms ipc message				   380,649	 5.9	   27,187.45  71.42ms	 11.64	    71.71ms    67.26ms	  76.16ms     6.29ms
Idle	   PX Idle Wait 					18	 0.0	   20,523.79 1140.21	  8.79	  1140.21 s  1139.46 s	1140.96 s  1062.67ms
Idle	   Space Manager: slave idle wait		     5,123	 0.0	   19,313.44 3769.95m	  8.27	  3769.95ms  3767.08ms	3772.82ms     4.06ms
Idle	   class slave wait				    15,076	79.4	    8,733.05 579.27ms	  3.74	   579.26ms   560.40ms	 598.12ms    26.67ms
Idle	   wait for unread message on broadcast cha	     1,852	99.9	    3,626.09 1957.93m	  1.55	  1957.93ms  1957.39ms	1958.47ms   767.07us
Idle	   ges remote message				    34,338	 0.0	    2,416.01  70.36ms	  1.03	    70.36ms    69.77ms	  70.96ms   839.36us
Idle	   GCR sleep					     8,047	 0.0	    2,415.19 300.14ms	  1.03	   300.14ms   300.13ms	 300.15ms    15.32us
Idle	   pmon timer					       805     100.0	    2,414.95 2999.94m	  1.03	  2999.94ms  2999.91ms	2999.97ms    38.13us
Idle	   DIAG idle wait				    15,184	82.9	    2,412.01 158.85ms	  1.03	   158.86ms   158.05ms	 159.66ms     1.14ms
Idle	   gcs yield cpu				    82,321     100.0	    2,405.17  29.22ms	  1.03	    29.22ms    29.21ms	  29.23ms    12.66us
Idle	   gcs remote message				 2,977,165	 0.0	    2,035.93 683.85us	  0.87	   683.90us   679.88us	 687.91us     5.67us
Idle	   Data Guard: Gap Manager				21	 0.0	    1,260.01  60.00 s	  0.54	    60.00 s    60.00 s	  60.00 s   140.85us
Idle	   Streams AQ: qmn slave idle wait			44	 0.0	    1,232.05  28.00 s	  0.53	    28.00 s    28.00 s	  28.00 s   235.08us
Idle	   Streams AQ: qmn coordinator idle wait		88	 0.0	    1,232.04  14.00 s	  0.53	    14.00 s    14.00 s	  14.00 s    61.18us
Idle	   ASM background timer 			     3,356	 0.0	    1,210.18 360.60ms	  0.52	   360.66ms   356.11ms	 365.20ms     6.43ms
Background Wait Events (Global) 	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> s - second, ms - millisecond, us - microsecond, ns - nanosecond
-> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]
-> ordered by wait time desc, waits desc (idle events last)

			Wait				       Event			  Wait Time			    Summary Avg Wait Time
---------------------------------------------------   ----------------------   -------------------------------	 -------------------------------------------
Class	   Event					     Waits %Timeouts	    Total(s) Avg Wait %bg time		Avg	   Min	      Max    Std Dev
---------- ----------------------------------------   ------------ ---------   ------------- -------- --------	 ---------- ---------- ---------- ----------
Idle	   Streams AQ: waiting for time management		 0	 N/A	    1,210.01		  0.52
Idle	   heartbeat redo informer			     1,209	 0.0	    1,209.19 1000.16m	  0.52	  1000.16ms  1000.15ms	1000.17ms     9.90us
Idle	   OFS idle					       403     100.0	    1,209.02 3000.05m	  0.52	  3000.05ms  3000.02ms	3000.08ms    42.15us
Idle	   pman timer					       403     100.0	    1,208.89 2999.72m	  0.52	  2999.72ms  2999.69ms	2999.74ms    37.12us
Idle	   REPL Capture/Apply: RAC AQ qmn coordinat		20     100.0	    1,208.54  60.43 s	  0.52	    60.43 s    60.42 s	  60.43 s     6.27ms
Idle	   SCM slave idle				    12,115	 0.0	    1,207.50  99.67ms	  0.52	    99.67ms    99.65ms	  99.69ms    29.97us
Idle	   ASM cluster membership changes		       689	85.8	    1,207.27 1752.21m	  0.52	  1752.21ms  1750.40ms	1754.02ms     2.56ms
Idle	   lreg timer					       402     100.0	    1,207.06 3002.64m	  0.52	  3002.64ms  3002.62ms	3002.65ms    20.04us
Idle	   PING 					     1,079	21.3	    1,200.73 1112.82m	  0.51	  1114.27ms  1074.01ms	1154.54ms    56.94ms
Idle	   shared server idle wait				 0	 N/A	    1,200.25		  0.51
Idle	   dispatcher timer					20     100.0	    1,200.12  60.01 s	  0.51	    60.01 s    60.01 s	  60.01 s   579.12us
Idle	   VKRM Idle						 0	 N/A	    1,200.10		  0.51
Idle	   AQPC idle						40     100.0	    1,200.03  30.00 s	  0.51	    30.00 s    30.00 s	  30.00 s    43.63us
Idle	   Data Guard: Timer					 2	 0.0	    1,200.00 600.00 s	  0.51	   600.00 s   600.00 s	 600.00 s   736.81us
Idle	   LGWR worker group idle			   167,311	 0.0	    1,128.18   6.74ms	  0.48	     6.74ms	6.46ms	   7.01ms   387.18us
Idle	   smon timer						32	 0.0	    1,042.85  32.59 s	  0.45	    36.82 s    25.54 s	  48.10 s    15.96 s
Idle	   PX Deq: Execute Reply				16	 0.0		0.07   4.29ms	  0.00	     8.69ms	1.65ms	  15.72ms     9.95ms
Idle	   PX Deq Credit: send blkd				60	 0.0		0.05 825.58us	  0.00	   825.58us   825.58us	 825.58us
Idle	   SQL*Net message from client				44	 0.0		0.05   1.09ms	  0.00	     1.09ms   924.14us	   1.25ms   229.74us
Idle	   RMA: IPC0 completion sync			     1,314	 0.0		0.03  25.78us	  0.00	    25.78us    25.48us	  26.09us   430.51ns
Idle	   PX Deq: Parse Reply					16	 0.0		0.03   1.90ms	  0.00	     2.10ms	1.78ms	   2.43ms   456.14us
Idle	   heartbeat monitor sleep				 3	 0.0		0.00   4.67us	  0.00	     4.50us	4.00us	   5.00us   707.11ns
			  --------------------------------------------------------------------------------------------------------------------

Wait Event Histogram (Global)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
AQ: RAC AQ Network	     12K					    0.7     83.1      9.6      4.1	1.6	 0.6	  0.2	   0.1	 0.0(1)   0.0(1)   0.0(1)
ASM IO for non-blocking p  48.4K				   0.5	   61.9     20.7      7.0      5.3	2.7	 1.2	  0.4	   0.2	0.0(21)   0.0(2)   0.0(1)
ASM background starting        1				 100.0
ASM file metadata operati   4032			  0.1	  32.2	    1.6     35.2      9.6      5.4	3.0	 4.8	  1.0	   0.5	    2.8      2.9      0.7   0.0(1)	0.1   0.0(1)
AWR Flush		       9				 100.0
CGS wait for IPC msg	   12.3K					    4.9     80.2      8.4      4.1	1.5	 0.6	  0.2	   0.1
CSS initialization	       2						    50.0								    50.0
CSS operation: action	       2												100.0
CSS operation: data query     36											 8.3	 41.7	  13.9	   33.3      2.8
CSS operation: data updat     40												 40.0	  52.5	    7.5
CSS operation: query	       6			 16.7	  66.7									  16.7
DFS lock handle 	     851							      0.2		0.9	15.7	 58.4	  19.7	    3.6      0.8      0.5
DLM cross inst call compl     26					    3.8     57.7     11.5		7.7	 7.7	  3.8	   3.8	    3.8
Disk file Mirror Read	    1852								       0.1     21.8	19.4	 11.3	  34.4	    6.4      2.3      2.1      1.4	0.7	 0.1	  0.2
Disk file operations I/O     364				   1.4	    3.3     12.6      4.7      2.7     44.8	26.1	  2.5	   1.6				       0.3
GCR CSS group query	      36					   80.6     11.1      2.8      5.6
GCR CSS group update	      36					   75.0      5.6     13.9		5.6
IMR slave acknowledgement   3624					    4.7     13.4      6.4     17.0     17.8	17.4	  8.1	  10.2	    2.5      0.7      0.8      0.6	0.3	 0.1	  0.1
IPC group service call	     920				   0.3	    0.4      8.3     39.3     40.4	8.4	 2.1	  0.7	   0.1
IPC send completion sync    1244					    1.1     83.2      7.9      3.1	1.4	 1.7	  0.7	   0.8
KJC: Wait for msg sends t   5810						     0.1     40.4     44.0	8.7	 3.6	  1.8	   0.6	    0.5      0.3   0.0(1)
KSV master wait 	    1448				   0.1	   13.0     36.3      6.8      5.7     12.5	 3.7	  1.9	   1.6	    7.9      8.4      2.0      0.1	0.1
LGWR all worker groups	    4984								    0.0(1)	0.2	 0.1	  0.1	   1.1	   64.6     28.9      3.0      1.6	0.3   0.0(1)
LGWR any worker group	     93K					    0.2  0.0(10)      0.1      0.8	1.8	 4.0	  8.3	  18.7	   50.4     12.3      1.2      1.9	0.3  0.0(37)   0.0(4)
LGWR wait for redo copy      278				   5.0	    3.2      0.7      6.1     14.7     20.5	24.1	 12.9	   7.6	    3.6      1.4
LGWR worker group orderin  16.2K		       0.0(1)	   0.4	    0.4      0.2      0.8      1.6	1.6	 1.8	  2.3	   6.2	   77.6      6.6      0.4   0.0(7)	      0.0(2)   0.0(1)
PGA memory operation	     624				  54.2	   27.7      9.6      4.3      1.6	1.6	 0.5	  0.2	   0.2		     0.2
PX Deq: Join ACK	      16												 37.5	   6.3	   37.5     12.5      6.3
PX Deq: Signal ACK EXT	      16					   12.5     50.0		       25.0	12.5
PX Deq: Slave Session Sta     32					    9.4     18.8	      12.5     25.0	 6.3	 18.8	   9.4
PX Deq: reap credit	   21.4K					    3.5     83.0      8.2      3.2	1.2	 0.6	  0.2	   0.1	 0.0(2)   0.0(1)
SQL*Net break/reset to cl    122				  26.2	   20.5      1.6      4.1     30.3     10.7	 4.9	  1.6
SQL*Net message to client    256				  93.4	    2.3      0.4      2.0      0.8	0.8	 0.4
Sync ASM rebalance	     108				   1.9	   38.9      1.9      0.9		2.8	 7.4	  8.3	   4.6			      5.6      1.9     12.0	13.0	  0.9
asynch descriptor resize      50				  86.0	    8.0      2.0      4.0
buffer busy waits	       6						    16.7     16.7     33.3     33.3
control file parallel wri    600														   12.8     64.8      8.7      7.3	4.8	 1.5
control file sequential r   6822					    8.7     15.7      1.5      1.9     33.7	30.2	  6.9	   1.0	    0.3   0.0(3)   0.0(2)   0.0(2)
db file async I/O submit   13.9K			  0.5	  92.1	    2.6      1.5      1.4      0.9	0.5	 0.2	  0.1	   0.1	 0.0(2)
db file parallel write	   47.4K					    0.1      0.5      4.6      4.7	7.9	 9.6	 15.7	  23.6	   20.0      6.8      2.2      3.6	0.7   0.0(8)		0.0(1)
db file scattered read	      15									       26.7	73.3
db file sequential read     4.8M								    0.0(3)	0.3	13.2	  3.7	   0.6	   64.5     12.9      1.9      2.1	0.9 0.0(1203  0.0(39)  0.0(21)
direct path write	       9					   11.1 								   22.2     33.3     33.3
direct path write temp	      30														   30.0     70.0
enq: AF - task serializat      1													 100.0
enq: CF - contention	      94											 2.1	 70.2	  25.5	    2.1
enq: CO - master slave de     10												 90.0		   10.0
enq: CR - block range reu    164											 9.1	 42.1	  27.4	    5.5      3.0      3.0      4.3	3.7	 0.6	  0.6	   0.6
enq: DW - contention	       2												 50.0	  50.0
enq: FB - contention	       4											75.0	 25.0
enq: HW - contention	       2											50.0		  50.0
enq: PS - contention	      24								       4.2		16.7	 41.7	  33.3	    4.2
enq: RO - fast object reu     41											36.6	 36.6	   2.4	   19.5      4.9
enq: TA - contention	       5												100.0
enq: TD - KTF dump entrie      3												 66.7	  33.3
enq: TM - contention	       4												 50.0				     25.0	       25.0
enq: TO - contention	       1												100.0
enq: TX - index contentio      8											62.5	 25.0	  12.5
enq: US - contention	      16											 6.3	 81.3	   6.3		     6.3
enq: WF - contention	      30								       3.3		 6.7	 56.7	  30.0	    3.3
Wait Event Histogram (Global)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> When % of Total Waits is  0.0 the count is displayed in parenthesis

															      % of Total Waits
				   -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Event			   Waits       <1us	<2us	 <4us	  <8us	  <16us    <32us    <64us   <128us   <256us   <512us	 <1ms	  <2ms	   <4ms     <8ms    <16ms    <32ms    <64ms   <128ms   <256ms	<512ms	    <1s     >=1s
------------------------- ------   -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- -------- --------
enq: WT - contention	       8												 62.5	  12.5	   25.0
gc buffer busy release	      46					    4.3 	      4.3     13.0				   2.2	   21.7     28.3     23.9      2.2
gc cr block 2-way	    6928							      0.1      0.3	0.6	19.5	 53.8	  10.7	   12.9      1.9      0.1   0.0(2)   0.0(2)
gc cr block busy	      38														   18.4     50.0     26.3      2.6	2.6
gc cr block congested	       7													  14.3	   42.9     28.6     14.3
gc cr block lost	       7																						  42.9	   57.1
gc cr disk read 	      15								       6.7		40.0	 26.7	  20.0	    6.7
gc cr grant 2-way	    1.9M							      0.4      0.8	2.1	51.2	 36.6	   7.0	    1.4      0.3 0.0(856)  0.0(61)  0.0(16)   0.0(1)
gc cr grant busy	   34.7K						     0.1      0.1      0.1	0.3	 6.8	 62.2	  24.9	    4.3      1.0      0.2   0.0(3)					 0.0(4)
gc cr grant congested	    1761												  0.2	  17.3	   53.0     26.0      3.0      0.6	0.1
gc cr multi block mixed       18											 5.6	 27.8	  44.4	   16.7 							   5.6
gc current block 2-way	   19.4K							      0.1      0.6	0.5	25.7	 60.6	  10.5	    1.6      0.4      0.1   0.0(3)   0.0(1)
gc current block busy	    4346							      0.2      0.5	0.7	26.7	 56.2	  11.5	    1.9      1.4      0.8      0.2
gc current block congeste     18													  11.1	   66.7     16.7      5.6
gc current block lost	       1																						 100.0
gc current grant 2-way	  341.5K							      0.5      0.9	2.1	50.4	 36.9	   7.3	    1.5      0.4 0.0(147)   0.0(7)   0.0(2)
gc current grant busy	    6583					 0.0(1)      0.1      0.1      0.1	0.4	 8.0	 61.9	  24.1	    4.2      1.0      0.2
gc current grant congeste    310													  19.7	   53.2     22.6      2.9      1.0	0.6
gc current grant read-mos  60.7K					 0.0(3)  0.0(21)  0.0(10)      0.1	0.1	 1.1	 35.7	  53.5	    8.0      1.2      0.2  0.0(24)   0.0(1)
gc current multi block re      2											50.0		  50.0
gc current split	       6											33.3	 66.7
gc index operation	       5											20.0	 20.0	  40.0	   20.0
gcs log flush sync	     733					    4.4      7.5      6.7     13.9     12.6	16.1	 14.6	   5.5	   10.5      5.5      2.6      0.3
ges inquiry response	      71											21.1	 56.3	  21.1	    1.4
ges resource directory to      6				  50.0	   33.3 	     16.7
kjctssqmg: quick message      47					    2.1      4.3      4.3      2.1	6.4	31.9	 40.4	   4.3	    4.3
ksxr poll remote instance   1673					    1.4     80.9      9.4      5.3	2.2	 0.8	  0.1
latch free		    1590					    7.1      1.3      4.7     19.6     30.9	20.8	 11.1	   3.8	    0.7
latch: MGA heap latch	       1												100.0
latch: MGA shared context      3								      66.7						    33.3
latch: MGA shared context      3							     33.3	       33.3			  33.3
latch: cache buffers chai     41					   12.2      7.3      7.3     12.2     19.5	22.0	  9.8	   4.9	    4.9
latch: cache buffers lru     254					   12.6      2.8      2.4     17.7     20.5	18.9	 13.8	   7.1	    3.1      1.2
latch: call allocation	       4											25.0	 25.0	  50.0
latch: checkpoint queue l      5					   40.0 		      40.0		20.0
latch: enqueue hash chain    350					    8.0      2.0      4.6     14.0     21.1	21.7	 17.1	   8.0	    2.0      0.6      0.6      0.3
latch: gc element	     377					    3.7      1.1      6.6     12.2     17.8	21.5	 18.6	  13.3	    3.2      1.3      0.8
latch: gcs resource hash     664					    6.8      5.6      9.9     16.1     20.0	17.5	 11.4	   7.2	    3.5      1.5      0.5
latch: ges resource hash      16					    6.3      6.3	      12.5     37.5	18.8	 18.8
latch: messages 	      15					   13.3      6.7			6.7	46.7	 20.0	   6.7
latch: object queue heade     34						     2.9      5.9     20.6     23.5	23.5	 14.7	   5.9	    2.9
latch: redo allocation	     247					   13.4      2.4      6.1     19.8     17.8	20.2	 10.9	   6.9	    1.2      1.2
latch: redo writing	      11							      9.1     36.4     18.2	18.2		  18.2
latch: undo global data        7					   14.3 		      42.9		14.3	 14.3	  14.3
libcache interrupt action   1004			  1.4	  91.6	    4.4      0.9      0.5      0.9	0.2	 0.1
library cache lock	       1													 100.0
library cache: mutex X	       2													  50.0		    50.0
lock deadlock retry	       1								     100.0
log file parallel write   200.7K														   29.4     60.3      7.7      2.1	0.5  0.0(76)   0.0(9)	0.0(1)
log file sequential read     504				   0.2	    0.2      2.0     22.0      2.8	1.2	 2.8	 26.4	  19.6	   20.6      1.2      1.0
log file sync		       6													  16.7	   16.7     50.0     16.7
name-service call wait	      10												 50.0	  50.0
oracle thread bootstrap        8																     12.5     75.0     12.5
os thread creation	       8													  50.0	   37.5     12.5
reliable message	      72												  6.9	  15.3	   30.6     38.9      5.6		1.4	 1.4
row cache lock		      25												 48.0	  48.0	    4.0
transaction		       4								      50.0     50.0
undo segment extension	       2						    50.0									     50.0
undo_retention publish re      4				  75.0	   25.0
wait list latch free	       1													 100.0
			  --------------------------------------------------------------------------------------------------------------------


System Statistics			 DB/Inst: P30DB/p30db1	Snaps: 171-172

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	       Reads	    Reads	Writes	   Size (k)	 Changes	Calls	     Execs	 Parses     Logons	   Txns
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	   5,685,015	2,350,386      337,949	    333,551    1,001,013	  181	   815,374	  1,343 	14	122,239
   2	   5,977,657	2,512,565      369,166	    355,936    1,067,062	  298	   868,420	    883 	13	130,214
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	  11,662,672	4,862,951      707,115	    689,487    2,068,075	  479	 1,683,794	  2,226 	27	252,453
 Avg	   5,831,336	2,431,476      353,558	    344,743    1,034,038	  240	   841,897	  1,113 	14	126,227
 Std	     206,929	  114,678	22,074	     15,828	  46,704	   83	    37,509	    325 	 1	  5,639
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Second		 DB/Inst: P30DB/p30db1	Snaps: 171-172

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	     Reads/s	  Reads/s     Writes/s	 Size (k)/s    Changes/s      Calls/s	   Execs/s     Parses/s   Logons/s	 Txns/s
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ---------- ------------
   1	    9,405.64	  3,888.6	 559.1	      551.8	 1,656.1	  0.3	   1,349.0	    2.2       0.02	  202.2
   2	    9,889.71	  4,156.9	 610.8	      588.9	 1,765.4	  0.5	   1,436.8	    1.5       0.02	  215.4
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	   19,295.35	  8,045.5      1,169.9	    1,140.7	 3,421.5	  0.8	   2,785.8	    3.7       0.04	  417.7
 Avg	    9,647.68	  4,022.8	 584.9	      570.4	 1,710.8	  0.4	   1,392.9	    1.8       0.02	  208.8
 Std	      342.29	    189.7	  36.5	       26.2	    77.3	  0.1	      62.0	    0.5       0.00	    9.3
			  --------------------------------------------------------------------------------------------------------------------

System Statistics - Per Transaction	 DB/Inst: P30DB/p30db1	Snaps: 171-172

	     Logical	 Physical     Physical	       Redo	   Block	 User
  I#	    Reads/tx	 Reads/tx    Writes/tx	Size (k)/tx   Changes/tx     Calls/tx	  Execs/tx    Parses/tx  Logons/tx
---- --------------- ------------ ------------ ------------ ------------ ------------ ------------ ------------ ----------
   1	       46.51	     19.2	   2.8		2.7	     8.2	  0.0	       6.7	    0.0       0.00
   2	       45.91	     19.3	   2.8		2.7	     8.2	  0.0	       6.7	    0.0       0.00
 ~~~ ~~~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~
 Avg	       46.21	     19.3	   2.8		2.7	     8.2	  0.0	       6.7	    0.0       0.00
			  --------------------------------------------------------------------------------------------------------------------


SysStat and Global Messaging  - RAC	 DB/Inst: P30DB/p30db1	Snaps: 171-172

	   Blocks Received	      Blocks Served	       CPU (seconds)						Messages				       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir	  Lost	  Failure
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	    11,163	 2,788	      12,804	   4,260	  N/A	       0	3,854,093	   2,180      3,823,033       1,451    1,189,230   1,454,247	     2		0
   2	    12,789	 4,259	      11,161	   2,789	  N/A	       0	3,820,452	   1,460      3,856,996       2,172    1,197,883   1,486,364	     7		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	    23,952	 7,047	      23,965	   7,049	    0	       0	7,674,545	   3,640      7,680,029       3,623    2,387,113   2,940,611	     9		0
 Avg	    11,976	 3,524	      11,983	   3,525	  N/A	       0	3,837,273	   1,820      3,840,015       1,812    1,193,557   1,470,306	     5		0
 Std	     1,150	 1,040	       1,162	   1,040	  N/A	       0	   23,788	     509	 24,015 	510	   6,119      22,710	     4		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Sec)- RACDB/Inst: P30DB/p30db1  Snaps: 171-1

     Blocks Received Per Second   Blocks Served per Second   CPU seconds per Second				     Messages Per Second				  GC Blks     GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   -------	 --------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent    GES Sent  Sent Direct  Sent Indir	Lost/s	   Fail/s
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   -------	 --------
   1	     18.47	  4.61	       21.18	    7.05	  N/A	    0.00	 6,376.45	    3.61       6,325.06        2.40	 1,967.5    2,406.00	     0		0
   2	     21.16	  7.05	       18.47	    4.61	  N/A	    0.00	 6,320.73	    2.42       6,381.19        3.59	 1,981.8    2,459.11	     0		0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~	 ~~~~~~~~
 Sum	     39.63	 11.66	       39.65	   11.66	 0.00	    0.00	12,697.18	    6.02      12,706.25        5.99	 3,949.4    4,865.11	     0		0
 Avg	     19.81	  5.83	       19.82	    5.83	  N/A	    0.00	 6,348.59	    3.01       6,353.13        3.00	 1,974.7    2,432.55	     0		0
 Std	      1.90	  1.72		1.92	    1.72	  N/A	    0.00	    39.40	    0.84	  39.69        0.84	    10.1       37.56	     0		0
			  --------------------------------------------------------------------------------------------------------------------

SysStat and Global Messaging (per Tx)- RACDB/Inst: P30DB/p30db1  Snaps: 171-17

	Blocks Received per Tx	      Blocks Served	    CPU (seconds) per Tx				Messages per Transaction			       GC Blks	   GC CR
       -----------------------	 -----------------------   ---------------------   ---------------------------------------------------------------------------------   ------	--------
  I#	GC Current	 GC CR	  GC Current	   GC CR	   GC	     IPC     GCS Received   GES Received       GCS Sent   GES Sent   Sent Direct  Sent Indir   Lost/T	 Fail/Tx
----   ----------- -----------	 ----------- -----------   ---------- ----------   -------------- -------------- -------------- ----------- ------------ -----------   ------	--------
   1	      0.09	  0.02		0.10	    0.03	  N/A	    0.00	    31.53	    0.02	  31.28        0.01	     9.7       11.90	  0.0	     0.0
   2	      0.10	  0.03		0.09	    0.02	  N/A	    0.00	    29.34	    0.01	  29.62        0.02	     9.2       11.41	  0.0	     0.0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~	 ~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~   ~~~~~~	~~~~~~~~
 Avg	      0.09	  0.03		0.10	    0.03	  N/A	    0.00	    30.43	    0.01	  30.45        0.01	     9.5       11.66	  0.0	     0.0
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Efficiency Percentages	 DB/Inst: P30DB/p30db1	Snaps: 171-172

	       Buffer Access
       -----------------------------
  I#	   Local % Remote %   Disk %	Locality %
----   ----------- -------- --------   -----------
   1	     58.41     0.25    41.34	     51.17
   2	     57.68     0.29    42.03	     53.61
			  --------------------------------------------------------------------------------------------------------------------

Global Latency Characteristics		 DB/Inst: P30DB/p30db1	Snaps: 171-172

				CR Blocks				  CU Blocks
		 ---------------------------------------   ---------------------------------------
	GE Get	   Receive     Build	 Flush Log Flush     Receive	   Pin	   Flush Log Flush
  I# Time (us)	 Time (us) Time (us) Time (us) CR Srvd %   Time (us) Time (us) Time (us) CU Srvd %
---- ---------	 --------- --------- --------- ---------   --------- --------- --------- ---------
   1	    45	      1216	 542	  6857	     0.8	 772	     0	    7368       0.3
   2	    47	      1129	 470	  3333	     0.1	 787	     0	   13143       0.3
			  --------------------------------------------------------------------------------------------------------------------

Global Messaging Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172

	     Queue Time (us)	    Process Time (us)	      % Messages Sent
       --------------------------   -----------------	--------------------------
  I#	   Sent  on ksxp Received   GCS msgs GES msgs	  Direct Indirect Flow Ctr
----   -------- -------- --------   -------- --------	-------- -------- --------
   1	    700      934       18	  41	   22	    45.0     55.0      0.0
   2	    683      924       15	  39	   29	    44.6     55.3      0.1
			  --------------------------------------------------------------------------------------------------------------------


Global CR Server Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172

			   Block Requests					   Results			 Fairness      Light		   Total
       -----------------------------------------------------   ----------------------------------------------	----------   --------	--------------------------
  I#		CR	    CU	      Data     Undo	  TX	   Current Private	 Zero  Dsk Rd	 Fail	 Down Conv	Works	   Flushes     Builds Erro
----   ----------- ----------- ----------- -------- --------   ----------- ------- ---------- ------- -------	----------   --------	---------- ---------- ----
   1	     2,767	 1,496	     2,767	  2    1,481	     4,251	 0	    6	    6	    0	     2,750	1,128		35	2,766	 0
   2	     2,761	    32	     2,761	  0	   9	     2,784	 0	    0	    9	    0	     2,688	1,358		 3	2,761	 0
 ~~~   ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~~~~ ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~ ~~~~~~~ ~~~~~~~~~~ ~~~~~~~ ~~~~~~~	~~~~~~~~~~   ~~~~~~~~	~~~~~~~~~~ ~~~~~~~~~~ ~~~~
 Sum	     5,528	 1,528	     5,528	  2    1,490	     7,035	 0	    6	   15	    0	     5,438	2,486		38	5,527	 0
 Avg	     2,764	   764	     2,764	  1	 745	     3,518	 0	    3	    8	    0	     2,719	1,243		19	2,764	 0
 Std		 4	 1,035		 4	  1    1,041	     1,037	 0	    4	    2	    0		44	  163		23	    4	 0
			  --------------------------------------------------------------------------------------------------------------------

Global Current Server Statistics	 DB/Inst: P30DB/p30db1	Snaps: 171-172

  I#	    Pins % <100us   % <1ms  % <10ms % <100ms	% <1s	% <10s	   Flushes % <100us   % <1ms  % <10ms % <100ms	  % <1s   % <10s
---- ----------- -------- -------- -------- -------- -------- -------- ----------- -------- -------- -------- -------- -------- --------
   1	       4    75.00    25.00     0.00	0.00	 0.00	  0.00		38     0.00	0.00	68.42	 31.58	   0.00     0.00
   2	       6    83.33    16.67     0.00	0.00	 0.00	  0.00		35     0.00	0.00	65.71	 34.29	   0.00     0.00
 ~~~ ~~~~~~~~~~~						       ~~~~~~~~~~~
 Sum	      10								73
 Avg	       5								37
 Std	       1								 2
			  --------------------------------------------------------------------------------------------------------------------


Global Cache Transfer Statistics	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays
-> Busy        (Busy) - Block Transfer impacted by Remote Contention
-> Congested  (Cngst) - Block Transfer impacted by Remote System Load
-> All - average time of All blocks (Immed,Busy,Cngst) in us
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block		       CR Blocks		       Current Blocks		       CR Avg Time (us) 	  Current Avg Time (us)
---------   ------------   --------------------------------   --------------------------------	 ---------------------------   ---------------------------
Dest  Src   Class	      Received %Immed  %Busy %Cngst	 Received %Immed  %Busy %Cngst	    All  Immed	 Busy  Cngst	  All  Immed   Busy  Cngst
---- ----   ------------   ----------- ------ ------ ------   ----------- ------ ------ ------	 ------ ------ ------ ------   ------ ------ ------ ------
   1	2   data block		 2,761	 99.9	 0.1	0.1	   11,066   81.1   18.9    0.1	   1231   1226	 6137	2854	  761	 729	890   3680
	2   others		    13	100.0	 0.0	0.0	       21   76.2   23.8    0.0	    457    457	  N/A	 N/A	 1498	1666	964    N/A
	2   undo header 	     7	 85.7	14.3	0.0		5   40.0   60.0    0.0	   2263    511	12776	 N/A	  770	 705	814    N/A

   2	1   data block		 2,768	 99.4	 0.4	0.2	   12,733   82.4   17.6    0.1	   1378   1324	13034	4558	  787	 761	896   3227
	1   undo header 	 1,481	 98.4	 1.6	0.0		4    0.0  100.0    0.0	    672    584	 5986	 N/A	 2319	 N/A   2319    N/A
	1   others		     7	100.0	 0.0	0.0	       10   50.0   50.0    0.0	    673    673	  N/A	 N/A	 4786	 651   8921    N/A
	1   undo block		     2	100.0	 0.0	0.0		0    N/A    N/A    N/A	    435    435	  N/A	 N/A	  N/A	 N/A	N/A    N/A
			  --------------------------------------------------------------------------------------------------------------------

Global Cache Transfer (Immediate)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Ordered by instance_number, CR + Current Blocks Received desc

Instance#	Block	     Lost Blocks	 Immediate CR Blocks	     Immediate Current Blocks	   Immed CR Avg Time (us)   Immed Current Avg Time (us)
---------   ------------   --------------   ----------------------------   ----------------------------   -----------------------   -----------------------
Dest  Src   Class	     Count Time(u      Received  %2-hop   %3-hop      Received	%2-hop	 %3-hop     Total   2-hop   3-hop     Total   2-hop   3-hop
---- ----   ------------   ------- ------   ----------- ------- --------   ----------- ------- --------   ------- ------- -------   ------- ------- -------
   1	2   data block		 0    N/A	  2,757   100.0      0.0	 8,969	 100.0	    0.0      1226    1226     N/A	729	729	N/A
	2   others		 0    N/A	     13   100.0      0.0	    16	 100.0	    0.0       457     457     N/A      1666    1666	N/A
	2   undo header 	 0    N/A	      6   100.0      0.0	     2	 100.0	    0.0       511     511     N/A	705	705	N/A
	2   undo block		 0    N/A	      0     N/A      N/A	     0	   N/A	    N/A       N/A     N/A     N/A	N/A	N/A	N/A

   2	1   data block		 0    N/A	  2,751   100.0      0.0	10,486	 100.0	    0.0      1324    1324     N/A	761	761	N/A
	1   undo header 	 0    N/A	  1,457   100.0      0.0	     0	   N/A	    N/A       584     584     N/A	N/A	N/A	N/A
	1   others		 0    N/A	      7   100.0      0.0	     5	 100.0	    0.0       673     673     N/A	651	651	N/A
	1   undo block		 0    N/A	      2   100.0      0.0	     0	   N/A	    N/A       435     435     N/A	N/A	N/A	N/A
			  --------------------------------------------------------------------------------------------------------------------


Cluster Interconnect			 DB/Inst: P30DB/p30db1	Snaps: 171-172

					 Begin					  End (if different from Begin)
		  --------------------------------------------------   --------------------------------------------------
  I# NAME	  IP Address	  Pub Source			       IP Address      Pub Source
---- ----------   --------------- --- ------------------------------   --------------- --- ------------------------------
   1 fg-priv:1	  169.254.22.248  N
   2 fg-priv:1	  169.254.31.173  N
			  --------------------------------------------------------------------------------------------------------------------

Ping Statistics 			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Latency of the roundtrip of a message from  Src Instance to the Target instances

 Instance#	       500 bytes		    8 Kbytes
-----------   --------------------------   --------------------------
		    Ping    Avg      Std	 Ping	 Avg	  Std
 Src Target	   Count Time(us)    Dev	Count Time(us)	  Dev
---- ------   ---------- -------- ------   ---------- -------- ------
   1	  1	      56      673    0.3	   61	   652	  0.3
	  2	      56      960    0.5	   61	  1086	  0.7

   2	  1	      56     1159    0.7	   61	  1187	  0.7
	  2	      56      668    0.6	   61	   676	  0.6
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172

				   Sent (MB)							     Received (MB)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	  1,037.7      194.9	    0.2      825.3	  1.0	    16.2      1,027.1	   181.7	1.1	 832.1	      1.0	11.2
   2	  1,028.7      182.5	    1.1      833.0	  1.0	    11.2      1,040.1	   195.8	0.2	 826.8	      1.0	16.2
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	  2,066.4      377.4	    1.2    1,658.3	  2.1	    27.4      2,067.1	   377.5	1.2    1,659.0	      2.1	27.4
 Avg	  1,033.2      188.7	    0.6      829.1	  1.0	    13.7      1,033.6	   188.8	0.6	 829.5	      1.0	13.7
 Std	      6.3	 8.8	    0.6        5.4	  0.0	     3.6	  9.2	    10.0	0.6	   3.7	      0.0	 3.6
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Client Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 171-1

				  Sent (MB/s)							    Received (MB/s)
       -----------------------------------------------------------------   -----------------------------------------------------------------
  I#	    Total      Cache	    IPQ        DLM	  PNG	    Misc	Total	   Cache	IPQ	   DLM	      PNG	Misc
----   ---------- ---------- ---------- ---------- ---------- ----------   ---------- ---------- ---------- ---------- ---------- ----------
   1	      1.7	 0.3	    0.0        1.4	  0.0	     0.0	  1.7	     0.3	0.0	   1.4	      0.0	 0.0
   2	      1.7	 0.3	    0.0        1.4	  0.0	     0.0	  1.7	     0.3	0.0	   1.4	      0.0	 0.0
 ~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~   ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~ ~~~~~~~~~~
 Sum	      3.4	 0.6	    0.0        2.7	  0.0	     0.0	  3.4	     0.6	0.0	   2.7	      0.0	 0.0
 Avg	      1.7	 0.3	    0.0        1.4	  0.0	     0.0	  1.7	     0.3	0.0	   1.4	      0.0	 0.0
 Std	      0.0	 0.0	    0.0        0.0	  0.0	     0.0	  0.0	     0.0	0.0	   0.0	      0.0	 0.0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> null means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	  5,073.5    5,662,875	     0	     0	     0	     0	       5,212.0	  5,659,867	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	  1,836.8    4,036,922	     0	     0	     0	     0	       1,797.3	  4,297,619	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.4	 1,007	     0	     0	     0	     0		   0.2		942	  0	  0	  0	  0
       fg-pub:1   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      1.9	 3,001	     0	     0	     0	     0		   1.2	      3,062	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      6.9	70,276	     0	     0	     0	     0		   6.9	     70,276	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	  5,280.9    5,739,236	     0	     0	     0	     0	       5,003.4	  5,586,987	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	  1,792.3    4,052,940	     0	     0	     0	     0	       1,841.8	  4,300,927	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.2	   941	     0	     0	     0	     0		   0.4	      1,013	  0	  0	  0	  0
       fg-pub:1   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:4   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      2.0	 3,021	     0	     0	     0	     0		   1.2	      3,065	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		     29.6      114,702	     0	     0	     0	     0		  29.6	    114,702	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							 14,024.4   19,684,921	     0	     0	     0	     0	      13,893.8	 20,038,460	  0	  0	  0	  0
 Avg							    825.0    1,157,937	     0	     0	     0	     0		 817.3	  1,178,733	  0	  0	  0	  0
 Std							  1,743.7    2,164,403	     0	     0	     0	     0	       1,722.4	  2,188,238	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Interconnect Device Statistics (per Second)DB/Inst: P30DB/p30db1  Snaps: 171-1
-> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs
-> Blank  means begin value > end value

			Interface					       Sent							  Received
       ------------------------------------------   ----------------------------------------------------------	 ----------------------------------------------------------
										       Packets	Buffer Carrier					    Packets  Buffer   Frame
  I#   NAME	  IP Address	  IP Mask		   MBytes      Packets	Errors Dropped	Ovrrun	  Lost		MBytes	    Packets  Errors Dropped  Ovrrun  Errors
----   ---------- --------------- ---------------   ------------- ------------ ------- ------- ------- -------	 ------------- ------------ ------- ------- ------- -------
   1   eth0	  10.1.5.5	  255.255.255.0 	      8.4	 9,369	     0	     0	     0	     0		   8.6	      9,364	  0	  0	  0	  0
       fg-priv	  192.168.2.1	  255.255.255.0 	      3.0	 6,679	     0	     0	     0	     0		   3.0	      7,110	  0	  0	  0	  0
       fg-priv:1  169.254.22.248  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.1	  255.255.255.0 	      0.0	     2	     0	     0	     0	     0		   0.0		  2	  0	  0	  0	  0
       fg-pub:1   192.168.1.11	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.21	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.1	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.0	   116	     0	     0	     0	     0		   0.0		116	  0	  0	  0	  0
   2   eth0	  10.1.5.4	  255.255.255.0 	      8.7	 9,495	     0	     0	     0	     0		   8.3	      9,243	  0	  0	  0	  0
       fg-priv	  192.168.2.2	  255.255.255.0 	      3.0	 6,705	     0	     0	     0	     0		   3.0	      7,116	  0	  0	  0	  0
       fg-priv:1  169.254.31.173  255.255.224.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub	  192.168.1.2	  255.255.255.0 	      0.0	     2	     0	     0	     0	     0		   0.0		  2	  0	  0	  0	  0
       fg-pub:1   192.168.1.23	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:2   192.168.1.22	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-pub:4   192.168.1.12	  255.255.255.0 	      0.0	     0	     0	     0	     0	     0		   0.0		  0	  0	  0	  0	  0
       fg-storage 192.168.3.2	  255.255.255.0 	      0.0	     5	     0	     0	     0	     0		   0.0		  5	  0	  0	  0	  0
       lo	  127.0.0.1	  255.0.0.0		      0.0	   190	     0	     0	     0	     0		   0.0		190	  0	  0	  0	  0
 ~~~						    ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~	 ~~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~ ~~~~~~~
 Sum							     23.2	32,568	     0	     0	     0	     0		  23.0	     33,153	  0	  0	  0	  0
 Avg							      1.4	 1,916	     0	     0	     0	     0		   1.4	      1,950	  0	  0	  0	  0
 Std							      2.9	 3,581	     0	     0	     0	     0		   2.8	      3,620	  0	  0	  0	  0
			  --------------------------------------------------------------------------------------------------------------------

Dynamic Remastering Statistics		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Affinity Objects - Affinity objects remastered at the begin/end snapshot
-> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot

				   Counts per Ops					 Time per Ops (seconds) 			 Affinity Objects		  Read Mostly Objects
		---------------------------------------------------   -----------------------------------------------------------   -------------------------	--------------------------------------
     Remaster	  Remastered Replay Locks Replay Locks	  Resources														    Begin
  I#	  Ops	     Objects	 Received	  Sent	    Cleaned    Remaster    Freeze   Cleanup    Replay  Fixwrite      Sync	   Begin	  End	       Begin (persistent)	   End
---- --------	------------ ------------ ------------ ------------   --------- --------- --------- --------- --------- ---------   ------------ ------------	------------ ------------ ------------
   1	    0		 N/A	      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       1	    1		   3		3	     3
   2	    0		 N/A	      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       1	    1		   3		3	     3
 ~~~ ~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~   ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~ ~~~~~~~~~   ~~~~~~~~~~~~ ~~~~~~~~~~~~	~~~~~~~~~~~~ ~~~~~~~~~~~~ ~~~~~~~~~~~~
 Avg	    0		 N/A	      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       1	    1		   3		3	     3
 Max				      N/A	   N/A		N/A	    N/A       N/A	N/A	  N/A	    N/A       N/A	       1	    1		   3		3	     3
			  --------------------------------------------------------------------------------------------------------------------


SQL ordered by Elapsed Time (Global)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Captured SQL account for   98.1% of Total DB Time (s):	   22,786
-> Captured PL/SQL account for	 99.8% of Total DB Time (s):	      22,786

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	  Elapsed (s)	  CPU (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	DB time   DB CPU  IO Wait     Gets    Reads  Cluster	Execs
-------------	------------- ----------- ----------- -------------- ------------ ------------ ----------- ------------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	    18,830.31	 1,242.45   16,916.64	   8,562,374	4,118,419    1,425,187	  1,217.41    1,425,154 	   0.01        0.00	   0.01 	   6.0		2.9	     1.0	0.00	   82.6     67.0      0.8     73.4     84.7	79.5	 84.6
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     3,507.92	   275.55    3,010.67	   1,818,949	  726,417      754,482	    303.87	251,494 	   0.01        0.00	   0.01 	   7.2		2.9	     3.0	0.00	   15.4     14.9      0.2     15.6     14.9	19.8	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

gx190gu1265d2	       568.93	    42.91      498.56	     236,249	  108,351	     1	     41.66	      1 	 568.93       42.91	 498.56      236,249.0	  108,351.0	     1.0       41.66	    2.5      2.3      0.0      2.0	2.2	 2.7	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '18'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

26ka4yp1faxn2	       568.93	    50.19      495.46	     311,785	  141,040	     1	     38.24	      1 	 568.93       50.19	 495.46      311,785.0	  141,040.0	     1.0       38.24	    2.5      2.7      0.0      2.7	2.9	 2.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

30ha31267a7s2	       568.93	    48.44      493.07	     276,710	  126,105	     1	     43.14	      1 	 568.93       48.44	 493.07      276,710.0	  126,105.0	     1.0       43.14	    2.5      2.6      0.0      2.4	2.6	 2.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '37'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5q1jyzmr30cf9	       568.93	    47.10      494.28	     267,284	  122,117	     1	     42.57	      1 	 568.93       47.10	 494.28      267,284.0	  122,117.0	     1.0       42.57	    2.5      2.5      0.0      2.3	2.5	 2.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7bd84p4z76t66	       568.92	    50.84      493.51	     308,873	  139,747	     1	     40.44	      1 	 568.92       50.84	 493.51      308,873.0	  139,747.0	     1.0       40.44	    2.5      2.7      0.0      2.6	2.9	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

cjr4y9wb6w69d	       568.92	    46.51      496.39	     278,922	  127,114	     1	     40.33	      1 	 568.92       46.51	 496.39      278,922.0	  127,114.0	     1.0       40.33	    2.5      2.5      0.0      2.4	2.6	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '14'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

72r567f4w1r2z	       568.91	    45.23      503.36	     250,447	  114,102	     1	     35.00	      1 	 568.91       45.23	 503.36      250,447.0	  114,102.0	     1.0       35.00	    2.5      2.4      0.0      2.1	2.3	 2.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '17'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6x8682kb2y8vd	       568.91	    45.06      504.19	     249,075	  113,318	     1	     34.74	      1 	 568.91       45.06	 504.19      249,075.0	  113,318.0	     1.0       34.74	    2.5      2.4      0.0      2.1	2.3	 2.3	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '20'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by CPU Time (Global)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Captured SQL account for   82.0% of Total CPU Time (s):	     1,855
-> Captured PL/SQL account for	 99.8% of Total CPU Time (s):		1,855

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	    CPU (s)   Elapsed (s)  IOWait (s)		Gets	    Reads	  Rows Cluster (s)	  Execs       CPU (s)	Elapsed (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	 DB CPU  DB time  IO Wait     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   1,242.45	18,830.31   16,916.64	   8,562,374	4,118,419    1,425,187	  1,217.41    1,425,154 	 0.00	       0.01	   0.01 	   6.0		2.9	     1.0	0.00	   67.0     82.6     84.7     73.4     84.7	79.5	 84.6
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     275.55	 3,507.92    3,010.67	   1,818,949	  726,417      754,482	    303.87	251,494 	 0.00	       0.01	   0.01 	   7.2		2.9	     3.0	0.00	   14.9     15.4     15.1     15.6     14.9	19.8	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

amnkmrsjh10nv	      55.30	   568.79      482.32	     296,541	  134,631	     1	     48.25	      1 	55.30	     568.79	 482.32      296,541.0	  134,631.0	     1.0       48.25	    3.0      2.5      2.4      2.5	2.8	 3.2	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

71v63sn4bfskh	      54.88	   568.85      486.32	     302,862	  137,221	     1	     44.13	      1 	54.88	     568.85	 486.32      302,862.0	  137,221.0	     1.0       44.13	    3.0      2.5      2.4      2.6	2.8	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

5wf99mx0r39xn	      54.56	   568.85      487.74	     306,580	  138,731	     1	     43.42	      1 	54.56	     568.85	 487.74      306,580.0	  138,731.0	     1.0       43.42	    2.9      2.5      2.4      2.6	2.9	 2.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

7bd84p4z76t66	      50.84	   568.92      493.51	     308,873	  139,747	     1	     40.44	      1 	50.84	     568.92	 493.51      308,873.0	  139,747.0	     1.0       40.44	    2.7      2.5      2.5      2.6	2.9	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6hgs8vfsdc56c	      50.82	   568.07      494.08	     283,608	  128,992	     1	     39.45	      1 	50.82	     568.07	 494.08      283,608.0	  128,992.0	     1.0       39.45	    2.7      2.5      2.5      2.4	2.7	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7m9rphfj2sxqy	      50.45	   568.84      494.41	     282,189	  128,317	     1	     39.52	      1 	50.45	     568.84	 494.41      282,189.0	  128,317.0	     1.0       39.52	    2.7      2.5      2.5      2.4	2.6	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '34'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

26ka4yp1faxn2	      50.19	   568.93      495.46	     311,785	  141,040	     1	     38.24	      1 	50.19	     568.93	 495.46      311,785.0	  141,040.0	     1.0       38.24	    2.7      2.5      2.5      2.7	2.9	 2.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gdjc35y9zsuzm	      50.00	   568.61      489.85	     258,660	  117,715	     1	     44.97	      1 	50.00	     568.61	 489.85      258,660.0	  117,715.0	     1.0       44.97	    2.7      2.5      2.5      2.2	2.4	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by User I/O Time (Global)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Captured SQL account for   99.8% of Total User I/O Wait Time (s):	      19,961
-> Captured PL/SQL account for	100.0% of Total User I/O Wait Time (s): 	 19,961

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	 IOWait (s)   Elapsed (s)     CPU (s)		Gets	    Reads	  Rows Cluster (s)	  Execs    IOWait (s)	Elapsed (s)	CPU (s) 	  Gets	      Reads	    Rows Cluster (s)	IO Wait  DB time   DB CPU     Gets    Reads  Cluster	Execs
-------------	----------- ------------- ----------- -------------- ------------ ------------ ----------- ------------   ----------- ------------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	  16,916.64	18,830.31    1,242.45	   8,562,374	4,118,419    1,425,187	  1,217.41    1,425,154 	 0.01	       0.01	   0.00 	   6.0		2.9	     1.0	0.00	   84.7     82.6     67.0     73.4     84.7	79.5	 84.6
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	   3,010.67	 3,507.92      275.55	   1,818,949	  726,417      754,482	    303.87	251,494 	 0.01	       0.01	   0.00 	   7.2		2.9	     3.0	0.00	   15.1     15.4     14.9     15.6     14.9	19.8	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

26ka4yp1faxn2	     495.46	   568.93	50.19	     311,785	  141,040	     1	     38.24	      1        495.46	     568.93	  50.19      311,785.0	  141,040.0	     1.0       38.24	    2.5      2.5      2.7      2.7	2.9	 2.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7m9rphfj2sxqy	     494.41	   568.84	50.45	     282,189	  128,317	     1	     39.52	      1        494.41	     568.84	  50.45      282,189.0	  128,317.0	     1.0       39.52	    2.5      2.5      2.7      2.4	2.6	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '34'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

6hgs8vfsdc56c	     494.08	   568.07	50.82	     283,608	  128,992	     1	     39.45	      1        494.08	     568.07	  50.82      283,608.0	  128,992.0	     1.0       39.45	    2.5      2.5      2.7      2.4	2.7	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7bd84p4z76t66	     493.51	   568.92	50.84	     308,873	  139,747	     1	     40.44	      1        493.51	     568.92	  50.84      308,873.0	  139,747.0	     1.0       40.44	    2.5      2.5      2.7      2.6	2.9	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gdjc35y9zsuzm	     489.85	   568.61	50.00	     258,660	  117,715	     1	     44.97	      1        489.85	     568.61	  50.00      258,660.0	  117,715.0	     1.0       44.97	    2.5      2.5      2.7      2.2	2.4	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5wf99mx0r39xn	     487.74	   568.85	54.56	     306,580	  138,731	     1	     43.42	      1        487.74	     568.85	  54.56      306,580.0	  138,731.0	     1.0       43.42	    2.4      2.5      2.9      2.6	2.9	 2.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

71v63sn4bfskh	     486.32	   568.85	54.88	     302,862	  137,221	     1	     44.13	      1        486.32	     568.85	  54.88      302,862.0	  137,221.0	     1.0       44.13	    2.4      2.5      3.0      2.6	2.8	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

amnkmrsjh10nv	     482.32	   568.79	55.30	     296,541	  134,631	     1	     48.25	      1        482.32	     568.79	  55.30      296,541.0	  134,631.0	     1.0       48.25	    2.4      2.5      3.0      2.5	2.8	 3.2	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Gets (Global)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Buffer Gets:	   11,662,672
-> Captured SQL account for   89.3% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id		  Gets	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	    Gets	Reads	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	   Gets    Reads  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	-------------- ------------ ------------- ----------- ----------- ------------ ----------- ------------   -------------- ------------ ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	     8,562,374	  4,118,419	18,830.31    1,242.45	16,916.64    1,425,187	  1,217.41    1,425,154 	     6.0	  2.9	       0.01	   0.00        0.01	     1.0	0.00	   73.4     84.7     82.6     67.0     84.7	79.5	 84.6
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     1,818,949	    726,417	 3,507.92      275.55	 3,010.67      754,482	    303.87	251,494 	     7.2	  2.9	       0.01	   0.00        0.01	     3.0	0.00	   15.6     14.9     15.4     14.9     15.1	19.8	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

26ka4yp1faxn2	       311,785	    141,040	   568.93	50.19	   495.46	     1	     38.24	      1        311,785.0    141,040.0	     568.93	  50.19      495.46	     1.0       38.24	    2.7      2.9      2.5      2.7	2.5	 2.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7bd84p4z76t66	       308,873	    139,747	   568.92	50.84	   493.51	     1	     40.44	      1        308,873.0    139,747.0	     568.92	  50.84      493.51	     1.0       40.44	    2.6      2.9      2.5      2.7	2.5	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5wf99mx0r39xn	       306,580	    138,731	   568.85	54.56	   487.74	     1	     43.42	      1        306,580.0    138,731.0	     568.85	  54.56      487.74	     1.0       43.42	    2.6      2.9      2.5      2.9	2.4	 2.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

71v63sn4bfskh	       302,862	    137,221	   568.85	54.88	   486.32	     1	     44.13	      1        302,862.0    137,221.0	     568.85	  54.88      486.32	     1.0       44.13	    2.6      2.8      2.5      3.0	2.4	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

amnkmrsjh10nv	       296,541	    134,631	   568.79	55.30	   482.32	     1	     48.25	      1        296,541.0    134,631.0	     568.79	  55.30      482.32	     1.0       48.25	    2.5      2.8      2.5      3.0	2.4	 3.2	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5mrhuphq8yfw1	       294,859	    134,106	   568.84	40.55	   512.81	     1	     27.69	      1        294,859.0    134,106.0	     568.84	  40.55      512.81	     1.0       27.69	    2.5      2.8      2.5      2.2	2.6	 1.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

brqrryv4mja36	       290,268	    132,338	   568.69	38.06	   514.49	     1	     27.65	      1        290,268.0    132,338.0	     568.69	  38.06      514.49	     1.0       27.65	    2.5      2.7      2.5      2.1	2.6	 1.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

0hnb5g8vhm4u9	       288,926	    131,683	   568.57	37.80	   514.39	     1	     27.73	      1        288,926.0    131,683.0	     568.57	  37.80      514.39	     1.0       27.73	    2.5      2.7      2.5      2.0	2.6	 1.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Reads (Global)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Disk Reads:	   4,862,951
-> Captured SQL account for   99.6% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Reads	       Gets   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)	  Execs 	 Reads		 Gets	Elapsed (s)	CPU (s)  IOWait (s)	    Rows Cluster (s)	  Reads     Gets  DB time   DB CPU  IO Wait  Cluster	Execs
-------------	------------ -------------- ------------- ----------- ----------- ------------ ----------- ------------   ------------ -------------- ------------- ----------- ----------- ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   4,118,419	  8,562,374	18,830.31    1,242.45	16,916.64    1,425,187	  1,217.41    1,425,154 	   2.9		  6.0	       0.01	   0.00        0.01	     1.0	0.00	   84.7     73.4     82.6     67.0     84.7	79.5	 84.6
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     726,417	  1,818,949	 3,507.92      275.55	 3,010.67      754,482	    303.87	251,494 	   2.9		  7.2	       0.01	   0.00        0.01	     3.0	0.00	   14.9     15.6     15.4     14.9     15.1	19.8	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

26ka4yp1faxn2	     141,040	    311,785	   568.93	50.19	   495.46	     1	     38.24	      1      141,040.0	    311,785.0	     568.93	  50.19      495.46	     1.0       38.24	    2.9      2.7      2.5      2.7	2.5	 2.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7bd84p4z76t66	     139,747	    308,873	   568.92	50.84	   493.51	     1	     40.44	      1      139,747.0	    308,873.0	     568.92	  50.84      493.51	     1.0       40.44	    2.9      2.6      2.5      2.7	2.5	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5wf99mx0r39xn	     138,731	    306,580	   568.85	54.56	   487.74	     1	     43.42	      1      138,731.0	    306,580.0	     568.85	  54.56      487.74	     1.0       43.42	    2.9      2.6      2.5      2.9	2.4	 2.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

71v63sn4bfskh	     137,221	    302,862	   568.85	54.88	   486.32	     1	     44.13	      1      137,221.0	    302,862.0	     568.85	  54.88      486.32	     1.0       44.13	    2.8      2.6      2.5      3.0	2.4	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

amnkmrsjh10nv	     134,631	    296,541	   568.79	55.30	   482.32	     1	     48.25	      1      134,631.0	    296,541.0	     568.79	  55.30      482.32	     1.0       48.25	    2.8      2.5      2.5      3.0	2.4	 3.2	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5mrhuphq8yfw1	     134,106	    294,859	   568.84	40.55	   512.81	     1	     27.69	      1      134,106.0	    294,859.0	     568.84	  40.55      512.81	     1.0       27.69	    2.8      2.5      2.5      2.2	2.6	 1.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

brqrryv4mja36	     132,338	    290,268	   568.69	38.06	   514.49	     1	     27.65	      1      132,338.0	    290,268.0	     568.69	  38.06      514.49	     1.0       27.65	    2.7      2.5      2.5      2.1	2.6	 1.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

0hnb5g8vhm4u9	     131,683	    288,926	   568.57	37.80	   514.39	     1	     27.73	      1      131,683.0	    288,926.0	     568.57	  37.80      514.39	     1.0       27.73	    2.7      2.5      2.5      2.0	2.6	 1.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by UnOptimized Read Requests (Global)DB/Inst: P30DB/p30db1	Snaps:
-> Total Physical Read Requests:       4,862,881
-> Captured SQL account for    5.1% of Total
-> Total UnOptimized Read Requests:	  4,862,881
-> Captured SQL account for    5.1% of Total
-> Total Optimized Read Requests:		1
-> Captured SQL account for    0.0% of Total

								       Total													 Per Execution									    Percentage of Total
		------------------------------------------------------------------------------------------------------------------   -----------------------------------------------------------------------------------------------------   -----------------------------------------------------------------
   SQL Id	 UnOptimized	 Requests	 Reads	 Elapsed (s)	 CPU (s)  IOWait (s)	     Rows Cluster (s)	     Execs    UnOptimized     Requests	      Reads   Elapsed (s)     CPU (s)  IOWait (s)	  Rows Cluster (s)   UnOptimized Requests  Reads DB time DB CPU IO Wait Cluster  Execs
-------------	------------ ------------ ------------ ------------- ----------- ----------- ------------ ----------- ------------   ------------ ------------ ------------ ------------- ----------- ----------- ------------ -----------   ----------- -------- ------ ------- ------ ------- ------- ------
bhdvtsvjhgvrh	     214,329	  214,329    4,118,419	   18,830.31	1,242.45   16,916.64	1,425,187    1,217.41	 1,425,154	      0.2	   0.2		2.9	     0.01	 0.00	     0.01	   1.0	      0.00	     4.4      4.4   84.7    82.6   67.0    84.7    79.5   84.6
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

26ka4yp1faxn2	     141,040	  141,040      141,040	      568.93	   50.19      495.46		1	38.24		 1	141,040.0    141,040.0	  141,040.0	   568.93	50.19	   495.46	   1.0	     38.24	     2.9      2.9    2.9     2.5    2.7     2.5     2.5    0.0
DECLARE v_default_schema_number PLS_INTEGER := '27'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

7bd84p4z76t66	     139,747	  139,747      139,747	      568.92	   50.84      493.51		1	40.44		 1	139,747.0    139,747.0	  139,747.0	   568.92	50.84	   493.51	   1.0	     40.44	     2.9      2.9    2.9     2.5    2.7     2.5     2.6    0.0
DECLARE v_default_schema_number PLS_INTEGER := '30'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5wf99mx0r39xn	     138,731	  138,731      138,731	      568.85	   54.56      487.74		1	43.42		 1	138,731.0    138,731.0	  138,731.0	   568.85	54.56	   487.74	   1.0	     43.42	     2.9      2.9    2.9     2.5    2.9     2.4     2.8    0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

71v63sn4bfskh	     137,221	  137,221      137,221	      568.85	   54.88      486.32		1	44.13		 1	137,221.0    137,221.0	  137,221.0	   568.85	54.88	   486.32	   1.0	     44.13	     2.8      2.8    2.8     2.5    3.0     2.4     2.9    0.0
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

amnkmrsjh10nv	     134,631	  134,631      134,631	      568.79	   55.30      482.32		1	48.25		 1	134,631.0    134,631.0	  134,631.0	   568.79	55.30	   482.32	   1.0	     48.25	     2.8      2.8    2.8     2.5    3.0     2.4     3.2    0.0
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5mrhuphq8yfw1	     134,106	  134,106      134,106	      568.84	   40.55      512.81		1	27.69		 1	134,106.0    134,106.0	  134,106.0	   568.84	40.55	   512.81	   1.0	     27.69	     2.8      2.8    2.8     2.5    2.2     2.6     1.8    0.0
DECLARE v_default_schema_number PLS_INTEGER := '16'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

brqrryv4mja36	     132,338	  132,338      132,338	      568.69	   38.06      514.49		1	27.65		 1	132,338.0    132,338.0	  132,338.0	   568.69	38.06	   514.49	   1.0	     27.65	     2.7      2.7    2.7     2.5    2.1     2.6     1.8    0.0
DECLARE v_default_schema_number PLS_INTEGER := '1'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

0hnb5g8vhm4u9	     131,683	  131,683      131,683	      568.57	   37.80      514.39		1	27.73		 1	131,683.0    131,683.0	  131,683.0	   568.57	37.80	   514.39	   1.0	     27.73	     2.7      2.7    2.7     2.5    2.0     2.6     1.8    0.0
DECLARE v_default_schema_number PLS_INTEGER := '2'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

6hgs8vfsdc56c	     128,992	  128,992      128,992	      568.07	   50.82      494.08		1	39.45		 1	128,992.0    128,992.0	  128,992.0	   568.07	50.82	   494.08	   1.0	     39.45	     2.7      2.7    2.7     2.5    2.7     2.5     2.6    0.0
DECLARE v_default_schema_number PLS_INTEGER := '11'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Executions (Global)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Executions:	   1,683,794
-> Captured SQL account for   99.7% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	       Execs   Elapsed (s)     CPU (s)	IOWait (s)	     Gets	 Reads	       Rows Cluster (s)     Elapsed (s)     CPU (s)  IOWait (s) 	  Gets	      Reads	    Rows Cluster (s)	  Execs  DB time   DB CPU  IO Wait     Gets    Reads  Cluster
-------------	------------ ------------- ----------- ----------- -------------- ------------ ------------ -----------   ------------- ----------- ----------- -------------- ------------ ------------ -----------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   1,425,154	 18,830.31    1,242.45	 16,916.64	8,562,374    4,118,419	  1,425,187    1,217.41 	   0.01        0.00	   0.01 	   6.0		2.9	     1.0	0.00	   84.6     82.6     67.0     84.7     73.4	84.7	 79.5
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     251,494	  3,507.92	275.55	  3,010.67	1,818,949      726,417	    754,482	 303.87 	   0.01        0.00	   0.01 	   7.2		2.9	     3.0	0.00	   14.9     15.4     14.9     15.1     15.6	14.9	 19.8
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

24djtk7r8fz33		 437	      0.06	  0.05	      0.00	      892	     0		432	   0.00 	   0.00        0.00	   0.00 	   2.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
update svcobj_access$ set accesses = :5, inc_no = :6 where name = :1 AND pdb = :
2 AND tsn = :3 AND objid = :4

f7xnvp44nukp7		 181	      0.68	  0.05	      0.02	      794	    11		181	   0.63 	   0.00        0.00	   0.00 	   4.4		0.1	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
insert into wrm$_snapshot_details (snap_id,dbid,instance_number,table_id,begin
_time,end_time,step_id) values (:snap_id,:dbid,:instance_number,:bind1,:bind2
,:bind3,:step_id)

fn5s5p6hr6702		  99	      0.03	  0.02	      0.00	      612	     1		 99	   0.00 	   0.00        0.00	   0.00 	   6.2		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
INSERT INTO wri$_adv_message_groups (task_id,id,seq,message#,fac,hdr,lm,nl,p1,p2
,p3,p4,p5) VALUES (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)

f80h0xb1qvbsk		  73	      0.04	  0.02	      0.00	       35	     0		 73	   0.00 	   0.00        0.00	   0.00 	   0.5		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual

6n2qqv1brfhpp		  50	      0.01	  0.01	      0.00	      400	     1		 50	   0.00 	   0.00        0.00	   0.00 	   8.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
select ind.type#, ind.property, base_obj.obj#, base_owner.name, base_obj.name
 from sys.ind$ ind, sys.user$ base_owner, sys.obj$ base_obj where ind.obj#
 = :oid and ind.dataobj# = :doid and ind.bo# = base_obj
.obj# and base_obj.owner# = base_owner.user#

9babjv8yq8ru3		  40	      0.03	  0.02	      0.00		0	     0		 40	   0.00 	   0.00        0.00	   0.00 	   0.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
BEGIN DBMS_OUTPUT.GET_LINES(:LINES, :NUMLINES); END;

gjaap3w3qbf8c		  40	      0.01	  0.00	      0.00	       40	     0		 40	   0.00 	   0.00        0.00	   0.00 	   1.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
select count(*) from ilmobj$ where rownum = 1

fs4p95w7yg25b		  38	      0.00	  0.00	      0.00	      152	     0		 38	   0.00 	   0.00        0.00	   0.00 	   4.0		0.0	     1.0	0.00	    0.0      0.0      0.0      0.0	0.0	 0.0	  0.0
select pob.parttype from sys.tabpart$ tp, sys.partobj$ pob where tp.bo# = pob.o
bj# and tp.obj# = :oid

			  --------------------------------------------------------------------------------------------------------------------

SQL ordered by Cluster Wait Time (Global)DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Total Cluster Wait Time (s): 	  1,531
-> Captured SQL account for   99.5% of Total

								 Total												 Per Execution								     Percentage of Total
		-------------------------------------------------------------------------------------------------------   ------------------------------------------------------------------------------------------   --------------------------------------------------------------
   SQL Id	Cluster (s)   Elapsed (s)     CPU (s)  IOWait (s)	    Gets	Reads	      Rows	  Execs   Cluster (s)	Elapsed (s)	CPU (s)  IOWait (s)	      Gets	  Reads 	Rows	Cluster  DB time   DB CPU     Gets  IO Wait    Reads	Execs
-------------	----------- ------------- ----------- ----------- -------------- ------------ ------------ ------------   ----------- ------------- ----------- ----------- -------------- ------------ ------------   -------- -------- -------- -------- -------- -------- --------
bhdvtsvjhgvrh	   1,217.41	18,830.31    1,242.45	16,916.64      8,562,374    4,118,419	 1,425,187    1,425,154 	 0.00	       0.01	   0.00        0.01	       6.0	    2.9 	 1.0	   79.5     82.6     67.0     84.7     73.4	84.7	 84.6
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

35dumc2tpr9dv	     303.87	 3,507.92      275.55	 3,010.67      1,818,949      726,417	   754,482	251,494 	 0.00	       0.01	   0.00        0.01	       7.2	    2.9 	 3.0	   19.8     15.4     14.9     15.1     15.6	14.9	 14.9
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

amnkmrsjh10nv	      48.25	   568.79	55.30	   482.32	 296,541      134,631		 1	      1 	48.25	     568.79	  55.30      482.32	 296,541.0    134,631.0 	 1.0	    3.2      2.5      3.0      2.4	2.5	 2.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '28'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

fvmjqn5q18rmh	      45.44	   568.63	46.42	   491.61	 257,457      117,547		 1	      1 	45.44	     568.63	  46.42      491.61	 257,457.0    117,547.0 	 1.0	    3.0      2.5      2.5      2.5	2.2	 2.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '29'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

gdjc35y9zsuzm	      44.97	   568.61	50.00	   489.85	 258,660      117,715		 1	      1 	44.97	     568.61	  50.00      489.85	 258,660.0    117,715.0 	 1.0	    2.9      2.5      2.7      2.5	2.2	 2.4	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '40'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

0rjvf5n1k4aba	      44.69	   568.75	47.80	   491.95	 265,484      121,126		 1	      1 	44.69	     568.75	  47.80      491.95	 265,484.0    121,126.0 	 1.0	    2.9      2.5      2.6      2.5	2.3	 2.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '26'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

71v63sn4bfskh	      44.13	   568.85	54.88	   486.32	 302,862      137,221		 1	      1 	44.13	     568.85	  54.88      486.32	 302,862.0    137,221.0 	 1.0	    2.9      2.5      3.0      2.4	2.6	 2.8	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '7'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

5wf99mx0r39xn	      43.42	   568.85	54.56	   487.74	 306,580      138,731		 1	      1 	43.42	     568.85	  54.56      487.74	 306,580.0    138,731.0 	 1.0	    2.8      2.5      2.9      2.4	2.6	 2.9	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '3'; v_update_pct PLS_INTEGER :=
'15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
'600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_redo
_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_h

30ha31267a7s2	      43.14	   568.93	48.44	   493.07	 276,710      126,105		 1	      1 	43.14	     568.93	  48.44      493.07	 276,710.0    126,105.0 	 1.0	    2.8      2.5      2.6      2.5	2.4	 2.6	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '37'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

5q1jyzmr30cf9	      42.57	   568.93	47.10	   494.28	 267,284      122,117		 1	      1 	42.57	     568.93	  47.10      494.28	 267,284.0    122,117.0 	 1.0	    2.8      2.5      2.5      2.5	2.3	 2.5	  0.0
DECLARE v_default_schema_number PLS_INTEGER := '15'; v_update_pct PLS_INTEGER :=
 '15'; v_max_loop_iterations PLS_INTEGER := '0'; v_seconds_to_run PLS_INTEGER :=
 '600'; v_scale PLS_INTEGER := '1048576'; v_work_unit PLS_INTEGER := '4' ; v_red
o_stress VARCHAR2(12) := 'LITE'; v_hot_schema_modulus PLS_INTEGER := '0'; v_do_

			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
ASSM bg: segment fix monitor						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM cbk:blocks examined						  1,042 	   1.7		0.0		0.9	      0.1	    0.8 	  0.9
ASSM cbk:blocks marked full						    248 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
ASSM gsp:L1 bitmaps examined						    815 	   1.3		0.0		0.7	      0.0	    0.6 	  0.7
ASSM gsp:L2 bitmap full 						      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:L2 bitmaps examined						    190 	   0.3		0.0		0.2	      0.0	    0.1 	  0.2
ASSM gsp:Optimized reject DB						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ASSM gsp:Search all							      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:Search hint							      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:Search steal							      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:bump HWM							      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM gsp:get free block 						    793 	   1.3		0.0		0.7	      0.1	    0.6 	  0.7
ASSM gsp:get free data block						    644 	   1.1		0.0		0.5	      0.0	    0.5 	  0.6
ASSM gsp:get free index block						    149 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
ASSM gsp:good hint							    621 	   1.0		0.0		0.5	      0.0	    0.5 	  0.5
ASSM gsp:reject db							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ASSM rsv:fill reserve							      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
ASSM wasted db state change						      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Batched IO (bound) vector count 					     11 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO block miss count					      1,367,862        2,263.1		5.4	    1,131.5	     54.3	1,093.1       1,169.9
Batched IO double miss count					      1,367,816        2,263.0		5.4	    1,131.5	     54.4	1,093.1       1,169.9
Batched IO same unit count						     28 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO single block count					      1,367,823        2,263.0		5.4	    1,131.5	     54.3	1,093.1       1,169.9
Batched IO vector block count						     10 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Batched IO vector read count						      4 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
Block Cleanout Optim referenced 					     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
CCursor + sql area evicted						     36 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
CPU used by this session						265,847 	 439.8		1.1	      219.9	      2.0	  218.5 	221.3
CPU used when call started						197,679 	 327.1		0.8	      163.5	      0.6	  163.1 	163.9
CR blocks created							    978 	   1.6		0.0		0.8	      0.1	    0.8 	  0.9
Cached Commit SCN referenced					      3,523,689        5,829.8	       14.0	    2,914.9	     10.3	2,907.6       2,922.2
Client Advertised Receive Window					    287 	   0.5		0.0		0.2	      0.0	    0.2 	  0.2
Client Advertised Send Window						    287 	   0.5		0.0		0.2	      0.0	    0.2 	  0.2
Client Path Maximum Transmission Unit(MTU)			      1,341,150        2,218.9		5.3	    1,109.4	  1,497.7	   50.4       2,168.5
Client Send Congestion Window						    410 	   0.7		0.0		0.3	      0.0	    0.3 	  0.3
Client Time (usec) Last Ack Received					     20 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Time (usec) Last Data Received					     19 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Client Time (usec) Last Data Sent					    123 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
Client Time (usec) Round Trip Time					105,241 	 174.1		0.4	       87.1	     16.8	   75.2 	 98.9
Client Time (usec) Round Trip Time Variance				105,257 	 174.1		0.4	       87.1	      0.4	   86.8 	 87.3
Client Total Bytes Acked						637,291        1,054.4		2.5	      527.2	     31.8	  504.7 	549.6
Client Total Bytes Received						249,395 	 412.6		1.0	      206.3	      8.3	  200.4 	212.2
DB time 							      2,400,448        3,971.4		9.5	    1,985.7	    140.0	1,886.7       2,084.7
DBWR checkpoint buffers written 					 40,701 	  67.3		0.2	       33.7	      2.6	   31.8 	 35.5
DBWR checkpoints							     98 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
DBWR fusion writes							    119 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
DBWR object drop buffers written					     20 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
DBWR transaction table writes						    560 	   0.9		0.0		0.5	      0.0	    0.4 	  0.5
DBWR undo block writes							 24,062 	  39.8		0.1	       19.9	      0.9	   19.3 	 20.5
DFO trees parallelized							      9 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
HSC Heap Segment Block Changes						758,112        1,254.3		3.0	      627.1	     28.1	  607.2 	647.0
Heap Segment Array Inserts						    318 	   0.5		0.0		0.3	      0.0	    0.3 	  0.3
Heap Segment Array Updates						     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
KTFB alloc req								     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
KTFB alloc space (block)					      9,502,720       15,721.8	       37.6	    7,860.9	  8,663.5	1,734.8      13,986.9
KTFB alloc time (ms)							  7,360 	  12.2		0.0		6.1	      8.1	    0.4 	 11.8
KTFB apply req								     46 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
KTFB apply time (ms)							  3,833 	   6.3		0.0		3.2	      2.5	    1.4 	  4.9
KTFB free req								     39 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
KTFB free space (block) 						  4,752 	   7.9		0.0		3.9	      2.5	    2.1 	  5.7

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
KTFB free time (ms)							    233 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
PX local messages recv'd						     88 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
PX local messages sent							     88 	   0.1		0.0		0.1	      0.1	    0.0 	  0.1
PX remote messages recv'd						     96 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
PX remote messages sent 						     96 	   0.2		0.0		0.1	      0.1	    0.0 	  0.1
Parallel operations not downgraded					      9 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
Requests to/from client 						    253 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
SMON posted for undo segment shrink					     32 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
SQL*Net roundtrips to/from client					    213 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
active txn count during cleanout					    406 	   0.7		0.0		0.3	      0.0	    0.3 	  0.3
application wait time							     13 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
background timeouts							 10,744 	  17.8		0.0		8.9	      0.0	    8.9 	  8.9
blocks cleaned out using minact 					421,499 	 697.4		1.7	      348.7	     42.7	  318.5 	378.9
branch node splits							      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
buffer is not pinned count					     10,136,738       16,770.8	       40.2	    8,385.4	    382.2	8,115.1       8,655.6
buffer is pinned count						      3,623,931        5,995.6	       14.4	    2,997.8	    131.1	2,905.1       3,090.5
bytes received via SQL*Net from client					426,817 	 706.1		1.7	      353.1	    447.5	   36.6 	669.5
bytes sent via SQL*Net to client					 46,453 	  76.9		0.2	       38.4	     20.3	   24.0 	 52.8
calls to get snapshot scn: kcmgss				      1,944,428        3,217.0		7.7	    1,608.5	     78.9	1,552.7       1,664.3
calls to kcmgas 							461,360 	 763.3		1.8	      381.6	      7.8	  376.1 	387.2
calls to kcmgcs 							  4,801 	   7.9		0.0		4.0	      0.7	    3.5 	  4.4
cell physical IO interconnect bytes				 54,542,342,144   90,237,782.9	  216,049.5    45,118,891.4   2,187,668.4  43,571,976.3  46,665,806.6
change write time							  3,265 	   5.4		0.0		2.7	      0.2	    2.6 	  2.8
cleanout - number of ktugct calls					  2,944 	   4.9		0.0		2.4	      0.2	    2.3 	  2.6
cleanouts and rollbacks - consistent read gets				      7 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
cleanouts only - consistent read gets					     49 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
cluster key scan block gets						    165 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
cluster key scans							    156 	   0.3		0.0		0.1	      0.0	    0.1 	  0.1
cluster wait time							153,050 	 253.2		0.6	      126.6	      7.7	  121.2 	132.0
commit batch/immediate performed					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit batch/immediate requested					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit cleanout failures: block lost					     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanout failures: callback failure				     23 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
commit cleanouts							758,287        1,254.6		3.0	      627.3	     27.9	  607.6 	647.0
commit cleanouts successfully completed 				758,249        1,254.5		3.0	      627.2	     27.9	  607.5 	646.9
commit immediate performed						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit immediate requested						      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
commit txn count during cleanout					    216 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
concurrency wait time							      6 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
consistent changes							922,650        1,526.5		3.7	      763.2	     58.8	  721.7 	804.8
consistent gets 						     10,307,541       17,053.4	       40.8	    8,526.7	    286.5	8,324.1       8,729.3
consistent gets examination					      4,288,062        7,094.4	       17.0	    3,547.2	     61.5	3,503.7       3,590.7
consistent gets examination (fastpath)				      4,287,689        7,093.8	       17.0	    3,546.9	     61.5	3,503.4       3,590.4
consistent gets from cache					     10,307,541       17,053.4	       40.8	    8,526.7	    286.5	8,324.1       8,729.3
consistent gets pin						      6,019,479        9,958.9	       23.8	    4,979.5	    225.0	4,820.4       5,138.5
consistent gets pin (fastpath)					      1,856,813        3,072.0		7.4	    1,536.0	     59.6	1,493.9       1,578.2
cursor authentications							     11 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
data blocks consistent reads - undo records applied			    101 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
db block changes						      2,068,075        3,421.5		8.2	    1,710.8	     77.3	1,656.1       1,765.4
db block gets							      1,355,114        2,242.0		5.4	    1,121.0	     55.8	1,081.5       1,160.4
db block gets direct							    224 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
db block gets from cache					      1,354,890        2,241.6		5.4	    1,120.8	     55.7	1,081.4       1,160.2
db block gets from cache (fastpath)					555,382 	 918.9		2.2	      459.4	     22.9	  443.2 	475.6
deferred (CURRENT) block cleanout applications				423,143 	 700.1		1.7	      350.0	     42.6	  319.9 	380.2
dirty buffers inspected 						596,347 	 986.6		2.4	      493.3	     13.1	  484.1 	502.6
enqueue conversions							    706 	   1.2		0.0		0.6	      0.1	    0.5 	  0.7
enqueue releases							522,630 	 864.7		2.1	      432.3	     19.4	  418.6 	446.1
enqueue requests							522,600 	 864.6		2.1	      432.3	     19.4	  418.6 	446.0
enqueue timeouts							     11 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
enqueue waits								    407 	   0.7		0.0		0.3	      0.0	    0.3 	  0.4

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
exchange deadlocks							      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
execute count							      1,683,794        2,785.8		6.7	    1,392.9	     62.0	1,349.0       1,436.8
file io service time						    849,190,891    1,404,946.0	    3,363.8	  702,473.0	183,999.3     572,365.8     832,580.2
file io wait time						 49,863,562,783   82,496,934.8	  197,516.2    41,248,467.4   5,416,453.0  37,418,456.7  45,078,478.1
free buffer inspected						      4,940,272        8,173.5	       19.6	    4,086.7	    197.8	3,946.9       4,226.6
free buffer requested						      4,913,618        8,129.4	       19.5	    4,064.7	    199.8	3,923.4       4,206.0
gc blocks compressed							 26,278 	  43.5		0.1	       21.7	      2.5	   20.0 	 23.5
gc blocks lost								      9 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cleanout saved							     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cr anti locks created						 62,044 	 102.6		0.2	       51.3	      0.3	   51.1 	 51.6
gc cr anti locks shrunk 						     26 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cr block build time							    280 	   0.5		0.0		0.2	      0.0	    0.2 	  0.2
gc cr block flush time							     25 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc cr block receive time						    820 	   1.4		0.0		0.7	      0.2	    0.6 	  0.8
gc cr blocks built							  5,536 	   9.2		0.0		4.6	      0.0	    4.6 	  4.6
gc cr blocks flushed							     37 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
gc cr blocks received							  7,047 	  11.7		0.0		5.8	      1.7	    4.6 	  7.0
gc cr blocks served							  7,049 	  11.7		0.0		5.8	      1.7	    4.6 	  7.0
gc cr multiblock grants received					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc current block flush time						     74 	   0.1		0.0		0.1	      0.0	    0.0 	  0.1
gc current block receive time						  1,869 	   3.1		0.0		1.5	      0.2	    1.4 	  1.7
gc current blocks flushed						     54 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
gc current blocks pinned						      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc current blocks received						 23,952 	  39.6		0.1	       19.8	      1.9	   18.5 	 21.2
gc current blocks served						 23,965 	  39.6		0.1	       19.8	      1.9	   18.5 	 21.2
gc force cr read cr							     21 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc kbytes saved 							109,957 	 181.9		0.4	       91.0	     11.8	   82.6 	 99.3
gc kbytes sent								138,154 	 228.6		0.5	      114.3	     17.4	  102.0 	126.6
gc local grants 						      2,570,760        4,253.2	       10.2	    2,126.6	    172.9	2,004.3       2,248.9
gc merge pi bg								      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gc merge pi fg								     43 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc reader bypass grants 						     39 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gc reader bypass waits							      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gc remote grants						      2,332,107        3,858.4		9.2	    1,929.2	     23.6	1,912.5       1,945.9
gc status messages received					      2,257,016        3,734.1		8.9	    1,867.1	     15.1	1,856.4       1,877.8
gc status messages sent 					      2,257,073        3,734.2		8.9	    1,867.1	     14.6	1,856.8       1,877.5
gcs affinity lock grants						 18,864 	  31.2		0.1	       15.6	      6.9	   10.7 	 20.5
gcs anti-locks created							 62,018 	 102.6		0.2	       51.3	      0.3	   51.1 	 51.5
gcs data block access records					      4,894,274        8,097.4	       19.4	    4,048.7	    192.1	3,912.8       4,184.5
gcs messages sent						      5,422,956        8,972.0	       21.5	    4,486.0	     25.0	4,468.3       4,503.7
gcs read-mostly lock failures						 59,937 	  99.2		0.2	       49.6	     22.9	   33.4 	 65.7
gcs read-mostly lock grants						338,903 	 560.7		1.3	      280.3	    129.5	  188.8 	371.9
gcs stats management (SCM) process posts				     13 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ges messages sent							  3,623 	   6.0		0.0		3.0	      0.8	    2.4 	  3.6
global enqueue get time 						  1,248 	   2.1		0.0		1.0	      0.1	    1.0 	  1.1
global enqueue gets sync						270,571 	 447.6		1.1	      223.8	     18.0	  211.1 	236.6
global enqueue releases 						269,962 	 446.6		1.1	      223.3	     17.5	  210.9 	235.7
heap block compress							 18,759 	  31.0		0.1	       15.5	      0.8	   14.9 	 16.1
hot buffers moved to head of LRU					159,467 	 263.8		0.6	      131.9	      8.3	  126.1 	137.8
immediate (CR) block cleanout applications				     56 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
immediate (CURRENT) block cleanout applications 			    429 	   0.7		0.0		0.4	      0.1	    0.3 	  0.4
in call idle wait time						      9,940,881       16,446.7	       39.4	    8,223.4	     20.2	8,209.1       8,237.6
index crx upgrade (positioned)						     61 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
index fast full scans (full)						      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
index fetch by key							  1,877 	   3.1		0.0		1.6	      0.6	    1.2 	  1.9
index range scans						      1,682,356        2,783.4		6.7	    1,391.7	     62.8	1,347.3       1,436.1
index reclamation/extension switch					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
leaf node 90-10 splits							     15 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
leaf node splits							    143 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
lob reads								    180 	   0.3		0.0		0.3	      N/A	    0.3 	  0.3

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
lob writes								  3,149 	   5.2		0.0		2.6	      3.6	    0.0 	  5.2
lob writes unaligned							  3,149 	   5.2		0.0		2.6	      3.6	    0.0 	  5.2
logical read bytes from cache					 95,538,634,752  158,064,260.4	  378,441.3    79,032,130.2   2,803,220.0  77,049,954.4  81,014,306.1
logons cumulative							     27 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
max cf enq hold time							     10 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
messages received							261,104 	 432.0		1.0	      216.0	      1.5	  214.9 	217.1
messages sent								261,104 	 432.0		1.0	      216.0	      1.5	  214.9 	217.1
no work - consistent read gets					      6,002,893        9,931.5	       23.8	    4,965.8	    218.9	4,810.9       5,120.6
non-idle wait count						     10,339,592       17,106.4	       41.0	    8,553.2	    297.2	8,343.0       8,763.4
non-idle wait time						      2,324,472        3,845.7		9.2	    1,922.9	    149.7	1,817.0       2,028.7
opened cursors cumulative					      1,938,136        3,206.6		7.7	    1,603.3	     71.4	1,552.8       1,653.8
parse count (describe)							      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
parse count (hard)							     30 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
parse count (total)							  2,226 	   3.7		0.0		1.8	      0.5	    1.5 	  2.2
parse time cpu								     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
parse time elapsed							     21 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
physical read IO requests					      4,862,881        8,045.4	       19.3	    4,022.7	    189.6	3,888.6       4,156.8
physical read bytes						 39,837,294,592   65,908,962.0	  157,800.8    32,954,481.0   1,554,030.8  31,855,615.3  34,053,346.7
physical read total IO requests 				      4,871,242        8,059.2	       19.3	    4,029.6	    190.4	3,895.0       4,164.3
physical read total bytes					 41,340,386,304   68,395,758.3	  163,754.8    34,197,879.2   1,528,393.1  33,117,142.0  35,278,616.3
physical read total multi block requests				  1,350 	   2.2		0.0		1.1	      0.0	    1.1 	  1.1
physical reads							      4,862,951        8,045.5	       19.3	    4,022.8	    189.7	3,888.6       4,156.9
physical reads cache						      4,862,951        8,045.5	       19.3	    4,022.8	    189.7	3,888.6       4,156.9
physical reads cache prefetch						     70 	   0.1		0.0		0.1	      N/A	    0.1 	  0.1
physical write IO requests						680,093        1,125.2		2.7	      562.6	     36.1	  537.1 	588.1
physical write bytes						  5,792,686,080    9,583,730.8	   22,945.6	4,791,865.4	299,138.3   4,580,342.7   5,003,388.1
physical write total IO requests					888,938        1,470.7		3.5	      735.4	     36.0	  709.9 	760.8
physical write total bytes					  6,591,131,136   10,904,721.2	   26,108.3	5,452,360.6	328,890.2   5,219,800.1   5,684,921.1
physical write total multi block requests				  1,351 	   2.2		0.0		1.1	      0.0	    1.1 	  1.1
physical writes 							707,115        1,169.9		2.8	      584.9	     36.5	  559.1 	610.8
physical writes direct							    229 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
physical writes direct (lob)						      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
physical writes direct temporary tablespace				     95 	   0.2		0.0		0.2	      N/A	    0.2 	  0.2
physical writes from cache						706,886        1,169.5		2.8	      584.8	     36.4	  559.0 	610.5
physical writes non checkpoint						696,212        1,151.9		2.8	      575.9	     39.6	  548.0 	603.9
pinned buffers inspected						    726 	   1.2		0.0		0.6	      0.0	    0.6 	  0.6
prefetched blocks aged out before use					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
process last non-idle time						  1,216 	   2.0		0.0		1.0	      0.0	    1.0 	  1.0
recursive calls 						      2,210,265        3,656.8		8.8	    1,828.4	     76.1	1,774.6       1,882.2
recursive cpu usage							249,214 	 412.3		1.0	      206.2	      2.3	  204.6 	207.8
redo KB read								809,358        1,339.0		3.2	      669.5	     29.3	  648.8 	690.3
redo blocks checksummed by FG (exclusive)				479,563 	 793.4		1.9	      396.7	     23.5	  380.1 	413.4
redo blocks written						      1,520,841        2,516.2		6.0	    1,258.1	     55.2	1,219.1       1,297.1
redo blocks written (group 0)						970,651        1,605.9		3.8	      802.9	      0.2	  802.8 	803.1
redo blocks written (group 1)						550,190 	 910.3		2.2	      455.1	     54.9	  416.3 	494.0
redo entries							      1,073,162        1,775.5		4.3	      887.7	     37.9	  860.9 	914.5
redo size							    706,034,472    1,168,101.4	    2,796.7	  584,050.7	 26,811.8     565,091.9     603,009.5
redo size for direct writes						    344 	   0.6		0.0		0.3	      0.1	    0.2 	  0.4
redo subscn max counts							     97 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
redo synch time 							      4 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
redo synch time (usec)							 35,299 	  58.4		0.1	       29.2	     37.5	    2.7 	 55.7
redo synch time overhead (usec) 					  3,387 	   5.6		0.0		2.8	      3.5	    0.3 	  5.3
redo synch time overhead count (  2ms)					      5 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo synch time overhead count (  8ms)					      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
redo synch writes							     42 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
redo wastage							     47,870,664       79,199.8	      189.6	   39,599.9	    400.9      39,316.4      39,883.4
redo write active strands						207,555 	 343.4		0.8	      171.7	      0.2	  171.5 	171.8
redo write finish time						  1,283,121,147    2,122,864.3	    5,082.6	1,061,432.2	 90,673.7     997,316.2   1,125,548.1
redo write gather time						     78,729,552      130,254.4	      311.9	   65,127.2	  6,444.0      60,570.6      69,683.8
redo write info find							      6 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
redo write schedule time					     81,492,084      134,824.9	      322.8	   67,412.4	  6,380.2      62,901.0      71,923.9
redo write size count (   4KB)						115,270 	 190.7		0.5	       95.4	      5.0	   91.8 	 98.9
redo write size count (   8KB)						 75,755 	 125.3		0.3	       62.7	      2.6	   60.9 	 64.5
redo write size count (  16KB)						  8,158 	  13.5		0.0		6.7	      1.6	    5.6 	  7.9
redo write size count (  32KB)						  1,432 	   2.4		0.0		1.2	      0.1	    1.1 	  1.3
redo write size count ( 128KB)						    393 	   0.7		0.0		0.3	      0.1	    0.3 	  0.4
redo write size count ( 256KB)						     10 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write size count ( 512KB)						      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
redo write time 							129,126 	 213.6		0.5	      106.8	      9.0	  100.4 	113.2
redo write time (usec)						  1,291,251,581    2,136,315.8	    5,114.8	1,068,157.9	 90,415.9   1,004,224.2   1,132,091.6
redo write total time						  1,346,127,562    2,227,105.5	    5,332.2	1,113,552.7	 99,142.9   1,043,448.1   1,183,657.4
redo write worker delay (usec)					     60,893,286      100,745.1	      241.2	   50,372.5	  7,579.0      45,013.4      55,731.7
redo write worker delay count						201,016 	 332.6		0.8	      166.3	      0.7	  165.8 	166.8
redo writes								201,016 	 332.6		0.8	      166.3	      0.7	  165.8 	166.8
redo writes (group 0)							116,235 	 192.3		0.5	       96.2	      3.4	   93.7 	 98.6
redo writes (group 1)							 84,781 	 140.3		0.3	       70.1	      2.7	   68.2 	 72.1
redo writes adaptive all						201,016 	 332.6		0.8	      166.3	      0.7	  165.8 	166.8
redo writes adaptive worker						201,016 	 332.6		0.8	      166.3	      0.7	  165.8 	166.8
rollbacks only - consistent read gets					     43 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
root node splits							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
rows fetched via callback						  1,070 	   1.8		0.0		0.9	      0.0	    0.9 	  0.9
securefile allocation bytes						 40,960 	  67.8		0.2	       67.8	      N/A	   67.8 	 67.8
securefile allocation chunks						      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
securefile bytes non-transformed					 30,842 	  51.0		0.1	       51.0	      N/A	   51.0 	 51.0
securefile direct write bytes						 40,960 	  67.8		0.2	       67.8	      N/A	   67.8 	 67.8
securefile direct write ops						      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
securefile number of non-transformed flushes				      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
segment chunks allocation from dispenser				      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
segment dispenser allocations						      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
segment prealloc ops							      4 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
segment prealloc time (ms)						     39 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
session connect time							    642 	   1.1		0.0		1.1	      N/A	    1.1 	  1.1
session cursor cache hits					      1,935,059        3,201.5		7.7	    1,600.7	     71.5	1,550.2       1,651.3
session logical reads						     11,662,672       19,295.4	       46.2	    9,647.7	    342.3	9,405.6       9,889.7
shared hash latch upgrades - no wait				      1,885,827        3,120.0		7.5	    1,560.0	     57.9	1,519.1       1,600.9
shared io pool buffer get success					      5 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
sorts (memory)								    463 	   0.8		0.0		0.4	      0.2	    0.3 	  0.5
sorts (rows)								 90,532 	 149.8		0.4	       74.9	     41.1	   45.8 	103.9
sql area evicted							     46 	   0.1		0.0		0.0	      0.1	    0.0 	  0.1
sql area purged 							      3 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
summed dirty queue length					      3,161,751        5,231.0	       12.5	    2,615.5	     45.4	2,583.4       2,647.6
switch current caused by our pin					     25 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
switch current to new buffer						     34 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
table fetch by rowid						      5,661,427        9,366.6	       22.4	    4,683.3	    212.9	4,532.7       4,833.8
table fetch continued row						      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
table scan blocks gotten						  7,960 	  13.2		0.0		6.6	      0.6	    6.1 	  7.0
table scan disk non-IMC rows gotten					412,464 	 682.4		1.6	      341.2	     91.0	  276.9 	405.5
table scan rows gotten							412,464 	 682.4		1.6	      341.2	     91.0	  276.9 	405.5
table scans (short tables)						    249 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
temp space allocated (bytes)					      1,048,576        1,734.8		4.2	    1,734.8	      N/A	1,734.8       1,734.8
total cf enq hold time							  3,082 	   5.1		0.0		2.5	      0.2	    2.4 	  2.7
total number of cf enq holders						    319 	   0.5		0.0		0.3	      0.0	    0.3 	  0.3
total number of times SMON posted					     32 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
transaction tables consistent reads - undo records applied		918,731        1,520.0		3.6	      760.0	     63.0	  715.4 	804.6
undo change vector size 					    277,764,600      459,548.7	    1,100.3	  229,774.3	 10,405.9     222,416.3     237,132.4
user I/O wait time						      1,999,174        3,307.5		7.9	    1,653.8	    126.0	1,564.7       1,742.8
user calls								    479 	   0.8		0.0		0.4	      0.1	    0.3 	  0.5
user commits								252,453 	 417.7		1.0	      208.8	      9.3	  202.2 	215.4
user logons cumulative							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
user logouts cumulative 						     41 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0

System Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
workarea executions - optimal						    770 	   1.3		0.0		0.6	      0.3	    0.5 	  0.8
write clones created in foreground					     16 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
			  --------------------------------------------------------------------------------------------------------------------


Global Messaging Statistics (Global)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
Global Enqueue S-optim Broadcasts sent					     50 	   0.1		0.0		0.0	      0.0	    0.0 	  0.1
Global Enqueue S-optim S-lock gets					 13,587 	  22.5		0.1	       11.2	      7.6	    5.9 	 16.6
Global Enqueue S-optim anti-locks crea					     25 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
acks for commit broadcast(actual)					 46,657 	  77.2		0.2	       38.6	      5.2	   34.9 	 42.3
acks for commit broadcast(logical)					119,834 	 198.3		0.5	       99.1	      9.4	   92.5 	105.8
broadcast msgs on commit(actual)					119,834 	 198.3		0.5	       99.1	      9.4	   92.5 	105.8
broadcast msgs on commit(logical)					200,802 	 332.2		0.8	      166.1	      0.7	  165.6 	166.6
broadcast msgs on commit(wasted)					 68,580 	 113.5		0.3	       56.7	      3.7	   54.1 	 59.3
gcs assume no cvt							 12,377 	  20.5		0.0	       10.2	      1.4	    9.3 	 11.2
gcs ast to fg							      2,254,637        3,730.2		8.9	    1,865.1	     15.3	1,854.3       1,875.9
gcs ast xid								      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs bidless ast to lms							    216 	   0.4		0.0		0.2	      0.1	    0.1 	  0.3
gcs blocked converts							 66,403 	 109.9		0.3	       54.9	      0.5	   54.6 	 55.3
gcs blocked cr converts 						  7,038 	  11.6		0.0		5.8	      1.7	    4.6 	  7.0
gcs compatible basts							     20 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (global)					     34 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gcs compatible cr basts (local) 					 19,459 	  32.2		0.1	       16.1	      1.1	   15.3 	 16.9
gcs dbwr flush pi msgs							345,634 	 571.8		1.4	      285.9	     14.7	  275.5 	296.3
gcs dbwr write request msgs						    119 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
gcs grant ast							      2,254,854        3,730.6		8.9	    1,865.3	     15.4	1,854.4       1,876.2
gcs immediate (compatible) converts					 17,497 	  28.9		0.1	       14.5	      0.3	   14.3 	 14.7
gcs immediate (null) converts						669,063        1,106.9		2.7	      553.5	      6.4	  549.0 	558.0
gcs immediate cr (compatible) converts					    218 	   0.4		0.0		0.2	      0.0	    0.2 	  0.2
gcs immediate cr (null) converts				      3,788,221        6,267.4	       15.0	    3,133.7	     31.0	3,111.8       3,155.6
gcs lms write request msgs						     76 	   0.1		0.0		0.1	      0.0	    0.1 	  0.1
gcs msgs process time(ms)						214,510 	 354.9		0.8	      177.4	      7.8	  171.9 	183.0
gcs msgs received						      5,417,529        8,963.1	       21.5	    4,481.5	     24.3	4,464.4       4,498.7
gcs new served by master						    144 	   0.2		0.0		0.1	      0.1	    0.1 	  0.2
gcs out-of-order msgs							      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs pings refused							  2,154 	   3.6		0.0		1.8	      0.1	    1.7 	  1.8
gcs queued converts							      1 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs reader bypass grant immediate					     39 	   0.1		0.0		0.0	      0.0	    0.0 	  0.0
gcs refuse xid								      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs refuse xid to fg							      2 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs side channel msgs actual						  9,638 	  15.9		0.0		8.0	      0.0	    8.0 	  8.0
gcs side channel msgs logical					      2,288,274        3,785.8		9.1	    1,892.9	     11.1	1,885.1       1,900.8
gcs stale cr								     21 	   0.0		0.0		0.0	      0.0	    0.0 	  0.0
gcs undo cr								      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
gcs writes refused							      2 	   0.0		0.0		0.0	      N/A	    0.0 	  0.0
ges msgs process time(ms)						     92 	   0.2		0.0		0.1	      0.0	    0.1 	  0.1
ges msgs received							  3,640 	   6.0		0.0		3.0	      0.8	    2.4 	  3.6
implicit batch messages received					 69,548 	 115.1		0.3	       57.5	      3.9	   54.8 	 60.3
implicit batch messages sent						 69,550 	 115.1		0.3	       57.5	      3.9	   54.8 	 60.3
messages flow controlled						  3,579 	   5.9		0.0		3.0	      1.6	    1.8 	  4.1
messages queue sent actual						493,731 	 816.9		2.0	      408.4	     12.6	  399.5 	417.3
messages queue sent logical						461,376 	 763.3		1.8	      381.7	     28.3	  361.6 	401.7
messages received actual					      2,884,560        4,772.4	       11.4	    2,386.2	      4.0	2,383.4       2,389.0
messages received logical					      5,421,169        8,969.1	       21.5	    4,484.5	     25.1	4,466.8       4,502.3
messages sent directly						      2,387,113        3,949.4		9.5	    1,974.7	     10.1	1,967.5       1,981.8
messages sent indirectly					      2,940,611        4,865.1	       11.6	    2,432.6	     37.6	2,406.0       2,459.1
messages sent not implicit batched					 39,997 	  66.2		0.2	       33.1	     11.5	   25.0 	 41.2
messages sent pbatched						      2,489,603        4,118.9		9.9	    2,059.5	      4.0	2,056.6       2,062.3
msgs received kernel queue time (ns)				233,410,712,080  386,167,464.1	  924,571.0   1.9308373E+08  24,055,062.5 1.7607423E+08 2.1009323E+08
msgs received queue time (ms)						 87,984 	 145.6		0.3	       72.8	      9.0	   66.4 	 79.1
msgs received queued						      5,421,169        8,969.1	       21.5	    4,484.5	     25.1	4,466.8       4,502.3
msgs sent queue time (ms)						536,008 	 886.8		2.1	      443.4	      9.4	  436.8 	450.0
msgs sent queue time on ksxp (ms)				      2,679,021        4,432.3	       10.6	    2,216.2	     19.4	2,202.4       2,229.9
msgs sent queued							774,739        1,281.8		3.1	      640.9	      2.3	  639.3 	642.5
msgs sent queued on ksxp					      2,883,615        4,770.8	       11.4	    2,385.4	      3.1	2,383.2       2,387.6
process batch messages received 					219,213 	 362.7		0.9	      181.3	     15.7	  170.2 	192.4

Global Messaging Statistics (Global)	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> per Second Average - average of per-instance per Second rates
-> per Second Std Dev - standard deviation of per-instance per Second rates
-> per Second Min     - minimum of per-instance per Second rates
-> per Second Max     - maximum of per-instance per Second rates

																     per Second
													      -------------------------------------------------------
Statistic								  Total     per Second	  per Trans	    Average	  Std Dev	    Min 	  Max
------------------------------------------------------------ ------------------ -------------- ------------   ------------- ------------- ------------- -------------
process batch messages sent						234,127 	 387.4		0.9	      193.7	     15.4	  182.8 	204.6
receiver cycle time							728,489        1,205.3		2.9	      602.6	      5.9	  598.4 	606.8
receiver loop count						      3,008,546        4,977.5	       11.9	    2,488.8	     41.0	2,459.8       2,517.7
			  --------------------------------------------------------------------------------------------------------------------


System Statistics (Absolute Values)	 DB/Inst: P30DB/p30db1	Snaps: 171-172

	    Sessions		   Open Cursors 	    Session Cached Cursors
       -----------------   ---------------------------	 ---------------------------
  I#	  Begin      End	    Begin	   End		  Begin 	 End
----   -------- --------   -------------- ------------	 -------------- ------------
   1	    108       90	      157	    79		  4,293        4,256
   2	    111       91	      202	   116		  3,884        3,898
 ~~~   ~~~~~~~~ ~~~~~~~~   ~~~~~~~~~~~~~~ ~~~~~~~~~~~~	 ~~~~~~~~~~~~~~ ~~~~~~~~~~~~
 Sum	    219      181	      359	   195		  8,177        8,154
 Avg	    110       91	      180	    98		  4,089        4,077
 Std	      2        1	       32	    26		    289 	 253
			  --------------------------------------------------------------------------------------------------------------------

IO Profile (Global)			 DB/Inst: P30DB/p30db1	Snaps: 171-172

Statistic			  Read+Write/s	      Reads/s	    Writes/s
------------------------------ --------------- -------------- --------------
Total Requests			      9,529.43	     8,058.81	    1,470.63
Database Requests		      9,170.10	     8,044.97	    1,125.12
Optimized Requests			  0.00		 0.00		0.00
Redo Requests				332.55		  N/A	      332.55
Total (MB)				 75.62		65.22	       10.40
Database (MB)				 71.99		62.85		9.14
Optimized Total (MB)			  0.00		 0.00		0.00
Redo (MB)				  1.11		  N/A		1.11
Database (blocks)		      9,214.92	     8,045.09	    1,169.83
Via Buffer Cache (blocks)	      9,214.54	     8,045.09	    1,169.45
Direct (blocks) 			  0.38		 0.00		0.38
			  --------------------------------------------------------------------------------------------------------------------

IOStat by Function			 DB/Inst: P30DB/p30db1	Snaps: 171-172

					   Requests						 MB
		       ------------------------------------------------   ------------------------------------------------
															      Waits:	Avg
  I# Function Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s     Count	Time
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   ------- --------
   * Total		  5,742,133    9,499.58    8,029.53    1,470.04 	45,576	     75.40	 65.00	     10.40	5.1M   4.21ms
     Buffer Cache Re	  4,845,211    8,015.74    8,015.74	   0.00 	37,860	     62.63	 62.63	      0.00	4.8M   4.14ms
     DBWR		    680,163    1,125.24        0.00    1,125.24 	 5,523	      9.14	  0.00	      9.14	   0
     Others		      9,571	  15.83       13.79	   2.04 	 1,452	      2.40	  2.37	      0.03	5714   1.37ms
     LGWR		    207,183	 342.76        0.00	 342.76 	   741	      1.23	  0.00	      1.23    200.6K   5.95ms
     Direct Writes		  5	   0.01        0.00	   0.01 	     0	      0.00	  0.00	      0.00	   0

   1 Total		  2,773,078    4,587.68    3,878.26	 709.42 	22,022	     36.43	 31.46	      4.98	2.4M   4.11ms
     Buffer Cache Re	  2,340,449    3,871.95    3,871.95	   0.00 	18,288	     30.26	 30.26	      0.00	2.3M   4.05ms
     DBWR		    324,639	 537.07        0.00	 537.07 	 2,639	      4.37	  0.00	      4.37	   0
     Others		      4,376	   7.24        6.31	   0.93 	   736	      1.22	  1.20	      0.02	2553   1.49ms
     LGWR		    103,614	 171.42        0.00	 171.42 	   359	      0.59	  0.00	      0.59    100.5K   5.58ms

   2 Total		  2,969,055    4,911.90    4,151.27	 760.63 	23,554	     38.97	 33.55	      5.42	2.6M   4.29ms
     Buffer Cache Re	  2,504,762    4,143.79    4,143.79	   0.00 	19,572	     32.38	 32.38	      0.00	2.5M   4.22ms
     DBWR		    355,524	 588.17        0.00	 588.17 	 2,884	      4.77	  0.00	      4.77	   0
     Others		      5,195	   8.59        7.48	   1.11 	   716	      1.18	  1.17	      0.02	3161   1.27ms
     LGWR		    103,569	 171.34        0.00	 171.34 	   382	      0.63	  0.00	      0.63    100.1K   6.33ms
     Direct Writes		  5	   0.01        0.00	   0.01 	     0	      0.00	  0.00	      0.00	   0
			  --------------------------------------------------------------------------------------------------------------------

IOStat by File Type			 DB/Inst: P30DB/p30db1	Snaps: 171-172

					   Requests						 MB				Service Time
		       ------------------------------------------------   ------------------------------------------------   -----------------
																Small	 Large
  I# Filetype Name	      Total	  IOs/s     Reads/s    Writes/s 	 Total	   IO MB/s   Read MB/s	Write MB/s	 Read	  Read
---- ---------------   ------------ ----------- ----------- -----------   ------------ ----------- ----------- -----------   -------- --------
   * Total		  5,743,632    9,502.06    8,032.04    1,470.02 	45,587	     75.42	 65.01	     10.40     3.62ms 1382.57m
     Data File		  5,526,834    9,143.39    8,018.18    1,125.22 	43,394	     71.79	 62.64	      9.15     3.63ms
     Log File		    208,675	 345.22        2.49	 342.73 	 2,067	      3.42	  2.19	      1.23   210.19us 1382.57m
     Control File	      8,021	  13.27       11.28	   1.99 	   124	      0.21	  0.18	      0.03    32.11us
     Temp File			102	   0.17        0.08	   0.09 	     2	      0.00	  0.00	      0.00	.00ns

   1 Total		  2,773,833    4,588.93    3,879.53	 709.40 	22,027	     36.44	 31.46	      4.98     3.55ms 1388.60m
     Data File		  2,665,861    4,410.30    3,873.23	 537.07 	20,934	     34.63	 30.26	      4.37     3.56ms
     Log File		    104,378	 172.68        1.28	 171.40 	 1,038	      1.72	  1.12	      0.59   206.90us 1388.60m
     Control File	      3,594	   5.95        5.02	   0.93 	    55	      0.09	  0.08	      0.01    38.23us

   2 Total		  2,969,799    4,913.13    4,152.51	 760.62 	23,560	     38.98	 33.55	      5.42     3.69ms 1376.37m
     Data File		  2,860,973    4,733.09    4,144.95	 588.14 	22,460	     37.16	 32.38	      4.77     3.70ms
     Log File		    104,297	 172.55        1.22	 171.33 	 1,029	      1.70	  1.07	      0.63   214.29us 1376.37m
     Control File	      4,427	   7.32        6.27	   1.06 	    69	      0.11	  0.10	      0.02    27.20us
     Temp File			102	   0.17        0.08	   0.09 	     2	      0.00	  0.00	      0.00	.00ns
			  --------------------------------------------------------------------------------------------------------------------


Segment Statistics (Global)		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> % Total shows % of statistic for each segment compared to the global cluster-wide total
   (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants)
-> % Capture shows % of statistic for each segment compared to the  total captured
   by AWR for all segments during the snapshot interval
-> Captured Segments account for   81.7% of Total Logical Reads:      11,662,672
-> Captured Segments account for   99.7% of Total Physical Reads:	4,862,951
-> Captured Segments account for   99.7% of Total Physical Read Requests:	4,862,881
-> Captured Segments account for   99.7% of Total UnOptimized Read Requests:	   4,862,881
-> Captured Segments account for    0.0% of Total Optimized  Read Requests:		  1
-> Captured Segments account for    0.0% of Total Direct Physical Reads:	       1
-> Captured Segments account for   96.4% of Total Physical Writes:	   707,115
-> Captured Segments account for   99.6% of Total Physical Write Requests:	   680,093
-> Captured Segments account for   56.3% of Total Direct Physical Writes:	      229
-> Captured Segments account for    0.0% of Total Table Scans:		     5
-> Captured Segments account for   77.2% of Total CR Blocks Received:		7,047
-> Captured Segments account for   98.0% of Total Current Blocks Received:	    23,952
-> Captured Segments account for   77.2% of Total CR Blocks Served:	      7,049
-> Captured Segments account for   97.9% of Total Current Blocks Served:	  23,965
-> Captured Segments account for   99.6% of Total Global Cache Remote Grants:	    2,332,107
-> When ** MISSING ** occurs, some of the object attributes may not be available

				    Tablespace Object		    Subobject  Obj.
Statistic		 Owner	    Name       Name		    Name       Type	   Obj#   Dataobj#	  Value %Total %Capture
------------------------ ---------- ---------- -------------------- ---------- ----- ---------- ---------- ------------ ------ --------
db block changes	 USER27     IOPS       CF1			       TABLE	  73535      73538	 22,080    N/A	   20.3
			 USER30     IOPS       CF1			       TABLE	  73550      73554	 21,872    N/A	   20.1
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	 21,696    N/A	   20.0
			 USER10     IOPS       CF1			       TABLE	  73453      73455	 21,664    N/A	   19.9
			 USER7	    IOPS       CF1			       TABLE	  73433      73436	 21,424    N/A	   19.7
gc cr blocks received	 USER20     IOPS       CF1			       TABLE	  73501      73506	    404    5.7	   24.0
			 USER21     IOPS       CF1			       TABLE	  73503      73505	    370    5.3	   22.0
			 USER24     IOPS       CF1			       TABLE	  73520      73529	    328    4.7	   19.5
			 USER36     IOPS       CF1			       TABLE	  73581      73588	    306    4.3	   18.2
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	    274    3.9	   16.3
gc cr blocks served	 USER20     IOPS       CF1			       TABLE	  73501      73506	    404    5.7	   24.0
			 USER21     IOPS       CF1			       TABLE	  73503      73505	    370    5.2	   22.0
			 USER24     IOPS       CF1			       TABLE	  73520      73529	    328    4.7	   19.5
			 USER36     IOPS       CF1			       TABLE	  73581      73588	    306    4.3	   18.2
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	    274    3.9	   16.3
gc cu blocks received	 USER21     IOPS       CF1			       TABLE	  73503      73505	  1,289    5.4	   22.1
			 USER20     IOPS       CF1			       TABLE	  73501      73506	  1,241    5.2	   21.3
			 USER24     IOPS       CF1			       TABLE	  73520      73529	  1,145    4.8	   19.6
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	  1,106    4.6	   18.9
			 USER36     IOPS       CF1			       TABLE	  73581      73588	  1,058    4.4	   18.1
gc cu blocks served	 USER21     IOPS       CF1			       TABLE	  73503      73505	  1,289    5.4	   22.1
			 USER20     IOPS       CF1			       TABLE	  73501      73506	  1,241    5.2	   21.3
			 USER24     IOPS       CF1			       TABLE	  73520      73529	  1,145    4.8	   19.6
			 USER4	    IOPS       CF1			       TABLE	  73424      73420	  1,106    4.6	   18.9
			 USER36     IOPS       CF1			       TABLE	  73581      73588	  1,058    4.4	   18.1
gc remote grants	 USER28     IOPS       CF1			       TABLE	  73541      73548	 78,504    3.4	   21.6
			 USER7	    IOPS       CF1			       TABLE	  73433      73436	 72,461    3.1	   19.9
			 USER40     IOPS       CF1			       TABLE	  73603      73605	 72,045    3.1	   19.8
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	 70,370    3.0	   19.4
			 USER26     IOPS       CF1			       TABLE	  73533      73537	 70,274    3.0	   19.3
logical reads		 USER27     IOPS       I_CF1			       INDEX	  73525      73525	147,632    1.3	   20.2
			 USER27     IOPS       CF1			       TABLE	  73535      73538	147,264    1.3	   20.1
			 USER30     IOPS       I_CF1			       INDEX	  73561      73561	146,208    1.3	   20.0
			 USER30     IOPS       CF1			       TABLE	  73550      73554	145,840    1.3	   19.9
			 USER3	    IOPS       I_CF1			       INDEX	  73417      73417	145,024    1.2	   19.8
physical reads		 USER27     IOPS       CF1			       TABLE	  73535      73538	140,786    2.9	   20.4
			 USER30     IOPS       CF1			       TABLE	  73550      73554	139,482    2.9	   20.2
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	138,333    2.8	   20.1
			 USER7	    IOPS       CF1			       TABLE	  73433      73436	136,847    2.8	   19.8
			 USER28     IOPS       CF1			       TABLE	  73541      73548	134,261    2.8	   19.5
physical read requests	 USER27     IOPS       CF1			       TABLE	  73535      73538	140,786    2.9	   20.4
			 USER30     IOPS       CF1			       TABLE	  73550      73554	139,482    2.9	   20.2
			 USER3	    IOPS       CF1			       TABLE	  73413      73416	138,333    2.8	   20.1
			 USER7	    IOPS       CF1			       TABLE	  73433      73436	136,847    2.8	   19.8
			 USER28     IOPS       CF1			       TABLE	  73541      73548	134,261    2.8	   19.5
physical writes 	 USER16     IOPS       CF1			       TABLE	  73481      73483	 21,252    N/A	   20.8
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	 21,008    N/A	   20.5
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	 20,936    N/A	   20.5
			 USER27     IOPS       CF1			       TABLE	  73535      73538	 19,656    N/A	   19.2
			 USER30     IOPS       CF1			       TABLE	  73550      73554	 19,522    N/A	   19.1
physical writes direct	 SYS	    SYSAUX     WRH$_ACTIVE_SESSION_ 773525_131 TABLE	  74322      74322	    129    N/A	  100.0
physical write requests  USER16     IOPS       CF1			       TABLE	  73481      73483	 21,221    3.1	   20.8
			 USER2	    IOPS       CF1			       TABLE	  73409      73415	 20,987    3.1	   20.6
			 USER1	    IOPS       CF1			       TABLE	  73402      73404	 20,913    3.1	   20.5
			 USER27     IOPS       CF1			       TABLE	  73535      73538	 19,517    2.9	   19.1
			 USER30     IOPS       CF1			       TABLE	  73550      73554	 19,376    2.8	   19.0
row lock waits		 SYS	    SYSAUX     WRH$_EVENT_HISTOGRAM 3773525_79 INDEX	  74109      74109	      4    N/A	   50.0
			 SYS	    SYSAUX     WRH$_SYSSTAT_PK	    773525_131 INDEX	  74304      74304	      4    N/A	   50.0
			  --------------------------------------------------------------------------------------------------------------------

Library Cache Activity			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Summarized for all instances in the report
-> "Pct Misses"  should be very low

			 Get	Pct	       Pin    Pct	      Invali-	  GES Lock	GES Pin      GES Pin   GES Inval GES Invali-
Namespace	    Requests   Miss	  Requests   Miss    Reloads  dations	  Requests     Requests     Releases	Requests     dations
--------------- ------------ ------ -------------- ------ ---------- -------- ------------ ------------ ------------ ----------- -----------
ACCOUNT_STATUS		   4	0.0		 0    N/A	   0	    0		 4	      0 	   0	       0	   0
AUDIT POLICY		   2	0.0		 2    0.0	   0	    0		 2	      2 	   2	       0	   0
BODY			  71	0.0	       286    0.0	   0	    0		 0	    265 	 265	       0	   0
CLUSTER 		   2	0.0		 2    0.0	   0	    0		 2	      2 	   2	       0	   0
DBLINK			   4	0.0		 0    N/A	   0	    0		 4	      0 	   0	       0	   0
EDITION 		   4	0.0		 8    0.0	   0	    0		 4	      4 	   4	       0	   0
INDEX			  17	0.0		17    0.0	   0	    0		17	     17 	  17	       0	   0
QUEUE			  61	0.0		61    0.0	   0	    0		61	     61 	  61	       0	   0
SCHEMA			   1	0.0		 0    N/A	   0	    0		 1	      0 	   0	       0	   0
SQL AREA		 808	4.0	 1,685,366   -0.1	   3	    3		 0	      0 	   0	       0	   0
SQL AREA BUILD		  22   72.7		 0    N/A	   0	    0		 0	      0 	   0	       0	   0
SQL AREA STATS		  25   88.0		25   88.0	   0	    0		 0	      0 	   0	       0	   0
TABLE/PROCEDURE 	  94	0.0	     1,876    0.0	   0	    0	       261	  1,543        1,543	       0	   0
TRANSFORMATION		  61	0.0		61    0.0	   0	    0		61	     61 	  61	       0	   0
TRIGGER 		  10	0.0		10    0.0	   0	    0		 0	     10 	  10	       0	   0
			  --------------------------------------------------------------------------------------------------------------------


PGA Aggregate Target Statistics 	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> all stats are reported in MegaBytes

	  PGA Aggr Target	   Auto PGA Target	      PGA Mem Alloc		Auto Workareas		 Manual Workarea	   Global Mem Bound
       ---------------------   -----------------------	 -----------------------   -----------------------   -----------------------   -----------------------
  I#	    Begin	 End	      Begin	   End		Begin	     End	  Begin        End	    Begin	 End	      Begin	   End
----   ---------- ----------   ------------ ----------	 ------------ ----------   ------------ ----------   ------------ ----------   ------------ ----------
   1	  3,215.0    3,215.0	    2,160.2    2,245.8	      1,020.0	   909.7	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
   2	  3,215.0    3,215.0	    1,881.2    1,972.5	      1,370.5	 1,250.5	    0.0        0.0	      0.0	 0.0	      321.5	 321.5
			  --------------------------------------------------------------------------------------------------------------------


Process Memory Summary			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> B: Begin Snap   E: End Snap I#: Instance number
-> Max Alloc is Maximum PGA allocation size at snapshot time
-> Hist Max Alloc is the Historical Max Allocation for still-connected processes
-> ordered by instance, Begin/End snapshot, Alloc (MB)

							     Hist
					Avg Std Dev    Max    Max
		     Alloc     Used   Alloc   Alloc  Alloc  Alloc   Num   Num
  I#   Category       (MB)     (MB)    (MB)    (MB)   (MB)   (MB)  Proc Alloc
---- - ---------- -------- -------- ------- ------- ------ ------ ----- -----
   1 B Freeable      144.6	 .0	4.3	7.8	32    N/A    34    34
       Other	     595.7	N/A	4.7	6.8	38     38   128   128
       PL/SQL	      14.9     14.1	 .1	 .3	 2	3   110   109
       SQL	       9.0	7.6	 .1	 .3	 1     11    60    46
       Total	     764.1     21.7	9.2    15.2	73     52   332   317
     E Freeable      139.5	 .0	5.0	8.5	35    N/A    28    28
       Other	     507.0	N/A	4.7	7.2	39     39   109   109
       PL/SQL	       5.9	5.3	 .1	 .3	 2	3    91    90
       SQL	       1.4	1.1	 .0	 .1	 1     11    41    26
       Total	     653.8	6.4	9.7    16.1	76     53   269   253
   2 B Freeable      167.8	 .0	2.9	5.7	25    N/A    58    58
       Other	     662.4	N/A	5.1	6.6	38     38   131   131
       PL/SQL	      17.5     16.7	 .1	 .3	 2	3   129   112
       SQL	      10.9	9.3	 .1	 .3	 1     10    81    49
       Total	     858.6     26.1	8.2    12.9	66     51   399   350
     E Freeable      152.2	 .0	3.1	5.8	25    N/A    49    49
       Other	     576.9	N/A	5.2	7.5	45     45   110   110
       PL/SQL	       8.3	7.4	 .1	 .3	 2	3   108    91
       SQL	       1.2	 .6	 .0	 .1	 0     10    59    28
       Total	     738.6	8.0	8.4    13.8	73     59   326   278
			  --------------------------------------------------------------------------------------------------------------------


init.ora Parameters			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> '*' indicates same value across all instances

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
_ipddb_enable			* TRUE
audit_file_dest 		* /u01/app/oracle/admin/p30db/adump
audit_trail			* DB
cluster_database		* TRUE
compatible			* 19.0.0
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581, +FRA/
db_block_size			* 8192
db_create_file_dest		* +DATA
db_domain			* example.com
db_name 			* p30db
db_recovery_file_dest		* +FRA
db_recovery_file_dest_size	* 274877906944
diagnostic_dest 		* /u01/app/oracle
dispatchers			* (PROTOCOL=TCP) (SERVICE=p30dbXDB)
instance_number 		1 1
				2 2
listener_networks		*
local_listener			1  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522
				2  (ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522
nls_language			* AMERICAN
nls_territory			* AMERICA
open_cursors			* 300
pga_aggregate_target		* 3371171840
processes			* 640
remote_listener 		*  mcracpoc-scan.example.com:1521
remote_login_passwordfile	* EXCLUSIVE
sga_target			* 10133438464
thread				1 1
				2 2
undo_tablespace 		1 UNDOTBS1
				2 UNDOTBS2
			  --------------------------------------------------------------------------------------------------------------------


init.ora Multi-valued Parameters	 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> This section only displays parameters that have more one value
-> '*' indicates same value across all instances
-> '(NULL)' indicates that the	parameter value was not set
-> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot

Parameter Name		      I#  Begin value						End value (if different)
----------------------------- --- ----------------------------------------------------- ------------------------
control_files			* +DATA/P30DB/CONTROLFILE/current.263.1031594581
				* +FRA/P30DB/CONTROLFILE/current.257.1031594583
			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Events 		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Top SQL statements by DB Time along with the top events by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Event is the percentage of DB Time due to the event that the SQL is
   waiting on.
-> % Row Source is the percentage of DB Time due to the row source for the
   SQL waiting on the event.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
									   % Row
Event			       % Event Top Row Source			  Source
------------------------------ ------- --------------------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		     1944	   77.18
db file sequential read 	 72.06 TABLE ACCESS - BY INDEX ROWID BAT   72.06
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )


gc cr grant 2-way		  2.74 TABLE ACCESS - BY INDEX ROWID BAT    2.74


CPU + Wait for CPU		  2.26 TABLE ACCESS - BY INDEX ROWID BAT    1.71

	  35dumc2tpr9dv 	   203653710		      360	   14.29
db file sequential read 	 13.02 UPDATE				   13.02
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  --------------------------------------------------------------------------------------------------------------------

Top SQL with Top Row Sources		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Top SQL statements by DB Time along with the top row sources by DB Time
   for those SQLs.
-> % Activity is the percentage of DB Time due to the SQL.
-> % Row Source is the percentage of DB Time spent on the row source by
   that SQL.
-> % Event is the percentage of DB Time spent on the event by the
   SQL executing the row source.
-> Executions is the number of executions of the SQL that were sampled in ASH.

		 SQL ID 	   Plan Hash	       Executions     % Activity
----------------------- -------------------- -------------------- --------------
					   % Row
Row Source				  Source Top Event		 % Event
---------------------------------------- ------- ----------------------- -------
	  bhdvtsvjhgvrh 	  1497866750		     1944	   77.18
TABLE ACCESS - BY INDEX ROWID BATCHED	   76.59 db file sequential read   72.06
SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND (CUSTID < :B1 )

	  35dumc2tpr9dv 	   203653710		      360	   14.29
UPDATE					   14.25 db file sequential read   13.02
UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 )) AND (CUSTID
< :B1 )

			  --------------------------------------------------------------------------------------------------------------------

Top Sessions				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> '# Samples Active' shows the number of ASH samples in which the session
      was found waiting for that particular event. The percentage shown
      in this column is calculated with respect to wall clock time
      and not total database activity.
-> 'XIDs' shows the number of distinct transaction IDs sampled in ASH
      when the session was waiting for that particular event

   Sid, Serial# % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
User		     Program			      # Samples Active	   XIDs
-------------------- ------------------------------ ------------------ --------
       10, 7774       2.30 db file sequential read		2.22
USER8		     sqlplus@mcracp...m (TNS V1-V3)	  56/61 [ 93%]	      3

       16, 8362       2.30 db file sequential read		2.22
USER25		     sqlplus@mcracp...m (TNS V1-V3)	  56/61 [ 93%]	      5

       18,58372       2.30 db file sequential read		2.06
USER22		     sqlplus@mcracp...m (TNS V1-V3)	  52/61 [ 86%]	      4

      134,41048       2.30 db file sequential read		2.26
USER37		     sqlplus@mcracp...m (TNS V1-V3)	  57/61 [ 94%]	     11

      135,10783       2.30 db file sequential read		2.18
USER14		     sqlplus@mcracp...m (TNS V1-V3)	  55/61 [ 91%]	      3

			  --------------------------------------------------------------------------------------------------------------------

Top Blocking Sessions			 DB/Inst: P30DB/p30db1	Snaps: 171-172

		  No data exists for this section of the report.
			  --------------------------------------------------------------------------------------------------------------------

Top PL/SQL Procedures			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> 'PL/SQL entry subprogram' represents the application's top-level
      entry-point (procedure, function, trigger, package initialization
      or RPC call) into PL/SQL.
-> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed
      at the point of sampling . If the value is 'SQL', it represents
      the percentage of time spent executing SQL for the particular
      PL/SQL entry subprogram

PL/SQL Entry Subprogram 					  % Activity
----------------------------------------------------------------- ----------
PL/SQL Current Subprogram					   % Current
----------------------------------------------------------------- ----------
USER1.SLOBUPDATE						       14.44
   SQL								       14.44
			  --------------------------------------------------------------------------------------------------------------------

Top Events				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Top Events by DB Time
-> % Activity is the percentage of DB Time due to the event

Event				    Event Class     Session Type
----------------------------------- --------------- ---------------
	   Avg Active
% Activity   Sessions
---------- ----------
db file sequential read 	    User I/O	    FOREGROUND
     85.08	35.44
log file parallel write 	    System I/O	    BACKGROUND
      3.85	 1.60
CPU + Wait for CPU		    CPU 	    FOREGROUND
      3.25	 1.36
gc cr grant 2-way		    Cluster	    FOREGROUND
      2.74	 1.14
CPU + Wait for CPU		    CPU 	    BACKGROUND
      1.79	 0.74
			  --------------------------------------------------------------------------------------------------------------------

Top Event P1/P2/P3 Values		 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Top Events by DB Time and the top P1/P2/P3 values for those events.
-> % Event is the percentage of DB Time due to the event
-> % Activity is the percentage of DB Time due to the event with the given
   P1,P2,P3 Values.

Event			       % Event		   P1, P2, P3 Values % Activity
------------------------------ ------- ----------------------------- ----------
Parameter 1		   Parameter 2		      Parameter 3
-------------------------- -------------------------- --------------------------
db file sequential read 	 85.08		  "2","24926329","1"	   0.04
file#			   block#		      blocks

log file parallel write 	  3.85			 "1","4","1"	   0.91
files			   blocks		      requests

			  --------------------------------------------------------------------------------------------------------------------

Top DB Objects				 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Top DB Objects by DB Time with respect to Application, Cluster,
   User I/O,  buffer busy waits and In-Memory DB events only.
-> Tablespace name is not available for reports generated from the root PDB
   of a consolidated database.
-> When ** MISSING ** occurs, some of the object attributes may not be available.

      Object ID % Activity Event			     % Event
--------------- ---------- ------------------------------ ----------
Object Name (Type)				      Tablespace
----------------------------------------------------- --------------------------------
	  73402       2.30 db file sequential read		2.22
USER1.CF1 (TABLE)				      IOPS
	  73409       2.30 db file sequential read		2.26
USER2.CF1 (TABLE)				      IOPS
	  73424       2.30 db file sequential read		2.22
USER4.CF1 (TABLE)				      IOPS
	  73439       2.30 db file sequential read		2.26
USER9.CF1 (TABLE)				      IOPS
	  73458       2.30 db file sequential read		2.26
USER13.CF1 (TABLE)				      IOPS
			  --------------------------------------------------------------------------------------------------------------------

Activity Over Time			 DB/Inst: P30DB/p30db1	Snaps: 171-172
-> Analysis period is divided into smaller time slots as indicated
   in the 'Slot Time (Duration)'.
-> Top 3 events are reported in each of those slots
-> 'Slot Count' shows the number of ASH samples in that slot
-> 'Event Count' shows the number of ASH samples waiting for
   that event in that slot
-> '% Event' is 'Event Count' over all ASH samples in the analysis period

			 Slot					Event
Slot Time (Duration)	Count Event				Count % Event
-------------------- -------- ------------------------------ -------- -------
20:33:02   (2.0 min)	  578 db file sequential read		  459	18.21
			      CPU + Wait for CPU		   40	 1.59
			      log file parallel write		   29	 1.15
20:35:00   (5.0 min)	1,288 db file sequential read		1,138	45.16
			      CPU + Wait for CPU		   53	 2.10
			      log file parallel write		   41	 1.63
20:40:00   (3.1 min)	  654 db file sequential read		  547	21.71
			      CPU + Wait for CPU		   34	 1.35
			      log file parallel write		   27	 1.07
			  --------------------------------------------------------------------------------------------------------------------



	  ADDM Report for Task 'ADDM:3393773525_172'
	  ------------------------------------------

Analysis Period
---------------
AWR snapshot range from 171 to 172.
Time period starts at 10-FEB-20 08.33.03 PM
Time period ends at 10-FEB-20 08.43.07 PM

Analysis Target
---------------
Database 'P30DB' with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 22786 seconds.
The average number of active sessions was 37.73.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendation
s
					     Percent of Activity
   ----------------------------------------  -------------------  --------------
-
1  Top SQL Statements			     37.47 | 99.31	  2
2  "User I/O" wait Class		     33.04 | 87.57	  0
3  Top Segments by "User I/O" and "Cluster"  4.61 | 12.21	  5
4  Global Cache Messaging		     2.4 | 6.35 	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 37.4 active sessions, 99.31% of total activity.
---------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  52.67	    ADDM:3393773525_2_172
    1	    p30db1  47.33	    ADDM:3393773525_1_172

   Recommendation 1: SQL Tuning
   Estimated benefit is 31.61 active sessions, 83.8% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      "bhdvtsvjhgvrh".
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID > ( :B1 - :B2 ) ) AND
	 (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "bhdvtsvjhgvrh" was executed 1425154 times and
      had an average elapsed time of 0.013 seconds.

   Recommendation 2: SQL Tuning
   Estimated benefit is 5.85 active sessions, 15.51% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      "35dumc2tpr9dv".
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID > ( :B1 - :B2 ))
	 AND (CUSTID < :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID "35dumc2tpr9dv" was executed 251494 times and
      had an average elapsed time of 0.013 seconds.


Finding 2: "User I/O" wait Class
Impact is 32.98 active sessions, 87.57% of total activity.
----------------------------------------------------------
Wait class "User I/O" was consuming significant database time.
The throughput of the I/O subsystem was not significantly lower than expected.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  52.69	    ADDM:3393773525_2_172
    1	    p30db1  47.31	    ADDM:3393773525_1_172

   No recommendations are available.


Finding 3: Top Segments by "User I/O" and "Cluster"
Impact is 4.6 active sessions, 12.21% of total activity.
--------------------------------------------------------
Individual database segments responsible for significant "User I/O" and
"Cluster" waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  80		    ADDM:3393773525_2_172
    1	    p30db1  20		    ADDM:3393773525_1_172

   Recommendation 1: Segment Tuning
   Estimated benefit is .92 active sessions, 2.44% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER1.CF1" with
      object ID 73402.
      Related Object
	 Database object with ID 73402.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 132178
      physical reads, 20936 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .92 active sessions, 2.44% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER2.CF1" with
      object ID 73409.
      Related Object
	 Database object with ID 73409.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 131556
      physical reads, 21008 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .92 active sessions, 2.44% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER4.CF1" with
      object ID 73424.
      Related Object
	 Database object with ID 73424.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 108140
      physical reads, 15098 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .92 active sessions, 2.44% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER9.CF1" with
      object ID 73439.
      Related Object
	 Database object with ID 73439.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 114925
      physical reads, 16142 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .92 active sessions, 2.44% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE "USER13.CF1" with
      object ID 73458.
      Related Object
	 Database object with ID 73458.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 118041
      physical reads, 16242 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "User I/O" was consuming significant database time.
      Impact is 33.04 active sessions, 87.57% of total activity.


Finding 4: Global Cache Messaging
Impact is 2.39 active sessions, 6.35% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  51.3	    ADDM:3393773525_2_172
    1	    p30db1  48.7	    ADDM:3393773525_1_172

   Recommendation 1: Application Analysis
   Estimated benefit is 2.4 active sessions, 6.35% of total activity.
   ------------------------------------------------------------------
   Action
      Look at the "Top SQL Statements" finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID "bhdvtsvjhgvrh" is responsible for 48% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class "Cluster" was consuming significant database time.
      Impact is 2.53 active sessions, 6.71% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    2	    p30db2  mcracpoc2.example.com  19.78	    52.51
    1	    p30db1  mcracpoc1.example.com  17.89	    47.49

Miscellaneous Information
-------------------------
Wait class "Application" was not consuming significant database time.
Wait class "Commit" was not consuming significant database time.
Wait class "Concurrency" was not consuming significant database time.
Wait class "Configuration" was not consuming significant database time.
Wait class "Network" was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

End of Report
Report written to awr_rac.txt
SQL> SQL> SQL> SQL> SQL> SQL> 




Specify the Report Type
~~~~~~~~~~~~~~~~~~~~~~~
AWR reports can be generated in the following formats.	Please enter the
name of the format at the prompt.  Default value is 'html'.

'html'		HTML format (default)
'text'		Text format
'active-html'	Includes Performance Hub active report


Type Specified:  html







Current Database
~~~~~~~~~~~~~~~~
DB Id	       DB Name	      Container Name
-------------- -------------- --------------
 3393773525	P30DB	       p30db











Instances in this Workload Repository schema
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  DB Id      Inst Num	DB Name      Instance	  Host
------------ ---------- ---------    ----------   ------
* 3393773525	 1	P30DB	     p30db1	  mcracpoc1.ex
* 3393773525	 2	P30DB	     p30db2	  mcracpoc2.ex

Using 3393773525 for database Id
Using instances ALL (default 'ALL')


Specify the number of days of snapshots to choose from
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Entering the number of days (n) will result in the most recent
(n) days of snapshots being listed.  Pressing <return> without
specifying a number lists all completed snapshots.


Enter value for num_days: 
Listing all Completed Snapshots
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		     1	05 Feb 2020 19:00    1
		     2	05 Feb 2020 20:43    1
		     3	05 Feb 2020 21:00    1
		     4	05 Feb 2020 22:00    1
		     5	05 Feb 2020 23:00    1
		     6	06 Feb 2020 00:00    1
		     7	06 Feb 2020 01:00    1
		     8	06 Feb 2020 02:00    1
		     9	06 Feb 2020 03:00    1
		    10	06 Feb 2020 04:00    1
		    11	06 Feb 2020 05:00    1
		    12	06 Feb 2020 06:00    1
		    13	06 Feb 2020 07:00    1
		    14	06 Feb 2020 08:00    1
		    15	06 Feb 2020 09:00    1
		    16	06 Feb 2020 10:00    1
		    17	06 Feb 2020 11:00    1
		    18	06 Feb 2020 12:00    1
		    19	06 Feb 2020 13:00    1
		    20	06 Feb 2020 14:00    1
		    21	06 Feb 2020 15:00    1
		    22	06 Feb 2020 15:23    1
		    23	06 Feb 2020 15:32    1
		    24	06 Feb 2020 15:55    1
		    25	06 Feb 2020 16:03    1
		    26	06 Feb 2020 16:09    1
		    27	06 Feb 2020 17:00    1
		    28	06 Feb 2020 18:00    1
		    29	06 Feb 2020 19:00    1
		    30	06 Feb 2020 20:00    1
		    31	06 Feb 2020 21:00    1
		    32	06 Feb 2020 22:00    1
		    33	06 Feb 2020 23:00    1
		    34	07 Feb 2020 00:00    1
		    35	07 Feb 2020 01:00    1
		    36	07 Feb 2020 02:00    1
		    37	07 Feb 2020 03:00    1
		    38	07 Feb 2020 04:00    1
		    39	07 Feb 2020 05:00    1
		    40	07 Feb 2020 06:00    1
		    41	07 Feb 2020 07:00    1
		    42	07 Feb 2020 08:00    1
		    43	07 Feb 2020 09:00    1
		    44	07 Feb 2020 10:00    1
		    45	07 Feb 2020 11:00    1
		    46	07 Feb 2020 12:00    1
		    47	07 Feb 2020 13:00    1
		    48	08 Feb 2020 07:54    1
		    49	08 Feb 2020 08:04    1
		    50	08 Feb 2020 08:13    1
		    51	08 Feb 2020 08:23    1
		    52	08 Feb 2020 08:25    1
		    53	08 Feb 2020 08:35    1
		    54	08 Feb 2020 08:38    1
		    55	08 Feb 2020 08:48    1
		    56	08 Feb 2020 08:50    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		    57	08 Feb 2020 09:00    1
		    58	08 Feb 2020 09:03    1
		    59	08 Feb 2020 09:13    1
		    60	08 Feb 2020 09:17    1
		    61	08 Feb 2020 09:27    1
		    62	08 Feb 2020 09:33    1
		    63	08 Feb 2020 09:43    1
		    64	08 Feb 2020 09:53    1
		    65	08 Feb 2020 10:03    1
		    66	08 Feb 2020 10:08    1
		    67	08 Feb 2020 10:18    1
		    68	08 Feb 2020 10:27    1
		    69	08 Feb 2020 10:37    1
		    70	08 Feb 2020 10:44    1
		    71	08 Feb 2020 10:54    1
		    72	08 Feb 2020 11:36    1
		    73	08 Feb 2020 11:46    1
		    74	08 Feb 2020 13:00    1
		    75	08 Feb 2020 14:00    1
		    76	08 Feb 2020 14:20    1
		    77	08 Feb 2020 14:30    1
		    78	08 Feb 2020 15:55    1
		    79	08 Feb 2020 16:05    1
		    80	08 Feb 2020 17:00    1
		    81	08 Feb 2020 17:33    1
		    82	08 Feb 2020 17:43    1
		    83	08 Feb 2020 19:00    1
		    84	08 Feb 2020 20:00    1
		    85	08 Feb 2020 21:00    1
		    86	08 Feb 2020 22:00    1
		    87	08 Feb 2020 23:00    1
		    88	09 Feb 2020 00:00    1
		    89	09 Feb 2020 01:00    1
		    90	09 Feb 2020 02:00    1
		    91	09 Feb 2020 03:00    1
		    92	09 Feb 2020 04:00    1
		    93	09 Feb 2020 05:00    1
		    94	09 Feb 2020 06:00    1
		    95	09 Feb 2020 07:00    1
		    96	09 Feb 2020 08:00    1
		    97	09 Feb 2020 09:00    1
		    98	09 Feb 2020 10:00    1
		    99	09 Feb 2020 11:20    1
		   100	09 Feb 2020 11:30    1
		   101	09 Feb 2020 11:33    1
		   102	09 Feb 2020 11:43    1
		   103	09 Feb 2020 11:46    1
		   104	09 Feb 2020 11:56    1
		   105	09 Feb 2020 11:58    1
		   106	09 Feb 2020 12:08    1
		   107	09 Feb 2020 13:00    1
		   108	09 Feb 2020 14:00    1
		   109	09 Feb 2020 14:09    1
		   110	09 Feb 2020 14:19    1
		   111	09 Feb 2020 14:52    1
		   112	09 Feb 2020 15:02    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		   113	09 Feb 2020 16:00    1
		   114	09 Feb 2020 17:00    1
		   115	09 Feb 2020 18:00    1
		   116	09 Feb 2020 19:00    1
		   117	09 Feb 2020 20:00    1
		   118	09 Feb 2020 20:30    1
		   119	09 Feb 2020 20:40    1
		   120	09 Feb 2020 20:47    1
		   121	09 Feb 2020 20:57    1
		   122	09 Feb 2020 22:00    1
		   123	09 Feb 2020 23:00    1
		   124	10 Feb 2020 00:00    1
		   125	10 Feb 2020 01:00    1
		   126	10 Feb 2020 02:00    1
		   127	10 Feb 2020 03:00    1
		   128	10 Feb 2020 04:00    1
		   129	10 Feb 2020 05:00    1
		   130	10 Feb 2020 06:00    1
		   131	10 Feb 2020 07:00    1
		   132	10 Feb 2020 08:00    1
		   133	10 Feb 2020 09:00    1
		   134	10 Feb 2020 09:08    1
		   135	10 Feb 2020 09:18    1
		   136	10 Feb 2020 10:00    1
		   137	10 Feb 2020 10:47    1
		   138	10 Feb 2020 10:58    1
		   139	10 Feb 2020 11:09    1
		   140	10 Feb 2020 11:19    1
		   141	10 Feb 2020 11:21    1
		   142	10 Feb 2020 11:31    1
		   143	10 Feb 2020 13:00    1
		   144	10 Feb 2020 14:00    1
		   145	10 Feb 2020 14:19    1
		   146	10 Feb 2020 14:29    1
		   147	10 Feb 2020 14:33    1
		   148	10 Feb 2020 14:41    1
		   149	10 Feb 2020 14:47    1
		   150	10 Feb 2020 14:57    1
		   151	10 Feb 2020 15:04    1
		   152	10 Feb 2020 15:05    1
		   153	10 Feb 2020 15:15    1
		   154	10 Feb 2020 15:24    1
		   155	10 Feb 2020 15:34    1
		   156	10 Feb 2020 15:44    1
		   157	10 Feb 2020 15:54    1
		   158	10 Feb 2020 16:18    1
		   159	10 Feb 2020 16:28    1
		   160	10 Feb 2020 16:34    1
		   161	10 Feb 2020 16:44    1
		   162	10 Feb 2020 16:46    1
		   163	10 Feb 2020 16:56    1
		   164	10 Feb 2020 18:02    1
		   165	10 Feb 2020 19:32    1
		   166	10 Feb 2020 19:42    1
		   167	10 Feb 2020 19:49    1
		   168	10 Feb 2020 19:59    1
DB Name      Snap Id	   Snap Started    Snap Level
------------ ---------- ------------------ ----------

P30DB		   169	10 Feb 2020 20:13    1
		   170	10 Feb 2020 20:23    1
		   171	10 Feb 2020 20:33    1
		   172	10 Feb 2020 20:43    1


Specify the Begin and End Snapshot Ids
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Begin Snapshot Id specified: 171

End   Snapshot Id specified: 172



Specify the Report Name
~~~~~~~~~~~~~~~~~~~~~~~
The default report file name is awrrpt_rac_171_172.html.  To use this name,
press <return> to continue, otherwise enter an alternative.


Using the report name awr_rac.html

<html lang="en"><head><title>AWR RAC Report for DB: P30DB, Snaps: 171-172</title>
<style type="text/css">
body.awr {font:bold 10pt Arial,Helvetica,Geneva,sans-serif;color:black; background:White;}
pre.awr  {font:8pt Courier;color:black; background:White;}
pre_sqltext.awr  {white-space: pre-wrap;}
h1.awr	 {font:bold 20pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;border-bottom:1px solid #cccc99;margin-top:0pt; margin-bottom:0pt;padding:0px 0px 0px 0px;}
h2.awr	 {font:bold 18pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
h3.awr {font:bold 16pt Arial,Helvetica,Geneva,sans-serif;color:#336699;background-color:White;margin-top:4pt; margin-bottom:0pt;}
li.awr {font: 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;}
th.awrnobg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:black; background:White;padding-left:4px; padding-right:4px;padding-bottom:2px}
th.awrbg {font:bold 8pt Arial,Helvetica,Geneva,sans-serif; color:White; background:#0066CC;padding-left:4px; padding-right:4px;padding-bottom:2px}
td.awrnc {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;}
td.awrc    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;}
td.awrncbb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
td.awrncrb {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-right: thin solid black;}
td.awrcrb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-right: thin solid black;}
td.awrclb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;}
td.awrcbb    {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-left: thin solid black;border-right: thin solid black;}
a.awr {font:bold 8pt Arial,Helvetica,sans-serif;color:#663300; vertical-align:top;margin-top:0pt; margin-bottom:0pt;}
td.awrnct {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:White;vertical-align:top;}
td.awrct   {font:8pt Arial,Helvetica,Geneva,sans-serif;border-top: thin solid black;color:black;background:#FFFFCC; vertical-align:top;}
td.awrnclbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrncbbt  {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-left: thin solid black;border-right: thin solid black;border-top: thin solid black;}
td.awrncrbt {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:White;vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrcrbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-right: thin solid black;}
td.awrclbt     {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;}
td.awrcbbt   {font:8pt Arial,Helvetica,Geneva,sans-serif;color:black;background:#FFFFCC; vertical-align:top;border-top: thin solid black;border-left: thin solid black;border-right: thin solid black;}
table.tdiff {  border_collapse: collapse; }
table.tscl {width: 600;}
table.tscl tbody, table.tscl thead { display: block; }
table.tscl thead tr th {height: 12px;line-height: 12px;}
table.tscl tbody { height: 100px;overflow-y: auto; overflow-x: hidden;}
table.tscl tbody td, thead th {width: 200;}
.hidden   {position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden;}
.pad   {margin-left:17px;}
.doublepad {margin-left:34px;}
</style></head><body class="awr">
<h1 class="awr">
WORKLOAD REPOSITORY REPORT (RAC)

</h1>
<p />Database Summary<p />
<ul>
</ul>
<table border="0" class="tdiff" summary="Database Summary"><tr>
<th class="awrbg" colspan=" 8" id="Database">Database</th>
<th class="awrbg" colspan=" 2" id="SnapshotIds">Snapshot Ids</th>
<th class="awrbg" colspan=" 2" id="NumberofInstances">Number of Instances</th>
<th class="awrbg" colspan=" 2" id="NumberofHosts">Number of Hosts</th>
<th class="awrbg" colspan=" 2" id="ReportTotal(minutes)">Report Total (minutes)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Id">Id</th><th class="awrbg" scope="col" id="Name">Name</th><th class="awrbg" scope="col" id="UniqueName">Unique Name</th><th class="awrbg" scope="col" id="Role">Role</th><th class="awrbg" scope="col" id="Edition">Edition</th><th class="awrbg" scope="col" id="RAC">RAC</th><th class="awrbg" scope="col" id="CDB">CDB</th><th class="awrbg" scope="col" id="BlockSize">Block Size</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="InReport">In Report</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="Elapsedtime">Elapsed time</th></tr>
<tr><td align="right" headers="Database Id" class='awrclb'>3393773525</td><td headers="Database Name" class='awrc'>P30DB</td><td headers="Database UniqueName" class='awrc'>p30db</td><td headers="Database Role" class='awrc'>PRIMARY</td><td headers="Database Edition" class='awrc'>EE</td><td headers="Database RAC" class='awrc'>YES</td><td headers="Database CDB" class='awrc'>NO</td><td align="right" headers="Database BlockSize" class='awrc'>8192</td><td align="right" headers="SnapshotIds Begin" class='awrclb'>171</td><td align="right" headers="SnapshotIds End" class='awrc'>172</td><td align="right" headers="NumberofInstances InReport" class='awrclb'>2</td><td align="right" headers="NumberofInstances Total" class='awrc'>2</td><td align="right" headers="NumberofHosts InReport" class='awrclb'>2</td><td align="right" headers="NumberofHosts Total" class='awrc'>2</td><td align="right" headers="ReportTotal(minutes) DBtime" class='awrclb'>379.77</td><td align="right" headers="ReportTotal(minutes) Elapsedtime" class='awrcrb'>10.07</td></tr>
</table><p />
<p />Database Instances Included In Report<p />
<ul>
<li class="awr"> Listed in order of instance number, I#</li>
</ul>
<table border="0" class="tdiff" summary="Database Instances Included In Report. . Listed in order of instance number, I#"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Instance</th><th class="awrbg" scope="col">Host</th><th class="awrbg" scope="col">Startup</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th><th class="awrbg" scope="col">Release</th><th class="awrbg" scope="col">Elapsed Time(min)</th><th class="awrbg" scope="col">DB time(min)</th><th class="awrbg" scope="col">Up Time(hrs)</th><th class="awrbg" scope="col">Avg Active Sessions</th><th class="awrbg" scope="col">Platform</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>p30db1</td><td class='awrc'>mcracpoc1.example.com</td><td class='awrc'>10-Feb-20 19:29</td><td class='awrc'>10-Feb-20 20:33</td><td class='awrc'>10-Feb-20 20:43</td><td class='awrc'>19.0.0.0.0</td><td align="right" class='awrc'>10.08</td><td align="right" class='awrc'>180.35</td><td align="right" class='awrc'>1.22</td><td align="right" class='awrc'>17.89</td><td class='awrc'>Linux x86 64-bit</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>p30db2</td><td class='awrnc'>mcracpoc2.example.com</td><td class='awrnc'>10-Feb-20 19:29</td><td class='awrnc'>10-Feb-20 20:33</td><td class='awrnc'>10-Feb-20 20:43</td><td class='awrnc'>19.0.0.0.0</td><td align="right" class='awrnc'>10.08</td><td align="right" class='awrnc'>199.42</td><td align="right" class='awrnc'>1.22</td><td align="right" class='awrnc'>19.78</td><td class='awrnc'>Linux x86 64-bit</td></tr>
</table><p />
<h3 class="awr"><a class="awr" name="99999"></a>Report Summary</h3>
<p />Top ADDM Findings by Average Active Sessions<p />
<ul>
</ul>
<table border="0" width="600" class="tdiff" summary="This table displays top ADDM findings by average active sessions"><tr><th class="awrbg" scope="col">Finding Name</th><th class="awrbg" scope="col">Avg active sessions of the task</th><th class="awrbg" scope="col">Percent active sessions of finding</th><th class="awrbg" scope="col">Task Name</th><th class="awrbg" scope="col">Begin Snap Time</th><th class="awrbg" scope="col">End Snap Time</th></tr>
<tr><td class='awrc'>Top SQL Statements</td><td align="right" class='awrc'>37.66</td><td align="right" class='awrc'>99.31</td><td scope="row" class='awrc'>ADDM:3393773525_172</td><td class='awrc'>10-Feb-20 20:33</td><td class='awrc'>10-Feb-20 20:43</td></tr>
<tr><td class='awrnc'>&quot;User I/O&quot; wait Class</td><td align="right" class='awrnc'>37.66</td><td align="right" class='awrnc'>87.57</td><td scope="row" class='awrnc'>ADDM:3393773525_172</td><td class='awrnc'>10-Feb-20 20:33</td><td class='awrnc'>10-Feb-20 20:43</td></tr>
<tr><td class='awrc'>Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;</td><td align="right" class='awrc'>37.66</td><td align="right" class='awrc'>12.21</td><td scope="row" class='awrc'>ADDM:3393773525_172</td><td class='awrc'>10-Feb-20 20:33</td><td class='awrc'>10-Feb-20 20:43</td></tr>
<tr><td class='awrnc'>Global Cache Messaging</td><td align="right" class='awrnc'>37.66</td><td align="right" class='awrnc'>6.35</td><td scope="row" class='awrnc'>ADDM:3393773525_172</td><td class='awrnc'>10-Feb-20 20:33</td><td class='awrnc'>10-Feb-20 20:43</td></tr>
</table><p />
<p />Cache Sizes<p />
<ul>
<li class="awr"> All values are in Megabytes </li>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values displayed only if different from Begin values</li>
</ul>
<table border="0" class="tdiff" summary="Cache Sizes. . All values are in Megabytes. Listed in order of instance number, I#. End values displayed only if different from Begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="MemoryTarget">Memory Target</th>
<th class="awrbg" colspan=" 2" id="SgaTarget">Sga Target</th>
<th class="awrbg" colspan=" 2" id="DBCache">DB Cache</th>
<th class="awrbg" colspan=" 2" id="SharedPool">Shared Pool</th>
<th class="awrbg" colspan=" 2" id="LargePool">Large Pool</th>
<th class="awrbg" colspan=" 2" id="JavaPool">Java Pool</th>
<th class="awrbg" colspan=" 2" id="StreamsPool">Streams Pool</th>
<th class="awrbg" colspan=" 2" id="PGATarget">PGA Target</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col">Log Buffer</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="MemoryTarget Begin" class='awrclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrclb'>8,000</td><td align="right" headers="DBCache End" class='awrc'>&#160;</td><td align="right" headers="SharedPool Begin" class='awrclb'>1,440</td><td align="right" headers="SharedPool End" class='awrc'>&#160;</td><td align="right" headers="LargePool Begin" class='awrclb'>64</td><td align="right" headers="LargePool End" class='awrc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrclb'>3,232</td><td align="right" headers="PGATarget End" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="MemoryTarget Begin" class='awrnclb'>&#160;</td><td align="right" headers="MemoryTarget End" class='awrnc'>&#160;</td><td align="right" headers="SgaTarget Begin" class='awrnclb'>9,664</td><td align="right" headers="SgaTarget End" class='awrnc'>&#160;</td><td align="right" headers="DBCache Begin" class='awrnclb'>7,840</td><td align="right" headers="DBCache End" class='awrnc'>&#160;</td><td align="right" headers="SharedPool Begin" class='awrnclb'>1,600</td><td align="right" headers="SharedPool End" class='awrnc'>&#160;</td><td align="right" headers="LargePool Begin" class='awrnclb'>64</td><td align="right" headers="LargePool End" class='awrnc'>&#160;</td><td align="right" headers="JavaPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="JavaPool End" class='awrnc'>&#160;</td><td align="right" headers="StreamsPool Begin" class='awrnclb'>&#160;</td><td align="right" headers="StreamsPool End" class='awrnc'>&#160;</td><td align="right" headers="PGATarget Begin" class='awrnclb'>3,232</td><td align="right" headers="PGATarget End" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>9,664</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>7,920</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>1,520</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>64</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>3,232</td><td align="right" class='awrcrbt'>&#160;</td><td align="right" class='awrct'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Min</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>9,664</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>7,840</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>1,440</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>64</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>3,232</td><td align="right" class='awrncrb'>&#160;</td><td align="right" class='awrnc'>19.42</td></tr>
<tr><td align="right" scope="row" class='awrc'>Max</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>9,664</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>8,000</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>1,600</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>64</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>3,232</td><td align="right" class='awrcrb'>&#160;</td><td align="right" class='awrc'>19.42</td></tr>
</table><p />

<a class="awr" name="top"></a>
<h2 class="awr">
Main Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#99999">Report Summary</a></li>
<li class="awr"><a class="awr" href="#12010">OS Statistics</a></li>
<li class="awr"><a class="awr" href="#629">Time Model Statistics</a></li>
<li class="awr"><a class="awr" href="#621">Wait Events Statistics</a></li>
<li class="awr"><a class="awr" href="#639">Global Activity Load Profile</a></li>
<li class="awr"><a class="awr" href="#605">Global Cache and Enqueue Statistics Summary</a></li>
<li class="awr"><a class="awr" href="#12033">Global CR Server Statistics</a></li>
<li class="awr"><a class="awr" href="#12034">Global Current Server Statistics</a></li>
<li class="awr"><a class="awr" href="#607">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#608">Interconnect Statistics</a></li>
<li class="awr"><a class="awr" href="#622">SQL Statistics</a></li>
<li class="awr"><a class="awr" href="#623">Global Activity Statistics</a></li>
<li class="awr"><a class="awr" href="#630">I/O Statistics</a></li>
<li class="awr"><a class="awr" href="#12083">Library Cache Statistics</a></li>
<li class="awr"><a class="awr" href="#633">Memory Statistics</a></li>
<li class="awr"><a class="awr" href="#638">Supplemental Information</a></li>
<li class="awr"><a class="awr" href="#43">Active Session History(ASH) Report</a></li>
<li class="awr"><a class="awr" href="#99994">ADDM Reports</a></li>
</ul>
<br /><a class="awr" href="#top">Back to Top</a><hr /><p />
<a class="awr" name="12010"></a>
<h3 class="awr">OS Statistics By Instance</h3>
<ul>
<li class="awr"> Listed in order of instance number, I# </li>
<li class="awr"> End values are diplayed only if different from begin values</li>
</ul>
<table border="0" class="tdiff" summary="OS Statistics By Instance. . Listed in order of instance number, I#. End values are diplayed only if different from begin values"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="CPU">CPU</th>
<th class="awrbg" colspan=" 2" id="Load">Load</th>
<th class="awrbg" colspan=" 5" id="%CPU">% CPU</th>
<th class="awrbg" colspan=" 3" id="Time(s)">Time (s)</th>
<th class="awrbg" colspan=" 1" id="Memory">Memory</th>
<th class="awrbg" colspan=" 4" id="EndValues">End Values</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="%Busy">% Busy</th><th class="awrbg" scope="col" id="%Usr">% Usr</th><th class="awrbg" scope="col" id="%Sys">% Sys</th><th class="awrbg" scope="col" id="%WIO">% WIO</th><th class="awrbg" scope="col" id="%Idl">% Idl</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Idle">Idle</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="MB">MB</th><th class="awrbg" scope="col" id="#CPUs">#CPUs</th><th class="awrbg" scope="col" id="#Cores">#Cores</th><th class="awrbg" scope="col" id="#Sckts">#Sckts</th><th class="awrbg" scope="col" id="Memory(M)">Memory (M)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="CPU #CPUs" class='awrclb'>8</td><td align="right" headers="CPU #Cores" class='awrc'>4</td><td align="right" headers="CPU #Sckts" class='awrc'>1</td><td align="right" headers="Load Begin" class='awrclb'>10.59</td><td align="right" headers="Load End" class='awrc'>13.09</td><td align="right" headers="%CPU %Busy" class='awrclb'>49.14</td><td align="right" headers="%CPU %Usr" class='awrc'>17.12</td><td align="right" headers="%CPU %Sys" class='awrc'>22.22</td><td align="right" headers="%CPU %WIO" class='awrc'>40.44</td><td align="right" headers="%CPU %Idl" class='awrc'>50.86</td><td align="right" headers="Time(s) Busy" class='awrclb'>2,183.37</td><td align="right" headers="Time(s) Idle" class='awrc'>2,259.50</td><td align="right" headers="Time(s) Total" class='awrc'>4,442.87</td><td align="right" headers="Memory MB" class='awrclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="CPU #CPUs" class='awrnclb'>8</td><td align="right" headers="CPU #Cores" class='awrnc'>4</td><td align="right" headers="CPU #Sckts" class='awrnc'>1</td><td align="right" headers="Load Begin" class='awrnclb'>9.51</td><td align="right" headers="Load End" class='awrnc'>13.76</td><td align="right" headers="%CPU %Busy" class='awrnclb'>48.59</td><td align="right" headers="%CPU %Usr" class='awrnc'>17.39</td><td align="right" headers="%CPU %Sys" class='awrnc'>22.24</td><td align="right" headers="%CPU %WIO" class='awrnc'>41.66</td><td align="right" headers="%CPU %Idl" class='awrnc'>51.41</td><td align="right" headers="Time(s) Busy" class='awrnclb'>2,144.56</td><td align="right" headers="Time(s) Idle" class='awrnc'>2,269.33</td><td align="right" headers="Time(s) Total" class='awrnc'>4,413.89</td><td align="right" headers="Memory MB" class='awrnclb'>32,155.97</td><td align="right" headers="EndValues #CPUs" class='awrnclb'>&#160;</td><td align="right" headers="EndValues #Cores" class='awrnc'>&#160;</td><td align="right" headers="EndValues #Sckts" class='awrnc'>&#160;</td><td align="right" headers="EndValues Memory(M)" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrclbt'>4,327.93</td><td align="right" class='awrct'>4,528.83</td><td align="right" class='awrct'>8,856.76</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="629"></a>
<h2 class="awr">
Time Model Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12014">Time Model</a></li>
<li class="awr"><a class="awr" href="#12015">Time Model - % of DB time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12014"></a>
<h3 class="awr">Time Model</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Time Model"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">DB time (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">SQL Exec Ela (s)</th><th class="awrbg" scope="col">Parse Ela (s)</th><th class="awrbg" scope="col">Hard Parse Ela (s)</th><th class="awrbg" scope="col">PL/SQL Ela (s)</th><th class="awrbg" scope="col">Java Ela (s)</th><th class="awrbg" scope="col">bg time (s)</th><th class="awrbg" scope="col">bg CPU (s)</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>10,820.93</td><td align="right" class='awrc'>925.55</td><td align="right" class='awrc'>10,820.65</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>39.85</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>1,098.94</td><td align="right" class='awrc'>510.19</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>11,965.48</td><td align="right" class='awrnc'>929.95</td><td align="right" class='awrnc'>11,965.21</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>39.93</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1,236.14</td><td align="right" class='awrnc'>486.65</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>22,786.41</td><td align="right" class='awrct'>1,855.50</td><td align="right" class='awrct'>22,785.86</td><td align="right" class='awrct'>0.15</td><td align="right" class='awrct'>0.07</td><td align="right" class='awrct'>79.78</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>2,335.08</td><td align="right" class='awrct'>996.84</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>11,393.20</td><td align="right" class='awrnc'>927.75</td><td align="right" class='awrnc'>11,392.93</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>39.89</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1,167.54</td><td align="right" class='awrnc'>498.42</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>809.32</td><td align="right" class='awrc'>3.11</td><td align="right" class='awrc'>809.33</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>97.01</td><td align="right" class='awrc'>16.65</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12015"></a>
<h3 class="awr">Time Model - % of DB time</h3>
<ul>
<li class="awr"> % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]</li>
</ul>
<table border="0" class="tdiff" summary="Time Model - % of DB time. . % Total [DB time/bg time] - instance [DB time/bg time] as a percentage of the cluster-wide total [DB time/bg time]"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 6" id="%DBtime">% DB time</th>
<td>&#160;</td><th class="awrbg" colspan=" 1" id="%bgtime">% bg time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">% Total DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="SQLExecEla">SQL Exec Ela</th><th class="awrbg" scope="col" id="ParseEla">Parse Ela</th><th class="awrbg" scope="col" id="HardParse">Hard Parse</th><th class="awrbg" scope="col" id="PL/SQLEla">PL/SQL Ela</th><th class="awrbg" scope="col" id="JavaEla">Java Ela</th><th class="awrbg" scope="col">% Total bg time</th><th class="awrbg" scope="col" id="bgCPU">bg CPU</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>47.49</td><td align="right" headers="%DBtime DBCPU" class='awrclb'>8.55</td><td align="right" headers="%DBtime SQLExecEla" class='awrc'>100.00</td><td align="right" headers="%DBtime ParseEla" class='awrc'>0.00</td><td align="right" headers="%DBtime HardParse" class='awrc'>0.00</td><td align="right" headers="%DBtime PL/SQLEla" class='awrc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrc'>0.00</td><td align="right" class='awrc'>47.06</td><td align="right" headers="%bgtime bgCPU" class='awrcbb'>46.43</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>52.51</td><td align="right" headers="%DBtime DBCPU" class='awrnclb'>7.77</td><td align="right" headers="%DBtime SQLExecEla" class='awrnc'>100.00</td><td align="right" headers="%DBtime ParseEla" class='awrnc'>0.00</td><td align="right" headers="%DBtime HardParse" class='awrnc'>0.00</td><td align="right" headers="%DBtime PL/SQLEla" class='awrnc'>0.00</td><td align="right" headers="%DBtime JavaEla" class='awrnc'>0.00</td><td align="right" class='awrnc'>52.94</td><td align="right" headers="%bgtime bgCPU" class='awrncbb'>39.37</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrclbt'>8.16</td><td align="right" class='awrct'>100.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>50.00</td><td align="right" class='awrcbbt'>42.90</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#629">Back to Time Model Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="621"></a>
<h2 class="awr">
Wait Events Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12011">Foreground Wait Classes -	% of Total DB time</a></li>
<li class="awr"><a class="awr" href="#12012">Foreground Wait Classes</a></li>
<li class="awr"><a class="awr" href="#12013">Foreground Wait Classes -	% of DB time </a></li>
<li class="awr"><a class="awr" href="#12050">Top Timed Events</a></li>
<li class="awr"><a class="awr" href="#12051">Top Timed Foreground Events</a></li>
<li class="awr"><a class="awr" href="#12052">Top Timed Background Events</a></li>
<li class="awr"><a class="awr" href="#12053">Foreground Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12054">Background Wait Events (Global)</a></li>
<li class="awr"><a class="awr" href="#12055">Wait Event Histogram (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12011"></a>
<h3 class="awr">Foreground Wait Classes -  % of Total DB time</h3>
<ul>
<li class="awr"> Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of Total DB time. . Cluster-wide totals of wait class foreground wait times as a percentage of the cluster-wide DB time"><tr><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">User I/O</th><th class="awrbg" scope="col">Sys I/O</th><th class="awrbg" scope="col">Other</th><th class="awrbg" scope="col">Applic</th><th class="awrbg" scope="col">Commit</th><th class="awrbg" scope="col">Network</th><th class="awrbg" scope="col">Concurcy</th><th class="awrbg" scope="col">Config</th><th class="awrbg" scope="col">Cluster</th><th class="awrbg" scope="col">Admin</th><th class="awrbg" scope="col">Scheduler</th><th class="awrbg" scope="col">DB CPU</th></tr>
<tr><td class='awrc'>&#160;</td><td align="right" class='awrc'>87.57</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6.71</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>8.14</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12012"></a>
<h3 class="awr">Foreground Wait Classes</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">User I/O(s)</th><th class="awrbg" scope="col">Sys I/O(s)</th><th class="awrbg" scope="col">Other(s)</th><th class="awrbg" scope="col">Applic (s)</th><th class="awrbg" scope="col">Commit (s)</th><th class="awrbg" scope="col">Network (s)</th><th class="awrbg" scope="col">Concurcy (s)</th><th class="awrbg" scope="col">Config (s)</th><th class="awrbg" scope="col">Cluster (s)</th><th class="awrbg" scope="col">Admin (s)</th><th class="awrbg" scope="col">Scheduler (s)</th><th class="awrbg" scope="col">DB CPU (s)</th><th class="awrbg" scope="col">DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>9,440.12</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>1.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>732.38</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>925.55</td><td align="right" class='awrc'>10,820.93</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>10,514.71</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.68</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>796.52</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>929.95</td><td align="right" class='awrnc'>11,965.48</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>19,954.83</td><td align="right" class='awrct'>0.04</td><td align="right" class='awrct'>1.68</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.04</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.02</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>1,528.90</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>1,855.50</td><td align="right" class='awrct'>22,786.41</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>9,977.41</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.84</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>764.45</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>927.75</td><td align="right" class='awrnc'>11,393.20</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>759.85</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.22</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>45.35</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>3.11</td><td align="right" class='awrc'>809.32</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12013"></a>
<h3 class="awr">Foreground Wait Classes -  % of DB time </h3>
<ul>
<li class="awr"> % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time</li>
</ul>
<table border="0" class="tdiff" summary="Foreground Wait Classes -  % of DB time . . % of Total DB time - instance DB time as a percentage of the cluster-wide total DB time"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 12" id="%DBtime">% DB time</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="UserI/O">User I/O</th><th class="awrbg" scope="col" id="SysI/O">Sys I/O</th><th class="awrbg" scope="col" id="Other">Other</th><th class="awrbg" scope="col" id="Applic">Applic</th><th class="awrbg" scope="col" id="Commit">Commit</th><th class="awrbg" scope="col" id="Network">Network</th><th class="awrbg" scope="col" id="Concurcy">Concurcy</th><th class="awrbg" scope="col" id="Config">Config</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Admin">Admin</th><th class="awrbg" scope="col" id="Scheduler">Scheduler</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col">% Total DB time</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="%DBtime UserI/O" class='awrclb'>87.24</td><td align="right" headers="%DBtime SysI/O" class='awrc'>0.00</td><td align="right" headers="%DBtime Other" class='awrc'>0.01</td><td align="right" headers="%DBtime Applic" class='awrc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrc'>0.00</td><td align="right" headers="%DBtime Network" class='awrc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrc'>0.00</td><td align="right" headers="%DBtime Config" class='awrc'>0.00</td><td align="right" headers="%DBtime Cluster" class='awrc'>6.77</td><td align="right" headers="%DBtime Admin" class='awrc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrcrb'>8.55</td><td align="right" class='awrc'>47.49</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="%DBtime UserI/O" class='awrnclb'>87.88</td><td align="right" headers="%DBtime SysI/O" class='awrnc'>0.00</td><td align="right" headers="%DBtime Other" class='awrnc'>0.01</td><td align="right" headers="%DBtime Applic" class='awrnc'>0.00</td><td align="right" headers="%DBtime Commit" class='awrnc'>0.00</td><td align="right" headers="%DBtime Network" class='awrnc'>0.00</td><td align="right" headers="%DBtime Concurcy" class='awrnc'>0.00</td><td align="right" headers="%DBtime Config" class='awrnc'>0.00</td><td align="right" headers="%DBtime Cluster" class='awrnc'>6.66</td><td align="right" headers="%DBtime Admin" class='awrnc'>&#160;</td><td align="right" headers="%DBtime Scheduler" class='awrnc'>&#160;</td><td align="right" headers="%DBtime DBCPU" class='awrncrb'>7.77</td><td align="right" class='awrnc'>52.51</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>87.56</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>6.71</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrcrbt'>8.16</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12050"></a>
<h3 class="awr">Top Timed Events</h3>
<ul>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time ' 	     : Per-instance 'Wait Time Avg ' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Events. . Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time ' : Per-instance 'Wait Time Avg ' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>4,853,007</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19,955.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.11ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>87.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.11ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.03ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>118.37us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,855.50</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>8.14</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>201,137</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,194.44</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.94ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>5.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.94ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.56ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>532.91us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,883,913</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,151.63</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>611.30us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>5.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>611.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>601.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>621.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>14.47us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>93,265</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>299.26</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.21ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.31</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.09ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>145.87us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>342,368</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>212.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>619.38us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.93</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>619.48us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>610.16us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>628.80us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>13.18us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>47,298</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>135.96</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.87ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.87ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.82ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>71.88us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>60,796</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>81.44</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.34ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.36</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.34ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.35ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>12.15us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>16,289</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>46.78</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.87ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.21</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.86ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.77ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.95ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>130.64us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>34,695</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>39.39</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.17</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.16ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.20ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>61.04us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>2,345,152</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>9,440.12</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.03ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>87.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>925.55</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>8.55</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>951,203</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>571.83</td><td align="right" headers="WaitTime AvgWait" class='awrc'>601.17us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>5.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>100,850</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>561.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.56ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>5.18</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>41,204</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>127.47</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.09ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.18</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>172,974</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>105.54</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>610.16us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.98</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>22,919</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>64.68</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.82ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>20,618</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>27.38</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.25</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>7,090</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.77ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.18</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>8,138</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>9.78</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.20ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>2,507,855</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>10,514.89</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.19ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>87.88</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>929.95</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>7.77</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>100,287</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>633.45</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.32ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>5.29</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>932,710</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>579.80</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>621.63us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>4.85</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>52,061</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>171.79</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.30ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.44</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>169,394</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>106.51</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>628.80us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.89</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>24,379</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>71.28</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.92ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>40,178</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>54.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.35ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.45</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrclb'>26,557</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>29.61</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.12ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.25</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrnclb'>9,199</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>27.16</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.95ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.23</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12051"></a>
<h3 class="awr">Top Timed Foreground Events</h3>
<ul>
<li class="awr"> Foreground Activity is captured in release 11g and above </li>
<li class="awr"> For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Foreground Events. . Foreground Activity is captured in release 11g and above. For prior releases, Foreground Activity is computed as difference between Total Activty and Background Activity. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>4,852,742</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19,954.76</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.11ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>87.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.11ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.03ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>118.57us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,855.50</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>8.14</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>1,883,896</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,151.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>611.30us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>5.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>611.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>601.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>621.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>14.47us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>342,209</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>211.97</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>619.41us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.93</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>619.51us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>610.16us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>628.86us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>13.22us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>60,796</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>81.44</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.34ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.36</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.34ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.35ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>12.15us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>34,694</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>39.39</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.17</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.16ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.20ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>61.03us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>19,638</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>14.68</td><td align="right" headers="WaitTime AvgWait" class='awrc'>747.46us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>746.27us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>730.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>761.66us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>21.77us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>5,463</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>6.95</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.27ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>75.11us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrclb'>1,768</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>6.64</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.75ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.78ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.61ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.96ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>245.63us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>6,516</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>6.57</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.01ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.96ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.03ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>49.65us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>2,345,128</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>9,440.10</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.03ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>87.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>925.55</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>8.55</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>951,203</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>571.83</td><td align="right" headers="WaitTime AvgWait" class='awrc'>601.17us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>5.28</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>172,969</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>105.54</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>610.16us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.98</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>20,618</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>27.38</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.25</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>8,138</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>9.78</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.20ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>9,061</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>6.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>730.87us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>2,749</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.35</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.22ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrclb'>723</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.86</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.96ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrnclb'>2,146</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.12</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.99ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>User I/O</td><td headers="Wait Event" class='awrct'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclbt'>2,507,614</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>10,514.66</td><td align="right" headers="WaitTime AvgWait" class='awrct'>4.19ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>87.87</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>DB CPU</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>929.95</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>7.77</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>932,693</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>579.79</td><td align="right" headers="WaitTime AvgWait" class='awrc'>621.63us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>4.85</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>169,240</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>106.43</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>628.86us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.89</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrclb'>40,178</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>54.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.35ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.45</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>26,556</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>29.61</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.12ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.25</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>10,577</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>8.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>761.66us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.07</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrnclb'>4,826</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>4.95</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.03ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.04</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrclb'>1,045</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.77</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.61ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>2,714</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.60</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.33ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12052"></a>
<h3 class="awr">Top Timed Background Events</h3>
<ul>
<li class="awr"> % of bg time: % of background elapsed time </li>
<li class="awr"> Instance '*'  - cluster wide summary </li>
<li class="awr">	  '*'  Waits, %Timeouts, Wait Time Total(s)	 : Cluster-wide total for the wait event </li>
<li class="awr">	  '*'  'Wait Time Avg'			    : Cluster-wide average computed as (Wait Time Total / Event Waits) </li>
<li class="awr">	  '*'  Summary 'Avg Wait Time'		    : Per-instance 'Wait Time Avg' used to compute the following statistics </li>
<li class="awr">	  '*'  [Avg/Min/Max/Std Dev]			 : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg' </li>
<li class="awr">	  '*'  Cnt					 : count of instances with wait times for the event</li>
</ul>
<table border="0" class="tdiff" summary="Top Timed Background Events. . % of bg time: % of background elapsed time. Instance '*' - cluster wide summary. '*' Waits, %Timeouts, Wait Time Total(s) : Cluster-wide total for the wait event. '*' 'Wait Time Avg' : Cluster-wide average computed as (Wait Time Total / Event Waits). '*' Summary 'Avg Wait Time' : Per-instance 'Wait Time Avg' used to compute the following statistics. '*' [Avg/Min/Max/Std Dev] : average/minimum/maximum/standard deviation of per-instance 'Wait Time Avg'. '*' Cnt : count of instances with wait times for the event"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 5" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Cnt">Cnt</th></tr>
<tr><td align="right" class='awrc'>*</td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>201,125</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,194.32</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.94ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>51.15</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.94ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.56ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>532.62us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>996.84</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>42.69</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>93,260</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>299.24</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.21ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>12.81</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3.09ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>146.00us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>47,298</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>135.96</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.87ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>5.82</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.87ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.82ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>71.88us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>16,288</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>46.78</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.87ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.86ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.77ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.95ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>130.37us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>4,965</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>22.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.45ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.95</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.26ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.60ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>235.66us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>601</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>5.93</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9.87ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.25</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>9.90ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>9.40ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>10.39ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>702.53us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>1,818</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.99</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.19ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.17</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>364.51us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.65ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>2.33ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrclb'>3,624</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.32</td><td align="right" headers="WaitTime AvgWait" class='awrc'>917.19us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.14</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>918.22us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>295.20us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.54ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>881.08us</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>2</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   *</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrnclb'>108</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2.28</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>21.08ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.10</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>21.08ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>19.92ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>22.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>1.65ms</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>2</td></tr>
<tr><td align="right" class='awrct'>1</td><td headers="Wait Class" class='awrclbt'>System I/O</td><td headers="Wait Event" class='awrct'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclbt'>100,845</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>560.96</td><td align="right" headers="WaitTime AvgWait" class='awrct'>5.56ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>51.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>510.19</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>46.43</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>41,200</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>127.45</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.09ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>11.60</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>22,919</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>64.68</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.82ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>5.89</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>7,089</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19.62</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.77ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>1.79</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>2,227</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>9.50</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.26ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.86</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>281</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.92</td><td align="right" headers="WaitTime AvgWait" class='awrc'>10.39ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.27</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrnclb'>54</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.20</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>22.24ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.11</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrclb'>2,001</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.95</td><td align="right" headers="WaitTime AvgWait" class='awrc'>473.49us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   1</div></td><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrnclb'>23,492</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.87</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>37.12us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.08</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrct'>2</td><td headers="Wait Class" class='awrclbt'>System I/O</td><td headers="Wait Event" class='awrct'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclbt'>100,280</td><td align="right" headers="Event %Timeouts" class='awrct'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclbt'>633.35</td><td align="right" headers="WaitTime AvgWait" class='awrct'>6.32ms</td><td align="right" headers="WaitTime %DBtime" class='awrct'>51.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclbt'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrct'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>&#160;</td><td headers="Wait Event" class='awrnc'>background cpu time</td><td align="right" headers="Event Waits" class='awrnclb'>&#160;</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>486.65</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>39.37</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrclb'>52,060</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>171.79</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.30ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>13.90</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>24,379</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>71.28</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.92ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>5.77</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrclb'>9,199</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>27.16</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.95ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>2.20</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrnclb'>2,738</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>12.59</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.60ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>1.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>1,011</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.69</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.65ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.30</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>320</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.40ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.24</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrclb'>1,809</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.79</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.54ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.23</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">   2</div></td><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrnclb'>54</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>19.92ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.09</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Cnt" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12053"></a>
<h3 class="awr">Foreground Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays foreground wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%DBtime">%DB time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>4,852,742</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>19,954.76</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.11ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>87.57</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.11ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.03ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>118.57us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>1,883,896</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,151.62</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>611.30us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>5.05</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>611.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>601.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>621.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>14.47us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>342,209</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>211.97</td><td align="right" headers="WaitTime AvgWait" class='awrc'>619.41us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.93</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>619.51us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>610.16us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>628.86us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>13.22us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant read-mostly invalidation</td><td align="right" headers="Event Waits" class='awrnclb'>60,796</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>81.44</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.34ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.36</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.34ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.35ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>12.15us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrclb'>34,694</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>39.39</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.17</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.16ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.12ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.20ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>61.03us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>19,638</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>14.68</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>747.46us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>746.27us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>730.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>761.66us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>21.77us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>5,463</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>6.95</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.27ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.22ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.33ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>75.11us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr grant congested</td><td align="right" headers="Event Waits" class='awrnclb'>1,768</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>6.64</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.75ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.78ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.61ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.96ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>245.63us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>6,516</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>6.57</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.01ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>.96ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.03ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>49.65us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block lost</td><td align="right" headers="Event Waits" class='awrnclb'>7</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.88</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>554.07ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>575.36ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>545.55ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>605.17ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>42.15ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>4,290</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.79</td><td align="right" headers="WaitTime AvgWait" class='awrc'>883.20us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>883.15us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>779.27us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>.99ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>146.91us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant congested</td><td align="right" headers="Event Waits" class='awrnclb'>310</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.22</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.94ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.92ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.86ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.99ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>95.60us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrclb'>5,778</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.78</td><td align="right" headers="WaitTime AvgWait" class='awrc'>134.26us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>135.32us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>130.44us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>140.20us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>6.91us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block lost</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.52</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>522.68ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>522.68ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>522.68ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>522.68ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrclb'>311</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.22</td><td align="right" headers="WaitTime AvgWait" class='awrc'>717.03us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>719.16us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>684.22us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>754.10us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>49.41us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch free</td><td align="right" headers="Event Waits" class='awrnclb'>506</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.20</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>404.12us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>401.72us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>374.08us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>429.36us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>39.09us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: enqueue hash chains</td><td align="right" headers="Event Waits" class='awrclb'>349</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.20</td><td align="right" headers="WaitTime AvgWait" class='awrc'>561.09us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>554.70us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>482.78us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>626.62us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>101.71us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrnclb'>17</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.11</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.58ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.58ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.58ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.58ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrclb'>186</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>534.66us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>525.28us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>452.59us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>597.96us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>102.79us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current block congested</td><td align="right" headers="Event Waits" class='awrnclb'>19</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.45ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.60ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.19ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.00ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>575.53us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: redo allocation</td><td align="right" headers="Event Waits" class='awrclb'>125</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>318.30us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>317.84us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>312.60us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>323.07us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>7.41us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>144</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>245.03us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>244.43us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>243.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>245.10us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>.96us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Commit</td><td headers="Wait Event" class='awrc'>log file sync</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.83ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.10ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.49ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.70ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.68ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block congested</td><td align="right" headers="Event Waits" class='awrnclb'>7</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.40ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.93ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.85ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.01ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.53ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrclb'>22</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.36ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>81.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.78ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.32ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrnclb'>36</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>801.33us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.33ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>359.71us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>8.31ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.62ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrclb'>27</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>671.37us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>709.27us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>641.05us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>777.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>96.49us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrnclb'>18</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>926.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>926.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>926.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>926.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.75ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.75ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.75ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.75ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>13</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.23ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrclb'>25</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>530.12us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>523.60us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>360.58us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>686.62us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>230.54us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>6.14ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>6.14ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>6.14ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>6.14ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrclb'>11</td><td align="right" headers="Event %Timeouts" class='awrc'>18.18</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.07ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.37ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>908.56us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.82ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>645.90us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrnclb'>65</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>172.85us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>176.49us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>129.09us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>223.90us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>67.04us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>SQL*Net break/reset to client</td><td align="right" headers="Event Waits" class='awrclb'>122</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>84.56us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>84.56us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>84.56us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>84.56us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrnclb'>470</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>20.94us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>17.88us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.13us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>28.62us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>15.19us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>direct path write</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9.53ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>9.53ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>9.53ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>9.53ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache: mutex X</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.46ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.46ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.46ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>4.46ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>row cache lock</td><td align="right" headers="Event Waits" class='awrclb'>8</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.08ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>name-service call wait</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.01ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>945.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>94.05us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrclb'>16</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>448.38us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>448.38us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>91.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>805.25us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>504.70us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS initialization</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.36ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.36ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.36ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.36ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.07ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.07ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.07ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.07ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrnclb'>235</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>24.82us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>22.69us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>20.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>25.21us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.56us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrclb'>26</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>215.35us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>214.89us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>212.90us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>216.88us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.81us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: call allocation</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.11ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.11ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.11ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.11ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>317.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>317.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>317.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>317.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrnclb'>213</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>10.49us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>12.36us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>8.89us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>15.84us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.91us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: messages</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>424.60us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>400.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>359.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>441.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>57.98us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: action</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>907.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>907.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>907.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>907.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS operation: query</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>220.17us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>220.17us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>220.17us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>220.17us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc index operation</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.30ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.30ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: undo global data</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>204.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>239.63us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>132.75us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>346.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>151.14us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current split</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>507.50us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>507.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>507.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>507.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>enq: TM - contention</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>593.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>593.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>593.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>593.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>enq: HW - contention</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>492.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>492.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>492.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>492.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>lock deadlock retry</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>100.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>100.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>100.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>100.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrnclb'>6</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>12.83us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>13.70us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>12.40us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>15.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.84us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>25.00us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>28.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>18.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>38.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>13.79us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>10.00us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>10.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>10.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>10.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>9.33us</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>10.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>7.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>13.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.89us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.40us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.40us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.40us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>watchdog main loop</td><td align="right" headers="Event Waits" class='awrclb'>1,612</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>4,836.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3000.05ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>21.22</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3000.05ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3000.04ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3000.07ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>16.05us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrnclb'>213</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>610.16</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2864.59ms</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>2.68</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1860.53ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>833.39us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3720.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2630.01ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Execution Msg</td><td align="right" headers="Event Waits" class='awrclb'>48</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.10</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.06ms</td><td align="right" headers="WaitTime %DBtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.06ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.42ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.71ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>911.93us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq: Msg Fragment</td><td align="right" headers="Event Waits" class='awrnclb'>120</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>497.42us</td><td align="right" headers="WaitTime %DBtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>497.42us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>484.22us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>510.62us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>18.67us</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12054"></a>
<h3 class="awr">Background Wait Events (Global)</h3>
<ul>
<li class="awr"> s - second, ms - millisecond, us - microsecond, ns - nanosecond </li>
<li class="awr"> Summary 'Avg Wait Time':  Per-instance 'Wait Time Avg' used to compute [Avg/Min/Max/Std Dev]  </li>
<li class="awr"> ordered by wait time desc, waits desc (idle events last) </li>
</ul>
<table border="0" class="tdiff" summary="This table displays background wait event information"><tr>
<th class="awrbg" colspan=" 2" id="Wait">Wait</th>
<th class="awrbg" colspan=" 2" id="Event">Event</th>
<th class="awrbg" colspan=" 3" id="WaitTime">Wait Time</th>
<th class="awrbg" colspan=" 4" id="SummaryAvgWaitTime">Summary Avg Wait Time</th>
</tr><tr>
<th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Event">Event</th><th class="awrbg" scope="col" id="Waits">Waits</th><th class="awrbg" scope="col" id="%Timeouts">%Timeouts</th><th class="awrbg" scope="col" id="Total(s)">Total(s)</th><th class="awrbg" scope="col" id="AvgWait">Avg Wait</th><th class="awrbg" scope="col" id="%bgtime">%bg time</th><th class="awrbg" scope="col" id="Avg">Avg</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>201,125</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,194.32</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.94ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.94ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.56ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.32ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>532.62us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR any worker group</td><td align="right" headers="Event Waits" class='awrnclb'>93,260</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>299.24</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3.21ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.13</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3.20ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.09ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>146.00us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file parallel write</td><td align="right" headers="Event Waits" class='awrclb'>47,298</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>135.96</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.87ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.06</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.87ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.82ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.92ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>71.88us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR worker group ordering</td><td align="right" headers="Event Waits" class='awrnclb'>16,288</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>46.78</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.87ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.02</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.86ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.77ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.95ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>130.37us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>LGWR all worker groups</td><td align="right" headers="Event Waits" class='awrclb'>4,965</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>22.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.45ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.01</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.43ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.26ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.60ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>235.66us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>System I/O</td><td headers="Wait Event" class='awrnc'>control file parallel write</td><td align="right" headers="Event Waits" class='awrnclb'>601</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>5.93</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>9.87ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.90ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>9.40ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>10.39ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>702.53us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file Mirror Read</td><td align="right" headers="Event Waits" class='awrclb'>1,818</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>3.99</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.19ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.01ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>364.51us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.65ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.33ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" headers="Event Waits" class='awrnclb'>3,624</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3.32</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>917.19us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>918.22us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>295.20us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.54ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>881.08us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>Sync ASM rebalance</td><td align="right" headers="Event Waits" class='awrclb'>108</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2.28</td><td align="right" headers="WaitTime AvgWait" class='awrc'>21.08ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>21.08ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>19.92ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>22.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.65ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ASM file metadata operation</td><td align="right" headers="Event Waits" class='awrnclb'>4,033</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.98</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>490.49us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>490.36us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>473.49us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>507.24us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>23.86us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>control file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>6,697</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.74</td><td align="right" headers="WaitTime AvgWait" class='awrc'>259.28us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>260.84us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>248.86us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>272.82us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>16.94us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" headers="Event Waits" class='awrnclb'>48,343</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.72</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>35.66us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>35.70us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>34.28us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>37.12us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.01us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>KSV master wait</td><td align="right" headers="Event Waits" class='awrclb'>1,448</td><td align="right" headers="Event %Timeouts" class='awrc'>62.15</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1.58</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.09ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.09ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.03ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>84.47us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" headers="Event Waits" class='awrnclb'>156</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1.29</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>8.28ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>9.03ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.20ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>13.85ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>6.82ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>1,499</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.88</td><td align="right" headers="WaitTime AvgWait" class='awrc'>586.79us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>773.27us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>585.78us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>.96ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>265.14us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>gcs log flush sync</td><td align="right" headers="Event Waits" class='awrnclb'>1,593</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.86</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>540.50us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>543.35us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>508.20us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>578.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>49.71us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>DFS lock handle</td><td align="right" headers="Event Waits" class='awrclb'>851</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.81</td><td align="right" headers="WaitTime AvgWait" class='awrc'>946.52us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>.96ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>919.79us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.01ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>60.70us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PX Deq: reap credit</td><td align="right" headers="Event Waits" class='awrnclb'>21,212</td><td align="right" headers="Event %Timeouts" class='awrnc'>99.98</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.66</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>30.92us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>30.93us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>30.68us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>31.18us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>354.90ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>log file sequential read</td><td align="right" headers="Event Waits" class='awrclb'>504</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.63</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.24ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.24ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>99.50us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr multi block mixed</td><td align="right" headers="Event Waits" class='awrnclb'>5</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.51</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>102.24ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>127.37ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.71ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>253.04ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>177.72ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>AQ: RAC AQ Network</td><td align="right" headers="Event Waits" class='awrclb'>12,056</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.41</td><td align="right" headers="WaitTime AvgWait" class='awrc'>34.02us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>34.02us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>33.38us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>34.66us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>905.12ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CGS wait for IPC msg</td><td align="right" headers="Event Waits" class='awrnclb'>12,329</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.39</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>31.54us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>31.54us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>30.86us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>32.23us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>.97us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block busy</td><td align="right" headers="Event Waits" class='awrclb'>112</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.39</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3.46ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.19ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>773.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.61ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.01ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>reliable message</td><td align="right" headers="Event Waits" class='awrnclb'>70</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.39</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.52ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.41ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3.93ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>10.89ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.92ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch free</td><td align="right" headers="Event Waits" class='awrclb'>1,080</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.28</td><td align="right" headers="WaitTime AvgWait" class='awrc'>262.14us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>262.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>259.30us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>265.37us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>4.29us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc cr block busy</td><td align="right" headers="Event Waits" class='awrnclb'>35</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.27</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>7.84ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.84ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>7.84ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>7.84ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: gcs resource hash</td><td align="right" headers="Event Waits" class='awrclb'>483</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.26</td><td align="right" headers="WaitTime AvgWait" class='awrc'>547.12us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>550.82us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>527.62us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>574.01us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>32.80us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>db file sequential read</td><td align="right" headers="Event Waits" class='awrnclb'>264</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.26</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.97ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.02ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>.96ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>86.86us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc buffer busy release</td><td align="right" headers="Event Waits" class='awrclb'>15</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.22</td><td align="right" headers="WaitTime AvgWait" class='awrc'>14.70ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>14.70ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>14.70ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>14.70ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>oracle thread bootstrap</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.21</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>26.17ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>26.17ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>23.12ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>29.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.32ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>System I/O</td><td headers="Wait Event" class='awrc'>db file async I/O submit</td><td align="right" headers="Event Waits" class='awrclb'>13,832</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.15</td><td align="right" headers="WaitTime AvgWait" class='awrc'>10.76us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>10.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>10.48us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>11.02us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>381.32ns</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>LGWR wait for redo copy</td><td align="right" headers="Event Waits" class='awrnclb'>280</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.14</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>517.69us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>520.74us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>467.40us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>574.08us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>75.44us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>direct path write temp</td><td align="right" headers="Event Waits" class='awrclb'>30</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.14</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.50ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.50ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>4.50ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>4.50ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: cache buffers lru chain</td><td align="right" headers="Event Waits" class='awrnclb'>189</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.11</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>561.20us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>554.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>491.73us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>616.77us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>88.42us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CF - contention</td><td align="right" headers="Event Waits" class='awrclb'>94</td><td align="right" headers="Event %Timeouts" class='awrc'>65.96</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrc'>.97ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>.97ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>.96ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>.99ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>19.74us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current grant 2-way</td><td align="right" headers="Event Waits" class='awrnclb'>159</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>560.99us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>518.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>472.80us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>563.85us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>64.38us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>Disk file operations I/O</td><td align="right" headers="Event Waits" class='awrclb'>341</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>231.11us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>238.06us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>196.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>279.63us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>58.78us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>IPC group service call</td><td align="right" headers="Event Waits" class='awrnclb'>919</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>84.87us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>84.87us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>83.23us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>86.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>2.31us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current grant busy</td><td align="right" headers="Event Waits" class='awrclb'>86</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.08</td><td align="right" headers="WaitTime AvgWait" class='awrc'>883.14us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>746.37us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>591.60us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>901.14us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>218.87us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Application</td><td headers="Wait Event" class='awrnc'>enq: TM - contention</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>20.32ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>15.47ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>941.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>30.01ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>20.55ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>CSS operation: data query</td><td align="right" headers="Event Waits" class='awrclb'>36</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.65ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.65ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.58ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.72ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>101.98us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges inquiry response</td><td align="right" headers="Event Waits" class='awrnclb'>69</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>842.65us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>848.85us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>763.27us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>934.44us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>121.03us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ksxr poll remote instances</td><td align="right" headers="Event Waits" class='awrclb'>1,666</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.06</td><td align="right" headers="WaitTime AvgWait" class='awrc'>34.39us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>34.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>32.80us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>35.86us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.17us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: redo allocation</td><td align="right" headers="Event Waits" class='awrnclb'>122</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>450.14us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>467.10us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>373.03us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>561.18us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>133.04us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Application</td><td headers="Wait Event" class='awrc'>enq: RO - fast object reuse</td><td align="right" headers="Event Waits" class='awrclb'>41</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.23ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>513.60us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.47ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>673.40us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>CSS operation: data update</td><td align="right" headers="Event Waits" class='awrnclb'>40</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.24ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.24ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>102.32us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Join ACK</td><td align="right" headers="Event Waits" class='awrclb'>16</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.92ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>4.42ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2.02ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>6.83ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>3.40ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>User I/O</td><td headers="Wait Event" class='awrnc'>direct path write</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.19ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>7.09ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.56ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>9.61ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>3.57ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>IPC send completion sync</td><td align="right" headers="Event Waits" class='awrclb'>1,217</td><td align="right" headers="Event %Timeouts" class='awrc'>99.26</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>32.72us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>32.70us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>28.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>36.54us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>5.43us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: gc element</td><td align="right" headers="Event Waits" class='awrnclb'>68</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.04</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>560.66us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>552.21us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>408.53us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>695.89us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>203.19us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current block 2-way</td><td align="right" headers="Event Waits" class='awrclb'>42</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>775.86us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>793.28us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>732.30us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>854.27us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>86.25us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" headers="Event Waits" class='awrnclb'>47</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>609.26us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>603.92us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>520.36us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>687.48us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>118.17us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>row cache lock</td><td align="right" headers="Event Waits" class='awrclb'>17</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.37ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.35ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.41ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>77.58us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>KJC: Wait for msg sends to complete</td><td align="right" headers="Event Waits" class='awrnclb'>40</td><td align="right" headers="Event %Timeouts" class='awrnc'>50.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>576.05us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>345.53us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>74.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>616.73us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>383.53us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>os thread creation</td><td align="right" headers="Event Waits" class='awrclb'>8</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2.56ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.56ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.82ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.04ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: US - contention</td><td align="right" headers="Event Waits" class='awrnclb'>16</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.02</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.96ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>930.52us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>686.71us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.17ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>344.80us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant 2-way</td><td align="right" headers="Event Waits" class='awrclb'>17</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>783.88us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>783.88us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>783.88us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>783.88us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: PS - contention</td><td align="right" headers="Event Waits" class='awrnclb'>13</td><td align="right" headers="Event %Timeouts" class='awrnc'>23.08</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>913.23us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.06ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>783.30us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.35ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>398.12us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr disk read</td><td align="right" headers="Event Waits" class='awrclb'>15</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>783.80us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>785.47us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>777.11us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>793.83us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>11.82us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: WF - contention</td><td align="right" headers="Event Waits" class='awrnclb'>12</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>883.92us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.05ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>850.27us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>285.48us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: cache buffers chains</td><td align="right" headers="Event Waits" class='awrclb'>19</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>552.16us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>854.23us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>332.47us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.38ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>737.89us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: WT - contention</td><td align="right" headers="Event Waits" class='awrnclb'>8</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.30ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.30ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.30ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.30ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: CO - master slave det</td><td align="right" headers="Event Waits" class='awrclb'>10</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>941.40us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>941.40us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>941.40us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>941.40us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: MGA shared context latch</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.71ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.71ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.71ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.71ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>libcache interrupt action by LCK</td><td align="right" headers="Event Waits" class='awrclb'>1,007</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.19us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.19us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.49us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.88us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>.98us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>PGA memory operation</td><td align="right" headers="Event Waits" class='awrnclb'>154</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>46.25us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>45.78us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>42.19us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>49.37us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.07us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Configuration</td><td headers="Wait Event" class='awrc'>latch: redo writing</td><td align="right" headers="Event Waits" class='awrclb'>11</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>452.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>480.07us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>171.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>788.80us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>436.61us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: ges resource hash list</td><td align="right" headers="Event Waits" class='awrnclb'>16</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>261.88us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>261.88us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>236.25us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>287.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>36.24us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>User I/O</td><td headers="Wait Event" class='awrc'>db file scattered read</td><td align="right" headers="Event Waits" class='awrclb'>15</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>278.87us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>278.87us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>278.87us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>278.87us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: messages</td><td align="right" headers="Event Waits" class='awrnclb'>10</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>413.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>460.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>222.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>699.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>337.64us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Slave Session Stats</td><td align="right" headers="Event Waits" class='awrclb'>16</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>245.88us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>281.18us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>224.69us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>337.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>79.88us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>DLM cross inst call completion</td><td align="right" headers="Event Waits" class='awrnclb'>17</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>212.53us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>182.45us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>109.40us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>255.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>103.31us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: TA - contention</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>685.60us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>674.92us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>621.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>728.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>75.54us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TD - KTF dump entries</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.12ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.31ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>738.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.89ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>811.05us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: object queue header operation</td><td align="right" headers="Event Waits" class='awrclb'>9</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>330.89us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>277.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>118.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>437.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>225.80us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc index operation</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.24ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.24ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.24ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: DW - contention</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.13ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.13ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.00ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>176.78us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>library cache lock</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2.02ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2.02ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2.02ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>enq: TX - index contention</td><td align="right" headers="Event Waits" class='awrclb'>2</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.00ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.00ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.00ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.00ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>name-service call wait</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>.99ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>.99ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>866.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.11ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>175.36us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>latch: MGA shared context root latch</td><td align="right" headers="Event Waits" class='awrclb'>3</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>659.33us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>659.33us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>659.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>659.33us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Configuration</td><td headers="Wait Event" class='awrnc'>enq: HW - contention</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>940.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>940.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>940.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>940.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" headers="Event Waits" class='awrclb'>16</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>113.50us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>124.72us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>106.77us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>142.67us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>25.38us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: FB - contention</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>844.50us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>844.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>844.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>844.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>enq: AF - task serialization</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.69ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.69ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.69ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.69ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: enqueue hash chains</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>534.33us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>710.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>183.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.24ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>745.29us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc current multi block request</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.27ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.27ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Cluster</td><td headers="Wait Event" class='awrnc'>gc current split</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>626.50us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>626.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>626.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>626.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: undo global data</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.19ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.19ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>wait list latch free</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1.13ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1.13ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1.13ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1.13ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>GCR CSS group update</td><td align="right" headers="Event Waits" class='awrclb'>36</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>27.36us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>27.36us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>18.94us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>35.78us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>11.90us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>enq: TO - contention</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>873.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>873.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>873.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>873.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Cluster</td><td headers="Wait Event" class='awrc'>gc cr grant busy</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>806.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>806.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>806.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>806.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>GCR CSS group query</td><td align="right" headers="Event Waits" class='awrnclb'>36</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>19.56us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>19.56us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>16.28us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>22.83us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.64us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Concurrency</td><td headers="Wait Event" class='awrc'>buffer busy waits</td><td align="right" headers="Event Waits" class='awrclb'>6</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>105.33us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>112.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>90.50us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>135.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>31.47us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Concurrency</td><td headers="Wait Event" class='awrnc'>latch: MGA heap latch</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>514.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>514.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>514.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>514.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>latch: checkpoint queue latch</td><td align="right" headers="Event Waits" class='awrclb'>5</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>93.80us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>107.67us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>38.33us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>177.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>98.05us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>latch: call allocation</td><td align="right" headers="Event Waits" class='awrnclb'>1</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>443.00us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>443.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>443.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>443.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>asynch descriptor resize</td><td align="right" headers="Event Waits" class='awrclb'>47</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.32us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.30us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.52us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.08us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.10us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Network</td><td headers="Wait Event" class='awrnc'>SQL*Net message to client</td><td align="right" headers="Event Waits" class='awrnclb'>43</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.49us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.49us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.48us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>16.84ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>transaction</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>187.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>187.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>187.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>187.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>ges resource directory to be unfrozen</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>19.33us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>15.75us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>26.50us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>15.20us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>undo_retention publish retry</td><td align="right" headers="Event Waits" class='awrclb'>4</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>7.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>7.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>8.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1.41us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Other</td><td headers="Wait Event" class='awrnc'>AWR Flush</td><td align="right" headers="Event Waits" class='awrnclb'>4</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>5.25us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>5.25us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>5.25us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.25us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Other</td><td headers="Wait Event" class='awrc'>ASM background starting</td><td align="right" headers="Event Waits" class='awrclb'>1</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrc'>5.00us</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>rdbms ipc message</td><td align="right" headers="Event Waits" class='awrnclb'>380,649</td><td align="right" headers="Event %Timeouts" class='awrnc'>5.87</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>27,187.45</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>71.42ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>11.64</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>71.71ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>67.26ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>76.16ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>6.29ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Idle Wait</td><td align="right" headers="Event Waits" class='awrclb'>18</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>20,523.79</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1140.21 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>8.79</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1140.21 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1139.46 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1140.96 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>1062.67ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Space Manager: slave idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>5,123</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>19,313.44</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3769.95ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>8.27</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3769.95ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3767.08ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3772.82ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>4.06ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>class slave wait</td><td align="right" headers="Event Waits" class='awrclb'>15,076</td><td align="right" headers="Event %Timeouts" class='awrc'>79.44</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>8,733.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>579.27ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>3.74</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>579.26ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>560.40ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>598.12ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>26.67ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>wait for unread message on broadcast channel</td><td align="right" headers="Event Waits" class='awrnclb'>1,852</td><td align="right" headers="Event %Timeouts" class='awrnc'>99.95</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>3,626.09</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1957.93ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>1.55</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1957.93ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1957.39ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1958.47ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>767.07us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>ges remote message</td><td align="right" headers="Event Waits" class='awrclb'>34,338</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,416.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>70.36ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>1.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>70.36ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>69.77ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>70.96ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>839.36us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>GCR sleep</td><td align="right" headers="Event Waits" class='awrnclb'>8,047</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,415.19</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>300.14ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>1.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>300.14ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>300.13ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>300.15ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>15.32us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>pmon timer</td><td align="right" headers="Event Waits" class='awrclb'>805</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,414.95</td><td align="right" headers="WaitTime AvgWait" class='awrc'>2999.94ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>1.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2999.94ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>2999.91ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2999.97ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>38.13us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>DIAG idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>15,184</td><td align="right" headers="Event %Timeouts" class='awrnc'>82.85</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,412.01</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>158.85ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>1.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>158.86ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>158.05ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>159.66ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>1.14ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>gcs yield cpu</td><td align="right" headers="Event Waits" class='awrclb'>82,321</td><td align="right" headers="Event %Timeouts" class='awrc'>99.98</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>2,405.17</td><td align="right" headers="WaitTime AvgWait" class='awrc'>29.22ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>1.03</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>29.22ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>29.21ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>29.23ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>12.66us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>gcs remote message</td><td align="right" headers="Event Waits" class='awrnclb'>2,977,165</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>2,035.93</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>683.85us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.87</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>683.90us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>679.88us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>687.91us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>5.67us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Data Guard: Gap Manager</td><td align="right" headers="Event Waits" class='awrclb'>21</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,260.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.54</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>140.85us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Streams AQ: qmn slave idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>44</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,232.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>28.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>28.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>235.08us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Streams AQ: qmn coordinator idle wait</td><td align="right" headers="Event Waits" class='awrclb'>88</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,232.04</td><td align="right" headers="WaitTime AvgWait" class='awrc'>14.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.53</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>14.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>14.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>14.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>61.18us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>ASM background timer</td><td align="right" headers="Event Waits" class='awrnclb'>3,356</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,210.18</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>360.60ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>360.66ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>356.11ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>365.20ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>6.43ms</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>Streams AQ: waiting for time management or cleanup tasks</td><td align="right" headers="Event Waits" class='awrclb'>0</td><td align="right" headers="Event %Timeouts" class='awrc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,210.01</td><td align="right" headers="WaitTime AvgWait" class='awrc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>heartbeat redo informer</td><td align="right" headers="Event Waits" class='awrnclb'>1,209</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,209.19</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>1000.16ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>1000.16ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>1000.15ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>1000.17ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>9.90us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>OFS idle</td><td align="right" headers="Event Waits" class='awrclb'>403</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,209.02</td><td align="right" headers="WaitTime AvgWait" class='awrc'>3000.05ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>3000.05ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>3000.02ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>3000.08ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>42.15us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>pman timer</td><td align="right" headers="Event Waits" class='awrnclb'>403</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,208.89</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>2999.72ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>2999.72ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>2999.69ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>2999.74ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>37.12us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>REPL Capture/Apply: RAC AQ qmn coordinator</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,208.54</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.43 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.43 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.42 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.43 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>6.27ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>SCM slave idle</td><td align="right" headers="Event Waits" class='awrnclb'>12,115</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,207.50</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>99.67ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>99.67ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>99.65ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>99.69ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>29.97us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>ASM cluster membership changes</td><td align="right" headers="Event Waits" class='awrclb'>689</td><td align="right" headers="Event %Timeouts" class='awrc'>85.78</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,207.27</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1752.21ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1752.21ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1750.40ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1754.02ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>2.56ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>lreg timer</td><td align="right" headers="Event Waits" class='awrnclb'>402</td><td align="right" headers="Event %Timeouts" class='awrnc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,207.06</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>3002.64ms</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.52</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>3002.64ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>3002.62ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>3002.65ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>20.04us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PING</td><td align="right" headers="Event Waits" class='awrclb'>1,079</td><td align="right" headers="Event %Timeouts" class='awrc'>21.32</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.73</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1112.82ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1114.27ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1074.01ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1154.54ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>56.94ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>shared server idle wait</td><td align="right" headers="Event Waits" class='awrnclb'>0</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.25</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>dispatcher timer</td><td align="right" headers="Event Waits" class='awrclb'>20</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.12</td><td align="right" headers="WaitTime AvgWait" class='awrc'>60.01 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>60.01 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>579.12us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>VKRM Idle</td><td align="right" headers="Event Waits" class='awrnclb'>0</td><td align="right" headers="Event %Timeouts" class='awrnc'>&#160;</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.10</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>&#160;</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>&#160;</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>AQPC idle</td><td align="right" headers="Event Waits" class='awrclb'>40</td><td align="right" headers="Event %Timeouts" class='awrc'>100.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,200.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>30.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>30.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>43.63us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>Data Guard: Timer</td><td align="right" headers="Event Waits" class='awrnclb'>2</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,200.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>600.00 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.51</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>600.00 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>736.81us</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>LGWR worker group idle</td><td align="right" headers="Event Waits" class='awrclb'>167,311</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>1,128.18</td><td align="right" headers="WaitTime AvgWait" class='awrc'>6.74ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.48</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>6.74ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>6.46ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>7.01ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>387.18us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>smon timer</td><td align="right" headers="Event Waits" class='awrnclb'>32</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>1,042.85</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>32.59 s</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.45</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>36.82 s</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>25.54 s</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>48.10 s</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>15.96 s</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Execute Reply</td><td align="right" headers="Event Waits" class='awrclb'>16</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.07</td><td align="right" headers="WaitTime AvgWait" class='awrc'>4.29ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>8.69ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.65ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>15.72ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>9.95ms</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>PX Deq Credit: send blkd</td><td align="right" headers="Event Waits" class='awrnclb'>60</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>825.58us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>825.58us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>825.58us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>825.58us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>&#160;</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>SQL*Net message from client</td><td align="right" headers="Event Waits" class='awrclb'>44</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.05</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.09ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>1.09ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>924.14us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>1.25ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>229.74us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>RMA: IPC0 completion sync</td><td align="right" headers="Event Waits" class='awrnclb'>1,314</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>25.78us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>25.78us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>25.48us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>26.09us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>430.51ns</td></tr>
<tr><td headers="Wait Class" class='awrclb'>Idle</td><td headers="Wait Event" class='awrc'>PX Deq: Parse Reply</td><td align="right" headers="Event Waits" class='awrclb'>16</td><td align="right" headers="Event %Timeouts" class='awrc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrclb'>0.03</td><td align="right" headers="WaitTime AvgWait" class='awrc'>1.90ms</td><td align="right" headers="WaitTime %bgtime" class='awrc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrclb'>2.10ms</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrc'>1.78ms</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrc'>2.43ms</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrcrb'>456.14us</td></tr>
<tr><td headers="Wait Class" class='awrnclb'>Idle</td><td headers="Wait Event" class='awrnc'>heartbeat monitor sleep</td><td align="right" headers="Event Waits" class='awrnclb'>3</td><td align="right" headers="Event %Timeouts" class='awrnc'>0.00</td><td align="right" headers="WaitTime Total(s)" class='awrnclb'>0.00</td><td align="right" headers="WaitTime AvgWait" class='awrnc'>4.67us</td><td align="right" headers="WaitTime %bgtime" class='awrnc'>0.00</td><td align="right" headers="SummaryAvgWaitTime Avg" class='awrnclb'>4.50us</td><td align="right" headers="SummaryAvgWaitTime Min" class='awrnc'>4.00us</td><td align="right" headers="SummaryAvgWaitTime Max" class='awrnc'>5.00us</td><td align="right" headers="SummaryAvgWaitTime StdDev" class='awrncrb'>707.11ns</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12055"></a>
<h3 class="awr">Wait Event Histogram (Global)</h3>
<ul>
<li class="awr"> When % of Total Waits is  0.0 the count is displayed in parenthesis</li>
</ul>
<table border="0" class="tdiff" summary="This table displays wait event histogram information"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 22" id="%ofTotalWaits">% of Total Waits</th>
</tr><tr>
<th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Waits</th><th class="awrbg" scope="col" id="&lt;1us"> &lt;1us</th><th class="awrbg" scope="col" id="&lt;2us"> &lt;2us</th><th class="awrbg" scope="col" id="&lt;4us"> &lt;4us</th><th class="awrbg" scope="col" id="&lt;8us"> &lt;8us</th><th class="awrbg" scope="col" id="&lt;16us"> &lt;16us</th><th class="awrbg" scope="col" id="&lt;32us"> &lt;32us</th><th class="awrbg" scope="col" id="&lt;64us"> &lt;64us</th><th class="awrbg" scope="col" id="&lt;128us"> &lt;128us</th><th class="awrbg" scope="col" id="&lt;256us"> &lt;256us</th><th class="awrbg" scope="col" id="&lt;512us"> &lt;512us</th><th class="awrbg" scope="col" id="&lt;1ms"> &lt;1ms</th><th class="awrbg" scope="col" id="&lt;2ms"> &lt;2ms</th><th class="awrbg" scope="col" id="&lt;4ms"> &lt;4ms</th><th class="awrbg" scope="col" id="&lt;8ms"> &lt;8ms</th><th class="awrbg" scope="col" id="&lt;16ms"> &lt;16ms</th><th class="awrbg" scope="col" id="&lt;32ms"> &lt;32ms</th><th class="awrbg" scope="col" id="&lt;64ms"> &lt;64ms</th><th class="awrbg" scope="col" id="&lt;128ms"> &lt;128ms</th><th class="awrbg" scope="col" id="&lt;256ms"> &lt;256ms</th><th class="awrbg" scope="col" id="&lt;512ms"> &lt;512ms</th><th class="awrbg" scope="col" id="&lt;1s"> &lt;1s</th><th class="awrbg" scope="col" id="&gt;=1s"> &gt;=1s</th></tr>
<tr><td scope="row" class='awrc'>AQ: RAC AQ Network</td><td align="right" class='awrc'>12K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>83.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM IO for non-blocking poll</td><td align="right" class='awrnc'>48.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>61.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>20.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.0(21)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ASM background starting</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ASM file metadata operation</td><td align="right" class='awrnc'>4032</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>32.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>35.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>AWR Flush</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CGS wait for IPC msg</td><td align="right" class='awrnc'>12.3K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>80.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS initialization</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: action</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: data query</td><td align="right" class='awrc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>41.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>CSS operation: data update</td><td align="right" class='awrnc'>40</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>52.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>CSS operation: query</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>DFS lock handle</td><td align="right" class='awrnc'>851</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>15.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>58.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>19.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>DLM cross inst call completion</td><td align="right" class='awrc'>26</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>57.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Disk file Mirror Read</td><td align="right" class='awrnc'>1852</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>21.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>19.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>34.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>Disk file operations I/O</td><td align="right" class='awrc'>364</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>2.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>44.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>26.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>GCR CSS group query</td><td align="right" class='awrnc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>80.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>GCR CSS group update</td><td align="right" class='awrc'>36</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IMR slave acknowledgement msg</td><td align="right" class='awrnc'>3624</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>13.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>17.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>17.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>17.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>IPC group service call</td><td align="right" class='awrc'>920</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>39.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>40.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>IPC send completion sync</td><td align="right" class='awrnc'>1244</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>83.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>KJC: Wait for msg sends to complete</td><td align="right" class='awrc'>5810</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>40.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>44.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>KSV master wait</td><td align="right" class='awrnc'>1448</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>36.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>5.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>8.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR all worker groups</td><td align="right" class='awrc'>4984</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>64.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>28.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR any worker group</td><td align="right" class='awrnc'>93K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.0(10)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>18.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>50.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>12.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(37)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>LGWR wait for redo copy</td><td align="right" class='awrc'>278</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>5.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>14.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>24.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>12.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>LGWR worker group ordering</td><td align="right" class='awrnc'>16.2K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>1.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>77.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(7)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PGA memory operation</td><td align="right" class='awrc'>624</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>54.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>27.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Join ACK</td><td align="right" class='awrnc'>16</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: Signal ACK EXT</td><td align="right" class='awrc'>16</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>PX Deq: Slave Session Stats</td><td align="right" class='awrnc'>32</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>PX Deq: reap credit</td><td align="right" class='awrc'>21.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>83.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>8.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>SQL*Net break/reset to client</td><td align="right" class='awrnc'>122</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>26.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>30.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net message to client</td><td align="right" class='awrc'>256</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>93.4</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>Sync ASM rebalance</td><td align="right" class='awrnc'>108</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>7.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>8.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>12.0</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>asynch descriptor resize</td><td align="right" class='awrc'>50</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>86.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>buffer busy waits</td><td align="right" class='awrnc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>control file parallel write</td><td align="right" class='awrc'>600</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>12.8</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>64.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>7.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>4.8</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>control file sequential read</td><td align="right" class='awrnc'>6822</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>15.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>33.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>30.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file async I/O submit</td><td align="right" class='awrc'>13.9K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>92.1</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file parallel write</td><td align="right" class='awrnc'>47.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>7.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>9.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>15.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>23.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>3.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(8)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>db file scattered read</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>26.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>73.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>4.8M</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>13.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>64.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>12.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(1203)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.0(39)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.0(21)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>direct path write</td><td align="right" class='awrc'>9</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>22.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>direct path write temp</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>70.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: AF - task serialization</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CF - contention</td><td align="right" class='awrnc'>94</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>70.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>25.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: CO - master slave det</td><td align="right" class='awrc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>90.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>10.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: CR - block range reuse ckpt</td><td align="right" class='awrnc'>164</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>42.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>27.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: DW - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: FB - contention</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: HW - contention</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: PS - contention</td><td align="right" class='awrnc'>24</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>41.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: RO - fast object reuse</td><td align="right" class='awrc'>41</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>36.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>36.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>19.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TA - contention</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TD - KTF dump entries</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TM - contention</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: TO - contention</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: TX - index contention</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>62.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: US - contention</td><td align="right" class='awrc'>16</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>81.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>enq: WF - contention</td><td align="right" class='awrnc'>30</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>56.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>30.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>enq: WT - contention</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>62.5</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc buffer busy release</td><td align="right" class='awrnc'>46</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>13.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>21.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>28.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>23.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block 2-way</td><td align="right" class='awrc'>6928</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>19.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>53.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>10.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>12.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block busy</td><td align="right" class='awrnc'>38</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>18.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>26.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr block congested</td><td align="right" class='awrc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>28.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block lost</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>57.1</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr disk read</td><td align="right" class='awrc'>15</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>26.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>1.9M</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>51.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>36.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.0(856)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(61)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(16)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr grant busy</td><td align="right" class='awrc'>34.7K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>62.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>24.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>0.0(4)</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant congested</td><td align="right" class='awrnc'>1761</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>17.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>53.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>26.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>3.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc cr multi block mixed</td><td align="right" class='awrc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>27.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>44.4</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block 2-way</td><td align="right" class='awrnc'>19.4K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>25.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>60.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block busy</td><td align="right" class='awrc'>4346</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>26.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>56.2</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>11.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>1.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current block congested</td><td align="right" class='awrnc'>18</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current block lost</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant 2-way</td><td align="right" class='awrnc'>341.5K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.4</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>36.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.0(147)</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.0(7)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.0(2)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant busy</td><td align="right" class='awrc'>6583</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>61.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>24.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>4.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current grant congested</td><td align="right" class='awrnc'>310</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>19.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>53.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>22.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current grant read-mostly invalidation</td><td align="right" class='awrc'>60.7K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>0.0(3)</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.0(21)</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.0(10)</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>35.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>53.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.0(24)</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc current multi block request</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gc current split</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>gc index operation</td><td align="right" class='awrnc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>gcs log flush sync</td><td align="right" class='awrc'>733</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>7.5</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>13.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>16.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>14.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>10.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>5.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>2.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>ges inquiry response</td><td align="right" class='awrnc'>71</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>21.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>56.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>21.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ges resource directory to be unfrozen</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>kjctssqmg: quick message send wait</td><td align="right" class='awrnc'>47</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>6.4</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>31.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>40.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.3</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>ksxr poll remote instances</td><td align="right" class='awrc'>1673</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>80.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>5.3</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>2.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch free</td><td align="right" class='awrnc'>1590</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.7</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>30.9</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>3.8</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>0.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA heap latch</td><td align="right" class='awrc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: MGA shared context latch</td><td align="right" class='awrnc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>66.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: MGA shared context root latch</td><td align="right" class='awrc'>3</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>33.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: cache buffers chains</td><td align="right" class='awrnc'>41</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>7.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>7.3</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>19.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>22.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>9.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: cache buffers lru chain</td><td align="right" class='awrc'>254</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>12.6</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>17.7</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>20.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.9</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>13.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>7.1</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.1</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: call allocation</td><td align="right" class='awrnc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: checkpoint queue latch</td><td align="right" class='awrc'>5</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>40.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: enqueue hash chains</td><td align="right" class='awrnc'>350</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>4.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>14.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>21.1</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>21.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>17.1</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>8.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>0.3</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: gc element</td><td align="right" class='awrc'>377</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>3.7</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>1.1</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>6.6</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>12.2</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>17.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>21.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>18.6</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>3.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>1.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>0.8</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: gcs resource hash</td><td align="right" class='awrnc'>664</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>6.8</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>9.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>16.1</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>17.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>11.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>7.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>3.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: ges resource hash list</td><td align="right" class='awrc'>16</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>6.3</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>18.8</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: messages</td><td align="right" class='awrnc'>15</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>13.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>46.7</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>20.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: object queue header operation</td><td align="right" class='awrc'>34</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>23.5</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>14.7</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>5.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>2.9</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: redo allocation</td><td align="right" class='awrnc'>247</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>13.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.4</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>6.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>19.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>17.8</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>20.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>10.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>latch: redo writing</td><td align="right" class='awrc'>11</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>9.1</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>36.4</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>18.2</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>latch: undo global data</td><td align="right" class='awrnc'>7</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>42.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>14.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>libcache interrupt action by LCK</td><td align="right" class='awrc'>1004</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>91.6</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>4.4</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>0.9</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>0.1</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>library cache lock</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>library cache: mutex X</td><td align="right" class='awrc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>lock deadlock retry</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file parallel write</td><td align="right" class='awrc'>200.7K</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>29.4</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>60.3</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>7.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>2.1</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>0.5</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>0.0(76)</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>0.0(9)</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>0.0(1)</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>log file sequential read</td><td align="right" class='awrnc'>504</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>0.2</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>2.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>22.0</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>2.8</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>26.4</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>19.6</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>20.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>1.2</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>1.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>log file sync</td><td align="right" class='awrc'>6</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>16.7</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>name-service call wait</td><td align="right" class='awrnc'>10</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>oracle thread bootstrap</td><td align="right" class='awrc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>os thread creation</td><td align="right" class='awrnc'>8</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>37.5</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>12.5</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>reliable message</td><td align="right" class='awrc'>72</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>6.9</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>15.3</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>30.6</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>38.9</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>5.6</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>1.4</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>row cache lock</td><td align="right" class='awrnc'>25</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>48.0</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>48.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>4.0</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>transaction</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>undo segment extension</td><td align="right" class='awrnc'>2</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>50.0</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
<tr><td scope="row" class='awrc'>undo_retention publish retry</td><td align="right" class='awrc'>4</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrc'>75.0</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrc'>25.0</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrcrb'>&#160;</td></tr>
<tr><td scope="row" class='awrnc'>wait list latch free</td><td align="right" class='awrnc'>1</td><td align="right" headers="%ofTotalWaits &lt;1us" class='awrnclb'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;4us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512us" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;2ms" class='awrnc'>100.0</td><td align="right" headers="%ofTotalWaits &lt;4ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;8ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;16ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;32ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;64ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;128ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;256ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;512ms" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &lt;1s" class='awrnc'>&#160;</td><td align="right" headers="%ofTotalWaits &gt;=1s" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#621">Back to Wait Events Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="639"></a>
<h2 class="awr">
Global Activity Load Profile
</h2>
<ul>
<li class="awr"><a class="awr" href="#12016">System Statistics</a></li>
<li class="awr"><a class="awr" href="#12017">System Statistics - Per Second</a></li>
<li class="awr"><a class="awr" href="#12018">System Statistics - Per Transaction</a></li>
<li class="awr"><a class="awr" href="#12030">SysStat and Global Messaging  - RAC</a></li>
<li class="awr"><a class="awr" href="#12031">SysStat and Global Messaging (per Sec)- RAC</a></li>
<li class="awr"><a class="awr" href="#12032">SysStat and Global Messaging (per Tx)- RAC</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12016"></a>
<h3 class="awr">System Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads</th><th class="awrbg" scope="col">Physical Reads</th><th class="awrbg" scope="col">Physical Writes</th><th class="awrbg" scope="col">Redo Size (k)</th><th class="awrbg" scope="col">Block Changes</th><th class="awrbg" scope="col">User Calls</th><th class="awrbg" scope="col">Execs</th><th class="awrbg" scope="col">Parses</th><th class="awrbg" scope="col">Logons</th><th class="awrbg" scope="col">Txns</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>5,685,015</td><td align="right" class='awrc'>2,350,386</td><td align="right" class='awrc'>337,949</td><td align="right" class='awrc'>333,551</td><td align="right" class='awrc'>1,001,013</td><td align="right" class='awrc'>181</td><td align="right" class='awrc'>815,374</td><td align="right" class='awrc'>1,343</td><td align="right" class='awrc'>14</td><td align="right" class='awrc'>122,239</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>5,977,657</td><td align="right" class='awrnc'>2,512,565</td><td align="right" class='awrnc'>369,166</td><td align="right" class='awrnc'>355,936</td><td align="right" class='awrnc'>1,067,062</td><td align="right" class='awrnc'>298</td><td align="right" class='awrnc'>868,420</td><td align="right" class='awrnc'>883</td><td align="right" class='awrnc'>13</td><td align="right" class='awrnc'>130,214</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>11,662,672</td><td align="right" class='awrct'>4,862,951</td><td align="right" class='awrct'>707,115</td><td align="right" class='awrct'>689,487</td><td align="right" class='awrct'>2,068,075</td><td align="right" class='awrct'>479</td><td align="right" class='awrct'>1,683,794</td><td align="right" class='awrct'>2,226</td><td align="right" class='awrct'>27</td><td align="right" class='awrct'>252,453</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>5,831,336</td><td align="right" class='awrnc'>2,431,476</td><td align="right" class='awrnc'>353,558</td><td align="right" class='awrnc'>344,743</td><td align="right" class='awrnc'>1,034,038</td><td align="right" class='awrnc'>240</td><td align="right" class='awrnc'>841,897</td><td align="right" class='awrnc'>1,113</td><td align="right" class='awrnc'>14</td><td align="right" class='awrnc'>126,227</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>206,929</td><td align="right" class='awrc'>114,678</td><td align="right" class='awrc'>22,074</td><td align="right" class='awrc'>15,828</td><td align="right" class='awrc'>46,704</td><td align="right" class='awrc'>83</td><td align="right" class='awrc'>37,509</td><td align="right" class='awrc'>325</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>5,639</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12017"></a>
<h3 class="awr">System Statistics - Per Second</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Second"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/s</th><th class="awrbg" scope="col">Physical Reads/s</th><th class="awrbg" scope="col">Physical Writes/s</th><th class="awrbg" scope="col">Redo Size (k)/s</th><th class="awrbg" scope="col">Block Changes/s</th><th class="awrbg" scope="col">User Calls/s</th><th class="awrbg" scope="col">Execs/s</th><th class="awrbg" scope="col">Parses/s</th><th class="awrbg" scope="col">Logons/s</th><th class="awrbg" scope="col">Txns/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>9,405.64</td><td align="right" class='awrc'>3,888.62</td><td align="right" class='awrc'>559.12</td><td align="right" class='awrc'>551.85</td><td align="right" class='awrc'>1,656.14</td><td align="right" class='awrc'>0.30</td><td align="right" class='awrc'>1,349.01</td><td align="right" class='awrc'>2.22</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>202.24</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>9,889.71</td><td align="right" class='awrnc'>4,156.90</td><td align="right" class='awrnc'>610.77</td><td align="right" class='awrnc'>588.88</td><td align="right" class='awrnc'>1,765.40</td><td align="right" class='awrnc'>0.49</td><td align="right" class='awrnc'>1,436.75</td><td align="right" class='awrnc'>1.46</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>215.43</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>19,295.35</td><td align="right" class='awrct'>8,045.53</td><td align="right" class='awrct'>1,169.89</td><td align="right" class='awrct'>1,140.72</td><td align="right" class='awrct'>3,421.53</td><td align="right" class='awrct'>0.79</td><td align="right" class='awrct'>2,785.76</td><td align="right" class='awrct'>3.68</td><td align="right" class='awrct'>0.04</td><td align="right" class='awrct'>417.67</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>9,647.68</td><td align="right" class='awrnc'>4,022.76</td><td align="right" class='awrnc'>584.94</td><td align="right" class='awrnc'>570.36</td><td align="right" class='awrnc'>1,710.77</td><td align="right" class='awrnc'>0.40</td><td align="right" class='awrnc'>1,392.88</td><td align="right" class='awrnc'>1.84</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>208.84</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>342.29</td><td align="right" class='awrc'>189.70</td><td align="right" class='awrc'>36.52</td><td align="right" class='awrc'>26.18</td><td align="right" class='awrc'>77.26</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>62.05</td><td align="right" class='awrc'>0.54</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>9.33</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12018"></a>
<h3 class="awr">System Statistics - Per Transaction</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics - Per Transaction"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Logical Reads/tx</th><th class="awrbg" scope="col">Physical Reads/tx</th><th class="awrbg" scope="col">Physical Writes/tx</th><th class="awrbg" scope="col">Redo Size (k)/tx</th><th class="awrbg" scope="col">Block Changes/tx</th><th class="awrbg" scope="col">User Calls/tx</th><th class="awrbg" scope="col">Execs/tx</th><th class="awrbg" scope="col">Parses/tx</th><th class="awrbg" scope="col">Logons/tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>46.51</td><td align="right" class='awrc'>19.23</td><td align="right" class='awrc'>2.76</td><td align="right" class='awrc'>2.73</td><td align="right" class='awrc'>8.19</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>6.67</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>45.91</td><td align="right" class='awrnc'>19.30</td><td align="right" class='awrnc'>2.84</td><td align="right" class='awrnc'>2.73</td><td align="right" class='awrnc'>8.19</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>6.67</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>46.21</td><td align="right" class='awrct'>19.26</td><td align="right" class='awrct'>2.80</td><td align="right" class='awrct'>2.73</td><td align="right" class='awrct'>8.19</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>6.67</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12030"></a>
<h3 class="awr">SysStat and Global Messaging  - RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging  - RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceived">Blocks Received</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)">CPU (seconds)</th>
<th class="awrbg" colspan=" 6" id="Messages">Messages</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost">Lost</th><th class="awrbg" scope="col" id="Failure">Failure</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceived GCCurrent" class='awrclb'>11,163</td><td align="right" headers="BlocksReceived GCCR" class='awrc'>2,788</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>12,804</td><td align="right" headers="BlocksServed GCCR" class='awrc'>4,260</td><td align="right" headers="CPU(seconds) GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrc'>0</td><td align="right" headers="Messages GCSReceived" class='awrclb'>3,854,093</td><td align="right" headers="Messages GESReceived" class='awrc'>2,180</td><td align="right" headers="Messages GCSSent" class='awrc'>3,823,033</td><td align="right" headers="Messages GESSent" class='awrc'>1,451</td><td align="right" headers="Messages SentDirect" class='awrc'>1,189,230</td><td align="right" headers="Messages SentIndir" class='awrc'>1,454,247</td><td align="right" headers="GCBlks Lost" class='awrclb'>2</td><td align="right" headers="GCCR Failure" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceived GCCurrent" class='awrnclb'>12,789</td><td align="right" headers="BlocksReceived GCCR" class='awrnc'>4,259</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>11,161</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>2,789</td><td align="right" headers="CPU(seconds) GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds) IPC" class='awrnc'>0</td><td align="right" headers="Messages GCSReceived" class='awrnclb'>3,820,452</td><td align="right" headers="Messages GESReceived" class='awrnc'>1,460</td><td align="right" headers="Messages GCSSent" class='awrnc'>3,856,996</td><td align="right" headers="Messages GESSent" class='awrnc'>2,172</td><td align="right" headers="Messages SentDirect" class='awrnc'>1,197,883</td><td align="right" headers="Messages SentIndir" class='awrnc'>1,486,364</td><td align="right" headers="GCBlks Lost" class='awrnclb'>7</td><td align="right" headers="GCCR Failure" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>23,952</td><td align="right" class='awrct'>7,047</td><td align="right" class='awrclbt'>23,965</td><td align="right" class='awrct'>7,049</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>7,674,545</td><td align="right" class='awrct'>3,640</td><td align="right" class='awrct'>7,680,029</td><td align="right" class='awrct'>3,623</td><td align="right" class='awrct'>2,387,113</td><td align="right" class='awrct'>2,940,611</td><td align="right" class='awrclbt'>9</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>11,976</td><td align="right" class='awrnc'>3,524</td><td align="right" class='awrnclb'>11,983</td><td align="right" class='awrnc'>3,525</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>3,837,273</td><td align="right" class='awrnc'>1,820</td><td align="right" class='awrnc'>3,840,015</td><td align="right" class='awrnc'>1,812</td><td align="right" class='awrnc'>1,193,557</td><td align="right" class='awrnc'>1,470,306</td><td align="right" class='awrnclb'>5</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>1,150</td><td align="right" class='awrc'>1,040</td><td align="right" class='awrclb'>1,162</td><td align="right" class='awrc'>1,040</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>23,788</td><td align="right" class='awrc'>509</td><td align="right" class='awrc'>24,015</td><td align="right" class='awrc'>510</td><td align="right" class='awrc'>6,119</td><td align="right" class='awrc'>22,710</td><td align="right" class='awrclb'>4</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12031"></a>
<h3 class="awr">SysStat and Global Messaging (per Sec)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Sec)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedPerSecond">Blocks Received Per Second</th>
<th class="awrbg" colspan=" 2" id="BlocksServedperSecond">Blocks Served per Second</th>
<th class="awrbg" colspan=" 2" id="CPUsecondsperSecond">CPU seconds per Second</th>
<th class="awrbg" colspan=" 6" id="MessagesPerSecond">Messages Per Second</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent</th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/s">Lost/s</th><th class="awrbg" scope="col" id="Fail/s">Fail/s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrclb'>18.47</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrc'>4.61</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrclb'>21.18</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrc'>7.05</td><td align="right" headers="CPUsecondsperSecond GC" class='awrclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrclb'>6,376.45</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrc'>3.61</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrc'>6,325.06</td><td align="right" headers="MessagesPerSecond GESSent" class='awrc'>2.40</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrc'>1,967.54</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrc'>2,406.00</td><td align="right" headers="GCBlks Lost/s" class='awrclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrcbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedPerSecond GCCurrent" class='awrnclb'>21.16</td><td align="right" headers="BlocksReceivedPerSecond GCCR" class='awrnc'>7.05</td><td align="right" headers="BlocksServedperSecond GCCurrent" class='awrnclb'>18.47</td><td align="right" headers="BlocksServedperSecond GCCR" class='awrnc'>4.61</td><td align="right" headers="CPUsecondsperSecond GC" class='awrnclb'>&#160;</td><td align="right" headers="CPUsecondsperSecond IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesPerSecond GCSReceived" class='awrnclb'>6,320.73</td><td align="right" headers="MessagesPerSecond GESReceived" class='awrnc'>2.42</td><td align="right" headers="MessagesPerSecond GCSSent" class='awrnc'>6,381.19</td><td align="right" headers="MessagesPerSecond GESSent" class='awrnc'>3.59</td><td align="right" headers="MessagesPerSecond SentDirect" class='awrnc'>1,981.83</td><td align="right" headers="MessagesPerSecond SentIndir" class='awrnc'>2,459.11</td><td align="right" headers="GCBlks Lost/s" class='awrnclb'>0</td><td align="right" headers="GCCR Fail/s" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>39.63</td><td align="right" class='awrct'>11.66</td><td align="right" class='awrclbt'>39.65</td><td align="right" class='awrct'>11.66</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>12,697.18</td><td align="right" class='awrct'>6.02</td><td align="right" class='awrct'>12,706.25</td><td align="right" class='awrct'>5.99</td><td align="right" class='awrct'>3,949.37</td><td align="right" class='awrct'>4,865.11</td><td align="right" class='awrclbt'>0</td><td align="right" class='awrcbbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>19.81</td><td align="right" class='awrnc'>5.83</td><td align="right" class='awrnclb'>19.82</td><td align="right" class='awrnc'>5.83</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnclb'>6,348.59</td><td align="right" class='awrnc'>3.01</td><td align="right" class='awrnc'>6,353.13</td><td align="right" class='awrnc'>3.00</td><td align="right" class='awrnc'>1,974.68</td><td align="right" class='awrnc'>2,432.55</td><td align="right" class='awrnclb'>0</td><td align="right" class='awrncbb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>1.90</td><td align="right" class='awrc'>1.72</td><td align="right" class='awrclb'>1.92</td><td align="right" class='awrc'>1.72</td><td align="right" class='awrclb'>&#160;</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrclb'>39.40</td><td align="right" class='awrc'>0.84</td><td align="right" class='awrc'>39.69</td><td align="right" class='awrc'>0.84</td><td align="right" class='awrc'>10.11</td><td align="right" class='awrc'>37.56</td><td align="right" class='awrclb'>0</td><td align="right" class='awrcbb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12032"></a>
<h3 class="awr">SysStat and Global Messaging (per Tx)- RAC</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="SysStat and Global Messaging (per Tx)- RAC"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="BlocksReceivedperTx">Blocks Received per Tx</th>
<th class="awrbg" colspan=" 2" id="BlocksServed">Blocks Served</th>
<th class="awrbg" colspan=" 2" id="CPU(seconds)perTx">CPU (seconds) per Tx</th>
<th class="awrbg" colspan=" 6" id="MessagesperTransaction">Messages per Transaction</th>
<th class="awrbg" colspan=" 1" id="GCBlks">GC Blks</th>
<th class="awrbg" colspan=" 1" id="GCCR">GC CR</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GCCurrent">GC Current</th><th class="awrbg" scope="col" id="GCCR">GC CR</th><th class="awrbg" scope="col" id="GC">GC</th><th class="awrbg" scope="col" id="IPC">IPC</th><th class="awrbg" scope="col" id="GCSReceived">GCS Received</th><th class="awrbg" scope="col" id="GESReceived">GES Received</th><th class="awrbg" scope="col" id="GCSSent">GCS Sent</th><th class="awrbg" scope="col" id="GESSent">GES Sent </th><th class="awrbg" scope="col" id="SentDirect">Sent Direct</th><th class="awrbg" scope="col" id="SentIndir">Sent Indir</th><th class="awrbg" scope="col" id="Lost/Tx">Lost/Tx</th><th class="awrbg" scope="col" id="Fail/Tx">Fail/Tx</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrclb'>0.09</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrc'>0.02</td><td align="right" headers="BlocksServed GCCurrent" class='awrclb'>0.10</td><td align="right" headers="BlocksServed GCCR" class='awrc'>0.03</td><td align="right" headers="CPU(seconds)perTx GC" class='awrclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrclb'>31.53</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrc'>0.02</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrc'>31.28</td><td align="right" headers="MessagesperTransaction GESSent" class='awrc'>0.01</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrc'>9.73</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrc'>11.90</td><td align="right" headers="GCBlks Lost/Tx" class='awrclb'>0.00</td><td align="right" headers="GCCR Fail/Tx" class='awrcbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlocksReceivedperTx GCCurrent" class='awrnclb'>0.10</td><td align="right" headers="BlocksReceivedperTx GCCR" class='awrnc'>0.03</td><td align="right" headers="BlocksServed GCCurrent" class='awrnclb'>0.09</td><td align="right" headers="BlocksServed GCCR" class='awrnc'>0.02</td><td align="right" headers="CPU(seconds)perTx GC" class='awrnclb'>&#160;</td><td align="right" headers="CPU(seconds)perTx IPC" class='awrnc'>0.00</td><td align="right" headers="MessagesperTransaction GCSReceived" class='awrnclb'>29.34</td><td align="right" headers="MessagesperTransaction GESReceived" class='awrnc'>0.01</td><td align="right" headers="MessagesperTransaction GCSSent" class='awrnc'>29.62</td><td align="right" headers="MessagesperTransaction GESSent" class='awrnc'>0.02</td><td align="right" headers="MessagesperTransaction SentDirect" class='awrnc'>9.20</td><td align="right" headers="MessagesperTransaction SentIndir" class='awrnc'>11.41</td><td align="right" headers="GCBlks Lost/Tx" class='awrnclb'>0.00</td><td align="right" headers="GCCR Fail/Tx" class='awrncbb'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrclbt'>0.09</td><td align="right" class='awrct'>0.03</td><td align="right" class='awrclbt'>0.10</td><td align="right" class='awrct'>0.03</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrclbt'>30.43</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>30.45</td><td align="right" class='awrct'>0.01</td><td align="right" class='awrct'>9.46</td><td align="right" class='awrct'>11.66</td><td align="right" class='awrclbt'>0.00</td><td align="right" class='awrcbbt'>0.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#639">Back to Global Activity Load Profile</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="605"></a>
<h2 class="awr">
Global Cache and Enqueue Statistics Summary
</h2>
<ul>
<li class="awr"><a class="awr" href="#12019">Global Cache Efficiency Percentages</a></li>
<li class="awr"><a class="awr" href="#12020">Global Latency Characteristics</a></li>
<li class="awr"><a class="awr" href="#12021">Global Messaging Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12019"></a>
<h3 class="awr">Global Cache Efficiency Percentages</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Cache Efficiency Percentages"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="BufferAccess">Buffer Access</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Local%">Local %</th><th class="awrbg" scope="col" id="Remote%">Remote %</th><th class="awrbg" scope="col" id="Disk%">Disk %</th><th class="awrbg" scope="col">Locality %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BufferAccess Local%" class='awrclb'>58.41</td><td align="right" headers="BufferAccess Remote%" class='awrc'>0.25</td><td align="right" headers="BufferAccess Disk%" class='awrcrb'>41.34</td><td align="right" class='awrc'>51.17</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BufferAccess Local%" class='awrnclb'>57.68</td><td align="right" headers="BufferAccess Remote%" class='awrnc'>0.29</td><td align="right" headers="BufferAccess Disk%" class='awrncrb'>42.03</td><td align="right" class='awrnc'>53.61</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12020"></a>
<h3 class="awr">Global Latency Characteristics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Latency Characteristics"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CUBlocks">CU Blocks</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">GE Get Time (us)</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Build|Time(us)">Build Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CRSrvd%">Log Flush CR Srvd %</th><th class="awrbg" scope="col" id="Receive|Time(us)">Receive Time (us)</th><th class="awrbg" scope="col" id="Pin|Time(us)">Pin Time (us)</th><th class="awrbg" scope="col" id="Flush|Time(us)">Flush Time (us)</th><th class="awrbg" scope="col" id="LogFlush|CUSrvd%">Log Flush CU Srvd %</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>45</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrclb'>1216</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrc'>542</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrc'>6857</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrc'>0.82</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrclb'>772</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrc'>0</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrc'>7368</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrcrb'>0.30</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>47</td><td align="right" headers="CRBlocks Receive|Time(us)" class='awrnclb'>1129</td><td align="right" headers="CRBlocks Build|Time(us)" class='awrnc'>470</td><td align="right" headers="CRBlocks Flush|Time(us)" class='awrnc'>3333</td><td align="right" headers="CRBlocks LogFlush|CRSrvd%" class='awrnc'>0.11</td><td align="right" headers="CUBlocks Receive|Time(us)" class='awrnclb'>787</td><td align="right" headers="CUBlocks Pin|Time(us)" class='awrnc'>0</td><td align="right" headers="CUBlocks Flush|Time(us)" class='awrnc'>13143</td><td align="right" headers="CUBlocks LogFlush|CUSrvd%" class='awrncrb'>0.31</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12021"></a>
<h3 class="awr">Global Messaging Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="QueueTime(us)">Queue Time (us)</th>
<th class="awrbg" colspan=" 2" id="ProcessTime(us)">Process Time (us)</th>
<th class="awrbg" colspan=" 3" id="%MessagesSent">% Messages Sent</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Sent">Sent</th><th class="awrbg" scope="col" id="onksxp">on ksxp</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="GCSmsgs">GCS msgs</th><th class="awrbg" scope="col" id="GESmsgs">GES msgs</th><th class="awrbg" scope="col" id="Direct">Direct</th><th class="awrbg" scope="col" id="Indirect">Indirect</th><th class="awrbg" scope="col" id="FlowCtrl">Flow Ctrl</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="QueueTime(us) Sent" class='awrclb'>700</td><td align="right" headers="QueueTime(us) onksxp" class='awrc'>934</td><td align="right" headers="QueueTime(us) Received" class='awrc'>18</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrclb'>41</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrc'>22</td><td align="right" headers="%MessagesSent Direct" class='awrclb'>44.97</td><td align="right" headers="%MessagesSent Indirect" class='awrc'>54.99</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrcrb'>0.04</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="QueueTime(us) Sent" class='awrnclb'>683</td><td align="right" headers="QueueTime(us) onksxp" class='awrnc'>924</td><td align="right" headers="QueueTime(us) Received" class='awrnc'>15</td><td align="right" headers="ProcessTime(us) GCSmsgs" class='awrnclb'>39</td><td align="right" headers="ProcessTime(us) GESmsgs" class='awrnc'>29</td><td align="right" headers="%MessagesSent Direct" class='awrnclb'>44.59</td><td align="right" headers="%MessagesSent Indirect" class='awrnc'>55.32</td><td align="right" headers="%MessagesSent FlowCtrl" class='awrncrb'>0.09</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#605">Back to Global Cache and Enqueue Statistics Summary</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12033"></a>
<h3 class="awr">Global CR Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global CR Server Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 5" id="BlockRequests">Block Requests</th>
<th class="awrbg" colspan=" 5" id="Results">Results</th>
<th class="awrbg" colspan=" 1" id="Fairness">Fairness</th>
<th class="awrbg" colspan=" 1" id="Light">Light</th>
<th class="awrbg" colspan=" 3" id="Total">Total</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="CR">CR</th><th class="awrbg" scope="col" id="CU">CU</th><th class="awrbg" scope="col" id="Data">Data</th><th class="awrbg" scope="col" id="Undo">Undo</th><th class="awrbg" scope="col" id="TX">TX</th><th class="awrbg" scope="col" id="Current">Current</th><th class="awrbg" scope="col" id="Private">Private</th><th class="awrbg" scope="col" id="Zero">Zero</th><th class="awrbg" scope="col" id="DskRd">Dsk Rd</th><th class="awrbg" scope="col" id="Fail">Fail</th><th class="awrbg" scope="col" id="DownConv">Down Conv</th><th class="awrbg" scope="col" id="Works">Works</th><th class="awrbg" scope="col" id="Flushes">Flushes</th><th class="awrbg" scope="col" id="Builds">Builds</th><th class="awrbg" scope="col" id="Errors">Errors</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="BlockRequests CR" class='awrclb'>2,767</td><td align="right" headers="BlockRequests CU" class='awrc'>1,496</td><td align="right" headers="BlockRequests Data" class='awrc'>2,767</td><td align="right" headers="BlockRequests Undo" class='awrc'>2</td><td align="right" headers="BlockRequests TX" class='awrc'>1,481</td><td align="right" headers="Results Current" class='awrclb'>4,251</td><td align="right" headers="Results Private" class='awrc'>0</td><td align="right" headers="Results Zero" class='awrc'>6</td><td align="right" headers="Results DskRd" class='awrc'>6</td><td align="right" headers="Results Fail" class='awrc'>0</td><td align="right" headers="Fairness DownConv" class='awrclb'>2,750</td><td align="right" headers="Light Works" class='awrclb'>1,128</td><td align="right" headers="Total Flushes" class='awrclb'>35</td><td align="right" headers="Total Builds" class='awrc'>2,766</td><td align="right" headers="Total Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="BlockRequests CR" class='awrnclb'>2,761</td><td align="right" headers="BlockRequests CU" class='awrnc'>32</td><td align="right" headers="BlockRequests Data" class='awrnc'>2,761</td><td align="right" headers="BlockRequests Undo" class='awrnc'>0</td><td align="right" headers="BlockRequests TX" class='awrnc'>9</td><td align="right" headers="Results Current" class='awrnclb'>2,784</td><td align="right" headers="Results Private" class='awrnc'>0</td><td align="right" headers="Results Zero" class='awrnc'>0</td><td align="right" headers="Results DskRd" class='awrnc'>9</td><td align="right" headers="Results Fail" class='awrnc'>0</td><td align="right" headers="Fairness DownConv" class='awrnclb'>2,688</td><td align="right" headers="Light Works" class='awrnclb'>1,358</td><td align="right" headers="Total Flushes" class='awrnclb'>3</td><td align="right" headers="Total Builds" class='awrnc'>2,761</td><td align="right" headers="Total Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>5,528</td><td align="right" class='awrct'>1,528</td><td align="right" class='awrct'>5,528</td><td align="right" class='awrct'>2</td><td align="right" class='awrct'>1,490</td><td align="right" class='awrclbt'>7,035</td><td align="right" class='awrct'>0</td><td align="right" class='awrct'>6</td><td align="right" class='awrct'>15</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>5,438</td><td align="right" class='awrclbt'>2,486</td><td align="right" class='awrclbt'>38</td><td align="right" class='awrct'>5,527</td><td align="right" class='awrcrbt'>0</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>2,764</td><td align="right" class='awrnc'>764</td><td align="right" class='awrnc'>2,764</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>745</td><td align="right" class='awrnclb'>3,518</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>2,719</td><td align="right" class='awrnclb'>1,243</td><td align="right" class='awrnclb'>19</td><td align="right" class='awrnc'>2,764</td><td align="right" class='awrncrb'>0</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>4</td><td align="right" class='awrc'>1,035</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>1,041</td><td align="right" class='awrclb'>1,037</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>44</td><td align="right" class='awrclb'>163</td><td align="right" class='awrclb'>23</td><td align="right" class='awrc'>4</td><td align="right" class='awrcrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12034"></a>
<h3 class="awr">Global Current Server Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Global Current Server Statistics"><tr><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Pins</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th><th class="awrbg" scope="col">Flushes</th><th class="awrbg" scope="col">% &lt;100us</th><th class="awrbg" scope="col">% &lt;1ms</th><th class="awrbg" scope="col">% &lt;10ms</th><th class="awrbg" scope="col">% &lt;100ms</th><th class="awrbg" scope="col">% &lt;1s</th><th class="awrbg" scope="col">% &lt;10s</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>75.00</td><td align="right" class='awrc'>25.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>38</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>68.42</td><td align="right" class='awrc'>31.58</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>83.33</td><td align="right" class='awrnc'>16.67</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>65.71</td><td align="right" class='awrnc'>34.29</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrct'>10</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrct'>73</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="607"></a>
<h2 class="awr">
Global Cache Transfer Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12035">Global Cache Transfer Statistics</a></li>
<li class="awr"><a class="awr" href="#12036">Global Cache Transfer (Immediate)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12035"></a>
<h3 class="awr">Global Cache Transfer Statistics</h3>
<ul>
<li class="awr"> Immediate  (Immed) - Block Transfer NOT impacted by Remote Processing Delays </li>
<li class="awr"> Busy	     (Busy) - Block Transfer impacted by Remote Contention </li>
<li class="awr"> Congested  (Cngst) - Block Transfer impacted by Remote System Load </li>
<li class="awr"> All - average time of All blocks (Immed,Busy,Cngst) in us </li>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer Statistics. . Immediate (Immed) - Block Transfer NOT impacted by Remote Processing Delays. Busy (Busy) - Block Transfer impacted by Remote Contention. Congested (Cngst) - Block Transfer impacted by Remote System Load. All - average time of All blocks (Immed,Busy,Cngst) in us. Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 4" id="CRBlocks">CR Blocks</th>
<th class="awrbg" colspan=" 4" id="CurrentBlocks">Current Blocks</th>
<th class="awrbg" colspan=" 4" id="CRAvgTime(us)">CR Avg Time (us)</th>
<th class="awrbg" colspan=" 4" id="CurrentAvgTime(us)">Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%Immed">%Immed</th><th class="awrbg" scope="col" id="%Busy">%Busy</th><th class="awrbg" scope="col" id="%Cngst">%Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th><th class="awrbg" scope="col" id="All">All</th><th class="awrbg" scope="col" id="Immed">Immed</th><th class="awrbg" scope="col" id="Busy">Busy</th><th class="awrbg" scope="col" id="Cngst">Cngst</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>data block</td><td align="right" headers="CRBlocks Received" class='awrclb'>2,761</td><td align="right" headers="CRBlocks %Immed" class='awrc'>99.86</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.07</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.07</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>11,066</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>81.05</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>18.89</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.06</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>1231</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>1226</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>6137</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>2854</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>761</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>729</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>890</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>3680</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>others</td><td align="right" headers="CRBlocks Received" class='awrnclb'>13</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>21</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>76.19</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>23.81</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>457</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>457</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>1498</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>1666</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>964</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrclb'>7</td><td align="right" headers="CRBlocks %Immed" class='awrc'>85.71</td><td align="right" headers="CRBlocks %Busy" class='awrc'>14.29</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>5</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>40.00</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>60.00</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>2263</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>511</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>12776</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>770</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>705</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>814</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclbt'>2</td><td align="right" headers="Instance# Src" class='awrnct'>1</td><td headers="Block Class" class='awrnclbt'>data block</td><td align="right" headers="CRBlocks Received" class='awrnclbt'>2,768</td><td align="right" headers="CRBlocks %Immed" class='awrnct'>99.39</td><td align="right" headers="CRBlocks %Busy" class='awrnct'>0.40</td><td align="right" headers="CRBlocks %Cngst" class='awrnct'>0.22</td><td align="right" headers="CurrentBlocks Received" class='awrnclbt'>12,733</td><td align="right" headers="CurrentBlocks %Immed" class='awrnct'>82.35</td><td align="right" headers="CurrentBlocks %Busy" class='awrnct'>17.55</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnct'>0.09</td><td align="right" headers="CRAvgTime(us) All" class='awrnclbt'>1378</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnct'>1324</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnct'>13034</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnct'>4558</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclbt'>787</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnct'>761</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnct'>896</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrbt'>3227</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="CRBlocks Received" class='awrclb'>1,481</td><td align="right" headers="CRBlocks %Immed" class='awrc'>98.38</td><td align="right" headers="CRBlocks %Busy" class='awrc'>1.62</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>4</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>100.00</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>672</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>584</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>5986</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>2319</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>2319</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>others</td><td align="right" headers="CRBlocks Received" class='awrnclb'>7</td><td align="right" headers="CRBlocks %Immed" class='awrnc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrnc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrnclb'>10</td><td align="right" headers="CurrentBlocks %Immed" class='awrnc'>50.00</td><td align="right" headers="CurrentBlocks %Busy" class='awrnc'>50.00</td><td align="right" headers="CurrentBlocks %Cngst" class='awrnc'>0.00</td><td align="right" headers="CRAvgTime(us) All" class='awrnclb'>673</td><td align="right" headers="CRAvgTime(us) Immed" class='awrnc'>673</td><td align="right" headers="CRAvgTime(us) Busy" class='awrnc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrnc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrnclb'>4786</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrnc'>651</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrnc'>8921</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>undo block</td><td align="right" headers="CRBlocks Received" class='awrclb'>2</td><td align="right" headers="CRBlocks %Immed" class='awrc'>100.00</td><td align="right" headers="CRBlocks %Busy" class='awrc'>0.00</td><td align="right" headers="CRBlocks %Cngst" class='awrc'>0.00</td><td align="right" headers="CurrentBlocks Received" class='awrclb'>0</td><td align="right" headers="CurrentBlocks %Immed" class='awrc'>&#160;</td><td align="right" headers="CurrentBlocks %Busy" class='awrc'>&#160;</td><td align="right" headers="CurrentBlocks %Cngst" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) All" class='awrclb'>435</td><td align="right" headers="CRAvgTime(us) Immed" class='awrc'>435</td><td align="right" headers="CRAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CRAvgTime(us) Cngst" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) All" class='awrclb'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Immed" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Busy" class='awrc'>&#160;</td><td align="right" headers="CurrentAvgTime(us) Cngst" class='awrcrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12036"></a>
<h3 class="awr">Global Cache Transfer (Immediate)</h3>
<ul>
<li class="awr"> Ordered by instance_number, CR + Current Blocks Received desc</li>
</ul>
<table border="0" class="tdiff" summary="Global Cache Transfer (Immediate). . Ordered by instance_number, CR + Current Blocks Received desc"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 1" id="Block">Block</th>
<th class="awrbg" colspan=" 2" id="LostBlocks">Lost Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCRBlocks">Immediate CR Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmediateCurrentBlocks">Immediate Current Blocks</th>
<th class="awrbg" colspan=" 3" id="ImmedCRAvgTime(us)">Immed CR Avg Time (us)</th>
<th class="awrbg" colspan=" 3" id="ImmedCurrentAvgTime(us)">Immed Current Avg Time (us)</th>
</tr><tr>
<th class="awrbg" scope="col" id="Dest">Dest</th><th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Class">Class</th><th class="awrbg" scope="col" id="Count">Count</th><th class="awrbg" scope="col" id="Time(us)">Time(us)</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Received">Received</th><th class="awrbg" scope="col" id="%2-hop">%2-hop</th><th class="awrbg" scope="col" id="%3-hop">%3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="2-hop">2-hop</th><th class="awrbg" scope="col" id="3-hop">3-hop</th></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'>1</td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>data block</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>2,757</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>8,969</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>1226</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>1226</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>729</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>729</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>others</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>13</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>16</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>457</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>457</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>1666</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>1666</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrc'>2</td><td headers="Block Class" class='awrclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>6</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>2</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>511</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>511</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>705</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>705</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Src" class='awrnc'>2</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclbt'>2</td><td align="right" headers="Instance# Src" class='awrct'>1</td><td headers="Block Class" class='awrclbt'>data block</td><td align="right" headers="LostBlocks Count" class='awrclbt'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrct'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclbt'>2,751</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclbt'>10,486</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrct'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrct'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclbt'>1324</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrct'>1324</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrct'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclbt'>761</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrct'>761</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrbt'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo header</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>1,457</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>584</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>584</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrc'>1</td><td headers="Block Class" class='awrclb'>others</td><td align="right" headers="LostBlocks Count" class='awrclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrclb'>7</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrclb'>5</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrc'>100.00</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrc'>0.00</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrclb'>673</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrc'>673</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrclb'>651</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrc'>651</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" headers="Instance# Dest" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Src" class='awrnc'>1</td><td headers="Block Class" class='awrnclb'>undo block</td><td align="right" headers="LostBlocks Count" class='awrnclb'>0</td><td align="right" headers="LostBlocks Time(us)" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCRBlocks Received" class='awrnclb'>2</td><td align="right" headers="ImmediateCRBlocks %2-hop" class='awrnc'>100.00</td><td align="right" headers="ImmediateCRBlocks %3-hop" class='awrnc'>0.00</td><td align="right" headers="ImmediateCurrentBlocks Received" class='awrnclb'>0</td><td align="right" headers="ImmediateCurrentBlocks %2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmediateCurrentBlocks %3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCRAvgTime(us) Total" class='awrnclb'>435</td><td align="right" headers="ImmedCRAvgTime(us) 2-hop" class='awrnc'>435</td><td align="right" headers="ImmedCRAvgTime(us) 3-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) Total" class='awrnclb'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 2-hop" class='awrnc'>&#160;</td><td align="right" headers="ImmedCurrentAvgTime(us) 3-hop" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#607">Back to Global Cache Transfer Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="608"></a>
<h2 class="awr">
Interconnect Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12040">Cluster Interconnect</a></li>
<li class="awr"><a class="awr" href="#12045">Ping Statistics</a></li>
<li class="awr"><a class="awr" href="#12041">Interconnect Client Statistics</a></li>
<li class="awr"><a class="awr" href="#12042">Interconnect Client Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12043">Interconnect Device Statistics</a></li>
<li class="awr"><a class="awr" href="#12044">Interconnect Device Statistics (per Second)</a></li>
<li class="awr"><a class="awr" href="#12078">Dynamic Remastering Statistics</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12040"></a>
<h3 class="awr">Cluster Interconnect</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Cluster Interconnect"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 3" id="Begin">Begin</th>
<th class="awrbg" colspan=" 3" id="End(ifdifferentfromBegin)">End (if different from Begin)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="Pub">Pub</th><th class="awrbg" scope="col" id="Source">Source</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td class='awrc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrclb'>169.254.22.248</td><td headers="Begin Pub" class='awrc'>N</td><td headers="Begin Source" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td class='awrnc'>fg-priv:1</td><td headers="Begin IPAddress" class='awrnclb'>169.254.31.173</td><td headers="Begin Pub" class='awrnc'>N</td><td headers="Begin Source" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) IPAddress" class='awrnclb'>&#160;</td><td headers="End(ifdifferentfromBegin) Pub" class='awrnc'>&#160;</td><td headers="End(ifdifferentfromBegin) Source" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12045"></a>
<h3 class="awr">Ping Statistics</h3>
<ul>
<li class="awr"> Latency of the roundtrip of a message from  Src Instance to the Target instances</li>
</ul>
<table border="0" class="tdiff" summary="Ping Statistics. . Latency of the roundtrip of a message from Src Instance to the Target instances"><tr>
<th class="awrbg" colspan=" 2" id="Instance#">Instance#</th>
<th class="awrbg" colspan=" 3" id="500bytes">500 bytes</th>
<th class="awrbg" colspan=" 3" id="8Kbytes">8 Kbytes</th>
</tr><tr>
<th class="awrbg" scope="col" id="Src">Src</th><th class="awrbg" scope="col" id="Target">Target</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th><th class="awrbg" scope="col" id="Ping|Count">Ping Count</th><th class="awrbg" scope="col" id="Avg|Time(us)">Avg   Time(us)</th><th class="awrbg" scope="col" id="Std|Dev">Std Dev</th></tr>
<tr><td align="right" headers="Instance# Src" class='awrclb'>1</td><td align="right" headers="Instance# Target" class='awrc'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclb'>56</td><td align="right" headers="500bytes Avg|Time(us)" class='awrc'>673</td><td align="right" headers="500bytes Std|Dev" class='awrc'>0.35</td><td align="right" headers="8Kbytes Ping|Count" class='awrclb'>61</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrc'>652</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrb'>0.29</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">1</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>56</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>960</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.55</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>61</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>1086</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.66</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrclbt'>2</td><td align="right" headers="Instance# Target" class='awrct'>1</td><td align="right" headers="500bytes Ping|Count" class='awrclbt'>56</td><td align="right" headers="500bytes Avg|Time(us)" class='awrct'>1159</td><td align="right" headers="500bytes Std|Dev" class='awrct'>0.71</td><td align="right" headers="8Kbytes Ping|Count" class='awrclbt'>61</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrct'>1187</td><td align="right" headers="8Kbytes Std|Dev" class='awrcrbt'>0.72</td></tr>
<tr><td align="right" headers="Instance# Src" class='awrnclb'><div class="hidden">2</div></td><td align="right" headers="Instance# Target" class='awrnc'>2</td><td align="right" headers="500bytes Ping|Count" class='awrnclb'>56</td><td align="right" headers="500bytes Avg|Time(us)" class='awrnc'>668</td><td align="right" headers="500bytes Std|Dev" class='awrnc'>0.60</td><td align="right" headers="8Kbytes Ping|Count" class='awrnclb'>61</td><td align="right" headers="8Kbytes Avg|Time(us)" class='awrnc'>676</td><td align="right" headers="8Kbytes Std|Dev" class='awrncrb'>0.62</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12041"></a>
<h3 class="awr">Interconnect Client Statistics</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB)">Sent (MB)</th>
<th class="awrbg" colspan=" 6" id="Received(MB)">Received (MB)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB) Total" class='awrclb'>1,037.66</td><td align="right" headers="Sent(MB) Cache" class='awrc'>194.94</td><td align="right" headers="Sent(MB) IPQ" class='awrc'>0.15</td><td align="right" headers="Sent(MB) DLM" class='awrc'>825.31</td><td align="right" headers="Sent(MB) PNG" class='awrc'>1.03</td><td align="right" headers="Sent(MB) Misc" class='awrc'>16.23</td><td align="right" headers="Received(MB) Total" class='awrclb'>1,027.06</td><td align="right" headers="Received(MB) Cache" class='awrc'>181.69</td><td align="right" headers="Received(MB) IPQ" class='awrc'>1.07</td><td align="right" headers="Received(MB) DLM" class='awrc'>832.11</td><td align="right" headers="Received(MB) PNG" class='awrc'>1.03</td><td align="right" headers="Received(MB) Misc" class='awrcrb'>11.16</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB) Total" class='awrnclb'>1,028.70</td><td align="right" headers="Sent(MB) Cache" class='awrnc'>182.47</td><td align="right" headers="Sent(MB) IPQ" class='awrnc'>1.07</td><td align="right" headers="Sent(MB) DLM" class='awrnc'>832.97</td><td align="right" headers="Sent(MB) PNG" class='awrnc'>1.03</td><td align="right" headers="Sent(MB) Misc" class='awrnc'>11.16</td><td align="right" headers="Received(MB) Total" class='awrnclb'>1,040.08</td><td align="right" headers="Received(MB) Cache" class='awrnc'>195.82</td><td align="right" headers="Received(MB) IPQ" class='awrnc'>0.15</td><td align="right" headers="Received(MB) DLM" class='awrnc'>826.85</td><td align="right" headers="Received(MB) PNG" class='awrnc'>1.03</td><td align="right" headers="Received(MB) Misc" class='awrncrb'>16.23</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>2,066.36</td><td align="right" class='awrct'>377.41</td><td align="right" class='awrct'>1.23</td><td align="right" class='awrct'>1,658.27</td><td align="right" class='awrct'>2.05</td><td align="right" class='awrct'>27.40</td><td align="right" class='awrclbt'>2,067.14</td><td align="right" class='awrct'>377.51</td><td align="right" class='awrct'>1.23</td><td align="right" class='awrct'>1,658.96</td><td align="right" class='awrct'>2.05</td><td align="right" class='awrcrbt'>27.40</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>1,033.18</td><td align="right" class='awrnc'>188.71</td><td align="right" class='awrnc'>0.61</td><td align="right" class='awrnc'>829.14</td><td align="right" class='awrnc'>1.03</td><td align="right" class='awrnc'>13.70</td><td align="right" class='awrnclb'>1,033.57</td><td align="right" class='awrnc'>188.75</td><td align="right" class='awrnc'>0.61</td><td align="right" class='awrnc'>829.48</td><td align="right" class='awrnc'>1.03</td><td align="right" class='awrncrb'>13.70</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>6.33</td><td align="right" class='awrc'>8.81</td><td align="right" class='awrc'>0.65</td><td align="right" class='awrc'>5.42</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>3.58</td><td align="right" class='awrclb'>9.21</td><td align="right" class='awrc'>9.99</td><td align="right" class='awrc'>0.65</td><td align="right" class='awrc'>3.72</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>3.58</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12042"></a>
<h3 class="awr">Interconnect Client Statistics (per Second)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="Interconnect Client Statistics (per Second)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 6" id="Sent(MB/s)">Sent (MB/s)</th>
<th class="awrbg" colspan=" 6" id="Received(MB/s)">Received (MB/s)</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="Cache">Cache</th><th class="awrbg" scope="col" id="IPQ">IPQ</th><th class="awrbg" scope="col" id="DLM">DLM</th><th class="awrbg" scope="col" id="PNG">PNG</th><th class="awrbg" scope="col" id="Misc">Misc</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sent(MB/s) Total" class='awrclb'>1.72</td><td align="right" headers="Sent(MB/s) Cache" class='awrc'>0.32</td><td align="right" headers="Sent(MB/s) IPQ" class='awrc'>0.00</td><td align="right" headers="Sent(MB/s) DLM" class='awrc'>1.37</td><td align="right" headers="Sent(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrc'>0.03</td><td align="right" headers="Received(MB/s) Total" class='awrclb'>1.70</td><td align="right" headers="Received(MB/s) Cache" class='awrc'>0.30</td><td align="right" headers="Received(MB/s) IPQ" class='awrc'>0.00</td><td align="right" headers="Received(MB/s) DLM" class='awrc'>1.38</td><td align="right" headers="Received(MB/s) PNG" class='awrc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrcrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sent(MB/s) Total" class='awrnclb'>1.70</td><td align="right" headers="Sent(MB/s) Cache" class='awrnc'>0.30</td><td align="right" headers="Sent(MB/s) IPQ" class='awrnc'>0.00</td><td align="right" headers="Sent(MB/s) DLM" class='awrnc'>1.38</td><td align="right" headers="Sent(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Sent(MB/s) Misc" class='awrnc'>0.02</td><td align="right" headers="Received(MB/s) Total" class='awrnclb'>1.72</td><td align="right" headers="Received(MB/s) Cache" class='awrnc'>0.32</td><td align="right" headers="Received(MB/s) IPQ" class='awrnc'>0.00</td><td align="right" headers="Received(MB/s) DLM" class='awrnc'>1.37</td><td align="right" headers="Received(MB/s) PNG" class='awrnc'>0.00</td><td align="right" headers="Received(MB/s) Misc" class='awrncrb'>0.03</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>3.42</td><td align="right" class='awrct'>0.62</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>2.74</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>0.05</td><td align="right" class='awrclbt'>3.42</td><td align="right" class='awrct'>0.62</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrct'>2.74</td><td align="right" class='awrct'>0.00</td><td align="right" class='awrcrbt'>0.05</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>1.71</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.37</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnclb'>1.71</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>1.37</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrncrb'>0.02</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>0.01</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrclb'>0.02</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrcrb'>0.01</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12043"></a>
<h3 class="awr">Interconnect Device Statistics</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> null means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics. . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. null means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>5,073.46</td><td align="right" headers="Sent Packets" class='awrc'>5,662,875</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>5,211.99</td><td align="right" headers="Received Packets" class='awrc'>5,659,867</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>1,836.77</td><td align="right" headers="Sent Packets" class='awrnc'>4,036,922</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1,797.27</td><td align="right" headers="Received Packets" class='awrnc'>4,297,619</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.38</td><td align="right" headers="Sent Packets" class='awrnc'>1,007</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.18</td><td align="right" headers="Received Packets" class='awrnc'>942</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.21</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-storage</td><td headers="Interface IPAddress" class='awrc'>192.168.3.1</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>1.95</td><td align="right" headers="Sent Packets" class='awrc'>3,001</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>1.16</td><td align="right" headers="Received Packets" class='awrc'>3,062</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>lo</td><td headers="Interface IPAddress" class='awrnc'>127.0.0.1</td><td headers="Interface IPMask" class='awrnc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>6.89</td><td align="right" headers="Sent Packets" class='awrnc'>70,276</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>6.89</td><td align="right" headers="Received Packets" class='awrnc'>70,276</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'>2</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.4</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>5,280.93</td><td align="right" headers="Sent Packets" class='awrc'>5,739,236</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>5,003.43</td><td align="right" headers="Received Packets" class='awrc'>5,586,987</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>1,792.35</td><td align="right" headers="Sent Packets" class='awrnc'>4,052,940</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1,841.80</td><td align="right" headers="Received Packets" class='awrnc'>4,300,927</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.31.173</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.18</td><td align="right" headers="Sent Packets" class='awrnc'>941</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.38</td><td align="right" headers="Received Packets" class='awrnc'>1,013</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.23</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.22</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:4</td><td headers="Interface IPAddress" class='awrc'>192.168.1.12</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>1.96</td><td align="right" headers="Sent Packets" class='awrnc'>3,021</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>1.15</td><td align="right" headers="Received Packets" class='awrnc'>3,065</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>29.55</td><td align="right" headers="Sent Packets" class='awrc'>114,702</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>29.55</td><td align="right" headers="Received Packets" class='awrc'>114,702</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>14,024.42</td><td align="right" class='awrnct'>19,684,921</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>13,893.81</td><td align="right" class='awrnct'>20,038,460</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>824.97</td><td align="right" class='awrc'>1,157,937</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>817.28</td><td align="right" class='awrc'>1,178,733</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>1,743.66</td><td align="right" class='awrnc'>2,164,403</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>1,722.41</td><td align="right" class='awrnc'>2,188,238</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12044"></a>
<h3 class="awr">Interconnect Device Statistics (per Second)</h3>
<ul>
<li class="awr"> Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs </li>
<li class="awr"> Blank	means begin value &gt; end value</li>
</ul>
<table border="0" class="tdiff" summary="Interconnect Device Statistics (per Second). . Data is retrieved from underlying Operating system and may overflow on some 32-bit OSs. Blank means begin value &gt; end value"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 3" id="Interface">Interface</th>
<th class="awrbg" colspan=" 6" id="Sent">Sent</th>
<th class="awrbg" colspan=" 6" id="Received">Received</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="NAME">NAME</th><th class="awrbg" scope="col" id="IPAddress">IP Address</th><th class="awrbg" scope="col" id="IPMask">IP Mask</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Carrier|Lost">Carrier Lost</th><th class="awrbg" scope="col" id="MBytes">MBytes</th><th class="awrbg" scope="col" id="Packets">Packets</th><th class="awrbg" scope="col" id="Errors">Errors</th><th class="awrbg" scope="col" id="Packets|Dropped">Packets Dropped</th><th class="awrbg" scope="col" id="Buffer|Ovrrun">Buffer Ovrrun</th><th class="awrbg" scope="col" id="Frame|Errors">Frame Errors</th></tr>
<tr><td align="right" class='awrc'>1</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.5</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>8.39</td><td align="right" headers="Sent Packets" class='awrc'>9,369</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>8.62</td><td align="right" headers="Received Packets" class='awrc'>9,364</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>3.04</td><td align="right" headers="Sent Packets" class='awrnc'>6,679</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>2.97</td><td align="right" headers="Received Packets" class='awrnc'>7,110</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.22.248</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.1</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>2</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>2</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.11</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.21</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrclb'>fg-storage</td><td headers="Interface IPAddress" class='awrc'>192.168.3.1</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>5</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>5</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td headers="Interface NAME" class='awrnclb'>lo</td><td headers="Interface IPAddress" class='awrnc'>127.0.0.1</td><td headers="Interface IPMask" class='awrnc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.01</td><td align="right" headers="Sent Packets" class='awrnc'>116</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.01</td><td align="right" headers="Received Packets" class='awrnc'>116</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'>2</td><td headers="Interface NAME" class='awrclb'>eth0</td><td headers="Interface IPAddress" class='awrc'>10.1.5.4</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>8.74</td><td align="right" headers="Sent Packets" class='awrc'>9,495</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>8.28</td><td align="right" headers="Received Packets" class='awrc'>9,243</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-priv</td><td headers="Interface IPAddress" class='awrnc'>192.168.2.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>2.97</td><td align="right" headers="Sent Packets" class='awrnc'>6,705</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>3.05</td><td align="right" headers="Received Packets" class='awrnc'>7,116</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-priv:1</td><td headers="Interface IPAddress" class='awrc'>169.254.31.173</td><td headers="Interface IPMask" class='awrc'>255.255.224.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>2</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>2</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:1</td><td headers="Interface IPAddress" class='awrc'>192.168.1.23</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-pub:2</td><td headers="Interface IPAddress" class='awrnc'>192.168.1.22</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>0</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>0</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>fg-pub:4</td><td headers="Interface IPAddress" class='awrc'>192.168.1.12</td><td headers="Interface IPMask" class='awrc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.00</td><td align="right" headers="Sent Packets" class='awrc'>0</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.00</td><td align="right" headers="Received Packets" class='awrc'>0</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrnclb'>fg-storage</td><td headers="Interface IPAddress" class='awrnc'>192.168.3.2</td><td headers="Interface IPMask" class='awrnc'>255.255.255.0</td><td align="right" headers="Sent MBytes" class='awrnclb'>0.00</td><td align="right" headers="Sent Packets" class='awrnc'>5</td><td align="right" headers="Sent Errors" class='awrnc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrnc'>0</td><td align="right" headers="Received MBytes" class='awrnclb'>0.00</td><td align="right" headers="Received Packets" class='awrnc'>5</td><td align="right" headers="Received Errors" class='awrnc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrnc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrnc'>0</td><td align="right" headers="Received Frame|Errors" class='awrncrb'>0</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td headers="Interface NAME" class='awrclb'>lo</td><td headers="Interface IPAddress" class='awrc'>127.0.0.1</td><td headers="Interface IPMask" class='awrc'>255.0.0.0</td><td align="right" headers="Sent MBytes" class='awrclb'>0.05</td><td align="right" headers="Sent Packets" class='awrc'>190</td><td align="right" headers="Sent Errors" class='awrc'>0</td><td align="right" headers="Sent Packets|Dropped" class='awrc'>0</td><td align="right" headers="Sent Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Sent Carrier|Lost" class='awrc'>0</td><td align="right" headers="Received MBytes" class='awrclb'>0.05</td><td align="right" headers="Received Packets" class='awrc'>190</td><td align="right" headers="Received Errors" class='awrc'>0</td><td align="right" headers="Received Packets|Dropped" class='awrc'>0</td><td align="right" headers="Received Buffer|Ovrrun" class='awrc'>0</td><td align="right" headers="Received Frame|Errors" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnct'>Sum</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclbt'>23.20</td><td align="right" class='awrnct'>32,568</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnclbt'>22.99</td><td align="right" class='awrnct'>33,153</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrnct'>0</td><td align="right" class='awrncrbt'>0</td></tr>
<tr><td align="right" class='awrc'>Avg</td><td class='awrclb'>&#160;</td><td class='awrc'>&#160;</td><td class='awrc'>&#160;</td><td align="right" class='awrclb'>1.36</td><td align="right" class='awrc'>1,916</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrclb'>1.35</td><td align="right" class='awrc'>1,950</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrcrb'>0</td></tr>
<tr><td align="right" class='awrnc'>Std</td><td class='awrnclb'>&#160;</td><td class='awrnc'>&#160;</td><td class='awrnc'>&#160;</td><td align="right" class='awrnclb'>2.88</td><td align="right" class='awrnc'>3,581</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnclb'>2.85</td><td align="right" class='awrnc'>3,620</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrncrb'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12078"></a>
<h3 class="awr">Dynamic Remastering Statistics</h3>
<ul>
<li class="awr"> Affinity Objects - Affinity objects remastered at the begin/end snapshot  </li>
<li class="awr"> Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot</li>
</ul>
<table border="0" class="tdiff" summary="Dynamic Remastering Statistics. . Affinity Objects - Affinity objects remastered at the begin/end snapshot . Read-mostly objects - Read-mostly objects remastered at the begin/end snapshot"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="CountsperOps">Counts per Ops</th>
<th class="awrbg" colspan=" 6" id="TimeperOps(seconds)">Time per Ops (seconds)</th>
<th class="awrbg" colspan=" 2" id="AffinityObjects">Affinity Objects</th>
<th class="awrbg" colspan=" 3" id="ReadMostlyObjects">Read Mostly Objects</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Remaster Ops</th><th class="awrbg" scope="col" id="Remastered|Objects">Remastered Objects</th><th class="awrbg" scope="col" id="ReplayLocks|Received">Replay Locks Received</th><th class="awrbg" scope="col" id="ReplayLocks|Sent">Replay Locks Sent</th><th class="awrbg" scope="col" id="Resources|Cleaned">Resources Cleaned</th><th class="awrbg" scope="col" id="Remaster">Remaster</th><th class="awrbg" scope="col" id="Freeze">Freeze</th><th class="awrbg" scope="col" id="Cleanup">Cleanup</th><th class="awrbg" scope="col" id="Replay">Replay</th><th class="awrbg" scope="col" id="Fixwrite">Fixwrite</th><th class="awrbg" scope="col" id="Sync">Sync</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="Begin|(persistent)">Begin (persistent)</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrclb'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrc'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrc'>&#160;</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrclb'>&#160;</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrc'>&#160;</td><td align="right" headers="AffinityObjects Begin" class='awrclb'>1</td><td align="right" headers="AffinityObjects End" class='awrc'>1</td><td align="right" headers="ReadMostlyObjects Begin" class='awrclb'>3</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrc'>3</td><td align="right" headers="ReadMostlyObjects End" class='awrcrb'>3</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" headers="CountsperOps Remastered|Objects" class='awrnclb'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Received" class='awrnc'>&#160;</td><td align="right" headers="CountsperOps ReplayLocks|Sent" class='awrnc'>&#160;</td><td align="right" headers="CountsperOps Resources|Cleaned" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Remaster" class='awrnclb'>&#160;</td><td align="right" headers="TimeperOps(seconds) Freeze" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Cleanup" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Replay" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Fixwrite" class='awrnc'>&#160;</td><td align="right" headers="TimeperOps(seconds) Sync" class='awrnc'>&#160;</td><td align="right" headers="AffinityObjects Begin" class='awrnclb'>1</td><td align="right" headers="AffinityObjects End" class='awrnc'>1</td><td align="right" headers="ReadMostlyObjects Begin" class='awrnclb'>3</td><td align="right" headers="ReadMostlyObjects Begin|(persistent)" class='awrnc'>3</td><td align="right" headers="ReadMostlyObjects End" class='awrncrb'>3</td></tr>
<tr><td align="right" scope="row" class='awrct'>Avg</td><td align="right" class='awrct'>0</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrct'>&#160;</td><td align="right" class='awrclbt'>1</td><td align="right" class='awrct'>1</td><td align="right" class='awrclbt'>3</td><td align="right" class='awrct'>3</td><td align="right" class='awrcrbt'>3</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Max</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnclb'>1</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnclb'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrncrb'>3</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#608">Back to Interconnect Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="622"></a>
<h2 class="awr">
SQL Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12060">SQL ordered by Elapsed Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12061">SQL ordered by CPU Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12066">SQL ordered by User I/O Time (Global)</a></li>
<li class="awr"><a class="awr" href="#12062">SQL ordered by Gets (Global)</a></li>
<li class="awr"><a class="awr" href="#12063">SQL ordered by Reads (Global)</a></li>
<li class="awr"><a class="awr" href="#12081">SQL ordered by UnOptimized Read Requests (Global)</a></li>
<li class="awr"><a class="awr" href="#12065">SQL ordered by Executions (Global)</a></li>
<li class="awr"><a class="awr" href="#12064">SQL ordered by Cluster Wait Time (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12060"></a>
<h3 class="awr">SQL ordered by Elapsed Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   98.1% of Total DB Time (s):		22,786</li>
<li class="awr">Captured PL/SQL account for   99.8% of Total DB Time (s):	   22,786</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Elapsed Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>18,830.31</td><td align="right" headers="Total CPU(s)" class='awrc'>1,242.45</td><td align="right" headers="Total IOWait(s)" class='awrc'>16,916.64</td><td align="right" headers="Total Gets" class='awrc'>8,562,374</td><td align="right" headers="Total Reads" class='awrc'>4,118,419</td><td align="right" headers="Total Rows" class='awrc'>1,425,187</td><td align="right" headers="Total Cluster(s)" class='awrc'>1,217.41</td><td align="right" headers="Total Execs" class='awrc'>1,425,154</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>82.64</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>66.96</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.85</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>73.42</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.69</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>79.49</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.64</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>3,507.92</td><td align="right" headers="Total CPU(s)" class='awrnc'>275.55</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,010.67</td><td align="right" headers="Total Gets" class='awrnc'>1,818,949</td><td align="right" headers="Total Reads" class='awrnc'>726,417</td><td align="right" headers="Total Rows" class='awrnc'>754,482</td><td align="right" headers="Total Cluster(s)" class='awrnc'>303.87</td><td align="right" headers="Total Execs" class='awrnc'>251,494</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>15.39</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.85</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.15</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>15.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.94</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>19.84</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.94</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#gx190gu1265d2">gx190gu1265d2</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.93</td><td align="right" headers="Total CPU(s)" class='awrc'>42.91</td><td align="right" headers="Total IOWait(s)" class='awrc'>498.56</td><td align="right" headers="Total Gets" class='awrc'>236,249</td><td align="right" headers="Total Reads" class='awrc'>108,351</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>41.66</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.93</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>42.91</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>498.56</td><td align="right" headers="PerExecution Gets" class='awrc'>236,249.00</td><td align="right" headers="PerExecution Reads" class='awrc'>108,351.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>41.66</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.31</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.03</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.23</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.72</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.93</td><td align="right" headers="Total CPU(s)" class='awrnc'>50.19</td><td align="right" headers="Total IOWait(s)" class='awrnc'>495.46</td><td align="right" headers="Total Gets" class='awrnc'>311,785</td><td align="right" headers="Total Reads" class='awrnc'>141,040</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>38.24</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.93</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>50.19</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>495.46</td><td align="right" headers="PerExecution Gets" class='awrnc'>311,785.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>141,040.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>38.24</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.70</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.67</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.90</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#30ha31267a7s2">30ha31267a7s2</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.93</td><td align="right" headers="Total CPU(s)" class='awrc'>48.44</td><td align="right" headers="Total IOWait(s)" class='awrc'>493.07</td><td align="right" headers="Total Gets" class='awrc'>276,710</td><td align="right" headers="Total Reads" class='awrc'>126,105</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>43.14</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.93</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>48.44</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>493.07</td><td align="right" headers="PerExecution Gets" class='awrc'>276,710.00</td><td align="right" headers="PerExecution Reads" class='awrc'>126,105.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>43.14</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.61</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.37</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.82</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5q1jyzmr30cf9">5q1jyzmr30cf9</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.93</td><td align="right" headers="Total CPU(s)" class='awrnc'>47.10</td><td align="right" headers="Total IOWait(s)" class='awrnc'>494.28</td><td align="right" headers="Total Gets" class='awrnc'>267,284</td><td align="right" headers="Total Reads" class='awrnc'>122,117</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>42.57</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.93</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>47.10</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>494.28</td><td align="right" headers="PerExecution Gets" class='awrnc'>267,284.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>122,117.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>42.57</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.54</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.29</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.51</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.78</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.92</td><td align="right" headers="Total CPU(s)" class='awrc'>50.84</td><td align="right" headers="Total IOWait(s)" class='awrc'>493.51</td><td align="right" headers="Total Gets" class='awrc'>308,873</td><td align="right" headers="Total Reads" class='awrc'>139,747</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>40.44</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.92</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>50.84</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>493.51</td><td align="right" headers="PerExecution Gets" class='awrc'>308,873.00</td><td align="right" headers="PerExecution Reads" class='awrc'>139,747.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>40.44</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.74</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.65</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.87</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.64</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#cjr4y9wb6w69d">cjr4y9wb6w69d</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.92</td><td align="right" headers="Total CPU(s)" class='awrnc'>46.51</td><td align="right" headers="Total IOWait(s)" class='awrnc'>496.39</td><td align="right" headers="Total Gets" class='awrnc'>278,922</td><td align="right" headers="Total Reads" class='awrnc'>127,114</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>40.33</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.92</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>46.51</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>496.39</td><td align="right" headers="PerExecution Gets" class='awrnc'>278,922.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>127,114.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>40.33</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.51</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.02</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.39</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.61</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.63</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#72r567f4w1r2z">72r567f4w1r2z</a></td><td align="right" headers="Total Elapsed(s)" class='awrclb'>568.91</td><td align="right" headers="Total CPU(s)" class='awrc'>45.23</td><td align="right" headers="Total IOWait(s)" class='awrc'>503.36</td><td align="right" headers="Total Gets" class='awrc'>250,447</td><td align="right" headers="Total Reads" class='awrc'>114,102</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>35.00</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>568.91</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>45.23</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>503.36</td><td align="right" headers="PerExecution Gets" class='awrc'>250,447.00</td><td align="right" headers="PerExecution Reads" class='awrc'>114,102.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>35.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrclb'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.44</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.15</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.35</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.29</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#6x8682kb2y8vd">6x8682kb2y8vd</a></td><td align="right" headers="Total Elapsed(s)" class='awrnclb'>568.91</td><td align="right" headers="Total CPU(s)" class='awrnc'>45.06</td><td align="right" headers="Total IOWait(s)" class='awrnc'>504.19</td><td align="right" headers="Total Gets" class='awrnc'>249,075</td><td align="right" headers="Total Reads" class='awrnc'>113,318</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>34.74</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>568.91</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>45.06</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>504.19</td><td align="right" headers="PerExecution Gets" class='awrnc'>249,075.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>113,318.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>34.74</td><td align="right" headers="PercentageofTotal DBtime" class='awrnclb'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.43</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.03</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.14</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.33</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.27</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12061"></a>
<h3 class="awr">SQL ordered by CPU Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   82.0% of Total CPU Time (s): 	  1,855</li>
<li class="awr">Captured PL/SQL account for   99.8% of Total CPU Time (s):	     1,855</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by CPU Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>1,242.45</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,830.31</td><td align="right" headers="Total IOWait(s)" class='awrc'>16,916.64</td><td align="right" headers="Total Gets" class='awrc'>8,562,374</td><td align="right" headers="Total Reads" class='awrc'>4,118,419</td><td align="right" headers="Total Rows" class='awrc'>1,425,187</td><td align="right" headers="Total Cluster(s)" class='awrc'>1,217.41</td><td align="right" headers="Total Execs" class='awrc'>1,425,154</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>66.96</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.64</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.75</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>73.42</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.69</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>79.49</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.64</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>275.55</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,507.92</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,010.67</td><td align="right" headers="Total Gets" class='awrnc'>1,818,949</td><td align="right" headers="Total Reads" class='awrnc'>726,417</td><td align="right" headers="Total Rows" class='awrnc'>754,482</td><td align="right" headers="Total Cluster(s)" class='awrnc'>303.87</td><td align="right" headers="Total Execs" class='awrnc'>251,494</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>14.85</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.39</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.08</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>15.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.94</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>19.84</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.94</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>55.30</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.79</td><td align="right" headers="Total IOWait(s)" class='awrc'>482.32</td><td align="right" headers="Total Gets" class='awrc'>296,541</td><td align="right" headers="Total Reads" class='awrc'>134,631</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>48.25</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>55.30</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.79</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>482.32</td><td align="right" headers="PerExecution Gets" class='awrc'>296,541.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,631.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>48.25</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>2.98</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.42</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.54</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.77</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.15</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>54.88</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="Total IOWait(s)" class='awrnc'>486.32</td><td align="right" headers="Total Gets" class='awrnc'>302,862</td><td align="right" headers="Total Reads" class='awrnc'>137,221</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>44.13</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>54.88</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>486.32</td><td align="right" headers="PerExecution Gets" class='awrnc'>302,862.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>137,221.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>44.13</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>2.96</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.44</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.82</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.88</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>54.56</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="Total IOWait(s)" class='awrc'>487.74</td><td align="right" headers="Total Gets" class='awrc'>306,580</td><td align="right" headers="Total Reads" class='awrc'>138,731</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>43.42</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>54.56</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>487.74</td><td align="right" headers="PerExecution Gets" class='awrc'>306,580.00</td><td align="right" headers="PerExecution Reads" class='awrc'>138,731.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>43.42</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>2.94</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.44</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.63</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.85</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.84</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>50.84</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.92</td><td align="right" headers="Total IOWait(s)" class='awrnc'>493.51</td><td align="right" headers="Total Gets" class='awrnc'>308,873</td><td align="right" headers="Total Reads" class='awrnc'>139,747</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>40.44</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>50.84</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.92</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>493.51</td><td align="right" headers="PerExecution Gets" class='awrnc'>308,873.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>139,747.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>40.44</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>2.74</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.47</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.65</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.87</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.64</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>50.82</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.07</td><td align="right" headers="Total IOWait(s)" class='awrc'>494.08</td><td align="right" headers="Total Gets" class='awrc'>283,608</td><td align="right" headers="Total Reads" class='awrc'>128,992</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>39.45</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>50.82</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.07</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>494.08</td><td align="right" headers="PerExecution Gets" class='awrc'>283,608.00</td><td align="right" headers="PerExecution Reads" class='awrc'>128,992.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>39.45</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>2.74</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.48</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.43</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.65</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#7m9rphfj2sxqy">7m9rphfj2sxqy</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>50.45</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.84</td><td align="right" headers="Total IOWait(s)" class='awrnc'>494.41</td><td align="right" headers="Total Gets" class='awrnc'>282,189</td><td align="right" headers="Total Reads" class='awrnc'>128,317</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>39.52</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>50.45</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.84</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>494.41</td><td align="right" headers="PerExecution Gets" class='awrnc'>282,189.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>128,317.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>39.52</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>2.72</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.48</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.42</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.64</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td><td align="right" headers="Total CPU(s)" class='awrclb'>50.19</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.93</td><td align="right" headers="Total IOWait(s)" class='awrc'>495.46</td><td align="right" headers="Total Gets" class='awrc'>311,785</td><td align="right" headers="Total Reads" class='awrc'>141,040</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>38.24</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrclb'>50.19</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.93</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>495.46</td><td align="right" headers="PerExecution Gets" class='awrc'>311,785.00</td><td align="right" headers="PerExecution Reads" class='awrc'>141,040.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>38.24</td><td align="right" headers="PercentageofTotal DBCPU" class='awrclb'>2.70</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.48</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.67</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.90</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td><td align="right" headers="Total CPU(s)" class='awrnclb'>50.00</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.61</td><td align="right" headers="Total IOWait(s)" class='awrnc'>489.85</td><td align="right" headers="Total Gets" class='awrnc'>258,660</td><td align="right" headers="Total Reads" class='awrnc'>117,715</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>44.97</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution CPU(s)" class='awrnclb'>50.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.61</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>489.85</td><td align="right" headers="PerExecution Gets" class='awrnc'>258,660.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>117,715.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>44.97</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnclb'>2.69</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.45</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.22</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.42</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.94</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12066"></a>
<h3 class="awr">SQL ordered by User I/O Time (Global)</h3>
<ul>
<li class="awr">Captured SQL account for   99.8% of Total User I/O Wait Time (s):	   19,961</li>
<li class="awr">Captured PL/SQL account for  100.0% of Total User I/O Wait Time (s):	      19,961</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by User I/O Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>16,916.64</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,830.31</td><td align="right" headers="Total CPU(s)" class='awrc'>1,242.45</td><td align="right" headers="Total Gets" class='awrc'>8,562,374</td><td align="right" headers="Total Reads" class='awrc'>4,118,419</td><td align="right" headers="Total Rows" class='awrc'>1,425,187</td><td align="right" headers="Total Cluster(s)" class='awrc'>1,217.41</td><td align="right" headers="Total Execs" class='awrc'>1,425,154</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>84.75</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.64</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>66.96</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>73.42</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.69</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>79.49</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.64</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>3,010.67</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,507.92</td><td align="right" headers="Total CPU(s)" class='awrnc'>275.55</td><td align="right" headers="Total Gets" class='awrnc'>1,818,949</td><td align="right" headers="Total Reads" class='awrnc'>726,417</td><td align="right" headers="Total Rows" class='awrnc'>754,482</td><td align="right" headers="Total Cluster(s)" class='awrnc'>303.87</td><td align="right" headers="Total Execs" class='awrnc'>251,494</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>0.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>15.08</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.39</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.85</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>15.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.94</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>19.84</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.94</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>495.46</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.93</td><td align="right" headers="Total CPU(s)" class='awrc'>50.19</td><td align="right" headers="Total Gets" class='awrc'>311,785</td><td align="right" headers="Total Reads" class='awrc'>141,040</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>38.24</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>495.46</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.93</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>50.19</td><td align="right" headers="PerExecution Gets" class='awrc'>311,785.00</td><td align="right" headers="PerExecution Reads" class='awrc'>141,040.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>38.24</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.48</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.70</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.67</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.90</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#7m9rphfj2sxqy">7m9rphfj2sxqy</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>494.41</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.84</td><td align="right" headers="Total CPU(s)" class='awrnc'>50.45</td><td align="right" headers="Total Gets" class='awrnc'>282,189</td><td align="right" headers="Total Reads" class='awrnc'>128,317</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>39.52</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>494.41</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.84</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>50.45</td><td align="right" headers="PerExecution Gets" class='awrnc'>282,189.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>128,317.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>39.52</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.48</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.72</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.42</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.64</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>494.08</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.07</td><td align="right" headers="Total CPU(s)" class='awrc'>50.82</td><td align="right" headers="Total Gets" class='awrc'>283,608</td><td align="right" headers="Total Reads" class='awrc'>128,992</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>39.45</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>494.08</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.07</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>50.82</td><td align="right" headers="PerExecution Gets" class='awrc'>283,608.00</td><td align="right" headers="PerExecution Reads" class='awrc'>128,992.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>39.45</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.48</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.74</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.43</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.65</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>493.51</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.92</td><td align="right" headers="Total CPU(s)" class='awrnc'>50.84</td><td align="right" headers="Total Gets" class='awrnc'>308,873</td><td align="right" headers="Total Reads" class='awrnc'>139,747</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>40.44</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>493.51</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.92</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>50.84</td><td align="right" headers="PerExecution Gets" class='awrnc'>308,873.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>139,747.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>40.44</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.47</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.74</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.65</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.87</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.64</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>489.85</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.61</td><td align="right" headers="Total CPU(s)" class='awrc'>50.00</td><td align="right" headers="Total Gets" class='awrc'>258,660</td><td align="right" headers="Total Reads" class='awrc'>117,715</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>44.97</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>489.85</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.61</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>50.00</td><td align="right" headers="PerExecution Gets" class='awrc'>258,660.00</td><td align="right" headers="PerExecution Reads" class='awrc'>117,715.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>44.97</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.45</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.69</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.22</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.42</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.94</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>487.74</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="Total CPU(s)" class='awrnc'>54.56</td><td align="right" headers="Total Gets" class='awrnc'>306,580</td><td align="right" headers="Total Reads" class='awrnc'>138,731</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>43.42</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>487.74</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>54.56</td><td align="right" headers="PerExecution Gets" class='awrnc'>306,580.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>138,731.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>43.42</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.44</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.94</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.63</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.85</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.84</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td><td align="right" headers="Total IOWait(s)" class='awrclb'>486.32</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="Total CPU(s)" class='awrc'>54.88</td><td align="right" headers="Total Gets" class='awrc'>302,862</td><td align="right" headers="Total Reads" class='awrc'>137,221</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>44.13</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrclb'>486.32</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>54.88</td><td align="right" headers="PerExecution Gets" class='awrc'>302,862.00</td><td align="right" headers="PerExecution Reads" class='awrc'>137,221.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>44.13</td><td align="right" headers="PercentageofTotal IOWait" class='awrclb'>2.44</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.96</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.60</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.82</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.88</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td><td align="right" headers="Total IOWait(s)" class='awrnclb'>482.32</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.79</td><td align="right" headers="Total CPU(s)" class='awrnc'>55.30</td><td align="right" headers="Total Gets" class='awrnc'>296,541</td><td align="right" headers="Total Reads" class='awrnc'>134,631</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>48.25</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution IOWait(s)" class='awrnclb'>482.32</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.79</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>55.30</td><td align="right" headers="PerExecution Gets" class='awrnc'>296,541.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,631.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>48.25</td><td align="right" headers="PercentageofTotal IOWait" class='awrnclb'>2.42</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.98</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.54</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.77</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.15</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12062"></a>
<h3 class="awr">SQL ordered by Gets (Global)</h3>
<ul>
<li class="awr">Total Buffer Gets:	11,662,672</li>
<li class="awr">Captured SQL account for   89.3% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Gets (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Gets" class='awrclb'>8,562,374</td><td align="right" headers="Total Reads" class='awrc'>4,118,419</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,830.31</td><td align="right" headers="Total CPU(s)" class='awrc'>1,242.45</td><td align="right" headers="Total IOWait(s)" class='awrc'>16,916.64</td><td align="right" headers="Total Rows" class='awrc'>1,425,187</td><td align="right" headers="Total Cluster(s)" class='awrc'>1,217.41</td><td align="right" headers="Total Execs" class='awrc'>1,425,154</td><td align="right" headers="PerExecution Gets" class='awrclb'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.89</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>73.42</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.69</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.64</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>66.96</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.75</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>79.49</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.64</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Gets" class='awrnclb'>1,818,949</td><td align="right" headers="Total Reads" class='awrnc'>726,417</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,507.92</td><td align="right" headers="Total CPU(s)" class='awrnc'>275.55</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,010.67</td><td align="right" headers="Total Rows" class='awrnc'>754,482</td><td align="right" headers="Total Cluster(s)" class='awrnc'>303.87</td><td align="right" headers="Total Execs" class='awrnc'>251,494</td><td align="right" headers="PerExecution Gets" class='awrnclb'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>15.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.94</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.39</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.85</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.08</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>19.84</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.94</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td><td align="right" headers="Total Gets" class='awrclb'>311,785</td><td align="right" headers="Total Reads" class='awrc'>141,040</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.93</td><td align="right" headers="Total CPU(s)" class='awrc'>50.19</td><td align="right" headers="Total IOWait(s)" class='awrc'>495.46</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>38.24</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>311,785.00</td><td align="right" headers="PerExecution Reads" class='awrc'>141,040.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.93</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>50.19</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>495.46</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>38.24</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>2.67</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.90</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.70</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td><td align="right" headers="Total Gets" class='awrnclb'>308,873</td><td align="right" headers="Total Reads" class='awrnc'>139,747</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.92</td><td align="right" headers="Total CPU(s)" class='awrnc'>50.84</td><td align="right" headers="Total IOWait(s)" class='awrnc'>493.51</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>40.44</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>308,873.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>139,747.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.92</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>50.84</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>493.51</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>40.44</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.65</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.87</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.74</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.47</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.64</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td><td align="right" headers="Total Gets" class='awrclb'>306,580</td><td align="right" headers="Total Reads" class='awrc'>138,731</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="Total CPU(s)" class='awrc'>54.56</td><td align="right" headers="Total IOWait(s)" class='awrc'>487.74</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>43.42</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>306,580.00</td><td align="right" headers="PerExecution Reads" class='awrc'>138,731.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>54.56</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>487.74</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>43.42</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>2.63</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.85</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.94</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.44</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.84</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td><td align="right" headers="Total Gets" class='awrnclb'>302,862</td><td align="right" headers="Total Reads" class='awrnc'>137,221</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="Total CPU(s)" class='awrnc'>54.88</td><td align="right" headers="Total IOWait(s)" class='awrnc'>486.32</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>44.13</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>302,862.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>137,221.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>54.88</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>486.32</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>44.13</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.82</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.96</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.44</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.88</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td><td align="right" headers="Total Gets" class='awrclb'>296,541</td><td align="right" headers="Total Reads" class='awrc'>134,631</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.79</td><td align="right" headers="Total CPU(s)" class='awrc'>55.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>482.32</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>48.25</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>296,541.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,631.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.79</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>55.30</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>482.32</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>48.25</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>2.54</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.77</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.98</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.42</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.15</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td><td align="right" headers="Total Gets" class='awrnclb'>294,859</td><td align="right" headers="Total Reads" class='awrnc'>134,106</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.84</td><td align="right" headers="Total CPU(s)" class='awrnc'>40.55</td><td align="right" headers="Total IOWait(s)" class='awrnc'>512.81</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>27.69</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>294,859.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,106.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.84</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>40.55</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>512.81</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>27.69</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.53</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.76</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.57</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.81</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td><td align="right" headers="Total Gets" class='awrclb'>290,268</td><td align="right" headers="Total Reads" class='awrc'>132,338</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.69</td><td align="right" headers="Total CPU(s)" class='awrc'>38.06</td><td align="right" headers="Total IOWait(s)" class='awrc'>514.49</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>27.65</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Gets" class='awrclb'>290,268.00</td><td align="right" headers="PerExecution Reads" class='awrc'>132,338.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.69</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>38.06</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>514.49</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>27.65</td><td align="right" headers="PercentageofTotal Gets" class='awrclb'>2.49</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.72</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.05</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.81</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td><td align="right" headers="Total Gets" class='awrnclb'>288,926</td><td align="right" headers="Total Reads" class='awrnc'>131,683</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.57</td><td align="right" headers="Total CPU(s)" class='awrnc'>37.80</td><td align="right" headers="Total IOWait(s)" class='awrnc'>514.39</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>27.73</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Gets" class='awrnclb'>288,926.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>131,683.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.57</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>37.80</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>514.39</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>27.73</td><td align="right" headers="PercentageofTotal Gets" class='awrnclb'>2.48</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.71</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.81</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12063"></a>
<h3 class="awr">SQL ordered by Reads (Global)</h3>
<ul>
<li class="awr">Total Disk Reads:	4,862,951</li>
<li class="awr">Captured SQL account for   99.6% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Reads (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Reads" class='awrclb'>4,118,419</td><td align="right" headers="Total Gets" class='awrc'>8,562,374</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,830.31</td><td align="right" headers="Total CPU(s)" class='awrc'>1,242.45</td><td align="right" headers="Total IOWait(s)" class='awrc'>16,916.64</td><td align="right" headers="Total Rows" class='awrc'>1,425,187</td><td align="right" headers="Total Cluster(s)" class='awrc'>1,217.41</td><td align="right" headers="Total Execs" class='awrc'>1,425,154</td><td align="right" headers="PerExecution Reads" class='awrclb'>2.89</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>84.69</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>73.42</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.64</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>66.96</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.75</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>79.49</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.64</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Reads" class='awrnclb'>726,417</td><td align="right" headers="Total Gets" class='awrnc'>1,818,949</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,507.92</td><td align="right" headers="Total CPU(s)" class='awrnc'>275.55</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,010.67</td><td align="right" headers="Total Rows" class='awrnc'>754,482</td><td align="right" headers="Total Cluster(s)" class='awrnc'>303.87</td><td align="right" headers="Total Execs" class='awrnc'>251,494</td><td align="right" headers="PerExecution Reads" class='awrnclb'>2.89</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>14.94</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>15.60</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.39</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.85</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.08</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>19.84</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.94</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td><td align="right" headers="Total Reads" class='awrclb'>141,040</td><td align="right" headers="Total Gets" class='awrc'>311,785</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.93</td><td align="right" headers="Total CPU(s)" class='awrc'>50.19</td><td align="right" headers="Total IOWait(s)" class='awrc'>495.46</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>38.24</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>141,040.00</td><td align="right" headers="PerExecution Gets" class='awrc'>311,785.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.93</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>50.19</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>495.46</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>38.24</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>2.90</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.67</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.70</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td><td align="right" headers="Total Reads" class='awrnclb'>139,747</td><td align="right" headers="Total Gets" class='awrnc'>308,873</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.92</td><td align="right" headers="Total CPU(s)" class='awrnc'>50.84</td><td align="right" headers="Total IOWait(s)" class='awrnc'>493.51</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>40.44</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>139,747.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>308,873.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.92</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>50.84</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>493.51</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>40.44</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>2.87</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.65</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.74</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.47</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.64</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td><td align="right" headers="Total Reads" class='awrclb'>138,731</td><td align="right" headers="Total Gets" class='awrc'>306,580</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="Total CPU(s)" class='awrc'>54.56</td><td align="right" headers="Total IOWait(s)" class='awrc'>487.74</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>43.42</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>138,731.00</td><td align="right" headers="PerExecution Gets" class='awrc'>306,580.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>54.56</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>487.74</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>43.42</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>2.85</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.63</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.94</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.44</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.84</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td><td align="right" headers="Total Reads" class='awrnclb'>137,221</td><td align="right" headers="Total Gets" class='awrnc'>302,862</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="Total CPU(s)" class='awrnc'>54.88</td><td align="right" headers="Total IOWait(s)" class='awrnc'>486.32</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>44.13</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>137,221.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>302,862.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>54.88</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>486.32</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>44.13</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>2.82</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.60</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.96</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.44</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.88</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td><td align="right" headers="Total Reads" class='awrclb'>134,631</td><td align="right" headers="Total Gets" class='awrc'>296,541</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.79</td><td align="right" headers="Total CPU(s)" class='awrc'>55.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>482.32</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>48.25</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>134,631.00</td><td align="right" headers="PerExecution Gets" class='awrc'>296,541.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.79</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>55.30</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>482.32</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>48.25</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>2.77</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.54</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.98</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.42</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>3.15</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td><td align="right" headers="Total Reads" class='awrnclb'>134,106</td><td align="right" headers="Total Gets" class='awrnc'>294,859</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.84</td><td align="right" headers="Total CPU(s)" class='awrnc'>40.55</td><td align="right" headers="Total IOWait(s)" class='awrnc'>512.81</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>27.69</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>134,106.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>294,859.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.84</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>40.55</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>512.81</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>27.69</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>2.76</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.53</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.57</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.81</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td><td align="right" headers="Total Reads" class='awrclb'>132,338</td><td align="right" headers="Total Gets" class='awrc'>290,268</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.69</td><td align="right" headers="Total CPU(s)" class='awrc'>38.06</td><td align="right" headers="Total IOWait(s)" class='awrc'>514.49</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>27.65</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Reads" class='awrclb'>132,338.00</td><td align="right" headers="PerExecution Gets" class='awrc'>290,268.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.69</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>38.06</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>514.49</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>27.65</td><td align="right" headers="PercentageofTotal Reads" class='awrclb'>2.72</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.49</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.05</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.81</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td><td align="right" headers="Total Reads" class='awrnclb'>131,683</td><td align="right" headers="Total Gets" class='awrnc'>288,926</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.57</td><td align="right" headers="Total CPU(s)" class='awrnc'>37.80</td><td align="right" headers="Total IOWait(s)" class='awrnc'>514.39</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>27.73</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Reads" class='awrnclb'>131,683.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>288,926.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.57</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>37.80</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>514.39</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>27.73</td><td align="right" headers="PercentageofTotal Reads" class='awrnclb'>2.71</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.48</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.81</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12081"></a>
<h3 class="awr">SQL ordered by UnOptimized Read Requests (Global)</h3>
<ul>
<li class="awr">Total Physical Read Requests:	    4,862,881</li>
<li class="awr">Captured SQL account for    5.1% of Total</li>
<li class="awr">Total UnOptimized Read Requests:       4,862,881</li>
<li class="awr">Captured SQL account for    5.1% of Total</li>
<li class="awr">Total Optimized Read Requests:		     1</li>
<li class="awr">Captured SQL account for    0.0% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by UnOptimized Read Requests (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 9" id="Total">Total</th>
<th class="awrbg" colspan=" 8" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 8" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="UnOptimized">UnOptimized</th><th class="awrbg" scope="col" id="Requests">Requests</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>214,329</td><td align="right" headers="Total Requests" class='awrc'>214,329</td><td align="right" headers="Total Reads" class='awrc'>4,118,419</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,830.31</td><td align="right" headers="Total CPU(s)" class='awrc'>1,242.45</td><td align="right" headers="Total IOWait(s)" class='awrc'>16,916.64</td><td align="right" headers="Total Rows" class='awrc'>1,425,187</td><td align="right" headers="Total Cluster(s)" class='awrc'>1,217.41</td><td align="right" headers="Total Execs" class='awrc'>1,425,154</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>0.15</td><td align="right" headers="PerExecution Requests" class='awrc'>0.15</td><td align="right" headers="PerExecution Reads" class='awrc'>2.89</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>4.41</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>4.41</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.69</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.64</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>66.96</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.75</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>79.49</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.64</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#26ka4yp1faxn2">26ka4yp1faxn2</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>141,040</td><td align="right" headers="Total Requests" class='awrnc'>141,040</td><td align="right" headers="Total Reads" class='awrnc'>141,040</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.93</td><td align="right" headers="Total CPU(s)" class='awrnc'>50.19</td><td align="right" headers="Total IOWait(s)" class='awrnc'>495.46</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>38.24</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>141,040.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>141,040.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>141,040.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.93</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>50.19</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>495.46</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>38.24</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>2.90</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>2.90</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.90</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.70</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#7bd84p4z76t66">7bd84p4z76t66</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>139,747</td><td align="right" headers="Total Requests" class='awrc'>139,747</td><td align="right" headers="Total Reads" class='awrc'>139,747</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.92</td><td align="right" headers="Total CPU(s)" class='awrc'>50.84</td><td align="right" headers="Total IOWait(s)" class='awrc'>493.51</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>40.44</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>139,747.00</td><td align="right" headers="PerExecution Requests" class='awrc'>139,747.00</td><td align="right" headers="PerExecution Reads" class='awrc'>139,747.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.92</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>50.84</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>493.51</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>40.44</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>2.87</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>2.87</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.87</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.74</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.47</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.64</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>138,731</td><td align="right" headers="Total Requests" class='awrnc'>138,731</td><td align="right" headers="Total Reads" class='awrnc'>138,731</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="Total CPU(s)" class='awrnc'>54.56</td><td align="right" headers="Total IOWait(s)" class='awrnc'>487.74</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>43.42</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>138,731.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>138,731.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>138,731.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>54.56</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>487.74</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>43.42</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>2.85</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>2.85</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.85</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.94</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.44</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.84</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>137,221</td><td align="right" headers="Total Requests" class='awrc'>137,221</td><td align="right" headers="Total Reads" class='awrc'>137,221</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="Total CPU(s)" class='awrc'>54.88</td><td align="right" headers="Total IOWait(s)" class='awrc'>486.32</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>44.13</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>137,221.00</td><td align="right" headers="PerExecution Requests" class='awrc'>137,221.00</td><td align="right" headers="PerExecution Reads" class='awrc'>137,221.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>54.88</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>486.32</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>44.13</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>2.82</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>2.82</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.82</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.96</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.44</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>2.88</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>134,631</td><td align="right" headers="Total Requests" class='awrnc'>134,631</td><td align="right" headers="Total Reads" class='awrnc'>134,631</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.79</td><td align="right" headers="Total CPU(s)" class='awrnc'>55.30</td><td align="right" headers="Total IOWait(s)" class='awrnc'>482.32</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>48.25</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>134,631.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>134,631.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>134,631.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.79</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>55.30</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>482.32</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>48.25</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>2.77</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>2.77</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.77</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.98</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.42</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>3.15</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#5mrhuphq8yfw1">5mrhuphq8yfw1</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>134,106</td><td align="right" headers="Total Requests" class='awrc'>134,106</td><td align="right" headers="Total Reads" class='awrc'>134,106</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.84</td><td align="right" headers="Total CPU(s)" class='awrc'>40.55</td><td align="right" headers="Total IOWait(s)" class='awrc'>512.81</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>27.69</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>134,106.00</td><td align="right" headers="PerExecution Requests" class='awrc'>134,106.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,106.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.84</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>40.55</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>512.81</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>27.69</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>2.76</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>2.76</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.76</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.19</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.57</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.81</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#brqrryv4mja36">brqrryv4mja36</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>132,338</td><td align="right" headers="Total Requests" class='awrnc'>132,338</td><td align="right" headers="Total Reads" class='awrnc'>132,338</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.69</td><td align="right" headers="Total CPU(s)" class='awrnc'>38.06</td><td align="right" headers="Total IOWait(s)" class='awrnc'>514.49</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>27.65</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>132,338.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>132,338.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>132,338.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.69</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>38.06</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>514.49</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>27.65</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>2.72</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>2.72</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.72</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.05</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>1.81</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#0hnb5g8vhm4u9">0hnb5g8vhm4u9</a></td><td align="right" headers="Total UnOptimized" class='awrclb'>131,683</td><td align="right" headers="Total Requests" class='awrc'>131,683</td><td align="right" headers="Total Reads" class='awrc'>131,683</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.57</td><td align="right" headers="Total CPU(s)" class='awrc'>37.80</td><td align="right" headers="Total IOWait(s)" class='awrc'>514.39</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Cluster(s)" class='awrc'>27.73</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrclb'>131,683.00</td><td align="right" headers="PerExecution Requests" class='awrc'>131,683.00</td><td align="right" headers="PerExecution Reads" class='awrc'>131,683.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.57</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>37.80</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>514.39</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>27.73</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrclb'>2.71</td><td align="right" headers="PercentageofTotal Requests" class='awrc'>2.71</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.71</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.04</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.58</td><td align="right" headers="PercentageofTotal Cluster" class='awrc'>1.81</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#6hgs8vfsdc56c">6hgs8vfsdc56c</a></td><td align="right" headers="Total UnOptimized" class='awrnclb'>128,992</td><td align="right" headers="Total Requests" class='awrnc'>128,992</td><td align="right" headers="Total Reads" class='awrnc'>128,992</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.07</td><td align="right" headers="Total CPU(s)" class='awrnc'>50.82</td><td align="right" headers="Total IOWait(s)" class='awrnc'>494.08</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Cluster(s)" class='awrnc'>39.45</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution UnOptimized" class='awrnclb'>128,992.00</td><td align="right" headers="PerExecution Requests" class='awrnc'>128,992.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>128,992.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.07</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>50.82</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>494.08</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>39.45</td><td align="right" headers="PercentageofTotal UnOptimized" class='awrnclb'>2.65</td><td align="right" headers="PercentageofTotal Requests" class='awrnc'>2.65</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.65</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.74</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.48</td><td align="right" headers="PercentageofTotal Cluster" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12065"></a>
<h3 class="awr">SQL ordered by Executions (Global)</h3>
<ul>
<li class="awr">Total Executions:	1,683,794</li>
<li class="awr">Captured SQL account for   99.7% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Executions (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Execs" class='awrclb'>1,425,154</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,830.31</td><td align="right" headers="Total CPU(s)" class='awrc'>1,242.45</td><td align="right" headers="Total IOWait(s)" class='awrc'>16,916.64</td><td align="right" headers="Total Gets" class='awrc'>8,562,374</td><td align="right" headers="Total Reads" class='awrc'>4,118,419</td><td align="right" headers="Total Rows" class='awrc'>1,425,187</td><td align="right" headers="Total Cluster(s)" class='awrc'>1,217.41</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>84.64</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.64</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>66.96</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>84.75</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>73.42</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.69</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>79.49</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Execs" class='awrnclb'>251,494</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,507.92</td><td align="right" headers="Total CPU(s)" class='awrnc'>275.55</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,010.67</td><td align="right" headers="Total Gets" class='awrnc'>1,818,949</td><td align="right" headers="Total Reads" class='awrnc'>726,417</td><td align="right" headers="Total Rows" class='awrnc'>754,482</td><td align="right" headers="Total Cluster(s)" class='awrnc'>303.87</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>14.94</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.39</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.85</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.08</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>15.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.94</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>19.84</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#24djtk7r8fz33">24djtk7r8fz33</a></td><td align="right" headers="Total Execs" class='awrclb'>437</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.06</td><td align="right" headers="Total CPU(s)" class='awrc'>0.05</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>892</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>432</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>2.04</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>0.99</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.03</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>update svcobj_access$ set acce...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#f7xnvp44nukp7">f7xnvp44nukp7</a></td><td align="right" headers="Total Execs" class='awrnclb'>181</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.68</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.05</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.02</td><td align="right" headers="Total Gets" class='awrnc'>794</td><td align="right" headers="Total Reads" class='awrnc'>11</td><td align="right" headers="Total Rows" class='awrnc'>181</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.63</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>4.39</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.06</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.04</td>
<td class='awrnc'>insert into wrm$_snapshot_deta...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#fn5s5p6hr6702">fn5s5p6hr6702</a></td><td align="right" headers="Total Execs" class='awrclb'>99</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.03</td><td align="right" headers="Total CPU(s)" class='awrc'>0.02</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>612</td><td align="right" headers="Total Reads" class='awrc'>1</td><td align="right" headers="Total Rows" class='awrc'>99</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>6.18</td><td align="right" headers="PerExecution Reads" class='awrc'>0.01</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.01</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.01</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>INSERT INTO wri$_adv_message_g...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#f80h0xb1qvbsk">f80h0xb1qvbsk</a></td><td align="right" headers="Total Execs" class='awrnclb'>73</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.04</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.02</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>35</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Rows" class='awrnc'>73</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>0.48</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>SELECT sys.wri$_adv_seq_msggro...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#6n2qqv1brfhpp">6n2qqv1brfhpp</a></td><td align="right" headers="Total Execs" class='awrclb'>50</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="Total CPU(s)" class='awrc'>0.01</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>400</td><td align="right" headers="Total Reads" class='awrc'>1</td><td align="right" headers="Total Rows" class='awrc'>50</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>8.00</td><td align="right" headers="PerExecution Reads" class='awrc'>0.02</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>select ind.type#, ind.property...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#9babjv8yq8ru3">9babjv8yq8ru3</a></td><td align="right" headers="Total Execs" class='awrnclb'>40</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.03</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.02</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>0</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Rows" class='awrnc'>40</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>0.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>BEGIN DBMS_OUTPUT.GET_LINES(:L...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#gjaap3w3qbf8c">gjaap3w3qbf8c</a></td><td align="right" headers="Total Execs" class='awrclb'>40</td><td align="right" headers="Total Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="Total CPU(s)" class='awrc'>0.00</td><td align="right" headers="Total IOWait(s)" class='awrc'>0.00</td><td align="right" headers="Total Gets" class='awrc'>40</td><td align="right" headers="Total Reads" class='awrc'>0</td><td align="right" headers="Total Rows" class='awrc'>40</td><td align="right" headers="Total Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrc'>1.00</td><td align="right" headers="PerExecution Reads" class='awrc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrclb'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrcrb'>0.00</td>
<td class='awrc'>select count(*) from ilmobj$ w...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#fs4p95w7yg25b">fs4p95w7yg25b</a></td><td align="right" headers="Total Execs" class='awrnclb'>38</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>0.00</td><td align="right" headers="Total CPU(s)" class='awrnc'>0.00</td><td align="right" headers="Total IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="Total Gets" class='awrnc'>152</td><td align="right" headers="Total Reads" class='awrnc'>0</td><td align="right" headers="Total Rows" class='awrnc'>38</td><td align="right" headers="Total Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution Gets" class='awrnc'>4.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>0.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PerExecution Cluster(s)" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Execs" class='awrnclb'>0.00</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>0.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrncrb'>0.00</td>
<td class='awrnc'>select pob.parttype from sys.t...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12064"></a>
<h3 class="awr">SQL ordered by Cluster Wait Time (Global)</h3>
<ul>
<li class="awr">Total Cluster Wait Time (s):	       1,531</li>
<li class="awr">Captured SQL account for   99.5% of Total</li>
</ul>
<table border="0" class="tdiff" summary="SQL ordered by Cluster Wait Time (Global)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 8" id="Total">Total</th>
<th class="awrbg" colspan=" 7" id="PerExecution">Per Execution</th>
<th class="awrbg" colspan=" 7" id="PercentageofTotal">Percentage of Total</th>
<td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">	 SQL Id</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col" id="Cluster(s)">Cluster (s)</th><th class="awrbg" scope="col" id="Elapsed(s)">Elapsed (s)</th><th class="awrbg" scope="col" id="CPU(s)">CPU (s)</th><th class="awrbg" scope="col" id="IOWait(s)">IOWait (s)</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Rows">Rows</th><th class="awrbg" scope="col" id="Cluster">Cluster</th><th class="awrbg" scope="col" id="DBtime">DB time</th><th class="awrbg" scope="col" id="DBCPU">DB CPU</th><th class="awrbg" scope="col" id="Gets">Gets</th><th class="awrbg" scope="col" id="IOWait">IO Wait</th><th class="awrbg" scope="col" id="Reads">Reads</th><th class="awrbg" scope="col" id="Execs">Execs</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>1,217.41</td><td align="right" headers="Total Elapsed(s)" class='awrc'>18,830.31</td><td align="right" headers="Total CPU(s)" class='awrc'>1,242.45</td><td align="right" headers="Total IOWait(s)" class='awrc'>16,916.64</td><td align="right" headers="Total Gets" class='awrc'>8,562,374</td><td align="right" headers="Total Reads" class='awrc'>4,118,419</td><td align="right" headers="Total Rows" class='awrc'>1,425,187</td><td align="right" headers="Total Execs" class='awrc'>1,425,154</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrc'>6.01</td><td align="right" headers="PerExecution Reads" class='awrc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>79.49</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>82.64</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>66.96</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>84.75</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>73.42</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>84.69</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>84.64</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>303.87</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>3,507.92</td><td align="right" headers="Total CPU(s)" class='awrnc'>275.55</td><td align="right" headers="Total IOWait(s)" class='awrnc'>3,010.67</td><td align="right" headers="Total Gets" class='awrnc'>1,818,949</td><td align="right" headers="Total Reads" class='awrnc'>726,417</td><td align="right" headers="Total Rows" class='awrnc'>754,482</td><td align="right" headers="Total Execs" class='awrnc'>251,494</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>0.00</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>0.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>0.01</td><td align="right" headers="PerExecution Gets" class='awrnc'>7.23</td><td align="right" headers="PerExecution Reads" class='awrnc'>2.89</td><td align="right" headers="PerExecution Rows" class='awrnc'>3.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>19.84</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>15.39</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>14.85</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>15.08</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>15.60</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>14.94</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>14.94</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#amnkmrsjh10nv">amnkmrsjh10nv</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>48.25</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.79</td><td align="right" headers="Total CPU(s)" class='awrc'>55.30</td><td align="right" headers="Total IOWait(s)" class='awrc'>482.32</td><td align="right" headers="Total Gets" class='awrc'>296,541</td><td align="right" headers="Total Reads" class='awrc'>134,631</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>48.25</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.79</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>55.30</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>482.32</td><td align="right" headers="PerExecution Gets" class='awrc'>296,541.00</td><td align="right" headers="PerExecution Reads" class='awrc'>134,631.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>3.15</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.98</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.42</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.54</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.77</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#fvmjqn5q18rmh">fvmjqn5q18rmh</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>45.44</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.63</td><td align="right" headers="Total CPU(s)" class='awrnc'>46.42</td><td align="right" headers="Total IOWait(s)" class='awrnc'>491.61</td><td align="right" headers="Total Gets" class='awrnc'>257,457</td><td align="right" headers="Total Reads" class='awrnc'>117,547</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>45.44</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.63</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>46.42</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>491.61</td><td align="right" headers="PerExecution Gets" class='awrnc'>257,457.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>117,547.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>2.97</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.46</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.21</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.42</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#gdjc35y9zsuzm">gdjc35y9zsuzm</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>44.97</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.61</td><td align="right" headers="Total CPU(s)" class='awrc'>50.00</td><td align="right" headers="Total IOWait(s)" class='awrc'>489.85</td><td align="right" headers="Total Gets" class='awrc'>258,660</td><td align="right" headers="Total Reads" class='awrc'>117,715</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>44.97</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.61</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>50.00</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>489.85</td><td align="right" headers="PerExecution Gets" class='awrc'>258,660.00</td><td align="right" headers="PerExecution Reads" class='awrc'>117,715.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>2.94</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.69</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.45</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.22</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.42</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#0rjvf5n1k4aba">0rjvf5n1k4aba</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>44.69</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.75</td><td align="right" headers="Total CPU(s)" class='awrnc'>47.80</td><td align="right" headers="Total IOWait(s)" class='awrnc'>491.95</td><td align="right" headers="Total Gets" class='awrnc'>265,484</td><td align="right" headers="Total Reads" class='awrnc'>121,126</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>44.69</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.75</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>47.80</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>491.95</td><td align="right" headers="PerExecution Gets" class='awrnc'>265,484.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>121,126.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>2.92</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.58</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.46</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.28</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.49</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#71v63sn4bfskh">71v63sn4bfskh</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>44.13</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="Total CPU(s)" class='awrc'>54.88</td><td align="right" headers="Total IOWait(s)" class='awrc'>486.32</td><td align="right" headers="Total Gets" class='awrc'>302,862</td><td align="right" headers="Total Reads" class='awrc'>137,221</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>44.13</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.85</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>54.88</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>486.32</td><td align="right" headers="PerExecution Gets" class='awrc'>302,862.00</td><td align="right" headers="PerExecution Reads" class='awrc'>137,221.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>2.88</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.96</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.44</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.60</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.82</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5wf99mx0r39xn">5wf99mx0r39xn</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>43.42</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="Total CPU(s)" class='awrnc'>54.56</td><td align="right" headers="Total IOWait(s)" class='awrnc'>487.74</td><td align="right" headers="Total Gets" class='awrnc'>306,580</td><td align="right" headers="Total Reads" class='awrnc'>138,731</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>43.42</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.85</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>54.56</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>487.74</td><td align="right" headers="PerExecution Gets" class='awrnc'>306,580.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>138,731.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>2.84</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.94</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.44</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.63</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.85</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrc'><a class="awr" href="#30ha31267a7s2">30ha31267a7s2</a></td><td align="right" headers="Total Cluster(s)" class='awrclb'>43.14</td><td align="right" headers="Total Elapsed(s)" class='awrc'>568.93</td><td align="right" headers="Total CPU(s)" class='awrc'>48.44</td><td align="right" headers="Total IOWait(s)" class='awrc'>493.07</td><td align="right" headers="Total Gets" class='awrc'>276,710</td><td align="right" headers="Total Reads" class='awrc'>126,105</td><td align="right" headers="Total Rows" class='awrc'>1</td><td align="right" headers="Total Execs" class='awrc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrclb'>43.14</td><td align="right" headers="PerExecution Elapsed(s)" class='awrc'>568.93</td><td align="right" headers="PerExecution CPU(s)" class='awrc'>48.44</td><td align="right" headers="PerExecution IOWait(s)" class='awrc'>493.07</td><td align="right" headers="PerExecution Gets" class='awrc'>276,710.00</td><td align="right" headers="PerExecution Reads" class='awrc'>126,105.00</td><td align="right" headers="PerExecution Rows" class='awrc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrclb'>2.82</td><td align="right" headers="PercentageofTotal DBtime" class='awrc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrc'>2.61</td><td align="right" headers="PercentageofTotal Gets" class='awrc'>2.47</td><td align="right" headers="PercentageofTotal IOWait" class='awrc'>2.37</td><td align="right" headers="PercentageofTotal Reads" class='awrc'>2.59</td><td align="right" headers="PercentageofTotal Execs" class='awrcrb'>0.00</td>
<td class='awrc'>DECLARE v_default_schema_numbe...</td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" href="#5q1jyzmr30cf9">5q1jyzmr30cf9</a></td><td align="right" headers="Total Cluster(s)" class='awrnclb'>42.57</td><td align="right" headers="Total Elapsed(s)" class='awrnc'>568.93</td><td align="right" headers="Total CPU(s)" class='awrnc'>47.10</td><td align="right" headers="Total IOWait(s)" class='awrnc'>494.28</td><td align="right" headers="Total Gets" class='awrnc'>267,284</td><td align="right" headers="Total Reads" class='awrnc'>122,117</td><td align="right" headers="Total Rows" class='awrnc'>1</td><td align="right" headers="Total Execs" class='awrnc'>1</td><td align="right" headers="PerExecution Cluster(s)" class='awrnclb'>42.57</td><td align="right" headers="PerExecution Elapsed(s)" class='awrnc'>568.93</td><td align="right" headers="PerExecution CPU(s)" class='awrnc'>47.10</td><td align="right" headers="PerExecution IOWait(s)" class='awrnc'>494.28</td><td align="right" headers="PerExecution Gets" class='awrnc'>267,284.00</td><td align="right" headers="PerExecution Reads" class='awrnc'>122,117.00</td><td align="right" headers="PerExecution Rows" class='awrnc'>1.00</td><td align="right" headers="PercentageofTotal Cluster" class='awrnclb'>2.78</td><td align="right" headers="PercentageofTotal DBtime" class='awrnc'>2.50</td><td align="right" headers="PercentageofTotal DBCPU" class='awrnc'>2.54</td><td align="right" headers="PercentageofTotal Gets" class='awrnc'>2.48</td><td align="right" headers="PercentageofTotal IOWait" class='awrnc'>2.29</td><td align="right" headers="PercentageofTotal Reads" class='awrnc'>2.51</td><td align="right" headers="PercentageofTotal Execs" class='awrncrb'>0.00</td>
<td class='awrnc'>DECLARE v_default_schema_numbe...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#622">Back to SQL Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="623"></a>
<h2 class="awr">
Global Activity Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12071">System Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12072">Global Messaging Statistics (Global)</a></li>
<li class="awr"><a class="awr" href="#12073">System Statistics (Absolute Values)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12071"></a>
<h3 class="awr">System Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>ASSM bg: segment fix monitor</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM cbk:blocks examined</td><td align="right" class='awrnc'>1,042</td><td align="right" class='awrnc'>1.72</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.86</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.82</td><td align="right" headers="perSecond Max" class='awrncrb'>0.90</td></tr>
<tr><td scope="row" class='awrc'>ASSM cbk:blocks marked full</td><td align="right" class='awrc'>248</td><td align="right" class='awrc'>0.41</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.21</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.20</td><td align="right" headers="perSecond Max" class='awrcrb'>0.21</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L1 bitmaps examined</td><td align="right" class='awrnc'>815</td><td align="right" class='awrnc'>1.35</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.67</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.64</td><td align="right" headers="perSecond Max" class='awrncrb'>0.70</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:L2 bitmap full</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:L2 bitmaps examined</td><td align="right" class='awrnc'>190</td><td align="right" class='awrnc'>0.31</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.13</td><td align="right" headers="perSecond Max" class='awrncrb'>0.18</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Optimized reject DB</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search all</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:Search hint</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:Search steal</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:bump HWM</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free block</td><td align="right" class='awrnc'>793</td><td align="right" class='awrnc'>1.31</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.66</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.05</td><td align="right" headers="perSecond Min" class='awrnc'>0.62</td><td align="right" headers="perSecond Max" class='awrncrb'>0.69</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:get free data block</td><td align="right" class='awrc'>644</td><td align="right" class='awrc'>1.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.53</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.51</td><td align="right" headers="perSecond Max" class='awrcrb'>0.56</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:get free index block</td><td align="right" class='awrnc'>149</td><td align="right" class='awrnc'>0.25</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.11</td><td align="right" headers="perSecond Max" class='awrncrb'>0.14</td></tr>
<tr><td scope="row" class='awrc'>ASSM gsp:good hint</td><td align="right" class='awrc'>621</td><td align="right" class='awrc'>1.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.51</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.51</td><td align="right" headers="perSecond Max" class='awrcrb'>0.52</td></tr>
<tr><td scope="row" class='awrnc'>ASSM gsp:reject db</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>ASSM rsv:fill reserve</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ASSM wasted db state change</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>Batched IO (bound) vector count</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO block miss count</td><td align="right" class='awrnc'>1,367,862</td><td align="right" class='awrnc'>2,263.06</td><td align="right" class='awrnc'>5.42</td><td align="right" headers="perSecond Average" class='awrnclb'>1,131.53</td><td align="right" headers="perSecond StdDev" class='awrnc'>54.30</td><td align="right" headers="perSecond Min" class='awrnc'>1,093.14</td><td align="right" headers="perSecond Max" class='awrncrb'>1,169.93</td></tr>
<tr><td scope="row" class='awrc'>Batched IO double miss count</td><td align="right" class='awrc'>1,367,816</td><td align="right" class='awrc'>2,262.99</td><td align="right" class='awrc'>5.42</td><td align="right" headers="perSecond Average" class='awrclb'>1,131.49</td><td align="right" headers="perSecond StdDev" class='awrc'>54.35</td><td align="right" headers="perSecond Min" class='awrc'>1,093.06</td><td align="right" headers="perSecond Max" class='awrcrb'>1,169.93</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO same unit count</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>Batched IO single block count</td><td align="right" class='awrc'>1,367,823</td><td align="right" class='awrc'>2,263.00</td><td align="right" class='awrc'>5.42</td><td align="right" headers="perSecond Average" class='awrclb'>1,131.50</td><td align="right" headers="perSecond StdDev" class='awrc'>54.35</td><td align="right" headers="perSecond Min" class='awrc'>1,093.07</td><td align="right" headers="perSecond Max" class='awrcrb'>1,169.93</td></tr>
<tr><td scope="row" class='awrnc'>Batched IO vector block count</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>Batched IO vector read count</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>Block Cleanout Optim referenced</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>CCursor + sql area evicted</td><td align="right" class='awrc'>36</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.04</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>CPU used by this session</td><td align="right" class='awrnc'>265,847</td><td align="right" class='awrnc'>439.83</td><td align="right" class='awrnc'>1.05</td><td align="right" headers="perSecond Average" class='awrnclb'>219.92</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.99</td><td align="right" headers="perSecond Min" class='awrnc'>218.51</td><td align="right" headers="perSecond Max" class='awrncrb'>221.33</td></tr>
<tr><td scope="row" class='awrc'>CPU used when call started</td><td align="right" class='awrc'>197,679</td><td align="right" class='awrc'>327.05</td><td align="right" class='awrc'>0.78</td><td align="right" headers="perSecond Average" class='awrclb'>163.53</td><td align="right" headers="perSecond StdDev" class='awrc'>0.58</td><td align="right" headers="perSecond Min" class='awrc'>163.12</td><td align="right" headers="perSecond Max" class='awrcrb'>163.93</td></tr>
<tr><td scope="row" class='awrnc'>CR blocks created</td><td align="right" class='awrnc'>978</td><td align="right" class='awrnc'>1.62</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.81</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.08</td><td align="right" headers="perSecond Min" class='awrnc'>0.75</td><td align="right" headers="perSecond Max" class='awrncrb'>0.86</td></tr>
<tr><td scope="row" class='awrc'>Cached Commit SCN referenced</td><td align="right" class='awrc'>3,523,689</td><td align="right" class='awrc'>5,829.78</td><td align="right" class='awrc'>13.96</td><td align="right" headers="perSecond Average" class='awrclb'>2,914.89</td><td align="right" headers="perSecond StdDev" class='awrc'>10.28</td><td align="right" headers="perSecond Min" class='awrc'>2,907.62</td><td align="right" headers="perSecond Max" class='awrcrb'>2,922.16</td></tr>
<tr><td scope="row" class='awrnc'>Client Advertised Receive Window</td><td align="right" class='awrnc'>287</td><td align="right" class='awrnc'>0.47</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.24</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.23</td><td align="right" headers="perSecond Max" class='awrncrb'>0.24</td></tr>
<tr><td scope="row" class='awrc'>Client Advertised Send Window</td><td align="right" class='awrc'>287</td><td align="right" class='awrc'>0.47</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.24</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.23</td><td align="right" headers="perSecond Max" class='awrcrb'>0.24</td></tr>
<tr><td scope="row" class='awrnc'>Client Path Maximum Transmission Unit(MTU)</td><td align="right" class='awrnc'>1,341,150</td><td align="right" class='awrnc'>2,218.88</td><td align="right" class='awrnc'>5.31</td><td align="right" headers="perSecond Average" class='awrnclb'>1,109.44</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,497.74</td><td align="right" headers="perSecond Min" class='awrnc'>50.38</td><td align="right" headers="perSecond Max" class='awrncrb'>2,168.50</td></tr>
<tr><td scope="row" class='awrc'>Client Send Congestion Window</td><td align="right" class='awrc'>410</td><td align="right" class='awrc'>0.68</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.34</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.33</td><td align="right" headers="perSecond Max" class='awrcrb'>0.35</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Ack Received</td><td align="right" class='awrnc'>20</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Last Data Received</td><td align="right" class='awrc'>19</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Last Data Sent</td><td align="right" class='awrnc'>123</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.09</td><td align="right" headers="perSecond Max" class='awrncrb'>0.11</td></tr>
<tr><td scope="row" class='awrc'>Client Time (usec) Round Trip Time</td><td align="right" class='awrc'>105,241</td><td align="right" class='awrc'>174.12</td><td align="right" class='awrc'>0.42</td><td align="right" headers="perSecond Average" class='awrclb'>87.06</td><td align="right" headers="perSecond StdDev" class='awrc'>16.81</td><td align="right" headers="perSecond Min" class='awrc'>75.17</td><td align="right" headers="perSecond Max" class='awrcrb'>98.94</td></tr>
<tr><td scope="row" class='awrnc'>Client Time (usec) Round Trip Time Variance</td><td align="right" class='awrnc'>105,257</td><td align="right" class='awrnc'>174.14</td><td align="right" class='awrnc'>0.42</td><td align="right" headers="perSecond Average" class='awrnclb'>87.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.37</td><td align="right" headers="perSecond Min" class='awrnc'>86.81</td><td align="right" headers="perSecond Max" class='awrncrb'>87.33</td></tr>
<tr><td scope="row" class='awrc'>Client Total Bytes Acked</td><td align="right" class='awrc'>637,291</td><td align="right" class='awrc'>1,054.37</td><td align="right" class='awrc'>2.52</td><td align="right" headers="perSecond Average" class='awrclb'>527.18</td><td align="right" headers="perSecond StdDev" class='awrc'>31.76</td><td align="right" headers="perSecond Min" class='awrc'>504.72</td><td align="right" headers="perSecond Max" class='awrcrb'>549.64</td></tr>
<tr><td scope="row" class='awrnc'>Client Total Bytes Received</td><td align="right" class='awrnc'>249,395</td><td align="right" class='awrnc'>412.61</td><td align="right" class='awrnc'>0.99</td><td align="right" headers="perSecond Average" class='awrnclb'>206.31</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.29</td><td align="right" headers="perSecond Min" class='awrnc'>200.44</td><td align="right" headers="perSecond Max" class='awrncrb'>212.17</td></tr>
<tr><td scope="row" class='awrc'>DB time</td><td align="right" class='awrc'>2,400,448</td><td align="right" class='awrc'>3,971.43</td><td align="right" class='awrc'>9.51</td><td align="right" headers="perSecond Average" class='awrclb'>1,985.71</td><td align="right" headers="perSecond StdDev" class='awrc'>139.98</td><td align="right" headers="perSecond Min" class='awrc'>1,886.73</td><td align="right" headers="perSecond Max" class='awrcrb'>2,084.70</td></tr>
<tr><td scope="row" class='awrnc'>DBWR checkpoint buffers written</td><td align="right" class='awrnc'>40,701</td><td align="right" class='awrnc'>67.34</td><td align="right" class='awrnc'>0.16</td><td align="right" headers="perSecond Average" class='awrnclb'>33.67</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.59</td><td align="right" headers="perSecond Min" class='awrnc'>31.83</td><td align="right" headers="perSecond Max" class='awrncrb'>35.50</td></tr>
<tr><td scope="row" class='awrc'>DBWR checkpoints</td><td align="right" class='awrc'>98</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.08</td><td align="right" headers="perSecond Max" class='awrcrb'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>DBWR fusion writes</td><td align="right" class='awrnc'>119</td><td align="right" class='awrnc'>0.20</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.11</td></tr>
<tr><td scope="row" class='awrc'>DBWR object drop buffers written</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>DBWR transaction table writes</td><td align="right" class='awrnc'>560</td><td align="right" class='awrnc'>0.93</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.46</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.44</td><td align="right" headers="perSecond Max" class='awrncrb'>0.49</td></tr>
<tr><td scope="row" class='awrc'>DBWR undo block writes</td><td align="right" class='awrc'>24,062</td><td align="right" class='awrc'>39.81</td><td align="right" class='awrc'>0.10</td><td align="right" headers="perSecond Average" class='awrclb'>19.90</td><td align="right" headers="perSecond StdDev" class='awrc'>0.91</td><td align="right" headers="perSecond Min" class='awrc'>19.26</td><td align="right" headers="perSecond Max" class='awrcrb'>20.55</td></tr>
<tr><td scope="row" class='awrnc'>DFO trees parallelized</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>HSC Heap Segment Block Changes</td><td align="right" class='awrc'>758,112</td><td align="right" class='awrc'>1,254.26</td><td align="right" class='awrc'>3.00</td><td align="right" headers="perSecond Average" class='awrclb'>627.13</td><td align="right" headers="perSecond StdDev" class='awrc'>28.12</td><td align="right" headers="perSecond Min" class='awrc'>607.25</td><td align="right" headers="perSecond Max" class='awrcrb'>647.01</td></tr>
<tr><td scope="row" class='awrnc'>Heap Segment Array Inserts</td><td align="right" class='awrnc'>318</td><td align="right" class='awrnc'>0.53</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.26</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.26</td><td align="right" headers="perSecond Max" class='awrncrb'>0.26</td></tr>
<tr><td scope="row" class='awrc'>Heap Segment Array Updates</td><td align="right" class='awrc'>16</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc req</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>KTFB alloc space (block)</td><td align="right" class='awrc'>9,502,720</td><td align="right" class='awrc'>15,721.75</td><td align="right" class='awrc'>37.64</td><td align="right" headers="perSecond Average" class='awrclb'>7,860.88</td><td align="right" headers="perSecond StdDev" class='awrc'>8,663.54</td><td align="right" headers="perSecond Min" class='awrc'>1,734.83</td><td align="right" headers="perSecond Max" class='awrcrb'>13,986.92</td></tr>
<tr><td scope="row" class='awrnc'>KTFB alloc time (ms)</td><td align="right" class='awrnc'>7,360</td><td align="right" class='awrnc'>12.18</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>6.09</td><td align="right" headers="perSecond StdDev" class='awrnc'>8.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.38</td><td align="right" headers="perSecond Max" class='awrncrb'>11.79</td></tr>
<tr><td scope="row" class='awrc'>KTFB apply req</td><td align="right" class='awrc'>46</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.05</td></tr>
<tr><td scope="row" class='awrnc'>KTFB apply time (ms)</td><td align="right" class='awrnc'>3,833</td><td align="right" class='awrnc'>6.34</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>3.17</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.47</td><td align="right" headers="perSecond Min" class='awrnc'>1.42</td><td align="right" headers="perSecond Max" class='awrncrb'>4.92</td></tr>
<tr><td scope="row" class='awrc'>KTFB free req</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>KTFB free space (block)</td><td align="right" class='awrnc'>4,752</td><td align="right" class='awrnc'>7.86</td><td align="right" class='awrnc'>0.02</td><td align="right" headers="perSecond Average" class='awrnclb'>3.93</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.53</td><td align="right" headers="perSecond Min" class='awrnc'>2.14</td><td align="right" headers="perSecond Max" class='awrncrb'>5.72</td></tr>
<tr><td scope="row" class='awrc'>KTFB free time (ms)</td><td align="right" class='awrc'>233</td><td align="right" class='awrc'>0.39</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrc'>0.09</td><td align="right" headers="perSecond Min" class='awrc'>0.13</td><td align="right" headers="perSecond Max" class='awrcrb'>0.26</td></tr>
<tr><td scope="row" class='awrnc'>PX local messages recv'd</td><td align="right" class='awrnc'>88</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.09</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.14</td></tr>
<tr><td scope="row" class='awrc'>PX local messages sent</td><td align="right" class='awrc'>88</td><td align="right" class='awrc'>0.15</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.07</td><td align="right" headers="perSecond StdDev" class='awrc'>0.09</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>PX remote messages recv'd</td><td align="right" class='awrnc'>96</td><td align="right" class='awrnc'>0.16</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.07</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.13</td></tr>
<tr><td scope="row" class='awrc'>PX remote messages sent</td><td align="right" class='awrc'>96</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>Parallel operations not downgraded</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>Requests to/from client</td><td align="right" class='awrc'>253</td><td align="right" class='awrc'>0.42</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.21</td><td align="right" headers="perSecond StdDev" class='awrc'>0.14</td><td align="right" headers="perSecond Min" class='awrc'>0.11</td><td align="right" headers="perSecond Max" class='awrcrb'>0.31</td></tr>
<tr><td scope="row" class='awrnc'>SMON posted for undo segment shrink</td><td align="right" class='awrnc'>32</td><td align="right" class='awrnc'>0.05</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>SQL*Net roundtrips to/from client</td><td align="right" class='awrc'>213</td><td align="right" class='awrc'>0.35</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrc'>0.13</td><td align="right" headers="perSecond Min" class='awrc'>0.08</td><td align="right" headers="perSecond Max" class='awrcrb'>0.27</td></tr>
<tr><td scope="row" class='awrnc'>active txn count during cleanout</td><td align="right" class='awrnc'>406</td><td align="right" class='awrnc'>0.67</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.34</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.32</td><td align="right" headers="perSecond Max" class='awrncrb'>0.35</td></tr>
<tr><td scope="row" class='awrc'>application wait time</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>background timeouts</td><td align="right" class='awrnc'>10,744</td><td align="right" class='awrnc'>17.78</td><td align="right" class='awrnc'>0.04</td><td align="right" headers="perSecond Average" class='awrnclb'>8.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>8.89</td><td align="right" headers="perSecond Max" class='awrncrb'>8.89</td></tr>
<tr><td scope="row" class='awrc'>blocks cleaned out using minact</td><td align="right" class='awrc'>421,499</td><td align="right" class='awrc'>697.35</td><td align="right" class='awrc'>1.67</td><td align="right" headers="perSecond Average" class='awrclb'>348.68</td><td align="right" headers="perSecond StdDev" class='awrc'>42.71</td><td align="right" headers="perSecond Min" class='awrc'>318.48</td><td align="right" headers="perSecond Max" class='awrcrb'>378.87</td></tr>
<tr><td scope="row" class='awrnc'>branch node splits</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>buffer is not pinned count</td><td align="right" class='awrc'>10,136,738</td><td align="right" class='awrc'>16,770.76</td><td align="right" class='awrc'>40.15</td><td align="right" headers="perSecond Average" class='awrclb'>8,385.38</td><td align="right" headers="perSecond StdDev" class='awrc'>382.18</td><td align="right" headers="perSecond Min" class='awrc'>8,115.14</td><td align="right" headers="perSecond Max" class='awrcrb'>8,655.62</td></tr>
<tr><td scope="row" class='awrnc'>buffer is pinned count</td><td align="right" class='awrnc'>3,623,931</td><td align="right" class='awrnc'>5,995.63</td><td align="right" class='awrnc'>14.35</td><td align="right" headers="perSecond Average" class='awrnclb'>2,997.81</td><td align="right" headers="perSecond StdDev" class='awrnc'>131.15</td><td align="right" headers="perSecond Min" class='awrnc'>2,905.08</td><td align="right" headers="perSecond Max" class='awrncrb'>3,090.55</td></tr>
<tr><td scope="row" class='awrc'>bytes received via SQL*Net from client</td><td align="right" class='awrc'>426,817</td><td align="right" class='awrc'>706.15</td><td align="right" class='awrc'>1.69</td><td align="right" headers="perSecond Average" class='awrclb'>353.07</td><td align="right" headers="perSecond StdDev" class='awrc'>447.53</td><td align="right" headers="perSecond Min" class='awrc'>36.62</td><td align="right" headers="perSecond Max" class='awrcrb'>669.52</td></tr>
<tr><td scope="row" class='awrnc'>bytes sent via SQL*Net to client</td><td align="right" class='awrnc'>46,453</td><td align="right" class='awrnc'>76.85</td><td align="right" class='awrnc'>0.18</td><td align="right" headers="perSecond Average" class='awrnclb'>38.43</td><td align="right" headers="perSecond StdDev" class='awrnc'>20.34</td><td align="right" headers="perSecond Min" class='awrnc'>24.04</td><td align="right" headers="perSecond Max" class='awrncrb'>52.81</td></tr>
<tr><td scope="row" class='awrc'>calls to get snapshot scn: kcmgss</td><td align="right" class='awrc'>1,944,428</td><td align="right" class='awrc'>3,216.97</td><td align="right" class='awrc'>7.70</td><td align="right" headers="perSecond Average" class='awrclb'>1,608.48</td><td align="right" headers="perSecond StdDev" class='awrc'>78.94</td><td align="right" headers="perSecond Min" class='awrc'>1,552.66</td><td align="right" headers="perSecond Max" class='awrcrb'>1,664.30</td></tr>
<tr><td scope="row" class='awrnc'>calls to kcmgas</td><td align="right" class='awrnc'>461,360</td><td align="right" class='awrnc'>763.30</td><td align="right" class='awrnc'>1.83</td><td align="right" headers="perSecond Average" class='awrnclb'>381.65</td><td align="right" headers="perSecond StdDev" class='awrnc'>7.78</td><td align="right" headers="perSecond Min" class='awrnc'>376.15</td><td align="right" headers="perSecond Max" class='awrncrb'>387.15</td></tr>
<tr><td scope="row" class='awrc'>calls to kcmgcs</td><td align="right" class='awrc'>4,801</td><td align="right" class='awrc'>7.94</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>3.97</td><td align="right" headers="perSecond StdDev" class='awrc'>0.66</td><td align="right" headers="perSecond Min" class='awrc'>3.50</td><td align="right" headers="perSecond Max" class='awrcrb'>4.44</td></tr>
<tr><td scope="row" class='awrnc'>cell physical IO interconnect bytes</td><td align="right" class='awrnc'>54,542,342,144</td><td align="right" class='awrnc'>90,237,782.87</td><td align="right" class='awrnc'>216,049.49</td><td align="right" headers="perSecond Average" class='awrnclb'>45,118,891.44</td><td align="right" headers="perSecond StdDev" class='awrnc'>2,187,668.41</td><td align="right" headers="perSecond Min" class='awrnc'>43,571,976.27</td><td align="right" headers="perSecond Max" class='awrncrb'>46,665,806.60</td></tr>
<tr><td scope="row" class='awrc'>change write time</td><td align="right" class='awrc'>3,265</td><td align="right" class='awrc'>5.40</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>2.70</td><td align="right" headers="perSecond StdDev" class='awrc'>0.17</td><td align="right" headers="perSecond Min" class='awrc'>2.58</td><td align="right" headers="perSecond Max" class='awrcrb'>2.82</td></tr>
<tr><td scope="row" class='awrnc'>cleanout - number of ktugct calls</td><td align="right" class='awrnc'>2,944</td><td align="right" class='awrnc'>4.87</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>2.44</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.24</td><td align="right" headers="perSecond Min" class='awrnc'>2.26</td><td align="right" headers="perSecond Max" class='awrncrb'>2.61</td></tr>
<tr><td scope="row" class='awrc'>cleanouts and rollbacks - consistent read gets</td><td align="right" class='awrc'>7</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>cleanouts only - consistent read gets</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>cluster key scan block gets</td><td align="right" class='awrc'>165</td><td align="right" class='awrc'>0.27</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.14</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.14</td><td align="right" headers="perSecond Max" class='awrcrb'>0.14</td></tr>
<tr><td scope="row" class='awrnc'>cluster key scans</td><td align="right" class='awrnc'>156</td><td align="right" class='awrnc'>0.26</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.13</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.13</td><td align="right" headers="perSecond Max" class='awrncrb'>0.13</td></tr>
<tr><td scope="row" class='awrc'>cluster wait time</td><td align="right" class='awrc'>153,050</td><td align="right" class='awrc'>253.21</td><td align="right" class='awrc'>0.61</td><td align="right" headers="perSecond Average" class='awrclb'>126.61</td><td align="right" headers="perSecond StdDev" class='awrc'>7.67</td><td align="right" headers="perSecond Min" class='awrc'>121.18</td><td align="right" headers="perSecond Max" class='awrcrb'>132.03</td></tr>
<tr><td scope="row" class='awrnc'>commit batch/immediate performed</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit batch/immediate requested</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanout failures: block lost</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>commit cleanout failures: callback failure</td><td align="right" class='awrc'>23</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>commit cleanouts</td><td align="right" class='awrnc'>758,287</td><td align="right" class='awrnc'>1,254.55</td><td align="right" class='awrnc'>3.00</td><td align="right" headers="perSecond Average" class='awrnclb'>627.28</td><td align="right" headers="perSecond StdDev" class='awrnc'>27.86</td><td align="right" headers="perSecond Min" class='awrnc'>607.57</td><td align="right" headers="perSecond Max" class='awrncrb'>646.98</td></tr>
<tr><td scope="row" class='awrc'>commit cleanouts successfully completed</td><td align="right" class='awrc'>758,249</td><td align="right" class='awrc'>1,254.49</td><td align="right" class='awrc'>3.00</td><td align="right" headers="perSecond Average" class='awrclb'>627.24</td><td align="right" headers="perSecond StdDev" class='awrc'>27.86</td><td align="right" headers="perSecond Min" class='awrc'>607.54</td><td align="right" headers="perSecond Max" class='awrcrb'>646.94</td></tr>
<tr><td scope="row" class='awrnc'>commit immediate performed</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>commit immediate requested</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>commit txn count during cleanout</td><td align="right" class='awrnc'>216</td><td align="right" class='awrnc'>0.36</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.16</td><td align="right" headers="perSecond Max" class='awrncrb'>0.20</td></tr>
<tr><td scope="row" class='awrc'>concurrency wait time</td><td align="right" class='awrc'>6</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>consistent changes</td><td align="right" class='awrnc'>922,650</td><td align="right" class='awrnc'>1,526.48</td><td align="right" class='awrnc'>3.65</td><td align="right" headers="perSecond Average" class='awrnclb'>763.24</td><td align="right" headers="perSecond StdDev" class='awrnc'>58.82</td><td align="right" headers="perSecond Min" class='awrnc'>721.65</td><td align="right" headers="perSecond Max" class='awrncrb'>804.83</td></tr>
<tr><td scope="row" class='awrc'>consistent gets</td><td align="right" class='awrc'>10,307,541</td><td align="right" class='awrc'>17,053.35</td><td align="right" class='awrc'>40.83</td><td align="right" headers="perSecond Average" class='awrclb'>8,526.68</td><td align="right" headers="perSecond StdDev" class='awrc'>286.50</td><td align="right" headers="perSecond Min" class='awrc'>8,324.09</td><td align="right" headers="perSecond Max" class='awrcrb'>8,729.26</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets examination</td><td align="right" class='awrnc'>4,288,062</td><td align="right" class='awrnc'>7,094.40</td><td align="right" class='awrnc'>16.99</td><td align="right" headers="perSecond Average" class='awrnclb'>3,547.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>61.54</td><td align="right" headers="perSecond Min" class='awrnc'>3,503.68</td><td align="right" headers="perSecond Max" class='awrncrb'>3,590.72</td></tr>
<tr><td scope="row" class='awrc'>consistent gets examination (fastpath)</td><td align="right" class='awrc'>4,287,689</td><td align="right" class='awrc'>7,093.78</td><td align="right" class='awrc'>16.98</td><td align="right" headers="perSecond Average" class='awrclb'>3,546.89</td><td align="right" headers="perSecond StdDev" class='awrc'>61.47</td><td align="right" headers="perSecond Min" class='awrc'>3,503.42</td><td align="right" headers="perSecond Max" class='awrcrb'>3,590.36</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets from cache</td><td align="right" class='awrnc'>10,307,541</td><td align="right" class='awrnc'>17,053.35</td><td align="right" class='awrnc'>40.83</td><td align="right" headers="perSecond Average" class='awrnclb'>8,526.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>286.50</td><td align="right" headers="perSecond Min" class='awrnc'>8,324.09</td><td align="right" headers="perSecond Max" class='awrncrb'>8,729.26</td></tr>
<tr><td scope="row" class='awrc'>consistent gets pin</td><td align="right" class='awrc'>6,019,479</td><td align="right" class='awrc'>9,958.95</td><td align="right" class='awrc'>23.84</td><td align="right" headers="perSecond Average" class='awrclb'>4,979.47</td><td align="right" headers="perSecond StdDev" class='awrc'>224.96</td><td align="right" headers="perSecond Min" class='awrc'>4,820.40</td><td align="right" headers="perSecond Max" class='awrcrb'>5,138.55</td></tr>
<tr><td scope="row" class='awrnc'>consistent gets pin (fastpath)</td><td align="right" class='awrnc'>1,856,813</td><td align="right" class='awrnc'>3,072.01</td><td align="right" class='awrnc'>7.36</td><td align="right" headers="perSecond Average" class='awrnclb'>1,536.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>59.60</td><td align="right" headers="perSecond Min" class='awrnc'>1,493.86</td><td align="right" headers="perSecond Max" class='awrncrb'>1,578.15</td></tr>
<tr><td scope="row" class='awrc'>cursor authentications</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>data blocks consistent reads - undo records applied</td><td align="right" class='awrnc'>101</td><td align="right" class='awrnc'>0.17</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.09</td></tr>
<tr><td scope="row" class='awrc'>db block changes</td><td align="right" class='awrc'>2,068,075</td><td align="right" class='awrc'>3,421.53</td><td align="right" class='awrc'>8.19</td><td align="right" headers="perSecond Average" class='awrclb'>1,710.77</td><td align="right" headers="perSecond StdDev" class='awrc'>77.26</td><td align="right" headers="perSecond Min" class='awrc'>1,656.14</td><td align="right" headers="perSecond Max" class='awrcrb'>1,765.40</td></tr>
<tr><td scope="row" class='awrnc'>db block gets</td><td align="right" class='awrnc'>1,355,114</td><td align="right" class='awrnc'>2,241.97</td><td align="right" class='awrnc'>5.37</td><td align="right" headers="perSecond Average" class='awrnclb'>1,120.99</td><td align="right" headers="perSecond StdDev" class='awrnc'>55.80</td><td align="right" headers="perSecond Min" class='awrnc'>1,081.53</td><td align="right" headers="perSecond Max" class='awrncrb'>1,160.44</td></tr>
<tr><td scope="row" class='awrc'>db block gets direct</td><td align="right" class='awrc'>224</td><td align="right" class='awrc'>0.37</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrc'>0.12</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.27</td></tr>
<tr><td scope="row" class='awrnc'>db block gets from cache</td><td align="right" class='awrnc'>1,354,890</td><td align="right" class='awrnc'>2,241.60</td><td align="right" class='awrnc'>5.37</td><td align="right" headers="perSecond Average" class='awrnclb'>1,120.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>55.69</td><td align="right" headers="perSecond Min" class='awrnc'>1,081.43</td><td align="right" headers="perSecond Max" class='awrncrb'>1,160.18</td></tr>
<tr><td scope="row" class='awrc'>db block gets from cache (fastpath)</td><td align="right" class='awrc'>555,382</td><td align="right" class='awrc'>918.85</td><td align="right" class='awrc'>2.20</td><td align="right" headers="perSecond Average" class='awrclb'>459.43</td><td align="right" headers="perSecond StdDev" class='awrc'>22.91</td><td align="right" headers="perSecond Min" class='awrc'>443.23</td><td align="right" headers="perSecond Max" class='awrcrb'>475.63</td></tr>
<tr><td scope="row" class='awrnc'>deferred (CURRENT) block cleanout applications</td><td align="right" class='awrnc'>423,143</td><td align="right" class='awrnc'>700.07</td><td align="right" class='awrnc'>1.68</td><td align="right" headers="perSecond Average" class='awrnclb'>350.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>42.64</td><td align="right" headers="perSecond Min" class='awrnc'>319.88</td><td align="right" headers="perSecond Max" class='awrncrb'>380.19</td></tr>
<tr><td scope="row" class='awrc'>dirty buffers inspected</td><td align="right" class='awrc'>596,347</td><td align="right" class='awrc'>986.63</td><td align="right" class='awrc'>2.36</td><td align="right" headers="perSecond Average" class='awrclb'>493.31</td><td align="right" headers="perSecond StdDev" class='awrc'>13.08</td><td align="right" headers="perSecond Min" class='awrc'>484.06</td><td align="right" headers="perSecond Max" class='awrcrb'>502.57</td></tr>
<tr><td scope="row" class='awrnc'>enqueue conversions</td><td align="right" class='awrnc'>706</td><td align="right" class='awrnc'>1.17</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.58</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.15</td><td align="right" headers="perSecond Min" class='awrnc'>0.48</td><td align="right" headers="perSecond Max" class='awrncrb'>0.69</td></tr>
<tr><td scope="row" class='awrc'>enqueue releases</td><td align="right" class='awrc'>522,630</td><td align="right" class='awrc'>864.67</td><td align="right" class='awrc'>2.07</td><td align="right" headers="perSecond Average" class='awrclb'>432.33</td><td align="right" headers="perSecond StdDev" class='awrc'>19.41</td><td align="right" headers="perSecond Min" class='awrc'>418.61</td><td align="right" headers="perSecond Max" class='awrcrb'>446.06</td></tr>
<tr><td scope="row" class='awrnc'>enqueue requests</td><td align="right" class='awrnc'>522,600</td><td align="right" class='awrnc'>864.62</td><td align="right" class='awrnc'>2.07</td><td align="right" headers="perSecond Average" class='awrnclb'>432.31</td><td align="right" headers="perSecond StdDev" class='awrnc'>19.39</td><td align="right" headers="perSecond Min" class='awrnc'>418.60</td><td align="right" headers="perSecond Max" class='awrncrb'>446.02</td></tr>
<tr><td scope="row" class='awrc'>enqueue timeouts</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>enqueue waits</td><td align="right" class='awrnc'>407</td><td align="right" class='awrnc'>0.67</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.34</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.03</td><td align="right" headers="perSecond Min" class='awrnc'>0.31</td><td align="right" headers="perSecond Max" class='awrncrb'>0.36</td></tr>
<tr><td scope="row" class='awrc'>exchange deadlocks</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>execute count</td><td align="right" class='awrnc'>1,683,794</td><td align="right" class='awrnc'>2,785.76</td><td align="right" class='awrnc'>6.67</td><td align="right" headers="perSecond Average" class='awrnclb'>1,392.88</td><td align="right" headers="perSecond StdDev" class='awrnc'>62.05</td><td align="right" headers="perSecond Min" class='awrnc'>1,349.01</td><td align="right" headers="perSecond Max" class='awrncrb'>1,436.75</td></tr>
<tr><td scope="row" class='awrc'>file io service time</td><td align="right" class='awrc'>849,190,891</td><td align="right" class='awrc'>1,404,946.01</td><td align="right" class='awrc'>3,363.76</td><td align="right" headers="perSecond Average" class='awrclb'>702,473.00</td><td align="right" headers="perSecond StdDev" class='awrc'>183,999.33</td><td align="right" headers="perSecond Min" class='awrc'>572,365.83</td><td align="right" headers="perSecond Max" class='awrcrb'>832,580.18</td></tr>
<tr><td scope="row" class='awrnc'>file io wait time</td><td align="right" class='awrnc'>49,863,562,783</td><td align="right" class='awrnc'>82,496,934.80</td><td align="right" class='awrnc'>197,516.22</td><td align="right" headers="perSecond Average" class='awrnclb'>41,248,467.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>5,416,453.01</td><td align="right" headers="perSecond Min" class='awrnc'>37,418,456.74</td><td align="right" headers="perSecond Max" class='awrncrb'>45,078,478.06</td></tr>
<tr><td scope="row" class='awrc'>free buffer inspected</td><td align="right" class='awrc'>4,940,272</td><td align="right" class='awrc'>8,173.45</td><td align="right" class='awrc'>19.57</td><td align="right" headers="perSecond Average" class='awrclb'>4,086.73</td><td align="right" headers="perSecond StdDev" class='awrc'>197.81</td><td align="right" headers="perSecond Min" class='awrc'>3,946.85</td><td align="right" headers="perSecond Max" class='awrcrb'>4,226.60</td></tr>
<tr><td scope="row" class='awrnc'>free buffer requested</td><td align="right" class='awrnc'>4,913,618</td><td align="right" class='awrnc'>8,129.35</td><td align="right" class='awrnc'>19.46</td><td align="right" headers="perSecond Average" class='awrnclb'>4,064.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>199.84</td><td align="right" headers="perSecond Min" class='awrnc'>3,923.37</td><td align="right" headers="perSecond Max" class='awrncrb'>4,205.98</td></tr>
<tr><td scope="row" class='awrc'>gc blocks compressed</td><td align="right" class='awrc'>26,278</td><td align="right" class='awrc'>43.48</td><td align="right" class='awrc'>0.10</td><td align="right" headers="perSecond Average" class='awrclb'>21.74</td><td align="right" headers="perSecond StdDev" class='awrc'>2.46</td><td align="right" headers="perSecond Min" class='awrc'>20.00</td><td align="right" headers="perSecond Max" class='awrcrb'>23.48</td></tr>
<tr><td scope="row" class='awrnc'>gc blocks lost</td><td align="right" class='awrnc'>9</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>gc cleanout saved</td><td align="right" class='awrc'>15</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>gc cr anti locks created</td><td align="right" class='awrnc'>62,044</td><td align="right" class='awrnc'>102.65</td><td align="right" class='awrnc'>0.25</td><td align="right" headers="perSecond Average" class='awrnclb'>51.32</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.33</td><td align="right" headers="perSecond Min" class='awrnc'>51.09</td><td align="right" headers="perSecond Max" class='awrncrb'>51.56</td></tr>
<tr><td scope="row" class='awrc'>gc cr anti locks shrunk</td><td align="right" class='awrc'>26</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block build time</td><td align="right" class='awrnc'>280</td><td align="right" class='awrnc'>0.46</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.23</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.22</td><td align="right" headers="perSecond Max" class='awrncrb'>0.25</td></tr>
<tr><td scope="row" class='awrc'>gc cr block flush time</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>gc cr block receive time</td><td align="right" class='awrnc'>820</td><td align="right" class='awrnc'>1.36</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.17</td><td align="right" headers="perSecond Min" class='awrnc'>0.56</td><td align="right" headers="perSecond Max" class='awrncrb'>0.80</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks built</td><td align="right" class='awrc'>5,536</td><td align="right" class='awrc'>9.16</td><td align="right" class='awrc'>0.02</td><td align="right" headers="perSecond Average" class='awrclb'>4.58</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>4.58</td><td align="right" headers="perSecond Max" class='awrcrb'>4.58</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks flushed</td><td align="right" class='awrnc'>37</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.04</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.06</td></tr>
<tr><td scope="row" class='awrc'>gc cr blocks received</td><td align="right" class='awrc'>7,047</td><td align="right" class='awrc'>11.66</td><td align="right" class='awrc'>0.03</td><td align="right" headers="perSecond Average" class='awrclb'>5.83</td><td align="right" headers="perSecond StdDev" class='awrc'>1.72</td><td align="right" headers="perSecond Min" class='awrc'>4.61</td><td align="right" headers="perSecond Max" class='awrcrb'>7.05</td></tr>
<tr><td scope="row" class='awrnc'>gc cr blocks served</td><td align="right" class='awrnc'>7,049</td><td align="right" class='awrnc'>11.66</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>5.83</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.72</td><td align="right" headers="perSecond Min" class='awrnc'>4.61</td><td align="right" headers="perSecond Max" class='awrncrb'>7.05</td></tr>
<tr><td scope="row" class='awrc'>gc cr multiblock grants received</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current block flush time</td><td align="right" class='awrnc'>74</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.08</td></tr>
<tr><td scope="row" class='awrc'>gc current block receive time</td><td align="right" class='awrc'>1,869</td><td align="right" class='awrc'>3.09</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.55</td><td align="right" headers="perSecond StdDev" class='awrc'>0.17</td><td align="right" headers="perSecond Min" class='awrc'>1.43</td><td align="right" headers="perSecond Max" class='awrcrb'>1.67</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks flushed</td><td align="right" class='awrnc'>54</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks pinned</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc current blocks received</td><td align="right" class='awrnc'>23,952</td><td align="right" class='awrnc'>39.63</td><td align="right" class='awrnc'>0.09</td><td align="right" headers="perSecond Average" class='awrnclb'>19.81</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.90</td><td align="right" headers="perSecond Min" class='awrnc'>18.47</td><td align="right" headers="perSecond Max" class='awrncrb'>21.16</td></tr>
<tr><td scope="row" class='awrc'>gc current blocks served</td><td align="right" class='awrc'>23,965</td><td align="right" class='awrc'>39.65</td><td align="right" class='awrc'>0.09</td><td align="right" headers="perSecond Average" class='awrclb'>19.82</td><td align="right" headers="perSecond StdDev" class='awrc'>1.92</td><td align="right" headers="perSecond Min" class='awrc'>18.47</td><td align="right" headers="perSecond Max" class='awrcrb'>21.18</td></tr>
<tr><td scope="row" class='awrnc'>gc force cr read cr</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>gc kbytes saved</td><td align="right" class='awrc'>109,957</td><td align="right" class='awrc'>181.92</td><td align="right" class='awrc'>0.44</td><td align="right" headers="perSecond Average" class='awrclb'>90.96</td><td align="right" headers="perSecond StdDev" class='awrc'>11.75</td><td align="right" headers="perSecond Min" class='awrc'>82.65</td><td align="right" headers="perSecond Max" class='awrcrb'>99.27</td></tr>
<tr><td scope="row" class='awrnc'>gc kbytes sent</td><td align="right" class='awrnc'>138,154</td><td align="right" class='awrnc'>228.57</td><td align="right" class='awrnc'>0.55</td><td align="right" headers="perSecond Average" class='awrnclb'>114.28</td><td align="right" headers="perSecond StdDev" class='awrnc'>17.39</td><td align="right" headers="perSecond Min" class='awrnc'>101.99</td><td align="right" headers="perSecond Max" class='awrncrb'>126.58</td></tr>
<tr><td scope="row" class='awrc'>gc local grants</td><td align="right" class='awrc'>2,570,760</td><td align="right" class='awrc'>4,253.20</td><td align="right" class='awrc'>10.18</td><td align="right" headers="perSecond Average" class='awrclb'>2,126.60</td><td align="right" headers="perSecond StdDev" class='awrc'>172.92</td><td align="right" headers="perSecond Min" class='awrc'>2,004.33</td><td align="right" headers="perSecond Max" class='awrcrb'>2,248.88</td></tr>
<tr><td scope="row" class='awrnc'>gc merge pi bg</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gc merge pi fg</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>gc reader bypass grants</td><td align="right" class='awrnc'>39</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>gc reader bypass waits</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gc remote grants</td><td align="right" class='awrnc'>2,332,107</td><td align="right" class='awrnc'>3,858.36</td><td align="right" class='awrnc'>9.24</td><td align="right" headers="perSecond Average" class='awrnclb'>1,929.18</td><td align="right" headers="perSecond StdDev" class='awrnc'>23.59</td><td align="right" headers="perSecond Min" class='awrnc'>1,912.50</td><td align="right" headers="perSecond Max" class='awrncrb'>1,945.86</td></tr>
<tr><td scope="row" class='awrc'>gc status messages received</td><td align="right" class='awrc'>2,257,016</td><td align="right" class='awrc'>3,734.13</td><td align="right" class='awrc'>8.94</td><td align="right" headers="perSecond Average" class='awrclb'>1,867.06</td><td align="right" headers="perSecond StdDev" class='awrc'>15.13</td><td align="right" headers="perSecond Min" class='awrc'>1,856.36</td><td align="right" headers="perSecond Max" class='awrcrb'>1,877.77</td></tr>
<tr><td scope="row" class='awrnc'>gc status messages sent</td><td align="right" class='awrnc'>2,257,073</td><td align="right" class='awrnc'>3,734.22</td><td align="right" class='awrnc'>8.94</td><td align="right" headers="perSecond Average" class='awrnclb'>1,867.11</td><td align="right" headers="perSecond StdDev" class='awrnc'>14.64</td><td align="right" headers="perSecond Min" class='awrnc'>1,856.76</td><td align="right" headers="perSecond Max" class='awrncrb'>1,877.47</td></tr>
<tr><td scope="row" class='awrc'>gcs affinity lock grants</td><td align="right" class='awrc'>18,864</td><td align="right" class='awrc'>31.21</td><td align="right" class='awrc'>0.07</td><td align="right" headers="perSecond Average" class='awrclb'>15.60</td><td align="right" headers="perSecond StdDev" class='awrc'>6.90</td><td align="right" headers="perSecond Min" class='awrc'>10.73</td><td align="right" headers="perSecond Max" class='awrcrb'>20.48</td></tr>
<tr><td scope="row" class='awrnc'>gcs anti-locks created</td><td align="right" class='awrnc'>62,018</td><td align="right" class='awrnc'>102.61</td><td align="right" class='awrnc'>0.25</td><td align="right" headers="perSecond Average" class='awrnclb'>51.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.31</td><td align="right" headers="perSecond Min" class='awrnc'>51.08</td><td align="right" headers="perSecond Max" class='awrncrb'>51.52</td></tr>
<tr><td scope="row" class='awrc'>gcs data block access records</td><td align="right" class='awrc'>4,894,274</td><td align="right" class='awrc'>8,097.35</td><td align="right" class='awrc'>19.39</td><td align="right" headers="perSecond Average" class='awrclb'>4,048.68</td><td align="right" headers="perSecond StdDev" class='awrc'>192.09</td><td align="right" headers="perSecond Min" class='awrc'>3,912.85</td><td align="right" headers="perSecond Max" class='awrcrb'>4,184.50</td></tr>
<tr><td scope="row" class='awrnc'>gcs messages sent</td><td align="right" class='awrnc'>5,422,956</td><td align="right" class='awrnc'>8,972.03</td><td align="right" class='awrnc'>21.48</td><td align="right" headers="perSecond Average" class='awrnclb'>4,486.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>25.04</td><td align="right" headers="perSecond Min" class='awrnc'>4,468.31</td><td align="right" headers="perSecond Max" class='awrncrb'>4,503.72</td></tr>
<tr><td scope="row" class='awrc'>gcs read-mostly lock failures</td><td align="right" class='awrc'>59,937</td><td align="right" class='awrc'>99.16</td><td align="right" class='awrc'>0.24</td><td align="right" headers="perSecond Average" class='awrclb'>49.58</td><td align="right" headers="perSecond StdDev" class='awrc'>22.86</td><td align="right" headers="perSecond Min" class='awrc'>33.42</td><td align="right" headers="perSecond Max" class='awrcrb'>65.74</td></tr>
<tr><td scope="row" class='awrnc'>gcs read-mostly lock grants</td><td align="right" class='awrnc'>338,903</td><td align="right" class='awrnc'>560.70</td><td align="right" class='awrnc'>1.34</td><td align="right" headers="perSecond Average" class='awrnclb'>280.35</td><td align="right" headers="perSecond StdDev" class='awrnc'>129.52</td><td align="right" headers="perSecond Min" class='awrnc'>188.77</td><td align="right" headers="perSecond Max" class='awrncrb'>371.93</td></tr>
<tr><td scope="row" class='awrc'>gcs stats management (SCM) process posts</td><td align="right" class='awrc'>13</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>ges messages sent</td><td align="right" class='awrnc'>3,623</td><td align="right" class='awrnc'>5.99</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>3.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.84</td><td align="right" headers="perSecond Min" class='awrnc'>2.40</td><td align="right" headers="perSecond Max" class='awrncrb'>3.59</td></tr>
<tr><td scope="row" class='awrc'>global enqueue get time</td><td align="right" class='awrc'>1,248</td><td align="right" class='awrc'>2.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>1.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.11</td><td align="right" headers="perSecond Min" class='awrc'>0.96</td><td align="right" headers="perSecond Max" class='awrcrb'>1.11</td></tr>
<tr><td scope="row" class='awrnc'>global enqueue gets sync</td><td align="right" class='awrnc'>270,571</td><td align="right" class='awrnc'>447.65</td><td align="right" class='awrnc'>1.07</td><td align="right" headers="perSecond Average" class='awrnclb'>223.82</td><td align="right" headers="perSecond StdDev" class='awrnc'>18.01</td><td align="right" headers="perSecond Min" class='awrnc'>211.09</td><td align="right" headers="perSecond Max" class='awrncrb'>236.56</td></tr>
<tr><td scope="row" class='awrc'>global enqueue releases</td><td align="right" class='awrc'>269,962</td><td align="right" class='awrc'>446.64</td><td align="right" class='awrc'>1.07</td><td align="right" headers="perSecond Average" class='awrclb'>223.32</td><td align="right" headers="perSecond StdDev" class='awrc'>17.54</td><td align="right" headers="perSecond Min" class='awrc'>210.92</td><td align="right" headers="perSecond Max" class='awrcrb'>235.72</td></tr>
<tr><td scope="row" class='awrnc'>heap block compress</td><td align="right" class='awrnc'>18,759</td><td align="right" class='awrnc'>31.04</td><td align="right" class='awrnc'>0.07</td><td align="right" headers="perSecond Average" class='awrnclb'>15.52</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.82</td><td align="right" headers="perSecond Min" class='awrnc'>14.93</td><td align="right" headers="perSecond Max" class='awrncrb'>16.10</td></tr>
<tr><td scope="row" class='awrc'>hot buffers moved to head of LRU</td><td align="right" class='awrc'>159,467</td><td align="right" class='awrc'>263.83</td><td align="right" class='awrc'>0.63</td><td align="right" headers="perSecond Average" class='awrclb'>131.92</td><td align="right" headers="perSecond StdDev" class='awrc'>8.27</td><td align="right" headers="perSecond Min" class='awrc'>126.07</td><td align="right" headers="perSecond Max" class='awrcrb'>137.76</td></tr>
<tr><td scope="row" class='awrnc'>immediate (CR) block cleanout applications</td><td align="right" class='awrnc'>56</td><td align="right" class='awrnc'>0.09</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.05</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>0.05</td></tr>
<tr><td scope="row" class='awrc'>immediate (CURRENT) block cleanout applications</td><td align="right" class='awrc'>429</td><td align="right" class='awrc'>0.71</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.35</td><td align="right" headers="perSecond StdDev" class='awrc'>0.07</td><td align="right" headers="perSecond Min" class='awrc'>0.31</td><td align="right" headers="perSecond Max" class='awrcrb'>0.40</td></tr>
<tr><td scope="row" class='awrnc'>in call idle wait time</td><td align="right" class='awrnc'>9,940,881</td><td align="right" class='awrnc'>16,446.73</td><td align="right" class='awrnc'>39.38</td><td align="right" headers="perSecond Average" class='awrnclb'>8,223.37</td><td align="right" headers="perSecond StdDev" class='awrnc'>20.15</td><td align="right" headers="perSecond Min" class='awrnc'>8,209.12</td><td align="right" headers="perSecond Max" class='awrncrb'>8,237.61</td></tr>
<tr><td scope="row" class='awrc'>index crx upgrade (positioned)</td><td align="right" class='awrc'>61</td><td align="right" class='awrc'>0.10</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.10</td></tr>
<tr><td scope="row" class='awrnc'>index fast full scans (full)</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>index fetch by key</td><td align="right" class='awrc'>1,877</td><td align="right" class='awrc'>3.11</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.55</td><td align="right" headers="perSecond StdDev" class='awrc'>0.55</td><td align="right" headers="perSecond Min" class='awrc'>1.16</td><td align="right" headers="perSecond Max" class='awrcrb'>1.94</td></tr>
<tr><td scope="row" class='awrnc'>index range scans</td><td align="right" class='awrnc'>1,682,356</td><td align="right" class='awrnc'>2,783.38</td><td align="right" class='awrnc'>6.66</td><td align="right" headers="perSecond Average" class='awrnclb'>1,391.69</td><td align="right" headers="perSecond StdDev" class='awrnc'>62.76</td><td align="right" headers="perSecond Min" class='awrnc'>1,347.31</td><td align="right" headers="perSecond Max" class='awrncrb'>1,436.07</td></tr>
<tr><td scope="row" class='awrc'>index reclamation/extension switch</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>leaf node 90-10 splits</td><td align="right" class='awrnc'>15</td><td align="right" class='awrnc'>0.02</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>leaf node splits</td><td align="right" class='awrc'>143</td><td align="right" class='awrc'>0.24</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.11</td><td align="right" headers="perSecond Max" class='awrcrb'>0.13</td></tr>
<tr><td scope="row" class='awrnc'>lob reads</td><td align="right" class='awrnc'>180</td><td align="right" class='awrnc'>0.30</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.30</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.30</td><td align="right" headers="perSecond Max" class='awrncrb'>0.30</td></tr>
<tr><td scope="row" class='awrc'>lob writes</td><td align="right" class='awrc'>3,149</td><td align="right" class='awrc'>5.21</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>2.60</td><td align="right" headers="perSecond StdDev" class='awrc'>3.63</td><td align="right" headers="perSecond Min" class='awrc'>0.04</td><td align="right" headers="perSecond Max" class='awrcrb'>5.17</td></tr>
<tr><td scope="row" class='awrnc'>lob writes unaligned</td><td align="right" class='awrnc'>3,149</td><td align="right" class='awrnc'>5.21</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>2.60</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.63</td><td align="right" headers="perSecond Min" class='awrnc'>0.04</td><td align="right" headers="perSecond Max" class='awrncrb'>5.17</td></tr>
<tr><td scope="row" class='awrc'>logical read bytes from cache</td><td align="right" class='awrc'>95,538,634,752</td><td align="right" class='awrc'>158,064,260.42</td><td align="right" class='awrc'>378,441.27</td><td align="right" headers="perSecond Average" class='awrclb'>79,032,130.21</td><td align="right" headers="perSecond StdDev" class='awrc'>2,803,219.97</td><td align="right" headers="perSecond Min" class='awrc'>77,049,954.36</td><td align="right" headers="perSecond Max" class='awrcrb'>81,014,306.06</td></tr>
<tr><td scope="row" class='awrnc'>logons cumulative</td><td align="right" class='awrnc'>27</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>max cf enq hold time</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>messages received</td><td align="right" class='awrnc'>261,104</td><td align="right" class='awrnc'>431.98</td><td align="right" class='awrnc'>1.03</td><td align="right" headers="perSecond Average" class='awrnclb'>215.99</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.51</td><td align="right" headers="perSecond Min" class='awrnc'>214.92</td><td align="right" headers="perSecond Max" class='awrncrb'>217.06</td></tr>
<tr><td scope="row" class='awrc'>messages sent</td><td align="right" class='awrc'>261,104</td><td align="right" class='awrc'>431.98</td><td align="right" class='awrc'>1.03</td><td align="right" headers="perSecond Average" class='awrclb'>215.99</td><td align="right" headers="perSecond StdDev" class='awrc'>1.51</td><td align="right" headers="perSecond Min" class='awrc'>214.92</td><td align="right" headers="perSecond Max" class='awrcrb'>217.06</td></tr>
<tr><td scope="row" class='awrnc'>no work - consistent read gets</td><td align="right" class='awrnc'>6,002,893</td><td align="right" class='awrnc'>9,931.51</td><td align="right" class='awrnc'>23.78</td><td align="right" headers="perSecond Average" class='awrnclb'>4,965.75</td><td align="right" headers="perSecond StdDev" class='awrnc'>218.95</td><td align="right" headers="perSecond Min" class='awrnc'>4,810.94</td><td align="right" headers="perSecond Max" class='awrncrb'>5,120.57</td></tr>
<tr><td scope="row" class='awrc'>non-idle wait count</td><td align="right" class='awrc'>10,339,592</td><td align="right" class='awrc'>17,106.38</td><td align="right" class='awrc'>40.96</td><td align="right" headers="perSecond Average" class='awrclb'>8,553.19</td><td align="right" headers="perSecond StdDev" class='awrc'>297.23</td><td align="right" headers="perSecond Min" class='awrc'>8,343.01</td><td align="right" headers="perSecond Max" class='awrcrb'>8,763.36</td></tr>
<tr><td scope="row" class='awrnc'>non-idle wait time</td><td align="right" class='awrnc'>2,324,472</td><td align="right" class='awrnc'>3,845.73</td><td align="right" class='awrnc'>9.21</td><td align="right" headers="perSecond Average" class='awrnclb'>1,922.87</td><td align="right" headers="perSecond StdDev" class='awrnc'>149.65</td><td align="right" headers="perSecond Min" class='awrnc'>1,817.04</td><td align="right" headers="perSecond Max" class='awrncrb'>2,028.69</td></tr>
<tr><td scope="row" class='awrc'>opened cursors cumulative</td><td align="right" class='awrc'>1,938,136</td><td align="right" class='awrc'>3,206.56</td><td align="right" class='awrc'>7.68</td><td align="right" headers="perSecond Average" class='awrclb'>1,603.28</td><td align="right" headers="perSecond StdDev" class='awrc'>71.45</td><td align="right" headers="perSecond Min" class='awrc'>1,552.76</td><td align="right" headers="perSecond Max" class='awrcrb'>1,653.80</td></tr>
<tr><td scope="row" class='awrnc'>parse count (describe)</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>parse count (hard)</td><td align="right" class='awrc'>30</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>parse count (total)</td><td align="right" class='awrnc'>2,226</td><td align="right" class='awrnc'>3.68</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>1.84</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.54</td><td align="right" headers="perSecond Min" class='awrnc'>1.46</td><td align="right" headers="perSecond Max" class='awrncrb'>2.22</td></tr>
<tr><td scope="row" class='awrc'>parse time cpu</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>parse time elapsed</td><td align="right" class='awrnc'>21</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
<tr><td scope="row" class='awrc'>physical read IO requests</td><td align="right" class='awrc'>4,862,881</td><td align="right" class='awrc'>8,045.41</td><td align="right" class='awrc'>19.26</td><td align="right" headers="perSecond Average" class='awrclb'>4,022.71</td><td align="right" headers="perSecond StdDev" class='awrc'>189.62</td><td align="right" headers="perSecond Min" class='awrc'>3,888.62</td><td align="right" headers="perSecond Max" class='awrcrb'>4,156.79</td></tr>
<tr><td scope="row" class='awrnc'>physical read bytes</td><td align="right" class='awrnc'>39,837,294,592</td><td align="right" class='awrnc'>65,908,962.01</td><td align="right" class='awrnc'>157,800.84</td><td align="right" headers="perSecond Average" class='awrnclb'>32,954,481.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,554,030.83</td><td align="right" headers="perSecond Min" class='awrnc'>31,855,615.26</td><td align="right" headers="perSecond Max" class='awrncrb'>34,053,346.75</td></tr>
<tr><td scope="row" class='awrc'>physical read total IO requests</td><td align="right" class='awrc'>4,871,242</td><td align="right" class='awrc'>8,059.24</td><td align="right" class='awrc'>19.30</td><td align="right" headers="perSecond Average" class='awrclb'>4,029.62</td><td align="right" headers="perSecond StdDev" class='awrc'>190.43</td><td align="right" headers="perSecond Min" class='awrc'>3,894.96</td><td align="right" headers="perSecond Max" class='awrcrb'>4,164.28</td></tr>
<tr><td scope="row" class='awrnc'>physical read total bytes</td><td align="right" class='awrnc'>41,340,386,304</td><td align="right" class='awrnc'>68,395,758.34</td><td align="right" class='awrnc'>163,754.78</td><td align="right" headers="perSecond Average" class='awrnclb'>34,197,879.17</td><td align="right" headers="perSecond StdDev" class='awrnc'>1,528,393.11</td><td align="right" headers="perSecond Min" class='awrnc'>33,117,142.04</td><td align="right" headers="perSecond Max" class='awrncrb'>35,278,616.30</td></tr>
<tr><td scope="row" class='awrc'>physical read total multi block requests</td><td align="right" class='awrc'>1,350</td><td align="right" class='awrc'>2.23</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.12</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>1.10</td><td align="right" headers="perSecond Max" class='awrcrb'>1.13</td></tr>
<tr><td scope="row" class='awrnc'>physical reads</td><td align="right" class='awrnc'>4,862,951</td><td align="right" class='awrnc'>8,045.53</td><td align="right" class='awrnc'>19.26</td><td align="right" headers="perSecond Average" class='awrnclb'>4,022.76</td><td align="right" headers="perSecond StdDev" class='awrnc'>189.70</td><td align="right" headers="perSecond Min" class='awrnc'>3,888.62</td><td align="right" headers="perSecond Max" class='awrncrb'>4,156.90</td></tr>
<tr><td scope="row" class='awrc'>physical reads cache</td><td align="right" class='awrc'>4,862,951</td><td align="right" class='awrc'>8,045.53</td><td align="right" class='awrc'>19.26</td><td align="right" headers="perSecond Average" class='awrclb'>4,022.76</td><td align="right" headers="perSecond StdDev" class='awrc'>189.70</td><td align="right" headers="perSecond Min" class='awrc'>3,888.62</td><td align="right" headers="perSecond Max" class='awrcrb'>4,156.90</td></tr>
<tr><td scope="row" class='awrnc'>physical reads cache prefetch</td><td align="right" class='awrnc'>70</td><td align="right" class='awrnc'>0.12</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.12</td><td align="right" headers="perSecond Max" class='awrncrb'>0.12</td></tr>
<tr><td scope="row" class='awrc'>physical write IO requests</td><td align="right" class='awrc'>680,093</td><td align="right" class='awrc'>1,125.18</td><td align="right" class='awrc'>2.69</td><td align="right" headers="perSecond Average" class='awrclb'>562.59</td><td align="right" headers="perSecond StdDev" class='awrc'>36.07</td><td align="right" headers="perSecond Min" class='awrc'>537.08</td><td align="right" headers="perSecond Max" class='awrcrb'>588.10</td></tr>
<tr><td scope="row" class='awrnc'>physical write bytes</td><td align="right" class='awrnc'>5,792,686,080</td><td align="right" class='awrnc'>9,583,730.78</td><td align="right" class='awrnc'>22,945.60</td><td align="right" headers="perSecond Average" class='awrnclb'>4,791,865.39</td><td align="right" headers="perSecond StdDev" class='awrnc'>299,138.28</td><td align="right" headers="perSecond Min" class='awrnc'>4,580,342.69</td><td align="right" headers="perSecond Max" class='awrncrb'>5,003,388.09</td></tr>
<tr><td scope="row" class='awrc'>physical write total IO requests</td><td align="right" class='awrc'>888,938</td><td align="right" class='awrc'>1,470.71</td><td align="right" class='awrc'>3.52</td><td align="right" headers="perSecond Average" class='awrclb'>735.35</td><td align="right" headers="perSecond StdDev" class='awrc'>35.96</td><td align="right" headers="perSecond Min" class='awrc'>709.92</td><td align="right" headers="perSecond Max" class='awrcrb'>760.78</td></tr>
<tr><td scope="row" class='awrnc'>physical write total bytes</td><td align="right" class='awrnc'>6,591,131,136</td><td align="right" class='awrnc'>10,904,721.22</td><td align="right" class='awrnc'>26,108.35</td><td align="right" headers="perSecond Average" class='awrnclb'>5,452,360.61</td><td align="right" headers="perSecond StdDev" class='awrnc'>328,890.19</td><td align="right" headers="perSecond Min" class='awrnc'>5,219,800.13</td><td align="right" headers="perSecond Max" class='awrncrb'>5,684,921.09</td></tr>
<tr><td scope="row" class='awrc'>physical write total multi block requests</td><td align="right" class='awrc'>1,351</td><td align="right" class='awrc'>2.24</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.12</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>1.10</td><td align="right" headers="perSecond Max" class='awrcrb'>1.13</td></tr>
<tr><td scope="row" class='awrnc'>physical writes</td><td align="right" class='awrnc'>707,115</td><td align="right" class='awrnc'>1,169.89</td><td align="right" class='awrnc'>2.80</td><td align="right" headers="perSecond Average" class='awrnclb'>584.94</td><td align="right" headers="perSecond StdDev" class='awrnc'>36.52</td><td align="right" headers="perSecond Min" class='awrnc'>559.12</td><td align="right" headers="perSecond Max" class='awrncrb'>610.77</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct</td><td align="right" class='awrc'>229</td><td align="right" class='awrc'>0.38</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.19</td><td align="right" headers="perSecond StdDev" class='awrc'>0.12</td><td align="right" headers="perSecond Min" class='awrc'>0.10</td><td align="right" headers="perSecond Max" class='awrcrb'>0.28</td></tr>
<tr><td scope="row" class='awrnc'>physical writes direct (lob)</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>physical writes direct temporary tablespace</td><td align="right" class='awrc'>95</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.16</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.16</td><td align="right" headers="perSecond Max" class='awrcrb'>0.16</td></tr>
<tr><td scope="row" class='awrnc'>physical writes from cache</td><td align="right" class='awrnc'>706,886</td><td align="right" class='awrnc'>1,169.51</td><td align="right" class='awrnc'>2.80</td><td align="right" headers="perSecond Average" class='awrnclb'>584.76</td><td align="right" headers="perSecond StdDev" class='awrnc'>36.39</td><td align="right" headers="perSecond Min" class='awrnc'>559.02</td><td align="right" headers="perSecond Max" class='awrncrb'>610.49</td></tr>
<tr><td scope="row" class='awrc'>physical writes non checkpoint</td><td align="right" class='awrc'>696,212</td><td align="right" class='awrc'>1,151.85</td><td align="right" class='awrc'>2.76</td><td align="right" headers="perSecond Average" class='awrclb'>575.93</td><td align="right" headers="perSecond StdDev" class='awrc'>39.56</td><td align="right" headers="perSecond Min" class='awrc'>547.95</td><td align="right" headers="perSecond Max" class='awrcrb'>603.90</td></tr>
<tr><td scope="row" class='awrnc'>pinned buffers inspected</td><td align="right" class='awrnc'>726</td><td align="right" class='awrnc'>1.20</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.60</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.02</td><td align="right" headers="perSecond Min" class='awrnc'>0.58</td><td align="right" headers="perSecond Max" class='awrncrb'>0.62</td></tr>
<tr><td scope="row" class='awrc'>prefetched blocks aged out before use</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>process last non-idle time</td><td align="right" class='awrnc'>1,216</td><td align="right" class='awrnc'>2.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>1.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>1.00</td><td align="right" headers="perSecond Max" class='awrncrb'>1.01</td></tr>
<tr><td scope="row" class='awrc'>recursive calls</td><td align="right" class='awrc'>2,210,265</td><td align="right" class='awrc'>3,656.78</td><td align="right" class='awrc'>8.76</td><td align="right" headers="perSecond Average" class='awrclb'>1,828.39</td><td align="right" headers="perSecond StdDev" class='awrc'>76.06</td><td align="right" headers="perSecond Min" class='awrc'>1,774.61</td><td align="right" headers="perSecond Max" class='awrcrb'>1,882.17</td></tr>
<tr><td scope="row" class='awrnc'>recursive cpu usage</td><td align="right" class='awrnc'>249,214</td><td align="right" class='awrnc'>412.31</td><td align="right" class='awrnc'>0.99</td><td align="right" headers="perSecond Average" class='awrnclb'>206.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.27</td><td align="right" headers="perSecond Min" class='awrnc'>204.55</td><td align="right" headers="perSecond Max" class='awrncrb'>207.76</td></tr>
<tr><td scope="row" class='awrc'>redo KB read</td><td align="right" class='awrc'>809,358</td><td align="right" class='awrc'>1,339.05</td><td align="right" class='awrc'>3.21</td><td align="right" headers="perSecond Average" class='awrclb'>669.52</td><td align="right" headers="perSecond StdDev" class='awrc'>29.33</td><td align="right" headers="perSecond Min" class='awrc'>648.78</td><td align="right" headers="perSecond Max" class='awrcrb'>690.26</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks checksummed by FG (exclusive)</td><td align="right" class='awrnc'>479,563</td><td align="right" class='awrnc'>793.41</td><td align="right" class='awrnc'>1.90</td><td align="right" headers="perSecond Average" class='awrnclb'>396.71</td><td align="right" headers="perSecond StdDev" class='awrnc'>23.54</td><td align="right" headers="perSecond Min" class='awrnc'>380.06</td><td align="right" headers="perSecond Max" class='awrncrb'>413.35</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written</td><td align="right" class='awrc'>1,520,841</td><td align="right" class='awrc'>2,516.16</td><td align="right" class='awrc'>6.02</td><td align="right" headers="perSecond Average" class='awrclb'>1,258.08</td><td align="right" headers="perSecond StdDev" class='awrc'>55.16</td><td align="right" headers="perSecond Min" class='awrc'>1,219.08</td><td align="right" headers="perSecond Max" class='awrcrb'>1,297.08</td></tr>
<tr><td scope="row" class='awrnc'>redo blocks written (group 0)</td><td align="right" class='awrnc'>970,651</td><td align="right" class='awrnc'>1,605.90</td><td align="right" class='awrnc'>3.84</td><td align="right" headers="perSecond Average" class='awrnclb'>802.95</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.22</td><td align="right" headers="perSecond Min" class='awrnc'>802.79</td><td align="right" headers="perSecond Max" class='awrncrb'>803.10</td></tr>
<tr><td scope="row" class='awrc'>redo blocks written (group 1)</td><td align="right" class='awrc'>550,190</td><td align="right" class='awrc'>910.26</td><td align="right" class='awrc'>2.18</td><td align="right" headers="perSecond Average" class='awrclb'>455.13</td><td align="right" headers="perSecond StdDev" class='awrc'>54.94</td><td align="right" headers="perSecond Min" class='awrc'>416.28</td><td align="right" headers="perSecond Max" class='awrcrb'>493.98</td></tr>
<tr><td scope="row" class='awrnc'>redo entries</td><td align="right" class='awrnc'>1,073,162</td><td align="right" class='awrnc'>1,775.50</td><td align="right" class='awrnc'>4.25</td><td align="right" headers="perSecond Average" class='awrnclb'>887.75</td><td align="right" headers="perSecond StdDev" class='awrnc'>37.90</td><td align="right" headers="perSecond Min" class='awrnc'>860.95</td><td align="right" headers="perSecond Max" class='awrncrb'>914.55</td></tr>
<tr><td scope="row" class='awrc'>redo size</td><td align="right" class='awrc'>706,034,472</td><td align="right" class='awrc'>1,168,101.40</td><td align="right" class='awrc'>2,796.70</td><td align="right" headers="perSecond Average" class='awrclb'>584,050.70</td><td align="right" headers="perSecond StdDev" class='awrc'>26,811.83</td><td align="right" headers="perSecond Min" class='awrc'>565,091.87</td><td align="right" headers="perSecond Max" class='awrcrb'>603,009.52</td></tr>
<tr><td scope="row" class='awrnc'>redo size for direct writes</td><td align="right" class='awrnc'>344</td><td align="right" class='awrnc'>0.57</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.28</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.12</td><td align="right" headers="perSecond Min" class='awrnc'>0.20</td><td align="right" headers="perSecond Max" class='awrncrb'>0.37</td></tr>
<tr><td scope="row" class='awrc'>redo subscn max counts</td><td align="right" class='awrc'>97</td><td align="right" class='awrc'>0.16</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.08</td><td align="right" headers="perSecond Max" class='awrcrb'>0.08</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>redo synch time (usec)</td><td align="right" class='awrc'>35,299</td><td align="right" class='awrc'>58.40</td><td align="right" class='awrc'>0.14</td><td align="right" headers="perSecond Average" class='awrclb'>29.20</td><td align="right" headers="perSecond StdDev" class='awrc'>37.54</td><td align="right" headers="perSecond Min" class='awrc'>2.66</td><td align="right" headers="perSecond Max" class='awrcrb'>55.74</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead (usec)</td><td align="right" class='awrnc'>3,387</td><td align="right" class='awrnc'>5.60</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>2.80</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.49</td><td align="right" headers="perSecond Min" class='awrnc'>0.34</td><td align="right" headers="perSecond Max" class='awrncrb'>5.27</td></tr>
<tr><td scope="row" class='awrc'>redo synch time overhead count (  2ms)</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>redo synch time overhead count (  8ms)</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo synch writes</td><td align="right" class='awrc'>42</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>redo wastage</td><td align="right" class='awrnc'>47,870,664</td><td align="right" class='awrnc'>79,199.81</td><td align="right" class='awrnc'>189.62</td><td align="right" headers="perSecond Average" class='awrnclb'>39,599.91</td><td align="right" headers="perSecond StdDev" class='awrnc'>400.94</td><td align="right" headers="perSecond Min" class='awrnc'>39,316.40</td><td align="right" headers="perSecond Max" class='awrncrb'>39,883.41</td></tr>
<tr><td scope="row" class='awrc'>redo write active strands</td><td align="right" class='awrc'>207,555</td><td align="right" class='awrc'>343.39</td><td align="right" class='awrc'>0.82</td><td align="right" headers="perSecond Average" class='awrclb'>171.70</td><td align="right" headers="perSecond StdDev" class='awrc'>0.22</td><td align="right" headers="perSecond Min" class='awrc'>171.54</td><td align="right" headers="perSecond Max" class='awrcrb'>171.85</td></tr>
<tr><td scope="row" class='awrnc'>redo write finish time</td><td align="right" class='awrnc'>1,283,121,147</td><td align="right" class='awrnc'>2,122,864.33</td><td align="right" class='awrnc'>5,082.61</td><td align="right" headers="perSecond Average" class='awrnclb'>1,061,432.16</td><td align="right" headers="perSecond StdDev" class='awrnc'>90,673.70</td><td align="right" headers="perSecond Min" class='awrnc'>997,316.18</td><td align="right" headers="perSecond Max" class='awrncrb'>1,125,548.15</td></tr>
<tr><td scope="row" class='awrc'>redo write gather time</td><td align="right" class='awrc'>78,729,552</td><td align="right" class='awrc'>130,254.38</td><td align="right" class='awrc'>311.86</td><td align="right" headers="perSecond Average" class='awrclb'>65,127.19</td><td align="right" headers="perSecond StdDev" class='awrc'>6,444.00</td><td align="right" headers="perSecond Min" class='awrc'>60,570.60</td><td align="right" headers="perSecond Max" class='awrcrb'>69,683.78</td></tr>
<tr><td scope="row" class='awrnc'>redo write info find</td><td align="right" class='awrnc'>6</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>redo write schedule time</td><td align="right" class='awrc'>81,492,084</td><td align="right" class='awrc'>134,824.86</td><td align="right" class='awrc'>322.80</td><td align="right" headers="perSecond Average" class='awrclb'>67,412.43</td><td align="right" headers="perSecond StdDev" class='awrc'>6,380.16</td><td align="right" headers="perSecond Min" class='awrc'>62,900.97</td><td align="right" headers="perSecond Max" class='awrcrb'>71,923.89</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (   4KB)</td><td align="right" class='awrnc'>115,270</td><td align="right" class='awrnc'>190.71</td><td align="right" class='awrnc'>0.46</td><td align="right" headers="perSecond Average" class='awrnclb'>95.35</td><td align="right" headers="perSecond StdDev" class='awrnc'>4.98</td><td align="right" headers="perSecond Min" class='awrnc'>91.83</td><td align="right" headers="perSecond Max" class='awrncrb'>98.88</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (   8KB)</td><td align="right" class='awrc'>75,755</td><td align="right" class='awrc'>125.33</td><td align="right" class='awrc'>0.30</td><td align="right" headers="perSecond Average" class='awrclb'>62.67</td><td align="right" headers="perSecond StdDev" class='awrc'>2.57</td><td align="right" headers="perSecond Min" class='awrc'>60.85</td><td align="right" headers="perSecond Max" class='awrcrb'>64.48</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count (  16KB)</td><td align="right" class='awrnc'>8,158</td><td align="right" class='awrnc'>13.50</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>6.75</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.59</td><td align="right" headers="perSecond Min" class='awrnc'>5.62</td><td align="right" headers="perSecond Max" class='awrncrb'>7.87</td></tr>
<tr><td scope="row" class='awrc'>redo write size count (  32KB)</td><td align="right" class='awrc'>1,432</td><td align="right" class='awrc'>2.37</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>1.18</td><td align="right" headers="perSecond StdDev" class='awrc'>0.09</td><td align="right" headers="perSecond Min" class='awrc'>1.12</td><td align="right" headers="perSecond Max" class='awrcrb'>1.25</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 128KB)</td><td align="right" class='awrnc'>393</td><td align="right" class='awrnc'>0.65</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.33</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.06</td><td align="right" headers="perSecond Min" class='awrnc'>0.28</td><td align="right" headers="perSecond Max" class='awrncrb'>0.37</td></tr>
<tr><td scope="row" class='awrc'>redo write size count ( 256KB)</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>redo write size count ( 512KB)</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>redo write time</td><td align="right" class='awrc'>129,126</td><td align="right" class='awrc'>213.63</td><td align="right" class='awrc'>0.51</td><td align="right" headers="perSecond Average" class='awrclb'>106.82</td><td align="right" headers="perSecond StdDev" class='awrc'>9.04</td><td align="right" headers="perSecond Min" class='awrc'>100.42</td><td align="right" headers="perSecond Max" class='awrcrb'>113.21</td></tr>
<tr><td scope="row" class='awrnc'>redo write time (usec)</td><td align="right" class='awrnc'>1,291,251,581</td><td align="right" class='awrnc'>2,136,315.76</td><td align="right" class='awrnc'>5,114.82</td><td align="right" headers="perSecond Average" class='awrnclb'>1,068,157.88</td><td align="right" headers="perSecond StdDev" class='awrnc'>90,415.90</td><td align="right" headers="perSecond Min" class='awrnc'>1,004,224.18</td><td align="right" headers="perSecond Max" class='awrncrb'>1,132,091.57</td></tr>
<tr><td scope="row" class='awrc'>redo write total time</td><td align="right" class='awrc'>1,346,127,562</td><td align="right" class='awrc'>2,227,105.49</td><td align="right" class='awrc'>5,332.19</td><td align="right" headers="perSecond Average" class='awrclb'>1,113,552.74</td><td align="right" headers="perSecond StdDev" class='awrc'>99,142.89</td><td align="right" headers="perSecond Min" class='awrc'>1,043,448.13</td><td align="right" headers="perSecond Max" class='awrcrb'>1,183,657.35</td></tr>
<tr><td scope="row" class='awrnc'>redo write worker delay (usec)</td><td align="right" class='awrnc'>60,893,286</td><td align="right" class='awrnc'>100,745.09</td><td align="right" class='awrnc'>241.21</td><td align="right" headers="perSecond Average" class='awrnclb'>50,372.54</td><td align="right" headers="perSecond StdDev" class='awrnc'>7,579.00</td><td align="right" headers="perSecond Min" class='awrnc'>45,013.38</td><td align="right" headers="perSecond Max" class='awrncrb'>55,731.71</td></tr>
<tr><td scope="row" class='awrc'>redo write worker delay count</td><td align="right" class='awrc'>201,016</td><td align="right" class='awrc'>332.57</td><td align="right" class='awrc'>0.80</td><td align="right" headers="perSecond Average" class='awrclb'>166.29</td><td align="right" headers="perSecond StdDev" class='awrc'>0.67</td><td align="right" headers="perSecond Min" class='awrc'>165.81</td><td align="right" headers="perSecond Max" class='awrcrb'>166.76</td></tr>
<tr><td scope="row" class='awrnc'>redo writes</td><td align="right" class='awrnc'>201,016</td><td align="right" class='awrnc'>332.57</td><td align="right" class='awrnc'>0.80</td><td align="right" headers="perSecond Average" class='awrnclb'>166.29</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.67</td><td align="right" headers="perSecond Min" class='awrnc'>165.81</td><td align="right" headers="perSecond Max" class='awrncrb'>166.76</td></tr>
<tr><td scope="row" class='awrc'>redo writes (group 0)</td><td align="right" class='awrc'>116,235</td><td align="right" class='awrc'>192.31</td><td align="right" class='awrc'>0.46</td><td align="right" headers="perSecond Average" class='awrclb'>96.15</td><td align="right" headers="perSecond StdDev" class='awrc'>3.42</td><td align="right" headers="perSecond Min" class='awrc'>93.74</td><td align="right" headers="perSecond Max" class='awrcrb'>98.57</td></tr>
<tr><td scope="row" class='awrnc'>redo writes (group 1)</td><td align="right" class='awrnc'>84,781</td><td align="right" class='awrnc'>140.27</td><td align="right" class='awrnc'>0.34</td><td align="right" headers="perSecond Average" class='awrnclb'>70.13</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.75</td><td align="right" headers="perSecond Min" class='awrnc'>68.19</td><td align="right" headers="perSecond Max" class='awrncrb'>72.07</td></tr>
<tr><td scope="row" class='awrc'>redo writes adaptive all</td><td align="right" class='awrc'>201,016</td><td align="right" class='awrc'>332.57</td><td align="right" class='awrc'>0.80</td><td align="right" headers="perSecond Average" class='awrclb'>166.29</td><td align="right" headers="perSecond StdDev" class='awrc'>0.67</td><td align="right" headers="perSecond Min" class='awrc'>165.81</td><td align="right" headers="perSecond Max" class='awrcrb'>166.76</td></tr>
<tr><td scope="row" class='awrnc'>redo writes adaptive worker</td><td align="right" class='awrnc'>201,016</td><td align="right" class='awrnc'>332.57</td><td align="right" class='awrnc'>0.80</td><td align="right" headers="perSecond Average" class='awrnclb'>166.29</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.67</td><td align="right" headers="perSecond Min" class='awrnc'>165.81</td><td align="right" headers="perSecond Max" class='awrncrb'>166.76</td></tr>
<tr><td scope="row" class='awrc'>rollbacks only - consistent read gets</td><td align="right" class='awrc'>43</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>root node splits</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>rows fetched via callback</td><td align="right" class='awrc'>1,070</td><td align="right" class='awrc'>1.77</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.89</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.88</td><td align="right" headers="perSecond Max" class='awrcrb'>0.89</td></tr>
<tr><td scope="row" class='awrnc'>securefile allocation bytes</td><td align="right" class='awrnc'>40,960</td><td align="right" class='awrnc'>67.77</td><td align="right" class='awrnc'>0.16</td><td align="right" headers="perSecond Average" class='awrnclb'>67.77</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>67.77</td><td align="right" headers="perSecond Max" class='awrncrb'>67.77</td></tr>
<tr><td scope="row" class='awrc'>securefile allocation chunks</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>securefile bytes non-transformed</td><td align="right" class='awrnc'>30,842</td><td align="right" class='awrnc'>51.03</td><td align="right" class='awrnc'>0.12</td><td align="right" headers="perSecond Average" class='awrnclb'>51.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>51.03</td><td align="right" headers="perSecond Max" class='awrncrb'>51.03</td></tr>
<tr><td scope="row" class='awrc'>securefile direct write bytes</td><td align="right" class='awrc'>40,960</td><td align="right" class='awrc'>67.77</td><td align="right" class='awrc'>0.16</td><td align="right" headers="perSecond Average" class='awrclb'>67.77</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>67.77</td><td align="right" headers="perSecond Max" class='awrcrb'>67.77</td></tr>
<tr><td scope="row" class='awrnc'>securefile direct write ops</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>securefile number of non-transformed flushes</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>segment chunks allocation from dispenser</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>segment dispenser allocations</td><td align="right" class='awrc'>5</td><td align="right" class='awrc'>0.01</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.01</td></tr>
<tr><td scope="row" class='awrnc'>segment prealloc ops</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>segment prealloc time (ms)</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.03</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>session connect time</td><td align="right" class='awrnc'>642</td><td align="right" class='awrnc'>1.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>1.06</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>1.06</td><td align="right" headers="perSecond Max" class='awrncrb'>1.06</td></tr>
<tr><td scope="row" class='awrc'>session cursor cache hits</td><td align="right" class='awrc'>1,935,059</td><td align="right" class='awrc'>3,201.47</td><td align="right" class='awrc'>7.67</td><td align="right" headers="perSecond Average" class='awrclb'>1,600.73</td><td align="right" headers="perSecond StdDev" class='awrc'>71.50</td><td align="right" headers="perSecond Min" class='awrc'>1,550.18</td><td align="right" headers="perSecond Max" class='awrcrb'>1,651.29</td></tr>
<tr><td scope="row" class='awrnc'>session logical reads</td><td align="right" class='awrnc'>11,662,672</td><td align="right" class='awrnc'>19,295.35</td><td align="right" class='awrnc'>46.20</td><td align="right" headers="perSecond Average" class='awrnclb'>9,647.68</td><td align="right" headers="perSecond StdDev" class='awrnc'>342.29</td><td align="right" headers="perSecond Min" class='awrnc'>9,405.64</td><td align="right" headers="perSecond Max" class='awrncrb'>9,889.71</td></tr>
<tr><td scope="row" class='awrc'>shared hash latch upgrades - no wait</td><td align="right" class='awrc'>1,885,827</td><td align="right" class='awrc'>3,120.01</td><td align="right" class='awrc'>7.47</td><td align="right" headers="perSecond Average" class='awrclb'>1,560.01</td><td align="right" headers="perSecond StdDev" class='awrc'>57.89</td><td align="right" headers="perSecond Min" class='awrc'>1,519.07</td><td align="right" headers="perSecond Max" class='awrcrb'>1,600.94</td></tr>
<tr><td scope="row" class='awrnc'>shared io pool buffer get success</td><td align="right" class='awrnc'>5</td><td align="right" class='awrnc'>0.01</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.01</td></tr>
<tr><td scope="row" class='awrc'>sorts (memory)</td><td align="right" class='awrc'>463</td><td align="right" class='awrc'>0.77</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.38</td><td align="right" headers="perSecond StdDev" class='awrc'>0.18</td><td align="right" headers="perSecond Min" class='awrc'>0.25</td><td align="right" headers="perSecond Max" class='awrcrb'>0.51</td></tr>
<tr><td scope="row" class='awrnc'>sorts (rows)</td><td align="right" class='awrnc'>90,532</td><td align="right" class='awrnc'>149.78</td><td align="right" class='awrnc'>0.36</td><td align="right" headers="perSecond Average" class='awrnclb'>74.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>41.08</td><td align="right" headers="perSecond Min" class='awrnc'>45.84</td><td align="right" headers="perSecond Max" class='awrncrb'>103.94</td></tr>
<tr><td scope="row" class='awrc'>sql area evicted</td><td align="right" class='awrc'>46</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.05</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>sql area purged</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>summed dirty queue length</td><td align="right" class='awrc'>3,161,751</td><td align="right" class='awrc'>5,230.97</td><td align="right" class='awrc'>12.52</td><td align="right" headers="perSecond Average" class='awrclb'>2,615.49</td><td align="right" headers="perSecond StdDev" class='awrc'>45.43</td><td align="right" headers="perSecond Min" class='awrc'>2,583.36</td><td align="right" headers="perSecond Max" class='awrcrb'>2,647.61</td></tr>
<tr><td scope="row" class='awrnc'>switch current caused by our pin</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>0.04</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>switch current to new buffer</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>0.06</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>table fetch by rowid</td><td align="right" class='awrnc'>5,661,427</td><td align="right" class='awrnc'>9,366.57</td><td align="right" class='awrnc'>22.43</td><td align="right" headers="perSecond Average" class='awrnclb'>4,683.28</td><td align="right" headers="perSecond StdDev" class='awrnc'>212.92</td><td align="right" headers="perSecond Min" class='awrnc'>4,532.73</td><td align="right" headers="perSecond Max" class='awrncrb'>4,833.84</td></tr>
<tr><td scope="row" class='awrc'>table fetch continued row</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>table scan blocks gotten</td><td align="right" class='awrnc'>7,960</td><td align="right" class='awrnc'>13.17</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>6.58</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.62</td><td align="right" headers="perSecond Min" class='awrnc'>6.14</td><td align="right" headers="perSecond Max" class='awrncrb'>7.02</td></tr>
<tr><td scope="row" class='awrc'>table scan disk non-IMC rows gotten</td><td align="right" class='awrc'>412,464</td><td align="right" class='awrc'>682.40</td><td align="right" class='awrc'>1.63</td><td align="right" headers="perSecond Average" class='awrclb'>341.20</td><td align="right" headers="perSecond StdDev" class='awrc'>90.97</td><td align="right" headers="perSecond Min" class='awrc'>276.87</td><td align="right" headers="perSecond Max" class='awrcrb'>405.53</td></tr>
<tr><td scope="row" class='awrnc'>table scan rows gotten</td><td align="right" class='awrnc'>412,464</td><td align="right" class='awrnc'>682.40</td><td align="right" class='awrnc'>1.63</td><td align="right" headers="perSecond Average" class='awrnclb'>341.20</td><td align="right" headers="perSecond StdDev" class='awrnc'>90.97</td><td align="right" headers="perSecond Min" class='awrnc'>276.87</td><td align="right" headers="perSecond Max" class='awrncrb'>405.53</td></tr>
<tr><td scope="row" class='awrc'>table scans (short tables)</td><td align="right" class='awrc'>249</td><td align="right" class='awrc'>0.41</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.21</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.18</td><td align="right" headers="perSecond Max" class='awrcrb'>0.23</td></tr>
<tr><td scope="row" class='awrnc'>temp space allocated (bytes)</td><td align="right" class='awrnc'>1,048,576</td><td align="right" class='awrnc'>1,734.81</td><td align="right" class='awrnc'>4.15</td><td align="right" headers="perSecond Average" class='awrnclb'>1,734.81</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>1,734.81</td><td align="right" headers="perSecond Max" class='awrncrb'>1,734.81</td></tr>
<tr><td scope="row" class='awrc'>total cf enq hold time</td><td align="right" class='awrc'>3,082</td><td align="right" class='awrc'>5.10</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>2.55</td><td align="right" headers="perSecond StdDev" class='awrc'>0.23</td><td align="right" headers="perSecond Min" class='awrc'>2.39</td><td align="right" headers="perSecond Max" class='awrcrb'>2.71</td></tr>
<tr><td scope="row" class='awrnc'>total number of cf enq holders</td><td align="right" class='awrnc'>319</td><td align="right" class='awrnc'>0.53</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.26</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.26</td><td align="right" headers="perSecond Max" class='awrncrb'>0.27</td></tr>
<tr><td scope="row" class='awrc'>total number of times SMON posted</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>0.05</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.04</td></tr>
<tr><td scope="row" class='awrnc'>transaction tables consistent reads - undo records applied</td><td align="right" class='awrnc'>918,731</td><td align="right" class='awrnc'>1,520.00</td><td align="right" class='awrnc'>3.64</td><td align="right" headers="perSecond Average" class='awrnclb'>760.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>63.02</td><td align="right" headers="perSecond Min" class='awrnc'>715.44</td><td align="right" headers="perSecond Max" class='awrncrb'>804.56</td></tr>
<tr><td scope="row" class='awrc'>undo change vector size</td><td align="right" class='awrc'>277,764,600</td><td align="right" class='awrc'>459,548.69</td><td align="right" class='awrc'>1,100.26</td><td align="right" headers="perSecond Average" class='awrclb'>229,774.35</td><td align="right" headers="perSecond StdDev" class='awrc'>10,405.90</td><td align="right" headers="perSecond Min" class='awrc'>222,416.26</td><td align="right" headers="perSecond Max" class='awrcrb'>237,132.43</td></tr>
<tr><td scope="row" class='awrnc'>user I/O wait time</td><td align="right" class='awrnc'>1,999,174</td><td align="right" class='awrnc'>3,307.54</td><td align="right" class='awrnc'>7.92</td><td align="right" headers="perSecond Average" class='awrnclb'>1,653.77</td><td align="right" headers="perSecond StdDev" class='awrnc'>125.95</td><td align="right" headers="perSecond Min" class='awrnc'>1,564.71</td><td align="right" headers="perSecond Max" class='awrncrb'>1,742.83</td></tr>
<tr><td scope="row" class='awrc'>user calls</td><td align="right" class='awrc'>479</td><td align="right" class='awrc'>0.79</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.40</td><td align="right" headers="perSecond StdDev" class='awrc'>0.14</td><td align="right" headers="perSecond Min" class='awrc'>0.30</td><td align="right" headers="perSecond Max" class='awrcrb'>0.49</td></tr>
<tr><td scope="row" class='awrnc'>user commits</td><td align="right" class='awrnc'>252,453</td><td align="right" class='awrnc'>417.67</td><td align="right" class='awrnc'>1.00</td><td align="right" headers="perSecond Average" class='awrnclb'>208.84</td><td align="right" headers="perSecond StdDev" class='awrnc'>9.33</td><td align="right" headers="perSecond Min" class='awrnc'>202.24</td><td align="right" headers="perSecond Max" class='awrncrb'>215.43</td></tr>
<tr><td scope="row" class='awrc'>user logons cumulative</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>user logouts cumulative</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>0.07</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>workarea executions - optimal</td><td align="right" class='awrc'>770</td><td align="right" class='awrc'>1.27</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.64</td><td align="right" headers="perSecond StdDev" class='awrc'>0.25</td><td align="right" headers="perSecond Min" class='awrc'>0.46</td><td align="right" headers="perSecond Max" class='awrcrb'>0.82</td></tr>
<tr><td scope="row" class='awrnc'>write clones created in foreground</td><td align="right" class='awrnc'>16</td><td align="right" class='awrnc'>0.03</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.01</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.01</td><td align="right" headers="perSecond Max" class='awrncrb'>0.02</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12072"></a>
<h3 class="awr">Global Messaging Statistics (Global)</h3>
<ul>
<li class="awr"> per Second Average - average of per-instance per Second rates </li>
<li class="awr"> per Second Std Dev - standard deviation of per-instance per Second rates </li>
<li class="awr"> per Second Min     - minimum of per-instance per Second rates </li>
<li class="awr"> per Second Max     - maximum of per-instance per Second rates</li>
</ul>
<table border="0" class="tdiff" summary="Global Messaging Statistics (Global). . per Second Average - average of per-instance per Second rates. per Second Std Dev - standard deviation of per-instance per Second rates. per Second Min - minimum of per-instance per Second rates. per Second Max - maximum of per-instance per Second rates"><tr>
<td>&#160;</td><td>&#160;</td><td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="perSecond">per Second</th>
</tr><tr>
<th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Total</th><th class="awrbg" scope="col">per Second</th><th class="awrbg" scope="col">per Trans</th><th class="awrbg" scope="col" id="Average">Average</th><th class="awrbg" scope="col" id="StdDev">Std Dev</th><th class="awrbg" scope="col" id="Min">Min</th><th class="awrbg" scope="col" id="Max">Max</th></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim Broadcasts sent</td><td align="right" class='awrc'>50</td><td align="right" class='awrc'>0.08</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.04</td><td align="right" headers="perSecond StdDev" class='awrc'>0.03</td><td align="right" headers="perSecond Min" class='awrc'>0.02</td><td align="right" headers="perSecond Max" class='awrcrb'>0.06</td></tr>
<tr><td scope="row" class='awrnc'>Global Enqueue S-optim S-lock gets</td><td align="right" class='awrnc'>13,587</td><td align="right" class='awrnc'>22.48</td><td align="right" class='awrnc'>0.05</td><td align="right" headers="perSecond Average" class='awrnclb'>11.24</td><td align="right" headers="perSecond StdDev" class='awrnc'>7.56</td><td align="right" headers="perSecond Min" class='awrnc'>5.89</td><td align="right" headers="perSecond Max" class='awrncrb'>16.59</td></tr>
<tr><td scope="row" class='awrc'>Global Enqueue S-optim anti-locks crea</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>0.04</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.03</td></tr>
<tr><td scope="row" class='awrnc'>acks for commit broadcast(actual)</td><td align="right" class='awrnc'>46,657</td><td align="right" class='awrnc'>77.19</td><td align="right" class='awrnc'>0.18</td><td align="right" headers="perSecond Average" class='awrnclb'>38.60</td><td align="right" headers="perSecond StdDev" class='awrnc'>5.19</td><td align="right" headers="perSecond Min" class='awrnc'>34.92</td><td align="right" headers="perSecond Max" class='awrncrb'>42.27</td></tr>
<tr><td scope="row" class='awrc'>acks for commit broadcast(logical)</td><td align="right" class='awrc'>119,834</td><td align="right" class='awrc'>198.26</td><td align="right" class='awrc'>0.47</td><td align="right" headers="perSecond Average" class='awrclb'>99.13</td><td align="right" headers="perSecond StdDev" class='awrc'>9.41</td><td align="right" headers="perSecond Min" class='awrc'>92.48</td><td align="right" headers="perSecond Max" class='awrcrb'>105.78</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(actual)</td><td align="right" class='awrnc'>119,834</td><td align="right" class='awrnc'>198.26</td><td align="right" class='awrnc'>0.47</td><td align="right" headers="perSecond Average" class='awrnclb'>99.13</td><td align="right" headers="perSecond StdDev" class='awrnc'>9.38</td><td align="right" headers="perSecond Min" class='awrnc'>92.50</td><td align="right" headers="perSecond Max" class='awrncrb'>105.76</td></tr>
<tr><td scope="row" class='awrc'>broadcast msgs on commit(logical)</td><td align="right" class='awrc'>200,802</td><td align="right" class='awrc'>332.22</td><td align="right" class='awrc'>0.80</td><td align="right" headers="perSecond Average" class='awrclb'>166.11</td><td align="right" headers="perSecond StdDev" class='awrc'>0.66</td><td align="right" headers="perSecond Min" class='awrc'>165.64</td><td align="right" headers="perSecond Max" class='awrcrb'>166.58</td></tr>
<tr><td scope="row" class='awrnc'>broadcast msgs on commit(wasted)</td><td align="right" class='awrnc'>68,580</td><td align="right" class='awrnc'>113.46</td><td align="right" class='awrnc'>0.27</td><td align="right" headers="perSecond Average" class='awrnclb'>56.73</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.67</td><td align="right" headers="perSecond Min" class='awrnc'>54.14</td><td align="right" headers="perSecond Max" class='awrncrb'>59.33</td></tr>
<tr><td scope="row" class='awrc'>gcs assume no cvt</td><td align="right" class='awrc'>12,377</td><td align="right" class='awrc'>20.48</td><td align="right" class='awrc'>0.05</td><td align="right" headers="perSecond Average" class='awrclb'>10.24</td><td align="right" headers="perSecond StdDev" class='awrc'>1.38</td><td align="right" headers="perSecond Min" class='awrc'>9.26</td><td align="right" headers="perSecond Max" class='awrcrb'>11.21</td></tr>
<tr><td scope="row" class='awrnc'>gcs ast to fg</td><td align="right" class='awrnc'>2,254,637</td><td align="right" class='awrnc'>3,730.19</td><td align="right" class='awrnc'>8.93</td><td align="right" headers="perSecond Average" class='awrnclb'>1,865.10</td><td align="right" headers="perSecond StdDev" class='awrnc'>15.30</td><td align="right" headers="perSecond Min" class='awrnc'>1,854.28</td><td align="right" headers="perSecond Max" class='awrncrb'>1,875.91</td></tr>
<tr><td scope="row" class='awrc'>gcs ast xid</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs bidless ast to lms</td><td align="right" class='awrnc'>216</td><td align="right" class='awrnc'>0.36</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.15</td><td align="right" headers="perSecond Min" class='awrnc'>0.08</td><td align="right" headers="perSecond Max" class='awrncrb'>0.28</td></tr>
<tr><td scope="row" class='awrc'>gcs blocked converts</td><td align="right" class='awrc'>66,403</td><td align="right" class='awrc'>109.86</td><td align="right" class='awrc'>0.26</td><td align="right" headers="perSecond Average" class='awrclb'>54.93</td><td align="right" headers="perSecond StdDev" class='awrc'>0.49</td><td align="right" headers="perSecond Min" class='awrc'>54.59</td><td align="right" headers="perSecond Max" class='awrcrb'>55.27</td></tr>
<tr><td scope="row" class='awrnc'>gcs blocked cr converts</td><td align="right" class='awrnc'>7,038</td><td align="right" class='awrnc'>11.64</td><td align="right" class='awrnc'>0.03</td><td align="right" headers="perSecond Average" class='awrnclb'>5.82</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.71</td><td align="right" headers="perSecond Min" class='awrnc'>4.61</td><td align="right" headers="perSecond Max" class='awrncrb'>7.03</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible basts</td><td align="right" class='awrc'>20</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gcs compatible cr basts (global)</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.02</td><td align="right" headers="perSecond Max" class='awrncrb'>0.03</td></tr>
<tr><td scope="row" class='awrc'>gcs compatible cr basts (local)</td><td align="right" class='awrc'>19,459</td><td align="right" class='awrc'>32.19</td><td align="right" class='awrc'>0.08</td><td align="right" headers="perSecond Average" class='awrclb'>16.10</td><td align="right" headers="perSecond StdDev" class='awrc'>1.07</td><td align="right" headers="perSecond Min" class='awrc'>15.34</td><td align="right" headers="perSecond Max" class='awrcrb'>16.85</td></tr>
<tr><td scope="row" class='awrnc'>gcs dbwr flush pi msgs</td><td align="right" class='awrnc'>345,634</td><td align="right" class='awrnc'>571.84</td><td align="right" class='awrnc'>1.37</td><td align="right" headers="perSecond Average" class='awrnclb'>285.92</td><td align="right" headers="perSecond StdDev" class='awrnc'>14.67</td><td align="right" headers="perSecond Min" class='awrnc'>275.55</td><td align="right" headers="perSecond Max" class='awrncrb'>296.29</td></tr>
<tr><td scope="row" class='awrc'>gcs dbwr write request msgs</td><td align="right" class='awrc'>119</td><td align="right" class='awrc'>0.20</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.10</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>0.08</td><td align="right" headers="perSecond Max" class='awrcrb'>0.11</td></tr>
<tr><td scope="row" class='awrnc'>gcs grant ast</td><td align="right" class='awrnc'>2,254,854</td><td align="right" class='awrnc'>3,730.55</td><td align="right" class='awrnc'>8.93</td><td align="right" headers="perSecond Average" class='awrnclb'>1,865.28</td><td align="right" headers="perSecond StdDev" class='awrnc'>15.44</td><td align="right" headers="perSecond Min" class='awrnc'>1,854.36</td><td align="right" headers="perSecond Max" class='awrncrb'>1,876.20</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate (compatible) converts</td><td align="right" class='awrc'>17,497</td><td align="right" class='awrc'>28.95</td><td align="right" class='awrc'>0.07</td><td align="right" headers="perSecond Average" class='awrclb'>14.47</td><td align="right" headers="perSecond StdDev" class='awrc'>0.25</td><td align="right" headers="perSecond Min" class='awrc'>14.30</td><td align="right" headers="perSecond Max" class='awrcrb'>14.65</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate (null) converts</td><td align="right" class='awrnc'>669,063</td><td align="right" class='awrnc'>1,106.93</td><td align="right" class='awrnc'>2.65</td><td align="right" headers="perSecond Average" class='awrnclb'>553.47</td><td align="right" headers="perSecond StdDev" class='awrnc'>6.39</td><td align="right" headers="perSecond Min" class='awrnc'>548.95</td><td align="right" headers="perSecond Max" class='awrncrb'>557.98</td></tr>
<tr><td scope="row" class='awrc'>gcs immediate cr (compatible) converts</td><td align="right" class='awrc'>218</td><td align="right" class='awrc'>0.36</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.18</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.18</td><td align="right" headers="perSecond Max" class='awrcrb'>0.18</td></tr>
<tr><td scope="row" class='awrnc'>gcs immediate cr (null) converts</td><td align="right" class='awrnc'>3,788,221</td><td align="right" class='awrnc'>6,267.44</td><td align="right" class='awrnc'>15.01</td><td align="right" headers="perSecond Average" class='awrnclb'>3,133.72</td><td align="right" headers="perSecond StdDev" class='awrnc'>31.00</td><td align="right" headers="perSecond Min" class='awrnc'>3,111.80</td><td align="right" headers="perSecond Max" class='awrncrb'>3,155.64</td></tr>
<tr><td scope="row" class='awrc'>gcs lms write request msgs</td><td align="right" class='awrc'>76</td><td align="right" class='awrc'>0.13</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.06</td><td align="right" headers="perSecond StdDev" class='awrc'>0.01</td><td align="right" headers="perSecond Min" class='awrc'>0.06</td><td align="right" headers="perSecond Max" class='awrcrb'>0.07</td></tr>
<tr><td scope="row" class='awrnc'>gcs msgs process time(ms)</td><td align="right" class='awrnc'>214,510</td><td align="right" class='awrnc'>354.90</td><td align="right" class='awrnc'>0.85</td><td align="right" headers="perSecond Average" class='awrnclb'>177.45</td><td align="right" headers="perSecond StdDev" class='awrnc'>7.78</td><td align="right" headers="perSecond Min" class='awrnc'>171.94</td><td align="right" headers="perSecond Max" class='awrncrb'>182.95</td></tr>
<tr><td scope="row" class='awrc'>gcs msgs received</td><td align="right" class='awrc'>5,417,529</td><td align="right" class='awrc'>8,963.05</td><td align="right" class='awrc'>21.46</td><td align="right" headers="perSecond Average" class='awrclb'>4,481.53</td><td align="right" headers="perSecond StdDev" class='awrc'>24.27</td><td align="right" headers="perSecond Min" class='awrc'>4,464.37</td><td align="right" headers="perSecond Max" class='awrcrb'>4,498.69</td></tr>
<tr><td scope="row" class='awrnc'>gcs new served by master</td><td align="right" class='awrnc'>144</td><td align="right" class='awrnc'>0.24</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.12</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.09</td><td align="right" headers="perSecond Min" class='awrnc'>0.05</td><td align="right" headers="perSecond Max" class='awrncrb'>0.19</td></tr>
<tr><td scope="row" class='awrc'>gcs out-of-order msgs</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs pings refused</td><td align="right" class='awrnc'>2,154</td><td align="right" class='awrnc'>3.56</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>1.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.06</td><td align="right" headers="perSecond Min" class='awrnc'>1.74</td><td align="right" headers="perSecond Max" class='awrncrb'>1.82</td></tr>
<tr><td scope="row" class='awrc'>gcs queued converts</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs reader bypass grant immediate</td><td align="right" class='awrnc'>39</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.03</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.03</td><td align="right" headers="perSecond Max" class='awrncrb'>0.04</td></tr>
<tr><td scope="row" class='awrc'>gcs refuse xid</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>gcs refuse xid to fg</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.00</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs side channel msgs actual</td><td align="right" class='awrc'>9,638</td><td align="right" class='awrc'>15.95</td><td align="right" class='awrc'>0.04</td><td align="right" headers="perSecond Average" class='awrclb'>7.97</td><td align="right" headers="perSecond StdDev" class='awrc'>0.02</td><td align="right" headers="perSecond Min" class='awrc'>7.96</td><td align="right" headers="perSecond Max" class='awrcrb'>7.99</td></tr>
<tr><td scope="row" class='awrnc'>gcs side channel msgs logical</td><td align="right" class='awrnc'>2,288,274</td><td align="right" class='awrnc'>3,785.84</td><td align="right" class='awrnc'>9.06</td><td align="right" headers="perSecond Average" class='awrnclb'>1,892.92</td><td align="right" headers="perSecond StdDev" class='awrnc'>11.10</td><td align="right" headers="perSecond Min" class='awrnc'>1,885.07</td><td align="right" headers="perSecond Max" class='awrncrb'>1,900.77</td></tr>
<tr><td scope="row" class='awrc'>gcs stale cr</td><td align="right" class='awrc'>21</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.02</td><td align="right" headers="perSecond StdDev" class='awrc'>0.00</td><td align="right" headers="perSecond Min" class='awrc'>0.01</td><td align="right" headers="perSecond Max" class='awrcrb'>0.02</td></tr>
<tr><td scope="row" class='awrnc'>gcs undo cr</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrnc'>&#160;</td><td align="right" headers="perSecond Min" class='awrnc'>0.00</td><td align="right" headers="perSecond Max" class='awrncrb'>0.00</td></tr>
<tr><td scope="row" class='awrc'>gcs writes refused</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" headers="perSecond Average" class='awrclb'>0.00</td><td align="right" headers="perSecond StdDev" class='awrc'>&#160;</td><td align="right" headers="perSecond Min" class='awrc'>0.00</td><td align="right" headers="perSecond Max" class='awrcrb'>0.00</td></tr>
<tr><td scope="row" class='awrnc'>ges msgs process time(ms)</td><td align="right" class='awrnc'>92</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.00</td><td align="right" headers="perSecond Average" class='awrnclb'>0.08</td><td align="right" headers="perSecond StdDev" class='awrnc'>0.01</td><td align="right" headers="perSecond Min" class='awrnc'>0.07</td><td align="right" headers="perSecond Max" class='awrncrb'>0.08</td></tr>
<tr><td scope="row" class='awrc'>ges msgs received</td><td align="right" class='awrc'>3,640</td><td align="right" class='awrc'>6.02</td><td align="right" class='awrc'>0.01</td><td align="right" headers="perSecond Average" class='awrclb'>3.01</td><td align="right" headers="perSecond StdDev" class='awrc'>0.84</td><td align="right" headers="perSecond Min" class='awrc'>2.42</td><td align="right" headers="perSecond Max" class='awrcrb'>3.61</td></tr>
<tr><td scope="row" class='awrnc'>implicit batch messages received</td><td align="right" class='awrnc'>69,548</td><td align="right" class='awrnc'>115.06</td><td align="right" class='awrnc'>0.28</td><td align="right" headers="perSecond Average" class='awrnclb'>57.53</td><td align="right" headers="perSecond StdDev" class='awrnc'>3.87</td><td align="right" headers="perSecond Min" class='awrnc'>54.80</td><td align="right" headers="perSecond Max" class='awrncrb'>60.27</td></tr>
<tr><td scope="row" class='awrc'>implicit batch messages sent</td><td align="right" class='awrc'>69,550</td><td align="right" class='awrc'>115.07</td><td align="right" class='awrc'>0.28</td><td align="right" headers="perSecond Average" class='awrclb'>57.53</td><td align="right" headers="perSecond StdDev" class='awrc'>3.87</td><td align="right" headers="perSecond Min" class='awrc'>54.80</td><td align="right" headers="perSecond Max" class='awrcrb'>60.27</td></tr>
<tr><td scope="row" class='awrnc'>messages flow controlled</td><td align="right" class='awrnc'>3,579</td><td align="right" class='awrnc'>5.92</td><td align="right" class='awrnc'>0.01</td><td align="right" headers="perSecond Average" class='awrnclb'>2.96</td><td align="right" headers="perSecond StdDev" class='awrnc'>1.64</td><td align="right" headers="perSecond Min" class='awrnc'>1.80</td><td align="right" headers="perSecond Max" class='awrncrb'>4.12</td></tr>
<tr><td scope="row" class='awrc'>messages queue sent actual</td><td align="right" class='awrc'>493,731</td><td align="right" class='awrc'>816.86</td><td align="right" class='awrc'>1.96</td><td align="right" headers="perSecond Average" class='awrclb'>408.43</td><td align="right" headers="perSecond StdDev" class='awrc'>12.60</td><td align="right" headers="perSecond Min" class='awrc'>399.52</td><td align="right" headers="perSecond Max" class='awrcrb'>417.34</td></tr>
<tr><td scope="row" class='awrnc'>messages queue sent logical</td><td align="right" class='awrnc'>461,376</td><td align="right" class='awrnc'>763.33</td><td align="right" class='awrnc'>1.83</td><td align="right" headers="perSecond Average" class='awrnclb'>381.66</td><td align="right" headers="perSecond StdDev" class='awrnc'>28.35</td><td align="right" headers="perSecond Min" class='awrnc'>361.62</td><td align="right" headers="perSecond Max" class='awrncrb'>401.71</td></tr>
<tr><td scope="row" class='awrc'>messages received actual</td><td align="right" class='awrc'>2,884,560</td><td align="right" class='awrc'>4,772.37</td><td align="right" class='awrc'>11.43</td><td align="right" headers="perSecond Average" class='awrclb'>2,386.19</td><td align="right" headers="perSecond StdDev" class='awrc'>3.97</td><td align="right" headers="perSecond Min" class='awrc'>2,383.38</td><td align="right" headers="perSecond Max" class='awrcrb'>2,388.99</td></tr>
<tr><td scope="row" class='awrnc'>messages received logical</td><td align="right" class='awrnc'>5,421,169</td><td align="right" class='awrnc'>8,969.08</td><td align="right" class='awrnc'>21.47</td><td align="right" headers="perSecond Average" class='awrnclb'>4,484.54</td><td align="right" headers="perSecond StdDev" class='awrnc'>25.11</td><td align="right" headers="perSecond Min" class='awrnc'>4,466.78</td><td align="right" headers="perSecond Max" class='awrncrb'>4,502.29</td></tr>
<tr><td scope="row" class='awrc'>messages sent directly</td><td align="right" class='awrc'>2,387,113</td><td align="right" class='awrc'>3,949.37</td><td align="right" class='awrc'>9.46</td><td align="right" headers="perSecond Average" class='awrclb'>1,974.68</td><td align="right" headers="perSecond StdDev" class='awrc'>10.11</td><td align="right" headers="perSecond Min" class='awrc'>1,967.54</td><td align="right" headers="perSecond Max" class='awrcrb'>1,981.83</td></tr>
<tr><td scope="row" class='awrnc'>messages sent indirectly</td><td align="right" class='awrnc'>2,940,611</td><td align="right" class='awrnc'>4,865.11</td><td align="right" class='awrnc'>11.65</td><td align="right" headers="perSecond Average" class='awrnclb'>2,432.55</td><td align="right" headers="perSecond StdDev" class='awrnc'>37.56</td><td align="right" headers="perSecond Min" class='awrnc'>2,406.00</td><td align="right" headers="perSecond Max" class='awrncrb'>2,459.11</td></tr>
<tr><td scope="row" class='awrc'>messages sent not implicit batched</td><td align="right" class='awrc'>39,997</td><td align="right" class='awrc'>66.17</td><td align="right" class='awrc'>0.16</td><td align="right" headers="perSecond Average" class='awrclb'>33.09</td><td align="right" headers="perSecond StdDev" class='awrc'>11.51</td><td align="right" headers="perSecond Min" class='awrc'>24.95</td><td align="right" headers="perSecond Max" class='awrcrb'>41.22</td></tr>
<tr><td scope="row" class='awrnc'>messages sent pbatched</td><td align="right" class='awrnc'>2,489,603</td><td align="right" class='awrnc'>4,118.93</td><td align="right" class='awrnc'>9.86</td><td align="right" headers="perSecond Average" class='awrnclb'>2,059.47</td><td align="right" headers="perSecond StdDev" class='awrnc'>4.00</td><td align="right" headers="perSecond Min" class='awrnc'>2,056.64</td><td align="right" headers="perSecond Max" class='awrncrb'>2,062.30</td></tr>
<tr><td scope="row" class='awrc'>msgs received kernel queue time (ns)</td><td align="right" class='awrc'>233,410,712,080</td><td align="right" class='awrc'>386,167,464.06</td><td align="right" class='awrc'>924,570.96</td><td align="right" headers="perSecond Average" class='awrclb'>193,083,732.03</td><td align="right" headers="perSecond StdDev" class='awrc'>24,055,062.54</td><td align="right" headers="perSecond Min" class='awrc'>176,074,234.19</td><td align="right" headers="perSecond Max" class='awrcrb'>210,093,229.87</td></tr>
<tr><td scope="row" class='awrnc'>msgs received queue time (ms)</td><td align="right" class='awrnc'>87,984</td><td align="right" class='awrnc'>145.57</td><td align="right" class='awrnc'>0.35</td><td align="right" headers="perSecond Average" class='awrnclb'>72.78</td><td align="right" headers="perSecond StdDev" class='awrnc'>9.00</td><td align="right" headers="perSecond Min" class='awrnc'>66.42</td><td align="right" headers="perSecond Max" class='awrncrb'>79.15</td></tr>
<tr><td scope="row" class='awrc'>msgs received queued</td><td align="right" class='awrc'>5,421,169</td><td align="right" class='awrc'>8,969.08</td><td align="right" class='awrc'>21.47</td><td align="right" headers="perSecond Average" class='awrclb'>4,484.54</td><td align="right" headers="perSecond StdDev" class='awrc'>25.11</td><td align="right" headers="perSecond Min" class='awrc'>4,466.78</td><td align="right" headers="perSecond Max" class='awrcrb'>4,502.29</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queue time (ms)</td><td align="right" class='awrnc'>536,008</td><td align="right" class='awrnc'>886.80</td><td align="right" class='awrnc'>2.12</td><td align="right" headers="perSecond Average" class='awrnclb'>443.40</td><td align="right" headers="perSecond StdDev" class='awrnc'>9.39</td><td align="right" headers="perSecond Min" class='awrnc'>436.76</td><td align="right" headers="perSecond Max" class='awrncrb'>450.04</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queue time on ksxp (ms)</td><td align="right" class='awrc'>2,679,021</td><td align="right" class='awrc'>4,432.32</td><td align="right" class='awrc'>10.61</td><td align="right" headers="perSecond Average" class='awrclb'>2,216.16</td><td align="right" headers="perSecond StdDev" class='awrc'>19.39</td><td align="right" headers="perSecond Min" class='awrc'>2,202.45</td><td align="right" headers="perSecond Max" class='awrcrb'>2,229.87</td></tr>
<tr><td scope="row" class='awrnc'>msgs sent queued</td><td align="right" class='awrnc'>774,739</td><td align="right" class='awrnc'>1,281.77</td><td align="right" class='awrnc'>3.07</td><td align="right" headers="perSecond Average" class='awrnclb'>640.89</td><td align="right" headers="perSecond StdDev" class='awrnc'>2.29</td><td align="right" headers="perSecond Min" class='awrnc'>639.26</td><td align="right" headers="perSecond Max" class='awrncrb'>642.51</td></tr>
<tr><td scope="row" class='awrc'>msgs sent queued on ksxp</td><td align="right" class='awrc'>2,883,615</td><td align="right" class='awrc'>4,770.81</td><td align="right" class='awrc'>11.42</td><td align="right" headers="perSecond Average" class='awrclb'>2,385.40</td><td align="right" headers="perSecond StdDev" class='awrc'>3.13</td><td align="right" headers="perSecond Min" class='awrc'>2,383.19</td><td align="right" headers="perSecond Max" class='awrcrb'>2,387.62</td></tr>
<tr><td scope="row" class='awrnc'>process batch messages received</td><td align="right" class='awrnc'>219,213</td><td align="right" class='awrnc'>362.68</td><td align="right" class='awrnc'>0.87</td><td align="right" headers="perSecond Average" class='awrnclb'>181.34</td><td align="right" headers="perSecond StdDev" class='awrnc'>15.70</td><td align="right" headers="perSecond Min" class='awrnc'>170.24</td><td align="right" headers="perSecond Max" class='awrncrb'>192.44</td></tr>
<tr><td scope="row" class='awrc'>process batch messages sent</td><td align="right" class='awrc'>234,127</td><td align="right" class='awrc'>387.35</td><td align="right" class='awrc'>0.93</td><td align="right" headers="perSecond Average" class='awrclb'>193.68</td><td align="right" headers="perSecond StdDev" class='awrc'>15.43</td><td align="right" headers="perSecond Min" class='awrc'>182.77</td><td align="right" headers="perSecond Max" class='awrcrb'>204.59</td></tr>
<tr><td scope="row" class='awrnc'>receiver cycle time</td><td align="right" class='awrnc'>728,489</td><td align="right" class='awrnc'>1,205.25</td><td align="right" class='awrnc'>2.89</td><td align="right" headers="perSecond Average" class='awrnclb'>602.63</td><td align="right" headers="perSecond StdDev" class='awrnc'>5.95</td><td align="right" headers="perSecond Min" class='awrnc'>598.42</td><td align="right" headers="perSecond Max" class='awrncrb'>606.83</td></tr>
<tr><td scope="row" class='awrc'>receiver loop count</td><td align="right" class='awrc'>3,008,546</td><td align="right" class='awrc'>4,977.50</td><td align="right" class='awrc'>11.92</td><td align="right" headers="perSecond Average" class='awrclb'>2,488.75</td><td align="right" headers="perSecond StdDev" class='awrc'>41.00</td><td align="right" headers="perSecond Min" class='awrc'>2,459.76</td><td align="right" headers="perSecond Max" class='awrcrb'>2,517.74</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12073"></a>
<h3 class="awr">System Statistics (Absolute Values)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="System Statistics (Absolute Values)"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="Sessions">Sessions</th>
<th class="awrbg" colspan=" 2" id="OpenCursors">Open Cursors</th>
<th class="awrbg" colspan=" 2" id="SessionCachedCursors">Session Cached Cursors</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="Sessions Begin" class='awrclb'>108</td><td align="right" headers="Sessions End" class='awrc'>90</td><td align="right" headers="OpenCursors Begin" class='awrclb'>157</td><td align="right" headers="OpenCursors End" class='awrc'>79</td><td align="right" headers="SessionCachedCursors Begin" class='awrclb'>4,293</td><td align="right" headers="SessionCachedCursors End" class='awrcrb'>4,256</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="Sessions Begin" class='awrnclb'>111</td><td align="right" headers="Sessions End" class='awrnc'>91</td><td align="right" headers="OpenCursors Begin" class='awrnclb'>202</td><td align="right" headers="OpenCursors End" class='awrnc'>116</td><td align="right" headers="SessionCachedCursors Begin" class='awrnclb'>3,884</td><td align="right" headers="SessionCachedCursors End" class='awrncrb'>3,898</td></tr>
<tr><td align="right" scope="row" class='awrct'>Sum</td><td align="right" class='awrclbt'>219</td><td align="right" class='awrct'>181</td><td align="right" class='awrclbt'>359</td><td align="right" class='awrct'>195</td><td align="right" class='awrclbt'>8,177</td><td align="right" class='awrcrbt'>8,154</td></tr>
<tr><td align="right" scope="row" class='awrnc'>Avg</td><td align="right" class='awrnclb'>110</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnclb'>180</td><td align="right" class='awrnc'>98</td><td align="right" class='awrnclb'>4,089</td><td align="right" class='awrncrb'>4,077</td></tr>
<tr><td align="right" scope="row" class='awrc'>Std</td><td align="right" class='awrclb'>2</td><td align="right" class='awrc'>1</td><td align="right" class='awrclb'>32</td><td align="right" class='awrc'>26</td><td align="right" class='awrclb'>289</td><td align="right" class='awrcrb'>253</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#623">Back to Global Activity Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="630"></a>
<h2 class="awr">
I/O Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12097">IO Profile (Global)</a></li>
<li class="awr"><a class="awr" href="#12076">IOStat by Function</a></li>
<li class="awr"><a class="awr" href="#12077">IOStat by File Type</a></li>
<li class="awr"><a class="awr" href="#12070">Segment Statistics (Global)</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12097"></a>
<h3 class="awr">IO Profile (Global)</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IO Profile (Global)"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Read+Write/s</th><th class="awrbg" scope="col">Reads/s</th><th class="awrbg" scope="col">Writes/s</th></tr>
<tr><td class='awrc'>Total Requests</td><td align="right" class='awrc'>9,529.43</td><td align="right" class='awrc'>8,058.81</td><td align="right" class='awrc'>1,470.63</td></tr>
<tr><td class='awrnc'>Database Requests</td><td align="right" class='awrnc'>9,170.10</td><td align="right" class='awrnc'>8,044.97</td><td align="right" class='awrnc'>1,125.12</td></tr>
<tr><td class='awrc'>Optimized Requests</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo Requests</td><td align="right" class='awrnc'>332.55</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>332.55</td></tr>
<tr><td class='awrc'>Total (MB)</td><td align="right" class='awrc'>75.62</td><td align="right" class='awrc'>65.22</td><td align="right" class='awrc'>10.40</td></tr>
<tr><td class='awrnc'>Database (MB)</td><td align="right" class='awrnc'>71.99</td><td align="right" class='awrnc'>62.85</td><td align="right" class='awrnc'>9.14</td></tr>
<tr><td class='awrc'>Optimized Total (MB)</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.00</td></tr>
<tr><td class='awrnc'>Redo (MB)</td><td align="right" class='awrnc'>1.11</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>1.11</td></tr>
<tr><td class='awrc'>Database (blocks)</td><td align="right" class='awrc'>9,214.92</td><td align="right" class='awrc'>8,045.09</td><td align="right" class='awrc'>1,169.83</td></tr>
<tr><td class='awrnc'>Via Buffer Cache (blocks)</td><td align="right" class='awrnc'>9,214.54</td><td align="right" class='awrnc'>8,045.09</td><td align="right" class='awrnc'>1,169.45</td></tr>
<tr><td class='awrc'>Direct (blocks)</td><td align="right" class='awrc'>0.38</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0.38</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12076"></a>
<h3 class="awr">IOStat by Function</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by Function"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<td>&#160;</td><td>&#160;</td></tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Function Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col">Waits: Count</th><th class="awrbg" scope="col">Avg   Time </th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>5,742,133</td><td align="right" headers="Requests IOs/s" class='awrc'>9,499.58</td><td align="right" headers="Requests Reads/s" class='awrc'>8,029.53</td><td align="right" headers="Requests Writes/s" class='awrc'>1,470.04</td><td align="right" headers="MB Total" class='awrclb'>45,576</td><td align="right" headers="MB IOMB/s" class='awrc'>75.40</td><td align="right" headers="MB ReadMB/s" class='awrc'>65.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>10.40</td><td align="right" class='awrc'>5.1M</td><td align="right" class='awrc'>4.21ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrnclb'>4,845,211</td><td align="right" headers="Requests IOs/s" class='awrnc'>8,015.74</td><td align="right" headers="Requests Reads/s" class='awrnc'>8,015.74</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>37,860</td><td align="right" headers="MB IOMB/s" class='awrnc'>62.63</td><td align="right" headers="MB ReadMB/s" class='awrnc'>62.63</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>4.8M</td><td align="right" class='awrnc'>4.14ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>680,163</td><td align="right" headers="Requests IOs/s" class='awrc'>1,125.24</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>1,125.24</td><td align="right" headers="MB Total" class='awrclb'>5,523</td><td align="right" headers="MB IOMB/s" class='awrc'>9.14</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>9.14</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>9,571</td><td align="right" headers="Requests IOs/s" class='awrnc'>15.83</td><td align="right" headers="Requests Reads/s" class='awrnc'>13.79</td><td align="right" headers="Requests Writes/s" class='awrnc'>2.04</td><td align="right" headers="MB Total" class='awrnclb'>1,452</td><td align="right" headers="MB IOMB/s" class='awrnc'>2.40</td><td align="right" headers="MB ReadMB/s" class='awrnc'>2.37</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.03</td><td align="right" class='awrnc'>5714</td><td align="right" class='awrnc'>1.37ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>LGWR</td><td align="right" headers="Requests Total" class='awrclb'>207,183</td><td align="right" headers="Requests IOs/s" class='awrc'>342.76</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>342.76</td><td align="right" headers="MB Total" class='awrclb'>741</td><td align="right" headers="MB IOMB/s" class='awrc'>1.23</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>1.23</td><td align="right" class='awrc'>200.6K</td><td align="right" class='awrc'>5.95ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrnclb'>5</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.01</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.01</td><td align="right" headers="MB Total" class='awrnclb'>0</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrct'>1</td><td class='awrct'>Total</td><td align="right" headers="Requests Total" class='awrclbt'>2,773,078</td><td align="right" headers="Requests IOs/s" class='awrct'>4,587.68</td><td align="right" headers="Requests Reads/s" class='awrct'>3,878.26</td><td align="right" headers="Requests Writes/s" class='awrct'>709.42</td><td align="right" headers="MB Total" class='awrclbt'>22,022</td><td align="right" headers="MB IOMB/s" class='awrct'>36.43</td><td align="right" headers="MB ReadMB/s" class='awrct'>31.46</td><td align="right" headers="MB WriteMB/s" class='awrcrbt'>4.98</td><td align="right" class='awrct'>2.4M</td><td align="right" class='awrct'>4.11ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrnclb'>2,340,449</td><td align="right" headers="Requests IOs/s" class='awrnc'>3,871.95</td><td align="right" headers="Requests Reads/s" class='awrnc'>3,871.95</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.00</td><td align="right" headers="MB Total" class='awrnclb'>18,288</td><td align="right" headers="MB IOMB/s" class='awrnc'>30.26</td><td align="right" headers="MB ReadMB/s" class='awrnc'>30.26</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.00</td><td align="right" class='awrnc'>2.3M</td><td align="right" class='awrnc'>4.05ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>DBWR</td><td align="right" headers="Requests Total" class='awrclb'>324,639</td><td align="right" headers="Requests IOs/s" class='awrc'>537.07</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>537.07</td><td align="right" headers="MB Total" class='awrclb'>2,639</td><td align="right" headers="MB IOMB/s" class='awrc'>4.37</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>4.37</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Others</td><td align="right" headers="Requests Total" class='awrnclb'>4,376</td><td align="right" headers="Requests IOs/s" class='awrnc'>7.24</td><td align="right" headers="Requests Reads/s" class='awrnc'>6.31</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.93</td><td align="right" headers="MB Total" class='awrnclb'>736</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.22</td><td align="right" headers="MB ReadMB/s" class='awrnc'>1.20</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.02</td><td align="right" class='awrnc'>2553</td><td align="right" class='awrnc'>1.49ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>LGWR</td><td align="right" headers="Requests Total" class='awrclb'>103,614</td><td align="right" headers="Requests IOs/s" class='awrc'>171.42</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>171.42</td><td align="right" headers="MB Total" class='awrclb'>359</td><td align="right" headers="MB IOMB/s" class='awrc'>0.59</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.59</td><td align="right" class='awrc'>100.5K</td><td align="right" class='awrc'>5.58ms</td></tr>
<tr><td align="right" scope="row" class='awrnct'>2</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>2,969,055</td><td align="right" headers="Requests IOs/s" class='awrnct'>4,911.90</td><td align="right" headers="Requests Reads/s" class='awrnct'>4,151.27</td><td align="right" headers="Requests Writes/s" class='awrnct'>760.63</td><td align="right" headers="MB Total" class='awrnclbt'>23,554</td><td align="right" headers="MB IOMB/s" class='awrnct'>38.97</td><td align="right" headers="MB ReadMB/s" class='awrnct'>33.55</td><td align="right" headers="MB WriteMB/s" class='awrncrbt'>5.42</td><td align="right" class='awrnct'>2.6M</td><td align="right" class='awrnct'>4.29ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Buffer Cache Reads</td><td align="right" headers="Requests Total" class='awrclb'>2,504,762</td><td align="right" headers="Requests IOs/s" class='awrc'>4,143.79</td><td align="right" headers="Requests Reads/s" class='awrc'>4,143.79</td><td align="right" headers="Requests Writes/s" class='awrc'>0.00</td><td align="right" headers="MB Total" class='awrclb'>19,572</td><td align="right" headers="MB IOMB/s" class='awrc'>32.38</td><td align="right" headers="MB ReadMB/s" class='awrc'>32.38</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>2.5M</td><td align="right" class='awrc'>4.22ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>DBWR</td><td align="right" headers="Requests Total" class='awrnclb'>355,524</td><td align="right" headers="Requests IOs/s" class='awrnc'>588.17</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>588.17</td><td align="right" headers="MB Total" class='awrnclb'>2,884</td><td align="right" headers="MB IOMB/s" class='awrnc'>4.77</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>4.77</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Others</td><td align="right" headers="Requests Total" class='awrclb'>5,195</td><td align="right" headers="Requests IOs/s" class='awrc'>8.59</td><td align="right" headers="Requests Reads/s" class='awrc'>7.48</td><td align="right" headers="Requests Writes/s" class='awrc'>1.11</td><td align="right" headers="MB Total" class='awrclb'>716</td><td align="right" headers="MB IOMB/s" class='awrc'>1.18</td><td align="right" headers="MB ReadMB/s" class='awrc'>1.17</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.02</td><td align="right" class='awrc'>3161</td><td align="right" class='awrc'>1.27ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>LGWR</td><td align="right" headers="Requests Total" class='awrnclb'>103,569</td><td align="right" headers="Requests IOs/s" class='awrnc'>171.34</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrnc'>171.34</td><td align="right" headers="MB Total" class='awrnclb'>382</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.63</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrncrb'>0.63</td><td align="right" class='awrnc'>100.1K</td><td align="right" class='awrnc'>6.33ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Direct Writes</td><td align="right" headers="Requests Total" class='awrclb'>5</td><td align="right" headers="Requests IOs/s" class='awrc'>0.01</td><td align="right" headers="Requests Reads/s" class='awrc'>0.00</td><td align="right" headers="Requests Writes/s" class='awrc'>0.01</td><td align="right" headers="MB Total" class='awrclb'>0</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrcrb'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12077"></a>
<h3 class="awr">IOStat by File Type</h3>
<ul>
</ul>
<table border="0" class="tdiff" summary="IOStat by File Type"><tr>
<td>&#160;</td><td>&#160;</td><th class="awrbg" colspan=" 4" id="Requests">Requests</th>
<th class="awrbg" colspan=" 4" id="MB">MB</th>
<th class="awrbg" colspan=" 2" id="ServiceTime">Service Time</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Filetype Name</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOs/s">IOs/s</th><th class="awrbg" scope="col" id="Reads/s">Reads/s</th><th class="awrbg" scope="col" id="Writes/s">Writes/s</th><th class="awrbg" scope="col" id="Total">Total</th><th class="awrbg" scope="col" id="IOMB/s">IO MB/s</th><th class="awrbg" scope="col" id="ReadMB/s">Read MB/s</th><th class="awrbg" scope="col" id="WriteMB/s">Write MB/s</th><th class="awrbg" scope="col" id="Small|Read">Small Read</th><th class="awrbg" scope="col" id="Large|Read">Large Read</th></tr>
<tr><td align="right" scope="row" class='awrc'>*</td><td class='awrc'>Total</td><td align="right" headers="Requests Total" class='awrclb'>5,743,632</td><td align="right" headers="Requests IOs/s" class='awrc'>9,502.06</td><td align="right" headers="Requests Reads/s" class='awrc'>8,032.04</td><td align="right" headers="Requests Writes/s" class='awrc'>1,470.02</td><td align="right" headers="MB Total" class='awrclb'>45,587</td><td align="right" headers="MB IOMB/s" class='awrc'>75.42</td><td align="right" headers="MB ReadMB/s" class='awrc'>65.01</td><td align="right" headers="MB WriteMB/s" class='awrc'>10.40</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>3.62ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1382.57ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Data File</td><td align="right" headers="Requests Total" class='awrnclb'>5,526,834</td><td align="right" headers="Requests IOs/s" class='awrnc'>9,143.39</td><td align="right" headers="Requests Reads/s" class='awrnc'>8,018.18</td><td align="right" headers="Requests Writes/s" class='awrnc'>1,125.22</td><td align="right" headers="MB Total" class='awrnclb'>43,394</td><td align="right" headers="MB IOMB/s" class='awrnc'>71.79</td><td align="right" headers="MB ReadMB/s" class='awrnc'>62.64</td><td align="right" headers="MB WriteMB/s" class='awrnc'>9.15</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>3.63ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Log File</td><td align="right" headers="Requests Total" class='awrclb'>208,675</td><td align="right" headers="Requests IOs/s" class='awrc'>345.22</td><td align="right" headers="Requests Reads/s" class='awrc'>2.49</td><td align="right" headers="Requests Writes/s" class='awrc'>342.73</td><td align="right" headers="MB Total" class='awrclb'>2,067</td><td align="right" headers="MB IOMB/s" class='awrc'>3.42</td><td align="right" headers="MB ReadMB/s" class='awrc'>2.19</td><td align="right" headers="MB WriteMB/s" class='awrc'>1.23</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>210.19us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>1382.57ms</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">*</div></td><td class='awrnc'>Control File</td><td align="right" headers="Requests Total" class='awrnclb'>8,021</td><td align="right" headers="Requests IOs/s" class='awrnc'>13.27</td><td align="right" headers="Requests Reads/s" class='awrnc'>11.28</td><td align="right" headers="Requests Writes/s" class='awrnc'>1.99</td><td align="right" headers="MB Total" class='awrnclb'>124</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.21</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.18</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.03</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>32.11us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">*</div></td><td class='awrc'>Temp File</td><td align="right" headers="Requests Total" class='awrclb'>102</td><td align="right" headers="Requests IOs/s" class='awrc'>0.17</td><td align="right" headers="Requests Reads/s" class='awrc'>0.08</td><td align="right" headers="Requests Writes/s" class='awrc'>0.09</td><td align="right" headers="MB Total" class='awrclb'>2</td><td align="right" headers="MB IOMB/s" class='awrc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>.00ns</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnct'>1</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>2,773,833</td><td align="right" headers="Requests IOs/s" class='awrnct'>4,588.93</td><td align="right" headers="Requests Reads/s" class='awrnct'>3,879.53</td><td align="right" headers="Requests Writes/s" class='awrnct'>709.40</td><td align="right" headers="MB Total" class='awrnclbt'>22,027</td><td align="right" headers="MB IOMB/s" class='awrnct'>36.44</td><td align="right" headers="MB ReadMB/s" class='awrnct'>31.46</td><td align="right" headers="MB WriteMB/s" class='awrnct'>4.98</td><td align="right" headers="ServiceTime Small|Read" class='awrnclbt'>3.55ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrbt'>1388.60ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Data File</td><td align="right" headers="Requests Total" class='awrclb'>2,665,861</td><td align="right" headers="Requests IOs/s" class='awrc'>4,410.30</td><td align="right" headers="Requests Reads/s" class='awrc'>3,873.23</td><td align="right" headers="Requests Writes/s" class='awrc'>537.07</td><td align="right" headers="MB Total" class='awrclb'>20,934</td><td align="right" headers="MB IOMB/s" class='awrc'>34.63</td><td align="right" headers="MB ReadMB/s" class='awrc'>30.26</td><td align="right" headers="MB WriteMB/s" class='awrc'>4.37</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>3.56ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>Log File</td><td align="right" headers="Requests Total" class='awrnclb'>104,378</td><td align="right" headers="Requests IOs/s" class='awrnc'>172.68</td><td align="right" headers="Requests Reads/s" class='awrnc'>1.28</td><td align="right" headers="Requests Writes/s" class='awrnc'>171.40</td><td align="right" headers="MB Total" class='awrnclb'>1,038</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.72</td><td align="right" headers="MB ReadMB/s" class='awrnc'>1.12</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.59</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>206.90us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>1388.60ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">1</div></td><td class='awrc'>Control File</td><td align="right" headers="Requests Total" class='awrclb'>3,594</td><td align="right" headers="Requests IOs/s" class='awrc'>5.95</td><td align="right" headers="Requests Reads/s" class='awrc'>5.02</td><td align="right" headers="Requests Writes/s" class='awrc'>0.93</td><td align="right" headers="MB Total" class='awrclb'>55</td><td align="right" headers="MB IOMB/s" class='awrc'>0.09</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.08</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.01</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>38.23us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnct'>2</td><td class='awrnct'>Total</td><td align="right" headers="Requests Total" class='awrnclbt'>2,969,799</td><td align="right" headers="Requests IOs/s" class='awrnct'>4,913.13</td><td align="right" headers="Requests Reads/s" class='awrnct'>4,152.51</td><td align="right" headers="Requests Writes/s" class='awrnct'>760.62</td><td align="right" headers="MB Total" class='awrnclbt'>23,560</td><td align="right" headers="MB IOMB/s" class='awrnct'>38.98</td><td align="right" headers="MB ReadMB/s" class='awrnct'>33.55</td><td align="right" headers="MB WriteMB/s" class='awrnct'>5.42</td><td align="right" headers="ServiceTime Small|Read" class='awrnclbt'>3.69ms</td><td align="right" headers="ServiceTime Large|Read" class='awrncrbt'>1376.37ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Data File</td><td align="right" headers="Requests Total" class='awrclb'>2,860,973</td><td align="right" headers="Requests IOs/s" class='awrc'>4,733.09</td><td align="right" headers="Requests Reads/s" class='awrc'>4,144.95</td><td align="right" headers="Requests Writes/s" class='awrc'>588.14</td><td align="right" headers="MB Total" class='awrclb'>22,460</td><td align="right" headers="MB IOMB/s" class='awrc'>37.16</td><td align="right" headers="MB ReadMB/s" class='awrc'>32.38</td><td align="right" headers="MB WriteMB/s" class='awrc'>4.77</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>3.70ms</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Log File</td><td align="right" headers="Requests Total" class='awrnclb'>104,297</td><td align="right" headers="Requests IOs/s" class='awrnc'>172.55</td><td align="right" headers="Requests Reads/s" class='awrnc'>1.22</td><td align="right" headers="Requests Writes/s" class='awrnc'>171.33</td><td align="right" headers="MB Total" class='awrnclb'>1,029</td><td align="right" headers="MB IOMB/s" class='awrnc'>1.70</td><td align="right" headers="MB ReadMB/s" class='awrnc'>1.07</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.63</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>214.29us</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>1376.37ms</td></tr>
<tr><td align="right" scope="row" class='awrc'><div class="hidden">2</div></td><td class='awrc'>Control File</td><td align="right" headers="Requests Total" class='awrclb'>4,427</td><td align="right" headers="Requests IOs/s" class='awrc'>7.32</td><td align="right" headers="Requests Reads/s" class='awrc'>6.27</td><td align="right" headers="Requests Writes/s" class='awrc'>1.06</td><td align="right" headers="MB Total" class='awrclb'>69</td><td align="right" headers="MB IOMB/s" class='awrc'>0.11</td><td align="right" headers="MB ReadMB/s" class='awrc'>0.10</td><td align="right" headers="MB WriteMB/s" class='awrc'>0.02</td><td align="right" headers="ServiceTime Small|Read" class='awrclb'>27.20us</td><td align="right" headers="ServiceTime Large|Read" class='awrcrb'>&#160;</td></tr>
<tr><td align="right" scope="row" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>Temp File</td><td align="right" headers="Requests Total" class='awrnclb'>102</td><td align="right" headers="Requests IOs/s" class='awrnc'>0.17</td><td align="right" headers="Requests Reads/s" class='awrnc'>0.08</td><td align="right" headers="Requests Writes/s" class='awrnc'>0.09</td><td align="right" headers="MB Total" class='awrnclb'>2</td><td align="right" headers="MB IOMB/s" class='awrnc'>0.00</td><td align="right" headers="MB ReadMB/s" class='awrnc'>0.00</td><td align="right" headers="MB WriteMB/s" class='awrnc'>0.00</td><td align="right" headers="ServiceTime Small|Read" class='awrnclb'>.00ns</td><td align="right" headers="ServiceTime Large|Read" class='awrncrb'>&#160;</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12070"></a>
<h3 class="awr">Segment Statistics (Global)</h3>
<ul>
<li class="awr"> % Total shows % of statistic for each segment compared to the global cluster-wide total     (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants) </li>
<li class="awr"> % Capture shows % of statistic for each segment compared to the  total captured     by AWR for all segments during the snapshot interval</li>
<li class="awr">Captured Segments account for	81.7% of Total Logical Reads:	   11,662,672</li>
<li class="awr">Captured Segments account for	99.7% of Total Physical Reads:	     4,862,951</li>
<li class="awr">Captured Segments account for	99.7% of Total Physical Read Requests:	     4,862,881</li>
<li class="awr">Captured Segments account for	99.7% of Total UnOptimized Read Requests:	4,862,881</li>
<li class="awr">Captured Segments account for	 0.0% of Total Optimized  Read Requests:	       1</li>
<li class="awr">Captured Segments account for	 0.0% of Total Direct Physical Reads:		    1</li>
<li class="awr">Captured Segments account for	96.4% of Total Physical Writes: 	707,115</li>
<li class="awr">Captured Segments account for	99.6% of Total Physical Write Requests: 	680,093</li>
<li class="awr">Captured Segments account for	56.3% of Total Direct Physical Writes:		   229</li>
<li class="awr">Captured Segments account for	 0.0% of Total Table Scans:		  5</li>
<li class="awr">Captured Segments account for	77.2% of Total CR Blocks Received:	     7,047</li>
<li class="awr">Captured Segments account for	98.0% of Total Current Blocks Received: 	 23,952</li>
<li class="awr">Captured Segments account for	77.2% of Total CR Blocks Served:	   7,049</li>
<li class="awr">Captured Segments account for	97.9% of Total Current Blocks Served:	       23,965</li>
<li class="awr">Captured Segments account for	99.6% of Total Global Cache Remote Grants:	 2,332,107</li>
<li class="awr">When ** MISSING ** occurs, some of the object attributes may not be available</li>
</ul>
<table border="0" class="tdiff" summary="Segment Statistics (Global). . % Total shows % of statistic for each segment compared to the global cluster-wide total (logical reads, physical reads, gc [cr/cu] blocks [recv/serv], gc remote grants). % Capture shows % of statistic for each segment compared to the total captured by AWR for all segments during the snapshot interval"><tr><th class="awrbg" scope="col">Statistic</th><th class="awrbg" scope="col">Owner</th><th class="awrbg" scope="col">Tablespace Name</th><th class="awrbg" scope="col">Object Name</th><th class="awrbg" scope="col">Subobject Name</th><th class="awrbg" scope="col">Obj. Type</th><th class="awrbg" scope="col">Obj#</th><th class="awrbg" scope="col">Dataobj#</th><th class="awrbg" scope="col">Value</th><th class="awrbg" scope="col">%Total</th><th class="awrbg" scope="col">%Capture</th></tr>
<tr><td class='awrc'>db block changes</td><td class='awrc'>USER27</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73535</td><td align="right" class='awrc'>73538</td><td align="right" class='awrc'>22,080</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>20.31</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>USER30</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73550</td><td align="right" class='awrnc'>73554</td><td align="right" class='awrnc'>21,872</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>20.11</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>USER3</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>21,696</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>19.95</td></tr>
<tr><td class='awrnc'><div class="hidden">db block changes</div></td><td class='awrnc'>USER10</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73453</td><td align="right" class='awrnc'>73455</td><td align="right" class='awrnc'>21,664</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>19.92</td></tr>
<tr><td class='awrc'><div class="hidden">db block changes</div></td><td class='awrc'>USER7</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73433</td><td align="right" class='awrc'>73436</td><td align="right" class='awrc'>21,424</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>19.70</td></tr>
<tr><td class='awrnc'>gc cr blocks received</td><td class='awrnc'>USER20</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73501</td><td align="right" class='awrnc'>73506</td><td align="right" class='awrnc'>404</td><td align="right" class='awrnc'>5.73</td><td align="right" class='awrnc'>24.02</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>USER21</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73503</td><td align="right" class='awrc'>73505</td><td align="right" class='awrc'>370</td><td align="right" class='awrc'>5.25</td><td align="right" class='awrc'>22.00</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>USER24</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73520</td><td align="right" class='awrnc'>73529</td><td align="right" class='awrnc'>328</td><td align="right" class='awrnc'>4.65</td><td align="right" class='awrnc'>19.50</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks received</div></td><td class='awrc'>USER36</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73581</td><td align="right" class='awrc'>73588</td><td align="right" class='awrc'>306</td><td align="right" class='awrc'>4.34</td><td align="right" class='awrc'>18.19</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks received</div></td><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>274</td><td align="right" class='awrnc'>3.89</td><td align="right" class='awrnc'>16.29</td></tr>
<tr><td class='awrc'>gc cr blocks served</td><td class='awrc'>USER20</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73501</td><td align="right" class='awrc'>73506</td><td align="right" class='awrc'>404</td><td align="right" class='awrc'>5.73</td><td align="right" class='awrc'>24.02</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>USER21</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73503</td><td align="right" class='awrnc'>73505</td><td align="right" class='awrnc'>370</td><td align="right" class='awrnc'>5.25</td><td align="right" class='awrnc'>22.00</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>USER24</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73520</td><td align="right" class='awrc'>73529</td><td align="right" class='awrc'>328</td><td align="right" class='awrc'>4.65</td><td align="right" class='awrc'>19.50</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cr blocks served</div></td><td class='awrnc'>USER36</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73581</td><td align="right" class='awrnc'>73588</td><td align="right" class='awrnc'>306</td><td align="right" class='awrnc'>4.34</td><td align="right" class='awrnc'>18.19</td></tr>
<tr><td class='awrc'><div class="hidden">gc cr blocks served</div></td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>274</td><td align="right" class='awrc'>3.89</td><td align="right" class='awrc'>16.29</td></tr>
<tr><td class='awrnc'>gc cu blocks received</td><td class='awrnc'>USER21</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73503</td><td align="right" class='awrnc'>73505</td><td align="right" class='awrnc'>1,289</td><td align="right" class='awrnc'>5.38</td><td align="right" class='awrnc'>22.08</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>USER20</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73501</td><td align="right" class='awrc'>73506</td><td align="right" class='awrc'>1,241</td><td align="right" class='awrc'>5.18</td><td align="right" class='awrc'>21.25</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>USER24</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73520</td><td align="right" class='awrnc'>73529</td><td align="right" class='awrnc'>1,145</td><td align="right" class='awrnc'>4.78</td><td align="right" class='awrnc'>19.61</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks received</div></td><td class='awrc'>USER4</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73424</td><td align="right" class='awrc'>73420</td><td align="right" class='awrc'>1,106</td><td align="right" class='awrc'>4.62</td><td align="right" class='awrc'>18.94</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks received</div></td><td class='awrnc'>USER36</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73581</td><td align="right" class='awrnc'>73588</td><td align="right" class='awrnc'>1,058</td><td align="right" class='awrnc'>4.42</td><td align="right" class='awrnc'>18.12</td></tr>
<tr><td class='awrc'>gc cu blocks served</td><td class='awrc'>USER21</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73503</td><td align="right" class='awrc'>73505</td><td align="right" class='awrc'>1,289</td><td align="right" class='awrc'>5.38</td><td align="right" class='awrc'>22.08</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>USER20</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73501</td><td align="right" class='awrnc'>73506</td><td align="right" class='awrnc'>1,241</td><td align="right" class='awrnc'>5.18</td><td align="right" class='awrnc'>21.25</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>USER24</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73520</td><td align="right" class='awrc'>73529</td><td align="right" class='awrc'>1,145</td><td align="right" class='awrc'>4.78</td><td align="right" class='awrc'>19.61</td></tr>
<tr><td class='awrnc'><div class="hidden">gc cu blocks served</div></td><td class='awrnc'>USER4</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73424</td><td align="right" class='awrnc'>73420</td><td align="right" class='awrnc'>1,106</td><td align="right" class='awrnc'>4.62</td><td align="right" class='awrnc'>18.94</td></tr>
<tr><td class='awrc'><div class="hidden">gc cu blocks served</div></td><td class='awrc'>USER36</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73581</td><td align="right" class='awrc'>73588</td><td align="right" class='awrc'>1,058</td><td align="right" class='awrc'>4.41</td><td align="right" class='awrc'>18.12</td></tr>
<tr><td class='awrnc'>gc remote grants</td><td class='awrnc'>USER28</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73541</td><td align="right" class='awrnc'>73548</td><td align="right" class='awrnc'>78,504</td><td align="right" class='awrnc'>3.37</td><td align="right" class='awrnc'>21.59</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>USER7</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73433</td><td align="right" class='awrc'>73436</td><td align="right" class='awrc'>72,461</td><td align="right" class='awrc'>3.11</td><td align="right" class='awrc'>19.93</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>USER40</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73603</td><td align="right" class='awrnc'>73605</td><td align="right" class='awrnc'>72,045</td><td align="right" class='awrnc'>3.09</td><td align="right" class='awrnc'>19.81</td></tr>
<tr><td class='awrc'><div class="hidden">gc remote grants</div></td><td class='awrc'>USER3</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>70,370</td><td align="right" class='awrc'>3.02</td><td align="right" class='awrc'>19.35</td></tr>
<tr><td class='awrnc'><div class="hidden">gc remote grants</div></td><td class='awrnc'>USER26</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73533</td><td align="right" class='awrnc'>73537</td><td align="right" class='awrnc'>70,274</td><td align="right" class='awrnc'>3.01</td><td align="right" class='awrnc'>19.32</td></tr>
<tr><td class='awrc'>logical reads</td><td class='awrc'>USER27</td><td class='awrc'>IOPS</td><td class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73525</td><td align="right" class='awrc'>73525</td><td align="right" class='awrc'>147,632</td><td align="right" class='awrc'>1.27</td><td align="right" class='awrc'>20.17</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>USER27</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73535</td><td align="right" class='awrnc'>73538</td><td align="right" class='awrnc'>147,264</td><td align="right" class='awrnc'>1.26</td><td align="right" class='awrnc'>20.12</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER30</td><td class='awrc'>IOPS</td><td class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73561</td><td align="right" class='awrc'>73561</td><td align="right" class='awrc'>146,208</td><td align="right" class='awrc'>1.25</td><td align="right" class='awrc'>19.97</td></tr>
<tr><td class='awrnc'><div class="hidden">logical reads</div></td><td class='awrnc'>USER30</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73550</td><td align="right" class='awrnc'>73554</td><td align="right" class='awrnc'>145,840</td><td align="right" class='awrnc'>1.25</td><td align="right" class='awrnc'>19.92</td></tr>
<tr><td class='awrc'><div class="hidden">logical reads</div></td><td class='awrc'>USER3</td><td class='awrc'>IOPS</td><td class='awrc'>I_CF1</td><td class='awrc'>&#160;</td><td class='awrc'>INDEX</td><td align="right" class='awrc'>73417</td><td align="right" class='awrc'>73417</td><td align="right" class='awrc'>145,024</td><td align="right" class='awrc'>1.24</td><td align="right" class='awrc'>19.81</td></tr>
<tr><td class='awrnc'>physical reads</td><td class='awrnc'>USER27</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73535</td><td align="right" class='awrnc'>73538</td><td align="right" class='awrnc'>140,786</td><td align="right" class='awrnc'>2.90</td><td align="right" class='awrnc'>20.41</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>USER30</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73550</td><td align="right" class='awrc'>73554</td><td align="right" class='awrc'>139,482</td><td align="right" class='awrc'>2.87</td><td align="right" class='awrc'>20.22</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>USER3</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73413</td><td align="right" class='awrnc'>73416</td><td align="right" class='awrnc'>138,333</td><td align="right" class='awrnc'>2.84</td><td align="right" class='awrnc'>20.06</td></tr>
<tr><td class='awrc'><div class="hidden">physical reads</div></td><td class='awrc'>USER7</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73433</td><td align="right" class='awrc'>73436</td><td align="right" class='awrc'>136,847</td><td align="right" class='awrc'>2.81</td><td align="right" class='awrc'>19.84</td></tr>
<tr><td class='awrnc'><div class="hidden">physical reads</div></td><td class='awrnc'>USER28</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73541</td><td align="right" class='awrnc'>73548</td><td align="right" class='awrnc'>134,261</td><td align="right" class='awrnc'>2.76</td><td align="right" class='awrnc'>19.47</td></tr>
<tr><td class='awrc'>physical read requests</td><td class='awrc'>USER27</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73535</td><td align="right" class='awrc'>73538</td><td align="right" class='awrc'>140,786</td><td align="right" class='awrc'>2.90</td><td align="right" class='awrc'>20.41</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>USER30</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73550</td><td align="right" class='awrnc'>73554</td><td align="right" class='awrnc'>139,482</td><td align="right" class='awrnc'>2.87</td><td align="right" class='awrnc'>20.22</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>USER3</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73413</td><td align="right" class='awrc'>73416</td><td align="right" class='awrc'>138,333</td><td align="right" class='awrc'>2.84</td><td align="right" class='awrc'>20.06</td></tr>
<tr><td class='awrnc'><div class="hidden">physical read requests</div></td><td class='awrnc'>USER7</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73433</td><td align="right" class='awrnc'>73436</td><td align="right" class='awrnc'>136,847</td><td align="right" class='awrnc'>2.81</td><td align="right" class='awrnc'>19.84</td></tr>
<tr><td class='awrc'><div class="hidden">physical read requests</div></td><td class='awrc'>USER28</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73541</td><td align="right" class='awrc'>73548</td><td align="right" class='awrc'>134,261</td><td align="right" class='awrc'>2.76</td><td align="right" class='awrc'>19.47</td></tr>
<tr><td class='awrnc'>physical writes</td><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>21,252</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>20.76</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>USER2</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>21,008</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>20.52</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>20,936</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>20.45</td></tr>
<tr><td class='awrc'><div class="hidden">physical writes</div></td><td class='awrc'>USER27</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73535</td><td align="right" class='awrc'>73538</td><td align="right" class='awrc'>19,656</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>19.20</td></tr>
<tr><td class='awrnc'><div class="hidden">physical writes</div></td><td class='awrnc'>USER30</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73550</td><td align="right" class='awrnc'>73554</td><td align="right" class='awrnc'>19,522</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>19.07</td></tr>
<tr><td class='awrc'>physical writes direct</td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY</td><td class='awrc'>WRH$_ACTIVE_SESSION_HISTORY_3393773525_131</td><td class='awrc'>TABLE PARTITION</td><td align="right" class='awrc'>74322</td><td align="right" class='awrc'>74322</td><td align="right" class='awrc'>129</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>100.00</td></tr>
<tr><td class='awrnc'>physical write requests</td><td class='awrnc'>USER16</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73481</td><td align="right" class='awrnc'>73483</td><td align="right" class='awrnc'>21,221</td><td align="right" class='awrnc'>3.12</td><td align="right" class='awrnc'>20.80</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>USER2</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73409</td><td align="right" class='awrc'>73415</td><td align="right" class='awrc'>20,987</td><td align="right" class='awrc'>3.09</td><td align="right" class='awrc'>20.57</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>USER1</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73402</td><td align="right" class='awrnc'>73404</td><td align="right" class='awrnc'>20,913</td><td align="right" class='awrnc'>3.08</td><td align="right" class='awrnc'>20.50</td></tr>
<tr><td class='awrc'><div class="hidden">physical write requests</div></td><td class='awrc'>USER27</td><td class='awrc'>IOPS</td><td class='awrc'>CF1</td><td class='awrc'>&#160;</td><td class='awrc'>TABLE</td><td align="right" class='awrc'>73535</td><td align="right" class='awrc'>73538</td><td align="right" class='awrc'>19,517</td><td align="right" class='awrc'>2.87</td><td align="right" class='awrc'>19.13</td></tr>
<tr><td class='awrnc'><div class="hidden">physical write requests</div></td><td class='awrnc'>USER30</td><td class='awrnc'>IOPS</td><td class='awrnc'>CF1</td><td class='awrnc'>&#160;</td><td class='awrnc'>TABLE</td><td align="right" class='awrnc'>73550</td><td align="right" class='awrnc'>73554</td><td align="right" class='awrnc'>19,376</td><td align="right" class='awrnc'>2.85</td><td align="right" class='awrnc'>18.99</td></tr>
<tr><td class='awrc'>row lock waits</td><td class='awrc'>SYS</td><td class='awrc'>SYSAUX</td><td class='awrc'>WRH$_EVENT_HISTOGRAM_PK</td><td class='awrc'>WRH$_EVENT_HISTOGRAM_3393773525_79</td><td class='awrc'>INDEX PARTITION</td><td align="right" class='awrc'>74109</td><td align="right" class='awrc'>74109</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>50.00</td></tr>
<tr><td class='awrnc'><div class="hidden">row lock waits</div></td><td class='awrnc'>SYS</td><td class='awrnc'>SYSAUX</td><td class='awrnc'>WRH$_SYSSTAT_PK</td><td class='awrnc'>WRH$_SYSSTAT_3393773525_131</td><td class='awrnc'>INDEX PARTITION</td><td align="right" class='awrnc'>74304</td><td align="right" class='awrnc'>74304</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>50.00</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#630">Back to I/O Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="12083"></a>
<h3 class="awr">Library Cache Activity</h3>
<ul>
<li class="awr"> Summarized for all instances in the report </li>
<li class="awr"> &quot;Pct Misses&quot;  should be very low  </li>
</ul>
<table border="0" class="tdiff" summary="Library Cache Activity. . Summarized for all instances in the report. &quot;Pct Misses&quot; should be very low "><tr><th class="awrbg" scope="col">Namespace</th><th class="awrbg" scope="col">Get Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Pin Requests</th><th class="awrbg" scope="col">Pct Miss</th><th class="awrbg" scope="col">Reloads</th><th class="awrbg" scope="col">Invali- dations</th><th class="awrbg" scope="col">GES Lock Requests</th><th class="awrbg" scope="col">GES Pin Requests</th><th class="awrbg" scope="col">GES Pin Releases</th><th class="awrbg" scope="col">GES Inval Requests</th><th class="awrbg" scope="col">GES Invali- dations</th></tr>
<tr><td scope="row" class='awrc'>ACCOUNT_STATUS</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>AUDIT POLICY</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>BODY</td><td align="right" class='awrc'>71</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>286</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>265</td><td align="right" class='awrc'>265</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>CLUSTER</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>DBLINK</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>4</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>EDITION</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>8</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>4</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>INDEX</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>17</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>QUEUE</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SCHEMA</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA</td><td align="right" class='awrnc'>808</td><td align="right" class='awrnc'>3.96</td><td align="right" class='awrnc'>1,685,366</td><td align="right" class='awrnc'>-0.08</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>SQL AREA BUILD</td><td align="right" class='awrc'>22</td><td align="right" class='awrc'>72.73</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>SQL AREA STATS</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>88.00</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>88.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TABLE/PROCEDURE</td><td align="right" class='awrc'>94</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>1,876</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>261</td><td align="right" class='awrc'>1,543</td><td align="right" class='awrc'>1,543</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
<tr><td scope="row" class='awrnc'>TRANSFORMATION</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>61</td><td align="right" class='awrnc'>0</td><td align="right" class='awrnc'>0</td></tr>
<tr><td scope="row" class='awrc'>TRIGGER</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>0</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="633"></a>
<h2 class="awr">
Memory Statistics
</h2>
<ul>
<li class="awr"><a class="awr" href="#12074">PGA Aggregate Target Statistics</a></li>
<li class="awr"><a class="awr" href="#12075">Process Memory Summary</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12074"></a>
<h3 class="awr">PGA Aggregate Target Statistics</h3>
<ul>
<li class="awr"> all stats are reported in MegaBytes</li>
</ul>
<table border="0" class="tdiff" summary="PGA Aggregate Target Statistics. . all stats are reported in MegaBytes"><tr>
<td>&#160;</td><th class="awrbg" colspan=" 2" id="PGAAggrTarget">PGA Aggr Target</th>
<th class="awrbg" colspan=" 2" id="AutoPGATarget">Auto PGA Target</th>
<th class="awrbg" colspan=" 2" id="PGAMemAlloc">PGA Mem Alloc</th>
<th class="awrbg" colspan=" 2" id="AutoWorkareas">Auto Workareas</th>
<th class="awrbg" colspan=" 2" id="ManualWorkarea">Manual Workarea</th>
<th class="awrbg" colspan=" 2" id="GlobalMemBound">Global Mem Bound</th>
</tr><tr>
<th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th><th class="awrbg" scope="col" id="Begin">Begin</th><th class="awrbg" scope="col" id="End">End</th></tr>
<tr><td align="right" scope="row" class='awrc'>1</td><td align="right" headers="PGAAggrTarget Begin" class='awrclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrclb'>2,160.18</td><td align="right" headers="AutoPGATarget End" class='awrc'>2,245.78</td><td align="right" headers="PGAMemAlloc Begin" class='awrclb'>1,020.01</td><td align="right" headers="PGAMemAlloc End" class='awrc'>909.71</td><td align="right" headers="AutoWorkareas Begin" class='awrclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrcrb'>321.49</td></tr>
<tr><td align="right" scope="row" class='awrnc'>2</td><td align="right" headers="PGAAggrTarget Begin" class='awrnclb'>3,215.00</td><td align="right" headers="PGAAggrTarget End" class='awrnc'>3,215.00</td><td align="right" headers="AutoPGATarget Begin" class='awrnclb'>1,881.18</td><td align="right" headers="AutoPGATarget End" class='awrnc'>1,972.55</td><td align="right" headers="PGAMemAlloc Begin" class='awrnclb'>1,370.54</td><td align="right" headers="PGAMemAlloc End" class='awrnc'>1,250.54</td><td align="right" headers="AutoWorkareas Begin" class='awrnclb'>0.00</td><td align="right" headers="AutoWorkareas End" class='awrnc'>0.00</td><td align="right" headers="ManualWorkarea Begin" class='awrnclb'>0.00</td><td align="right" headers="ManualWorkarea End" class='awrnc'>0.00</td><td align="right" headers="GlobalMemBound Begin" class='awrnclb'>321.49</td><td align="right" headers="GlobalMemBound End" class='awrncrb'>321.49</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12075"></a>
<h3 class="awr">Process Memory Summary</h3>
<ul>
<li class="awr"> B: Begin Snap	 E: End Snap I#: Instance number  </li>
<li class="awr"> Max Alloc is Maximum PGA allocation size at snapshot time </li>
<li class="awr"> Hist Max Alloc is the Historical Max Allocation for still-connected processes </li>
<li class="awr"> ordered by instance, Begin/End snapshot, Alloc (MB) </li>
</ul>
<table border="0" class="tdiff" summary="Process Memory Summary. . B: Begin Snap E: End Snap I#: Instance number . Max Alloc is Maximum PGA allocation size at snapshot time. Hist Max Alloc is the Historical Max Allocation for still-connected processes. ordered by instance, Begin/End snapshot, Alloc (MB) "><tr><th class="awrbg" scope="col">I#</th><th class="awrnobg" scope="col"></th><th class="awrbg" scope="col">Category</th><th class="awrbg" scope="col">Alloc (MB)</th><th class="awrbg" scope="col">Used (MB)</th><th class="awrbg" scope="col">Avg Alloc (MB)</th><th class="awrbg" scope="col">Std Dev Alloc (MB)</th><th class="awrbg" scope="col">Max Alloc (MB)</th><th class="awrbg" scope="col">Hist Max Alloc (MB)</th><th class="awrbg" scope="col">Num Proc</th><th class="awrbg" scope="col">Num Alloc</th></tr>
<tr><td align="right" class='awrc'>1</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>144.56</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>4.25</td><td align="right" class='awrc'>7.84</td><td align="right" class='awrc'>32</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>34</td><td align="right" class='awrc'>34</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>595.67</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>4.65</td><td align="right" class='awrnc'>6.75</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>128</td><td align="right" class='awrnc'>128</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>14.85</td><td align="right" class='awrc'>14.12</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.29</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>109</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>8.97</td><td align="right" class='awrnc'>7.60</td><td align="right" class='awrnc'>0.15</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>11</td><td align="right" class='awrnc'>60</td><td align="right" class='awrnc'>46</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>764.06</td><td align="right" class='awrc'>21.72</td><td align="right" class='awrc'>9.19</td><td align="right" class='awrc'>15.20</td><td align="right" class='awrc'>73</td><td align="right" class='awrc'>52</td><td align="right" class='awrc'>332</td><td align="right" class='awrc'>317</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>139.50</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>4.98</td><td align="right" class='awrnc'>8.53</td><td align="right" class='awrnc'>35</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>28</td><td align="right" class='awrnc'>28</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>506.99</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>4.65</td><td align="right" class='awrc'>7.22</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>39</td><td align="right" class='awrc'>109</td><td align="right" class='awrc'>109</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>5.87</td><td align="right" class='awrnc'>5.29</td><td align="right" class='awrnc'>0.06</td><td align="right" class='awrnc'>0.27</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>91</td><td align="right" class='awrnc'>90</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">1</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>1.39</td><td align="right" class='awrc'>1.09</td><td align="right" class='awrc'>0.03</td><td align="right" class='awrc'>0.12</td><td align="right" class='awrc'>1</td><td align="right" class='awrc'>11</td><td align="right" class='awrc'>41</td><td align="right" class='awrc'>26</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">1</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>653.76</td><td align="right" class='awrnc'>6.38</td><td align="right" class='awrnc'>9.73</td><td align="right" class='awrnc'>16.15</td><td align="right" class='awrnc'>76</td><td align="right" class='awrnc'>53</td><td align="right" class='awrnc'>269</td><td align="right" class='awrnc'>253</td></tr>
<tr><td align="right" class='awrc'>2</td><td class='awrc'>B</td><td class='awrc'>Freeable</td><td align="right" class='awrc'>167.75</td><td align="right" class='awrc'>0.00</td><td align="right" class='awrc'>2.89</td><td align="right" class='awrc'>5.68</td><td align="right" class='awrc'>25</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>58</td><td align="right" class='awrc'>58</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>Other</td><td align="right" class='awrnc'>662.43</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>5.06</td><td align="right" class='awrnc'>6.61</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>38</td><td align="right" class='awrnc'>131</td><td align="right" class='awrnc'>131</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>PL/SQL</td><td align="right" class='awrc'>17.53</td><td align="right" class='awrc'>16.74</td><td align="right" class='awrc'>0.14</td><td align="right" class='awrc'>0.31</td><td align="right" class='awrc'>2</td><td align="right" class='awrc'>3</td><td align="right" class='awrc'>129</td><td align="right" class='awrc'>112</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">B</div></td><td class='awrnc'>SQL</td><td align="right" class='awrnc'>10.88</td><td align="right" class='awrnc'>9.32</td><td align="right" class='awrnc'>0.13</td><td align="right" class='awrnc'>0.32</td><td align="right" class='awrnc'>1</td><td align="right" class='awrnc'>10</td><td align="right" class='awrnc'>81</td><td align="right" class='awrnc'>49</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">B</div></td><td class='awrc'>Total</td><td align="right" class='awrc'>858.58</td><td align="right" class='awrc'>26.06</td><td align="right" class='awrc'>8.22</td><td align="right" class='awrc'>12.92</td><td align="right" class='awrc'>66</td><td align="right" class='awrc'>51</td><td align="right" class='awrc'>399</td><td align="right" class='awrc'>350</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'>E</td><td class='awrnc'>Freeable</td><td align="right" class='awrnc'>152.19</td><td align="right" class='awrnc'>0.00</td><td align="right" class='awrnc'>3.11</td><td align="right" class='awrnc'>5.85</td><td align="right" class='awrnc'>25</td><td align="right" class='awrnc'>&#160;</td><td align="right" class='awrnc'>49</td><td align="right" class='awrnc'>49</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>Other</td><td align="right" class='awrc'>576.92</td><td align="right" class='awrc'>&#160;</td><td align="right" class='awrc'>5.24</td><td align="right" class='awrc'>7.55</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>45</td><td align="right" class='awrc'>110</td><td align="right" class='awrc'>110</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>PL/SQL</td><td align="right" class='awrnc'>8.25</td><td align="right" class='awrnc'>7.38</td><td align="right" class='awrnc'>0.08</td><td align="right" class='awrnc'>0.33</td><td align="right" class='awrnc'>2</td><td align="right" class='awrnc'>3</td><td align="right" class='awrnc'>108</td><td align="right" class='awrnc'>91</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">2</div></td><td class='awrc'><div class="hidden">E</div></td><td class='awrc'>SQL</td><td align="right" class='awrc'>1.23</td><td align="right" class='awrc'>0.63</td><td align="right" class='awrc'>0.02</td><td align="right" class='awrc'>0.07</td><td align="right" class='awrc'>0</td><td align="right" class='awrc'>10</td><td align="right" class='awrc'>59</td><td align="right" class='awrc'>28</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">2</div></td><td class='awrnc'><div class="hidden">E</div></td><td class='awrnc'>Total</td><td align="right" class='awrnc'>738.58</td><td align="right" class='awrnc'>8.01</td><td align="right" class='awrnc'>8.45</td><td align="right" class='awrnc'>13.79</td><td align="right" class='awrnc'>73</td><td align="right" class='awrnc'>59</td><td align="right" class='awrnc'>326</td><td align="right" class='awrnc'>278</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#633">Back to Memory Statistics</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="638"></a>
<h2 class="awr">
Supplemental Information
</h2>
<ul>
<li class="awr"><a class="awr" href="#12080">init.ora Parameters</a></li>
<li class="awr"><a class="awr" href="#12084">init.ora Multi-valued Parameters</a></li>
<li class="awr"><a class="awr" href="#99997">Complete List of SQL Text</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12080"></a>
<h3 class="awr">init.ora Parameters</h3>
<ul>
<li class="awr"> '*' indicates same value across all instances</li>
</ul>
<table border="0" class="tdiff" summary="This table displays values for init.ora parameters"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td scope="row" class='awrc'>_ipddb_enable</td><td class='awrc'>*</td><td class='awrc'>TRUE</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>audit_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>/u01/app/oracle/admin/p30db/adump</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>audit_trail</td><td class='awrc'>*</td><td class='awrc'>DB</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>cluster_database</td><td class='awrnc'>*</td><td class='awrnc'>TRUE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>compatible</td><td class='awrc'>*</td><td class='awrc'>19.0.0</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>control_files</td><td class='awrnc'>*</td><td class='awrnc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581,  +FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_block_size</td><td class='awrc'>*</td><td class='awrc'>8192</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_create_file_dest</td><td class='awrnc'>*</td><td class='awrnc'>+DATA</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_domain</td><td class='awrc'>*</td><td class='awrc'>example.com</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_name</td><td class='awrnc'>*</td><td class='awrnc'>p30db</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>db_recovery_file_dest</td><td class='awrc'>*</td><td class='awrc'>+FRA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>db_recovery_file_dest_size</td><td class='awrnc'>*</td><td class='awrnc'>274877906944</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>diagnostic_dest</td><td class='awrc'>*</td><td class='awrc'>/u01/app/oracle</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>dispatchers</td><td class='awrnc'>*</td><td class='awrnc'>(PROTOCOL=TCP) (SERVICE=p30dbXDB)</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>instance_number</td><td class='awrc'>1</td><td class='awrc'>1</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'><div class="hidden">instance_number</div></td><td class='awrnc'>2</td><td class='awrnc'>2</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>listener_networks</td><td class='awrc'>*</td><td class='awrc'></td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>local_listener</td><td class='awrnc'>1</td><td class='awrnc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.11)(PORT=1522))</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">local_listener</div></td><td class='awrc'>2</td><td class='awrc'>(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.12)(PORT=1522))</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>nls_language</td><td class='awrnc'>*</td><td class='awrnc'>AMERICAN</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>nls_territory</td><td class='awrc'>*</td><td class='awrc'>AMERICA</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>open_cursors</td><td class='awrnc'>*</td><td class='awrnc'>300</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>pga_aggregate_target</td><td class='awrc'>*</td><td class='awrc'>3371171840</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>processes</td><td class='awrnc'>*</td><td class='awrnc'>640</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>remote_listener</td><td class='awrc'>*</td><td class='awrc'>mcracpoc-scan.example.com:1521</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>remote_login_passwordfile</td><td class='awrnc'>*</td><td class='awrnc'>EXCLUSIVE</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'>sga_target</td><td class='awrc'>*</td><td class='awrc'>10133438464</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>thread</td><td class='awrnc'>1</td><td class='awrnc'>1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">thread</div></td><td class='awrc'>2</td><td class='awrc'>2</td><td class='awrc'></td></tr>
<tr><td scope="row" class='awrnc'>undo_tablespace</td><td class='awrnc'>1</td><td class='awrnc'>UNDOTBS1</td><td class='awrnc'></td></tr>
<tr><td scope="row" class='awrc'><div class="hidden">undo_tablespace</div></td><td class='awrc'>2</td><td class='awrc'>UNDOTBS2</td><td class='awrc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="12084"></a>
<h3 class="awr">init.ora Multi-valued Parameters</h3>
<ul>
<li class="awr"> This section only displays parameters that have more one value </li>
<li class="awr"> '*' indicates same value across all instances </li>
<li class="awr"> '(NULL)' indicates that the  parameter value was not set </li>
<li class="awr"> A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot</li>
</ul>
<table border="0" class="tdiff" summary="init.ora Multi-valued Parameters. . This section only displays parameters that have more one value. '*' indicates same value across all instances. '(NULL)' indicates that the parameter value was not set. A blank value in the End Snapshot indicates the value is the same as the Begin Snapshot"><tr><th class="awrbg" scope="col">Parameter Name</th><th class="awrbg" scope="col">I#</th><th class="awrbg" scope="col">Begin value</th><th class="awrbg" scope="col">End value (if different)</th></tr>
<tr><td class='awrc'>control_files</td><td class='awrc'>*</td><td class='awrc'>+DATA/P30DB/CONTROLFILE/current.263.1031594581</td><td class='awrc'></td></tr>
<tr><td class='awrnc'><div class="hidden">control_files</div></td><td class='awrnc'>*</td><td class='awrnc'>+FRA/P30DB/CONTROLFILE/current.257.1031594583</td><td class='awrnc'></td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="99997"></a>
<p />
<h3 class="awr">Complete List of SQL Text</h3><p />
<table border="0" class="tdiff" summary="This table displays the text of the SQL statements which have been
      referred to in the report">
<tr><th class="awrbg" scope="col">SQL Id</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="0hnb5g8vhm4u9"></a>0hnb5g8vhm4u9</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '2';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt P
LS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_
schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DB
MS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEM
A = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-----------------------------------------------------------------------------------------------------------
-----------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
:= TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

   	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ran
dom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed.
 Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="0rjvf5n1k4aba"></a>0rjvf5n1k4aba</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '26';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="24djtk7r8fz33"></a>24djtk7r8fz33</td><td class='awrc'><pre_sqltext class="awr">update svcobj_access$ set accesses = :5,  inc_no = :6 where name = :1 AND pdb = :2 AND tsn = :3 AND objid = :4</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="26ka4yp1faxn2"></a>26ka4yp1faxn2</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '27';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="30ha31267a7s2"></a>30ha31267a7s2</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '37';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="35dumc2tpr9dv"></a>35dumc2tpr9dv</td><td class='awrnc'><pre_sqltext class="awr">UPDATE CF1 SET C2 = :B3 ,  C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 )) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5mrhuphq8yfw1"></a>5mrhuphq8yfw1</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '16';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="5q1jyzmr30cf9"></a>5q1jyzmr30cf9</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '15';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="5wf99mx0r39xn"></a>5wf99mx0r39xn</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '3';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt P
LS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_
schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DB
MS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEM
A = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-----------------------------------------------------------------------------------------------------------
-----------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
:= TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

   	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ran
dom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed.
 Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6hgs8vfsdc56c"></a>6hgs8vfsdc56c</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '11';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="6n2qqv1brfhpp"></a>6n2qqv1brfhpp</td><td class='awrc'><pre_sqltext class="awr">select ind.type#,	ind.property,	 base_obj.obj#,  base_owner.name,   base_obj.name  from sys.ind$ ind,  sys.user$ base_owner,  sys.obj$	base_obj  where ind.obj#	  = :oid    and ind.dataobj#	  = :doid    and ind.bo#	 = base_obj.obj#    and base_obj.owner# = base_owner.user#</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="6x8682kb2y8vd"></a>6x8682kb2y8vd</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '20';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="71v63sn4bfskh"></a>71v63sn4bfskh</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '7';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt P
LS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home_
schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := DB
MS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHEM
A = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

-----------------------------------------------------------------------------------------------------------
-----------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
:= TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

   	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ran
dom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed.
 Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="72r567f4w1r2z"></a>72r567f4w1r2z</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '17';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="7bd84p4z76t66"></a>7bd84p4z76t66</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '30';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="7m9rphfj2sxqy"></a>7m9rphfj2sxqy</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '34';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="9babjv8yq8ru3"></a>9babjv8yq8ru3</td><td class='awrc'><pre_sqltext class="awr">BEGIN DBMS_OUTPUT.GET_LINES(:LINES,  :NUMLINES); END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="amnkmrsjh10nv"></a>amnkmrsjh10nv</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '28';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="bhdvtsvjhgvrh"></a>bhdvtsvjhgvrh</td><td class='awrc'><pre_sqltext class="awr">SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND (CUSTID &lt; :B1 )</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="brqrryv4mja36"></a>brqrryv4mja36</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '1';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
 PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_hom
e_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCH
EMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

---------------------------------------------------------------------------------------------------------
-------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_updat
e := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

     	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_r
andom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execute
d. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If thi
s is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="cjr4y9wb6w69d"></a>cjr4y9wb6w69d</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '14';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="f7xnvp44nukp7"></a>f7xnvp44nukp7</td><td class='awrnc'><pre_sqltext class="awr">insert into  wrm$_snapshot_details  (snap_id, dbid, instance_number, table_id, begin_time, end_time, step_id)	values (:snap_id, :dbid, :instance_number, :bind1, :bind2, :bind3, :step_id)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="f80h0xb1qvbsk"></a>f80h0xb1qvbsk</td><td class='awrc'><pre_sqltext class="awr">SELECT sys.wri$_adv_seq_msggroup.nextval FROM dual</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fn5s5p6hr6702"></a>fn5s5p6hr6702</td><td class='awrnc'><pre_sqltext class="awr">INSERT INTO wri$_adv_message_groups (task_id, id, seq, message#, fac, hdr, lm, nl, p1, p2, p3, p4, p5) VALUES (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13)</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="fs4p95w7yg25b"></a>fs4p95w7yg25b</td><td class='awrc'><pre_sqltext class="awr">select pob.parttype from sys.tabpart$ tp,	sys.partobj$ pob  where tp.bo# = pob.obj# and tp.obj# = :oid</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="fvmjqn5q18rmh"></a>fvmjqn5q18rmh</td><td class='awrnc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '29';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cn
t PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_ho
me_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time :=
 DBMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SC
HEMA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

--------------------------------------------------------------------------------------------------------
--------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_upda
te := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

      	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_
random_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been execut
ed. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If th
is is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="gdjc35y9zsuzm"></a>gdjc35y9zsuzm</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '40';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
<tr><td scope="row" class='awrnc'><a class="awr" name="gjaap3w3qbf8c"></a>gjaap3w3qbf8c</td><td class='awrnc'><pre_sqltext class="awr">select count(*) from ilmobj$ where rownum = 1</pre_sqltext></td></tr>
<tr><td scope="row" class='awrc'><a class="awr" name="gx190gu1265d2"></a>gx190gu1265d2</td><td class='awrc'><pre_sqltext class="awr">DECLARE
v_default_schema_number PLS_INTEGER := '18';
v_update_pct PLS_INTEGER := '15';
v_max_loop_iterations PLS_INTEGER := '0';
v_seconds_to_run PLS_INTEGER := '600';
v_scale PLS_INTEGER := '1048576';
v_work_unit PLS_INTEGER := '4' ;
v_redo_stress  VARCHAR2(12) := 'LITE';
v_hot_schema_modulus PLS_INTEGER := '0';
v_do_hotspot   VARCHAR(7) := 'FALSE';
v_hotspot_mb  NUMBER := '8';
v_hotspot_offset_mb NUMBER := '16';
v_hotspot_modulus  PLS_INTEGER := '3';

v_sleep_modulus PLS_INTEGER := '0';
v_sleep_min NUMBER := '.1';
v_sleep_max NUMBER := '.5';
v_scan_query_pct PLS_INTEGER := '0';
v_obfuscate VARCHAR(5)	:= 'FALSE';


v_hotspot_base NUMBER(15) := ( v_hotspot_offset_mb * 1024 * 1024 ) / 8192 ;
v_hotspot_blocks NUMBER(15) := ( v_hotspot_mb * 1024 * 1024 ) / 8192 ;

v_num_tmp NUMBER := 0;

v_loop_cnt PLS_INTEGER := 0;
v_rowcnt PLS_INTEGER := 0;
v_updates_cnt
PLS_INTEGER := 0;
v_selects_cnt PLS_INTEGER := 0;

v_random_access_queries_cnt PLS_INTEGER := 0;
v_scan_queries_cnt PLS_INTEGER := 0;

v_do_scan_query BOOLEAN :=FALSE;
v_scan_query_quota  BOOLEAN := FALSE;
v_scan_workload_only BOOLEAN := FALSE;
v_random_workload_only BOOLEAN := FALSE;


v_random_block PLS_INTEGER := 1;
v_tmp PLS_INTEGER;
v_now PLS_INTEGER;
v_brick_wall PLS_INTEGER;

v_begin_time PLS_INTEGER;
v_end_time PLS_INTEGER;
v_total_time PLS_INTEGER;
v_begin_cpu_tm PLS_INTEGER;
v_end_cpu_tm PLS_INTEGER;
v_total_cpu_tm PLS_INTEGER;

v_do_sleeps BOOLEAN := FALSE;
v_loop_control BOOLEAN := FALSE;
v_update_quota BOOLEAN := FALSE;
v_select_only_workload BOOLEAN := FALSE;
v_update_only_workload BOOLEAN := FALSE;
v_do_update BOOLEAN := FALSE;
v_do_hot_schema BOOLEAN := FALSE;
v_stop_immediate BOOLEAN := FALSE;
v_sharing_schema BOOLEAN := FALSE;
v_seed VARCHAR2(128);
v_home_schema_str VARCHAR2(80);
v_scratch VARCHAR2(200) ;

v_cpu_pct NUMBER(6, 3);
v_my_serial NUMBER(16);

BEGIN

v_home
_schema_str := 'ALTER SESSION SET CURRENT_SCHEMA = user' || v_default_schema_number ;
EXECUTE IMMEDIATE v_home_schema_str;


IF ( v_hot_schema_modulus != 0 ) THEN
	v_do_hot_schema := TRUE;
END IF;

IF ( v_sleep_modulus != 0 )	  THEN
	v_do_sleeps := TRUE;
END IF;

IF ( v_max_loop_iterations &gt; 0 )  THEN
	v_loop_control := TRUE ;
END IF;

IF ( v_update_pct = 0 ) 	  THEN
	v_select_only_workload := TRUE;
END IF;

IF ( v_update_pct = 100 )	  THEN
	v_update_only_workload := TRUE;
END IF;

IF ( v_scan_query_pct = 0 ) 	THEN
	v_random_workload_only := TRUE;
END IF;

IF ( v_scan_query_pct = 100 ) 	THEN
	v_scan_workload_only := TRUE;
END IF;

v_seconds_to_run := v_seconds_to_run * 100 ;

SELECT ((10000000000 * (SID + SERIAL#)) + 1000000000000) INTO v_my_serial from v$session WHERE sid = ( select sys_context('userenv', 'sid') from dual);

-- v_seed := TO_CHAR(v_my_serial) || TO_CHAR(SYSTIMESTAMP, 'YYYYDDMMHH24MISSFFFF');
-- DBMS_RANDOM.seed (val =&gt; v_seed);

v_begin_time := D
BMS_UTILITY.GET_TIME();
v_now := v_begin_time ;
v_brick_wall := v_now + v_seconds_to_run ;
v_begin_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

----------------------------------------------------------------------------------------------------------------------
-- The following WHILE loop is the master work loop control
----------------------------------------------------------------------------------------------------------------------
WHILE ( v_now &lt; v_brick_wall AND v_stop_immediate != TRUE )	LOOP

	IF ( v_do_sleeps = TRUE ) THEN --  This section deals with THINK_TIME
		IF ( MOD( v_random_block,  v_sleep_modulus ) = 0 ) THEN
			v_num_tmp := ROUND (DBMS_RANDOM.VALUE(v_sleep_min,  v_sleep_max) ,  2 );
			-- dbms_output.put_line( 'step 1 ' || v_num_tmp  );
			DBMS_LOCK.SLEEP(v_num_tmp);
		END IF;
	END IF;

	IF ( v_do_hot_schema = TRUE) THEN -- This section deals with Hot Schema
		IF ( MOD(v_loop_cnt,  v_hot_schema_modulus) = 0 ) THEN
			EXECUTE IMMEDIATE 'ALTER SESSION SET CURRENT_SCHE
MA = user1';
			v_sharing_schema := TRUE ;
		ELSE
			IF ( v_sharing_schema = TRUE ) THEN
				EXECUTE IMMEDIATE v_home_schema_str;
				v_sharing_schema := FALSE;
			END IF;
		END IF;
	END IF;

	-- Choose the random block. The v_do_hotspot handler that follows can override.
	v_random_block := DBMS_RANDOM.VALUE(v_work_unit + 1,  v_scale - v_work_unit);

	IF ( v_do_hotspot = 'TRUE' ) AND ( MOD(v_loop_cnt,  v_hotspot_modulus ) = 0 ) THEN -- This section deals with Hot Spot
		-- v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base	+ v_work_unit + 1,  v_hotspot_base + v_hotspot_blocks) ;
		v_random_block := DBMS_RANDOM.VALUE( v_hotspot_base + 1,  v_hotspot_base + (v_hotspot_blocks - v_work_unit)) ;
		-- dbms_output.put_line( 'v_loop_cnt ' || v_loop_cnt || ' base ' || (v_hotspot_base  + v_work_unit + 1)  || ' zone ' || v_hotspot_blocks ||  '	Random block ' || v_random_block  );
	END IF;

----------------------------------------------------------------------------------------------------------
------------
-- The following section governs what the SQL execution will be (UPDATE or SELECT)
----------------------------------------------------------------------------------------------------------------------

	IF  ( v_select_only_workload = TRUE ) THEN
		-- handle case where user specified zero pct updates (a SELECT-only workload)
		v_do_update := FALSE;
		v_update_quota := TRUE ;
	ELSE
		IF ( v_update_only_workload = TRUE ) THEN
			-- handle case where user specified 100% updates
			v_do_update := TRUE;
			v_update_quota := FALSE;
		ELSE
			-- In this section we know we are not 100% SELECT,  nor 100% UPDATES
			-- Work out whether this loop iteration is a SELECT or UPDATE here:
			IF ( v_update_quota = FALSE ) THEN
				-- Handle case where user has set UPDATE_PCT to a valid value
				--
				-- We are doing updates during this run and quota has not been met yet
				-- We still vacillate until update quota has been met

				IF ( MOD(v_random_block,  2) = 0 ) THEN
					v_do_update
 := TRUE;
				ELSE
					v_do_update := FALSE;
				END IF;
			ELSE
				-- UPDATE quota has been filled,  force drain some SELECTs
				v_do_update := FALSE;
			END IF;
		END IF;
	END IF;

----------------------------------------------------------------------------------------------------------------------
-- The type of SQL is now determined...execute it in the following section
----------------------------------------------------------------------------------------------------------------------

	IF ( v_do_update != TRUE ) THEN
		--
		-- Do a SELECT statement
		-- Work out scan or random
		IF  ( v_random_workload_only = TRUE ) THEN
			-- handle case where user specified zero pct scan workload (SCAN_PCT = 0)
			v_do_scan_query := FALSE;
			v_scan_query_quota := TRUE ;
		ELSE
			IF ( v_scan_workload_only = TRUE ) THEN
				-- handle case where user specified 100% scan workload (SCAN_PCT = 100)

    	v_do_scan_query := TRUE;
				v_scan_query_quota := FALSE;
			ELSE
				IF ( v_scan_query_quota = FALSE ) THEN
					-- Handle case where user specified valid,  non-zero,  SCAN_PCT
					-- IF ( MOD(v_random_block,  2) = 0 ) THEN
					IF ( MOD(v_loop_cnt,  2) = 0 ) THEN
						v_do_scan_query := TRUE;
					ELSE
						v_do_scan_query := FALSE;
					END IF;
				ELSE
					-- Scan quota has been filled,	force drain some random access SELECTS
					v_do_scan_query := FALSE;
				END IF;
			END IF;
		END IF;


		IF ( v_do_scan_query != TRUE ) THEN
			SELECT COUNT(c2) INTO v_rowcnt
			FROM cf1
			WHERE ( custid &gt; ( v_ra
ndom_block - v_work_unit ) ) AND  (custid &lt; v_random_block);

			v_random_access_queries_cnt := v_random_access_queries_cnt + 1;
		ELSE
			SELECT COUNT(c2) INTO v_rowcnt FROM cf2;

			v_scan_queries_cnt := v_scan_queries_cnt + 1;

			IF ( v_scan_queries_cnt &gt;= v_scan_query_pct ) THEN
				v_scan_query_quota := TRUE;
			END IF;
		END IF;

		v_selects_cnt := v_selects_cnt + 1;   --increment the number of total selects
	ELSE
		--
		-- Do an UPDATE statement
		--

		v_my_serial := v_my_serial + v_loop_cnt ;

		user1.slobupdate( v_random_block,  v_work_unit,  v_redo_stress,  v_my_serial,  v_obfuscate);
		--
		-- Increment count of UPDATES and set UPDATE quota flag if needed
		--
		v_updates_cnt := v_updates_cnt + 1;

		IF ( v_updates_cnt &gt;= v_update_pct ) THEN
			v_update_quota := TRUE;
		END IF;
	END IF ;
----------------------------------------------------------------------------------------------------------------------
--  At this point SQL has been executed
. Finish this loop iteration with some housekeeping.
----------------------------------------------------------------------------------------------------------------------

	IF ( v_select_only_workload != TRUE ) AND (( v_updates_cnt + v_selects_cnt ) &gt;=  100 ) THEN
		--
		-- Not a SELECT-only workload,	and the global quota (UPDATES to SELECTS) is filled,
		-- so reset flags and counters before continuing
		--
		v_update_quota := FALSE;
		v_updates_cnt := 0;
		v_selects_cnt := 0;
	END IF;

	IF ( v_random_workload_only != TRUE ) AND ( ( v_scan_queries_cnt + v_random_access_queries_cnt ) &gt;=	100 ) THEN
		-- Not a random-only workload and global quota (RANDOM vs SCAN) is filled,
		-- so reset flags and counters
		v_scan_query_quota := FALSE;
		v_scan_queries_cnt := 0;
		v_random_access_queries_cnt := 0;
	END IF;

	v_loop_cnt := v_loop_cnt + 1 ;
	v_now := DBMS_UTILITY.GET_TIME();

	IF ( v_loop_control = TRUE ) AND  ( v_loop_cnt &gt;= v_max_loop_iterations ) THEN
		-- If this
 is a fixed-iteration count test cycle and we've hit the number of
		-- iterations then set exit flag
		v_stop_immediate := TRUE ;
	END IF;
END LOOP;

v_end_time := v_now ;
v_now := DBMS_UTILITY.GET_TIME();
v_end_cpu_tm := DBMS_UTILITY.GET_CPU_TIME();

v_total_time := v_end_time - v_begin_time ;
v_total_cpu_tm := v_end_cpu_tm - v_begin_cpu_tm  ;
v_cpu_pct := ( v_total_cpu_tm / v_total_time ) * 100 ;
v_scratch := v_default_schema_number || '|' || v_total_time || '|' || v_total_cpu_tm || '|' || v_cpu_pct ;

END;</pre_sqltext></td></tr>
</table>
<p />
<a class="awr" href="#638">Back to Supplemental Information</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="43"></a>
<h2 class="awr">
Active Session History(ASH) Report
</h2>
<ul>
<li class="awr"><a class="awr" href="#9981">Top SQL with Top Events</a></li>
<li class="awr"><a class="awr" href="#9980">Top SQL with Top Row Sources</a></li>
<li class="awr"><a class="awr" href="#9984">Top Sessions</a></li>
<li class="awr"><a class="awr" href="#9983">Top Blocking Sessions</a></li>
<li class="awr"><a class="awr" href="#9982">Top PL/SQL Procedures</a></li>
<li class="awr"><a class="awr" href="#9979">Top Events</a></li>
<li class="awr"><a class="awr" href="#9985">Top Event P1/P2/P3 Values</a></li>
<li class="awr"><a class="awr" href="#9978">Top DB Objects</a></li>
<li class="awr"><a class="awr" href="#9977">Activity Over Time</a></li>
</ul>
<a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9981"></a>
<h3 class="awr">Top SQL with Top Events</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top events by DB Time	 for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event that the SQL is	   waiting on. </li>
<li class="awr"> % Row Source is the percentage of DB Time due to the row source for the     SQL waiting on the event. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top SQL by Top Wait Events"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Top Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>1944</td><td align="right" class='awrc'>77.18</td>
<td class='awrc'>db file sequential read</td><td align="right" class='awrc'>72.06</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>72.06</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrnc'><div class="hidden">1497866750</div></td><td align="right" class='awrnc'><div class="hidden">1944</div></td><td align="right" class='awrnc'><div class="hidden">77.18253968253968253968253968253968253968</div></td>
<td class='awrnc'>gc cr grant 2-way</td><td align="right" class='awrnc'>2.74</td><td class='awrnc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrnc'>2.74</td>
<td class='awrnc'></td></tr>
<tr><td align="right" class='awrc'><div class="hidden">bhdvtsvjhgvrh</div></td><td align="right" class='awrc'><div class="hidden">1497866750</div></td><td align="right" class='awrc'><div class="hidden">1944</div></td><td align="right" class='awrc'><div class="hidden">77.18253968253968253968253968253968253968</div></td>
<td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>2.26</td><td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>1.71</td>
<td class='awrc'></td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>360</td><td align="right" class='awrnc'>14.29</td>
<td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>13.02</td><td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>13.02</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9980"></a>
<h3 class="awr">Top SQL with Top Row Sources</h3>
<ul>
<li class="awr"> Top SQL statements by DB Time along with the top row sources by DB Time    for those SQLs. </li>
<li class="awr"> % Activity is the percentage of DB Time due to the SQL. </li>
<li class="awr"> % Row Source is the percentage of DB Time spent on the row source by	   that SQL. </li>
<li class="awr"> % Event is the percentage of DB Time spent on the event by the      SQL executing the row source. </li>
<li class="awr"> Executions is the number of executions of the SQL that were sampled in ASH.</li>
</ul>
<table border="0" class="tdiff" summary="This table display the Top SQLs with Top Row Sources"><tr><th class="awrbg" scope="col">SQL ID</th><th class="awrbg" scope="col">Plan Hash</th><th class="awrbg" scope="col">Executions</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Row Source</th><th class="awrbg" scope="col">% Row Source</th><th class="awrbg" scope="col">Top Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">SQL Text</th></tr>
<tr><td align="right" class='awrc'><a class="awr" href="#bhdvtsvjhgvrh">bhdvtsvjhgvrh</a></td><td align="right" class='awrc'>1497866750</td><td align="right" class='awrc'>1944</td><td align="right" class='awrc'>77.18</td>
<td class='awrc'>TABLE ACCESS - BY INDEX ROWID BATCHED</td><td align="right" class='awrc'>76.59</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>72.06</td>
<td class='awrc'>SELECT COUNT(C2) FROM CF1 WHER...</td></tr>
<tr><td align="right" class='awrnc'><a class="awr" href="#35dumc2tpr9dv">35dumc2tpr9dv</a></td><td align="right" class='awrnc'>203653710</td><td align="right" class='awrnc'>360</td><td align="right" class='awrnc'>14.29</td>
<td class='awrnc'>UPDATE</td><td align="right" class='awrnc'>14.25</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>13.02</td>
<td class='awrnc'>UPDATE CF1 SET C2 = :B3 , C20 ...</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9984"></a>
<h3 class="awr">Top Sessions</h3>
<ul>
<li class="awr"> '# Samples Active' shows the number of ASH samples in which the session	was found waiting for that particular event. The percentage shown	in this column is calculated with respect to wall clock time	   and not total database activity. </li>
<li class="awr"> 'XIDs' shows the number of distinct transaction IDs sampled in ASH	   when the session was waiting for that particular event</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top session by wait event"><tr><th class="awrbg" scope="col">Sid, Serial#</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">User</th><th class="awrbg" scope="col">Program</th><th class="awrbg" scope="col"># Samples Active</th><th class="awrbg" scope="col">XIDs</th></tr>
<tr><td align="right" scope="row" class='awrc'>10, 7774</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.22</td>
<td class='awrc'>USER8</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>56/61 [ 93%]</td><td align="right" class='awrc'>3</td></tr>
<tr><td align="right" scope="row" class='awrnc'>16, 8362</td><td align="right" class='awrnc'>2.30</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.22</td>
<td class='awrnc'>USER25</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>56/61 [ 93%]</td><td align="right" class='awrnc'>5</td></tr>
<tr><td align="right" scope="row" class='awrc'>18,58372</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.06</td>
<td class='awrc'>USER22</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>52/61 [ 86%]</td><td align="right" class='awrc'>4</td></tr>
<tr><td align="right" scope="row" class='awrnc'>134,41048</td><td align="right" class='awrnc'>2.30</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.26</td>
<td class='awrnc'>USER37</td><td class='awrnc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrnc'>57/61 [ 94%]</td><td align="right" class='awrnc'>11</td></tr>
<tr><td align="right" scope="row" class='awrc'>135,10783</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.18</td>
<td class='awrc'>USER14</td><td class='awrc'>sqlplus@mcracp...m (TNS V1-V3)</td><td align="right" class='awrc'>55/61 [ 91%]</td><td align="right" class='awrc'>3</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9983"></a>
<h3 class="awr">Top Blocking Sessions</h3>

<p />
		  No data exists for this section of the report.
<p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9982"></a>
<h3 class="awr">Top PL/SQL Procedures</h3>
<ul>
<li class="awr"> 'PL/SQL entry subprogram' represents the application's top-level	 entry-point (procedure, function, trigger, package initialization	 or RPC call) into PL/SQL. </li>
<li class="awr"> 'PL/SQL current subprogram' is the PL/SQL subprogram being executed	    at the point of sampling . If the value is 'SQL', it represents	   the percentage of time spent executing SQL for the particular	PL/SQL entry subprogram</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the Top PL/SQL procedures"><tr><th class="awrbg" scope="col">PL/SQL Entry Subprogram</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">PL/SQL Current Subprogram</th><th class="awrbg" scope="col">% Current</th></tr>
<tr><td scope="row" class='awrc'>USER1.SLOBUPDATE</td><td align="right" class='awrc'>14.44</td>
<td class='awrc'>SQL</td><td align="right" class='awrc'>14.44</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9979"></a>
<h3 class="awr">Top Events</h3>
<ul>
<li class="awr"> Top Events by DB Time </li>
<li class="awr"> % Activity is the percentage of DB Time due to the event</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the top events"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Class</th><th class="awrbg" scope="col">Session Type</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Avg Active Sessions</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td class='awrc'>User I/O</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>85.08</td><td align="right" class='awrc'>35.44</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td class='awrnc'>System I/O</td><td class='awrnc'>BACKGROUND</td>
<td align="right" class='awrnc'>3.85</td><td align="right" class='awrnc'>1.60</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>FOREGROUND</td>
<td align="right" class='awrc'>3.25</td><td align="right" class='awrc'>1.36</td></tr>
<tr><td scope="row" class='awrnc'>gc cr grant 2-way</td><td class='awrnc'>Cluster</td><td class='awrnc'>FOREGROUND</td>
<td align="right" class='awrnc'>2.74</td><td align="right" class='awrnc'>1.14</td></tr>
<tr><td scope="row" class='awrc'>CPU + Wait for CPU</td><td class='awrc'>CPU</td><td class='awrc'>BACKGROUND</td>
<td align="right" class='awrc'>1.79</td><td align="right" class='awrc'>0.74</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9985"></a>
<h3 class="awr">Top Event P1/P2/P3 Values</h3>
<ul>
<li class="awr"> Top Events by DB Time and the top P1/P2/P3 values for those events. </li>
<li class="awr"> % Event is the percentage of DB Time due to the event	</li>
<li class="awr"> % Activity is the percentage of DB Time due to the event with the given     P1,P2,P3 Values.</li>
</ul>
<table border="0" class="tdiff" summary="This table displays the top event P1/P2/P3 values"><tr><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">P1, P2, P3 Values</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Parameter 1</th><th class="awrbg" scope="col">Parameter 2</th><th class="awrbg" scope="col">Parameter 3</th></tr>
<tr><td scope="row" class='awrc'>db file sequential read</td><td align="right" class='awrc'>85.08</td><td align="right" class='awrc'>&quot;2&quot;,&quot;24926329&quot;,&quot;1&quot;</td><td align="right" class='awrc'>0.04</td>
<td class='awrc'>file#</td><td class='awrc'>block#</td><td class='awrc'>blocks</td></tr>
<tr><td scope="row" class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>3.85</td><td align="right" class='awrnc'>&quot;1&quot;,&quot;4&quot;,&quot;1&quot;</td><td align="right" class='awrnc'>0.91</td>
<td class='awrnc'>files</td><td class='awrnc'>blocks</td><td class='awrnc'>requests</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9978"></a>
<h3 class="awr">Top DB Objects</h3>
<ul>
<li class="awr"> Top DB Objects by DB Time with respect to Application, Cluster,     User I/O,	buffer busy waits and In-Memory DB events only. </li>
<li class="awr"> Tablespace name is not available for reports generated from the root PDB     of a consolidated database. </li>
<li class="awr"> When ** MISSING ** occurs, some of the object attributes may not be available.</li>
</ul>
<table border="0" class="tdiff" summary="This table shows the Top DB Objects"><tr><th class="awrbg" scope="col">Object ID</th><th class="awrbg" scope="col">% Activity</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">% Event</th><th class="awrbg" scope="col">Object Name (Type)</th><th class="awrbg" scope="col">Tablespace</th></tr>
<tr><td align="right" scope="row" class='awrc'>73402</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.22</td>
<td class='awrc'>USER1.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73409</td><td align="right" class='awrnc'>2.30</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.26</td>
<td class='awrnc'>USER2.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73424</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.22</td>
<td class='awrc'>USER4.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrnc'>73439</td><td align="right" class='awrnc'>2.30</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>2.26</td>
<td class='awrnc'>USER9.CF1 (TABLE)</td><td class='awrnc'>IOPS</td></tr>
<tr><td align="right" scope="row" class='awrc'>73458</td><td align="right" class='awrc'>2.30</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>2.26</td>
<td class='awrc'>USER13.CF1 (TABLE)</td><td class='awrc'>IOPS</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<a class="awr" name="9977"></a>
<h3 class="awr">Activity Over Time</h3>
<ul>
<li class="awr"> Analysis period is divided into smaller time slots as indicated    in the 'Slot Time (Duration)'. </li>
<li class="awr"> Top 3 events are reported in each of those slots </li>
<li class="awr"> 'Slot Count' shows the number of ASH samples in that slot </li>
<li class="awr"> 'Event Count' shows the number of ASH samples waiting for    that event in that slot </li>
<li class="awr"> '% Event' is 'Event Count' over all ASH samples in the analysis period</li>
</ul>
<table border="0" class="tdiff" summary="This table show the activity in ASH over time"><tr><th class="awrbg" scope="col">Slot Time (Duration)</th><th class="awrbg" scope="col">Slot Count</th><th class="awrbg" scope="col">Event</th><th class="awrbg" scope="col">Event Count</th><th class="awrbg" scope="col">% Event</th></tr>
<tr><td align="right" class='awrc'>20:33:02   (2.0 min)</td><td align="right" class='awrc'>578</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>459</td><td align="right" class='awrc'>18.21</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">20:33:02   (2.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">578</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>40</td><td align="right" class='awrnc'>1.59</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">20:33:02   (2.0 min)</div></td><td align="right" class='awrc'><div class="hidden">578</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>29</td><td align="right" class='awrc'>1.15</td></tr>
<tr><td align="right" class='awrnc'>20:35:00   (5.0 min)</td><td align="right" class='awrnc'>1,288</td><td class='awrnc'>db file sequential read</td><td align="right" class='awrnc'>1,138</td><td align="right" class='awrnc'>45.16</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">20:35:00   (5.0 min)</div></td><td align="right" class='awrc'><div class="hidden">1288</div></td><td class='awrc'>CPU + Wait for CPU</td><td align="right" class='awrc'>53</td><td align="right" class='awrc'>2.10</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">20:35:00   (5.0 min)</div></td><td align="right" class='awrnc'><div class="hidden">1288</div></td><td class='awrnc'>log file parallel write</td><td align="right" class='awrnc'>41</td><td align="right" class='awrnc'>1.63</td></tr>
<tr><td align="right" class='awrc'>20:40:00   (3.1 min)</td><td align="right" class='awrc'>654</td><td class='awrc'>db file sequential read</td><td align="right" class='awrc'>547</td><td align="right" class='awrc'>21.71</td></tr>
<tr><td align="right" class='awrnc'><div class="hidden">20:40:00   (3.1 min)</div></td><td align="right" class='awrnc'><div class="hidden">654</div></td><td class='awrnc'>CPU + Wait for CPU</td><td align="right" class='awrnc'>34</td><td align="right" class='awrnc'>1.35</td></tr>
<tr><td align="right" class='awrc'><div class="hidden">20:40:00   (3.1 min)</div></td><td align="right" class='awrc'><div class="hidden">654</div></td><td class='awrc'>log file parallel write</td><td align="right" class='awrc'>27</td><td align="right" class='awrc'>1.07</td></tr>
</table><p />
<hr align="left" width="20%" /><p />
<a class="awr" href="#43">Back to Active Session History(ASH) Report</a>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<a class="awr" name="99994"></a>
<h2>ADDM Task ADDM:3393773525_172</h2>
<pre>
	  ADDM Report for Task &apos;ADDM:3393773525_172&apos;
	  ------------------------------------------

Analysis Period
---------------
AWR snapshot range from 171 to 172.
Time period starts at 10-FEB-20 08.33.03 PM
Time period ends at 10-FEB-20 08.43.07 PM

Analysis Target
---------------
Database &apos;P30DB&apos; with DB ID 3393773525.
Database version 19.0.0.0.0.
ADDM performed an analysis of all instances.

Activity During the Analysis Period
-----------------------------------
Total database time was 22786 seconds.
The average number of active sessions was 37.73.

Summary of Findings
-------------------
   Description				     Active Sessions	  Recommendations
					     Percent of Activity
   ----------------------------------------  -------------------  ---------------
1  Top SQL Statements			     37.47 | 99.31	  2
2  &quot;User I/O&quot; wait Class		       33.04 | 87.57	    0
3  Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;  4.61 | 12.21	      5
4  Global Cache Messaging		     2.4 | 6.35 	  1


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


	  Findings and Recommendations
	  ----------------------------

Finding 1: Top SQL Statements
Impact is 37.4 active sessions, 99.31% of total activity.
---------------------------------------------------------
SQL statements consuming significant database time were found. These
statements offer a good opportunity for performance improvement.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  52.67	    ADDM:3393773525_2_172
    1	    p30db1  47.33	    ADDM:3393773525_1_172

   Recommendation 1: SQL Tuning
   Estimated benefit is 31.61 active sessions, 83.8% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the SELECT statement with SQL_ID
      &quot;bhdvtsvjhgvrh&quot;.
      Related Object
	 SQL statement with SQL_ID bhdvtsvjhgvrh.
	 SELECT COUNT(C2) FROM CF1 WHERE ( CUSTID &gt; ( :B1 - :B2 ) ) AND
	 (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;bhdvtsvjhgvrh&quot; was executed 1425154 times and
      had an average elapsed time of 0.013 seconds.

   Recommendation 2: SQL Tuning
   Estimated benefit is 5.85 active sessions, 15.51% of total activity.
   --------------------------------------------------------------------
   Action
      Run SQL Tuning Advisor on the UPDATE statement with SQL_ID
      &quot;35dumc2tpr9dv&quot;.
      Related Object
	 SQL statement with SQL_ID 35dumc2tpr9dv.
	 UPDATE CF1 SET C2 = :B3 , C20 = :B3 WHERE ( CUSTID &gt; ( :B1 - :B2 ))
	 AND (CUSTID &lt; :B1 )
   Rationale
      The SQL spent 100% of its database time on CPU, I/O and Cluster waits.
      This part of database time may be improved by the SQL Tuning Advisor.
   Rationale
      Database time for this SQL was divided as follows: 100% for SQL
      execution, 0% for parsing, 0% for PL/SQL execution and 0% for Java
      execution.
   Rationale
      SQL statement with SQL_ID &quot;35dumc2tpr9dv&quot; was executed 251494 times and
      had an average elapsed time of 0.013 seconds.


Finding 2: &quot;User I/O&quot; wait Class
Impact is 32.98 active sessions, 87.57% of total activity.
----------------------------------------------------------
Wait class &quot;User I/O&quot; was consuming significant database time.
The throughput of the I/O subsystem was not significantly lower than expected.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  52.69	    ADDM:3393773525_2_172
    1	    p30db1  47.31	    ADDM:3393773525_1_172

   No recommendations are available.


Finding 3: Top Segments by &quot;User I/O&quot; and &quot;Cluster&quot;
Impact is 4.6 active sessions, 12.21% of total activity.
--------------------------------------------------------
Individual database segments responsible for significant &quot;User I/O&quot; and
&quot;Cluster&quot; waits were found.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  80		    ADDM:3393773525_2_172
    1	    p30db1  20		    ADDM:3393773525_1_172

   Recommendation 1: Segment Tuning
   Estimated benefit is .92 active sessions, 2.44% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER1.CF1&quot; with
      object ID 73402.
      Related Object
	 Database object with ID 73402.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 132178
      physical reads, 20936 physical writes and 0 direct reads.

   Recommendation 2: Segment Tuning
   Estimated benefit is .92 active sessions, 2.44% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER2.CF1&quot; with
      object ID 73409.
      Related Object
	 Database object with ID 73409.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 131556
      physical reads, 21008 physical writes and 0 direct reads.

   Recommendation 3: Segment Tuning
   Estimated benefit is .92 active sessions, 2.44% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER4.CF1&quot; with
      object ID 73424.
      Related Object
	 Database object with ID 73424.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 108140
      physical reads, 15098 physical writes and 0 direct reads.

   Recommendation 4: Segment Tuning
   Estimated benefit is .92 active sessions, 2.44% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER9.CF1&quot; with
      object ID 73439.
      Related Object
	 Database object with ID 73439.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 114925
      physical reads, 16142 physical writes and 0 direct reads.

   Recommendation 5: Segment Tuning
   Estimated benefit is .92 active sessions, 2.44% of total activity.
   ------------------------------------------------------------------
   Action
      Investigate application logic involving I/O on TABLE &quot;USER13.CF1&quot; with
      object ID 73458.
      Related Object
	 Database object with ID 73458.
   Rationale
      The I/O usage statistics for the object are: 0 full object scans, 118041
      physical reads, 16242 physical writes and 0 direct reads.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;User I/O&quot; was consuming significant database time.
      Impact is 33.04 active sessions, 87.57% of total activity.


Finding 4: Global Cache Messaging
Impact is 2.39 active sessions, 6.35% of total activity.
--------------------------------------------------------
Inter-instance messaging was consuming significant database time.

Instances that were significantly affected by this finding:
    Number  Name    Percent Impact  ADDM Task Name
    ------  ------  --------------  --------------
    2	    p30db2  51.3	    ADDM:3393773525_2_172
    1	    p30db1  48.7	    ADDM:3393773525_1_172

   Recommendation 1: Application Analysis
   Estimated benefit is 2.4 active sessions, 6.35% of total activity.
   ------------------------------------------------------------------
   Action
      Look at the &quot;Top SQL Statements&quot; finding for SQL statements consuming
      significant time on Cluster waits. For example, the SELECT statement
      with SQL_ID &quot;bhdvtsvjhgvrh&quot; is responsible for 48% of Cluster wait
      during the analysis period.

   Symptoms That Led to the Finding:
   ---------------------------------
      Wait class &quot;Cluster&quot; was consuming significant database time.
      Impact is 2.53 active sessions, 6.71% of total activity.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	  Additional Information
	  ----------------------

Instances that were analyzed:
-----------------------------
    Number  Name    Host Name		   Active Sessions  Percent of Activity
    ------  ------  ---------------------  ---------------  -------------------
    2	    p30db2  mcracpoc2.example.com  19.78	    52.51
    1	    p30db1  mcracpoc1.example.com  17.89	    47.49

Miscellaneous Information
-------------------------
Wait class &quot;Application&quot; was not consuming significant database time.
Wait class &quot;Commit&quot; was not consuming significant database time.
Wait class &quot;Concurrency&quot; was not consuming significant database time.
Wait class &quot;Configuration&quot; was not consuming significant database time.
Wait class &quot;Network&quot; was not consuming significant database time.
The network latency of the cluster interconnect was within acceptable limits
of 1 milliseconds.
Session connect and disconnect calls were not consuming significant database
time.

</pre>
<br /><a class="awr" href="#top">Back to Top</a><p />
<p />
<p />
End of Report
</body></html>
Report written to awr_rac.html
SQL> Disconnected from Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production
Version 19.3.0.0.0
NOTIFY  : 2020.02.10-20:43:24 : Compressing file: "awr.html".
NOTIFY  : 2020.02.10-20:43:24 : Compressing file: "awr_rac.html".
